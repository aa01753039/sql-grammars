root ::= select-stmt ";"

select-stmt ::= "SELECT" ws ("DISTINCT" ws | "ALL" ws )? result-column ("," result-column)* ws "FROM " table-or-subquery ("," table-or-subquery)* (join-clause ws)? ("WHERE" ws expr)? ws ("GROUP BY" ws expr ws ("," expr)*  ("HAVING" ws expr)?)? ws ("ORDER BY" ws ordering-term)? ws ("LIMIT" ws expr (ws "OFFSET" ws expr)?)? ";"

join-clause ::= "JOIN" ws table-or-subquery ws "ON" ws expr ws 

ordering-term ::= expr ws ("ASC" | "DESC")?

result-column ::= expr ws ("AS" ws column-alias)? | "*" | table-name "." "*"

table-or-subquery ::= table-name  (ws "AS" ws table-alias ws)? | "(" select-stmt ")"  (ws "AS" ws table-alias)?

expr ::= primary-expr ws expr-tail ws

primary-expr ::= literal-value | bind-parameter | ( (schema-name ".")? table-name "." )? column-name | function-call | parenthesized-expr | cast-expr | case-expr | raise-function | ("NOT"? "EXISTS")? "(" select-stmt ")"

function-call ::= function-name "(" ("DISTINCT"? expr-list | "*")? ")" filter-clause? over-clause?

expr-list ::= expr ( "," expr )*

parenthesized-expr ::= "(" expr-list ")"

cast-expr ::= "CAST" ws "(" expr ws "AS" ws type-name ws ")"

case-expr ::= "CASE" ws expr? ("WHEN" ws expr ws "THEN" ws expr)+ ("ELSE" ws expr)? "END" ws

expr-tail ::= (binary-operator ws expr ws expr-tail-rest ws | "COLLATE" ws collation-name ws expr-tail-rest | ("NOT"? ws ("LIKE" ws | "GLOB" ws | "REGEXP" ws | "MATCH" ws) expr ("ESCAPE" ws expr)?) expr-tail-rest | (("ISNULL" ws | "NOTNULL" ws | "NOT" ws "NULL" ws)) expr-tail-rest | ("IS" ws "NOT"? ws expr) expr-tail-rest | ("NOT"? ws  "BETWEEN" ws expr ws "AND" ws expr) expr-tail-rest | ("NOT"? ws "IN" ws in-list) expr-tail-rest | ε)

expr-tail-rest ::= expr expr-tail | ε

binary-operator ::= "+" | "-" | "*" | "/" | "AND" | "OR" | "==" | "!=" | "<" | ">" | "<=" | ">="

unary-operator ::= "-" | "NOT"

literal-value ::= numeric-literal | string-literal | "NULL" | "TRUE" | "FALSE"

numeric-literal ::= ("0" | [1-9][0-9]* ) ("." [0-9]+)? (("e" | "E") ("-" | "+")? [0-9]+ )?
string-literal ::= "'" ("''"|[^'])* "'"

table-name ::= [a-zA-Z-][a-zA-Z0-9-]*

column-name ::= "sales"

table-alias ::= [a-zA-Z-][a-zA-Z0-9-]*

column-alias ::= [a-zA-Z-][a-zA-Z0-9-]*

function-name ::= [a-zA-Z-][a-zA-Z0-9-]*

ws ::= [ \t\n]+
