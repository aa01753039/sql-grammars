SELECT Club_ID FROM club 
SELECT Club_ID FROM club 
SELECT Name FROM club 
SELECT Name FROM club 
SELECT club.Name, club.Manager, club.Captain 
SELECT club.Name, club.Manager, club.Captain FROM club 
SELECT club.Name FROM club WHERE club.Manufacturer!= 'Nike'; 
SELECT club.Name FROM club WHERE club.Manufacturer!= 'Nike' ORDER BY club.Name ASC; 
SELECT Name FROM player WHERE Wins_count IN (SELECT Wins_count FROM player ORDER BY Wins_count ASC) ORDER BY Wins_count ASC; 
SELECT Name FROM player WHERE Wins_count > 0 ORDER BY Wins_count ASC; 
SELECT Name FROM player WHERE Earnings = (SELECT MAX(Earnings) FROM player); 
SELECT Name FROM player WHERE Earnings = (SELECT MAX(Earnings) FROM player); 
SELECT Country FROM player WHERE Earnings > 1200000 GROUP BY Country HAVING COUNT(*) > 1 
SELECT player.Country FROM player WHERE player.Earnings > 1200000; 
SELECT player.Country FROM player WHERE player.Wins_count > 2 ORDER BY player.Earnings DESC LIMIT 1; 
SELECT Country FROM player WHERE Wins_count > 2 ORDER BY Earnings DESC LIMIT 1; 
SELECT player.Name, club.Name FROM player, club WHERE player.Club_ID = club.Club_ID 
SELECT player.Name, club.Name 
SELECT club.Name FROM club 
SELECT club.Name 
SELECT Name FROM player WHERE Club_ID IN (SELECT Club_ID FROM club WHERE Manager = 'Sam Allardyce') ORDER BY Name ASC; 
SELECT player.Name 
SELECT club.Name FROM club WHERE club.Club_ID IN (SELECT player.Club_ID FROM player WHERE player.Earnings > (SELECT AVG(player.Earnings) FROM player)) ORDER BY club.Name DESC; 
SELECT club.Name FROM club WHERE club.Name IS NOT NULL ORDER BY club.Name DESC 
SELECT Club_ID, Manufacturer, COUNT(*) AS num_clubs FROM club GROUP BY Club_ID, Manufacturer 
SELECT club.Club_ID, club.Name, club.Manager, club.Captain, club.Manufacturer, club.Sponsor, COUNT(*) AS count 
SELECT Club_ID, Manufacturer FROM club WHERE Club_ID IN (SELECT Club_ID FROM club GROUP BY Club_ID HAVING COUNT(*) > 1) ORDER BY Club_ID DESC LIMIT 1; 
SELECT Club_ID, Manufacturer, COUNT(*) AS Count FROM club GROUP BY Club_ID, Manufacturer ORDER BY Count DESC LIMIT 1 
SELECT Club_ID, Manufacturer FROM club WHERE Club_ID IN (SELECT Club_ID FROM club GROUP BY Club_ID HAVING COUNT(Club_ID) > 1)  
SELECT club.Club_ID, club.Name, club.Manager, club.Captain, club.Manufacturer, club.Sponsor, player.Player_ID, player.Name, player.Country, player.Earnings, player.Events_number, player.Wins_count FROM club JOIN player ON club.Club_ID = player.Club_ID WHERE club.Manufacturer IN (SELECT DISTINCT club.Manufacturer FROM club GROUP BY club.Manufacturer HAVING COUNT(*) > 1) ORDER BY club.Club_ID ASC; 
SELECT club.Country 
SELECT Country FROM player WHERE Player_ID IN (SELECT Player_ID FROM player GROUP BY Player_ID HAVING COUNT(Player_ID) > 1) GROUP BY Country HAVING COUNT(Country) > 1 ORDER BY Country ASC; 
SELECT club.Name FROM club WHERE club.Club_ID NOT IN (SELECT player.Club_ID FROM player); 
SELECT club.Name FROM club WHERE club.Club_ID NOT IN (SELECT player.Club_ID FROM player); 
SELECT player.Country FROM player WHERE player.Earnings > 1400000 OR player.Earnings < 1100000; 
SELECT Country FROM player WHERE Earnings > 1400000 OR Earnings < 1100000 GROUP BY Country HAVING COUNT(*) > 1; 
SELECT Country FROM player 
SELECT Country FROM player 
SELECT player.Earnings FROM player WHERE player.Country = 'Australia' OR player.Country = 'Zimbabwe'; 
SELECT player.Earnings FROM player WHERE player.Country IN ('Australia', 'Zimbabwe') ORDER BY player.Earnings DESC; 
SELECT Customers.order_item_id, Customers.customer_first_name, Customers.customer_last_name 
SELECT Customers.order_item_id, Customers.customer_first_name, Customers.customer_last_name 
SELECT Orders.order_item_id, Orders.order_status_code, COUNT(Order_Items.order_item_id) AS num_products 
SELECT Orders.order_item_id, Orders.order_status_code, Orders.order_id, COUNT(Order_Items.order_item_id) AS order_item_count FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Orders.order_item_id, Orders.order_status_code, Orders.order_id ORDER BY Orders.order_item_id, Orders.order_status_code, Orders.order_id ASC; 
SELECT order_item_id, order_id, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order_item_status_code, order
SELECT order_item_id, order_id, order_item_status_code, order_item_date, order_item_quantity, order_item_price, order_item_total, order_item_discount, order_item_tax, order_item_shipping, order_item_total_discount, order_item_total_tax, order_item_total_shipping, order_item_total_discount_shipping, order_item_total_tax_shipping, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax,
SELECT Customers.order_item_id, Customers.customer_first_name, Customers.customer_middle_initial, Customers.customer_last_name 
SELECT Customers.order_item_id, Customers.customer_first_name, Customers.customer_middle_initial, Customers.customer_last_name 
SELECT Products.order_item_id, Products.product_name, Products.product_price, Products.product_color 
SELECT order_item_id, product_id, product_name, product_price, product_color FROM Order_Items WHERE order_item_id IN (SELECT order_item_id FROM Order_Items WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id IN (SELECT order_id FROM
SELECT Orders.order_item_id, Orders.order_id, Orders.date_order_placed 
SELECT order_item_id, date_order_placed FROM Order_Items WHERE order_item_status_code = 'Shipped' GROUP BY order_item_id HAVING COUNT(*) >= 2 ORDER BY date_order_placed DESC; 
SELECT Products.order_item_id, Products.product_name, Products.product_price 
SELECT order_item_id, product_id, product_name, product_price 
SELECT order_item_id, order_id, sum(product_price) FROM Order_Items GROUP BY order_item_id, order_id HAVING sum(product_price) = (SELECT min(sum(product_price)) FROM Order_Items GROUP BY order_item_id, order_id); 
SELECT order_item_id, order_id, product_id, order_item_status_code, order_item_total_cost FROM Order_Items WHERE order_item_status_code = 'Shipped' ORDER BY order_item_total_cost ASC LIMIT 1; 
SELECT shipment_id, COUNT(*) AS num_shipments FROM Shipments GROUP BY shipment_id ORDER BY num_shipments DESC LIMIT 1; 
SELECT Customers.order_item_id, Customer_Payment_Methods.payment_method_code 
SELECT Customers.order_item_id, COUNT(Products.product_id) AS number_of_products 
SELECT Customers.order_item_id, Products.product_name, Customers.gender_code, COUNT(Products.product_name) AS num_products 
SELECT Customers.order_item_id, Customers.gender_code, COUNT(Orders.order_id) AS orders_count 
SELECT Customers.order_item_id, Customers.gender_code, COUNT(Orders.order_id) AS orders_count 
SELECT Customers.order_item_id, Customers.customer_first_name, Customers.customer_middle_initial, Customers.customer_last_name, Customer_Payment_Methods.payment_method_code 
SELECT Customers.order_item_id, Customers.customer_first_name, Customers.customer_middle_initial, Customers.customer_last_name, Customer_Payment_Methods.payment_method_code FROM Customers INNER JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id WHERE Customers.customer_id = Customer_Payment_Methods.customer_id ORDER BY Customers.customer_id ASC; 
SELECT Invoices.order_item_id, InvoiceStatuses.invoice_status_code, InvoiceStatuses.invoice_status_description, Shipments.shipment_date 
SELECT Invoices.order_item_id, Order_Items.order_item_status_code, Order_Items.date_order_placed, Shipments.shipment_date 
SELECT Products.order_item_id, Products.product_name, Shipments.shipment_date 
SELECT Products.order_item_id, Products.product_name, Shipments.shipment_date 
SELECT order_item_id, order_item_status_code, shipment_tracking_number FROM Order_Items, Shipments WHERE Order_Items.order_id = Shipments.order_id AND Order_Items.order_item_status_code = 'Shipped' AND Shipments.shipment_tracking_number IS NOT NULL; 
SELECT order_item_id, order_item_status_code, shipment_tracking_number FROM Order_Items, Shipments WHERE Order_Items.order_id = Shipments.order_id AND Order_Items.order_item_status_code = 'Shipped' AND Shipments.shipment_tracking_number IS NOT NULL; 
SELECT Products.order_item_id, Products.product_name, Products.product_color 
SELECT Products.order_item_id, Products.product_name, Products.product_color 
SELECT Products.order_item_id, Products.product_name, Products.product_price, Products.product_description 
SELECT Products.order_item_id, Products.product_name, Products.product_price, Products.product_description FROM Order_Items, Products, Customers, Shipments, Shipment_Items WHERE Order_Items.order_item_id = Shipment_Items.order_item_id AND Shipment_Items.shipment_id = Shipments.shipment_id AND Shipments.order_id = Orders.order_id AND Orders.customer_id = Customers.customer_id AND Customers.gender_code = 'F' AND Products.product_id = Order_Items.product_id 
SELECT Invoices.order_item_id, Invoices.invoice_status_code 
SELECT Invoices.order_item_id, InvoiceStatuses.invoice_status_code 
SELECT Orders.order_item_id, Orders.date_order_placed, SUM(Order_Items.order_item_status_code) AS total_cost FROM Orders, Order_Items WHERE Orders.order_id = Order_Items.order_id GROUP BY Orders.order_item_id, Orders.date_order_placed ORDER BY Orders.order_item_id, Orders.date_order_placed; 
SELECT Orders.order_item_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_placed, Orders.order_id, Orders.order_status_code, Orders.customer_id, Orders.date_order_pl
SELECT Customers.order_item_id FROM Customers 
SELECT Customers.order_item_id 
SELECT order_item_id, COUNT(order_item_id) FROM Order_Items GROUP BY order_item_id HAVING COUNT(order_item_id) > 1; 
SELECT order_item_id, order_item_status_code FROM Order_Items ORDER BY order_item_id; 
SELECT Customers.order_item_id, COUNT(Shipment_Items.order_item_id) AS count 
SELECT Customers.order_item_id, COUNT(DISTINCT Customer_Payment_Methods.payment_method_code) AS payment_method_count 
SELECT Customers.order_item_id, Customers.login_name, Customers.login_password 
SELECT Customer_Payment_Methods.order_item_id, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Customer_Payment_Methods.customer_id, Customer_Payment_Method
SELECT order_item_id, product_size FROM Order_Items WHERE product_id IN (SELECT product_id FROM Products WHERE product_name LIKE '%Dell%') ORDER BY order_item_id ASC; 
SELECT Products.shipment_id, Products.order_item_id, Products.product_size 
SELECT Products.order_item_id, Products.product_price, Products.product_size 
SELECT Products.order_item_id, Products.product_price, Products.product_size 
SELECT Products.shipment_id, Products.product_id, Products.product_name, Products.product_price, Products.product_color, Products.product_size, Products.product_description, Shipments.shipment_id, Shipments.order_id, Shipments.invoice_number, Shipments.shipment_tracking_number, Shipments.shipment_date, Shipment_Items.shipment_id, Shipment_Items.order_item_id FROM Products INNER JOIN Shipments ON Products.product_id = Shipments.product_id INNER JOIN Shipment_Items ON Shipments.shipment_id = Shipment_Items.shipment_id WHERE Shipment_Items.order_item_id IS NULL; 
SELECT Products.order_item_id 
SELECT Customers.order_item_id 
SELECT Customers.order_item_id 
SELECT order_item_id, order_status_code, date_order_placed FROM Order_Items ORDER BY order_item_id ASC; 
SELECT order_item_id, order_status_code, date_order_placed FROM Order_Items ORDER BY order_item_id ASC; 
SELECT Customers.order_item_id, Customers.customer_id, Customers.customer_first_name, Customers.customer_last_name, Customers.customer_middle_initial, Customers.customer_phone_number, Customers.customer_email_address, Customers.customer_address_line_1, Customers.customer_town_city, Customers.customer_county, Customers.customer_country, Customers.customer_login_name, Customers.customer_login_password, Customers.customer_gender_code, Customers.customer_login_name, Customers.customer_login_password, Customers.customer_phone_number, Customers.customer_email_address, Customers.customer_address_line_1, Customers.customer_town_city, Customers.customer_county, Customers.customer_country, Customers.customer_login_name, Customers.customer_login_password, Customers.customer_phone_number, Customers.customer_email_address, Customers.customer_address_line_1, Customers.customer_town_city, Customers.customer_county, Customers.customer_country, Customers.customer_login_name, Customers.customer_login_password, Customers.customer_phone_number, Customers.customer_email_address, Customers.customer_address_line_1, Customers.customer_town_city, Customers.customer_county, Customers.customer_country, Customers.customer_login_name, Customers.customer_login_password, Customers.customer_phone_number, Customers.customer_email_address, Customers.customer_address_line_1, Customers.customer_town_city, Customers.customer_county, Customers.customer_country, Customers.customer_login_name, Customers.customer_login_password, Customers.customer_phone_number, Customers.customer_email_address, Customers.customer_address_line_1, Customers.customer_town_city, Customers.customer_county, Customers.customer_country, Customers.customer_login_name, Customers.customer_login_password, Customers.customer_phone_number, Customers.customer_email_address, Customers.customer_address_line_1, Customers.customer_town_city, Customers.customer_county, Customers.customer_country, Customers.customer_login_name, Customers.customer_login_password, Customers.customer_phone_number, Customers.customer_email_address, Customers.customer_address_line_1, Customers.customer_town_city, Customers.customer_county, Customers.customer_country, Customers.customer_login_name, Customers.customer_login_password, Customers.customer_phone_number, Customers.customer_email_address, Customers.customer_address_line_1, Customers.customer_t
SELECT Customers.order_item_id, Customers.customer_id, Customers.customer_first_name, Customers.customer_last_name, Customers.address_line_1, Customers.town_city, Customers.county, Customers.country 
SELECT Customers.order_item_id, Products.product_name FROM Customers, Products WHERE Customers.order_item_id = Products.order_item_id; 
SELECT Customers.order_item_id, Products.product_name FROM Customers, Products WHERE Customers.customer_id = Products.customer_id ORDER BY Customers.customer_id, Products.product_name; 
SELECT shipment_id, order_item_id, COUNT(*) AS num_items FROM Shipment_Items GROUP BY shipment_id, order_item_id; 
SELECT shipment_id, COUNT(*) FROM Shipment_Items GROUP BY shipment_id HAVING COUNT(*) > 1; 
SELECT Products.order_item_id, Products.product_price 
SELECT Products.order_item_id, Products.product_name, Products.product_price, Orders.order_id, Orders.order_status_code, Orders.date_order_placed, Shipments.shipment_id, Shipments.shipment_date, Shipments.shipment_tracking_number, Shipments.invoice_number, Invoices.invoice_status_code, Invoices.invoice_date, Customers.customer_id, Customers.gender_code, Customers.customer_first_name, Customers.customer_middle_initial, Customers.customer_last_name, Customers.email_address, Customers.login_name, Customers.login_password, Customers.phone_number, Customers.address_line_1, Customers.town_city, Customers.county, Customers.country, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code FROM Products INNER JOIN Order_Items ON Products.product_id = Order_Items.product_id INNER JOIN Orders ON Order_Items.order_id = Orders.order_id INNER JOIN Shipments ON Orders.order_id = Shipments.order_id INNER JOIN Invoices ON Shipments.invoice_number = Invoices.invoice_number INNER JOIN Customers ON Orders.customer_id = Customers.customer_id INNER JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id WHERE Orders.order_status_code = 'Shipped' AND Shipments.shipment_date >= '2019-01-01' AND Shipments.shipment_date <= '2019-12-31' AND Invoices.invoice_status_code = 'Paid' AND Customers.gender_code = 'F' AND Customer_Payment_Methods.payment_method_code = 'Credit Card' GROUP BY Products.product_id, Products.product_name, Products.product_price, Orders.order_id, Orders.order_status_code, Orders.date_order_placed, Shipments.shipment_id, Shipments.shipment_date, Shipments.shipment_tracking_number, Shipments.invoice_number, Invoices.invoice_status_code, Invoices.invoice_date, Customers.customer_id, Customers.gender_code, Customers.customer_first_name, Customers.customer_middle_initial, Customers.customer_last_name, Customers.email_address, Customers.login
SELECT Products.order_item_id, AVG(Products.product_price) FROM Order_Items, Products WHERE Order_Items.order_item_id = Products.order_item_id GROUP BY Order_Items.order_item_id ORDER BY Order_Items.order_item_id ASC; 
SELECT Products.order_item_id, Products.product_price, Orders.order_id, Orders.date_order_placed, Shipments.shipment_id, Shipments.shipment_date, Shipments.shipment_tracking_number, Shipments.invoice_number, Invoices.invoice_status_code, Invoices.invoice_date, Customers.customer_id, Customers.gender_code, Customers.customer_first_name, Customers.customer_middle_initial, Customers.customer_last_name, Customers.email_address, Customers.login_name, Customers.login_password, Customers.phone_number, Customers.address_line_1, Customers.town_city, Customers.county, Customers.country, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Order_Items.order_item_id, Order_Items.product_id, Order_Items.order_id, Order_Items.order_item_status_code, Shipments.order_id, Shipments.invoice_number, Shipments.shipment_id, Shipments.shipment_tracking_number, Shipments.shipment_date, Invoices.invoice_number, Invoices.invoice_status_code, Invoices.invoice_date, Customers.customer_id, Customers.gender_code, Customers.customer_first_name, Customers.customer_middle_initial, Customers.customer_last_name, Customers.email_address, Customers.login_name, Customers.login_password, Customers.phone_number, Customers.address_line_1, Customers.town_city, Customers.county, Customers.country, Customer_Payment_Methods.customer_id, Customer_Payment_Methods.payment_method_code, Order_Items.order_item_id, Order_Items.product_id, Order_Items.order_id, Order_Items.order_item_status_code, Shipments.order_id, Shipments.invoice_number, Shipments.shipment_id, Shipments.shipment_tracking_number, Shipments.shipment_date, Invoices.invoice_number, Invoices.invoice_status_code, Invoices.invoice_date, Customers.customer_id, Customers.gender_code, Customers.customer_first_name, Customers.customer_middle_initial, Customers.customer_last_name, Customers.email_address, Customers.login_name, Customers.login_password, Customers.phone_number, Customers.address_line_1, Customers.town_city, Customers.county,
SELECT Customers.order_item_id, Customers.email_address, Customers.town_city, Customers.county 
SELECT Customers.order_item_id, Customers.email_address, Customers.town_city, Customers.county 
SELECT Orders.order_item_id, Orders.order_id, Orders.date_order_placed 
SELECT order_item_id, order_id, order_item_status_code, order_item_date, order_item_quantity, order_item_price, order_item_total, order_item_discount, order_item_tax, order_item_shipping, order_item_total_discount, order_item_total_tax, order_item_total_shipping, order_item_total_discount_shipping, order_item_total_tax_shipping, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total_discount_shipping_tax, order_item_total
SELECT order_item_id FROM Order_Items WHERE order_id IN (SELECT order_id FROM Orders WHERE order_status_code = 'Cancelled') ORDER BY order_item_id ASC; 
SELECT order_item_id FROM Order_Items WHERE order_id IN (SELECT order_id FROM Orders WHERE order_status_code = 'Cancelled') ORDER BY order_item_id ASC LIMIT 1; 
SELECT Products.order_item_id, Products.product_description FROM Products INNER JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Order_Items.order_item_status_code = 'SOLD' GROUP BY Products.product_id HAVING COUNT(Products.product_id) > 3 ORDER BY Products.product_id ASC; 
SELECT Products.order_item_id, Products.product_description FROM Products INNER JOIN Order_Items ON Products.order_item_id = Order_Items.order_item_id WHERE Order_Items.order_item_id IN (SELECT Order_Items.order_item_id FROM Order_Items GROUP BY Order_Items.order_item_id HAVING COUNT(Order_Items.order_item_id) > 3); 
SELECT Invoices.shipment_id, InvoiceNumbers.invoice_number, InvoiceNumbers.invoice_date 
SELECT Shipments.shipment_id, Shipments.invoice_number, Shipments.shipment_date 
SELECT shipment_id, shipment_tracking_number, shipment_date FROM Shipments 
SELECT shipment_id, shipment_tracking_number, shipment_date FROM Shipments 
SELECT Products.order_item_id, Products.product_color, Products.product_description, Products.product_size 
SELECT Products.order_item_id, Products.product_color, Products.product_description, Products.product_size 
SELECT director.Director_ID, director.Name 
SELECT director.Director_ID, director.Name, director.Age 
SELECT channel.Channel_ID FROM channel WHERE channel.Internet LIKE '%bbc%'; 
SELECT Channel_ID, COUNT(DISTINCT Channel_ID) FROM channel GROUP BY Channel_ID HAVING COUNT(DISTINCT Channel_ID) > 1; 
SELECT program.Channel_ID, program.Title, program.Start_Year 
SELECT director.Director_ID, director.Name, COUNT(program.Program_ID) AS num_programs FROM director JOIN program ON director.Director_ID = program.Director_ID GROUP BY director.Director_ID ORDER BY num_programs DESC LIMIT 1; 
SELECT director.Director_ID, director.Name, director.Age FROM director WHERE director.Director_ID IN (SELECT director_admin.Director_ID FROM director_admin WHERE director_admin.Channel_ID IN (SELECT channel.Channel_ID FROM channel WHERE channel.Analogue_terrestrial_channel IS NOT NULL)) ORDER BY director.Director_ID DESC LIMIT 1; 
SELECT program.Channel_ID, program.Title, program.Start_Year 
SELECT channel.Channel_ID, channel.Name, channel.Internet 
SELECT channel.Channel_ID, channel.Name, COUNT(program.Program_ID) AS num_programs FROM channel JOIN program ON channel.Channel_ID = program.Channel_ID GROUP BY channel.Channel_ID, channel.Name 
SELECT Channel_ID FROM channel WHERE Channel_ID NOT IN (SELECT Channel_ID FROM program); 
SELECT director.Director_ID, director.Name 
SELECT channel.Channel_ID, channel.Name, channel.Internet 
SELECT director.Director_ID, director.Name FROM director WHERE director.Age BETWEEN 30 AND 60; 
SELECT channel.Channel_ID, channel.Name FROM channel WHERE channel.Channel_ID IN (SELECT channel.Channel_ID FROM channel JOIN program ON channel.Channel_ID = program.Channel_ID JOIN director ON program.Director_ID = director.Director_ID WHERE director.Age < 40 AND director.Age > 60)  
SELECT channel.Channel_ID, channel.Name FROM channel WHERE channel.Channel_ID NOT IN (SELECT channel.Channel_ID FROM channel JOIN director_admin ON channel.Channel_ID = director_admin.Channel_ID JOIN director ON director_admin.Director_ID = director.Director_ID WHERE director.Name = 'Hank Baskett' AND director_admin.Is_first_director = 1)  
SELECT radio.City_channel_ID, COUNT(*) AS num_radios 
SELECT radio.tv_show_ID, radio.Radio_ID, radio.Transmitter, radio.ERP_kW 
SELECT tv_show.tv_show_ID, tv_show.tv_show_name, tv_show.Original_Airdate 
SELECT city_channel.City_channel_ID, city_channel.Station_name, city_channel.Affiliation 
SELECT radio.City_channel_ID, radio.Transmitter, radio.Radio_MHz, radio.2FM_MHz, radio.RnaG_MHz, radio.Lyric_FM_MHz, radio.ERP_kW 
SELECT radio.City_channel_ID, radio.Transmitter 
SELECT radio.City_channel_ID, AVG(radio.ERP_kW) AS avg_erp 
SELECT city_channel.City_channel_ID, city_channel.Affiliation, COUNT(city_channel.City_channel_ID) AS num_city_channels 
SELECT City_channel_ID, Affiliation, COUNT(*) AS Count 
SELECT city_channel.City_channel_ID, city_channel.City, city_channel.Station_name, city_channel.Owned_Since, city_channel.Affiliation, COUNT(city_channel.Affiliation) AS Affiliation_count 
SELECT city_channel.City_channel_ID, city_channel.City, city_channel.Station_name 
SELECT radio.City_channel_ID, city_channel.City, radio.Transmitter 
SELECT radio.City_channel_ID, city_channel.Station_name, radio.Transmitter, radio.ERP_kW 
SELECT radio.City_channel_ID, radio.Transmitter, COUNT(city_channel.ID) AS num_city_channels 
SELECT radio.City_channel_ID, radio.Transmitter 
SELECT vehicle.Vehicle_ID, vehicle.Model, vehicle.Top_Speed, vehicle.Power FROM vehicle WHERE vehicle.Top_Speed = (SELECT MAX(vehicle.Top_Speed) FROM vehicle) AND vehicle.Power > 6000; 
SELECT vehicle.Driver_ID, vehicle.Model, vehicle.Top_Speed, vehicle.Power, vehicle.Builder, vehicle.Total_Production, driver.Name, driver.Citizenship, driver.Racing_Series 
SELECT driver.Driver_ID, driver.Name 
SELECT driver.Driver_ID, driver.Name 
SELECT Driver_ID, COUNT(Vehicle_ID) FROM vehicle_driver GROUP BY Driver_ID ORDER BY COUNT(Vehicle_ID) DESC LIMIT 1; 
SELECT driver.Driver_ID, COUNT(vehicle_driver.Vehicle_ID) FROM driver JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID GROUP BY driver.Driver_ID ORDER BY COUNT(vehicle_driver.Vehicle_ID) DESC LIMIT 1; 
SELECT Vehicle_ID, MAX(Power), AVG(Power) FROM vehicle WHERE Builder = 'Zhuzhou' GROUP BY Vehicle_ID; 
SELECT vehicle.Driver_ID, vehicle.Model, vehicle.Top_Speed, vehicle.Power, vehicle.Builder, vehicle.Total_Production, driver.Name, driver.Citizenship, driver.Racing_Series 
SELECT vehicle_driver.Vehicle_ID 
SELECT vehicle.Vehicle_ID 
SELECT vehicle.Vehicle_ID, vehicle.Top_Speed, vehicle.Power FROM vehicle WHERE vehicle.Build_Year = '1996' ORDER BY vehicle.Vehicle_ID ASC 
SELECT vehicle.Vehicle_ID, vehicle.Top_Speed, vehicle.Power FROM vehicle WHERE vehicle.Build_Year = '1996' ORDER BY vehicle.Vehicle_ID ASC LIMIT 1; 
SELECT vehicle.Vehicle_ID, vehicle.Build_Year, vehicle.Model, vehicle.Builder 
SELECT vehicle.Vehicle_ID, vehicle.Build_Year, vehicle.Model, vehicle.Builder 
SELECT driver.Driver_ID FROM driver 
SELECT driver.Driver_ID, COUNT(driver.Driver_ID) FROM driver JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID JOIN vehicle ON vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID WHERE vehicle.Build_Year = '2012' GROUP BY driver.Driver_ID HAVING COUNT(driver.Driver_ID) > 1 
SELECT driver.Driver_ID 
SELECT Driver_ID FROM driver WHERE Racing_Series = 'NASCAR'; 
SELECT vehicle.Driver_ID, vehicle.Top_Speed 
SELECT vehicle.Driver_ID, AVG(vehicle.Top_Speed) AS avg_top_speed 
SELECT driver.Driver_ID, driver.Name 
SELECT driver.Driver_ID, driver.Name 
SELECT vehicle.Driver_ID, vehicle.Model, vehicle.Top_Speed, vehicle.Total_Production 
SELECT vehicle.Vehicle_ID, vehicle.Model, vehicle.Top_Speed, vehicle.Total_Production FROM vehicle WHERE vehicle.Top_Speed > 150 OR vehicle.Total_Production > 100 
SELECT vehicle.Driver_ID, vehicle.Model, vehicle.Build_Year 
SELECT vehicle.Vehicle_ID, vehicle.Model, vehicle.Build_Year FROM vehicle WHERE vehicle.Model LIKE '%DJ%' 
SELECT vehicle.Driver_ID, vehicle.Model 
SELECT vehicle.Driver_ID, vehicle.Model 
SELECT vehicle.Vehicle_ID, vehicle.Model FROM vehicle INNER JOIN vehicle_driver ON vehicle.Vehicle_ID = vehicle_driver.Vehicle_ID INNER JOIN driver ON vehicle_driver.Driver_ID = driver.Driver_ID WHERE driver.Driver_ID IN (SELECT driver.Driver_ID FROM driver INNER JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID GROUP BY driver.Driver_ID HAVING COUNT(driver.Driver_ID) >= 2) OR vehicle.Builder = 'Ziyang' ORDER BY vehicle.Vehicle_ID ASC; 
SELECT vehicle.Vehicle_ID, vehicle.Model FROM vehicle 
SELECT vehicle.Vehicle_ID, vehicle.Model 
SELECT vehicle.Vehicle_ID, vehicle.Model FROM vehicle 
SELECT vehicle.Vehicle_ID, vehicle.Model, vehicle.Top_Speed 
SELECT Vehicle_ID FROM vehicle WHERE Top_Speed = (SELECT MAX(Top_Speed) FROM vehicle); 
SELECT driver.Driver_ID, driver.Name 
SELECT driver.Driver_ID, driver.Name 
SELECT driver.Driver_ID, driver.Name, driver.Citizenship, driver.Racing_Series, COUNT(driver.Racing_Series) AS num_drivers 
SELECT driver.Driver_ID, driver.Name, driver.Citizenship, driver.Racing_Series, COUNT(driver.Racing_Series) AS num_drivers 
SELECT driver.Driver_ID, driver.Name, driver.Citizenship FROM driver WHERE driver.Driver_ID IN (SELECT vehicle_driver.Driver_ID FROM vehicle_driver WHERE vehicle_driver.Vehicle_ID IN (SELECT vehicle.Vehicle_ID FROM vehicle WHERE vehicle.Model = 'DJ1'))  
SELECT driver.Driver_ID, driver.Name, driver.Citizenship FROM driver WHERE driver.Driver_ID IN (SELECT vehicle_driver.Driver_ID FROM vehicle_driver WHERE vehicle_driver.Vehicle_ID IN (SELECT vehicle.Vehicle_ID FROM vehicle WHERE vehicle.Model = 'DJ1'))  
SELECT driver.Driver_ID FROM driver 
SELECT Driver_ID FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM vehicle_driver); 
SELECT Exams.Student_Answer_ID, Valid_Answers.Valid_Answer_Text, Student_Answers.Student_Answer_Text, Student_Answers.Satisfactory_YN, Student_Answers.Assessment FROM Student_Answers INNER JOIN Valid_Answers ON Student_Answers.Student_Answer_ID = Valid_Answers.Student_Answer_ID INNER JOIN Exam_ID ON Student_Answers.Exam_ID = Exam_ID INNER JOIN Questions_in_Exams ON Exam_ID.Question_ID = Questions_in_Exams.Question_ID INNER JOIN Questions ON Questions_in_Exams.Question_ID = Questions.Question_ID INNER JOIN Valid_Answers ON Questions_in_Exams.Question_ID = Valid_Answers.Question_ID INNER JOIN Student_Answers ON Student_Answers.Student_Answer_ID = Valid_Answers.Student_Answer_ID INNER JOIN Students ON Student_Answers.Student_ID = Students.Student_ID INNER JOIN Questions_in_Exams ON Student_Answers.Exam_ID = Questions_in_Exams.Exam_ID INNER JOIN Questions ON Questions_in_Exams.Question_ID = Questions.Question_ID INNER JOIN Valid_Answers ON Questions_in_Exams.Question_ID = Valid_Answers.Question_ID INNER JOIN Student_Answers ON Student_Answers.Student_Answer_ID = Valid_Answers.Student_Answer_ID INNER JOIN Students ON Student_Answers.Student_ID = Students.Student_ID INNER JOIN Questions_in_Exams ON Student_Answers.Exam_ID = Questions_in_Exams.Exam_ID INNER JOIN Questions ON Questions_in_Exams.Question_ID = Questions.Question_ID INNER JOIN Valid_Answers ON Questions_in_Exams.Question_ID = Valid_Answers.Question_ID INNER JOIN Student_Answers ON Student_Answers.Student_Answer_ID = Valid_Answers.Student_Answer_ID INNER JOIN Students ON Student_Answers.Student_ID = Students.Student_ID INNER JOIN Questions_in_Exams ON Student_Answers.Exam_ID = Questions_in_Exams.Exam_ID INNER JOIN Questions ON Questions_in_Exams.Question_ID = Questions.Question_ID INNER JOIN Valid_Answers ON Questions_in_Ex
SELECT Exams.Student_Answer_ID, COUNT(Exam_ID) AS Count_of_Exams 
SELECT Exams.Student_Answer_ID,Valid_Answers.Valid_Answer_Text,Valid_Answers.Valid_Answer_ID,Valid_Answers.Question_ID,Valid_Answers.Valid_Answer_Text,Valid_Answers.Valid_Answer_ID,Valid_Answers.Question_ID,Valid_Answers.Valid_Answer_Text,Valid_Answers.Valid_Answer_ID,Valid_Answers.Question_ID,Valid_Answers.Valid_Answer_Text,Valid_Answers.Valid_Answer_ID,Valid_Answers.Question_ID,Valid_Answers.Valid_Answer_Text,Valid_Answers.Valid_Answer_ID,Valid_Answers.Question_ID,Valid_Answers.Valid_Answer_Text,Valid_Answers.Valid_Answer_ID,Valid_Answers.Question_ID,Valid_Answers.Valid_Answer_Text,Valid_Answers.Valid_Answer_ID,Valid_Answers.Question_ID,Valid_Answers.Valid_Answer_Text,Valid_Answers.Valid_Answer_ID,Valid_Answers.Question_ID,Valid_Answers.Valid_Answer_Text,Valid_Answers.Valid_Answer_ID,Valid_Answers.Question_ID,Valid_Answers.Valid_Answer_Text,Valid_Answers.Valid_Answer_ID,Valid_Answers.Question_ID,Valid_Answers.Valid_Answer_Text,Valid_Answers.Valid_Answer_ID,Valid_Answers.Question_ID,Valid_Answers.Valid_Answer_Text,Valid_Answers.Valid_Answer_ID,Valid_Answers.Question_ID,Valid_Answers.Valid_Answer_Text,Valid_Answers.Valid_Answer_ID,Valid_Answers.Question_ID,Valid_Answers.Valid_Answer_Text,Valid_Answers.Valid_Answer_ID,Valid_Answers.Question_ID,Valid_Answers.Valid_Answer_Text,Valid_Answers.Valid_Answer_ID,Valid_Answers.Question_ID,Valid_Answers.Valid_Answer_Text,Valid_Answers.Valid_Answer_ID,Valid_Answers.Question_ID,Valid_Answers.Valid_Answer_Text,Valid_Answers.Valid_Answer_ID,Valid_Answers.Question_ID,Valid_Answers.Valid_Answer_Text,Valid_An
SELECT Exams.Student_Answer_ID, Valid_Answers.Valid_Answer_Text, Valid_Answers.Valid_Answer_ID, Valid_Answers.Question_ID, Valid_Answers.Valid_Answer_Text, Valid_Answers.Valid_Answer_ID, Valid_Answers.Question_ID, Valid_Answers.Valid_Answer_Text, Valid_Answers.Valid_Answer_ID, Valid_Answers.Question_ID, Valid_Answers.Valid_Answer_Text, Valid_Answers.Valid_Answer_ID, Valid_Answers.Question_ID, Valid_Answers.Valid_Answer_Text, Valid_Answers.Valid_Answer_ID, Valid_Answers.Question_ID, Valid_Answers.Valid_Answer_Text, Valid_Answers.Valid_Answer_ID, Valid_Answers.Question_ID, Valid_Answers.Valid_Answer_Text, Valid_Answers.Valid_Answer_ID, Valid_Answers.Question_ID, Valid_Answers.Valid_Answer_Text, Valid_Answers.Valid_Answer_ID, Valid_Answers.Question_ID, Valid_Answers.Valid_Answer_Text, Valid_Answers.Valid_Answer_ID, Valid_Answers.Question_ID, Valid_Answers.Valid_Answer_Text, Valid_Answers.Valid_Answer_ID, Valid_Answers.Question_ID, Valid_Answers.Valid_Answer_Text, Valid_Answers.Valid_Answer_ID, Valid_Answers.Question_ID, Valid_Answers.Valid_Answer_Text, Valid_Answers.Valid_Answer_ID, Valid_Answers.Question_ID, Valid_Answers.Valid_Answer_Text, Valid_Answers.Valid_Answer_ID, Valid_Answers.Question_ID, Valid_Answers.Valid_Answer_Text, Valid_Answers.Valid_Answer_ID, Valid_Answers.Question_ID, Valid_Answers.Valid_Answer_Text, Valid_Answers.Valid_Answer_ID, Valid_Answers.Question_ID, Valid_Answers.Valid_Answer_Text, Valid_Answers.Valid_Answer_ID, Valid_Answers.Question_ID, Valid_Answers.Valid_Answer_Text, Valid_Answers.Valid_Answer_ID, Valid_Answers.Question_ID, Valid_Answers.Valid_Answer_Text, Valid
SELECT Exams.Student_Answer_ID, Student_Answers.Student_ID, Student_Answers.Date_of_Answer, Student_Answers.Comments, Student_Answers.Satisfactory_YN, Student_Answers.Student_Answer_Text, Student_Answers.Exam_ID, Student_Answers.Question_ID, Student_Answers.Student_ID, Student_Answers.Date_of_Answer, Student_Answers.Comments, Student_Answers.Satisfactory_YN, Student_Answers.Student_Answer_Text, Student_Answers.Exam_ID, Student_Answers.Question_ID, Student_Answers.Student_ID, Student_Answers.Date_of_Answer, Student_Answers.Comments, Student_Answers.Satisfactory_YN, Student_Answers.Student_Answer_Text, Student_Answers.Exam_ID, Student_Answers.Question_ID, Student_Answers.Student_ID, Student_Answers.Date_of_Answer, Student_Answers.Comments, Student_Answers.Satisfactory_YN, Student_Answers.Student_Answer_Text, Student_Answers.Exam_ID, Student_Answers.Question_ID, Student_Answers.Student_ID, Student_Answers.Date_of_Answer, Student_Answers.Comments, Student_Answers.Satisfactory_YN, Student_Answers.Student_Answer_Text, Student_Answers.Exam_ID, Student_Answers.Question_ID, Student_Answers.Student_ID, Student_Answers.Date_of_Answer, Student_Answers.Comments, Student_Answers.Satisfactory_YN, Student_Answers.Student_Answer_Text, Student_Answers.Exam_ID, Student_Answers.Question_ID, Student_Answers.Student_ID, Student_Answers.Date_of_Answer, Student_Answers.Comments, Student_Answers.Satisfactory_YN, Student_Answers.Student_Answer_Text, Student_Answers.Exam_ID, Student_Answers.Question_ID, Student_Answers.Student_ID, Student_Answers.Date_of_Answer, Student_Answers.Comments, Student_Answers.Satisfactory_YN, Student_An
SELECT Exams.Student_Answer_ID, Valid_Answers.Valid_Answer_Text, Student_Answers.Student_Answer_Text, Student_Answers.Satisfactory_YN, Student_Answers.Assessment FROM Student_Answers INNER JOIN Valid_Answers ON Student_Answers.Student_Answer_ID = Valid_Answers.Student_Answer_ID WHERE Student_Answers.Student_Answer_ID = 'Exam_ID' AND Student_Answers.Student_Answer_ID = 'Question_ID' AND Student_Answers.Student_Answer_ID = 'Student_ID' AND Student_Answers.Student_Answer_ID = 'Date_of_Answer' AND Student_Answers.Student_Answer_ID = 'Comments' AND Student_Answers.Student_Answer_ID = 'Satisfactory_YN' AND Student_Answers.Student_Answer_ID = 'Student_Answer_Text' AND Student_Answers.Student_Answer_ID = 'Valid_Answer_ID' AND Student_Answers.Student_Answer_ID = 'Valid_Answer_Text' AND Student_Answers.Student_Answer_ID = 'Satisfactory_YN' AND Student_Answers.Student_Answer_ID = 'Assessment' AND Student_Answers.Student_Answer_ID = 'Student_Answer_Text' AND Student_Answers.Student_Answer_ID = 'Valid_Answer_ID' AND Student_Answers.Student_Answer_ID = 'Valid_Answer_Text' AND Student_Answers.Student_Answer_ID = 'Satisfactory_YN' AND Student_Answers.Student_Answer_ID = 'Assessment' AND Student_Answers.Student_Answer_ID = 'Student_Answer_Text' AND Student_Answers.Student_Answer_ID = 'Valid_Answer_ID' AND Student_Answers.Student_Answer_ID = 'Valid_Answer_Text' AND Student_Answers.Student_Answer_ID = 'Satisfactory_YN' AND Student_Answers.Student_Answer_ID = 'Assessment' AND Student_Answers.Student_Answer_ID = 'Student_Answer_Text' AND Student_Answers.Student_Answer_ID = '
SELECT Exams.Student_Answer_ID, Valid_Answers.Valid_Answer_Text, Student_Answers.Student_Answer_Text, Student_Answers.Satisfactory_YN, Student_Answers.Assessment 
SELECT Exams.Student_Answer_ID, Valid_Answers.Valid_Answer_Text, Student_Answers.Student_Answer_Text, Student_Answers.Satisfactory_YN, Student_Answers.Assessment FROM Student_Answers INNER JOIN Valid_Answers ON Student_Answers.Student_Answer_ID = Valid_Answers.Student_Answer_ID INNER JOIN Student_Answers ON Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID WHERE Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID AND Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID AND Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID AND Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID AND Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID AND Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID AND Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID AND Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID AND Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID AND Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID AND Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID AND Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID AND Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID AND Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID AND Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID AND Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID AND Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID AND Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID AND Student_Answers.Student_Answer_ID = Student_Answers.Student_Answer_ID AND Student_Answers.Student_Answer_ID = Student_Answers
SELECT Questions_in_Exams.Valid_Answer_ID, Valid_Answers.Valid_Answer_Text, COUNT(Student_Answers.Student_Answer_ID) AS Count 
SELECT Questions_in_Exams.Student_Answer_ID, Questions_in_Exams.Question_ID, Questions_in_Exams.Exam_ID, Questions_in_Exams.Question_Text, Questions_in_Exams.Valid_Answer_ID, Questions_in_Exams.Valid_Answer_Text, Questions_in_Exams.Satisfactory_YN, Questions_in_Exams.Student_Answer_Text, Questions_in_Exams.Assessment, Questions_in_Exams.Student_ID, Questions_in_Exams.Date_of_Answer, Questions_in_Exams.Comments, Questions_in_Exams.Student_Answer_Text, Questions_in_Exams.Satisfactory_YN, Questions_in_Exams.Assessment, Questions_in_Exams.Student_ID, Questions_in_Exams.Date_of_Answer, Questions_in_Exams.Comments, Questions_in_Exams.Student_Answer_Text, Questions_in_Exams.Satisfactory_YN, Questions_in_Exams.Assessment, Questions_in_Exams.Student_ID, Questions_in_Exams.Date_of_Answer, Questions_in_Exams.Comments, Questions_in_Exams.Student_Answer_Text, Questions_in_Exams.Satisfactory_YN, Questions_in_Exams.Assessment, Questions_in_Exams.Student_ID, Questions_in_Exams.Date_of_Answer, Questions_in_Exams.Comments, Questions_in_Exams.Student_Answer_Text, Questions_in_Exams.Satisfactory_YN, Questions_in_Exams.Assessment, Questions_in_Exams.Student_ID, Questions_in_Exams.Date_of_Answer, Questions_in_Exams.Comments, Questions_in_Exams.Student_Answer_Text, Questions_in_Exams.Satisfactory_YN, Questions_in_Exams.Assessment, Questions_in_Exams.Student_ID, Questions_in_Exams.Date_of_Answer, Questions_in_Exams.Comments, Questions_in_Exams.Student_Answer_Text, Questions_in_Exams.Satisfactory_YN, Questions_in_Exams.Assessment, Questions_in_Exams.Student_ID, Questions_in_Exams.Date_of_Answer, Questions_in
SELECT Student_Answer_Text FROM Student_Answers WHERE Comments = 'Normal' GROUP BY Student_Answer_Text HAVING COUNT(*) > 1 
SELECT Student_Answer_Text FROM Student_Answers WHERE Comments = 'Normal' GROUP BY Student_Answer_Text HAVING COUNT(*) = 1 
SELECT Student_Answer_ID, COUNT(DISTINCT Comments) AS Comment_Count FROM Student_Answers GROUP BY Student_Answer_ID HAVING COUNT(DISTINCT Comments) > 1 
SELECT Student_Answer_ID, COUNT(DISTINCT Comments) AS Comment_Count FROM Student_Answers GROUP BY Student_Answer_ID; 
SELECT Student_Answer_Text 
SELECT Student_Answer_Text FROM Student_Answers 
SELECT Students.Student_Answer_ID, Students.First_Name, Students.Date_of_Answer 
SELECT Students.Student_Answer_ID, Students.First_Name, Students.Date_of_Answer 
SELECT Students.Student_Answer_ID, Students.Email_Adress, Student_Answers.Date_of_Answer 
SELECT Students.Student_Answer_ID, Students.Email_Adress, Student_Answers.Date_of_Answer 
SELECT Assessment FROM Student_Assessments WHERE Student_Answer_ID IN (SELECT Student_Answer_ID FROM Student_Answers WHERE Student_ID IN (SELECT Student_ID FROM Students WHERE First_Name = 'John' AND Last_Name = 'Doe' AND Middle_Name = 'Q' AND Gender_MFU = 'F' AND Student_Address = '123 Main St' AND Email_Adress = 'johndoe@domain.com' AND Cell_Mobile_Phone = '555-555-5555' AND Home_Phone = '555-555-5556' AND Student_ID = 1) AND Exam_ID IN (SELECT Exam_ID FROM Exams WHERE Exam_Date = '2019-01-01' AND Exam_Name = 'Exam 1') AND Question_ID IN (SELECT Question_ID FROM Questions WHERE Question_Text = 'What is the capital of France?') AND Student_Answer_Text = 'Paris' AND Satisfactory_YN = 'Y') AND Valid_Answer_ID IN (SELECT Valid_Answer_ID FROM Valid_Answers WHERE Valid_Answer_Text = 'Paris' AND Question_ID = 1) ORDER BY COUNT(*) ASC LIMIT 1; 
SELECT Assessment, COUNT(*) AS Frequency FROM Student_Assessments GROUP BY Assessment ORDER BY Frequency ASC LIMIT 1; 
SELECT Students.Student_Answer_ID, Students.First_Name 
SELECT Students.Student_Answer_ID, Students.First_Name 
SELECT Valid_Answer_ID, Valid_Answer_Text, COUNT(*) AS Count FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY Count DESC LIMIT 1; 
SELECT Valid_Answer_ID, Valid_Answer_Text, COUNT(*) AS Count 
SELECT Students.Student_Answer_ID, Students.Student_ID, Students.Last_Name, Students.Gender_MFU 
SELECT Students.Student_Answer_ID, Students.Student_ID, Students.Last_Name, Students.Gender_MFU 
SELECT Students.Student_Answer_ID, Students.Student_ID, Students.First_Name, Students.Middle_Name, Students.Last_Name, Students.Gender_MFU, Students.Student_Address, Students.Email_Adress, Students.Cell_Mobile_Phone, Students.Home_Phone, Students.Student_Answer_Text, Students.Satisfactory_YN, Students.Assessment FROM Students INNER JOIN Student_Answers ON Students.Student_ID = Student_Answers.Student_ID INNER JOIN Student_Assessments ON Student_Answers.Student_Answer_ID = Student_Assessments.Student_Answer_ID WHERE Students.Gender_MFU = 'M' OR Students.Gender_MFU = 'F' ORDER BY Students.Gender_MFU ASC; 
SELECT Students.Student_Answer_ID, Students.Student_ID, Students.First_Name, Students.Middle_Name, Students.Last_Name, Students.Gender_MFU, Students.Student_Address, Students.Email_Adress, Students.Cell_Mobile_Phone, Students.Home_Phone, Students.Student_Answer_Text, Students.Satisfactory_YN, Students.Assessment FROM Students INNER JOIN Student_Answers ON Students.Student_ID = Student_Answers.Student_ID INNER JOIN Student_Assessments ON Student_Answers.Student_Answer_ID = Student_Assessments.Student_Answer_ID WHERE Students.Gender_MFU = 'M' OR Students.Gender_MFU = 'F' OR Students.Gender_MFU = 'U' ORDER BY Students.Student_ID ASC; 
SELECT Students.Student_Answer_ID, Students.Student_ID, Students.Last_Name, Students.Gender_MFU 
SELECT Students.Student_Answer_ID, Students.Student_ID, Students.Last_Name 
SELECT Students.Student_Answer_ID, Students.First_Name 
SELECT Students.Student_Answer_ID, Students.First_Name 
SELECT Student_Answer_Text FROM Student_Answers WHERE Comments IN ('Normal', 'Absent') AND Student_Answer_Text IS NOT NULL; 
SELECT Student_Answer_Text FROM Student_Answers WHERE Comments IN ('Normal', 'Absent') AND Satisfactory_YN IN ('Y', 'N') ORDER BY Student_Answer_Text ASC; 
SELECT Questions_in_Exams.Student_Answer_ID, Valid_Answers.Valid_Answer_Text, Student_Answers.Student_Answer_Text, Student_Answers.Satisfactory_YN, Student_Answers.Assessment FROM Student_Answers INNER JOIN Student_Assessments ON Student_Answers.Student_Answer_ID = Student_Assessments.Student_Answer_ID INNER JOIN Valid_Answers ON Student_Assessments.Valid_Answer_ID = Valid_Answers.Valid_Answer_ID INNER JOIN Questions_in_Exams ON Student_Answers.Exam_ID = Questions_in_Exams.Exam_ID INNER JOIN Questions ON Questions_in_Exams.Question_ID = Questions.Question_ID WHERE Questions.Type_of_Question_Code = 'MCQ' AND Questions_in_Exams.Question_ID IN (SELECT Question_ID FROM Questions_in_Exams GROUP BY Question_ID HAVING COUNT(*) >= 3) ORDER BY Questions_in_Exams.Question_ID ASC, Questions_in_Exams.Exam_ID ASC, Questions_in_Exams.Question_ID ASC, Questions_in_Exams.Exam_ID ASC, Questions_in_Exams.Question_ID ASC, Questions_in_Exams.Exam_ID ASC, Questions_in_Exams.Question_ID ASC, Questions_in_Exams.Exam_ID ASC, Questions_in_Exams.Question_ID ASC, Questions_in_Exams.Exam_ID ASC, Questions_in_Exams.Question_ID ASC, Questions_in_Exams.Exam_ID ASC, Questions_in_Exams.Question_ID ASC, Questions_in_Exams.Exam_ID ASC, Questions_in_Exams.Question_ID ASC, Questions_in_Exams.Exam_ID ASC, Questions_in_Exams.Question_ID ASC, Questions_in_Exams.Exam_ID ASC, Questions_in_Exams.Question_ID ASC, Questions_in_Exams.Exam_ID ASC, Questions_in_Exams.Question_ID ASC, Questions_in_Exams.Exam_ID ASC, Questions_in_Exams.Question_ID ASC, Questions_in_Exams.Exam_ID ASC, Questions_in_Exams.Question_ID ASC, Questions_in_Exams.Exam_ID ASC
SELECT Questions_in_Exams.Valid_Answer_ID, Valid_Answers.Valid_Answer_Text, Valid_Answers.Question_ID, Questions.Type_of_Question_Code, Questions.Question_Text, Questions_in_Exams.Exam_ID, Exams.Exam_Name, Exams.Subject_Code, Exams.Exam_Date, Students.Student_ID, Students.First_Name, Students.Middle_Name, Students.Last_Name, Students.Gender_MFU, Students.Student_Address, Students.Email_Adress, Students.Cell_Mobile_Phone, Students.Home_Phone FROM Questions_in_Exams INNER JOIN Valid_Answers ON Questions_in_Exams.Question_ID = Valid_Answers.Question_ID INNER JOIN Questions ON Questions_in_Exams.Question_ID = Questions.Question_ID INNER JOIN Exams ON Questions_in_Exams.Exam_ID = Exams.Exam_ID INNER JOIN Students ON Questions_in_Exams.Student_ID = Students.Student_ID WHERE Questions_in_Exams.Question_ID IN (SELECT Questions_in_Exams.Question_ID FROM Questions_in_Exams WHERE Questions_in_Exams.Question_ID IN (SELECT Questions_in_Exams.Question_ID FROM Questions_in_Exams WHERE Questions_in_Exams.Question_ID IN (SELECT Questions_in_Exams.Question_ID FROM Questions_in_Exams WHERE Questions_in_Exams.Question_ID IN (SELECT Questions_in_Exams.Question_ID FROM Questions_in_Exams WHERE Questions_in_Exams.Question_ID IN (SELECT Questions_in_Exams.Question_ID FROM Questions_in_Exams WHERE Questions_in_Exams.Question_ID IN (SELECT Questions_in_Exams.Question_ID FROM Questions_in_Exams WHERE Questions_in_Exams.Question_ID IN (SELECT Questions_in_Exams.Question_ID FROM Questions_in_Exams WHERE Questions_in_Exams.Question_ID IN (SELECT Questions_in_Exams.Question_ID FROM Questions_in_Exams WHERE Questions_in_Exams.Question_ID IN (SELECT Questions_in_Exams.Question_ID FROM Questions_in_Exams WHERE Questions_in_Exams.Question_ID IN (SELECT Questions_in_Exams.Question_ID FROM Questions_in_Exams WHERE Questions_in_Exams.Question_ID IN (
SELECT Students.Student_Answer_ID, Students.Student_ID, Students.First_Name, Students.Middle_Name, Students.Last_Name, Students.Gender_MFU, Students.Student_Address, Students.Email_Adress, Students.Cell_Mobile_Phone, Students.Home_Phone 
SELECT Student_Answer_ID, Student_ID, First_Name, Middle_Name, Last_Name, Gender_MFU, Student_Address, Email_Adress, Cell_Mobile_Phone, Home_Phone 
SELECT Addresses.order_id 
SELECT Addresses.order_id 
SELECT Addresses.order_id, Addresses.address_details 
SELECT Addresses.order_id, Addresses.address_details FROM Addresses WHERE Addresses.address_id = Customers.address_id AND Customers.customer_id = Customer_Orders.customer_id AND Customer_Orders.order_id = Order_Items.order_id AND Order_Items.product_id = Products.product_id AND Products.product_type_code = 'A' AND Products.product_name = 'A' AND Products.product_price = 1.0 AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details = 'A' AND Addresses.address_details
SELECT product_id, product_name, product_price FROM Products; 
SELECT product_id, product_name, product_price FROM Products WHERE product_type_code = 'P' ORDER BY product_price DESC; 
SELECT product_id, product_type_code, product_name FROM Products; 
SELECT product_id, product_type_code, product_name FROM Products 
SELECT product_id, product_name, product_price FROM Products WHERE product_name = 'Monitor'; 
SELECT product_id, product_name, product_price FROM Products WHERE product_name = 'Monitor' AND product_price IS NOT NULL; 
SELECT product_id, MIN(product_price), AVG(product_price), MAX(product_price) FROM Products GROUP BY product_id; 
SELECT product_id, MIN(product_price), AVG(product_price), MAX(product_price) FROM Products GROUP BY product_id; 
SELECT product_id, product_name, product_price FROM Products WHERE product_type_code = 'Clothes' ORDER BY product_price DESC; 
SELECT product_id, product_name, product_price FROM Products WHERE product_type_code = 'Clothes' ORDER BY product_price DESC; 
SELECT product_id, product_name, product_price FROM Products WHERE product_type_code = 'hardware'; 
SELECT product_id, product_type_code, product_name, product_price FROM Products WHERE product_type_code = 'Hardware'; 
SELECT product_id, product_name, product_price FROM Products WHERE product_price > (SELECT AVG(product_price) FROM Products); 
SELECT product_id, product_name FROM Products WHERE product_price > (SELECT AVG(product_price) FROM Products); 
SELECT product_id, product_name, product_price FROM Products WHERE product_type_code = 'hardware' AND product_price > (SELECT AVG(product_price) FROM Products WHERE product_type_code = 'hardware') ORDER BY product_name ASC; 
SELECT product_id, product_name FROM Products WHERE product_type_code = 'Hardware' AND product_price > (SELECT AVG(product_price) FROM Products WHERE product_type_code = 'Hardware') ORDER BY product_name ASC; 
SELECT product_id, product_name, product_price FROM Products WHERE product_type_code = 'Clothes' ORDER BY product_price DESC LIMIT 1; 
SELECT product_id, product_name, product_price FROM Products WHERE product_type_code = 'Clothes' AND product_price = (SELECT MAX(product_price) FROM Products WHERE product_type_code = 'Clothes') ORDER BY product_price DESC LIMIT 1; 
SELECT product_id, product_name FROM Products WHERE product_type_code = 'Hardware' AND product_price = (SELECT MIN(product_price) FROM Products WHERE product_type_code = 'Hardware'); 
SELECT product_id, product_name FROM Products WHERE product_type_code = 'Hardware' ORDER BY product_price ASC LIMIT 1; 
SELECT product_id, product_name, product_price FROM Products ORDER BY product_price DESC; 
SELECT product_id, product_name FROM Products ORDER BY product_price DESC; 
SELECT product_id, product_name, product_price FROM Products WHERE product_type_code = 'hardware' ORDER BY product_price ASC; 
SELECT product_id, product_name FROM Products WHERE product_type_code = 'Hardware' ORDER BY product_price ASC; 
SELECT product_id, product_type_code, COUNT(product_id) FROM Products GROUP BY product_type_code ORDER BY product_type_code ASC; 
SELECT product_id, product_type_code, COUNT(*) AS product_count FROM Products GROUP BY product_type_code, product_id ORDER BY product_type_code, product_id; 
SELECT product_id, product_type_code, AVG(product_price) FROM Products GROUP BY product_type_code; 
SELECT product_id, product_type_code, AVG(product_price) FROM Products GROUP BY product_type_code; 
SELECT product_id, product_type_code FROM Products WHERE product_id IN (SELECT product_id FROM Order_Items GROUP BY product_id HAVING COUNT(*) >= 2); 
SELECT product_id, product_type_code FROM Products WHERE product_type_code IN (SELECT product_type_code FROM Products GROUP BY product_type_code HAVING COUNT(product_type_code) >= 2); 
SELECT product_id, product_type_code, COUNT(*) AS product_count FROM Products GROUP BY product_type_code ORDER BY product_count DESC LIMIT 1; 
SELECT product_id, product_type_code, COUNT(*) AS product_type_count FROM Products GROUP BY product_type_code ORDER BY product_type_count DESC LIMIT 1; 
SELECT Customers.order_id, Customers.customer_id, Customers.customer_name, Customers.customer_address, Customers.customer_phone, Customers.customer_email, Customers.customer_number, Customers.payment_method_code, Customers.address_id, Addresses.address_details, Products.product_id, Products.product_type_code, Products.product_name, Products.product_price, Customer_Orders.order_date, Customer_Orders.order_status_code, Order_Items.order_item_id, Order_Items.order_id, Order_Items.product_id, Order_Items.order_quantity FROM Customers, Addresses, Products, Customer_Orders, Order_Items WHERE Customers.customer_id = Customer_Orders.customer_id AND Customer_Orders.order_id = Order_Items.order_id AND Order_Items.product_id = Products.product_id AND Customers.address_id = Addresses.address_id AND Customers.customer_id = Order_Items.customer_id AND Order_Items.order_id = Customer_Orders.order_id AND Customer_Orders.order_id = Order_Items.order_id AND Order_Items.order_id = Customer_Orders.order_id AND Customer_Orders.order_id = Order_Items.order_id AND Order_Items.order_id = Customer_Orders.order_id AND Customer_Orders.order_id = Order_Items.order_id AND Order_Items.order_id = Customer_Orders.order_id AND Customer_Orders.order_id = Order_Items.order_id
SELECT Customers.order_id, COUNT(Orders.order_id) FROM Customers, Orders WHERE Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_id HAVING COUNT(Orders.order_id) > 1 ORDER BY Customers.customer_id ASC; 
SELECT Customers.order_id, Customers.customer_name FROM Customers INNER JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id WHERE Customer_Orders.order_status_code = 'Shipped' ORDER BY Customers.customer_name ASC; 
SELECT Customers.order_id, Customers.customer_name FROM Customers WHERE Customers.customer_id = 1; 
SELECT Customers.order_id, Customers.customer_address, Customers.customer_phone, Customers.customer_email 
SELECT Customers.order_id, Customers.customer_name, Customers.customer_address, Customers.customer_phone, Customers.customer_email 
SELECT product_id, product_name, product_price FROM Products WHERE product_type_code = 'T' ORDER BY product_price DESC; 
SELECT product_id, product_name, product_price FROM Products WHERE product_type_code = 'Food' AND product_price > 100 ORDER BY product_price DESC; 
SELECT Customers.order_id, Customers.customer_id, Customers.payment_method_code, COUNT(Customers.customer_id) AS count 
SELECT product_id, product_name, product_price FROM Products WHERE product_type_code = 'P' ORDER BY product_price DESC LIMIT 1; 
SELECT Customers.order_id, Customers.customer_name, Customers.payment_method_code 
SELECT Customers.order_id, Customers.customer_name, Customers.customer_address, Customers.customer_phone, Customers.customer_email, Customers.customer_number, Customers.payment_method_code, Customers.address_id, Customers.customer_id, Customers.address_details, Customers.product_id, Customers.product_name, Customers.product_price, Customers.product_type_code, Customers.order_date, Customers.order_status_code, Customers.order_quantity FROM Customers, Order_Items, Products WHERE Customers.customer_id = Order_Items.customer_id AND Order_Items.product_id = Products.product_id AND Customers.payment_method_code = 'cash' ORDER BY Customers.customer_name ASC; 
SELECT product_id, product_name, product_price FROM Products WHERE product_type_code = 'T' ORDER BY product_price DESC; 
SELECT product_id, product_name, product_price FROM Products WHERE product_type_code = 'Food' AND product_price > 10 ORDER BY product_price DESC; 
SELECT Customers.order_id, Customers.customer_id, Customers.customer_name, Customers.customer_address, Customers.customer_phone, Customers.customer_email, Customers.payment_method_code 
SELECT Customers.order_id, Customers.customer_name, Customers.customer_address, Customers.customer_phone, Customers.customer_email, Customers.payment_method_code 
SELECT product_id, product_type_code FROM Products ORDER BY product_name; 
SELECT product_id, product_type_code FROM Products ORDER BY product_name ASC; 
SELECT product_id, product_type_code, product_name, product_price FROM Products ORDER BY product_type_code ASC; 
SELECT product_id, product_type_code, COUNT(*) AS count FROM Products GROUP BY product_type_code ORDER BY count ASC LIMIT 1; 
SELECT Customers.order_id 
SELECT Customer_Orders.order_id, COUNT(Customer_Orders.order_id) AS order_count 
SELECT order_id, order_date, order_status_code FROM Customer_Orders WHERE customer_id = (SELECT customer_id FROM Customers WHERE customer_name = 'Jeromy'); 
SELECT order_id, order_date, order_status_code FROM Customer_Orders WHERE customer_id = (SELECT customer_id FROM Customers WHERE customer_name = 'Jeromy'); 
SELECT Customers.order_id, Customers.customer_name, COUNT(Customer_Orders.order_id) AS order_count 
SELECT Customers.order_id, Customers.customer_name, COUNT(Order_Items.order_item_id) AS order_count 
SELECT Customers.order_id, Customers.customer_name, Customers.customer_phone, Customers.customer_email 
SELECT Customers.order_id, Customers.customer_name, Customers.customer_phone, Customers.customer_email 
SELECT order_id, order_status_code, COUNT(order_id) FROM Customer_Orders GROUP BY order_status_code ORDER BY order_status_code ASC; 
SELECT order_id, order_status_code, COUNT(*) AS order_count FROM Customer_Orders GROUP BY order_status_code, order_id ORDER BY order_status_code ASC; 
SELECT order_id, order_status_code, COUNT(order_status_code) AS order_status_count FROM Customer_Orders GROUP BY order_status_code ORDER BY order_status_count DESC LIMIT 1; 
SELECT order_id, order_status_code, COUNT(order_status_code) AS order_status_count FROM Customer_Orders GROUP BY order_status_code ORDER BY order_status_count DESC LIMIT 1; 
SELECT Customers.order_id 
SELECT Customers.order_id 
SELECT product_id, product_name FROM Products WHERE product_id NOT IN (SELECT product_id FROM Order_Items); 
SELECT product_id, product_name FROM Products WHERE product_id NOT IN (SELECT product_id FROM Order_Items); 
SELECT product_id FROM Products WHERE product_name = 'Monitor'; 
SELECT product_id, product_name, product_price, order_quantity, order_date, order_status_code, customer_name, customer_address, customer_phone, customer_email, customer_number, payment_method_code, address_details, address_id, customer_id, order_id, order_item_id FROM Products, Order_Items, Customer_Orders, Customers, Addresses WHERE product_id = order_item_id AND order_id = customer_id AND customer_id = address_id AND product_type_code = 'Monitor' AND order_status_code = 'Shipped' AND customer_name = 'John Doe' AND customer_address = '123 Main St.' AND customer_phone = '555-555-5555' AND customer_email = 'johndoe@example.com' AND customer_number = '123456789' AND payment_method_code = 'Credit Card' AND address_details = '123 Main St.' AND address_id = 123 AND customer_id = 123 AND order_id = 123 AND order_item_id = 123 AND product_id = 123 AND product_name = 'Monitor' AND product_price = 123.45 AND order_quantity = '1' AND order_date = '2022-01-01' AND order_status_code = 'Shipped' AND customer_name = 'John Doe'
SELECT Customers.order_id FROM Customers WHERE Customers.customer_id IN (SELECT Customer_Orders.customer_id FROM Customer_Orders WHERE Customer_Orders.order_id IN (SELECT Order_Items.order_id FROM Order_Items WHERE Order_Items.product_id IN (SELECT Products.product_id FROM Products WHERE Products.product_name = 'Monitor'))); 
SELECT Customers.order_id, COUNT(DISTINCT Customers.customer_id) AS customer_count 
SELECT Customers.order_id, COUNT(Orders.order_id) FROM Customers, Orders WHERE Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_id HAVING COUNT(Orders.order_id) > 1; 
SELECT Customers.order_id, COUNT(DISTINCT Customers.customer_id) AS customer_count 
SELECT Customer_Orders.order_id FROM Customer_Orders WHERE Customer_Orders.order_id NOT IN (SELECT Order_Items.order_id FROM Order_Items WHERE Order_Items.order_id IS NOT NULL); 
SELECT Customer_Orders.order_id FROM Customer_Orders WHERE Customer_Orders.order_id IS NULL; 
SELECT order_id, order_date FROM Customer_Orders WHERE order_id IN (SELECT order_id FROM Order_Items WHERE order_quantity > 6 OR order_quantity > 3) ORDER BY order_id ASC; 
SELECT order_id, order_date FROM Order_Items WHERE order_quantity > 6 OR order_quantity > 3 
SELECT building.Name, building.Address, building.Number_of_Stories, building.Completed_Year, region.Name, region.Capital, region.Area, region.Population 
SELECT building.Name, building.Address, building.Number_of_Stories, building.Completed_Year, region.Name, region.Capital, region.Area, region.Population 
SELECT Name FROM building WHERE Number_of_Stories IN (SELECT Number_of_Stories FROM building ORDER BY Number_of_Stories ASC) ORDER BY Number_of_Stories ASC; 
SELECT Name FROM building WHERE Number_of_Stories IN (SELECT Number_of_Stories FROM building ORDER BY Number_of_Stories ASC) ORDER BY Number_of_Stories ASC; 
SELECT building.Name, building.Address, building.Completed_Year 
SELECT building.Name FROM building WHERE building.Name = 'building.Name' ORDER BY building.Name DESC; 
SELECT building.Name, building.Number_of_Stories FROM building WHERE building.Completed_Year!= 1980 ORDER BY building.Number_of_Stories DESC LIMIT 1; 
SELECT building.Name, building.Number_of_Stories FROM building WHERE building.Completed_Year!= 1980 AND building.Number_of_Stories = (SELECT MAX(building.Number_of_Stories) FROM building WHERE building.Completed_Year!= 1980) ORDER BY building.Name ASC; 
SELECT Region_ID, AVG(Population) FROM region GROUP BY Region_ID; 
SELECT Region_ID, AVG(Population) FROM region GROUP BY Region_ID; 
SELECT Name FROM region 
SELECT Name FROM region 
SELECT region.Capital FROM region WHERE region.Area > 10000; 
SELECT region.Capital FROM region WHERE region.Area > 10000; 
SELECT Capital FROM region WHERE Region_ID IN (SELECT Region_ID FROM region WHERE Population = (SELECT MAX(Population) FROM region)); 
SELECT region.Capital FROM region WHERE region.Population = (SELECT MAX(region.Population) FROM region); 
SELECT region.Name FROM region WHERE region.Area IN (SELECT region.Area FROM region ORDER BY region.Area DESC LIMIT 5) ORDER BY region.Area DESC; 
SELECT Name FROM region WHERE Region_ID IN (SELECT Region_ID FROM region ORDER BY Area DESC LIMIT 5) ORDER BY Area DESC LIMIT 5; 
SELECT building.Name, region.Name FROM building, region WHERE building.Region_ID = region.Region_ID; 
SELECT building.Name, region.Name FROM building, region WHERE building.Region_ID = region.Region_ID; 
SELECT region.Name FROM region 
SELECT region.Name FROM region 
SELECT region.Capital FROM region WHERE region.Population = (SELECT MAX(region.Population) FROM region)  
SELECT region.Capital FROM region WHERE region.Region_ID = (SELECT region.Region_ID FROM region WHERE region.Population = (SELECT MAX(region.Population) FROM region)); 
SELECT building.Name, region.Capital FROM building, region WHERE building.Region_ID = region.Region_ID; 
SELECT building.Name, region.Name FROM building, region WHERE building.Region_ID = region.Region_ID; 
SELECT building.Name, building.Number_of_Stories FROM building WHERE building.Region_ID IN (SELECT Region_ID FROM region WHERE region.Name = 'Abruzzo')  
SELECT building.Name, building.Number_of_Stories 
SELECT building.Region_ID, building.Completed_Year, COUNT(*) AS num_buildings FROM building WHERE building.Completed_Year IS NOT NULL GROUP BY building.Region_ID, building.Completed_Year ORDER BY building.Completed_Year ASC 
SELECT Region_ID, Completed_Year, Number_of_Stories FROM building WHERE Completed_Year IS NOT NULL ORDER BY Region_ID ASC, Completed_Year DESC; 
SELECT building.Region_ID, building.Completed_Year, COUNT(*) AS num_buildings FROM building GROUP BY building.Region_ID, building.Completed_Year ORDER BY num_buildings DESC LIMIT 1; 
SELECT Region_ID, Completed_Year, COUNT(*) AS num_constructions FROM building GROUP BY Region_ID ORDER BY num_constructions DESC LIMIT 1; 
SELECT region.Name FROM region WHERE region.Region_ID NOT IN (SELECT region.Region_ID FROM region JOIN building ON region.Region_ID = building.Region_ID WHERE building.Building_ID IS NOT NULL); 
SELECT Name FROM region WHERE Region_ID NOT IN (SELECT Region_ID FROM building); 
SELECT building.Region_ID, region.Name, region.Capital, region.Area, region.Population, building.Number_of_Stories, building.Completed_Year FROM building JOIN region ON building.Region_ID = region.Region_ID WHERE building.Number_of_Stories > 20 OR building.Number_of_Stories < 15; 
SELECT building.Region_ID, region.Name, building.Number_of_Stories, building.Completed_Year FROM building, region WHERE building.Region_ID = region.Region_ID AND building.Number_of_Stories > 20 AND building.Number_of_Stories < 15 AND building.Completed_Year IS NOT NULL; 
SELECT building.Name 
SELECT building.Name, building.Address FROM building GROUP BY building.Address HAVING COUNT(*) = 1; 
SELECT region.Region_ID, region.Name, region.Capital, region.Area, region.Population, building.Region_ID, building.Name, building.Address, building.Number_of_Stories, building.Completed_Year FROM region INNER JOIN building ON region.Region_ID = building.Region_ID ORDER BY building.Number_of_Stories DESC; 
SELECT building.Region_ID, building.Name, building.Address, building.Number_of_Stories, building.Completed_Year FROM building ORDER BY building.Number_of_Stories DESC; 
SELECT Channels.Customers_and_Services_ID, Channel_Details FROM Channels ORDER BY Channel_Details ASC; 
SELECT Channels.Customers_and_Services_ID, Channels.Channel_Details 
SELECT Services.Customers_and_Services_ID, Customers_and_Services.Customer_ID, Customers_and_Services.Service_ID, Customers_and_Services.Customers_and_Services_Details, Customers_and_Services.Services_and_Channels_Details, Customers_and_Services.Pattern_Recognition, Customers_and_Services.Analytical_Layer_Type_Code, Customers_and_Services.Status_Code, Customers_and_Services.Channel_ID, Customers_and_Services.Customer_Interaction_ID, Customers_and_Services.Integration_Platform_ID, Customers_and_Services.Integration_Platform_Details, Customers_and_Services.Channel_Details, Customers_and_Services.Customer_Details, Customers_and_Services.Service_Details, Customers_and_Services.Customer_Interaction_ID, Customers_and_Services.Channel_ID, Customers_and_Services.Customer_ID, Customers_and_Services.Service_ID, Customers_and_Services.Customers_and_Services_ID, Customers_and_Services.Customer_Interaction_ID, Customers_and_Services.Channel_ID, Customers_and_Services.Customer_ID, Customers_and_Services.Service_ID, Customers_and_Services.Customers_and_Services_ID, Customers_and_Services.Customer_Interaction_ID, Customers_and_Services.Channel_ID, Customers_and_Services.Customer_ID, Customers_and_Services.Service_ID, Customers_and_Services.Customers_and_Services_ID, Customers_and_Services.Customer_Interaction_ID, Customers_and_Services.Channel_ID, Customers_and_Services.Customer_ID, Customers_and_Services.Service_ID, Customers_and_Services.Customers_and_Services_ID, Customers_and_Services.Customer_Interaction_ID, Customers_and_Services.Channel_ID, Customers_and_Services.Customer_ID, Customers_and_Services.Service_ID, Customers_and_Services.Customers_and_Services_ID, Customers_and_Services.Customer_Interaction_ID, Customers_and_Services.Channel_ID, Customers_and_Services.Customer_ID, Customers_and_Services.Service_ID, Customers_and_Services.Customers_and_Services_ID, Customers_and_Services.Customer_Interaction_ID, Customers_and_Services.Channel_ID, Customers_and_Services.Customer_ID, Customers_and_Services.Service_ID, Customers_and_Services.Customers_and_Services_ID, Customers_and_Services.Customer_
SELECT Services.Customers_and_Services_ID 
SELECT Analytical_Layer_Type_Code FROM Analytical_Layer WHERE Analytical_Layer_Type_Code IS NOT NULL GROUP BY Analytical_Layer_Type_Code ORDER BY COUNT(*) DESC LIMIT 1; 
SELECT Analytical_Layer_Type_Code FROM Analytical_Layer WHERE Analytical_Layer_Type_Code IN (SELECT Analytical_Layer_Type_Code FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code HAVING COUNT(*) = (SELECT COUNT(*) FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code ORDER BY COUNT(*) DESC LIMIT 1)) ORDER BY Analytical_Layer_Type_Code ASC; 
SELECT Customers_and_Services.Customers_and_Services_ID, Service_Details FROM Customers_and_Services JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID WHERE Customers_and_Services.Customer_ID IN (SELECT Customer_ID FROM Customers WHERE Customer_Details = 'Hardy Kutch') ORDER BY Customers_and_Services.Customers_and_Services_ID ASC; 
SELECT Services.Customers_and_Services_ID, Service_Details 
SELECT Services.Customers_and_Services_ID, Service_Details 
SELECT Customers_and_Services.Customers_and_Services_ID, Service_Details FROM Customers_and_Services INNER JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID WHERE Customers_and_Services.Customers_and_Services_ID IN (SELECT Customers_and_Services.Customers_and_Services_ID FROM Customers_and_Services INNER JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID GROUP BY Customers_and_Services.Customers_and_Services_ID HAVING COUNT(*) > 3) ORDER BY Customers_and_Services.Customers_and_Services_ID ASC; 
SELECT Customer_Interactions.Customers_and_Services_ID, Customers_and_Services.Customer_Details, Customers_and_Services.Service_ID, Services.Service_Details, Customer_Interactions.Services_and_Channels_Details, Customer_Interactions.Status_Code, Integration_Platforms.Integration_Platform_Details, Analytical_Layers.Pattern_Recognition, Analytical_Layers.Analytical_Layer_Type_Code 
SELECT Customers_and_Services.Customers_and_Services_ID, Customers_and_Services.Customer_ID, Customers_and_Services.Service_ID, Customers_and_Services.Customers_and_Services_Details, Customers.Customer_Details, Services.Service_Details, COUNT(*) AS Count FROM Customers_and_Services JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID GROUP BY Customers_and_Services.Customer_ID, Customers_and_Services.Service_ID, Customers_and_Services.Customers_and_Services_Details, Customers.Customer_Details, Services.Service_Details HAVING Count = (SELECT MAX(Count) FROM (SELECT Customers_and_Services.Customer_ID, Customers_and_Services.Service_ID, Customers_and_Services.Customers_and_Services_Details, Customers.Customer_Details, Services.Service_Details, COUNT(*) AS Count FROM Customers_and_Services JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID GROUP BY Customers_and_Services.Customer_ID, Customers_and_Services.Service_ID, Customers_and_Services.Customers_and_Services_Details, Customers.Customer_Details, Services.Service_Details)) ORDER BY Count DESC LIMIT 1; 
SELECT Customer_Interactions.Customers_and_Services_ID, Customers_and_Services.Customer_Details, COUNT(*) AS Count 
SELECT Customer_Interactions.Customers_and_Services_ID, Customer_Interaction.Customer_ID, Customer_Interaction.Channel_ID, Customer_Interaction.Service_ID, Customer_Interaction.Status_Code, Customer_Interaction.Services_and_Channels_Details, Customer_Interaction.Integration_Platform_ID, Customer_Interaction.Integration_Platform_Details, Customer_Interaction.Analytical_ID, Customer_Interaction.Pattern_Recognition, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Customers_and_Services_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Customer_Details, Customer_Interaction.Channel_ID, Customer_Interaction.Channel_Details, Customer_Interaction.Service_ID, Customer_Interaction.Service_Details, Customer_Interaction.Customer_Interaction_ID, Customer_Interaction.Customer_Interaction_Details FROM Customer_Interactions Customer_Interaction INNER JOIN Customers_and_Services Customers_and_Services ON Customer_Interaction.Customers_and_Services_ID = Customers_and_Services.Customers_and_Services_ID INNER JOIN Customers Customers ON Customer_Interaction.Customer_ID = Customers.Customer_ID INNER JOIN Channels Channels ON Customer_Interaction.Channel_ID = Channels.Channel_ID INNER JOIN Services Services ON Customer_Interaction.Service_ID = Services.Service_ID INNER JOIN Integration_Platform Integration_Platform ON Customer_Interaction.Integration_Platform_ID = Integration_Platform.Integration_Platform_ID INNER JOIN Analytical_Layer Analytical_Layer ON Customer_Interaction.Analytical_ID = Analytical_Layer.Analytical_ID WHERE Customers_and_Services.Customers_and_Services_Details = 'Customer has used the most types of services' ORDER BY Customer_Interaction.Customer_ID ASC, Customer_Interaction.Channel_ID ASC, Customer_Interaction.Service_ID ASC, Customer_Interaction.Status_Code ASC, Customer_Interaction.Services_and_Channels_Details ASC, Customer_Interaction.Integration_Platform_ID ASC, Customer_Interaction.Integration_Platform_Details ASC, Customer_Interaction.Analytical_ID ASC, Customer_Interaction.Pattern_Recognition ASC, Customer_Interaction.Analytical_Layer_Type_Code ASC, Customer_Interaction.Customers_and_Services_ID ASC, Customer_Interaction.Customers_and_Services_Details ASC, Customer_Interaction.Customer_ID ASC, Customer
SELECT Customer_Interactions.Customers_and_Services_ID, Customers_and_Services.Customer_Details, Customers_and_Services.Service_ID, Services.Service_Details 
SELECT Customer_Interactions.Customers_and_Services_ID, Customer_Interaction.Customer_ID, Customer_Interaction.Channel_ID, Customer_Interaction.Service_ID, Customer_Interaction.Status_Code, Customer_Interaction.Services_and_Channels_Details, Customer_Interaction.Integration_Platform_ID, Customer_Interaction.Integration_Platform_Details, Customer_Interaction.Analytical_ID, Customer_Interaction.Pattern_Recognition, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Customers_and_Services_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Customer_Details, Customer_Interaction.Service_ID, Customer_Interaction.Service_Details, Customer_Interaction.Channel_ID, Customer_Interaction.Channel_Details FROM Customer_Interactions Customer_Interaction INNER JOIN Customers_and_Services Customers_and_Services ON Customer_Interaction.Customers_and_Services_ID = Customers_and_Services.Customers_and_Services_ID WHERE Customers_and_Services.Customer_ID IS NULL 
SELECT Customers_and_Services.Customers_and_Services_ID, Customers_and_Services.Customer_ID, Customers_and_Services.Service_ID, Customers_and_Services.Customers_and_Services_Details, Customers.Customer_Details, Services.Service_Details FROM Customers_and_Services INNER JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID INNER JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID WHERE Customers_and_Services.Customers_and_Services_Details = 'Least Used Service' ORDER BY Customers_and_Services.Customer_ID ASC; 
SELECT Customer_Interactions.Customers_and_Services_ID, Customer_Interaction.Customer_ID, Customer_Interaction.Channel_ID, Customer_Interaction.Service_ID, Customer_Interaction.Status_Code, Customer_Interaction.Services_and_Channels_Details, Customer_Interaction.Integration_Platform_ID, Customer_Interaction.Integration_Platform_Details, Customer_Interaction.Analytical_ID, Customer_Interaction.Pattern_Recognition, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Customers_and_Services_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Customer_Details, Customer_Interaction.Channel_ID, Customer_Interaction.Channel_Details, Customer_Interaction.Service_ID, Customer_Interaction.Service_Details, Customer_Interaction.Customers_and_Services_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Customer_Details, Customer_Interaction.Channel_ID, Customer_Interaction.Channel_Details, Customer_Interaction.Service_ID, Customer_Interaction.Service_Details, Customer_Interaction.Customers_and_Services_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Customer_Details, Customer_Interaction.Channel_ID, Customer_Interaction.Channel_Details, Customer_Interaction.Service_ID, Customer_Interaction.Service_Details, Customer_Interaction.Customers_and_Services_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Customer_Details, Customer_Interaction.Channel_ID, Customer_Interaction.Channel_Details, Customer_Interaction.Service_ID, Customer_Interaction.Service_Details, Customer_Interaction.Customers_and_Services_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Customer_Details, Customer_Interaction.Channel_ID, Customer_Interaction.Channel_Details, Customer_Interaction.Service_ID, Customer_Interaction.Service_Details, Customer_Interaction.Customers_and_Services_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Customer_Details, Customer_Interaction.Channel_ID, Customer_Interaction.Channel_Details, Customer_Interaction.Service_ID, Customer_Interaction.Service_Details, Customer_Interaction.Customers_and_Services_ID, Customer_Interaction.Custom
SELECT Customers_and_Services_ID, COUNT(DISTINCT Customer_ID), COUNT(DISTINCT Service_ID) FROM Customers_and_Services GROUP BY Customers_and_Services_ID; 
SELECT Customers_and_Services_ID, COUNT(*) FROM Customers_and_Services GROUP BY Customers_and_Services_ID; 
SELECT Customer_Interactions.Customers_and_Services_ID, Customers_and_Services.Customer_ID, Customers_and_Services.Customer_Details, Customers_and_Services.Service_ID, Services.Service_Details, Customer_Interactions.Channel_ID, Channels.Channel_Details, Customer_Interactions.Customer_ID, Customer_Interactions.Service_ID, Customer_Interactions.Status_Code, Customer_Interactions.Services_and_Channels_Details, Integration_Platforms.Integration_Platform_ID, Integration_Platforms.Customer_Interaction_ID, Integration_Platforms.Integration_Platform_Details, Analytical_Layers.Analytical_ID, Analytical_Layers.Customers_and_Services_ID, Analytical_Layers.Pattern_Recognition, Analytical_Layers.Analytical_Layer_Type_Code FROM Customers_and_Services INNER JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID INNER JOIN Customer_Interactions ON Customers_and_Services.Customer_ID = Customer_Interactions.Customer_ID INNER JOIN Channels ON Customer_Interactions.Channel_ID = Channels.Channel_ID INNER JOIN Integration_Platforms ON Customer_Interactions.Customer_Interaction_ID = Integration_Platforms.Customer_Interaction_ID INNER JOIN Analytical_Layers ON Customers_and_Services.Customers_and_Services_ID = Analytical_Layers.Customers_and_Services_ID WHERE Customers_and_Services.Customer_Details LIKE '%Kutch%'; 
SELECT Customer_Interactions.Customers_and_Services_ID, Customers_and_Services.Customer_Details 
SELECT Customers_and_Services.Customers_and_Services_ID, Service_Details FROM Customers_and_Services INNER JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID WHERE Customers_and_Services.Customer_ID = (SELECT Customer_ID FROM Customers WHERE Customer_Details = 'Hardy Kutch') OR EXISTS (SELECT * FROM Customer_Interactions WHERE Customer_Interactions.Service_ID = Services.Service_ID AND Customer_Interactions.Status_Code = 'good') ORDER BY Customers_and_Services.Customers_and_Services_ID ASC; 
SELECT Customers_and_Services.Customers_and_Services_ID, Service_Details FROM Customers_and_Services JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID WHERE Customers_and_Services.Customer_ID IN (SELECT Customer_ID FROM Customers WHERE Customer_Details = 'Hardy Kutch') OR Customers_and_Services.Customer_ID IN (SELECT Customer_ID FROM Customers WHERE Customer_Details = 'good') ORDER BY Customers_and_Services.Customers_and_Services_ID ASC; 
SELECT Customers_and_Services.Customers_and_Services_ID, Service_Details FROM Customers_and_Services INNER JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID WHERE Customers_and_Services.Customer_ID = (SELECT Customer_ID FROM Customers WHERE Customer_Details = 'Hardy Kutch') AND EXISTS (SELECT * FROM Customer_Interactions WHERE Customer_Interactions.Customer_ID = (SELECT Customer_ID FROM Customers WHERE Customer_Details = 'Hardy Kutch') AND Customer_Interactions.Service_ID = Services.Service_ID AND Customer_Interactions.Status_Code = 'bad')  
SELECT Services.Customers_and_Services_ID, Service_Details 
SELECT Services.Customers_and_Services_ID, Service_Details, Customers_and_Services_Details, Services_and_Channels_Details, Integration_Platform_Details, Analytical_Layer_Type_Code, Pattern_Recognition 
SELECT Services.Customers_and_Services_ID, Service_Details 
SELECT Customers_and_Services.Customers_and_Services_ID, Customers_and_Services.Customer_ID, Customers_and_Services.Service_ID, Customers_and_Services.Customers_and_Services_Details, Customers.Customer_Details, Services.Service_Details, Channels.Channel_Details, Customer_Interactions.Services_and_Channels_Details, Customer_Interactions.Status_Code, Integration_Platform.Integration_Platform_Details, Analytical_Layer.Pattern_Recognition, Analytical_Layer.Analytical_Layer_Type_Code FROM Customers_and_Services INNER JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID INNER JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID INNER JOIN Channels ON Customers_and_Services.Channel_ID = Channels.Channel_ID INNER JOIN Customer_Interactions ON Customers_and_Services.Customer_Interaction_ID = Customer_Interactions.Customer_Interaction_ID INNER JOIN Integration_Platform ON Customer_Interactions.Integration_Platform_ID = Integration_Platform.Integration_Platform_ID INNER JOIN Analytical_Layer ON Customers_and_Services.Analytical_ID = Analytical_Layer.Analytical_ID WHERE Customer_Interactions.Status_Code = 'Stuck' AND Customer_Interactions.Services_and_Channels_Details = 'bad' ORDER BY Customers_and_Services.Customer_ID, Customers_and_Services.Service_ID, Customers_and_Services.Channel_ID, Customers_and_Services.Customer_Interaction_ID, Customers_and_Services.Integration_Platform_ID, Customers_and_Services.Analytical_ID; 
SELECT Customer_Interactions.Customers_and_Services_ID, Customer_Interaction.Customer_ID, Customer_Interaction.Channel_ID, Customer_Interaction.Service_ID, Customer_Interaction.Status_Code, Customer_Interaction.Services_and_Channels_Details, Customer_Interaction.Integration_Platform_ID, Customer_Interaction.Integration_Platform_Details, Customer_Interaction.Analytical_ID, Customer_Interaction.Pattern_Recognition, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Customer_Interaction_ID, Customer_Interaction.Customer_Details, Customer_Interaction.Channel_Details, Customer_Interaction.Service_Details, Customer_Interaction.Customers_and_Services_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customers_and_Services_ID, Customer_Interaction.Customer_ID, Customer_Interaction.Service_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Service_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Service_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Service_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Service_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Service_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Service_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Service_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Service_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Service_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Service_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Service_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Service_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Customer_ID, Customer_Interaction.Service_ID,
SELECT Integration_Platform.Customers_and_Services_ID, COUNT(*) AS Successful_Integration_Platforms 
SELECT Integration_Platform.Customers_and_Services_ID 
SELECT Customer_Interactions.Customers_and_Services_ID, Customer_Interaction.Customer_ID, Customer_Interaction.Channel_ID, Customer_Interaction.Service_ID, Customer_Interaction.Status_Code, Customer_Interaction.Services_and_Channels_Details, Integration_Platform.Integration_Platform_Details, Customer.Customer_Details, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID, Customer.Customer_ID,
SELECT Customer_Interactions.Customers_and_Services_ID, Customer_Interaction.Customer_ID, Customer_Interaction.Channel_ID, Customer_Interaction.Service_ID, Customer_Interaction.Status_Code, Customer_Interaction.Services_and_Channels_Details, Customer_Interaction.Integration_Platform_ID, Customer_Interaction.Integration_Platform_Details, Customer_Interaction.Customer_Interaction_ID, Customer_Interaction.Customer_Details, Customer_Interaction.Channel_Details, Customer_Interaction.Service_Details, Customer_Interaction.Customers_and_Services_ID, Customer_Interaction.Customers_and_Services_Details, Customer_Interaction.Analytical_ID, Customer_Interaction.Pattern_Recognition, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer_Type_Code, Customer_Interaction.Analytical_Layer
SELECT Services.Customers_and_Services_ID, Service_Details FROM Services 
SELECT Customers_and_Services.Customers_and_Services_ID, Service_Details FROM Services INNER JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID WHERE Customers_and_Services.Customer_ID IS NULL;  
SELECT Analytical_Layer_Type_Code, COUNT(*) FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code ORDER BY COUNT(*) DESC; 
SELECT Analytical_Layer_Type_Code, COUNT(*) FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code ORDER BY COUNT(*) DESC; 
SELECT Services.Customers_and_Services_ID, Service_Details 
SELECT Services.Customers_and_Services_ID, Service_Details 
SELECT id FROM Vehicles 
SELECT id FROM Vehicles WHERE Type_of_powertrain = 'Electric' AND Model_year >= 2015 AND Model_year <= 2019 
SELECT Vehicles.id, Vehicles.name, Vehicles.Model_year 
SELECT Vehicles.id, Vehicles.name, Vehicles.Model_year 
SELECT vehicles_id, Type_of_powertrain 
SELECT vehicles_id, Type_of_powertrain 
SELECT Vehicles.id, Vehicles.name, Vehicles.Type_of_powertrain, Vehicles.Annual_fuel_cost FROM Vehicles WHERE Vehicles.Model_year = 2013 OR Vehicles.Model_year = 2014; 
SELECT Vehicles.id, Vehicles.name, Vehicles.Type_of_powertrain, Vehicles.Annual_fuel_cost FROM Vehicles WHERE Vehicles.Model_year IN (2013, 2014) ORDER BY Vehicles.Model_year ASC; 
SELECT Vehicles.id, Vehicles.name, Vehicles.Model_year, Vehicles.Type_of_powertrain FROM Vehicles WHERE Vehicles.Model_year IN (2014, 2013) ORDER BY Vehicles.Model_year DESC; 
SELECT vehicles_id 
SELECT Vehicles.id, Vehicles.Type_of_powertrain, COUNT(Vehicles.id) AS num_vehicles 
SELECT Vehicles.id, Vehicles.Type_of_powertrain, COUNT(Vehicles.id) AS count 
SELECT Vehicles.id, Vehicles.Type_of_powertrain, COUNT(Vehicles.id) AS num_vehicles 
SELECT Vehicles.id, Vehicles.Type_of_powertrain, COUNT(Vehicles.Type_of_powertrain) AS count 
SELECT Vehicles.id, Vehicles.name, Vehicles.Model_year, Vehicles.Type_of_powertrain, Vehicles.Combined_fuel_economy_rate, Vehicles.City_fuel_economy_rate, Vehicles.Highway_fuel_economy_rate, Vehicles.Cost_per_25_miles, Vehicles.Annual_fuel_cost, Vehicles.Notes, MIN(Vehicles.Annual_fuel_cost), MAX(Vehicles.Annual_fuel_cost), AVG(Vehicles.Annual_fuel_cost) FROM Vehicles GROUP BY Vehicles.id, Vehicles.name, Vehicles.Model_year, Vehicles.Type_of_powertrain, Vehicles.Combined_fuel_economy_rate, Vehicles.City_fuel_economy_rate, Vehicles.Highway_fuel_economy_rate, Vehicles.Cost_per_25_miles, Vehicles.Annual_fuel_cost, Vehicles.Notes HAVING MIN(Vehicles.Annual_fuel_cost) IS NOT NULL AND MAX(Vehicles.Annual_fuel_cost) IS NOT NULL AND AVG(Vehicles.Annual_fuel_cost) IS NOT NULL 
SELECT vehicles_id, MIN(Annual_fuel_cost) AS min, MAX(Annual_fuel_cost) AS max, AVG(Annual_fuel_cost) AS avg 
SELECT Vehicles.id, Vehicles.name, Vehicles.Model_year 
SELECT Vehicles.id, Vehicles.name, Vehicles.Model_year FROM Vehicles WHERE Vehicles.City_fuel_economy_rate <= Vehicles.Highway_fuel_economy_rate; 
SELECT Vehicles.id, Vehicles.Type_of_powertrain, AVG(Vehicles.Annual_fuel_cost) FROM Vehicles GROUP BY Vehicles.Type_of_powertrain HAVING COUNT(Vehicles.id) >= 2 ORDER BY Vehicles.Type_of_powertrain ASC; 
SELECT Vehicles.id, Vehicles.Type_of_powertrain, AVG(Vehicles.Annual_fuel_cost) FROM Vehicles GROUP BY Vehicles.Type_of_powertrain HAVING COUNT(Vehicles.id) >= 2 ORDER BY AVG(Vehicles.Annual_fuel_cost) DESC; 
SELECT Customers.id, Customers.name, Customers.age, Customers.membership_credit FROM Customers 
SELECT Customers.id, Customers.name, Customers.age, Customers.membership_credit FROM Customers 
SELECT Customers.id, Customers.name, Customers.age FROM Customers JOIN Renting_history ON Customers.id = Renting_history.customer_id JOIN Discount ON Renting_history.discount_id = Discount.id WHERE Discount.membership_credit = (SELECT MAX(Discount.membership_credit) FROM Discount) GROUP BY Customers.id, Customers.name, Customers.age HAVING COUNT(*) = (SELECT COUNT(*) FROM Renting_history WHERE Renting_history.customer_id = (SELECT id FROM Customers WHERE Customers.name = 'John Doe' AND Customers.age = 25)) ORDER BY Customers.id, Customers.name, Customers.age LIMIT 1; 
SELECT Customers.id, Customers.name, Customers.age FROM Customers JOIN Renting_history ON Customers.id = Renting_history.customer_id JOIN Discount ON Renting_history.discount_id = Discount.id WHERE Discount.membership_credit = (SELECT MAX(Discount.membership_credit) FROM Discount) GROUP BY Customers.id, Customers.name, Customers.age HAVING COUNT(*) = (SELECT COUNT(*) FROM Renting_history WHERE Renting_history.customer_id = (SELECT id FROM Customers WHERE Customers.name = 'John Doe' AND Customers.age = 25)) ORDER BY Customers.id, Customers.name, Customers.age LIMIT 1; 
SELECT Customers.id, Customers.name, Customers.age, Customers.membership_credit, Discount.name, Discount.membership_credit, Vehicles.name, Vehicles.Model_year, Vehicles.Type_of_powertrain, Vehicles.Combined_fuel_economy_rate, Vehicles.City_fuel_economy_rate, Vehicles.Highway_fuel_economy_rate, Vehicles.Cost_per_25_miles, Vehicles.Annual_fuel_cost, Vehicles.Notes, Renting_history.total_hours 
SELECT Customers.id, Customers.name, Customers.age, Customers.membership_credit, Discount.name, Discount.membership_credit, Vehicles.name, Vehicles.Model_year, Vehicles.Type_of_powertrain, Vehicles.Combined_fuel_economy_rate, Vehicles.City_fuel_economy_rate, Vehicles.Highway_fuel_economy_rate, Vehicles.Cost_per_25_miles, Vehicles.Annual_fuel_cost, Vehicles.Notes, Renting_history.total_hours 
SELECT Discount.id, Discount.name, Discount.membership_credit FROM Discount 
SELECT discount_id, name, membership_credit FROM Discount; 
SELECT Vehicles.id, Vehicles.name, Renting_history.total_hours 
SELECT Vehicles.id, Vehicles.name, SUM(Renting_history.total_hours) as total_hours 
SELECT Vehicles.id, Vehicles.name FROM Vehicles LEFT JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id WHERE Renting_history.id IS NULL; 
SELECT Vehicles.id, Vehicles.name FROM Vehicles LEFT JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id WHERE Renting_history.id IS NULL; 
SELECT Customers.id, Customers.name FROM Customers JOIN Renting_history ON Customers.id = Renting_history.customer_id WHERE Renting_history.total_hours > 2 GROUP BY Customers.id, Customers.name HAVING COUNT(*) > 1 ORDER BY Customers.id, Customers.name; 
SELECT Customers.id, Customers.name 
SELECT Vehicles.id, Vehicles.name, Vehicles.Model_year 
SELECT Vehicles.id, Vehicles.Model_year 
SELECT Vehicles.id, Vehicles.name, Renting_history.total_hours 
SELECT Vehicles.id, Vehicles.name FROM Renting_history, Vehicles WHERE Renting_history.vehicles_id = Vehicles.id GROUP BY Vehicles.id ORDER BY SUM(total_hours) DESC; 
SELECT discount_id, COUNT(*) AS count 
SELECT Discount.id, Discount.name 
SELECT Vehicles.id, Vehicles.name, Vehicles.Type_of_powertrain 
SELECT Vehicles.id, Vehicles.name, Vehicles.Type_of_powertrain 
SELECT vehicles_id, AVG(City_fuel_economy_rate) AS avg_city_fuel_rate, AVG(Highway_fuel_economy_rate) AS avg_highway_fuel_rate 
SELECT vehicles_id, AVG(City_fuel_economy_rate) AS avg_city_fuel_economy_rate, AVG(Highway_fuel_economy_rate) AS avg_highway_fuel_economy_rate 
SELECT student_id, AVG(amount_of_loan) FROM Student_Loans GROUP BY student_id; 
SELECT student_id, AVG(amount_of_loan) FROM Student_Loans GROUP BY student_id; 
SELECT Students.student_id, Students.bio_data FROM Students INNER JOIN Classes ON Students.student_id = Classes.student_id WHERE Classes.class_id IN (SELECT Classes.class_id FROM Classes GROUP BY Classes.class_id HAVING COUNT(Classes.class_id) > 1) UNION SELECT Students.student_id, Students.bio_data FROM Students INNER JOIN Detention ON Students.student_id = Detention.student_id WHERE Detention.detention_id IN (SELECT Detention.detention_id FROM Detention GROUP BY Detention.detention_id HAVING COUNT(Detention.detention_id) < 2) ORDER BY Students.student_id ASC; 
SELECT Students.student_id, Students.bio_data FROM Students 
SELECT Teachers.achievement_details 
SELECT Teachers.achievement_details 
SELECT Students.student_id, Students.bio_data FROM Students LEFT JOIN Detention ON Students.student_id = Detention.student_id LEFT JOIN Student_Loans ON Students.student_id = Student_Loans.student_id WHERE Detention.student_id IS NULL AND Student_Loans.student_id IS NULL; 
SELECT Students.student_id, Students.bio_data FROM Students LEFT JOIN Detention ON Students.student_id = Detention.student_id LEFT JOIN Student_Loans ON Students.student_id = Student_Loans.student_id WHERE Detention.student_id IS NULL AND Student_Loans.student_id IS NULL; 
SELECT student_id, amount_of_loan, date_of_loan FROM Student_Loans WHERE student_id IN (SELECT student_id FROM Achievements WHERE student_id IN (SELECT student_id FROM Achievements GROUP BY student_id HAVING COUNT(*) >= 2)) ORDER BY student_id ASC; 
SELECT student_id, amount_of_loan, date_of_loan FROM Student_Loans WHERE student_id IN (SELECT student_id FROM Achievements WHERE achievement_type_code = 'A' GROUP BY student_id HAVING COUNT(*) >= 2); 
SELECT Teachers.achievement_details, Teachers.teacher_id 
SELECT Teachers.achievement_details, Teachers.teacher_id FROM Teachers INNER JOIN Classes ON Teachers.teacher_id = Classes.teacher_id WHERE Classes.class_details = (SELECT Classes.class_details FROM Classes GROUP BY Classes.class_details HAVING COUNT(Classes.class_details) = (SELECT COUNT(Classes.class_details) FROM Classes GROUP BY Classes.class_details ORDER BY COUNT(Classes.class_details) DESC LIMIT 1)) ORDER BY Teachers.teacher_id ASC; 
SELECT achievement_details 
SELECT achievement_details FROM Achievements WHERE achievement_type_code = 'A1' AND date_achievement > '2019-01-01' AND date_achievement < '2019-12-31' ORDER BY date_achievement DESC; 
SELECT Students.student_id, Students.bio_data, Students.student_details, Addresses.address_details, Ref_Address_Types.address_type_description FROM Students INNER JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id INNER JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id INNER JOIN Ref_Address_Types ON Students_Addresses.address_type_code = Ref_Address_Types.address_type_code; 
SELECT Students.student_id, Students.bio_data, Students.student_details, Addresses.address_details, Ref_Address_Types.address_type_description FROM Students INNER JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id INNER JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id INNER JOIN Ref_Address_Types ON Students_Addresses.address_type_code = Ref_Address_Types.address_type_code; 
SELECT Students.student_id, Students.bio_data, Addresses.address_details 
SELECT Students.student_id, Students.bio_data, Students.student_details, Addresses.address_details FROM Students JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id; 
SELECT Students.student_id, Students.bio_data, Transcripts.date_of_transcript FROM Students INNER JOIN Transcripts ON Students.student_id = Transcripts.student_id; 
SELECT Students.student_id, Students.bio_data, Transcripts.date_of_transcript FROM Students JOIN Transcripts ON Students.student_id = Transcripts.student_id; 
SELECT student_id, COUNT(*) AS count 
SELECT achievement_details, COUNT(*) AS count FROM Achievements GROUP BY achievement_details ORDER BY count DESC LIMIT 1; 
SELECT Students.student_id, Students.bio_data, Students.student_details 
SELECT Students.student_id, Students.bio_data, Students.student_details 
SELECT student_id, bio_data, student_details FROM Students WHERE student_id IN (SELECT student_id FROM Behaviour_Monitoring WHERE behaviour_monitoring_details IN (SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details HAVING COUNT(*) = (SELECT COUNT(*) FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY COUNT(*) DESC LIMIT 1))) 
SELECT Students.student_id, Students.bio_data, Students.student_details, Behaviour_Monitoring.behaviour_monitoring_details 
SELECT Students.student_id, Students.bio_data, Student_Events.event_date FROM Students INNER JOIN Student_Events ON Students.student_id = Student_Events.student_id WHERE Student_Events.event_type_code IN ('EVENT_TYPE_CODE') ORDER BY Students.student_id ASC, Student_Events.event_date ASC; 
SELECT Students.student_id, Students.bio_data, Student_Events.event_date FROM Students INNER JOIN Student_Events ON Students.student_id = Student_Events.student_id WHERE Student_Events.event_type_code IN ('event_type_code') AND Student_Events.event_date IS NOT NULL 
SELECT Students.student_id, Ref_Event_Types.event_type_description, COUNT(Students.student_id) AS 'Number of Students' 
SELECT Ref_Event_Types.achievement_type_code, Ref_Event_Types.achievement_type_description, COUNT(Student_Events.event_id) AS event_count 
SELECT achievement_details, achievement_type_description FROM Achievements INNER JOIN Ref_Achievement_Type ON Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code 
SELECT achievement_details, achievement_type_description FROM Achievements INNER JOIN Ref_Achievement_Type ON Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code 
SELECT Teachers.achievement_details 
SELECT Teachers.achievement_details FROM Teachers WHERE Teachers.achievement_details NOT IN (SELECT Achievements.achievement_details FROM Achievements WHERE Achievements.achievement_details IS NOT NULL); 
SELECT date_achievement, achievement_details FROM Achievements WHERE achievement_type_code = 'A1' ORDER BY date_achievement DESC; 
SELECT date_achievement, achievement_details FROM Achievements WHERE achievement_type_code = 'A1' AND date_achievement BETWEEN '2019-01-01' AND '2019-12-31' ORDER BY date_achievement ASC; 
SELECT achievement_type_code, achievement_details, date_achievement 
SELECT achievement_type_code, achievement_details, date_achievement FROM Achievements 
SELECT date_achievement, datetime_detention_start, datetime_detention_end 
SELECT Students.student_id,  
SELECT Students.student_id, Students.bio_data, Students.student_details 
SELECT student_id, bio_data, student_details FROM Students WHERE student_details LIKE '%Suite%'; 
SELECT Teachers.achievement_details, Students.achievement_details 
SELECT Teachers.achievement_details, Students.achievement_details FROM Teachers, Students, Classes WHERE Teachers.teacher_id = Classes.teacher_id AND Students.student_id = Classes.student_id AND Teachers.teacher_details = Students.student_details; 
SELECT Teachers.achievement_type_code, Teachers.teacher_details, Teachers.class_details, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_loan_id, Teachers.behaviour_monitoring_id, Teachers.transcript_id, Teachers.address_id, Teachers.detention_id, Teachers.address_type_code, Teachers.detention_type_code, Teachers.event_type_code, Teachers.achievement_type_description, Teachers.address_type_description, Teachers.detention_type_description, Teachers.event_type_description, Teachers.student_details, Teachers.bio_data, Teachers.other_details, Teachers.date_of_transcript, Teachers.behaviour_monitoring_details, Teachers.transcript_details, Teachers.address_details, Teachers.detention_summary, Teachers.date_of_loan, Teachers.date_from, Teachers.date_to, Teachers.datetime_detention_start, Teachers.datetime_detention_end, Teachers.event_date, Teachers.amount_of_loan, Teachers.other_details, Teachers.student_address_id, Teachers.student_loan_id, Teachers.behaviour_monitoring_id, Teachers.transcript_id, Teachers.address_id, Teachers.detention_id, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_address_id, Teachers.address_id, Teachers.detention_id, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_address_id, Teachers.address_id, Teachers.detention_id, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_address_id, Teachers.address_id, Teachers.detention_id, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_address_id, Teachers.address_id, Teachers.detention_id, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_address_id, Teachers.address_id, Teachers.detention_id, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_address_id, Teachers.address_id, Teachers.detention_id, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_address_id, Teachers.address_id, Teachers.detention_id, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_address_id, Teachers.address_id, Teachers.detention_id, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_address_id, Teachers.address_id, Teachers.detention_id, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_address_id, Teachers.address_id, Teachers.detention_id, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_address_id, Teachers.address_id, Teachers.detention_id, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_address_id, Teachers.address_id, Teachers.detention_id, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_address_id, Teachers.address_id, Teachers.detention_id, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_address_id, Teachers.address_id, Teachers.detention_id, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_address_id, Teachers.address_id, Teachers.detention_id, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_address_id, Teachers.address_id, Teachers.detention_id, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_address_id, Teachers.address_id, Teachers.detention_id, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_address_id, Teachers.address_id, Teachers.detention_id, Teachers.student_id, Teachers.class_id, Teachers.teacher_id, Teachers.student_address_id, Teachers
SELECT Teachers.achievement_type_code, COUNT(Students.achievement_type_code) AS 'Number of courses' 
SELECT student_id, COUNT(*) AS num_courses FROM Classes GROUP BY student_id ORDER BY num_courses DESC LIMIT 1; 
SELECT student_id, COUNT(*) AS num_courses FROM Classes GROUP BY student_id ORDER BY num_courses DESC LIMIT 1; 
SELECT Students.student_id, Students.bio_data, Students.student_details 
SELECT Students.student_id, Students.bio_data, Students.student_details, Classes.class_id, Classes.class_details FROM Students INNER JOIN Classes ON Students.student_id = Classes.student_id WHERE Classes.class_id IN (SELECT Classes.class_id FROM Classes GROUP BY Classes.class_id HAVING COUNT(Classes.class_id) = 2) ORDER BY Students.student_id ASC; 
SELECT Ref_Detention_Type.date_achievement, Ref_Detention_Type.achievement_details, Ref_Detention_Type.other_details 
SELECT Ref_Detention_Type.date_achievement, Ref_Detention_Type.achievement_details, Ref_Detention_Type.other_details 
SELECT Students.student_id, Students.bio_data, Students.student_details 
SELECT Students.student_id, Students.bio_data, Students.student_details 
SELECT date_achievement FROM Achievements WHERE achievement_type_code = 'A1' ORDER BY date_achievement ASC LIMIT 1; 
SELECT date_achievement FROM Achievements WHERE achievement_type_code = 'A1' ORDER BY date_achievement ASC LIMIT 1; 
SELECT Students.student_id, Students.bio_data, Students.student_details 
SELECT Students.student_id, Students.bio_data, Students.student_details 
SELECT date_achievement FROM Achievements WHERE student_id = (SELECT student_id FROM Student_Loans WHERE amount_of_loan = (SELECT MAX(amount_of_loan) FROM Student_Loans)) AND achievement_type_code = 'A1' ORDER BY date_achievement DESC LIMIT 1; 
SELECT date_achievement FROM Achievements WHERE achievement_type_code = 'A1' AND student_id = (SELECT student_id FROM Student_Loans ORDER BY amount_of_loan DESC LIMIT 1); 
SELECT Teachers.achievement_details 
SELECT Teachers.achievement_details 
SELECT student_id, SUM(amount_of_loan) FROM Student_Loans GROUP BY student_id; 
SELECT student_id, SUM(amount_of_loan) FROM Student_Loans GROUP BY student_id; 
SELECT Students.student_id, Students.bio_data, COUNT(Classes.class_id) AS course_count FROM Students LEFT JOIN Classes ON Students.student_id = Classes.student_id GROUP BY Students.student_id, Students.bio_data; 
SELECT Students.student_id, Students.bio_data, COUNT(Classes.class_id) AS num_courses FROM Students LEFT JOIN Classes ON Students.student_id = Classes.student_id GROUP BY Students.student_id 
SELECT student_id FROM Detention WHERE datetime_detention_start <= datetime('2020-01-01 00:00:00') AND datetime_detention_end >= datetime('2020-01-01 00:00:00') GROUP BY student_id HAVING COUNT(*) > 1; 
SELECT student_id FROM Detention WHERE datetime_detention_start IS NOT NULL AND datetime_detention_end IS NOT NULL GROUP BY student_id HAVING COUNT(*) > 1 
SELECT Ref_Address_Types.achievement_type_code, Ref_Address_Types.achievement_type_description 
SELECT Ref_Address_Types.achievement_type_code, Ref_Address_Types.achievement_type_description 
SELECT Students.student_id, Students.bio_data, Students.student_details 
SELECT Students.student_id, Students.bio_data, Students.student_details 
SELECT Students.student_id, StudentsAddresses.date_from, StudentsAddresses.date_to 
SELECT Students.student_id, StudentsAddresses.date_from, StudentsAddresses.date_to 
SELECT student_id, datetime_detention_start FROM Detention 
SELECT Students.student_id, Students.bio_data, Students.student_details, Transcripts.transcript_id, Transcripts.student_id, Transcripts.date_of_transcript, Transcripts.transcript_details, Behaviour_Monitoring.behaviour_monitoring_id, Behaviour_Monitoring.student_id, Behaviour_Monitoring.behaviour_monitoring_details, Addresses.address_id, Addresses.address_details, Ref_Event_Types.event_type_code, Ref_Event_Types.event_type_description, Ref_Achievement_Type.achievement_type_code, Ref_Achievement_Type.achievement_type_description, Ref_Address_Types.address_type_code, Ref_Address_Types.address_type_description, Ref_Detention_Type.detention_type_code, Ref_Detention_Type.detention_type_description, Student_Events.event_id, Student_Events.event_type_code, Student_Events.student_id, Student_Events.event_date, Student_Events.other_details, Teachers.teacher_id, Teachers.teacher_details, Student_Loans.student_loan_id, Student_Loans.student_id, Student_Loans.date_of_loan, Student_Loans.amount_of_loan, Student_Loans.other_details, Classes.class_id, Classes.student_id, Classes.teacher_id, Classes.class_details, Students_Addresses.student_address_id, Students_Addresses.address_id, Students_Addresses.address_type_code, Students_Addresses.student_id, Students_Addresses.date_from, Students_Addresses.date_to, Detention.detention_id, Detention.detention_type_code, Detention.student_id, Detention.datetime_detention_start, Detention.datetime_detention_end, Detention.detention_summary, Detention.other_details, Achievements.achievement_id, Achievements.achievement_type_code, Achievements.student_id, Achievements.date_achievement, Achievements.achievement_details, Achievements.other_details 
SELECT Author.IdOrder, Author.Name FROM Author, Book, Author_Book, Orders WHERE Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Author_Book.IdOrder AND Author.IdOrder = Book.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder AND Author.IdOrder = Orders.IdOrder
SELECT Author.IdOrder, Author.Name 
SELECT Client.IdOrder, Client.Name, Client.Address FROM Client, Orders WHERE Client.IdClient = Orders.IdClient; 
SELECT Client.IdOrder, Client.Name, Client.Address 
SELECT Book.ISBN, Book.Title, Book.SalePrice 
SELECT Book.ISBN, Book.Title, Book.SalePrice 
SELECT Books_Order.ISBN, COUNT(Books_Order.ISBN) FROM Books_Order GROUP BY Books_Order.ISBN HAVING COUNT(Books_Order.ISBN) > 1; 
SELECT Books_Order.ISBN, COUNT(Books_Order.ISBN) FROM Books_Order GROUP BY Books_Order.ISBN HAVING COUNT(Books_Order.ISBN) > 1; 
SELECT Author.IdOrder, Author.Name, Author.Address, Author.NumCC, Orders.IdOrder, Orders.DateOrder, Orders.DateExped, Client.IdClient, Client.Name, Client.Address, Client.NumCC 
SELECT Author_Book.ISBN, Author_Book.Author, COUNT(Author_Book.Author) AS numAuthors 
SELECT IdOrder FROM Orders WHERE DateOrder > '2019-01-01' AND DateOrder < '2019-01-31' AND IdClient IN (SELECT IdClient FROM Client WHERE Name LIKE 'A%'); 
SELECT IdOrder FROM Orders WHERE IdClient = 'C0001' AND DateOrder > '2019-01-01' AND DateOrder < '2019-01-31' AND DateExped > '2019-01-01' AND DateExped < '2019-01-31' ORDER BY DateExped DESC; 
SELECT Client.IdOrder, Client.Name, Client.Address 
SELECT Client.IdOrder, Client.Name, Client.Address 
SELECT Book.ISBN, Book.Title, Author.Name 
SELECT Book.ISBN, Book.Title, Author.Name FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor 
SELECT Orders.IdOrder, Client.Name FROM Orders, Client WHERE Orders.IdClient = Client.IdClient; 
SELECT Orders.IdOrder, Client.Name 
SELECT Author.IdOrder, Author.Name, COUNT(Book.ISBN) AS NumBooks 
SELECT Author.IdOrder, Author.Name, COUNT(Book.ISBN) AS numBooks 
SELECT Book.ISBN, COUNT(Orders.IdOrder) FROM Book, Orders WHERE Book.ISBN = Orders.IdClient GROUP BY Book.ISBN; 
SELECT ISBN, COUNT(*) FROM Books_Order GROUP BY ISBN; 
SELECT Book.ISBN, SUM(Books_Order.amount) FROM Book INNER JOIN Books_Order ON Book.ISBN = Books_Order.ISBN GROUP BY Book.ISBN; 
SELECT ISBN, SUM(amount) FROM Books_Order GROUP BY ISBN; 
SELECT Book.ISBN, Book.Title 
SELECT Book.ISBN, Book.Title, COUNT(Books_Order.IdOrder) as num_orders 
SELECT Book.ISBN, Book.Title, Book.PurchasePrice 
SELECT Book.ISBN, Book.Title, Book.PurchasePrice 
SELECT Book.ISBN, Book.Title 
SELECT Book.ISBN, Book.Title 
SELECT Client.IdOrder, Client.Name 
SELECT Client.IdOrder, Client.Name 
SELECT Client.IdOrder, Client.Name, COUNT(Orders.IdOrder) AS numOrders 
SELECT Client.IdOrder, Client.Name, COUNT(Orders.IdOrder) FROM Client, Orders WHERE Client.IdClient = Orders.IdClient GROUP BY Client.IdOrder, Client.Name ORDER BY Client.Name ASC; 
SELECT Client.IdOrder, Client.Name, COUNT(Orders.IdOrder) FROM Client, Orders WHERE Client.IdOrder = Orders.IdOrder GROUP BY Client.IdOrder, Client.Name ORDER BY COUNT(Orders.IdOrder) DESC LIMIT 1; 
SELECT Client.IdOrder, Client.Name, COUNT(Orders.IdOrder) FROM Client, Orders WHERE Client.IdOrder = Orders.IdOrder GROUP BY Client.IdOrder, Client.Name ORDER BY COUNT(Orders.IdOrder) DESC LIMIT 1; 
SELECT Client.IdOrder, Client.Name, SUM(Books_Order.amount) as TotalAmount 
SELECT Client.IdOrder, Client.Name, SUM(Books_Order.amount) FROM Client, Books_Order WHERE Client.IdOrder = Books_Order.IdOrder GROUP BY Client.IdOrder, Client.Name ORDER BY Client.IdOrder, Client.Name; 
SELECT Client.IdOrder, Client.Name, SUM(Books_Order.amount) as total_amount 
SELECT Client.IdOrder, Client.Name, SUM(Books_Order.amount) as TotalAmount 
SELECT Book.ISBN, Book.Title 
SELECT Book.ISBN, Book.Title 
SELECT Client.IdOrder, Client.Name 
SELECT Client.IdOrder, Client.Name 
SELECT Books_Order.IdOrder, Books_Order.ISBN, Book.SalePrice 
SELECT Books_Order.IdOrder, Books_Order.ISBN, Book.SalePrice 
SELECT Books_Order.ISBN, AVG(Book.PurchasePrice) as avg_purchase_price, AVG(Book.SalePrice) as avg_sale_price 
SELECT Books_Order.ISBN, AVG(Book.PurchasePrice), AVG(Book.SalePrice) 
SELECT ISBN, Title, Author, PurchasePrice, SalePrice, SalePrice - PurchasePrice AS MaxDiff 
SELECT ISBN, Title, Author, PurchasePrice, SalePrice,  
SELECT Book.ISBN, Book.Title 
SELECT Book.ISBN, Book.Title 
SELECT Book.ISBN, Book.Title 
SELECT Book.ISBN, Book.Title 
SELECT Book.ISBN, Book.Title 
SELECT Book.ISBN, Book.Title 
SELECT Books_Order.IdOrder, Orders.DateOrder, Orders.DateExped, Client.Name, Client.Address, Client.NumCC, Book.Title, Book.SalePrice 
SELECT Books_Order.IdOrder, Orders.DateOrder, Orders.DateExped, Client.Name, Client.Address, Client.NumCC, Book.Title, Book.SalePrice, Author.Name 
SELECT Book.ISBN, Book.Title, Book.SalePrice 
SELECT Book.ISBN, Book.SalePrice 
SELECT Book.ISBN, Book.Title, Book.SalePrice 
SELECT Book.ISBN, Book.Title, Book.SalePrice 
SELECT Book.ISBN, Book.Title, Book.SalePrice 
SELECT Book.ISBN, Book.Title 
SELECT Author.ISBN, Author.Author, Book.Title 
SELECT Author.IdOrder 
SELECT Book.ISBN, Book.Title 
SELECT Book.ISBN, Book.Title 
SELECT IdOrder FROM Orders WHERE IdClient = 'C0001' AND DateOrder = '2019-01-01' AND DateExped = '2019-01-01' AND IdOrder IN (SELECT IdOrder FROM Orders WHERE IdClient = 'C0001' AND DateOrder = '2019-01-01' AND DateExped = '2019-01-01' AND IdOrder IN (SELECT IdOrder FROM Orders WHERE IdClient = 'C0001' AND DateOrder = '2019-01-01' AND DateExped = '2019-01-01' AND IdOrder IN (SELECT IdOrder FROM Orders WHERE IdClient = 'C0001' AND DateOrder = '2019-01-01' AND DateExped = '2019-01-01' AND IdOrder IN (SELECT IdOrder FROM Orders WHERE IdClient = 'C0001' AND DateOrder = '2019-01-01' AND DateExped = '2019-01-01' AND IdOrder IN (SELECT IdOrder FROM Orders WHERE IdClient = 'C0001' AND DateOrder = '2019-01-01
SELECT IdOrder FROM Orders WHERE IdClient = 'Pride and Prejudice' ORDER BY IdOrder; 
SELECT Orders.IdOrder FROM Orders 
SELECT Orders.IdOrder 
SELECT Book.ISBN FROM Book 
SELECT ISBN FROM Book WHERE Title IN (SELECT Title FROM Book WHERE Author IN (SELECT idAuthor FROM Author WHERE Name IN (SELECT Name FROM Client WHERE Name IN ('Peter Doe', 'James Smith')))) ORDER BY ISBN; 
SELECT Book.ISBN, Book.Title 
SELECT Book.ISBN, Book.Title 
SELECT Client.IdOrder, Client.Name 
SELECT Client.IdOrder, Client.Name 
SELECT Book_ID FROM book 
SELECT book.Book_ID, book.Title 
SELECT book.Book_ID, book.Title, book.Pages 
SELECT book.Book_ID, book.Title, book.Type, book.Pages, book.Chapters, book.Audio, book.Release 
SELECT Book_ID, MAX(Chapters), MIN(Chapters) FROM book GROUP BY Book_ID; 
SELECT book.Book_ID, book.Title 
SELECT Rating FROM review 
SELECT book.Book_ID, book.Title, review.Rating FROM book, review WHERE book.Book_ID = review.Book_ID ORDER BY review.Rating DESC; 
SELECT Rating FROM review WHERE Book_ID = (SELECT Book_ID FROM book WHERE Chapters = (SELECT MAX(Chapters) FROM book)); 
SELECT Rank FROM review WHERE Book_ID = (SELECT Book_ID FROM book WHERE Pages = (SELECT MIN(Pages) FROM book)); 
SELECT book.Book_ID, book.Title, review.Rank 
SELECT Rating, Readers_in_Million FROM review WHERE Book_ID IN (SELECT Book_ID FROM book WHERE Type = 'Novel') GROUP BY Rating HAVING AVG(Readers_in_Million) > 0 ORDER BY AVG(Readers_in_Million) DESC LIMIT 1; 
SELECT book.Book_ID, book.Title, book.Type, book.Pages, book.Chapters, book.Audio, book.Release, review.Rating, review.Readers_in_Million, review.Rank 
SELECT book.Book_ID, book.Title, book.Type, book.Pages, book.Chapters, book.Audio, book.Release, review.Rating, review.Readers_in_Million, review.Rank 
SELECT book.Book_ID, book.Title, book.Type, book.Pages, book.Chapters, book.Audio, book.Release 
SELECT book.Book_ID, book.Title, review.Rating 
SELECT book.Book_ID, book.Title, book.Audio, review.Readers_in_Million FROM book JOIN review ON book.Book_ID = review.Book_ID ORDER BY review.Readers_in_Million DESC; 
SELECT book.Book_ID FROM book WHERE book.Book_ID NOT IN (SELECT review.Book_ID FROM review)  
SELECT book.Book_ID, book.Title, book.Type, book.Pages, book.Chapters, book.Audio, book.Release FROM book WHERE book.Chapters > 75 AND book.Chapters < 50; 
SELECT Book_ID, Title, Type FROM book GROUP BY Type HAVING COUNT(*) = 1 
SELECT book.Book_ID, book.Title 
SELECT Customer_ID FROM customer 
SELECT Customer_ID FROM customer 
SELECT customer.Customer_ID, customer.Name, customer.Nationality, customer.Card_Credit, customer.Level_of_Membership 
SELECT customer.Customer_ID, customer.Name FROM customer ORDER BY customer.Level_of_Membership ASC; 
SELECT customer.Customer_ID, customer.Name, customer.Nationality, customer.Card_Credit 
SELECT customer.Customer_ID, customer.Name, customer.Nationality, customer.Card_Credit 
SELECT customer.Customer_ID, customer.Name FROM customer WHERE customer.Nationality IN ('England', 'Australia') ORDER BY customer.Customer_ID ASC; 
SELECT customer.Customer_ID, customer.Name FROM customer WHERE customer.Nationality IN ('England', 'Australia') ORDER BY customer.Customer_ID ASC; 
SELECT Customer_ID, AVG(Card_Credit) FROM customer WHERE Level_of_Membership > 1 GROUP BY Customer_ID; 
SELECT Customer_ID, AVG(Card_Credit) FROM customer WHERE Level_of_Membership > 1 GROUP BY Customer_ID; 
SELECT customer.Customer_ID, customer.Name, customer.Nationality, customer.Card_Credit, customer.Level_of_Membership 
SELECT customer.Customer_ID, customer.Name, customer.Nationality, customer.Card_Credit, customer.Level_of_Membership 
SELECT customer.Customer_ID, customer.Name, customer.Nationality, COUNT(customer.Customer_ID) AS num_customers 
SELECT customer_order.Customer_ID, customer_order.Branch_ID, customer_order.Dish_Name, customer_order.Quantity, customer.Name, customer.Nationality, branch.Manager, branch.Years_opened, branch.Location_of_office FROM customer_order INNER JOIN customer ON customer_order.Customer_ID = customer.Customer_ID INNER JOIN branch ON customer_order.Branch_ID = branch.Branch_ID ORDER BY customer_order.Customer_ID, customer_order.Branch_ID, customer_order.Dish_Name, customer_order.Quantity, customer.Name, customer.Nationality, branch.Manager, branch.Years_opened, branch.Location_of_office 
SELECT customer.Customer_ID, customer.Name, customer.Nationality, customer.Card_Credit, customer.Level_of_Membership, branch.Branch_ID, branch.Manager, branch.Years_opened, branch.Location_of_office FROM customer, branch WHERE customer.Customer_ID = branch.Branch_ID ORDER BY customer.Nationality DESC LIMIT 1; 
SELECT customer.Customer_ID, customer.Name, customer.Nationality, COUNT(customer_order.Customer_ID) AS num_customers 
SELECT customer.Customer_ID, customer.Name, customer.Nationality, customer.Card_Credit, customer.Level_of_Membership, branch.Branch_ID, branch.Manager, branch.Years_opened, branch.Location_of_office 
SELECT customer.Customer_ID, customer.Name, customer.Nationality, customer.Card_Credit, customer.Level_of_Membership, branch.Branch_ID, branch.Manager, branch.Years_opened, branch.Location_of_office 
SELECT customer.Customer_ID, customer.Name, customer_order.Dish_Name 
SELECT customer.Customer_ID, customer.Name, customer_order.Dish_Name 
SELECT customer.Customer_ID, customer.Name, customer_order.Dish_Name, customer_order.Quantity FROM customer, customer_order WHERE customer.Customer_ID = customer_order.Customer_ID ORDER BY customer_order.Quantity DESC; 
SELECT customer.Customer_ID, customer.Name, customer_order.Dish_Name, customer_order.Quantity FROM customer, customer_order WHERE customer.Customer_ID = customer_order.Customer_ID ORDER BY customer_order.Quantity DESC; 
SELECT customer.Customer_ID, customer.Name, SUM(customer_order.Quantity) AS Total_Quantity 
SELECT customer.Customer_ID, customer.Name, SUM(customer_order.Quantity) AS Total_Quantity 
SELECT customer.Customer_ID, customer.Name, customer.Nationality, customer.Card_Credit, customer.Level_of_Membership, SUM(customer_order.Quantity) AS Total_Quantity FROM customer LEFT JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID GROUP BY customer.Customer_ID HAVING SUM(customer_order.Quantity) > 1 ORDER BY Total_Quantity DESC; 
SELECT customer.Customer_ID, customer.Name 
SELECT branch.Branch_ID, branch.Manager 
SELECT branch.Branch_ID, branch.Manager 
SELECT customer.Customer_ID, customer.Name FROM customer WHERE customer.Customer_ID NOT IN (SELECT customer_order.Customer_ID FROM customer_order)  
SELECT customer.Customer_ID, customer.Name 
SELECT Member_ID, Name, Nationality, Age FROM member; 
SELECT member.Member_ID, member.Name, member.Age 
SELECT member.Member_ID, member.Name, member.Nationality 
SELECT member.Member_ID, member.Name 
SELECT member.Member_ID, member.Name 
SELECT member.Member_ID, member.Name, member.Age 
SELECT member.Member_ID, member.Name, member.Nationality, member.Age, club.Club_ID, club.Overall_Ranking, club.Team_Leader, club.Club_Name, club_leader.Year_Join 
SELECT member.Member_ID, member.Name, member.Nationality, member.Age, club.Club_ID, club.Overall_Ranking, club.Team_Leader, club.Club_Name 
SELECT member.Member_ID, member.Name, member.Nationality, member.Age, club.Club_ID, club.Overall_Ranking, club.Team_Leader, club.Club_Name 
SELECT club_leader.Member_ID, club_leader.Year_Join, club.Club_Name, member.Name FROM club_leader JOIN club ON club_leader.Club_ID = club.Club_ID JOIN member ON club_leader.Member_ID = member.Member_ID 
SELECT club_leader.Member_ID, member.Name FROM club_leader JOIN member ON club_leader.Member_ID = member.Member_ID WHERE club_leader.Club_ID IN (SELECT Club_ID FROM club WHERE Overall_Ranking > 100) ORDER BY club_leader.Member_ID ASC; 
SELECT club_leader.Member_ID, member.Name FROM club_leader JOIN member ON club_leader.Member_ID = member.Member_ID WHERE club_leader.Year_Join < '2018' ORDER BY club_leader.Member_ID ASC; 
SELECT club_leader.Member_ID, club_leader.Year_Join, club.Team_Leader, club.Club_Name, member.Name FROM club_leader JOIN club ON club_leader.Club_ID = club.Club_ID JOIN member ON club_leader.Member_ID = member.Member_ID WHERE club.Club_Name = 'Houston' ORDER BY club_leader.Year_Join DESC LIMIT 1; 
SELECT member.Member_ID, member.Name 
SELECT member.Member_ID, member.Name, member.Nationality, member.Age FROM member WHERE member.Age > 22 AND member.Age < 19; 
SELECT Member_ID, Name, Nationality, Age FROM member WHERE Member_ID IN (SELECT Club_ID FROM club_leader WHERE Member_ID IN (SELECT Member_ID FROM member WHERE Name = 'John Doe') AND Year_Join = '2019') ORDER BY Age DESC; 
SELECT club.Club_ID, club.Club_Name 
SELECT Collection_Subset_Members.Collection_Subset_ID, Collection_Subsets.Collection_Subset_Name 
SELECT Collection_Subset_Members.Collection_Subset_ID, Collection_Subsets.Collection_Subset_Name 
SELECT Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_Details 
SELECT Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_ID, Collection_Subset_Members.Related_Collection_ID, Collection_Subset_Members.Collection_Subset_Details, Collections.Collection_Name, Collections.Collection_Description FROM Collection_Subset_Members JOIN Collections ON Collection_Subset_Members.Collection_ID = Collections.Collection_ID WHERE Collection_Subset_Members.Collection_Subset_Name = 'Top collection' AND Collection_Subset_Members.Collection_Subset_ID = Collections.Collection_ID;  
SELECT Document_Subset_Members.Related_Collection_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_Name, Document_Subset_Members.Document_Subset_Details FROM Document_Subset_Members WHERE Document_Subset_Members.Document_Object_ID IN (SELECT Document_Objects.Document_Object_ID FROM Document_Objects WHERE Document_Objects.Owner = 'John Doe' AND Document_Objects.Description = 'This is a description' AND Document_Objects.Other_Details = 'This is other details') AND Document_Subset_Members.Document_Subset_ID IN (SELECT Document_Subset_Members.Document_Subset_ID FROM Document_Subset_Members WHERE Document_Subset_Members.Document_Object_ID IN (SELECT Document_Objects.Document_Object_ID FROM Document_Objects WHERE Document_Objects.Owner = 'John Doe' AND Document_Objects.Description = 'This is a description' AND Document_Objects.Other_Details = 'This is other details')) AND Document_Subset_Members.Document_Subset_ID IN (SELECT Document_Subset_Members.Document_Subset_ID FROM Document_Subset_Members WHERE Document_Subset_Members.Document_Object_ID IN (SELECT Document_Objects.Document_Object_ID FROM Document_Objects WHERE Document_Objects.Owner = 'John Doe' AND Document_Objects.Description = 'This is a description' AND Document_Objects.Other_Details = 'This is other details')) AND Document_Subset_Members.Document_Subset_ID IN (SELECT Document_Subset_Members.Document_Subset_ID FROM Document_Subset_Members WHERE Document_Subset_Members.Document_Object_ID IN (SELECT Document_Objects.Document_Object_ID FROM Document_Objects WHERE Document_Objects.Owner = 'John Doe' AND Document_Objects.Description = 'This is a description' AND Document_Objects.Other_Details = 'This is other details')) AND Document_Subset_Members.Document_Subset_ID IN (SELECT Document_Subset_Members.Document_Subset_ID FROM Document_Subset_Members WHERE Document_Subset_Members.Document_Object_ID IN (SELECT Document_Objects.Document_Object_ID FROM Document_Objects WHERE Document_Objects.Owner = 'John Doe' AND Document_Objects.Description = 'This is a description' AND Document_Objects.Other_Details = 'This is other details')) AND Document_Subset_Members.Document_Subset_ID IN (SELECT Document_Subset_Members.Document_Subset_ID FROM Document_Sub
SELECT Document_Subset_Members.Related_Collection_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members
SELECT Document_Subset_Members.Related_Collection_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Sub
SELECT Document_Subset_Members.Related_Collection_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID
SELECT Document_Objects.Related_Collection_ID 
SELECT Document_Objects.Related_Collection_ID 
SELECT Document_Objects.Related_Collection_ID 
SELECT Document_Objects.Related_Collection_ID 
SELECT Document_Objects.Related_Collection_ID 
SELECT Document_Objects.Related_Collection_ID, Document_Object.owners FROM Document_Object, Document_Subset_Members, Document_Subset, Collection_Subset_Members, Collection_Subset, Collection WHERE Document_Object.Parent_Document_Object_ID = Document_Subset_Members.Document_Object_ID AND Document_Subset_Members.Document_Subset_ID = Document_Subset.Document_Subset_ID AND Document_Subset.Document_Subset_Name = 'Braeden Collection' AND Document_Subset_Members.Related_Document_Object_ID = Document_Object.Document_Object_ID AND Document_Object.Owner = 'Braeden' AND Document_Subset_Members.Document_Subset_ID = Collection_Subset_Members.Collection_Subset_ID AND Collection_Subset_Members.Collection_Subset_ID = Collection_Subset.Collection_Subset_ID AND Collection_Subset.Collection_Subset_Name = 'Braeden Collection' AND Collection_Subset_Members.Collection_ID = Collection.Collection_ID AND Collection.Collection_Name = 'Braeden Collection' AND Collection.Collection_ID = Document_Object.Parent_Collection_ID AND Document_Object.Owner = 'Braeden' AND Document_Object.Description = 'Braeden Collection' AND Document_Object.Other_Details = 'Braeden Collection' AND Document_Object.Owner = 'Braeden' AND Document_Object.Description = 'Braeden Collection' AND Document_Object.Other_Details = 'Braeden Collection' AND Document_Object.Owner = 'Braeden' AND Document_Object.Description = 'Braeden Collection' AND Document_Object.Other_Details = 'Braeden Collection' AND Document_Object.Owner = 'Braeden' AND Document_Object.Description = 'Braeden Collection' AND Document_Object.Other_Details = 'Braeden Collection' AND Document_Object.Owner = 'Braeden' AND Document_Object.Description = 'Braeden Collection' AND Document_Object.Other_Details = 'Braeden Collection' AND Document_Object.Owner = 'Braeden' AND Document_Object.Description = 'Braeden Collection' AND Document_Object.Other_Details = 'Braeden Collection' AND Document_Object.Owner = 'Braeden' AND Document_Object.Description = 'Braeden Collection' AND Document_Object.Other_Details = 'Braeden Collection' AND Document_Object.Owner = 'Braeden' AND Document_Object.Description = 'Braeden Collection' AND Document_Object.Other_Details = 'Braeden Collection' AND Document_Object.Owner = 'Braeden' AND Document_Object.Description = 'Braeden Collection' AND Document_Object.Other_Details
SELECT Document_Objects.Related_Collection_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID,
SELECT Document_Objects.Related_Collection_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID,
SELECT Document_Objects.Related_Collection_ID, Document_Object_Description, Document_Object_Owner, Document_Object_Description, Document_Object_Other_Details 
SELECT Document_Objects.Related_Collection_ID, Document_Object_Description 
SELECT Document_Objects.Related_Collection_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID
SELECT Document_Objects.Related_Collection_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document_Object_ID, Document
SELECT Document_Objects.Related_Collection_ID 
SELECT Document_Objects.Related_Collection_ID 
SELECT Document_Objects.Related_Collection_ID, COUNT(Document_Subset_Members.Document_Object_ID) AS Count 
SELECT Document_Objects.Related_Collection_ID, COUNT(Document_Subset_Members.Document_Object_ID) AS Child_Document_Count 
SELECT Collection_ID, Collection_Name FROM Collections 
SELECT Collection_Subset_Members.Collection_ID, Collections.Collection_Name 
SELECT Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_ID, Collection_Subset_Members.Related_Collection_ID, Collection_Subset_Members.Collection_Subset_Details, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Name,
SELECT Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_Subset_ID, Collection_Sub
SELECT Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_ID, Collection_Subset_Members.Related_Collection_ID, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Details, Collection_Subset_Members.Collection_Name, Collection_Subset_Members.Collection_Description, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_ID, Collection_Subset_Members.Related_Collection_ID, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Details, Collection_Subset_Members.Collection_Name, Collection_Subset_Members.Collection_Description, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_ID, Collection_Subset_Members.Related_Collection_ID, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Details, Collection_Subset_Members.Collection_Name, Collection_Subset_Members.Collection_Description, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_ID, Collection_Subset_Members.Related_Collection_ID, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Details, Collection_Subset_Members.Collection_Name, Collection_Subset_Members.Collection_Description, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_ID, Collection_Subset_Members.Related_Collection_ID, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Details, Collection_Subset_Members.Collection_Name, Collection_Subset_Members.Collection_Description, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_ID, Collection_Subset_Members.Related_Collection_ID, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Details, Collection_Subset_Members.Collection_Name, Collection_Subset_Members.Collection_Description, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_ID, Collection_Subset_Members.Related_Collection_ID, Collection_Subset_Members.Collection_Subset_Name, Collection_Subset_Members.Collection_Subset_Details, Collection_Subset_Members.Collection_Name, Collection_Subset_Members.Collection_Description, Collection_Subset_Members.Collection_Subset_ID, Collection_Subset_Members.Collection_ID, Collection_Subset_Members.Related_Collection_ID, Collection_Subset_Members.Collection_Subset
SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_Name = 'Nice' AND Parent_Collection_ID IS NOT NULL 
SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_ID NOT IN (SELECT Parent_Collection_ID FROM Collections); 
SELECT Collection_ID, Collection_Name FROM Collections WHERE Parent_Collection_ID IS NULL 
SELECT Document_Objects.Related_Collection_ID 
SELECT Document_Objects.Related_Collection_ID 
SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best' 
SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best' AND Parent_Collection_ID IS NULL 
SELECT Document_Objects.Related_Collection_ID 
SELECT Document_Objects.Related_Collection_ID 
SELECT Collection_Subset_ID, Collection_Subset_Name, COUNT(Collection_ID) AS Collection_Count 
SELECT Collection_Subset_ID, Collection_Subset_Name, COUNT(Collection_ID) FROM Collection_Subsets 
SELECT Document_Objects.Related_Collection_ID, COUNT(Document_Object_ID) AS Child_Count 
SELECT Document_Objects.Related_Collection_ID, COUNT(Document_Object_ID) FROM Document_Subset_Members, Document_Objects, Collection_Subset_Members, Collections WHERE Document_Subset_Members.Document_Object_ID = Document_Objects.Document_Object_ID AND Document_Subset_Members.Document_Subset_ID = Collection_Subset_Members.Collection_Subset_ID AND Collection_Subset_Members.Collection_ID = Collections.Collection_ID GROUP BY Document_Object_ID HAVING COUNT(Document_Object_ID) > 1;  
SELECT Document_Objects.Related_Collection_ID, COUNT(Document_Object_ID) FROM Document_Subset_Members, Document_Objects, Document_Subsets, Collection_Subset_Members, Collections WHERE Document_Subset_Members.Document_Object_ID = Document_Objects.Document_Object_ID AND Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID AND Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID AND Document_Subset_Members.Document_Subset_ID = Collection_Subset_Members.Collection_Subset_ID AND Collection_Subset_Members.Collection_ID = Collections.Collection_ID GROUP BY Document_Object_ID ORDER BY COUNT(Document_Object_ID) ASC LIMIT 1;  
SELECT Document_Objects.Related_Collection_ID 
SELECT Document_Objects.Related_Collection_ID, COUNT(Document_Subset_Members.Document_Object_ID) AS Number_of_Related_Document_Subsets 
SELECT Document_Objects.Related_Collection_ID, COUNT(Document_Object_ID) FROM Document_Subset_Members, Document_Objects, Document_Subsets, Collection_Subset_Members, Collections WHERE Document_Subset_Members.Document_Object_ID = Document_Objects.Document_Object_ID AND Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID AND Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID AND Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID AND Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID AND Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID AND Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID AND Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID AND Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID AND Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID AND Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID AND Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID AND Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID AND Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID AND Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID AND Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID AND Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID AND Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID AND Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID AND Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID AND Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID AND Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID AND Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID AND Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID AND Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID AND
SELECT Document_Objects.Related_Collection_ID, Document_Object.OWNER 
SELECT Document_Objects.Related_Collection_ID, Document_Object.OWNER 
SELECT Document_Subset_Members.Related_Collection_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Owner, Document_Subset_Members.Description, Document_Subset_Members.Other_Details, Document_Subset_Members.Parent_Document_Object_ID, Document_Subset_Members.Collection_ID, Document_Subset_Members.Collection_Name, Document_Subset_Members.Collection_Description, Document_Subset_Members.Collection_Subset_ID, Document_Subset_Members.Collection_Subset_Name, Document_Subset_Members.Collection_Subset_Details, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_Name, Document_Subset_Members.Document_Subset_Details, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_Name, Document_Subset_Members.Document_Subset_Details, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_Name, Document_Subset_Members.Document_Subset_Details, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_Name, Document_Subset_Members.Document_Subset_Details, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_Name, Document_Subset_Members.Document_Subset_Details, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_Name, Document_Subset_Members.Document_Subset_Details, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_Name, Document_Subset_Members.Document_Subset_Details, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_Name, Document_Subset_Members.Document_Subset_Details, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_Name, Document_Subset_Members.Document_Subset_Details, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_Name, Document_Subset_Members.Document_Subset_Details, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_Name, Document_Subset_Members.Document_Subset_Details, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_Name, Document_Subset_Members.Document_Subset_Details, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_Name, Document_Subset_Members.Document_Subset_Details,
SELECT Document_Subset_Members.Related_Collection_ID, Document_Subset_Members.Document_Subset_ID, Document_Subsets.Document_Subset_Name 
SELECT Document_Subset_Members.Related_Collection_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_Name, COUNT(DISTINCT Document_Subset_Members.Document_Object_ID) AS Document_Count FROM Document_Subset_Members GROUP BY Document_Subset_Members.Related_Collection_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_Name ORDER BY Document_Subset_Members.Related_Collection_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_Name;  
SELECT Document_Subset_Members.Related_Collection_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_Name, COUNT(DISTINCT Document_Subset_Members.Document_Object_ID) FROM Document_Subset_Members GROUP BY Document_Subset_Members.Related_Collection_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_Name;  
SELECT Document_Subset_Members.Related_Collection_ID, Document_Subset_Members.Document_Subset_ID, COUNT(DISTINCT Document_Subset_Members.Document_Object_ID) AS num_docs 
SELECT Document_Subset_Members.Related_Collection_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Sub
SELECT Document_Objects.Related_Collection_ID 
SELECT Document_Objects.Related_Collection_ID 
SELECT Document_Subset_Members.Related_Collection_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_M
SELECT Document_Subset_Members.Related_Collection_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Object_ID, Document_Subset_Members.Document_Subset_ID, Document_Subset_Members.Document_Subset_Name, Document_Subset_Members.Document_Subset_Details FROM Document_Subset_Members WHERE Document_Subset_Members.Document_Object_ID = 1; 
SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_Name = 'Ransom ' 
SELECT Collection_ID FROM Document_Objects WHERE Owner = 'Ransom'; 
SELECT Document_Objects.Collection_ID, COUNT(Document_Object_ID) AS Count 
SELECT Document_Objects.Related_Collection_ID, COUNT(Document_Object_ID) FROM Document_Subset_Members, Document_Objects, Collection_Subset_Members, Collections WHERE Document_Subset_Members.Document_Object_ID = Document_Objects.Document_Object_ID AND Document_Subset_Members.Document_Subset_ID = Collection_Subset_Members.Collection_Subset_ID AND Collection_Subset_Members.Collection_ID = Collections.Collection_ID GROUP BY Document_Object_ID HAVING COUNT(Document_Object_ID) > 1;  
SELECT Collection_ID, COUNT(DISTINCT Document_Object_ID) AS Document_Count 
SELECT Collection_ID, COUNT(DISTINCT Document_Object_ID) AS Document_Count 
SELECT Document_Objects.Related_Collection_ID 
SELECT Document_Objects.Related_Collection_ID 
SELECT Collection_ID, Collection_Name, COUNT(Document_Object_ID) AS Document_Count FROM Documents_in_Collections GROUP BY Collection_ID, Collection_Name ORDER BY Document_Count DESC LIMIT 1; 
SELECT Collection_ID, Collection_Name, COUNT(Document_Object_ID) FROM Documents_in_Collections 
SELECT Document_Objects.Related_Collection_ID 
SELECT Document_Objects.Related_Collection_ID 
SELECT Document_Objects.Related_Collection_ID 
SELECT Document_Objects.Related_Collection_ID 
SELECT Document_Objects.Related_Collection_ID 
SELECT Document_Objects.Related_Collection_ID 
SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_Name = 'Best' UNION SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') UNION SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') UNION SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') UNION SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') UNION SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') UNION SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') UNION SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') UNION SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') UNION SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') UNION SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') UNION SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') UNION SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') UNION SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') UNION SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') UNION SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') UNION SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') UNION SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') UNION SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') UNION SELECT Collection_ID, Collection_Name FROM Collections WHERE Collection
SELECT Collection_ID, Collection_Name 
SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best'; 
SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best' UNION SELECT Collection_ID FROM Collection_Subset_Members WHERE Collection_Subset_ID IN (SELECT Collection_Subset_ID FROM Collection_Subsets WHERE Collection_Subset_Name = 'Best') UNION SELECT Collection_ID FROM Document_Subset_Members WHERE Document_Subset_ID IN (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best') UNION SELECT Collection_ID FROM Document_Subset_Members WHERE Document_Subset_ID IN (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best') UNION SELECT Collection_ID FROM Document_Subset_Members WHERE Document_Subset_ID IN (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best') UNION SELECT Collection_ID FROM Document_Subset_Members WHERE Document_Subset_ID IN (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best') UNION SELECT Collection_ID FROM Document_Subset_Members WHERE Document_Subset_ID IN (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best') UNION SELECT Collection_ID FROM Document_Subset_Members WHERE Document_Subset_ID IN (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best') UNION SELECT Collection_ID FROM Document_Subset_Members WHERE Document_Subset_ID IN (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best') UNION SELECT Collection_ID FROM Document_Subset_Members WHERE Document_Subset_ID IN (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best') UNION SELECT Collection_ID FROM Document_Subset_Members WHERE Document_Subset_ID IN (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best') UNION SELECT Collection_ID FROM Document_Subset_Members WHERE Document_Subset_ID IN (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best') UNION SELECT Collection_ID FROM Document_Subset_Members WHERE Document_Subset_ID IN (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best') UNION SELECT Collection_ID FROM Document_Subset_Members WHERE Document_Subset_ID IN (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best') UNION SELECT Collection_ID FROM Document_Subset_Members WHERE Document_Subset_ID IN (SELECT Document_Subset_ID FROM Document_Sub
SELECT Collection_Subset_Members.Collection_Subset_ID 
SELECT Collection_Subset_ID FROM Collection_Subsets WHERE Collection_Subset_Name = 'Best' 
SELECT songs_id FROM performance_score WHERE participant_id = 1; 
SELECT songs.songs_id, songs.name 
SELECT songs.songs_id, songs.name, songs.language FROM songs WHERE songs.language IN ('English', 'Spanish', 'French', 'German', 'Italian', 'Portuguese', 'Japanese', 'Korean', 'Chinese', 'Arabic', 'Russian', 'Hindi', 'Urdu', 'Bengali', 'Marathi', 'Gujarati', 'Tamil', 'Telugu', 'Malayalam', 'Kannada', 'Oriya', 'Assamese', 'Manipuri', 'Nepali', 'Sanskrit', 'Punjabi', 'Sindhi', 'Pashto', 'Dari', 'Persian', 'Azerbaijani', 'Turkish', 'Ukrainian', 'Belarusian', 'Lithuanian', 'Latv
SELECT voice_sound_quality FROM performance_score WHERE participant_id = 1 AND songs_id = 1; 
SELECT voice_sound_quality, rhythm_tempo, stage_presence FROM performance_score WHERE participant_id = (SELECT id FROM participants WHERE name = 'Freeway') ORDER BY voice_sound_quality DESC, rhythm_tempo DESC, stage_presence DESC LIMIT 1; 
SELECT songs_id, language, original_artist FROM songs WHERE name!= 'Love' ORDER BY songs_id ASC; 
SELECT songs.songs_id, songs.name, songs.original_artist 
SELECT stage_presence FROM performance_score WHERE songs_id IN (SELECT id FROM songs WHERE language = 'English') GROUP BY stage_presence HAVING COUNT(*) = 1; 
SELECT participants.participant_id, participants.name 
SELECT participants.participant_id, participants.name, participants.popularity 
SELECT participant_id, name FROM performance_score WHERE voice_sound_quality = 5 OR rhythm_tempo = 5 
SELECT voice_sound_quality FROM performance_score WHERE songs_id IN (SELECT id FROM songs WHERE name = 'The Balkan Girls' AND english_translation IS NOT NULL) AND songs_id IN (SELECT id FROM songs WHERE language = 'English') ORDER BY voice_sound_quality DESC LIMIT 1; 
SELECT participant_id, name FROM performance_score WHERE participant_id = (SELECT id FROM participants WHERE popularity = (SELECT MAX(popularity) FROM participants)); 
SELECT performance_score.songs_id 
SELECT songs_id FROM performance_score WHERE participant_id = 1; 
SELECT songs_id, language, AVG(rhythm_tempo) AS avg_rhythm_score 
SELECT participants.participant_id, participants.name 
SELECT participants.participant_id, participants.name, participants.popularity 
SELECT songs_id FROM performance_score WHERE participant_id = 1 AND voice_sound_quality > 0.5 AND rhythm_tempo > 0.5 AND stage_presence > 0.5 ORDER BY voice_sound_quality DESC, rhythm_tempo DESC, stage_presence DESC LIMIT 1 
SELECT songs_id, participant_id, voice_sound_quality, rhythm_tempo, stage_presence FROM performance_score WHERE rhythm_tempo > 5 ORDER BY voice_sound_quality DESC; 
SELECT country FROM City 
SELECT country FROM City WHERE city_name = 'New York' AND state = 'NY' AND country = 'USA'; 
SELECT state FROM City WHERE state NOT IN (SELECT state FROM City GROUP BY state HAVING COUNT(*)=1) 
SELECT state FROM City 
SELECT country FROM City 
SELECT country FROM City 
SELECT City.city_name, City.city_code, City.state, City.country 
SELECT City.city_name, City.city_code, City.state, City.country FROM City 
SELECT latitude, longitude FROM City WHERE city_name = 'Baltimore'; 
SELECT latitude, longitude FROM City WHERE city_name = 'Baltimore'; 
SELECT City.city_name FROM City WHERE City.state = 'PA'; 
SELECT city_name FROM City WHERE state = 'PA'; 
SELECT country FROM City WHERE state = 'CA' AND country = 'Canada'; 
SELECT country FROM City WHERE state = 'CA' AND country = 'Canada'; 
SELECT City.city_name FROM City WHERE City.state = 'USA' ORDER BY City.latitude; 
SELECT city_name FROM City WHERE country = 'USA' ORDER BY latitude; 
SELECT state, COUNT(city_name) FROM City GROUP BY state ORDER BY state; 
SELECT city_name, state, COUNT(*) FROM City GROUP BY state; 
SELECT country, COUNT(city_code) FROM City GROUP BY country ORDER BY country; 
SELECT country, COUNT(city_name) FROM City GROUP BY country; 
SELECT state FROM City WHERE city_code IN (SELECT city1_code FROM Direct_distance WHERE city2_code IN (SELECT city_code FROM City WHERE state = 'CA') UNION SELECT city2_code FROM Direct_distance WHERE city1_code IN (SELECT city_code FROM City WHERE state = 'CA')) GROUP BY state HAVING COUNT(*) > 1; 
SELECT state FROM City WHERE city_code IN (SELECT city1_code FROM Direct_distance WHERE city2_code IN (SELECT city_code FROM City WHERE state = 'CA') UNION SELECT city2_code FROM Direct_distance WHERE city1_code IN (SELECT city_code FROM City WHERE state = 'CA')) GROUP BY state HAVING COUNT(*) >= 2; 
SELECT state FROM City WHERE city_code IN (SELECT city2_code FROM Direct_distance WHERE city1_code IN (SELECT city_code FROM City WHERE state = 'CA') AND city1_code IN (SELECT city_code FROM City WHERE state = 'CA') AND distance < 1000) GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1; 
SELECT state FROM City WHERE city_code IN (SELECT city2_code FROM Direct_distance WHERE city1_code IN (SELECT city_code FROM City WHERE state = 'CA') AND city1_code IN (SELECT city_code FROM City WHERE state = 'CA')) GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1; 
SELECT country FROM City WHERE city_code IN (SELECT city2_code FROM Direct_distance WHERE city1_code IN (SELECT city_code FROM City WHERE country = 'USA') AND city1_code NOT IN (SELECT city_code FROM City WHERE country = 'USA')) AND city_code NOT IN (SELECT city_code FROM City WHERE country = 'USA') ORDER BY country LIMIT 1; 
SELECT country FROM City WHERE city_code IN (SELECT city2_code FROM Direct_distance WHERE city1_code IN (SELECT city_code FROM City WHERE country = 'United States') AND city1_code NOT IN (SELECT city_code FROM City WHERE country = 'United States')) AND country!= 'United States' GROUP BY country HAVING COUNT(*) = (SELECT COUNT(*) FROM City WHERE country = 'United States') ORDER BY country ASC LIMIT 1; 
SELECT Student.state, Student.Fname, Student.LName 
SELECT Student.latitude, Student.longitude, Student.city_code, Student.StuID, Student.LName, Student.Fname, Student.Age, Student.Sex, Student.Major, Student.Advisor, Direct_distance.distance, City.city_name, City.state, City.country FROM Student, Direct_distance, City WHERE Student.city_code = Direct_distance.city1_code AND Direct_distance.city2_code = City.city_code AND Student.city_code = 'MD' AND Student.city_code = City.city_code AND Student.city_code = Direct_distance.city1_code AND Student.city_code = Direct_distance.city2_code AND Student.city_code = City.city_code AND Student.city_code = Direct_distance.city1_code AND Student.city_code = Direct_distance.city2_code AND Student.city_code = City.city_code AND Student.city_code = Direct_distance.city1_code AND Student.city_code = Direct_distance.city2_code AND Student.city_code = City.city_code AND Student.city_code = Direct_distance.city1_code AND Student.city_code = Direct_distance.city2_code AND Student.city_code = City.city_code AND Student.city_code = Direct_distance.city1_code AND Student.city_code =
SELECT country FROM City WHERE city_name = 'China' AND state = 'CA' AND country = 'USA' AND latitude = 37.7749 AND longitude = -122.4194 
SELECT country FROM City WHERE city_name = 'China' AND state = 'CA' AND country = 'USA' AND latitude = 37.7749 AND longitude = -122.4194 
SELECT Student.state, Student.Fname, Student.Major 
SELECT Student.state, Student.Fname, Student.Major 
SELECT city_name, COUNT(*) FROM Student, City WHERE Student.city_code = City.city_code GROUP BY city_name ORDER BY city_name ASC; 
SELECT city_name, COUNT(*) FROM Student, City WHERE Student.city_code = City.city_code GROUP BY city_name; 
SELECT city_name, COUNT(*) FROM Student, City WHERE Student.city_code = City.city_code GROUP BY city_name ORDER BY COUNT(*) DESC; 
SELECT city_name, COUNT(*) FROM Student, City WHERE Student.city_code = City.city_code GROUP BY city_name; 
SELECT state, COUNT(*) AS num_students 
SELECT state FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE city_code IN (SELECT city_code FROM City WHERE state IN (SELECT state FROM City WHERE city_code IN (SELECT city_code FROM Direct_distance WHERE distance IN (SELECT distance FROM Direct_distance WHERE city1_code IN (SELECT city_code FROM City WHERE state IN (SELECT state FROM City WHERE city_code IN (SELECT city_code FROM Direct_distance WHERE distance IN (SELECT distance FROM Direct_distance WHERE city2_code IN (SELECT city_code FROM City WHERE state IN (SELECT state FROM City WHERE city_code IN (SELECT city_code FROM Direct_distance WHERE distance IN (SELECT distance FROM Direct_distance WHERE city1_code IN (SELECT city_code FROM City WHERE state IN (SELECT state FROM City WHERE city_code IN (SELECT city_code FROM Direct_distance WHERE distance IN (SELECT distance FROM Direct_distance WHERE city2_code IN (SELECT city_code FROM City WHERE state IN (SELECT state FROM City WHERE city_code IN (SELECT city_code FROM Direct_distance WHERE distance IN (SELECT distance FROM Direct_distance WHERE city1_code IN (SELECT city_code FROM City WHERE state IN
SELECT country FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE city_code IN (SELECT city_code FROM City WHERE country IN (SELECT country FROM City WHERE city_code IN (SELECT city_code FROM Direct_distance WHERE distance IN (SELECT distance FROM Direct_distance WHERE city1_code IN (SELECT city_code FROM City WHERE country IN (SELECT country FROM City WHERE city_code IN (SELECT city_code FROM Direct_distance WHERE distance IN (SELECT distance FROM Direct_distance WHERE city2_code IN (SELECT city_code FROM City WHERE country IN (SELECT country FROM City WHERE city_code IN (SELECT city_code FROM Direct_distance WHERE distance IN (SELECT distance FROM Direct_distance WHERE city1_code IN (SELECT city_code FROM City WHERE country IN (SELECT country FROM City WHERE city_code IN (SELECT city_code FROM Direct_distance WHERE distance IN (SELECT distance FROM Direct_distance WHERE city2_code IN (SELECT city_code FROM City WHERE country IN (SELECT country FROM City WHERE city_code IN (SELECT city_code FROM Direct_distance WHERE distance IN (SELECT distance FROM Direct_distance WHERE city1_code IN (SELECT city_code FROM City WHERE country IN (
SELECT country FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID
SELECT city_name FROM City WHERE city_code IN (SELECT city_code FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT Stu
SELECT city_name FROM City WHERE city_code IN (SELECT city_code FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE StuID IN (SELECT St
SELECT state FROM Student WHERE StuID IN (SELECT StuID FROM Student WHERE city_code IN (SELECT city_code FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state FROM City WHERE state IN (SELECT state
SELECT state FROM Student WHERE StuID IN (SELECT StuID FROM Student GROUP BY StuID HAVING COUNT(*) > 5) GROUP BY state HAVING COUNT(*) > 5; 
SELECT Student.state FROM Student WHERE Student.state!= 'USA' AND Student.state IS NOT NULL; 
SELECT Student.state 
SELECT Student.state 
SELECT Student.state, Student.Sex, Student.StuID 
SELECT Student.state 
SELECT Student.state 
SELECT Direct_distance.city_code, Direct_distance.distance 
SELECT Direct_distance.city_code, Direct_distance.distance 
SELECT Direct_distance.city_code, Direct_distance.distance 
SELECT Direct_distance.city_code, Direct_distance.distance 
SELECT city_code, AVG(distance) AS avg_distance, MIN(distance) AS min_distance, MAX(distance) AS max_distance 
SELECT city_code, AVG(distance) as avg_dist, MIN(distance) as min_dist, MAX(distance) as max_dist 
SELECT city_code FROM Direct_distance WHERE distance = (SELECT MAX(distance) FROM Direct_distance); 
SELECT city_code FROM Direct_distance WHERE distance = (SELECT MAX(distance) FROM Direct_distance); 
SELECT city_code FROM Direct_distance WHERE distance > (SELECT AVG(distance) FROM Direct_distance); 
SELECT city_code FROM Direct_distance WHERE distance > (SELECT AVG(distance) FROM Direct_distance); 
SELECT city_code FROM Direct_distance WHERE distance < 1000; 
SELECT city_code FROM Direct_distance WHERE distance < 1000; 
SELECT city_name, SUM(distance) AS total_distance 
SELECT city_name, SUM(distance) FROM Direct_distance WHERE city1_code = 'BAL' GROUP BY city_name; 
SELECT city_name, AVG(distance) FROM Direct_distance WHERE city1_code = 'BOS' GROUP BY city_name; 
SELECT city_name, AVG(distance) FROM Direct_distance WHERE city1_code = 'BOS' GROUP BY city_name; 
SELECT city_name FROM City WHERE city_code = (SELECT city2_code FROM Direct_distance WHERE city1_code = 'CHI' AND distance = (SELECT MIN(distance) FROM Direct_distance WHERE city1_code = 'CHI')); 
SELECT city_name FROM City WHERE city_code = (SELECT city2_code FROM Direct_distance WHERE city1_code = 'CHI' AND distance = (SELECT MIN(distance) FROM Direct_distance WHERE city1_code = 'CHI')); 
SELECT city_name FROM City WHERE city_code = (SELECT city2_code FROM Direct_distance WHERE city1_code = 'BOS' AND distance = (SELECT MAX(distance) FROM Direct_distance WHERE city1_code = 'BOS')); 
SELECT City.city_name FROM City 
SELECT city_code, SUM(distance) FROM Direct_distance GROUP BY city_code; 
SELECT city_code, SUM(distance) FROM Direct_distance GROUP BY city_code; 
SELECT city_name, AVG(distance) FROM City, Direct_distance WHERE City.city_code = Direct_distance.city1_code OR City.city_code = Direct_distance.city2_code GROUP BY city_name; 
SELECT city_name, AVG(distance) FROM City, Direct_distance WHERE City.city_code = Direct_distance.city1_code GROUP BY city_name; 
SELECT city_name FROM City WHERE latitude = (SELECT latitude FROM City WHERE city_name = 'Linda Smith') AND longitude = (SELECT longitude FROM City WHERE city_name = 'Linda Smith') UNION SELECT city_name FROM City WHERE latitude = (SELECT latitude FROM City WHERE city_name = 'Tracy Kim') AND longitude = (SELECT longitude FROM City WHERE city_name = 'Tracy Kim') ORDER BY distance ASC LIMIT 1; 
SELECT Direct_distance.city_code, Direct_distance.distance 
SELECT Student.latitude, Student.longitude, Student.Fname, Student.LName 
SELECT Student.latitude, Student.longitude, Student.StuID, Student.LName, Student.Fname, Student.Age, Student.Sex, Student.Major, Student.Advisor, Student.city_code, Direct_distance.distance, City.city_name, City.state, City.country, City.latitude, City.longitude FROM Student, Direct_distance, City WHERE Student.city_code = Direct_distance.city1_code AND Direct_distance.city2_code = City.city_code AND Student.LName = 'Linda' AND Student.Fname = 'Smith' AND Student.city_code = Direct_distance.city1_code AND Direct_distance.city2_code = City.city_code AND Student.city_code = Direct_distance.city1_code AND Direct_distance.city2_code = City.city_code AND Student.city_code = Direct_distance.city1_code AND Direct_distance.city2_code = City.city_code AND Student.city_code = Direct_distance.city1_code AND Direct_distance.city2_code = City.city_code AND Student.city_code = Direct_distance.city1_code AND Direct_distance.city2_code = City.city_code AND Student.city_code = Direct_distance.city1_code AND Direct_distance.city2_code = City.city_code AND Student.city_code
SELECT state FROM Student WHERE Fname = 'Linda' AND LName = 'Smith' AND Age = 21 AND Sex = 'F' AND Major = 1 AND Advisor = 1 AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA' AND city_code = 'CA
SELECT state FROM City WHERE city_code = (SELECT city_code FROM Student WHERE Fname = 'Linda' AND LName = 'Smith' AND Age = 21 AND Sex = 'F' AND Major = 1 AND Advisor = 1) 
SELECT sid, name, rating, age FROM Sailors WHERE age > 30; 
SELECT sid, name, age FROM Sailors WHERE age > 30 ORDER BY age DESC; 
SELECT sid, name, age FROM Sailors WHERE age < 30 
SELECT sid, name, age FROM Sailors WHERE age < 30; 
SELECT bid FROM Reserves WHERE sid = 1; 
SELECT bid FROM Reserves WHERE sid = 1; 
SELECT sid FROM Reserves WHERE bid = 102; 
SELECT sid, name FROM Sailors WHERE sid IN (SELECT sid FROM Reserves WHERE bid = 102); 
SELECT bid FROM Reserves WHERE sid = 1; 
SELECT bid FROM Reserves 
SELECT sid, name FROM Sailors WHERE name LIKE '%e%'; 
SELECT sid, name FROM Sailors WHERE name LIKE '%e%' 
SELECT sid FROM Sailors WHERE age > (SELECT MAX(age) FROM Sailors); 
SELECT sid FROM Sailors WHERE age > (SELECT MIN(age) FROM Sailors); 
SELECT Sailors.sid, Sailors.name, Sailors.age, Sailors.rating 
SELECT sid, name, rating, age FROM Sailors WHERE age > (SELECT age FROM Sailors WHERE rating > 7) ORDER BY name ASC; 
SELECT sid, name FROM Sailors WHERE sid IN (SELECT sid FROM Reserves); 
SELECT sid, name FROM Sailors WHERE sid IN (SELECT sid FROM Reserves); 
SELECT sid, name FROM Sailors WHERE sid IN (SELECT sid FROM Reserves GROUP BY sid HAVING COUNT(*) > 1); 
SELECT sid, name FROM Sailors WHERE sid IN (SELECT sid FROM Reserves GROUP BY sid HAVING COUNT(*) >= 2); 
SELECT sid FROM Sailors WHERE sid IN (SELECT sid FROM Reserves WHERE bid IN (SELECT bid FROM Boats WHERE color ='red' OR color = 'blue')) 
SELECT sid FROM Sailors WHERE sid IN (SELECT sid FROM Reserves WHERE bid IN (SELECT bid FROM Boats WHERE color ='red' OR color = 'blue')); 
SELECT sid, name FROM Sailors WHERE sid IN (SELECT sid FROM Reserves WHERE bid IN (SELECT bid FROM Boats WHERE color ='red' OR color = 'blue')) ORDER BY sid ASC; 
SELECT sid, name FROM Sailors WHERE sid IN (SELECT sid FROM Reserves WHERE bid IN (SELECT bid FROM Boats WHERE color ='red' OR color = 'blue')) ORDER BY sid ASC 
SELECT sid FROM Sailors WHERE sid IN (SELECT sid FROM Reserves WHERE bid IN (SELECT bid FROM Boats WHERE color ='red') AND sid IN (SELECT sid FROM Reserves WHERE bid IN (SELECT bid FROM Boats WHERE color = 'blue'))) 
SELECT sid FROM Sailors WHERE sid IN (SELECT sid FROM Reserves WHERE bid IN (SELECT bid FROM Boats WHERE color ='red' OR color = 'blue')) 
SELECT sid, name FROM Sailors WHERE sid IN (SELECT sid FROM Reserves WHERE bid IN (SELECT bid FROM Boats WHERE color ='red' OR color = 'blue')) ORDER BY sid ASC; 
SELECT sid, name FROM Sailors WHERE sid IN (SELECT sid FROM Reserves WHERE bid IN (SELECT bid FROM Boats WHERE color ='red' OR color = 'blue')) ORDER BY sid ASC 
SELECT sid FROM Sailors WHERE sid NOT IN (SELECT sid FROM Reserves); 
SELECT sid FROM Sailors WHERE sid NOT IN (SELECT sid FROM Reserves); 
SELECT sid, name FROM Sailors WHERE sid NOT IN (SELECT sid FROM Reserves); 
SELECT sid, name FROM Sailors WHERE sid NOT IN (SELECT sid FROM Reserves); 
SELECT sid FROM Sailors WHERE sid NOT IN (SELECT sid FROM Reserves); 
SELECT sid FROM Sailors WHERE sid NOT IN (SELECT sid FROM Reserves); 
SELECT sid, name FROM Sailors s JOIN Reserves r ON s.sid = r.sid WHERE r.bid = 103 
SELECT Sailors.sid, Sailors.name FROM Sailors, Reserves WHERE Reserves.bid = 103 AND Reserves.sid = Sailors.sid 
SELECT sid, name FROM Sailors WHERE rating > (SELECT rating FROM Sailors WHERE name = 'Luis') ORDER BY rating DESC; 
SELECT sid, name FROM Sailors WHERE rating > (SELECT rating FROM Sailors WHERE name = 'Luis') ORDER BY rating DESC; 
SELECT sid, name FROM Sailors WHERE rating > (SELECT rating FROM Sailors WHERE name = 'Luis') ORDER BY rating DESC; 
SELECT sid, name FROM Sailors WHERE rating > (SELECT rating FROM Sailors WHERE name = 'Luis') ORDER BY sid ASC; 
SELECT sid, name FROM Sailors WHERE rating > 2 AND EXISTS (SELECT * FROM Reserves WHERE Reserves.sid = Sailors.sid); 
SELECT sid, name FROM Sailors WHERE rating >= 3 AND EXISTS (SELECT * FROM Reserves WHERE Reserves.sid = Sailors.sid); 
SELECT sid, name, age FROM Sailors ORDER BY age DESC LIMIT 1; 
SELECT sid, name, age FROM Sailors WHERE age = (SELECT MAX(age) FROM Sailors); 
SELECT sid, name, rating, age FROM Sailors; 
SELECT sid FROM Sailors 
SELECT sid, name, rating, age FROM Sailors WHERE rating = 7; 
SELECT sid, name, rating, age FROM Sailors WHERE rating = 7 
SELECT sid FROM Sailors WHERE name LIKE 'D%'; 
SELECT sid, name, rating, age FROM Sailors WHERE name LIKE 'D%'; 
SELECT sid, AVG(rating), MAX(age) FROM Sailors GROUP BY sid; 
SELECT sid, AVG(rating), MAX(age) FROM Sailors GROUP BY sid; 
SELECT Boats.bid, COUNT(Reserves.sid) FROM Boats, Reserves WHERE Boats.bid = Reserves.bid GROUP BY Boats.bid ORDER BY COUNT(Reserves.sid) DESC; 
SELECT bid, COUNT(*) FROM Reserves GROUP BY bid; 
SELECT Boats.bid, COUNT(Reserves.bid) FROM Boats, Reserves WHERE Boats.bid > 50 AND Boats.bid = Reserves.bid GROUP BY Boats.bid 
SELECT bid, COUNT(*) FROM Reserves WHERE bid > 50 GROUP BY bid; 
SELECT bid, COUNT(*) FROM Reserves GROUP BY bid HAVING COUNT(*) > 1; 
SELECT bid, COUNT(*) FROM Reserves GROUP BY bid HAVING COUNT(*) > 1; 
SELECT Boats.bid, COUNT(Reserves.sid) FROM Boats, Reserves WHERE Boats.bid = Reserves.bid AND Reserves.sid > 1 GROUP BY Boats.bid; 
SELECT Boats.bid, COUNT(Reserves.sid) AS num_reservations FROM Sailors, Boats, Reserves WHERE Sailors.sid > 1 AND Boats.bid = Reserves.bid GROUP BY Boats.bid 
SELECT sid, rating, AVG(age) FROM Sailors s JOIN Reserves r ON s.sid = r.sid JOIN Boats b ON r.bid = b.bid WHERE b.color ='red' GROUP BY rating ORDER BY rating DESC; 
SELECT sid, rating, AVG(age) FROM Sailors s JOIN Reserves r ON s.sid = r.sid JOIN Boats b ON r.bid = b.bid WHERE b.color ='red' GROUP BY rating ORDER BY rating ASC; 
SELECT sid, name, rating, age FROM Sailors ORDER BY rating, age; 
SELECT sid, name, rating, age FROM Sailors ORDER BY rating, age; 
SELECT Boats.bid, Boats.name, Boats.color, Reserves.day FROM Boats, Reserves WHERE Boats.bid = Reserves.bid 
SELECT Boats.bid FROM Boats 
SELECT Boats.bid FROM Boats WHERE Boats.color ='red'; 
SELECT Boats.bid FROM Boats WHERE Boats.color ='red'; 
SELECT bid FROM Reserves WHERE sid IN (SELECT sid FROM Sailors WHERE age BETWEEN 20 AND 30) ORDER BY bid ASC; 
SELECT bid FROM Reserves WHERE sid IN (SELECT sid FROM Sailors WHERE age BETWEEN 20 AND 30) AND day BETWEEN '2019-01-01' AND '2019-01-31' ORDER BY sid ASC; 
SELECT sid, name FROM Sailors s, Reserves r WHERE s.rating > (SELECT rating FROM Sailors WHERE sid = r.sid) AND r.bid IN (SELECT bid FROM Boats WHERE color ='red') ORDER BY s.sid 
SELECT sid, name FROM Sailors s, Reserves r WHERE s.rating > (SELECT rating FROM Sailors WHERE sid IN (SELECT sid FROM Reserves WHERE bid IN (SELECT bid FROM Boats WHERE color ='red'))) 
SELECT sid, name, rating, age FROM Sailors ORDER BY rating DESC LIMIT 1; 
SELECT sid, name, rating, age FROM Sailors WHERE rating = (SELECT MAX(rating) FROM Sailors); 
SELECT Sailors.sid, Sailors.name FROM Sailors, Reserves WHERE Reserves.bid = 1 AND Reserves.sid = Sailors.sid 
SELECT sid, name FROM Sailors, Reserves WHERE Reserves.sid = Sailors.sid AND Reserves.bid = Boats.bid AND Boats.name = 'Melon' ORDER BY name ASC; 
SELECT sid, name, age FROM Sailors ORDER BY rating DESC; 
SELECT sid, name, age FROM Sailors ORDER BY rating DESC; 
SELECT headphone.Headphone_ID, headphone.Model, headphone.Price 
SELECT headphone.Headphone_ID, headphone.Model, headphone.Price 
SELECT Headphone_ID, Model 
SELECT headphone.Headphone_ID, headphone.Model 
SELECT headphone.Headphone_ID, headphone.Model, headphone.Class, headphone.Driver-matched_dB, headphone.Construction, headphone.Earpads, headphone.Price, store.Store_ID, store.Name, store.Neighborhood, store.Parking, store.Date_Opened FROM headphone, store WHERE headphone.Headphone_ID = store.Headphone_ID AND headphone.Class = 'Most common class' ORDER BY headphone.Headphone_ID ASC; 
SELECT headphone.Headphone_ID, headphone.Model, headphone.Class, headphone.Driver-matched_dB, headphone.Construction, headphone.Earpads, headphone.Price, store.Store_ID, store.Name, store.Neighborhood, store.Parking, store.Date_Opened FROM headphone INNER JOIN stock ON headphone.Headphone_ID = stock.Headphone_ID INNER JOIN store ON stock.Store_ID = store.Store_ID WHERE headphone.Class = 'Premium' ORDER BY headphone.Price DESC LIMIT 1; 
SELECT headphone.Headphone_ID, headphone.Model, headphone.Class, headphone.Driver-matched_dB, headphone.Construction, headphone.Earpads, headphone.Price, store.Store_ID, store.Name, store.Neighborhood, store.Parking, store.Date_Opened FROM headphone INNER JOIN stock ON headphone.Headphone_ID = stock.Headphone_ID INNER JOIN store ON stock.Store_ID = store.Store_ID WHERE headphone.Class = 'Premium' AND stock.Quantity > 2 ORDER BY headphone.Headphone_ID ASC; 
SELECT headphone.Headphone_ID, headphone.Model, headphone.Class, headphone.Driver-matched_dB, headphone.Construction, headphone.Earpads, headphone.Price, store.Store_ID, store.Name, store.Neighborhood, store.Parking, store.Date_Opened FROM headphone, store WHERE headphone.Headphone_ID = store.Headphone_ID AND headphone.Class NOT IN (SELECT headphone.Class FROM headphone WHERE headphone.Class IN (SELECT headphone.Class FROM headphone WHERE headphone.Class IN (SELECT headphone.Class FROM headphone WHERE headphone.Class IN (SELECT headphone.Class FROM headphone WHERE headphone.Class IN (SELECT headphone.Class FROM headphone WHERE headphone.Class IN (SELECT headphone.Class FROM headphone WHERE headphone.Class IN (SELECT headphone.Class FROM headphone WHERE headphone.Class IN (SELECT headphone.Class FROM headphone WHERE headphone.Class IN (SELECT headphone.Class FROM headphone WHERE headphone.Class IN (SELECT headphone.Class
SELECT headphone.Headphone_ID, headphone.Model, headphone.Class, headphone.Driver-matched_dB, headphone.Construction, headphone.Earpads, headphone.Price, store.Store_ID, store.Name, store.Neighborhood, store.Parking, store.Date_Opened FROM headphone, store WHERE headphone.Price > 200 AND headphone.Class = store.Store_ID ORDER BY headphone.Class ASC, headphone.Price DESC; 
SELECT headphone.Headphone_ID, headphone.Model, headphone.Class, headphone.Driver-matched_dB, headphone.Construction, headphone.Earpads, headphone.Price, store.Name, store.Neighborhood, store.Parking, store.Date_Opened FROM headphone INNER JOIN stock ON headphone.Headphone_ID = stock.Headphone_ID INNER JOIN store ON stock.Store_ID = store.Store_ID WHERE headphone.Price > 200 GROUP BY headphone.Class ORDER BY headphone.Class ASC; 
SELECT Headphone_ID, Model, Earpads FROM headphone GROUP BY Earpads HAVING COUNT(Earpads) > 1; 
SELECT headphone.Headphone_ID, headphone.Model, headphone.Class, headphone.Driver-matched_dB, headphone.Construction, headphone.Earpads, headphone.Price, store.Store_ID, store.Name, store.Neighborhood, store.Parking, store.Date_Opened FROM headphone, store WHERE headphone.Headphone_ID = store.Headphone_ID AND headphone.Earpads = 'Leather' AND headphone.Construction = 'Open-back' AND headphone.Price < 1000 AND headphone.Price > 500 AND headphone.Driver-matched_dB > 100 AND headphone.Driver-matched_dB < 120 AND headphone.Class = 'Premium' AND headphone.Model = 'Sennheiser HD 600' AND headphone.Model = 'Sennheiser HD 650' AND headphone.Model =
SELECT headphone.Headphone_ID, headphone.Model, headphone.Class, headphone.Driver-matched_dB, headphone.Construction, headphone.Earpads, headphone.Price, store.Name, store.Neighborhood, store.Parking, store.Date_Opened, stock.Quantity 
SELECT headphone.Headphone_ID, headphone.Model, headphone.Class, headphone.Driver-matched_dB, headphone.Construction, headphone.Earpads, headphone.Price, store.Name, store.Neighborhood, store.Parking, store.Date_Opened, stock.Quantity 
SELECT headphone.Headphone_ID, headphone.Model, headphone.Class, headphone.Construction FROM headphone WHERE headphone.Price = (SELECT MIN(headphone.Price) FROM headphone)  
SELECT headphone.Headphone_ID, headphone.Model, headphone.Class, headphone.Construction FROM headphone WHERE headphone.Headphone_ID = (SELECT MIN(headphone.Headphone_ID) FROM headphone)  
SELECT headphone.Headphone_ID, headphone.Construction, AVG(headphone.Price) AS avg_price 
SELECT headphone.Headphone_ID, headphone.Construction, AVG(headphone.Price) AS avg_price 
SELECT headphone.Headphone_ID, headphone.Model, headphone.Class, headphone.Driver-matched_dB, headphone.Construction, headphone.Earpads, headphone.Price, store.Store_ID, store.Name, store.Neighborhood, store.Parking, store.Date_Opened FROM headphone INNER JOIN stock ON headphone.Headphone_ID = stock.Headphone_ID INNER JOIN store ON stock.Store_ID = store.Store_ID WHERE headphone.Earpads = 'Bowls' AND headphone.Earpads = 'Comfort Pads' ORDER BY headphone.Headphone_ID ASC; 
SELECT headphone.Headphone_ID, headphone.Model, headphone.Class, headphone.Driver-matched_dB, headphone.Construction, headphone.Earpads, headphone.Price, store.Store_ID, store.Name, store.Neighborhood, store.Parking, store.Date_Opened FROM headphone INNER JOIN stock ON headphone.Headphone_ID = stock.Headphone_ID INNER JOIN store ON stock.Store_ID = store.Store_ID WHERE headphone.Earpads = 'Bowls' AND headphone.Earpads = 'Comfort Pads' ORDER BY headphone.Headphone_ID ASC; 
SELECT headphone.Headphone_ID, headphone.Model, headphone.Class, headphone.Driver-matched_dB, headphone.Construction, headphone.Earpads, headphone.Price, store.Store_ID, store.Name, store.Neighborhood, store.Parking, store.Date_Opened 
SELECT headphone.Headphone_ID, headphone.Model, headphone.Class, headphone.Driver-matched_dB, headphone.Construction, headphone.Earpads, headphone.Price, store.Store_ID, store.Name, store.Neighborhood, store.Parking, store.Date_Opened FROM headphone, store WHERE headphone.Construction!= 'plastic' AND headphone.Headphone_ID = stock.Headphone_ID AND stock.Store_ID = store.Store_ID ORDER BY headphone.Headphone_ID ASC, headphone.Model ASC, headphone.Class ASC, headphone.Driver-matched_dB ASC, headphone.Construction ASC, headphone.Earpads ASC, headphone.Price ASC, store.Store_ID ASC, store.Name ASC, store.Neighborhood ASC, store.Parking ASC, store.Date_Opened ASC; 
SELECT headphone.Headphone_ID, headphone.Model 
SELECT headphone.Headphone_ID, headphone.Model 
SELECT store.Store_ID, store.Name, store.Date_Opened 
SELECT store.Store_ID, store.Name, store.Date_Opened 
SELECT store.Store_ID, store.Name, store.Parking 
SELECT store.Store_ID, store.Name, store.Parking FROM store WHERE store.Neighborhood = 'Tarzana' 
SELECT Store_ID, Neighborhood FROM store GROUP BY Neighborhood HAVING COUNT(*) > 1; 
SELECT store.Store_ID, store.Name, store.Neighborhood, store.Parking, store.Date_Opened 
SELECT store.Store_ID, store.Neighborhood, COUNT(store.Store_ID) AS num_stores 
SELECT store.Store_ID, store.Neighborhood, COUNT(store.Store_ID) AS num_stores 
SELECT store.Store_ID, store.Name, COUNT(stock.Quantity) AS num_headphones 
SELECT store.Store_ID, store.Name, SUM(stock.Quantity) FROM store, stock WHERE stock.Headphone_ID = 1 GROUP BY store.Store_ID, store.Name ORDER BY SUM(stock.Quantity) DESC; 
SELECT store.Store_ID, store.Name 
SELECT store.Store_ID, store.Name 
SELECT headphone.Headphone_ID, headphone.Model 
SELECT headphone.Headphone_ID, headphone.Model 
SELECT headphone.Headphone_ID, headphone.Model, SUM(stock.Quantity) AS Quantity 
SELECT headphone.Headphone_ID, headphone.Model, SUM(stock.Quantity) AS Total_Quantity FROM headphone INNER JOIN stock ON headphone.Headphone_ID = stock.Headphone_ID GROUP BY headphone.Headphone_ID ORDER BY Total_Quantity DESC LIMIT 1 
SELECT headphone.Headphone_ID, headphone.Model, headphone.Class, headphone.Driver-matched_dB, headphone.Construction, headphone.Earpads, headphone.Price, store.Name, store.Neighborhood, store.Parking, store.Date_Opened FROM headphone INNER JOIN stock ON headphone.Headphone_ID = stock.Headphone_ID INNER JOIN store ON stock.Store_ID = store.Store_ID WHERE store.Name = 'Woodman' ORDER BY headphone.Headphone_ID ASC; 
SELECT headphone.Headphone_ID, headphone.Model, headphone.Class, headphone.Driver-matched_dB, headphone.Construction, headphone.Earpads, headphone.Price, store.Name, store.Neighborhood, store.Parking, store.Date_Opened, stock.Quantity 
SELECT store.Store_ID, store.Name, store.Neighborhood 
SELECT store.Store_ID, store.Name, store.Neighborhood, store.Parking, store.Date_Opened 
SELECT paper_id, COUNT(DISTINCT author_id) AS num_authors FROM Author_list GROUP BY paper_id; 
SELECT paper_id, COUNT(author_id) AS num_authors FROM Author_list GROUP BY paper_id; 
SELECT paper_id FROM Paper 
SELECT paper_id FROM Paper WHERE paper_id IS NOT NULL; 
SELECT Affiliation.venue 
SELECT Affiliation.venue 
SELECT paper_id FROM Paper WHERE year = 2000 AND venue = 'NAACL'; 
SELECT paper_id FROM Paper WHERE year = 2000 AND venue = 'NAACL' AND title = 'NAACL 2000' AND year = 2000 AND venue = 'NAACL' AND title = 'NAACL 2000' AND year = 2000 AND venue = 'NAACL' AND title = 'NAACL 2000' AND year = 2000 AND venue = 'NAACL' AND title = 'NAACL 2000' AND year = 2000 AND venue = 'NAACL' AND title = 'NAACL 2000' AND year = 2000 AND venue = 'NAACL' AND title = 'NAACL 2000' AND year = 2000 AND venue = 'NAACL' AND title = 'NAACL 2000' AND year = 2000 AND venue = 'NAACL' AND title = 'NAACL 2000' AND year = 2000 AND venue = 'NAACL' AND title = 'NAACL 2000' AND year = 2000 AND venue = 'NAACL' AND title = 'NAACL 2000' AND year = 2000 AND venue = 'NAACL' AND title = 'NAACL 2000' AND year = 2000 AND venue = 'NAACL' AND title = 'NAACL 2000' AND year = 2000 AND venue = 'NAACL' AND title = 'NAACL 2000' AND year = 2000 AND venue = 'NAACL' AND title = 'NAACL 2000' AND year = 2000 AND venue = 'NAACL' AND title = 'NAACL 2000' AND year
SELECT paper_id FROM Paper WHERE year = 2009 AND title IN (SELECT title FROM Paper WHERE venue = 'Columbia University'); 
SELECT paper_id 
SELECT Affiliation.venue, Affiliation.address FROM Affiliation WHERE Affiliation.venue = 'SIGMOD' AND Affiliation.address LIKE '%University%'; 
SELECT Affiliation.venue, Affiliation.address FROM Affiliation INNER JOIN Author_list ON Affiliation.affiliation_id = Author_list.affiliation_id INNER JOIN Author ON Author_list.author_id = Author.author_id WHERE Author.email = 'johndoe@cs.com' AND Affiliation.venue = 'SIGMOD' AND Affiliation.address = 'New York' ORDER BY Affiliation.venue, Affiliation.address; 
SELECT venue, year FROM Paper ORDER BY year; 
SELECT venue FROM Paper WHERE year IN (SELECT year FROM Paper GROUP BY year ORDER BY year DESC) ORDER BY year DESC; 
SELECT title, paper_id FROM Paper WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE affiliation_id IN (SELECT affiliation_id FROM Affiliation WHERE name = 'Harvard University')); 
SELECT paper_id, title FROM Paper p JOIN Author_list al ON p.paper_id = al.paper_id JOIN Author a ON al.author_id = a.author_id JOIN Affiliation af ON al.affiliation_id = af.affiliation_id WHERE af.name = 'Harvard University' ORDER BY title ASC; 
SELECT paper_id, title FROM Paper WHERE author_id IN (SELECT author_id FROM Author WHERE name = 'Mckeown') ORDER BY paper_id ASC; 
SELECT paper_id, title FROM Paper WHERE author_id IN (SELECT author_id FROM Author WHERE name = 'Mckeown') ORDER BY title ASC; 
SELECT paper_id, title FROM Paper WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE affiliation_id IN (SELECT affiliation_id FROM Affiliation WHERE name IN ('Stanford University', 'Columbia University')))) ORDER BY paper_id ASC; 
SELECT title, paper_id FROM Paper WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE affiliation_id IN (SELECT affiliation_id FROM Affiliation WHERE name = 'Stanford') AND paper_id IN (SELECT paper_id FROM Author_list WHERE affiliation_id IN (SELECT affiliation_id FROM Affiliation WHERE name = 'Columbia'))) ORDER BY title ASC; 
SELECT paper_id, title FROM Paper WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE name IN ('Mckeown, Kathleen', 'Rambow, Owen'))) 
SELECT paper_id, title FROM Paper p JOIN Author_list al ON p.paper_id = al.paper_id JOIN Author a ON al.author_id = a.author_id JOIN Author_list al2 ON p.paper_id = al2.paper_id JOIN Author a2 ON al2.author_id = a2.author_id WHERE a.name = 'Mckeown, Kathleen' AND a2.name = 'Rambow, Owen' GROUP BY paper_id, title HAVING COUNT(*) = 2 ORDER BY title ASC; 
SELECT title, paper_id FROM Paper WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE name = 'Mckeown') AND paper_id NOT IN (SELECT paper_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE name = 'Rambow'))) 
SELECT title, paper_id FROM Paper WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE name = 'Mckeown') AND paper_id NOT IN (SELECT paper_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE name = 'Rambow'))) 
SELECT title, paper_id FROM Paper WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE name IN ('Mckeown, Kathleen', 'Rambow, Owen'))) 
SELECT title, paper_id FROM Paper WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE name IN ('Mckeown, Kathleen', 'Rambow, Owen'))) 
SELECT Author.venue, Author.name, COUNT(Paper.paper_id) AS num_papers FROM Author JOIN Author_list ON Author.author_id = Author_list.author_id JOIN Paper ON Author_list.paper_id = Paper.paper_id GROUP BY Author.venue, Author.name ORDER BY num_papers DESC; 
SELECT Author_list.paper_id, Author_list.author_id, Author_list.affiliation_id, Author.name, Author.email, Affiliation.name, Affiliation.address, COUNT(Paper.paper_id) AS num_papers 
SELECT Affiliation.venue, COUNT(Paper.paper_id) AS num_papers 
SELECT Affiliation.venue, COUNT(Paper.paper_id) AS num_papers 
SELECT Author_list.paper_id, Author_list.author_id, Author_list.affiliation_id, Author.name, Affiliation.name FROM Author_list JOIN Author ON Author_list.author_id = Author.author_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Author_list.paper_id IN (SELECT Paper.paper_id FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id GROUP BY Paper.paper_id HAVING COUNT(*) > 50) ORDER BY Author_list.paper_id, Author_list.author_id, Author_list.affiliation_id, Author.name, Affiliation.name; 
SELECT Author_list.paper_id, Author_list.author_id, Author_list.affiliation_id, Author.name, Affiliation.name FROM Author_list JOIN Author ON Author_list.author_id = Author.author_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Author_list.paper_id IN (SELECT paper_id FROM Paper GROUP BY paper_id HAVING COUNT(paper_id) > 50) ORDER BY Author_list.paper_id, Author_list.author_id; 
SELECT Author_list.paper_id, Author_list.author_id, Author_list.affiliation_id, Author.name, Affiliation.name FROM Author_list JOIN Author ON Author_list.author_id = Author.author_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Author_list.paper_id IN (SELECT paper_id FROM Paper GROUP BY paper_id HAVING COUNT(*) = 1) ORDER BY Author_list.paper_id, Author_list.author_id; 
SELECT Author_list.paper_id, Author_list.author_id, Author_list.affiliation_id, Author.name, Affiliation.name FROM Author_list JOIN Author ON Author_list.author_id = Author.author_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Author_list.paper_id IN (SELECT paper_id FROM Paper GROUP BY paper_id HAVING COUNT(*) = 1) ORDER BY Author_list.paper_id, Author_list.author_id; 
SELECT venue, year, COUNT(*) AS num_publications FROM Paper GROUP BY venue, year ORDER BY num_publications DESC LIMIT 1; 
SELECT venue, year, COUNT(*) AS num_papers FROM Paper GROUP BY venue, year ORDER BY num_papers DESC LIMIT 1; 
SELECT venue FROM Paper WHERE paper_id IN (SELECT paper_id FROM Citation GROUP BY paper_id HAVING COUNT(*) = (SELECT COUNT(*) FROM Paper GROUP BY paper_id ORDER BY COUNT(*) ASC LIMIT 1)) ORDER BY venue ASC LIMIT 1; 
SELECT venue FROM Paper WHERE paper_id IN (SELECT paper_id FROM Citation WHERE cited_paper_id IN (SELECT paper_id FROM Paper WHERE venue IN (SELECT venue FROM Paper WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE name IN (SELECT name FROM Author WHERE author_id IN (SELECT author_id FROM Author_list WHERE affiliation_id IN (SELECT affiliation_id FROM Affiliation WHERE name IN (SELECT name FROM Affiliation WHERE affiliation_id IN (SELECT affiliation_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE name IN (SELECT name FROM Author WHERE author_id IN (SELECT author_id FROM Author_list WHERE paper_id IN (SELECT paper_id FROM Paper WHERE venue IN (SELECT venue FROM Paper WHERE paper_id IN (SELECT paper_id FROM Citation WHERE cited_paper_id IN (SELECT cited_paper_id FROM Citation WHERE paper_id IN (SELECT paper_id FROM Paper WHERE venue IN (SELECT venue FROM Paper WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE name IN (SELECT name FROM Author WHERE author_id IN (SELECT author_id FROM Author_list WHERE affiliation_id IN (SELECT affiliation_id FROM Affiliation WHERE
SELECT paper_id FROM Paper WHERE paper_id = 'A00-1002'; 
SELECT paper_id, COUNT(*) AS num_citations FROM Citation WHERE cited_paper_id = 'A00-1002' GROUP BY paper_id; 
SELECT paper_id, COUNT(cited_paper_id) AS num_citations FROM Citation WHERE paper_id = 'D12-1027' GROUP BY paper_id; 
SELECT paper_id, COUNT(cited_paper_id) AS num_citations FROM Citation WHERE paper_id = 'D12-1027' GROUP BY paper_id; 
SELECT paper_id, COUNT(cited_paper_id) AS num_citations FROM Citation GROUP BY paper_id ORDER BY num_citations DESC LIMIT 1; 
SELECT paper_id, COUNT(cited_paper_id) AS num_citations FROM Citation GROUP BY paper_id ORDER BY num_citations DESC LIMIT 1; 
SELECT title FROM Paper WHERE paper_id IN (SELECT paper_id FROM Citation GROUP BY paper_id HAVING COUNT(*) > 1); 
SELECT title FROM Paper WHERE paper_id IN (SELECT paper_id FROM Citation GROUP BY paper_id HAVING COUNT(*) > (SELECT COUNT(*) FROM Citation)); 
SELECT paper_id, COUNT(*) AS num_citations FROM Citation GROUP BY paper_id ORDER BY num_citations DESC LIMIT 10; 
SELECT paper_id, COUNT(*) AS num_citations FROM Citation GROUP BY paper_id ORDER BY num_citations DESC LIMIT 10; 
SELECT paper_id, COUNT(cited_paper_id) AS num_citations FROM Citation WHERE cited_paper_id IN (SELECT author_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE name = 'Mckeown, Kathleen')) GROUP BY paper_id HAVING COUNT(cited_paper_id) > 0 
SELECT paper_id 
SELECT paper_id FROM Paper WHERE title = 'How many papers does Mckeown, Kathleen cite?' AND year = 2019; 
SELECT paper_id FROM Paper WHERE title = 'Mckeown' AND author_id = 'Kathleen' AND year = 2018; 
SELECT Author_list.paper_id, Author_list.author_id, Author_list.affiliation_id, Author.name, COUNT(Citation.cited_paper_id) AS num_citations FROM Author_list JOIN Author ON Author_list.author_id = Author.author_id JOIN Citation ON Citation.paper_id = Author_list.paper_id GROUP BY Author_list.paper_id, Author_list.author_id, Author_list.affiliation_id, Author.name ORDER BY num_citations DESC LIMIT 1; 
SELECT Author_list.paper_id, Author_list.author_id, Author_list.affiliation_id, Author.name, COUNT(Citation.cited_paper_id) AS num_citations FROM Author_list JOIN Author ON Author_list.author_id = Author.author_id JOIN Citation ON Citation.paper_id = Author_list.paper_id GROUP BY Author_list.paper_id, Author_list.author_id, Author_list.affiliation_id, Author.name ORDER BY num_citations DESC LIMIT 1; 
SELECT venue, year FROM Paper WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE name = 'Mckeown, Kathleen') AND affiliation_id IS NULL) ORDER BY year DESC; 
SELECT venue, year FROM Paper WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE name = 'Mckeown, Kathleen')) ORDER BY year ASC; 
SELECT venue, year FROM Paper WHERE affiliation_id = (SELECT affiliation_id FROM Affiliation WHERE name = 'Columbia University'); 
SELECT venue, year FROM Paper WHERE affiliation_id = (SELECT affiliation_id FROM Affiliation WHERE name = 'Columbia University'); 
SELECT Author_list.paper_id, Author_list.author_id, Author_list.affiliation_id, Author.name, Affiliation.name, Affiliation.address FROM Author_list JOIN Author ON Author_list.author_id = Author.author_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Author_list.paper_id IN (SELECT Paper.paper_id FROM Paper WHERE Paper.year = 2009) ORDER BY Author_list.paper_id ASC, Author_list.author_id ASC, Author_list.affiliation_id ASC; 
SELECT Author_list.paper_id, Author_list.author_id, Author_list.affiliation_id, Author.name, Affiliation.name, Affiliation.address FROM Author_list JOIN Author ON Author_list.author_id = Author.author_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Author_list.paper_id IN (SELECT Paper.paper_id FROM Paper WHERE Paper.year = 2009) GROUP BY Author_list.paper_id, Author_list.author_id, Author_list.affiliation_id, Author.name, Affiliation.name, Affiliation.address HAVING COUNT(*) = (SELECT COUNT(*) FROM Author_list WHERE Author_list.paper_id IN (SELECT Paper.paper_id FROM Paper WHERE Paper.year = 2009)) ORDER BY COUNT(*) DESC LIMIT 1; 
SELECT Affiliation.venue, Affiliation.name, COUNT(Paper.year) AS num_papers 
SELECT Affiliation.venue, Affiliation.name, COUNT(Paper.year) AS num_papers 
SELECT paper_id FROM Paper WHERE year <= 2009 AND venue = 'Columbia University' GROUP BY paper_id HAVING COUNT(*) > 1; 
SELECT paper_id FROM Paper WHERE year <= 2009 AND venue = 'Columbia University' GROUP BY paper_id HAVING COUNT(*) > 1; 
SELECT paper_id FROM Paper WHERE year BETWEEN 2000 AND 2009 AND venue = 'Stanford University'; 
SELECT paper_id FROM Paper WHERE year BETWEEN 2000 AND 2009 AND venue = 'Stanford University'; 
SELECT title FROM Paper WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE author_id IN (SELECT author_id FROM Author_list WHERE affiliation_id IN (SELECT affiliation_id FROM Affiliation WHERE affiliation_id IN (SELECT affiliation_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE author_id IN (SELECT author_id FROM Author_list WHERE paper_id IN (SELECT paper_id FROM Citation WHERE cited_paper_id IN (SELECT cited_paper_id FROM Citation WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE author_id IN (SELECT author_id FROM Author_list WHERE affiliation_id IN (SELECT affiliation_id FROM Affiliation WHERE affiliation_id IN (SELECT affiliation_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE author_id IN (SELECT author_id FROM Author_list WHERE paper_id IN (SELECT paper_id FROM Citation WHERE cited_paper_id IN (SELECT cited_paper_id FROM Citation WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE author_id IN (SELECT author_id FROM Author_list WHERE affiliation_id IN (SELECT affiliation_id FROM Affiliation WHERE affiliation_id IN (
SELECT title FROM Paper WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE author_id IN (SELECT author_id FROM Author_list WHERE affiliation_id IN (SELECT affiliation_id FROM Affiliation WHERE affiliation_id IN (SELECT affiliation_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE author_id IN (SELECT author_id FROM Author_list WHERE paper_id IN (SELECT paper_id FROM Paper WHERE paper_id IN (SELECT paper_id FROM Citation WHERE cited_paper_id IN (SELECT cited_paper_id FROM Citation WHERE paper_id IN (SELECT paper_id FROM Paper WHERE paper_id IN (SELECT paper_id FROM Citation WHERE cited_paper_id IN (SELECT cited_paper_id FROM Citation WHERE paper_id IN (SELECT paper_id FROM Paper WHERE paper_id IN (SELECT paper_id FROM Citation WHERE cited_paper_id IN (SELECT cited_paper_id FROM Citation WHERE paper_id IN (SELECT paper_id FROM Paper WHERE paper_id IN (SELECT paper_id FROM Citation WHERE cited_paper_id IN (SELECT cited_paper_id FROM Citation WHERE paper_id IN (SELECT paper_id FROM Paper WHERE paper_id IN (SELECT paper_id FROM Citation WHERE cited_paper_id IN (SELECT cited_paper_id FROM Citation WHERE paper_id IN (
SELECT paper_id, author_id, affiliation_id FROM Author_list WHERE author_id = (SELECT author_id FROM Author WHERE name = 'Mckeown, Kathleen') AND affiliation_id IS NOT NULL; 
SELECT Affiliation.venue 
SELECT paper_id, title, venue, year FROM Paper WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE author_id IN (SELECT author_id FROM Author WHERE name = 'Mckeown, Kathleen ')) ORDER BY year DESC; 
SELECT Author_list.paper_id, Author_list.author_id, Author_list.affiliation_id, Affiliation.name, Affiliation.address, Author.name, Author.email FROM Author_list, Affiliation, Author WHERE Author_list.author_id = Author.author_id AND Author_list.affiliation_id = Affiliation.affiliation_id AND Author_list.paper_id IN (SELECT Paper.paper_id FROM Paper WHERE Paper.title = 'Mckeown, Kathleen') AND Author_list.author_id IN (SELECT Author.author_id FROM Author WHERE Author.name = 'Mckeown, Kathleen') GROUP BY Author_list.paper_id, Author_list.author_id, Author_list.affiliation_id, Affiliation.name, Affiliation.address, Author.name, Author.email HAVING COUNT(*) = (SELECT COUNT(*) FROM Author_list WHERE Author_list.author_id = (SELECT Author.author_id FROM Author WHERE Author.name = 'Mckeown, Kathleen') AND Author_list.paper_id IN (SELECT Paper.paper_id FROM Paper WHERE Paper.title = 'Mckeown, Kathleen')) ORDER BY COUNT(*) DESC LIMIT 1; 
SELECT paper_id FROM Paper WHERE title LIKE '%translation%'; 
SELECT paper_id FROM Paper WHERE title LIKE '%translation%'; 
SELECT paper_id, title FROM Paper WHERE paper_id NOT IN (SELECT paper_id FROM Citation); 
SELECT paper_id, title FROM Paper WHERE paper_id NOT IN (SELECT paper_id FROM Citation); 
SELECT Affiliation.venue FROM Affiliation WHERE Affiliation.address LIKE '%China%' AND Affiliation.venue IN (SELECT Paper.venue FROM Paper WHERE Paper.year IN (SELECT MAX(Paper.year) FROM Paper WHERE Paper.venue IN (SELECT Affiliation.venue FROM Affiliation WHERE Affiliation.address LIKE '%China%')));  
SELECT Affiliation.venue FROM Affiliation WHERE Affiliation.address LIKE '%China%' ORDER BY COUNT(Paper.paper_id) DESC LIMIT 1; 
SELECT year, venue, COUNT(*) FROM Paper GROUP BY year, venue ORDER BY year ASC, venue ASC; 
SELECT venue, year, COUNT(paper_id) FROM Paper GROUP BY venue, year ORDER BY venue, year; 
SELECT Affiliation.venue, COUNT(Paper.paper_id) AS total_papers 
SELECT Affiliation.venue, Affiliation.name, COUNT(Paper.paper_id) AS num_papers 
SELECT title FROM Paper WHERE paper_id IN (SELECT paper_id FROM Citation WHERE cited_paper_id IN (SELECT paper_id FROM Citation GROUP BY paper_id HAVING COUNT(*) > 50)); 
SELECT title FROM Paper WHERE paper_id IN (SELECT paper_id FROM Citation WHERE cited_paper_id IN (SELECT paper_id FROM Citation GROUP BY paper_id HAVING COUNT(*) > 50)); 
SELECT paper_id, title, venue, year FROM Paper WHERE paper_id IN (SELECT paper_id FROM Citation WHERE cited_paper_id IN (SELECT paper_id FROM Paper WHERE year > 2010)) AND year > 2010; 
SELECT Author.venue, Author.name, COUNT(Citation.cited_paper_id) AS citations 
SELECT Author.venue, Author.name FROM Author_list, Author WHERE Author_list.paper_id IN (SELECT Paper.paper_id FROM Paper WHERE Paper.year = 2009 AND Paper.venue IN ('NAACL', 'ACL')) AND Author_list.author_id = Author.author_id AND Author_list.paper_id = Paper.paper_id; 
SELECT Author_list.paper_id, Author_list.author_id, Author_list.affiliation_id, Author.name, Affiliation.name FROM Author_list JOIN Author ON Author_list.author_id = Author.author_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Author_list.paper_id IN (SELECT paper_id FROM Paper WHERE venue IN ('NAACL', 'ACL') AND year = 2009) ORDER BY Author_list.paper_id ASC, Author_list.author_id ASC; 
SELECT Author.venue FROM Author_list WHERE Author_list.paper_id NOT IN (SELECT Citation.paper_id FROM Citation WHERE Citation.cited_paper_id IN (SELECT Paper.paper_id FROM Paper WHERE Paper.venue = 'ACL')) AND Author_list.author_id = Author.author_id; 
SELECT Author.venue FROM Author_list WHERE Author_list.paper_id NOT IN (SELECT Paper.paper_id FROM Paper WHERE Paper.venue = 'ACL') AND Author_list.author_id = Author.author_id; 
SELECT Conference_ID FROM conference 
SELECT Conference_ID FROM conference 
SELECT Conference_ID, Conference_Name FROM conference GROUP BY Conference_Name HAVING COUNT(Conference_Name) = 1; 
SELECT Conference_ID, Conference_Name FROM conference GROUP BY Conference_Name HAVING COUNT(Conference_Name) > 1; 
SELECT conference.Conference_ID, conference.Conference_Name, conference.Year, conference.Location FROM conference 
SELECT conference.Conference_ID, conference.Conference_Name, conference.Year, conference.Location FROM conference 
SELECT Conference_ID, Conference_Name, COUNT(*) AS num_conferences FROM conference GROUP BY Conference_ID, Conference_Name; 
SELECT Conference_ID, Conference_Name, COUNT(*) AS num_conferences FROM conference GROUP BY Conference_Name; 
SELECT Conference_ID, Year, COUNT(Conference_ID) FROM conference GROUP BY Year ORDER BY Year ASC; 
SELECT Conference_ID, Year FROM conference GROUP BY Conference_ID, Year HAVING COUNT(*) = (SELECT COUNT(DISTINCT Year) FROM conference); 
SELECT Conference_ID, Conference_Name, Year, Location FROM conference ORDER BY Year ASC LIMIT 1; 
SELECT Conference_ID, Year FROM conference GROUP BY Conference_ID, Year ORDER BY COUNT(Conference_ID) ASC LIMIT 1; 
SELECT Conference_ID, Location FROM conference GROUP BY Location HAVING COUNT(Conference_ID) >= 2; 
SELECT Conference_ID, Location FROM conference GROUP BY Location HAVING COUNT(Conference_ID) >= 2; 
SELECT institution.Conference_ID, institution.Institution_Name, institution.Location, institution.Founded 
SELECT institution.Conference_ID, institution.Institution_Name, institution.Location, institution.Founded 
SELECT institution.Conference_ID, institution.Institution_Name, conference.Conference_Name, conference.Year, conference.Location 
SELECT institution.Conference_ID, institution.Institution_Name, conference.Conference_Name, conference.Year, conference.Location 
SELECT institution.Conference_ID, institution.Institution_Name, institution.Location 
SELECT institution.Conference_ID, institution.Institution_Name, institution.Location 
SELECT institution.Conference_ID, institution.Institution_Name, COUNT(staff.staff_ID) AS num_staff 
SELECT institution.staff_ID, institution.Institution_Name, institution.Location, institution.Founded, staff.name, staff.Age, staff.Nationality, staff.Institution_ID, conference_participation.role, conference.Conference_ID, conference.Conference_Name, conference.Year, conference.Location FROM institution INNER JOIN staff ON institution.Institution_ID = staff.Institution_ID INNER JOIN conference_participation ON staff.staff_ID = conference_participation.staff_ID INNER JOIN conference ON conference_participation.Conference_ID = conference.Conference_ID WHERE institution.Founded > 1800 GROUP BY institution.Institution_ID, institution.Institution_Name, institution.Location, institution.Founded, staff.name, staff.Age, staff.Nationality, staff.Institution_ID, conference_participation.role, conference.Conference_ID, conference.Conference_Name, conference.Year, conference.Location HAVING COUNT(*) > 0 ORDER BY institution.Institution_ID, institution.Institution_Name, institution.Location, institution.Founded, staff.name, staff.Age, staff.Nationality, staff.Institution_ID, conference_participation.role, conference.Conference_ID, conference.Conference_Name, conference.Year, conference
SELECT institution.Conference_ID, institution.Institution_Name 
SELECT institution.Conference_ID, institution.Institution_Name 
SELECT staff.staff_ID, staff.name FROM staff WHERE staff.Age > (SELECT AVG(staff.Age) FROM staff); 
SELECT staff_ID, name FROM staff WHERE Age > (SELECT AVG(Age) FROM staff); 
SELECT staff_ID, MAX(Age), MIN(Age) FROM staff WHERE Nationality = 'United States' GROUP BY staff_ID; 
SELECT staff_ID, MAX(Age), MIN(Age) FROM staff GROUP BY staff_ID; 
SELECT Conference_ID, Conference_Name FROM conference WHERE Conference_ID IN (SELECT Conference_ID FROM conference_participation WHERE staff_ID IN (SELECT staff_ID FROM staff WHERE Nationality = 'Canada' AND role ='speaker') OR Conference_ID IN (SELECT Conference_ID FROM conference_participation WHERE staff_ID IN (SELECT staff_ID FROM staff WHERE Nationality = 'Canada' AND role = 'chair'))) ORDER BY Conference_Name ASC; 
SELECT Conference_ID, Conference_Name FROM conference WHERE Conference_ID IN (SELECT Conference_ID FROM conference_participation WHERE staff_ID IN (SELECT staff_ID FROM staff WHERE Nationality = 'Canada' AND role = 'attending') ) 
SELECT staff.staff_ID, staff.name FROM staff WHERE staff.staff_ID IN (SELECT staff_ID FROM conference_participation WHERE role ='speaker' OR role ='sponsor') AND staff.staff_ID IN (SELECT staff_ID FROM conference_participation WHERE role ='speaker' AND role ='sponsor') ORDER BY staff.staff_ID ASC; 
SELECT staff_ID, name FROM staff WHERE staff_ID IN (SELECT staff_ID FROM conference_participation WHERE role ='speaker' AND staff_ID IN (SELECT staff_ID FROM conference_participation WHERE role ='sponsor')) ORDER BY staff_ID; 
SELECT staff.staff_ID, staff.name FROM staff WHERE staff.staff_ID IN (SELECT staff_ID FROM conference_participation WHERE Conference_ID IN (SELECT Conference_ID FROM conference WHERE Conference_Name IN ('ACL', 'NACCL'))) ORDER BY staff.staff_ID ASC; 
SELECT staff_ID, name FROM staff WHERE staff_ID IN (SELECT staff_ID FROM conference_participation WHERE Conference_ID IN (SELECT Conference_ID FROM conference WHERE Conference_Name IN ('ACL', 'NACCL'))) ORDER BY staff_ID; 
SELECT staff.staff_ID, staff.name FROM staff WHERE staff.staff_ID IN (SELECT staff_ID FROM conference_participation WHERE Conference_ID IN (SELECT Conference_ID FROM conference WHERE Year IN (2003, 2004))) ORDER BY staff.staff_ID ASC; 
SELECT staff.staff_ID, staff.name 
SELECT conference.Conference_ID, conference.Conference_Name, conference.Year, COUNT(conference_participation.staff_ID) AS num_participants 
SELECT conference.Conference_ID, conference.Conference_Name, conference.Year, COUNT(conference_participation.staff_ID) AS num_participants FROM conference LEFT JOIN conference_participation ON conference.Conference_ID = conference_participation.Conference_ID GROUP BY conference.Conference_ID, conference.Conference_Name, conference.Year; 
SELECT Conference_ID, Conference_Name FROM conference WHERE Conference_ID IN (SELECT Conference_ID FROM conference_participation GROUP BY Conference_ID ORDER BY COUNT(*) DESC LIMIT 2); 
SELECT Conference_ID, Conference_Name FROM conference WHERE Conference_ID IN (SELECT Conference_ID FROM conference_participation GROUP BY Conference_ID HAVING COUNT(*) >= 2); 
SELECT staff.staff_ID, staff.name, staff.Nationality 
SELECT staff.staff_ID, staff.name, staff.Nationality 
SELECT institution.Conference_ID, institution.Institution_Name, institution.Location 
SELECT institution.Conference_ID, institution.Institution_Name, institution.Location 
SELECT PilotSkills.plane_name, PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills WHERE PilotSkills.age = (SELECT MAX(PilotSkills.age) FROM PilotSkills) ORDER BY PilotSkills.age DESC LIMIT 1; 
SELECT PilotSkills.plane_name, PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills WHERE PilotSkills.age = (SELECT MAX(PilotSkills.age) FROM PilotSkills); 
SELECT PilotSkills.plane_name, PilotSkills.pilot_name FROM PilotSkills WHERE PilotSkills.age < (SELECT AVG(PilotSkills.age) FROM PilotSkills) ORDER BY PilotSkills.age DESC; 
SELECT PilotSkills.plane_name, PilotSkills.pilot_name FROM PilotSkills WHERE PilotSkills.age < (SELECT AVG(PilotSkills.age) FROM PilotSkills) ORDER BY PilotSkills.age ASC; 
SELECT plane_name, pilot_name, age FROM PilotSkills WHERE age < 30; 
SELECT plane_name, pilot_name, age FROM PilotSkills WHERE age < 30; 
SELECT PilotSkills.plane_name FROM PilotSkills WHERE PilotSkills.plane_name = 'Piper Cub' AND PilotSkills.age < 35; 
SELECT PilotSkills.plane_name, PilotSkills.pilot_name FROM PilotSkills WHERE PilotSkills.age < 35 AND PilotSkills.plane_name = 'Piper Cub' ORDER BY PilotSkills.plane_name ASC, PilotSkills.pilot_name ASC; 
SELECT location FROM Hangar WHERE plane_name = 'F-14 Fighter'  
SELECT location FROM Hangar WHERE plane_name = 'F-14 Fighter'; 
SELECT location FROM Hangar WHERE plane_name IN (SELECT plane_name FROM PilotSkills WHERE pilot_name IN (SELECT pilot_name FROM PilotSkills WHERE age > 50)) GROUP BY location HAVING COUNT(*) > 1 
SELECT location FROM Hangar 
SELECT plane_name FROM PilotSkills WHERE pilot_name = 'Jones' AND age = 32; 
SELECT plane_name FROM PilotSkills WHERE pilot_name = 'Jones' AND age = 32; 
SELECT PilotSkills.plane_name, PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills WHERE PilotSkills.age > 40; 
SELECT PilotSkills.plane_name, COUNT(PilotSkills.pilot_name) FROM PilotSkills WHERE PilotSkills.age > 40 GROUP BY PilotSkills.plane_name HAVING COUNT(PilotSkills.pilot_name) > 1 ORDER BY COUNT(PilotSkills.pilot_name) DESC; 
SELECT plane_name FROM PilotSkills WHERE pilot_name = 'John Doe' AND plane_name = 'B-52 Bomber' AND age < 35; 
SELECT plane_name FROM PilotSkills WHERE age < 35 AND plane_name = 'B-52 Bomber'  
SELECT plane_name, pilot_name FROM PilotSkills WHERE age = (SELECT MIN(age) FROM PilotSkills WHERE plane_name = 'Piper Cub') AND plane_name = 'Piper Cub'; 
SELECT PilotSkills.plane_name FROM PilotSkills WHERE PilotSkills.plane_name = 'Piper Cub' AND PilotSkills.age = (SELECT MIN(PilotSkills.age) FROM PilotSkills WHERE PilotSkills.plane_name = 'Piper Cub')  
SELECT plane_name 
SELECT plane_name FROM PilotSkills WHERE plane_name IN (SELECT plane_name FROM PilotSkills GROUP BY plane_name HAVING COUNT(*) = (SELECT COUNT(*) FROM PilotSkills GROUP BY plane_name ORDER BY COUNT(*) DESC LIMIT 1))  
SELECT plane_name FROM PilotSkills 
SELECT plane_name FROM PilotSkills WHERE plane_name IN (SELECT plane_name FROM PilotSkills GROUP BY plane_name HAVING COUNT(*) = 1) ORDER BY plane_name ASC 
SELECT PilotSkills.plane_name, PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills WHERE PilotSkills.plane_name IN (SELECT plane_name FROM Hangar WHERE location = 'Chicago')  
SELECT PilotSkills.plane_name, COUNT(PilotSkills.pilot_name) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.location = 'Chicago' GROUP BY PilotSkills.plane_name HAVING COUNT(PilotSkills.pilot_name) > 1; 
SELECT plane_name FROM PilotSkills WHERE pilot_name = 'Smith' AND age = 41; 
SELECT plane_name FROM PilotSkills WHERE pilot_name = 'Smith' AND age = 41; 
SELECT plane_name FROM PilotSkills 
SELECT plane_name FROM PilotSkills 
SELECT plane_name FROM PilotSkills WHERE pilot_name = 'Smith' AND plane_name = 'plane_name' AND age = 30 
SELECT plane_name FROM PilotSkills WHERE pilot_name = 'Smith' AND age IS NULL; 
SELECT plane_name FROM PilotSkills WHERE age > 40; 
SELECT plane_name, COUNT(*) FROM PilotSkills WHERE age > 40 GROUP BY plane_name; 
SELECT PilotSkills.plane_name, PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills WHERE PilotSkills.age BETWEEN 30 AND 40 ORDER BY PilotSkills.age ASC; 
SELECT PilotSkills.plane_name, PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills WHERE PilotSkills.age BETWEEN 30 AND 40 ORDER BY PilotSkills.age ASC; 
SELECT PilotSkills.plane_name, PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills ORDER BY PilotSkills.age DESC; 
SELECT PilotSkills.plane_name, PilotSkills.pilot_name 
SELECT location FROM Hangar WHERE plane_name IN (SELECT plane_name FROM PilotSkills WHERE pilot_name = 'John Doe' AND age > 30) ORDER BY plane_name; 
SELECT location FROM Hangar WHERE plane_name IN (SELECT plane_name FROM PilotSkills WHERE pilot_name = 'John Doe' AND age > 30) 
SELECT plane_name FROM PilotSkills 
SELECT plane_name FROM PilotSkills 
SELECT PilotSkills.plane_name, PilotSkills.pilot_name FROM PilotSkills WHERE PilotSkills.age > 40 OR PilotSkills.age < 30; 
SELECT PilotSkills.plane_name, COUNT(PilotSkills.pilot_name) FROM PilotSkills WHERE PilotSkills.age > 40 OR PilotSkills.age < 30 GROUP BY PilotSkills.plane_name HAVING COUNT(PilotSkills.pilot_name) > 1 ORDER BY PilotSkills.plane_name ASC; 
SELECT PilotSkills.plane_name, PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills WHERE PilotSkills.plane_name = 'Piper Cub' AND PilotSkills.age > 35 OR PilotSkills.plane_name = 'F-14 Fighter' AND PilotSkills.age < 30 
SELECT PilotSkills.plane_name, PilotSkills.age FROM PilotSkills WHERE PilotSkills.plane_name IN ('Piper Cub', 'F-14 Fighter') AND PilotSkills.age IN (35, 30) ORDER BY PilotSkills.plane_name ASC, PilotSkills.age DESC; 
SELECT PilotSkills.plane_name FROM PilotSkills WHERE PilotSkills.plane_name = 'Piper Cub' AND PilotSkills.plane_name!= 'B-52 Bomber'; 
SELECT PilotSkills.plane_name 
SELECT PilotSkills.plane_name FROM PilotSkills WHERE PilotSkills.plane_name IN ('Piper Cub', 'B-52 Bomber') AND PilotSkills.plane_name IS NOT NULL; 
SELECT PilotSkills.plane_name 
SELECT plane_name, AVG(age), MIN(age) FROM PilotSkills GROUP BY plane_name 
SELECT plane_name, AVG(age) AS avg_age, MIN(age) AS min_age FROM PilotSkills GROUP BY plane_name 
SELECT PilotSkills.plane_name 
SELECT PilotSkills.plane_name FROM PilotSkills WHERE PilotSkills.plane_name IN (SELECT Hangar.plane_name FROM Hangar WHERE Hangar.location='Austin' OR Hangar.location='Boston')  
SELECT PilotSkills.plane_name FROM PilotSkills WHERE PilotSkills.plane_name IN ('Piper Cub', 'F-14 Fighter') OR PilotSkills.plane_name IN ('Piper Cub', 'F-14 Fighter') ORDER BY PilotSkills.plane_name ASC 
SELECT PilotSkills.plane_name FROM PilotSkills WHERE PilotSkills.plane_name IN ('Piper Cub', 'F-14 Fighter') OR PilotSkills.plane_name IN ('Piper Cub', 'F-14 Fighter') ORDER BY PilotSkills.plane_name ASC; 
SELECT plane_name, AVG(age) FROM PilotSkills GROUP BY plane_name; 
SELECT plane_name, AVG(age) FROM PilotSkills GROUP BY plane_name; 
SELECT plane_name, COUNT(plane_name) FROM Hangar GROUP BY plane_name; 
SELECT plane_name, COUNT(*) FROM PilotSkills GROUP BY plane_name; 
SELECT plane_name, pilot_name FROM PilotSkills WHERE age = (SELECT MAX(age) FROM PilotSkills) ORDER BY plane_name 
SELECT plane_name, pilot_name FROM PilotSkills ORDER BY plane_name ASC; 
SELECT plane_name, pilot_name FROM PilotSkills WHERE age = (SELECT MAX(age) FROM PilotSkills) GROUP BY plane_name 
SELECT plane_name, pilot_name FROM PilotSkills WHERE age = (SELECT MAX(age) FROM PilotSkills) GROUP BY plane_name 
SELECT PilotSkills.plane_name, PilotSkills.pilot_name, MAX(PilotSkills.age) FROM PilotSkills GROUP BY PilotSkills.pilot_name, PilotSkills.plane_name; 
SELECT PilotSkills.plane_name, PilotSkills.pilot_name, MAX(PilotSkills.age) FROM PilotSkills GROUP BY PilotSkills.pilot_name, PilotSkills.plane_name; 
SELECT location, COUNT(pilot_name), AVG(age) 
SELECT location, COUNT(pilot_name), AVG(age) 
SELECT plane_name, COUNT(pilot_name) FROM PilotSkills GROUP BY plane_name HAVING AVG(age) < 35; 
SELECT plane_name, COUNT(pilot_name) FROM PilotSkills 
SELECT location FROM PilotSkills 
SELECT location FROM PilotSkills WHERE pilot_name = 'John' AND plane_name = 'Boeing 747' AND age = (SELECT MIN(age) FROM PilotSkills WHERE pilot_name = 'John' AND plane_name = 'Boeing 747'); 
SELECT PilotSkills.plane_name, PilotSkills.age FROM PilotSkills WHERE PilotSkills.plane_name IN (SELECT Hangar.plane_name FROM Hangar WHERE Hangar.location = 'Austin')  
SELECT PilotSkills.plane_name, PilotSkills.age FROM PilotSkills WHERE PilotSkills.plane_name IN (SELECT Hangar.plane_name FROM Hangar WHERE Hangar.location = 'Austin')  
SELECT PilotSkills.plane_name, PilotSkills.pilot_name FROM PilotSkills WHERE PilotSkills.plane_name IN (SELECT PilotSkills.plane_name FROM PilotSkills WHERE PilotSkills.age > (SELECT PilotSkills.age FROM PilotSkills WHERE PilotSkills.plane_name = 'Piper Cub')) ORDER BY PilotSkills.plane_name ASC, PilotSkills.pilot_name ASC; 
SELECT PilotSkills.plane_name FROM PilotSkills WHERE PilotSkills.plane_name = 'Piper Cub' ORDER BY PilotSkills.plane_name ASC 
SELECT PilotSkills.plane_name, COUNT(PilotSkills.pilot_name) AS num_pilots 
SELECT plane_name, COUNT(*) AS num_pilots 
SELECT plane_name FROM PilotSkills WHERE pilot_name = 'Pilot1' AND plane_name LIKE '%Bomber%'; 
SELECT plane_name FROM PilotSkills WHERE pilot_name = 'Bomber' GROUP BY plane_name HAVING COUNT(*) > 1 
SELECT plane_name, COUNT(*) FROM PilotSkills 
SELECT plane_name, COUNT(*) AS num_pilots FROM PilotSkills WHERE age > (SELECT MIN(age) FROM PilotSkills WHERE plane_name = 'Piper Cub') GROUP BY plane_name 
SELECT district.District_ID, district.Name, district.Area_km, district.Population, district.Density_km, district.Government_website 
SELECT district.District_ID, district.Name, district.Area_km, district.Population, district.Density_km, district.Government_website FROM district WHERE district.Population = (SELECT MIN(district.Population) FROM district); 
SELECT district.District_ID, district.Name, district.Population 
SELECT district.District_ID, district.Name, district.Area_km, district.Population, district.Density_km, district.Government_website, MAX(district.Area_km), AVG(district.Area_km) FROM district GROUP BY district.District_ID, district.Name, district.Area_km, district.Population, district.Density_km, district.Government_website; 
SELECT district.District_ID, district.Name, district.Area_km, district.Population, district.Density_km, district.Government_website FROM district ORDER BY district.Area_km DESC LIMIT 3; 
SELECT district.District_ID, district.Name, district.Government_website FROM district ORDER BY district.Population DESC; 
SELECT district.District_ID, district.Name FROM district WHERE district.Government_website LIKE '%gov%' ORDER BY district.District_ID ASC; 
SELECT district.District_ID, district.Name FROM district WHERE district.Population > 4000 OR district.Area_km > 3000; 
SELECT spokesman.Spokesman_ID, s.Spokesmann_Name, s.Spokesmann_Age, s.Spokesmann_Speach_title, s.Spokesmann_Rank_position, s.Spokesmann_Points 
SELECT district.District_ID, district.Name, district.Area_km, district.Population, district.Density_km, district.Government_website, spokesman.Spoke_ID, spokesman.Name, spokesman.Age, spokesman.Speach_title, spokesman.Rank_position, spokesman.Points 
SELECT spokesman.Spokesman_ID, s.Name, s.Points 
SELECT spokesman.Spokesman_ID, spokesma 
SELECT spokesman.Spokesman_ID, spokesma 
SELECT district.District_ID, district.Name, district.Area_km, district.Population, district.Density_km, district.Government_website 
SELECT spokesman.Spokesman_ID, spokesman.Name FROM spokesman WHERE spokesman.Spokesman_ID IN (SELECT spokesman_district.Spokesman_ID FROM spokesman_district WHERE spokesman_district.Start_year < '2004')  
SELECT district.District_ID, district.Name, COUNT(spokesman.Spokesman_ID) AS num_spokesmen 
SELECT district.District_ID, district.Name FROM district WHERE district.District_ID IN (SELECT spokesman_district.District_ID FROM spokesman_district WHERE spokesman_district.Spokesman_ID IN (SELECT spokesman.Spokesman_ID FROM spokesman WHERE spokesman.Rank_position = 1) AND spokesman_district.Spokesman_ID IN (SELECT spokesman.Spokesman_ID FROM spokesman WHERE spokesman.Rank_position = 2))  
SELECT district.District_ID, district.Name FROM district WHERE district.District_ID IN (SELECT spokesman_district.District_ID FROM spokesman_district WHERE spokesman_district.Spokesman_ID IN (SELECT spokesman.Spokesman_ID FROM spokesman WHERE spokesman.Points > 0))  
SELECT district.District_ID, district.Name, district.Area_km, district.Population, district.Density_km, district.Government_website FROM district WHERE district.District_ID NOT IN (SELECT spokesman_district.District_ID FROM spokesman_district); 
SELECT spokesman.Spokesman_ID, spokesman.Name 
SELECT district.District_ID, district.Name, district.Area_km, district.Population, district.Density_km, district.Government_website, SUM(spokesman.Population) AS TotalPopulation, AVG(spokesman.Population) AS AveragePopulation FROM district LEFT JOIN spokesman_district ON district.District_ID = spokesman_district.District_ID LEFT JOIN spokesman ON spokesman_district.Spokesman_ID = spokesman.Spokesman_ID GROUP BY district.District_ID, district.Name, district.Area_km, district.Population, district.Density_km, district.Government_website HAVING COUNT(spokesman.Population) > 0; 
SELECT title FROM Sculptures WHERE year = (SELECT MAX(year) FROM Sculptures); 
SELECT title FROM Sculptures WHERE year = (SELECT MAX(year) FROM Sculptures); 
SELECT title, location FROM Paintings WHERE year = (SELECT MIN(year) FROM Paintings); 
SELECT title, location FROM Paintings WHERE year = (SELECT MIN(year) FROM Paintings); 
SELECT sculptureID, title, year, medium, location, sculptorID FROM Sculptures WHERE location = '226'; 
SELECT title FROM Sculptures WHERE location = '226'; 
SELECT title, location FROM Paintings 
SELECT title, location FROM Paintings WHERE mediumOn = 'oil' AND year = 1900; 
SELECT title, location FROM Sculptures 
SELECT title, location FROM Sculptures WHERE sculptorID = 1; 
SELECT medium FROM Paintings WHERE paintingID = 80; 
SELECT medium FROM Paintings WHERE paintingID = 80; 
SELECT Artists.location, Artists.fname, Artists.lname 
SELECT Artists.location, Artists.fname, Artists.lname FROM Artists WHERE Artists.birthYear > 1850; 
SELECT Artists.location, Artists.fname, Artists.lname, Sculptures.year 
SELECT Artists.location, Artists.fname, Artists.lname, Sculptures.year 
SELECT Artists.location, Artists.fname, Artists.lname 
SELECT Artists.location, Artists.fname, Artists.lname FROM Artists INNER JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Sculptures.year < 1900 GROUP BY Artists.lname, Artists.fname HAVING COUNT(*) = 1 ORDER BY Artists.lname, Artists.fname; 
SELECT Artists.location, Artists.birthYear 
SELECT Artists.location, Artists.fname, Artists.lname, Artists.birthYear 
SELECT Artists.location, Artists.fname, Artists.lname FROM Artists WHERE Artists.deathYear = (SELECT MAX(Artists.deathYear) FROM Artists); 
SELECT Artists.location, Artists.fname, Artists.lname, Artists.birthYear, Artists.deathYear 
SELECT Artists.location, Artists.fname, Artists.lname, Artists.birthYear, Artists.deathYear 
SELECT Artists.location 
SELECT Artists.location, Artists.fname, Artists.birthYear, Artists.deathYear 
SELECT Artists.location, Artists.fname, Artists.birthYear, Artists.deathYear 
SELECT Paintings.title FROM Paintings WHERE Paintings.location = 'gallery 240' AND Paintings.year = 2019 
SELECT Paintings.title, Paintings.year, Paintings.height_mm, Paintings.width_mm, Paintings.medium, Paintings.mediumOn, Paintings.location, Paintings.painterID, Paintings.artistID, Artists.lname, Artists.fname, Artists.birthYear, Artists.deathYear 
SELECT title FROM Paintings WHERE year IN (SELECT MIN(year) FROM Paintings WHERE paintingID IN (SELECT paintingID FROM Paintings WHERE year IN (SELECT MAX(year) FROM Paintings WHERE paintingID IN (SELECT paintingID FROM Paintings WHERE year IN (SELECT MAX(year) FROM Paintings WHERE paintingID IN (SELECT paintingID FROM Paintings WHERE year IN (SELECT MAX(year) FROM Paintings WHERE paintingID IN (SELECT paintingID FROM Paintings WHERE year IN (SELECT MAX(year) FROM Paintings WHERE paintingID IN (SELECT paintingID FROM Paintings WHERE year IN (SELECT MAX(year) FROM Paintings WHERE paintingID IN (SELECT paintingID FROM Paintings WHERE year IN (SELECT MAX(year) FROM Paintings WHERE paintingID IN (SELECT paintingID FROM Paintings WHERE year IN (SELECT MAX(year) FROM Paintings WHERE paintingID IN (SELECT paintingID FROM Paintings WHERE year IN (SELECT MAX(year) FROM Paintings WHERE paintingID
SELECT Paintings.title, Paintings.year, Paintings.height_mm, Paintings.width_mm, Paintings.medium, Paintings.mediumOn, Paintings.location, Paintings.painterID, Artists.lname, Artists.fname, Artists.birthYear, Artists.deathYear 
SELECT Artists.location, Paintings.year 
SELECT title, year FROM Paintings WHERE painterID IN (SELECT artistID FROM Artists WHERE fname = 'Mary') ORDER BY title ASC; 
SELECT Paintings.title, Paintings.width_mm FROM Paintings WHERE Paintings.year < 1850; 
SELECT Paintings.title, Paintings.width_mm FROM Paintings WHERE Paintings.year < 1850 AND Paintings.painterID IN (SELECT artistID FROM Artists WHERE Artists.birthYear < 1850) ORDER BY Paintings.title ASC; 
SELECT location, medium 
SELECT location, mediumOn FROM Paintings WHERE painterID IN (SELECT artistID FROM Artists WHERE fname = 'Pablo') ORDER BY location, mediumOn; 
SELECT Artists.location, Artists.fname, Artists.lname FROM Artists 
SELECT Artists.location, Artists.fname, Artists.lname 
SELECT Artists.location, Artists.fname, Artists.lname 
SELECT Artists.location, Artists.fname, Artists.lname 
SELECT Artists.location 
SELECT Artists.location 
SELECT Artists.location 
SELECT Artists.location 
SELECT medium, COUNT(*) FROM Paintings GROUP BY medium ORDER BY medium ASC; 
SELECT medium, COUNT(*) FROM Paintings GROUP BY medium UNION SELECT medium, COUNT(*) FROM Sculptures GROUP BY medium ORDER BY medium ASC; 
SELECT medium, AVG(height_mm) FROM Paintings GROUP BY medium; 
SELECT medium, AVG(height_mm) FROM Paintings GROUP BY medium; 
SELECT Paintings.title, Paintings.year, Paintings.location FROM Paintings WHERE Paintings.year < 1900; 
SELECT location, COUNT(*) FROM Paintings WHERE year < 1900 GROUP BY location; 
SELECT title FROM Paintings WHERE year > 1910 AND medium = 'oil'; 
SELECT title FROM Paintings WHERE medium = 'oil' AND year > 1910; 
SELECT Artists.location 
SELECT Artists.location 
SELECT title FROM Paintings WHERE height_mm > (SELECT height_mm FROM Paintings WHERE medium = 'canvas') GROUP BY title HAVING COUNT(*) = 1; 
SELECT title FROM Paintings WHERE height_mm > (SELECT height_mm FROM Paintings WHERE medium = 'canvas') GROUP BY title HAVING COUNT(*) = 1; 
SELECT Paintings.sculptureID 
SELECT Paintings.sculptureID 
SELECT Paintings.sculptureID 
SELECT Paintings.sculptureID 
SELECT Artists.location, Artists.fname, Artists.lname 
SELECT Artists.location, Artists.fname, Artists.lname 
SELECT title FROM Paintings 
SELECT title FROM Paintings 
SELECT title FROM Paintings WHERE length(title) = (SELECT MAX(length(title)) FROM Paintings) ORDER BY length(title) DESC; 
SELECT title FROM Paintings WHERE height_mm IN (SELECT MIN(height_mm) FROM Paintings) ORDER BY height_mm DESC; 
SELECT title FROM Paintings WHERE year BETWEEN 1900 AND 1950 UNION SELECT title FROM Sculptures WHERE year BETWEEN 1900 AND 1950; 
SELECT title FROM Paintings WHERE year BETWEEN 1900 AND 1950 UNION SELECT title FROM Sculptures WHERE year BETWEEN 1900 AND 1950; 
SELECT title FROM Paintings WHERE painterID = 222 UNION SELECT title FROM Sculptures WHERE sculptorID = 222; 
SELECT title FROM Paintings WHERE painterID = 222 UNION SELECT title FROM Sculptures WHERE sculptorID = 222; 
SELECT Artists.location 
SELECT Artists.location 
SELECT Artists.location 
SELECT sculptorID FROM Sculptures 
SELECT title FROM Paintings WHERE width_mm < 600 OR height_mm > 800; 
SELECT title FROM Paintings WHERE width_mm < 600 OR height_mm > 800; 
SELECT location FROM Paintings WHERE year < 1885 OR year > 1930; 
SELECT location FROM Paintings WHERE year < 1885 OR year > 1930; 
SELECT Paintings.sculptureID 
SELECT Paintings.sculptureID 
SELECT location FROM Paintings WHERE mediumOn IN ('on panel', 'on canvas') ORDER BY location ASC; 
SELECT location FROM Paintings WHERE mediumOn IN ('on panel', 'on canvas') ORDER BY location ASC; 
SELECT location FROM Paintings WHERE year < 1885 AND year > 1930; 
SELECT location FROM Paintings WHERE year < 1885 AND year > 1930; 
SELECT Paintings.year, AVG(Height_mm), AVG(width_mm) FROM Paintings WHERE Paintings.year = 241 AND Paintings.medium = 'oil' GROUP BY Paintings.year 
SELECT Paintings.year, AVG(Height_mm), AVG(width_mm) FROM Paintings WHERE Paintings.year = 241 AND Paintings.medium = 'oil' GROUP BY Paintings.year HAVING AVG(Height_mm) > 0 AND AVG(width_mm) > 0 ORDER BY Paintings.year DESC LIMIT 1; 
SELECT Paintings.year, MAX(Height_mm) FROM Paintings WHERE Paintings.year < 1900 GROUP BY Paintings.year; 
SELECT Paintings.year, Paintings.height_mm, Paintings.paintingID FROM Paintings WHERE Paintings.year < 1900 ORDER BY Paintings.height_mm DESC LIMIT 1; 
SELECT year, MAX(height_mm), MAX(width_mm) 
SELECT year, MAX(height_mm), MAX(width_mm) FROM Paintings GROUP BY year; 
SELECT Artists.location, AVG(Paintings.height_mm), AVG(Paintings.width_mm) FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID GROUP BY Artists.lname ORDER BY Artists.lname ASC; 
SELECT Artists.location, AVG(Paintings.height_mm), AVG(Paintings.width_mm) FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID GROUP BY Artists.lname ORDER BY Artists.lname ASC; 
SELECT Artists.location, Artists.fname, COUNT(Paintings.paintingID) AS num_paintings 
SELECT Artists.location, Artists.fname, COUNT(Paintings.title) AS num_paintings 
SELECT Artists.location, Artists.fname, Artists.lname, Artists.birthYear, Artists.deathYear 
SELECT Artists.location, Artists.fname, Artists.lname, Artists.deathYear 
SELECT Artists.location 
SELECT Artists.location 
SELECT Paintings.sculptureID, Paintings.height_mm 
SELECT Paintings.title, Paintings.height_mm, Paintings.paintingID FROM Paintings WHERE Paintings.location = 'gallery 240' ORDER BY Paintings.height_mm DESC LIMIT 1; 
SELECT Paintings.sculptureID 
SELECT Paintings.sculptureID 
SELECT Paintings.location FROM Paintings WHERE Paintings.height_mm > (SELECT AVG(Paintings.height_mm) FROM Paintings WHERE Paintings.year > 1900); 
SELECT Paintings.location FROM Paintings WHERE Paintings.height_mm > (SELECT MAX(Paintings.height_mm) FROM Paintings WHERE Paintings.year > 1900); 
SELECT Artists.location, Artists.fname, Artists.lname, COUNT(Paintings.title) AS num_paintings 
SELECT Artists.location, COUNT(Paintings.paintingID) AS num_paintings 
SELECT Paintings.sculptureID, Paintings.location, Paintings.title 
SELECT Paintings.sculptureID, Paintings.title, Paintings.location 
SELECT year, location, title FROM Paintings WHERE height_mm > 1000 ORDER BY title; 
SELECT year, location, title FROM Paintings WHERE height_mm > 1000 ORDER BY title ASC; 
SELECT Artists.location, Artists.fname, Artists.lname 
SELECT Artists.location, Artists.fname, Artists.lname 
SELECT location FROM Paintings WHERE year < 1885 AND mediumOn IS NULL; 
SELECT title FROM Paintings WHERE year < 1885 AND medium!= 'canvas' ORDER BY title ASC; 
SELECT Road FROM race 
SELECT Road FROM race WHERE Winning_driver IS NOT NULL; 
SELECT driver.Driver_ID, driver.Driver_Name, race.Winning_driver, race.Winning_team 
SELECT driver.Driver_ID, driver.Driver_Name, race.Winning_driver, race.Winning_team FROM driver, race WHERE driver.Driver_ID = race.Driver_ID ORDER BY race.Winning_team ASC, driver.Driver_Name ASC; 
SELECT driver.Driver_ID, driver.Driver_Name, race.Race_Name FROM driver, race WHERE driver.Driver_ID = race.Driver_ID AND race.Pole_Position!= 'Junior Strous' ORDER BY driver.Driver_ID ASC; 
SELECT driver.Driver_ID, driver.Driver_Name, race.Race_Name FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID WHERE race.Race_Name = 'Junior Strous' AND race.Pole_Position!= 'Junior Strous' ORDER BY driver.Driver_ID ASC; 
SELECT driver.Driver_ID, driver.Driver_Name, driver.Entrant, driver.Constructor, driver.Chassis, driver.Engine, driver.Age FROM driver ORDER BY driver.Age ASC; 
SELECT Driver_ID, Driver_Name, Entrant, Constructor, Chassis, Engine, Age FROM driver ORDER BY Age ASC; 
SELECT Driver_ID, Entrant FROM driver WHERE Age >= 20 GROUP BY Entrant HAVING COUNT(Driver_ID) = 1 
SELECT driver.Driver_ID, driver.Driver_Name, driver.Entrant, driver.Age FROM driver WHERE driver.Age >= 20 GROUP BY driver.Entrant HAVING COUNT(driver.Entrant) > 1 ORDER BY driver.Entrant ASC; 
SELECT Driver_ID, MAX(Age) as Max_Age, MIN(Age) as Min_Age FROM driver GROUP BY Driver_ID; 
SELECT Driver_ID, MAX(Age) as Max_Age, MIN(Age) as Min_Age FROM driver GROUP BY Driver_ID; 
SELECT Driver_ID, Engine FROM driver WHERE Age > 30 OR Age < 20; 
SELECT Driver_ID, COUNT(DISTINCT Engine) FROM driver WHERE Age > 30 OR Age < 20 GROUP BY Driver_ID HAVING COUNT(DISTINCT Engine) > 1; 
SELECT Driver_ID, Driver_Name FROM driver ORDER BY Driver_Name DESC; 
SELECT Driver_ID, Driver_Name FROM driver ORDER BY Driver_Name DESC; 
SELECT driver.Driver_ID, driver.Driver_Name, race.Road, race.Race_Name FROM driver, race WHERE driver.Driver_ID = race.Driver_ID 
SELECT driver.Driver_ID, driver.Driver_Name, race.Road, race.Race_Name FROM driver, race WHERE driver.Driver_ID = race.Driver_ID 
SELECT driver.Driver_ID, driver.Driver_Name, COUNT(race.Road) AS num_races FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID GROUP BY driver.Driver_ID, driver.Driver_Name ORDER BY num_races DESC LIMIT 10; 
SELECT Driver_ID, COUNT(*) FROM race GROUP BY Driver_ID; 
SELECT driver.Driver_ID, driver.Driver_Name, COUNT(race.Road) AS num_races FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID GROUP BY driver.Driver_ID ORDER BY num_races DESC LIMIT 1; 
SELECT Driver_ID, COUNT(*) AS num_races 
SELECT driver.Driver_ID, driver.Driver_Name, driver.Age 
SELECT driver.Driver_ID, driver.Driver_Name, driver.Age 
SELECT race.Race_Name FROM race 
SELECT race.Race_Name FROM race 
SELECT driver.Driver_ID, driver.Driver_Name, driver.Entrant, driver.Constructor, driver.Chassis, driver.Engine, driver.Age FROM driver WHERE driver.Constructor!= 'Bugatti' ORDER BY driver.Driver_ID ASC; 
SELECT driver.Driver_ID, driver.Driver_Name FROM driver WHERE driver.Driver_ID NOT IN (SELECT driver.Driver_ID FROM driver WHERE driver.Constructor = 'Bugatti')  
SELECT Driver_ID, Constructor, COUNT(Driver_ID) FROM driver GROUP BY Constructor ORDER BY COUNT(Driver_ID) DESC; 
SELECT Driver_ID, Constructor, COUNT(Driver_ID) FROM driver GROUP BY Constructor HAVING COUNT(Driver_ID) > 1 ORDER BY COUNT(Driver_ID) DESC; 
SELECT Driver_ID, Engine, COUNT(*) AS Count FROM driver GROUP BY Driver_ID, Engine ORDER BY Count DESC LIMIT 1; 
SELECT Driver_ID, COUNT(DISTINCT Engine) AS Count FROM driver GROUP BY Driver_ID HAVING Count = (SELECT MAX(Count) FROM (SELECT Driver_ID, COUNT(DISTINCT Engine) AS Count FROM driver GROUP BY Driver_ID)); 
SELECT Driver_ID, Engine FROM driver WHERE Driver_ID IN (SELECT Driver_ID FROM driver GROUP BY Driver_ID HAVING COUNT(Driver_ID) > 1) ORDER BY Driver_ID ASC; 
SELECT Driver_ID, Engine FROM driver WHERE Driver_ID IN (SELECT Driver_ID FROM driver GROUP BY Driver_ID HAVING COUNT(Driver_ID) > 1) ORDER BY Driver_ID ASC; 
SELECT driver.Driver_ID, driver.Driver_Name FROM driver WHERE driver.Driver_ID NOT IN (SELECT race.Driver_ID FROM race)  
SELECT driver.Driver_ID, driver.Driver_Name FROM driver WHERE driver.Driver_ID NOT IN (SELECT race.Driver_ID FROM race)  
SELECT Driver_ID, Driver_Name, Entrant, Constructor, Chassis, Engine, Age FROM driver WHERE Age < 20 OR Age > 30 
SELECT Driver_ID, Driver_Name, Entrant, Constructor, Chassis, Engine, Age FROM driver WHERE Age < 20 OR Age > 30 ORDER BY Driver_ID ASC; 
SELECT Road, COUNT(DISTINCT Driver_ID) AS num_wins FROM race GROUP BY Road HAVING num_wins > 1 ORDER BY num_wins DESC; 
SELECT Road, COUNT(*) AS num_wins FROM race GROUP BY Road HAVING COUNT(*) > 1 
SELECT driver.Driver_ID, driver.Driver_Name 
SELECT driver.Driver_ID, driver.Driver_Name, driver.Entrant, driver.Constructor, driver.Chassis, driver.Engine, driver.Age 
SELECT driver.Driver_ID, driver.Driver_Name 
SELECT Driver_ID, Driver_Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM race WHERE Pole_Position = 'James Hinchcliffe') ORDER BY Driver_ID ASC; 
SELECT countries.country_id FROM countries 
SELECT countries.country_id FROM countries 
SELECT languages.language_id, languages.name 
SELECT languages.language_id, languages.name 
SELECT languages.language_id, languages.name 
SELECT languages.language_id, languages.name 
SELECT countries.country_id, countries.name, countries.overall_score 
SELECT countries.country_id, countries.name, countries.overall_score 
SELECT countries.country_id, countries.overall_score, countries.health_score, countries.education_score, countries.economics_score, countries.politics_score, countries.justice_score 
SELECT languages.language_id, countries.country_id, countries.overall_score, countries.justice_score, countries.health_score, countries.education_score, countries.economics_score, countries.politics_score 
SELECT countries.country_id, countries.health_score 
SELECT countries.country_id, countries.overall_score, countries.health_score, countries.education_score, countries.economics_score, countries.politics_score, countries.justice_score 
SELECT countries.country_id, languages.name 
SELECT countries.country_id, languages.name 
SELECT countries.country_id, countries.name, countries.education_score FROM countries ORDER BY countries.education_score DESC; 
SELECT countries.country_id, countries.name, countries.education_score 
SELECT countries.country_id, countries.name, countries.politics_score 
SELECT countries.country_id, countries.name FROM countries, official_languages WHERE countries.id = official_languages.country_id AND official_languages.language_id = (SELECT languages.id FROM languages WHERE languages.name = 'English') AND countries.politics_score = (SELECT MAX(countries.politics_score) FROM countries); 
SELECT countries.country_id, countries.name, languages.name FROM countries, languages WHERE countries.id = official_languages.country_id AND official_languages.language_id = languages.id ORDER BY countries.name, languages.name; 
SELECT countries.country_id, countries.name, languages.name FROM countries, languages WHERE countries.id = official_languages.country_id AND official_languages.language_id = languages.id ORDER BY countries.name, languages.name; 
SELECT languages.language_id, languages.name, COUNT(countries.id) AS num_countries 
SELECT languages.language_id, languages.name, COUNT(countries.country_id) AS num_countries 
SELECT languages.language_id, languages.name, COUNT(countries.id) AS num_countries 
SELECT languages.language_id, languages.name, COUNT(official_languages.country_id) AS count 
SELECT languages.language_id, languages.name, countries.name 
SELECT languages.language_id, languages.name, countries.name 
SELECT countries.country_id, AVG(countries.overall_score) AS avg_overall_score 
SELECT languages.language_id, countries.country_id, countries.overall_score 
SELECT languages.language_id, languages.name, COUNT(official_languages.country_id) AS count 
SELECT languages.language_id, languages.name FROM official_languages, languages WHERE official_languages.language_id = languages.id AND official_languages.country_id IN (SELECT countries.id FROM countries WHERE countries.id IN (SELECT countries.id FROM countries ORDER BY countries.overall_score DESC LIMIT 3)) ORDER BY languages.name ASC LIMIT 3; 
SELECT languages.language_id, languages.name, AVG(countries.overall_score) AS avg_overall_score 
SELECT languages.language_id, languages.name, AVG(countries.overall_score) AS avg_overall_score FROM official_languages, languages, countries WHERE official_languages.language_id = languages.id AND official_languages.country_id = countries.id GROUP BY languages.language_id ORDER BY avg_overall_score DESC; 
SELECT countries.country_id, countries.name, COUNT(official_languages.language_id) AS num_of_official_languages 
SELECT countries.country_id, countries.name, COUNT(official_languages.language_id) AS num_of_official_languages 
SELECT languages.language_id, languages.name 
SELECT languages.language_id, languages.name 
SELECT countries.country_id, countries.name FROM countries LEFT JOIN official_languages ON countries.id = official_languages.country_id WHERE official_languages.language_id IS NULL; 
SELECT countries.country_id, countries.name FROM countries LEFT JOIN official_languages ON countries.id = official_languages.country_id WHERE official_languages.language_id IS NULL; 
SELECT languages.language_id, languages.name 
SELECT languages.language_id, languages.name 
SELECT Addresses.search_string 
SELECT Addresses.search_string, Addresses.town_city, Addresses.country 
SELECT Addresses.search_string 
SELECT Addresses.search_string 
SELECT Features.search_string 
SELECT Features.search_string 
SELECT Features.search_string FROM User_Searches WHERE User_Searches.search_string LIKE '%feature%'; 
SELECT Features.search_string 
SELECT Rooms.user_id, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size,
SELECT Rooms.search_seq, Rooms.search_string, Rooms.search_datetime, Rooms.user_id, Rooms.property_id, Rooms.property_address_id, Rooms.property_name, Rooms.property_description, Rooms.garage_yn, Rooms.parking_lots, Rooms.room_count, Rooms.vendor_requested_price, Rooms.price_min, Rooms.price_max, Rooms.other_property_details, Rooms.other_room_details, Rooms.room_type_code, Rooms.room_size, Rooms.feature_value, Rooms.property_feature_description, Rooms.feature_id, Rooms.property_id, Rooms.photo_seq, Rooms.photo_title, Rooms.photo_description, Rooms.photo_filename, Rooms.property_address_id, Rooms.other_user_details, Rooms.date_registered, Rooms.middle_name, Rooms.last_name, Rooms.first_name, Rooms.login_name, Rooms.password, Rooms.is_buyer, Rooms.is_seller, Rooms.user_address_id, Rooms.age_category_code, Rooms.user_category_code, Rooms.date_off_market, Rooms.date_on_market, Rooms.property_type_code, Rooms.owner_user_id, Rooms.address_id, Rooms.feature_name, Rooms.feature_description, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property_id, Rooms.property
SELECT Properties.user_id, Properties.property_id, Properties.property_name, Properties.property_description, Properties.garage_yn, Properties.parking_lots, Properties.room_count, Properties.vendor_requested_price, Properties.price_min, Properties.price_max, Properties.other_property_details, Properties.date_on_market, Properties.date_off_market, Properties.property_address_id, Properties.owner_user_id, Properties.property_type_code, Addresses.line_1_number_building, Addresses.line_2_number_street, Addresses.line_3_area_locality, Addresses.town_city, Addresses.zip_postcode, Addresses.county_state_province, Addresses.country, Addresses.other_address_details, Users.age_category_code, Users.user_category_code, Users.user_address_id, Users.is_buyer, Users.is_seller, Users.login_name, Users.password, Users.date_registered, Users.first_name, Users.middle_name, Users.last_name, Users.other_user_details, Ref_Property_Types.property_type_code, Ref_Property_Types.property_type_description, Ref_Room_Types.room_type_code, Ref_Room_Types.room_type_description, Ref_User_Categories.user_category_code, Ref_User_Categories.user_category_description, Ref_Age_Categories.age_category_code, Ref_Age_Categories.age_category_description, Features.feature_id, Features.feature_name, Features.feature_description, Property_Features.property_id, Property_Features.feature_id, Property_Features.feature_value, Property_Features.property_feature_description, Property_Photos.property_id, Property_Photos.photo_seq, Property_Photos.photo_title, Property_Photos.photo_description, Property_Photos.photo_filename, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, User_Property_History.user_id, User_Property_History.property_id, User_Property_History.datestamp, User_Searches.user_id, User_Searches.search_seq, User_Searches.search_datetime, User_Searches.search_string FROM Properties INNER JOIN Addresses ON Properties.property_address_id = Addresses.address_id INNER JOIN Users ON Properties.owner_user_id = Users.user_id INNER JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code INNER JOIN Ref_Room_Types ON Rooms.room_type_code = Ref_Room_Types.room_type_code INNER JOIN Ref_User_Categories ON Users.user_category_code = Ref_User_Categories.user_category_code INNER JOIN Ref_Age_Categories ON Users.age_category_code = Ref_Age_Categories.age_category_code INNER JOIN Features ON Property_Features.feature_id = Features.feature_id INNER JOIN Property_Photos ON Property_Photos.property_id = Properties.property_id INNER JOIN Rooms ON Rooms.property_id = Properties.property_id INNER JOIN User_Property_History ON User_Property_History.property_id = Properties.property_id INNER JOIN User_Searches ON User_Searches.user
SELECT Properties.user_id, Properties.property_id, Properties.property_name, Properties.property_description, Properties.garage_yn, Properties.parking_lots, Properties.room_count, Properties.vendor_requested_price, Properties.price_min, Properties.price_max, Properties.other_property_details, Properties.date_on_market, Properties.date_off_market, Properties.property_address_id, Properties.owner_user_id, Properties.property_type_code, Addresses.line_1_number_building, Addresses.line_2_number_street, Addresses.line_3_area_locality, Addresses.town_city, Addresses.zip_postcode, Addresses.county_state_province, Addresses.country, Addresses.other_address_details, Users.age_category_code, Users.user_category_code, Users.user_address_id, Users.is_buyer, Users.is_seller, Users.login_name, Users.password, Users.date_registered, Users.first_name, Users.middle_name, Users.last_name, Users.other_user_details, Ref_Property_Types.property_type_code, Ref_Property_Types.property_type_description, Ref_Room_Types.room_type_code, Ref_Room_Types.room_type_description, Ref_User_Categories.user_category_code, Ref_User_Categories.user_category_description, Ref_Age_Categories.age_category_code, Ref_Age_Categories.age_category_description, Features.feature_id, Features.feature_name, Features.feature_description, Property_Features.property_id, Property_Features.feature_id, Property_Features.feature_value, Property_Features.property_feature_description, Property_Photos.property_id, Property_Photos.photo_seq, Property_Photos.photo_title, Property_Photos.photo_description, Property_Photos.photo_filename, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, User_Property_History.user_id, User_Property_History.property_id, User_Property_History.datestamp, User_Searches.user_id, User_Searches.search_seq, User_Searches.search_datetime, User_Searches.search_string FROM Properties INNER JOIN Addresses ON Properties.property_address_id = Addresses.address_id INNER JOIN Users ON Properties.owner_user_id = Users.user_id INNER JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code INNER JOIN Ref_Room_Types ON Rooms.room_type_code = Ref_Room_Types.room_type_code INNER JOIN Ref_User_Categories ON Users.user_category_code = Ref_User_Categories.user_category_code INNER JOIN Ref_Age_Categories ON Users.age_category_code = Ref_Age_Categories.age_category_code INNER JOIN Features ON Property_Features.feature_id = Features.feature_id INNER JOIN Property_Photos ON Property_Photos.property_id = Properties.property_id INNER JOIN Rooms ON Rooms.property_id = Properties.property_id INNER JOIN User_Property_History ON User_Property_History.property_id = Properties.property_id INNER JOIN User_Searches ON User_Searches.user_id = Users
SELECT Users.user_id, Users.age_category_code, Users.user_category_code, Users.user_address_id, Users.is_buyer, Users.is_seller, Users.login_name, Users.password, Users.date_registered, Users.first_name, Users.middle_name, Users.last_name, Users.other_user_details, Ref_Age_Categories.age_category_code, Ref_Age_Categories.age_category_description, Ref_User_Categories.user_category_code, Ref_User_Categories.user_category_description, Addresses.line_1_number_building, Addresses.line_2_number_street, Addresses.line_3_area_locality, Addresses.town_city, Addresses.zip_postcode, Addresses.county_state_province, Addresses.country, Addresses.other_address_details FROM Users INNER JOIN Ref_Age_Categories ON Users.age_category_code = Ref_Age_Categories.age_category_code INNER JOIN Ref_User_Categories ON Users.user_category_code = Ref_User_Categories.user_category_code INNER JOIN Addresses ON Users.user_address_id = Addresses.address_id WHERE Users.middle_name LIKE '%Mother%' ORDER BY Users.user_id ASC; 
SELECT Ref_Age_Categories.user_id FROM Ref_Age_Categories WHERE Ref_Age_Categories.age_category_description LIKE '%Mother%'; 
SELECT Users.user_id, Users.first_name, COUNT(Users.user_id) AS num_properties FROM Users JOIN Properties ON Users.user_id = Properties.owner_user_id GROUP BY Users.user_id ORDER BY num_properties DESC LIMIT 1; 
SELECT Users.user_id, Users.first_name 
SELECT Rooms.user_id, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.property_address_id, Rooms.owner_user_id, Rooms.property_type_code, Rooms.date_on_market, Rooms.date_off_market, Rooms.property_name, Rooms.property_description, Rooms.garage_yn, Rooms.parking_lots, Rooms.room_count, Rooms.vendor_requested_price, Rooms.price_min, Rooms.price_max, Rooms.other_property_details, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description, Rooms.property_feature_description,
SELECT Rooms.user_id, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details,
SELECT Addresses.search_string 
SELECT Addresses.search_string 
SELECT Property_Photos.user_id, Property_Photos.property_id, Property_Photos.photo_seq, Property_Photos.photo_title, Property_Photos.photo_description, Property_Photos.photo_filename FROM Property_Photos WHERE Property_Photos.property_id = 1 ORDER BY Property_Photos.photo_seq ASC 
SELECT Property_Photos.user_id, Property_Photos.property_id, Property_Photos.photo_seq, Property_Photos.photo_title, Property_Photos.photo_description, Property_Photos.photo_filename FROM Property_Photos WHERE Property_Photos.property_id = 1 ORDER BY Property_Photos.photo_seq ASC LIMIT 1; 
SELECT Rooms.user_id, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size,
SELECT Rooms.user_id, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size,
SELECT Rooms.user_id, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details 
SELECT Rooms.user_id, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details 
SELECT user_id FROM User_Searches WHERE search_seq > 1 GROUP BY user_id HAVING COUNT(*) > 1; 
SELECT user_id, search_seq FROM User_Searches GROUP BY user_id HAVING COUNT(search_seq) >= 2; 
SELECT user_id, search_datetime FROM User_Searches WHERE search_datetime = (SELECT MAX(search_datetime) FROM User_Searches) ORDER BY search_datetime DESC LIMIT 1; 
SELECT search_datetime FROM User_Searches WHERE user_id = 1 ORDER BY search_datetime DESC LIMIT 1; 
SELECT search_datetime, search_string FROM User_Searches ORDER BY search_string DESC; 
SELECT search_string, search_datetime FROM User_Searches ORDER BY search_string DESC; 
SELECT Addresses.search_string 
SELECT Addresses.search_string 
SELECT user_id, user_category_code FROM Users WHERE user_id IN (SELECT user_id FROM User_Searches WHERE search_seq = 1) ORDER BY user_id; 
SELECT user_id, user_category_code FROM Users WHERE user_id IN (SELECT user_id FROM User_Searches GROUP BY user_id HAVING COUNT(*) = 1); 
SELECT Ref_Age_Categories.user_id, Ref_Age_Categories.age_category_code, Ref_Age_Categories.age_category_description 
SELECT Ref_Age_Categories.user_id, Ref_Age_Categories.age_category_code, Ref_Age_Categories.age_category_description 
SELECT Users.user_id, Users.login_name, Users.first_name FROM Users WHERE Users.age_category_code = 'Senior Citizen' ORDER BY Users.first_name ASC 
SELECT Users.user_id, Users.first_name, Users.login_name FROM Users WHERE Users.user_category_code = 'Senior Citizen' ORDER BY Users.first_name ASC 
SELECT Users.user_id, COUNT(User_Searches.search_seq) AS search_count 
SELECT user_id, COUNT(*) AS search_count 
SELECT Users.user_id, Users.login_name, Users.date_registered 
SELECT Users.user_id, Users.date_registered 
SELECT Users.user_id, Users.first_name, Users.middle_name, Users.last_name, Users.login_name FROM Users WHERE Users.is_seller = '1' ORDER BY Users.user_id ASC; 
SELECT Users.user_id, Users.first_name, Users.middle_name, Users.last_name, Users.login_name FROM Users WHERE Users.is_seller = 'Y' ORDER BY Users.user_id ASC; 
SELECT Addresses.search_string 
SELECT Addresses.search_string 
SELECT Property_Features.user_id, Property_Features.property_id, Property_Features.feature_id, Property_Features.feature_value, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description, Property_Features.property_id, Property_Features.property_feature_description
SELECT Properties.user_id, Properties.property_id, Properties.property_name, Properties.property_description, Properties.date_on_market, Properties.date_off_market, Properties.garage_yn, Properties.parking_lots, Properties.room_count, Properties.vendor_requested_price, Properties.price_min, Properties.price_max, Properties.other_property_details, Features.feature_name, Features.feature_description, Property_Features.feature_value, Property_Features.property_feature_description, Property_Photos.photo_title, Property_Photos.photo_description, Property_Photos.photo_filename, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details, User_Property_History.datestamp, User_Searches.search_string FROM Properties INNER JOIN Property_Features ON Properties.property_id = Property_Features.property_id INNER JOIN Features ON Property_Features.feature_id = Features.feature_id INNER JOIN Property_Photos ON Properties.property_id = Property_Photos.property_id INNER JOIN Rooms ON Properties.property_id = Rooms.property_id INNER JOIN User_Property_History ON Properties.property_id = User_Property_History.property_id INNER JOIN User_Searches ON Properties.property_id = User_Searches.property_id WHERE Properties.property_id IN (SELECT Property_Features.property_id FROM Property_Features WHERE Property_Features.feature_id IN (SELECT Features.feature_id FROM Features WHERE Features.feature_name = 'Feature 1' OR Features.feature_name = 'Feature 2')) AND Properties.property_id IN (SELECT Property_Features.property_id FROM Property_Features WHERE Property_Features.feature_id IN (SELECT Features.feature_id FROM Features WHERE Features.feature_name = 'Feature 1' OR Features.feature_name = 'Feature 2')) AND Properties.property_id IN (SELECT Property_Features.property_id FROM Property_Features WHERE Property_Features.feature_id IN (SELECT Features.feature_id FROM Features WHERE Features.feature_name = 'Feature 1' OR Features.feature_name = 'Feature 2')) AND Properties.property_id IN (SELECT Property_Features.property_id FROM Property_Features WHERE Property_Features.feature_id IN (SELECT Features.feature_id FROM Features WHERE Features.feature_name = 'Feature 1' OR Features.feature_name = 'Feature 2')) AND Properties.property_id IN (SELECT Property_Features.property_id FROM Property_Features WHERE Property_Features.feature_id IN (SELECT Features.feature_id FROM Features WHERE Features.feature_name = 'Feature 1' OR Features.feature_name = 'Feature 2')) AND Properties.property_id IN (SELECT Property_Features.property_id FROM Property_Features WHERE Property_Features.feature_id IN (SELECT Features.feature_id FROM Features WHERE Features.feature_name = 'Feature 1' OR Features.feature_name = 'Feature 2')) AND Properties.property_id IN (SELECT Property_Features.property_id FROM Property_Features WHERE Property_Features.feature_id IN (SELECT Features.feature_id FROM Features WHERE Features.feature_name =
SELECT Property_Photos.user_id, COUNT(Property_Photos.property_id) AS num_photos 
SELECT Property_Photos.user_id, COUNT(PROPERTY_PHOTOS.property_id) AS num_photos 
SELECT Users.user_id, COUNT(Property_Photos.photo_seq) AS num_photos FROM Users JOIN Properties ON Users.user_id = Properties.owner_user_id JOIN Property_Photos ON Properties.property_id = Property_Photos.property_id GROUP BY Users.user_id; 
SELECT user_id, COUNT(*) FROM Property_Photos GROUP BY user_id HAVING COUNT(*) > 0; 
SELECT Properties.user_id, Properties.property_id, Properties.price_max 
SELECT Properties.user_id, Properties.property_id, Properties.price_max 
SELECT user_id, property_id, datestamp, property_name 
SELECT user_id, property_id, datestamp, property_name 
SELECT Ref_Property_Types.user_id, Ref_Property_Types.property_type_code, Ref_Property_Types.property_type_description 
SELECT Ref_Property_Types.user_id, Ref_Property_Types.property_type_code, Ref_Property_Types.property_type_description 
SELECT Ref_Age_Categories.user_id, Ref_Age_Categories.age_category_code, Ref_Age_Categories.age_category_description 
SELECT Ref_Age_Categories.user_id FROM Ref_Age_Categories WHERE Ref_Age_Categories.age_category_code = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 60' AND Ref_Age_Categories.age_category_description = 'Over 
SELECT Rooms.user_id, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details 
SELECT Rooms.user_id, Rooms.property_id, Rooms.room_number, Rooms.room_type_code, Rooms.room_size, Rooms.other_room_details 
SELECT Addresses.search_string 
SELECT Addresses.search_string 
SELECT user_id, first_name, middle_name, last_name FROM Users WHERE user_id IN (SELECT user_id FROM Properties WHERE property_address_id IN (SELECT address_id FROM Addresses WHERE line_1_number_building = line_2_number_street AND line_3_area_locality = town_city AND zip_postcode = county_state_province AND country = 'United States' AND other_address_details = '')); 
SELECT user_id, first_name, middle_name, last_name FROM Users WHERE user_id IN (SELECT user_id FROM Properties WHERE property_id IN (SELECT property_id FROM Addresses WHERE address_id IN (SELECT user_address_id FROM Users WHERE user_id IN (SELECT user_id FROM Properties WHERE property_id IN (SELECT property_id FROM Rooms WHERE room_number IN (SELECT room_number FROM Rooms WHERE property_id IN (SELECT property_id FROM Property_Features WHERE feature_id IN (SELECT feature_id FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name FROM Features WHERE feature_name IN (SELECT feature_name
SELECT search_string FROM User_Searches WHERE user_id NOT IN (SELECT user_id FROM User_Property_History WHERE property_id IN (SELECT property_id FROM Properties WHERE owner_user_id IN (SELECT user_id FROM Users))) 
SELECT search_string FROM User_Searches WHERE user_id NOT IN (SELECT user_id FROM User_Property_History); 
SELECT Users.user_id, Users.last_name 
SELECT Users.user_id, Users.last_name 
SELECT bike_id FROM bike WHERE weight > 780 
SELECT bike_id, product_name, weight FROM bike ORDER BY price ASC; 
SELECT cyclist.cyclist_id, cyclist.heat, cyclist.name, cyclist.nation 
SELECT bike_id, MAX(weight) as max_weight, MIN(weight) as min_weight FROM `bike` GROUP BY bike_id; 
SELECT bike_id, AVG(price) FROM bike WHERE material = 'Carbon CC' GROUP BY bike_id; 
SELECT cyclist.cyclist_id, cyclist.name, cyclist.result 
SELECT bike_id, product_name FROM `bike` WHERE bike_id IN (SELECT bike_id FROM `cyclists_own_bikes` WHERE purchase_year > 2015) GROUP BY bike_id, product_name HAVING COUNT(*) = 1; 
SELECT cyclist_id, product_name FROM bike JOIN cyclists_own_bikes ON bike.id = cyclists_own_bikes.bike_id WHERE material = 'racing' GROUP BY cyclist_id HAVING COUNT(cyclist_id) >= 4 ORDER BY cyclist_id ASC; 
SELECT cyclist_id, name FROM ( 
SELECT bike_id, product_name FROM bike JOIN cyclists_own_bikes ON bike.id = cyclists_own_bikes.bike_id JOIN cyclist ON cyclists_own_bikes.cyclist_id = cyclist.id WHERE nation = 'Russia' OR nation = 'Great Britain' GROUP BY bike_id, product_name HAVING COUNT(DISTINCT cyclist_id) = 1 
SELECT cyclist.cyclist_id, cyclist.heat, COUNT(*) AS count 
SELECT cyclist_id FROM cyclists_own_bikes WHERE purchase_year > 2015 GROUP BY cyclist_id HAVING COUNT(*) = 0 
SELECT bike_id FROM cyclists_own_bikes WHERE cyclist_id IN (SELECT id FROM cyclist WHERE result > '4:21.558') AND bike_id IN (SELECT id FROM bike WHERE material = 'racing') GROUP BY bike_id HAVING COUNT(*) = 1 
SELECT bike_id, product_name, price 
SELECT cyclist.cyclist_id, cyclist.name, cyclist.nation, cyclist.result 
SELECT bike_id FROM bike WHERE material LIKE '%fiber%'; 
SELECT cyclist_id, COUNT(*) FROM cyclists_own_bikes GROUP BY cyclist_id ORDER BY cyclist_id ASC; 
SELECT receipts.ReceiptNumber, goods.Price, goods.Flavor FROM receipts INNER JOIN items ON receipts.ReceiptNumber = items.Receipt INNER JOIN goods ON items.Item = goods.Id WHERE goods.Price = (SELECT MAX(goods.Price) FROM goods) AND goods.Flavor = (SELECT goods.Flavor FROM goods WHERE goods.Price = (SELECT MAX(goods.Price) FROM goods)) ORDER BY receipts.ReceiptNumber ASC, goods.Price DESC, goods.Flavor ASC 
SELECT goods.CustomerId, goods.Flavor FROM goods, items, receipts WHERE receipts.ReceiptNumber = items.Receipt AND items.Ordinal = 1 AND receipts.CustomerId = goods.CustomerId AND goods.Price = (SELECT MAX(goods.Price) FROM goods WHERE goods.Price IS NOT NULL) ORDER BY goods.CustomerId ASC; 
SELECT goods.ReceiptNumber, goods.Price, goods.Flavor FROM goods, items, receipts WHERE goods.Id = items.Item AND receipts.ReceiptNumber = items.Receipt AND receipts.CustomerId = 1 AND goods.Price = (SELECT MIN(goods.Price) FROM goods, items, receipts WHERE goods.Id = items.Item AND receipts.ReceiptNumber = items.Receipt AND receipts.CustomerId = 1) AND goods.Flavor = (SELECT goods.Flavor FROM goods, items, receipts WHERE goods.Id = items.Item AND receipts.ReceiptNumber = items.Receipt AND receipts.CustomerId = 1 AND goods.Price = (SELECT MIN(goods.Price) FROM goods, items, receipts WHERE goods.Id = items.Item AND receipts.ReceiptNumber = items.Re
SELECT goods.CustomerId, goods.Id, goods.Flavor 
SELECT goods.ReceiptNumber FROM goods WHERE goods.Flavor = 'apple' AND goods.Food = 'apple' AND goods.Price = 0.0 
SELECT customers.CustomerId FROM customers 
SELECT goods.ReceiptNumber FROM goods WHERE goods.Price < 3; 
SELECT goods.ReceiptNumber FROM goods WHERE goods.Price < 3; 
SELECT customers.CustomerId FROM customers 
SELECT customers.CustomerId 
SELECT customers.CustomerId, COUNT(receipts.ReceiptNumber) AS count 
SELECT customers.CustomerId, goods.Food, COUNT(*) AS Count 
SELECT customers.CustomerId FROM customers 
SELECT customers.CustomerId 
SELECT customers.CustomerId, customers.LastName, customers.FirstName 
SELECT customers.CustomerId, customers.LastName 
SELECT goods.ReceiptNumber, goods.Flavor, goods.Food, goods.Price 
SELECT goods.ReceiptNumber, goods.Flavor, goods.Food, goods.Price, receipts.Date, receipts.CustomerId, receipts.ReceiptNumber 
SELECT goods.ReceiptNumber, goods.Flavor, goods.Price 
SELECT goods.ReceiptNumber, goods.Flavor 
SELECT items.ReceiptNumber, items.Item, items.Ordinal, receipts.Date, receipts.CustomerId, customers.LastName, customers.FirstName 
SELECT items.ReceiptNumber, items.Item, items.Ordinal, receipts.Date, customers.LastName, customers.FirstName 
SELECT goods.ReceiptNumber, goods.Price, goods.Flavor, goods.Food, goods.Price, goods.Price, goods.Price 
SELECT receipts.ReceiptNumber, goods.Food, AVG(goods.Price), MIN(goods.Price), MAX(goods.Price) FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON items.Item = goods.Id GROUP BY goods.Food 
SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM
SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (
SELECT ReceiptNumber FROM receipts WHERE CustomerId IN (SELECT Id FROM customers WHERE LastName = 'LOGAN') AND EXISTS (SELECT * FROM items WHERE Receipt = ReceiptNumber AND Item = 'Croissant') ORDER BY ReceiptNumber; 
SELECT ReceiptNumber FROM receipts WHERE CustomerId IN (SELECT Id FROM customers WHERE LastName = 'Logan') AND Item IN (SELECT Id FROM goods WHERE Flavor = 'croissant') ORDER BY ReceiptNumber ASC; 
SELECT receipts.ReceiptNumber, receipts.Date FROM receipts, items, goods WHERE receipts.CustomerId = items.Receipt AND items.Item = goods.Id AND goods.Price = (SELECT MAX(goods.Price) FROM goods) 
SELECT receipts.ReceiptNumber, receipts.Date FROM receipts 
SELECT goods.ReceiptNumber, goods.Item, COUNT(*) AS Count 
SELECT goods.ReceiptNumber, goods.Item, COUNT(*) AS Count 
SELECT goods.ReceiptNumber, goods.Food, COUNT(goods.Food) AS Count 
SELECT goods.ReceiptNumber, goods.Food, COUNT(goods.Food) AS Count 
SELECT goods.ReceiptNumber, goods.Food, AVG(goods.Price) AS avg_price 
SELECT goods.ReceiptNumber, goods.Food, AVG(goods.Price) AS avg_price 
SELECT goods.ReceiptNumber FROM goods WHERE goods.Flavor = 'Apricot' AND goods.Price < 5.0 
SELECT goods.ReceiptNumber FROM goods WHERE goods.Flavor = 'Apricot' AND goods.Price < 5.0 
SELECT goods.ReceiptNumber, goods.Flavor, goods.Price 
SELECT goods.ReceiptNumber, goods.Flavor, goods.Price 
SELECT goods.ReceiptNumber, goods.Price FROM goods WHERE goods.Price < (SELECT AVG(goods.Price) FROM goods); 
SELECT goods.ReceiptNumber, goods.Price 
SELECT goods.ReceiptNumber FROM goods WHERE goods.Price < (SELECT goods.Price FROM goods WHERE goods.Flavor = 'Tart') GROUP BY goods.ReceiptNumber HAVING COUNT(*) > 1 
SELECT goods.ReceiptNumber FROM goods WHERE goods.Price < (SELECT goods.Price FROM goods WHERE goods.Flavor = 'Tart') AND goods.Flavor = 'Tart' GROUP BY goods. ReceiptNumber HAVING COUNT(*) = 1; 
SELECT ReceiptNumber FROM receipts 
SELECT ReceiptNumber FROM receipts WHERE CustomerId IN (SELECT Id FROM customers WHERE LastName = 'Smith') AND ReceiptNumber IN (SELECT Receipt FROM items WHERE Item IN (SELECT Id FROM goods WHERE Price > 13)) GROUP BY ReceiptNumber HAVING COUNT(*) = 1 
SELECT receipts.Date FROM receipts 
SELECT receipts.Date FROM receipts 
SELECT goods.ReceiptNumber FROM goods WHERE goods.Id LIKE '%APP%'; 
SELECT goods.ReceiptNumber FROM goods WHERE goods.Id LIKE '%APP%'; 
SELECT goods.ReceiptNumber, goods.Price FROM goods WHERE goods.Id = '70' AND goods.Price IS NOT NULL; 
SELECT goods.ReceiptNumber, goods.Price FROM goods WHERE goods.Id LIKE '%70%'; 
SELECT customers.CustomerId, customers.LastName, customers.FirstName 
SELECT customers.CustomerId, customers.LastName, customers.FirstName 
SELECT goods.ReceiptNumber FROM goods WHERE goods.Id IN (SELECT items.Item FROM items WHERE items.ReceiptNumber IN (SELECT receipts.ReceiptNumber FROM receipts WHERE receipts.CustomerId IN (SELECT customers.Id FROM customers WHERE customers.LastName = 'Smith' AND customers.FirstName = 'John'))) 
SELECT goods.ReceiptNumber, goods.Id FROM goods, items, receipts WHERE goods.Id = items.Item AND receipts.ReceiptNumber = items.Receipt AND receipts.CustomerId = 1 ORDER BY goods.Id ASC; 
SELECT ReceiptNumber FROM receipts WHERE CustomerId = 12 OR EXISTS (SELECT * FROM items WHERE Receipt = ReceiptNumber AND Item = 'apple flavor pie') ORDER BY ReceiptNumber ASC; 
SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM items WHERE Item IN (SELECT Id FROM goods WHERE Flavor = 'apple' AND Food = 'pie') OR ReceiptNumber IN (SELECT ReceiptNumber FROM items WHERE Item IN (SELECT Id FROM goods WHERE Flavor = 'apple' AND Food = 'pie') AND ReceiptNumber IN (SELECT ReceiptNumber FROM receipts WHERE CustomerId = 12))) 
SELECT receipts.ReceiptNumber, receipts.Date FROM receipts WHERE receipts.Date = (SELECT MAX(receipts.Date) FROM receipts); 
SELECT ReceiptNumber, Date FROM receipts WHERE ReceiptNumber = (SELECT ReceiptNumber FROM receipts ORDER BY Date DESC LIMIT 1); 
SELECT receipts.ReceiptNumber, receipts.Date, receipts.CustomerId, goods.Price FROM receipts, goods WHERE receipts.ReceiptNumber = receipts.ReceiptNumber AND receipts.Date = receipts.Date AND receipts.CustomerId = receipts.CustomerId AND goods.Price = goods.Price AND receipts.ReceiptNumber = receipts.ReceiptNumber AND receipts.Date = receipts.Date AND receipts.CustomerId = receipts.CustomerId AND goods.Price = goods.Price AND receipts.ReceiptNumber = receipts.ReceiptNumber AND receipts.Date = receipts.Date AND receipts.CustomerId = receipts.CustomerId AND goods.Price = goods.Price AND receipts.ReceiptNumber = receipts.ReceiptNumber AND receipts.Date = receipts.Date AND receipts.CustomerId = receipts.CustomerId AND goods.Price = goods.Price AND receipts.ReceiptNumber = receipts.ReceiptNumber AND receipts.Date = receipts.Date AND receipts.CustomerId = receipts.CustomerId AND goods.Price = goods.Price AND receipts.ReceiptNumber = receipts.ReceiptNumber AND receipts.Date = receipts.Date AND receipts.CustomerId = receipts.CustomerId AND goods.Price = goods.Price AND receipts.ReceiptNumber = receipts.ReceiptNumber AND receipts.Date = receipts.Date AND receipts.CustomerId = receipts.CustomerId AND goods.Price = goods.Price AND receipts.ReceiptNumber = receipts.ReceiptNumber AND receipts.Date = receipts.Date AND receipts.CustomerId = receipts.CustomerId AND goods.Price = goods.Price AND receipts.ReceiptNumber = receipts.ReceiptNumber AND receipts.Date = receipts.Date AND receipts.CustomerId = receipts.CustomerId AND goods.Price = goods.Price AND receipts.ReceiptNumber = receipts.ReceiptNumber
SELECT ReceiptNumber FROM receipts WHERE Date = (SELECT MIN(Date) FROM receipts) OR Price > 10; 
SELECT goods.ReceiptNumber, goods.Id FROM goods, items, receipts WHERE goods.Id = items.Item AND receipts.ReceiptNumber = items.Receipt AND goods.Price BETWEEN 3 AND 7 AND receipts.CustomerId = 1 
SELECT goods.ReceiptNumber, goods.Id FROM goods, items, receipts WHERE goods.Price BETWEEN 3 AND 7 AND goods.Id = items.Item AND items.Receipt = receipts.ReceiptNumber AND receipts.CustomerId = 1 
SELECT customers.CustomerId, customers.FirstName, customers.LastName 
SELECT customers.CustomerId, customers.LastName, customers.FirstName, receipts.Date 
SELECT receipts.ReceiptNumber, goods.Price FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON items.Item = goods.Id WHERE goods.Flavor IN ('blackberry', 'blueberry') GROUP BY receipts.ReceiptNumber, goods.Price 
SELECT goods.ReceiptNumber, goods.Price, goods.Flavor 
SELECT receipts.ReceiptNumber, goods.Price FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON items.Item = goods.Id WHERE goods.Flavor = 'cheese' ORDER BY goods.Price ASC LIMIT 1; 
SELECT goods.ReceiptNumber, goods.Price, goods.Flavor 
SELECT goods.ReceiptNumber, goods.Flavor, goods.Price 
SELECT receipts.ReceiptNumber, goods.Flavor, goods.Price FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON items.Item = goods.Id WHERE receipts.CustomerId = 1 ORDER BY goods.Flavor ASC 
SELECT goods.ReceiptNumber, goods.Food, goods.Price 
SELECT customers.CustomerId, customers.LastName, customers.FirstName, receipts.ReceiptNumber, receipts.Date, items.Item, goods.Price 
SELECT Date 
SELECT Date FROM receipts WHERE ReceiptNumber IN (SELECT ReceiptNumber FROM receipts GROUP BY ReceiptNumber HAVING COUNT(*) = (SELECT COUNT(*) FROM receipts GROUP BY ReceiptNumber ORDER BY COUNT(*) DESC LIMIT 3)) ORDER BY Date ASC; 
SELECT customers.CustomerId, COUNT(receipts.ReceiptNumber) AS Count 
SELECT customers.CustomerId, COUNT(receipts.ReceiptNumber) AS num_purchases 
SELECT Date, COUNT(DISTINCT CustomerId) FROM receipts GROUP BY Date; 
SELECT Date, COUNT(*) FROM receipts GROUP BY Date ORDER BY Date ASC; 
SELECT customers.CustomerId, customers.FirstName, customers.LastName FROM customers, items, goods WHERE customers.Id = receipts.CustomerId AND receipts.ReceiptNumber = items.Receipt AND items.Item = goods.Id AND goods.Flavor = 'apple' AND goods.Food = 'Tart' AND items.Ordinal = 1; 
SELECT customers.CustomerId, customers.LastName, customers.FirstName, goods.Flavor, goods.Food, goods.Price 
SELECT goods.ReceiptNumber, goods.Id FROM goods, items, receipts WHERE goods.Id = items.Item AND items.Receipt = receipts.ReceiptNumber AND goods.Price < (SELECT goods.Price FROM goods, items, receipts WHERE goods.Id = items.Item AND items.Receipt = receipts.ReceiptNumber AND goods.Food = 'Croissant') AND goods.Food = 'Cookie' ORDER BY goods.Price DESC; 
SELECT goods.ReceiptNumber, goods.Price, goods.Flavor, goods.Food, receipts.Date, receipts.CustomerId, customers.LastName, customers.FirstName 
SELECT customers.CustomerId, customers.LastName, customers.FirstName, receipts.ReceiptNumber, receipts.Date, goods.Id, goods.Flavor, goods.Food, goods.Price 
SELECT goods.ReceiptNumber, goods.Id FROM goods, receipts WHERE goods.Id = receipts.ReceiptNumber AND goods.Price >= (SELECT AVG(goods.Price) FROM goods WHERE goods.Food = 'Tart') AND goods.Food = 'Cake' ORDER BY goods.Price DESC; 
SELECT goods.ReceiptNumber FROM goods WHERE goods.Price > (SELECT AVG(goods.Price) FROM goods); 
SELECT goods.ReceiptNumber, goods.Id, goods.Price, goods.Flavor, goods.Food 
SELECT goods.ReceiptNumber, goods.Id, goods.Flavor, goods.Food FROM goods, items, receipts WHERE goods.Id = items.Item AND receipts.ReceiptNumber = items.Receipt AND receipts.Date = '2019-01-01' ORDER BY goods.Price DESC; 
SELECT goods.CustomerId, goods.Id, goods.Flavor, goods.Food, goods.Price FROM customers, goods, items WHERE customers.Id = goods.Id AND goods.Id = items.Item ORDER BY goods.Price DESC; 
SELECT customers.CustomerId, goods.Flavor 
SELECT items.ReceiptNumber, items.Item, goods.Flavor 
SELECT items.ReceiptNumber, items.Item, items.Ordinal, goods.Price, customers.LastName, customers.FirstName 
SELECT items.ReceiptNumber, items.Item, COUNT(items.ReceiptNumber) AS Count 
SELECT goods.ReceiptNumber, goods.Flavor 
SELECT goods.ReceiptNumber, goods.Flavor 
SELECT goods.ReceiptNumber, goods.Item, goods.Price, COUNT(*) AS Count 
SELECT goods.ReceiptNumber, goods.Item, COUNT(*) AS Count 
SELECT customers.CustomerId 
SELECT customers.CustomerId 
SELECT customers.CustomerId 
SELECT customers.CustomerId 
SELECT receipts.Date 
SELECT receipts.Date FROM receipts 
SELECT country.Driver_ID 
SELECT country.Driver_ID 
SELECT driver.Driver_ID, driver.Driver, driver.Make, driver.Points 
SELECT team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver
SELECT driver.Driver_ID, driver.Make, AVG(driver.Age) AS avg_age 
SELECT driver.Driver_ID, driver.Make, AVG(driver.Age) FROM driver GROUP BY driver.Make; 
SELECT driver.Driver_ID, driver.Driver, driver.Age, driver.Laps, driver.Points, driver.Winnings, team.Team, team.Make, team.Manager, team.Sponsor, team.Car_Owner FROM driver INNER JOIN team_driver ON driver.Driver_ID = team_driver.Driver_ID INNER JOIN team ON team_driver.Team_ID = team.Team_ID WHERE driver.Age < 20; 
SELECT driver.Driver_ID, driver.Driver, driver.Age, driver.Laps, driver.Points, driver.Winnings, team.Team, team.Make, team.Manager, team.Sponsor, team.Car_Owner, country.Country, country.Capital, country.Official_native_language, country.Regoin 
SELECT team.Team_ID, team.Manager, team.Sponsor, team.Car_Owner FROM team ORDER BY team.Car_Owner 
SELECT team.Team_ID, team.Team, team.Make, team.Manager, team.Sponsor, team.Car_Owner 
SELECT team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver
SELECT team.Team_ID, team.Team, team.Make, team.Manager, team.Sponsor, team.Car_Owner 
SELECT team.Team_ID, team.Make 
SELECT team.Team_ID, team.Make 
SELECT Driver_ID, MAX(Points) as Max_Points, MIN(Points) as Min_Points FROM driver GROUP BY Driver_ID; 
SELECT Driver_ID, MAX(Points) as Max_Points, MIN(Points) as Min_Points FROM driver GROUP BY Driver_ID; 
SELECT country.Driver_ID 
SELECT country.Driver_ID 
SELECT Driver_ID, Driver, Age FROM driver ORDER BY Age ASC; 
SELECT Driver_ID, Driver, Age FROM driver ORDER BY Age ASC; 
SELECT Driver_ID, Driver, Points FROM driver ORDER BY Points DESC; 
SELECT Driver_ID, Driver, Age, Country, Points, Laps, Winnings FROM driver ORDER BY Points DESC; 
SELECT driver.Driver_ID, driver.Driver, country.Country FROM driver, country WHERE driver.Country = country.Country_Id 
SELECT driver.Driver_ID, driver.Driver, country.Country FROM driver INNER JOIN country ON driver.Country = country.Country_Id 
SELECT driver.Driver_ID, driver.Driver, driver.Points 
SELECT Driver_ID, MAX(Points) FROM driver WHERE Country = (SELECT Country_Id FROM country WHERE Capital = 'Dublin') GROUP BY Driver_ID; 
SELECT Driver_ID, Driver, Country, Age, Car_#, Make, Points, Laps, Winnings 
SELECT Driver_ID, AVG(Age) FROM driver WHERE Country IN (SELECT Country_Id FROM country WHERE Official_native_language = 'English') GROUP BY Driver_ID; 
SELECT country.Driver_ID, country.Country, country.Capital, country.Official_native_language, country.Regoin 
SELECT country.Driver_ID, country.Country, country.Capital, country.Official_native_language, country.Regoin 
SELECT country.Driver_ID, country.Capital, country.Country, driver.Points 
SELECT country.Driver_ID, country.Capital FROM driver, country WHERE driver.Country = country.Country_Id AND driver.Points = (SELECT MAX(driver.Points) FROM driver); 
SELECT team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver
SELECT team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team
SELECT team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver
SELECT team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver
SELECT driver.Driver_ID, driver.Make 
SELECT team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID, team_driver.Team_ID, team_driver.Driver_ID
SELECT Team_ID, Team FROM team WHERE Team_ID NOT IN (SELECT Team_ID FROM team_driver); 
SELECT team.Team_ID, team.Team 
SELECT country.Driver_ID, country.Country, country.Capital, country.Official_native_language, country.Regoin 
SELECT country.Driver_ID 
SELECT Driver_ID, SUM(Points) AS TotalPoints, AVG(Points) AS AveragePoints FROM driver GROUP BY Driver_ID; 
SELECT Driver_ID, SUM(Points) AS Total_Points, AVG(Points) AS Average_Points FROM driver GROUP BY Driver_ID; 
SELECT country.Driver_ID 
SELECT country.Driver_ID 
SELECT team.Team_ID, team.Manager, team.Sponsor 
SELECT team.Team_ID, team.Manager, team.Sponsor 
SELECT team.Team_ID, team.Manager, team.Car_Owner 
SELECT team.Team_ID, team.Manager, team.Car_Owner 
SELECT Institution_ID FROM institution 
SELECT Institution_ID FROM institution WHERE Name = 'University of Toronto' AND Team = 'Varsity Blues' AND City = 'Toronto' AND Province = 'Ontario' AND Founded = 1827 AND Affiliation = 'Public' AND Enrollment = 70000 AND Endowment = '1.3 billion' AND Stadium = 'Varsity Stadium' AND Capacity = 70000 
SELECT institution.Institution_ID, institution.Name FROM institution ORDER BY institution.Name ASC; 
SELECT institution.Institution_ID, institution.Name 
SELECT institution.Institution_ID, institution.Name, institution.Founded 
SELECT institution.Institution_ID, institution.Name FROM institution ORDER BY institution.Founded DESC; 
SELECT Institution_ID, City, Province FROM institution WHERE Province IS NOT NULL ORDER BY City, Province; 
SELECT institution.Institution_ID, institution.City, institution.Province FROM institution WHERE institution.Province = 'Ontario' AND institution.City = 'Toronto' ORDER BY institution.Institution_ID ASC; 
SELECT Institution_ID, MAX(Enrollment) as Max_Enrollment, MIN(Enrollment) as Min_Enrollment FROM institution GROUP BY Institution_ID; 
SELECT institution.Institution_ID, MAX(Enrollment) as MaxEnrollment, MIN(Enrollment) as MinEnrollment 
SELECT Institution_ID, Affiliation FROM institution WHERE City!= 'Vancouver' ORDER BY Institution_ID ASC; 
SELECT Institution_ID, Affiliation FROM institution WHERE City!= 'Vancouver' ORDER BY Institution_ID ASC; 
SELECT Institution_ID, Stadium, Capacity FROM institution ORDER BY Capacity DESC; 
SELECT institution.Institution_ID, institution.Name, institution.Team, institution.City, institution.Province, institution.Founded, institution.Affiliation, institution.Enrollment, institution.Endowment, institution.Stadium, institution.Capacity FROM institution ORDER BY institution.Capacity DESC; 
SELECT institution.Institution_ID, institution.Stadium FROM institution WHERE institution.Enrollment = (SELECT MAX(institution.Enrollment) FROM institution); 
SELECT institution.Institution_ID, institution.Stadium FROM institution WHERE institution.Enrollment = (SELECT MAX(institution.Enrollment) FROM institution); 
SELECT institution.Institution_ID, institution.Name, Championship.Nickname 
SELECT institution.Institution_ID, institution.Name, Championship.Nickname FROM institution INNER JOIN Championship ON institution.Institution_ID = Championship.Institution_ID WHERE institution.Province = 'Ontario' AND Championship.Number_of_Championships > 10 ORDER BY institution.Institution_ID ASC; 
SELECT Nickname FROM Championship WHERE Institution_ID IN (SELECT Institution_ID FROM institution WHERE Enrollment = (SELECT MIN(Enrollment) FROM institution)); 
SELECT Nickname FROM Championship WHERE Institution_ID IN (SELECT Institution_ID FROM institution WHERE Enrollment = (SELECT MIN(Enrollment) FROM institution)); 
SELECT institution.Institution_ID, institution.Name FROM institution ORDER BY institution.Institution_ID DESC; 
SELECT institution.Institution_ID, institution.Name FROM institution ORDER BY institution.Institution_ID DESC; 
SELECT institution.Institution_ID, institution.Name FROM institution WHERE institution.Institution_ID IN (SELECT Institution_ID FROM Championship)  
SELECT institution.Institution_ID, institution.Name FROM institution WHERE institution.Institution_ID IN (SELECT Institution_ID FROM Championship)  
SELECT Institution_ID, SUM(Number_of_Championships) FROM Championship WHERE Affiliation = 'Public' GROUP BY Institution_ID; 
SELECT Institution_ID, SUM(Number_of_Championships) FROM Championship WHERE Affiliation = 'Public' GROUP BY Institution_ID; 
SELECT Institution_ID, Affiliation, COUNT(Institution_ID) AS Number_of_Institutions FROM institution GROUP BY Institution_ID, Affiliation 
SELECT Institution_ID, Affiliation, COUNT(*) FROM institution GROUP BY Institution_ID, Affiliation; 
SELECT Institution_ID, Affiliation, COUNT(*) AS Count FROM institution GROUP BY Institution_ID, Affiliation ORDER BY Count DESC LIMIT 1; 
SELECT Institution_ID, Affiliation, COUNT(*) AS Count FROM institution GROUP BY Institution_ID ORDER BY Count DESC LIMIT 1; 
SELECT Institution_ID, Founded FROM institution WHERE Founded IN (SELECT Founded FROM institution GROUP BY Founded HAVING COUNT(*) > 1); 
SELECT institution.Institution_ID, institution.Founded, COUNT(Championship.Institution_ID) AS num_institutions FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID GROUP BY institution.Institution_ID HAVING COUNT(Championship.Institution_ID) > 1 
SELECT Championship.Nickname FROM institution 
SELECT Championship.Nickname FROM institution 
SELECT Institution_ID, SUM(Enrollment) FROM institution WHERE City = 'Vancouver' OR City = 'Calgary' GROUP BY Institution_ID; 
SELECT institution.Institution_ID, institution.Name, institution.Enrollment FROM institution WHERE institution.City IN ('Vancouver', 'Calgary') ORDER BY institution.Institution_ID ASC; 
SELECT Institution_ID, Province FROM institution WHERE Founded < 1920 OR Founded > 1950 GROUP BY Province HAVING COUNT(*) > 1; 
SELECT Institution_ID, Name, Team, City, Province, Founded, Affiliation, Enrollment, Endowment, Stadium, Capacity FROM institution WHERE Province NOT IN (SELECT Province FROM institution WHERE Founded < 1920) AND Province IN (SELECT Province FROM institution WHERE Founded > 1950) ORDER BY Province ASC; 
SELECT institution.Institution_ID, institution.Name, institution.Team, institution.City, institution.Province, institution.Founded, institution.Affiliation, institution.Enrollment, institution.Endowment, institution.Stadium, institution.Capacity 
SELECT Institution_ID, Province FROM institution GROUP BY Province HAVING COUNT(DISTINCT Province) > 1 
SELECT Code, Location, Capacity FROM Warehouses; 
SELECT Code, Location, Capacity FROM Warehouses; 
SELECT Contents FROM Boxes WHERE Warehouse = (SELECT Code FROM Warehouses WHERE Location = 'New York') GROUP BY Contents HAVING COUNT(*) = 1; 
SELECT Contents FROM Boxes WHERE Warehouse = (SELECT Code FROM Warehouses WHERE Location = 'New York') GROUP BY Contents HAVING COUNT(*) = 1 
SELECT Contents FROM Boxes WHERE Value > 150.0 
SELECT Contents FROM Boxes WHERE Value > 150; 
SELECT Warehouses.Code, AVG(Boxes.Value) FROM Warehouses, Boxes WHERE Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code; 
SELECT Warehouse, AVG(Value) FROM Boxes GROUP BY Warehouse; 
SELECT Warehouse, AVG(Value), SUM(Value) FROM Boxes GROUP BY Warehouse; 
SELECT Warehouse, AVG(Value), SUM(Value) FROM Boxes GROUP BY Warehouse; 
SELECT Code, AVG(Capacity), SUM(Capacity) FROM Warehouses GROUP BY Code; 
SELECT Code, AVG(Capacity), SUM(Capacity) FROM Warehouses GROUP BY Code; 
SELECT Contents, AVG(Value), MAX(Value) FROM Boxes GROUP BY Contents; 
SELECT Contents, AVG(Value), MAX(Value) FROM Boxes GROUP BY Contents; 
SELECT Contents FROM Boxes WHERE Code IN (SELECT Code FROM Boxes GROUP BY Contents HAVING SUM(Value) = (SELECT MAX(SUM(Value)) FROM Boxes GROUP BY Contents)) ORDER BY Contents ASC; 
SELECT Contents FROM Boxes WHERE Value = (SELECT MAX(Value) FROM Boxes); 
SELECT Warehouse, AVG(Value) FROM Boxes GROUP BY Warehouse; 
SELECT Warehouse, AVG(Value) FROM Boxes GROUP BY Warehouse; 
SELECT Contents FROM Boxes 
SELECT Contents FROM Boxes WHERE Code IN (SELECT Code FROM Boxes GROUP BY Contents HAVING COUNT(*) = 1); 
SELECT Warehouse, COUNT(DISTINCT Contents) FROM Boxes GROUP BY Warehouse; 
SELECT Contents FROM Boxes WHERE Code IN (SELECT Code FROM Boxes GROUP BY Contents HAVING COUNT(*)=1); 
SELECT Warehouses.Code, Warehouses.Location FROM Warehouses GROUP BY Warehouses.Location HAVING COUNT(Warehouses.Code) = 1; 
SELECT Warehouse, Location FROM Warehouses GROUP BY Warehouse, Location HAVING COUNT(*) > 1 ORDER BY Warehouse, Location; 
SELECT Boxes.Code FROM Boxes WHERE Boxes.Warehouse IN (SELECT Warehouses.Code FROM Warehouses WHERE Warehouses.Location = 'Chicago' OR Warehouses.Location = 'New York'); 
SELECT Boxes.Code FROM Boxes WHERE Boxes.Warehouse IN (SELECT Warehouses.Code FROM Warehouses WHERE Warehouses.Location IN ('Chicago', 'New York')); 
SELECT Warehouse, SUM(Value) FROM Boxes GROUP BY Warehouse HAVING Location IN ('Chicago', 'New York') ORDER BY SUM(Value) DESC; 
SELECT Warehouse, SUM(Value) FROM Boxes GROUP BY Warehouse HAVING Warehouse IN ('Chicago', 'New York') ORDER BY SUM(Value) DESC; 
SELECT Contents FROM Boxes WHERE Warehouse IN (SELECT Code FROM Warehouses WHERE Location IN ('Chicago', 'New York')); 
SELECT Contents FROM Boxes WHERE Warehouse IN (SELECT Code FROM Warehouses WHERE Location IN ('Chicago', 'New York')) GROUP BY Contents HAVING COUNT(*) = 2; 
SELECT Contents FROM Boxes WHERE Code NOT IN (SELECT Code FROM Warehouses WHERE Location = 'New York') ORDER BY Contents ASC; 
SELECT Contents FROM Boxes WHERE Warehouse IN (SELECT Code FROM Warehouses WHERE Location = 'New York') AND Contents NOT IN (SELECT Contents FROM Boxes WHERE Warehouse IN (SELECT Code FROM Warehouses WHERE Location = 'New York')); 
SELECT Warehouses.Code, Warehouses.Location FROM Warehouses WHERE Warehouses.Code IN (SELECT Boxes.Warehouse FROM Boxes WHERE Boxes.Contents = 'Rocks' AND Boxes.Contents!= 'Scissors')  
SELECT Warehouses.Code, Warehouses.Location FROM Warehouses WHERE Warehouses.Code IN (SELECT Boxes.Warehouse FROM Boxes WHERE Boxes.Contents = 'Rocks' AND Boxes.Contents!= 'Scissors')  
SELECT Code FROM Warehouses WHERE Location IN (SELECT Location FROM Warehouses WHERE Code IN (SELECT Warehouse FROM Boxes WHERE Contents IN ('Rocks', 'Scissors'))) 
SELECT Code FROM Warehouses WHERE Code IN (SELECT Warehouse FROM Boxes WHERE Contents IN ('Rocks', 'Scissors')) GROUP BY Code HAVING COUNT(*) = 2 
SELECT Warehouses.Code, Warehouses.Location FROM Warehouses WHERE Warehouses.Code IN (SELECT Boxes.Warehouse FROM Boxes WHERE Boxes.Contents IN ('Rocks', 'Scissors'))  
SELECT Warehouses.Code, Warehouses.Location FROM Warehouses WHERE Warehouses.Code IN (SELECT Boxes.Warehouse FROM Boxes WHERE Boxes.Contents IN ('Rocks', 'Scissors'))  
SELECT Boxes.Code, Boxes.Contents FROM Boxes ORDER BY Boxes.Value; 
SELECT Boxes.Code, Boxes.Contents FROM Boxes ORDER BY Boxes.Value; 
SELECT Boxes.Code, Boxes.Contents FROM Boxes WHERE Boxes.Value = (SELECT MIN(Boxes.Value) FROM Boxes); 
SELECT Boxes.Code, Boxes.Contents FROM Boxes WHERE Boxes.Value = (SELECT MIN(Boxes.Value) FROM Boxes); 
SELECT Contents FROM Boxes WHERE Value > (SELECT AVG(Value) FROM Boxes); 
SELECT Contents FROM Boxes WHERE Value > (SELECT AVG(Value) FROM Boxes); 
SELECT Contents FROM Boxes WHERE Contents NOT IN (SELECT Contents FROM Boxes WHERE Contents IN (SELECT Contents FROM Boxes WHERE Contents IN (SELECT Contents FROM Boxes WHERE Contents IN (SELECT Contents FROM Boxes WHERE Contents IN (SELECT Contents FROM Boxes WHERE Contents IN (SELECT Contents FROM Boxes WHERE Contents IN (SELECT Contents FROM Boxes WHERE Contents IN (SELECT Contents FROM Boxes WHERE Contents IN (SELECT Contents FROM Boxes WHERE Contents IN (SELECT Contents FROM Boxes WHERE Contents IN (SELECT Contents FROM Boxes WHERE Contents IN (SELECT Contents FROM Boxes WHERE Contents IN (SELECT Contents FROM Boxes WHERE Contents IN (SELECT Contents FROM Boxes WHERE Contents IN (SELECT Contents FROM Boxes WHERE Contents IN (SELECT Contents FROM Boxes WHERE Contents IN (SELECT Contents FROM Boxes WHERE Contents IN (SELECT Contents FROM Boxes WHERE Contents IN (SELECT Contents FROM Boxes WHERE Contents IN (SELECT Contents FROM Boxes WHERE
SELECT Contents FROM Boxes 
SELECT Boxes.Code FROM Boxes WHERE Boxes.Value > (SELECT Boxes.Value FROM Boxes WHERE Boxes.Contents = 'Rocks') AND Boxes.Contents!= 'Rocks'; 
SELECT Boxes.Code 
SELECT Boxes.Code, Boxes.Contents FROM Boxes WHERE Boxes.Value > (SELECT Boxes.Value FROM Boxes WHERE Boxes.Contents = 'Scissors') AND Boxes.Contents!= 'Scissors'; 
SELECT Boxes.Code, Boxes.Contents FROM Boxes WHERE Boxes.Value > (SELECT MAX(Boxes.Value) FROM Boxes WHERE Boxes.Contents = 'Scissors') AND Boxes.Contents!= 'Scissors'; 
SELECT Warehouse, SUM(Value) FROM Boxes GROUP BY Warehouse ORDER BY SUM(Value) DESC LIMIT 1; 
SELECT Warehouse, SUM(Value) FROM Boxes GROUP BY Warehouse ORDER BY SUM(Value) DESC LIMIT 1; 
SELECT Warehouses.Code, AVG(Boxes.Value) FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE AVG(Boxes.Value) > 150 GROUP BY Warehouses.Code; 
SELECT Warehouse, AVG(Value) FROM Boxes GROUP BY Warehouse HAVING AVG(Value) > 150; 
SELECT Contents, SUM(Value), COUNT(*) FROM Boxes GROUP BY Contents; 
SELECT Contents, SUM(Value), COUNT(*) FROM Boxes GROUP BY Contents; 
SELECT Code, Location, SUM(Capacity) AS TotalCapacity, AVG(Capacity) AS AverageCapacity, MAX(Capacity) AS MaxCapacity FROM Warehouses GROUP BY Code, Location; 
SELECT Warehouse, SUM(Capacity) AS TotalCapacity, AVG(Capacity) AS AverageCapacity, MAX(Capacity) AS MaxCapacity FROM Warehouses GROUP BY Warehouse; 
SELECT Code, Location, SUM(Capacity) FROM Warehouses GROUP BY Code, Location; 
SELECT Code, Location, Capacity FROM Warehouses; 
SELECT Warehouse, MAX(Value) FROM Boxes GROUP BY Warehouse; 
SELECT Warehouses.Code, Warehouses.Location, Boxes.Value FROM Warehouses, Boxes WHERE Warehouses.Code = Boxes.Warehouse ORDER BY Boxes.Value DESC LIMIT 1; 
SELECT Warehouses.Code, COUNT(Boxes.Code) FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code; 
SELECT Warehouse, COUNT(*) FROM Boxes GROUP BY Warehouse; 
SELECT Warehouse FROM Boxes WHERE Contents = 'Rocks' GROUP BY Warehouse HAVING COUNT(*) = 1; 
SELECT Warehouse FROM Boxes WHERE Contents = 'Rocks' GROUP BY Warehouse HAVING COUNT(*) > 1; 
SELECT Boxes.Code, Warehouses.Location FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Boxes.Contents = 'Apples' AND Warehouses.Location = 'New York' ORDER BY Boxes.Code; 
SELECT Boxes.Code, Warehouses.Location FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code 
SELECT Boxes.Code FROM Boxes WHERE Boxes.Warehouse = (SELECT Warehouses.Code FROM Warehouses WHERE Warehouses.Location = 'Chicago') AND Boxes.Contents = 'Widgets' ORDER BY Boxes.Code ASC; 
SELECT Boxes.Code FROM Boxes WHERE Boxes.Warehouse IN (SELECT Warehouses.Code FROM Warehouses WHERE Warehouses.Location = 'Chicago') ORDER BY Boxes.Code ASC; 
SELECT Warehouses.Code, COUNT(Boxes.Code) FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code; 
SELECT Warehouse, COUNT(*) FROM Boxes GROUP BY Warehouse; 
SELECT Warehouse, COUNT(DISTINCT Contents) FROM Boxes GROUP BY Warehouse; 
SELECT Warehouse, COUNT(DISTINCT Contents) FROM Boxes GROUP BY Warehouse; 
SELECT Code FROM Warehouses WHERE Capacity > (SELECT SUM(Value) FROM Boxes WHERE Warehouse = Warehouses.Code) 
SELECT Code FROM Warehouses WHERE Code IN (SELECT Warehouse FROM Boxes GROUP BY Warehouse HAVING COUNT(*) > Capacity); 
SELECT Warehouse, SUM(Value) FROM Boxes GROUP BY Warehouse HAVING Location!= 'Chicago' ORDER BY SUM(Value) DESC; 
SELECT Warehouse, SUM(Value) FROM Boxes WHERE Contents NOT LIKE '%Chicago%' GROUP BY Warehouse; 
SELECT university.University_ID, university.University_Name, university.City, university.State FROM university ORDER BY university.University_Name ASC; 
SELECT university.University_ID, university.University_Name, university.City, university.State FROM university ORDER BY university.University_Name ASC; 
SELECT University_ID FROM university WHERE State = 'Illinois' OR State = 'Ohio' GROUP BY University_ID HAVING COUNT(University_ID) = 1; 
SELECT University_ID FROM university WHERE State = 'Illinois' OR State = 'Ohio' GROUP BY University_ID HAVING COUNT(University_ID) = 1; 
SELECT University_ID, MAX(Enrollment), AVG(Enrollment), MIN(Enrollment) FROM university GROUP BY University_ID; 
SELECT university.University_ID, university.University_Name, university.Enrollment, overall_ranking.Reputation_point, overall_ranking.Research_point, overall_ranking.Citation_point, overall_ranking.Total FROM university INNER JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID WHERE overall_ranking.Total IS NOT NULL ORDER BY overall_ranking.Total DESC LIMIT 1 OFFSET 0 
SELECT university.University_ID, university.Team_Name FROM university WHERE university.Enrollment > (SELECT AVG(university.Enrollment) FROM university) 
SELECT University_ID, Team_Name FROM university WHERE Enrollment > (SELECT AVG(Enrollment) FROM university); 
SELECT University_ID, Home_Conference FROM university 
SELECT University_ID, Home_Conference FROM university; 
SELECT University_ID, Home_Conference, COUNT(University_ID) AS num_universities FROM university GROUP BY Home_Conference; 
SELECT University_ID, COUNT(*) AS num_universities FROM university WHERE Home_Conference = 'Big Ten' GROUP BY University_ID; 
SELECT University_ID, State, COUNT(University_ID) AS num_universities FROM university GROUP BY State ORDER BY num_universities DESC LIMIT 1; 
SELECT university.University_ID, university.State 
SELECT University_ID, Home_Conference, AVG(Enrollment) AS Average_Enrollment FROM university WHERE Enrollment > 2000 GROUP BY Home_Conference HAVING AVG(Enrollment) > 2000 ORDER BY Average_Enrollment DESC; 
SELECT University_ID, Home_Conference, AVG(Enrollment) AS avg_enrollment FROM university WHERE Enrollment > 2000 GROUP BY Home_Conference HAVING AVG(Enrollment) > 2000 ORDER BY avg_enrollment DESC; 
SELECT University_ID, Home_Conference, SUM(Enrollment) AS Total_Enrollment FROM university GROUP BY Home_Conference ORDER BY Total_Enrollment ASC LIMIT 1; 
SELECT University_ID, Home_Conference, Enrollment FROM university ORDER BY Enrollment ASC LIMIT 1; 
SELECT major.Major_ID, major.Major_Name, major.Major_Code FROM major ORDER BY major.Major_Code ASC 
SELECT major.Major_ID, major.Major_Name, major.Major_Code FROM major ORDER BY major.Major_Code ASC; 
SELECT major.Major_ID, major.Major_Name, major_ranking.Rank FROM major INNER JOIN major_ranking ON major.Major_ID = major_ranking.Major_ID WHERE major.Major_Name = 'Augustana College' ORDER BY major_ranking.Rank ASC; 
SELECT major_ranking.Rank, major.Major_Name FROM major_ranking JOIN major ON major_ranking.Major_ID = major.Major_ID WHERE major.Major_Name = 'Augustana College' ORDER BY major_ranking.Rank ASC; 
SELECT university.University_ID, university.University_Name, university.City, university.State 
SELECT university.University_ID, university.University_Name, university.City, university.State 
SELECT University_ID, University_Name FROM university WHERE University_ID IN (SELECT University_ID FROM major_ranking WHERE Rank = 1) ORDER BY COUNT(Major_ID) DESC LIMIT 1; 
SELECT University_ID, University_Name FROM university WHERE University_ID IN (SELECT University_ID FROM major_ranking WHERE Rank = 1) ORDER BY University_ID DESC LIMIT 1; 
SELECT University_ID, University_Name FROM university WHERE University_ID NOT IN (SELECT University_ID FROM major_ranking WHERE Rank = 1) 
SELECT University_ID, University_Name FROM university WHERE University_ID NOT IN (SELECT University_ID FROM major_ranking WHERE Rank = 1); 
SELECT university.University_ID, university.University_Name, major.Major_Name 
SELECT University_ID, University_Name FROM university WHERE University_ID IN (SELECT University_ID FROM major_ranking WHERE Major_ID IN (SELECT Major_ID FROM major WHERE Major_Name = 'Accounting') OR Major_ID IN (SELECT Major_ID FROM major WHERE Major_Name = 'Urban Education')) ORDER BY University_Name ASC; 
SELECT university.University_ID, university.University_Name, overall_ranking.Rank FROM university INNER JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID WHERE university.State = 'Wisconsin' ORDER BY overall_ranking.Rank ASC 
SELECT university.University_ID, university.University_Name, overall_ranking.Rank 
SELECT University_ID, University_Name, Reputation_point, Research_point, Citation_point, Total 
SELECT University_ID, University_Name FROM university WHERE University_ID IN (SELECT University_ID FROM overall_ranking WHERE Reputation_point + Research_point + Citation_point = (SELECT MAX(Reputation_point + Research_point + Citation_point) FROM overall_ranking)); 
SELECT University_ID, University_Name, Reputation_point FROM overall_ranking ORDER BY Reputation_point ASC; 
SELECT University_ID, University_Name FROM university ORDER BY Reputation_point ASC; 
SELECT university.University_ID, university.University_Name, major.Major_Name 
SELECT University_ID, University_Name FROM university WHERE University_ID IN (SELECT University_ID FROM major_ranking WHERE Major_ID = (SELECT Major_ID FROM major WHERE Major_Name = 'Accounting') AND Rank >= 3) 
SELECT university.University_ID, university.University_Name, university.Enrollment 
SELECT university.University_ID, university.University_Name, university.City, university.State, university.Team_Name, university.Affiliation, university.Enrollment, university.Home_Conference, overall_ranking.Rank, overall_ranking.Reputation_point, overall_ranking.Research_point, overall_ranking.Citation_point, overall_ranking.Total, major.Major_ID, major.Major_Name, major.Major_Code, major_ranking.Rank, major_ranking.University_ID, major_ranking.Major_ID FROM university INNER JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID INNER JOIN major_ranking ON university.University_ID = major_ranking.University_ID INNER JOIN major ON major_ranking.Major_ID = major.Major_ID WHERE overall_ranking.Rank <= 5 AND major_ranking.Rank <= 5 GROUP BY university.University_ID, university.University_Name, university.City, university.State, university.Team_Name, university.Affiliation, university.Enrollment, university.Home_Conference, overall_ranking.R
SELECT university.University_ID, university.University_Name, overall_ranking.Reputation_point FROM overall_ranking JOIN university ON overall_ranking.University_ID = university.University_ID WHERE overall_ranking.Reputation_point IN (SELECT Rank FROM major_ranking WHERE Rank <= 3) ORDER BY overall_ranking.Reputation_point DESC; 
SELECT university.University_ID, university.University_Name, overall_ranking.Reputation_point, overall_ranking.Citation_point 
SELECT University_ID, State FROM university WHERE Enrollment < 3000 GROUP BY State HAVING COUNT(University_ID) > 2 ORDER BY State ASC; 
SELECT University_ID, State FROM university WHERE Enrollment < 3000 GROUP BY State HAVING COUNT(University_ID) > 2 ORDER BY State ASC; 
SELECT Movies.Code, Movies.Title 
SELECT Movies.Code, Movies.Title 
SELECT Name FROM MovieTheaters WHERE Movie IN (SELECT Code FROM Movies WHERE Rating = 'G') ORDER BY Name ASC; 
SELECT Movies.Code, Movies.Title 
SELECT Movies.Code, Movies.Title 
SELECT Movies.Code, Movies.Title 
SELECT Movies.Code, Movies.Title, MovieTheaters.Name FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie 
SELECT Movies.Code, Movies.Title, MovieTheaters.Name 
SELECT Movies.Code, Movies.Title, Movies.Rating FROM Movies WHERE Movies.Rating = 'G'; 
SELECT Movies.Code, Movies.Title, Movies.Rating 
SELECT Movies.Code, Movies.Title, MovieTheaters.Name, MovieTheaters.Code 
SELECT Movies.Code, Movies.Title, MovieTheaters.Name 
SELECT Movies.Code, Movies.Title, MovieTheaters.Name 
SELECT Movies.Code, Movies.Title, MovieTheaters.Name 
SELECT Name FROM MovieTheaters 
SELECT Name FROM MovieTheaters WHERE Code IN (SELECT Code FROM Movies WHERE Rating = 'G'); 
SELECT Movies.Code, Movies.Title, Movies.Rating 
SELECT Movies.Code, Movies.Title, Movies.Rating 
SELECT Name FROM MovieTheaters WHERE Movie IN (SELECT Code FROM Movies WHERE Rating IN ('G', 'PG')) 
SELECT Name FROM MovieTheaters WHERE Movie IN (SELECT Code FROM Movies WHERE Rating IN ('G', 'PG')) 
SELECT Movies.Code, Movies.Title 
SELECT Movies.Code, Movies.Title 
SELECT Movies.Code, Movies.Title 
SELECT Movies.Code, Movies.Title, Movies.Rating 
SELECT Movies.Code, Movies.Title 
SELECT Movies.Code, Movies.Title 
SELECT Movies.Code, Movies.Title 
SELECT Movies.Code, Movies.Title 
SELECT Movies.Code, Movies.Title, Movies.Rating 
SELECT Movies.Code, Movies.Title, Movies.Rating FROM Movies ORDER BY Movies.Rating DESC; 
SELECT Name FROM MovieTheaters WHERE Code IN (SELECT Movie FROM Movies GROUP BY Movie ORDER BY COUNT(Movie) DESC LIMIT 1); 
SELECT Name FROM MovieTheaters WHERE Code IN (SELECT Movie FROM Movies GROUP BY Movie HAVING COUNT(Movie) = (SELECT COUNT(Movie) FROM Movies GROUP BY Movie ORDER BY COUNT(Movie) DESC LIMIT 1)); 
SELECT Movies.Code, Movies.Title, COUNT(MovieTheaters.Code) AS Count 
SELECT Name FROM MovieTheaters WHERE Code IN (SELECT Movie FROM MovieTheaters GROUP BY Movie HAVING COUNT(Movie) = (SELECT COUNT(Movie) FROM MovieTheaters GROUP BY Movie ORDER BY COUNT(Movie) DESC LIMIT 1)); 
SELECT Movies.Code, Movies.Title, Movies.Rating, COUNT(MovieTheaters.Code) AS Count 
SELECT Movies.Code, Movies.Title, Movies.Rating FROM Movies 
SELECT Movies.Code, Movies.Title, Movies.Rating 
SELECT Code FROM Movies WHERE Rating IS NOT NULL; 
SELECT Name FROM MovieTheaters WHERE Movie IS NOT NULL; 
SELECT Name FROM MovieTheaters WHERE Code IN (SELECT Code FROM Movies) 
SELECT Name FROM MovieTheaters WHERE Movie IS NULL 
SELECT Name FROM MovieTheaters WHERE Movie IS NULL; 
SELECT Name FROM MovieTheaters WHERE Movie IN (SELECT Code FROM Movies WHERE Rating = 'G')  
SELECT Name FROM MovieTheaters WHERE Movie IN (SELECT Code FROM Movies WHERE Rating = 'G') ORDER BY Name ASC; 
SELECT Movies.Code, Movies.Title FROM Movies 
SELECT Movies.Code, Movies.Title 
SELECT Movies.Code, Movies.Title, Movies.Rating 
SELECT Movies.Code, Movies.Title, Movies.Rating 
SELECT Movies.Code, Movies.Title, Movies.Rating FROM Movies WHERE Movies.Rating IS NULL; 
SELECT Movies.Code, Movies.Title, MovieTheaters.Name FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE Movies.Rating IS NULL; 
SELECT Movies.Code, Movies.Title 
SELECT Movies.Code, Movies.Title 
SELECT Package.Recipient, Package.Weight 
SELECT Client.Recipient FROM Client 
SELECT Weight FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong') GROUP BY Weight HAVING COUNT(*) = (SELECT COUNT(*) FROM Client WHERE Name = 'Leo Wong') ORDER BY Weight DESC LIMIT 1; 
SELECT Weight FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong') AND Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong') 
SELECT Employee.Recipient FROM Employee 
SELECT Employee.Recipient, Employee.Name, Employee.Position FROM Employee, Package WHERE Employee.EmployeeID = Package.Recipient AND Package.Sender = (SELECT Client.AccountNumber FROM Client WHERE Client.Name = 'Amy Wong') AND Package.Contents = 'Bacon' AND Package.Weight = (SELECT MAX(Package.Weight) FROM Package WHERE Package.Contents = 'Bacon' AND Package.Weight < 1000) AND Package.Weight > 500 ORDER BY Employee.Position DESC LIMIT 1; 
SELECT Employee.Sender, Employee.Recipient, Employee.Name, Employee.Position, Employee.Salary, Employee.Remarks, Package.Contents, Package.Weight, Shipment.Date, Shipment.Manager, Shipment.Planet, Planet.Name, Planet.Coordinates, Has_Clearance.Level FROM Employee, Package, Shipment, Planet, Has_Clearance WHERE Employee.EmployeeID = Package.Sender AND Employee.EmployeeID = Package.Recipient AND Package.Sender = Shipment.Sender AND Package.Recipient = Shipment.Recipient AND Shipment.Planet = Planet.PlanetID AND Employee.EmployeeID = Has_Clearance.Employee AND Shipment.Planet = Has_Clearance.Planet AND Has_Clearance.Level = 3 AND Employee.Name = 'Turanga Leela' AND Employee.Position = 'Captain' AND Employee.Salary = 100000 AND Employee.Remarks = 'The best captain in the galaxy' AND Package.Contents = 'A box of donuts' AND Package.Weight = 100 AND Shipment.Date = '2022-01-01' AND Shipment.Manager = 100 AND Shipment.Planet = 100 AND Planet.Name = 'Earth' AND Planet.Coordinates = 100 AND Has_Clearance.Level = 3 
SELECT Employee.Sender, Employee.Recipient, Employee.Contents, Employee.Weight, Employee.Salary, Employee.Position FROM Package, Employee WHERE Package.Sender = Employee.AccountNumber AND Package.Recipient = Employee.AccountNumber AND Package.Contents = 'Bender' AND Package.Weight = 100 AND Package.Shipment = 1; 
SELECT Employee.Sender, Employee.Recipient, Employee.Position, Employee.Salary, Employee.Remarks, Client.Name, Client.AccountNumber 
SELECT Employee.Sender, Employee.Recipient, Employee.Name, Employee.Position, Employee.Salary, Employee.Remarks, Package.Contents, Package.Weight, Package.PackageNumber, Package.Shipment, Package.AccountNumber, Client.Name AS SenderName, Client.Name AS RecipientName, Planet.Name AS PlanetName, Planet.Coordinates, Shipment.Date, Shipment.Manager, Shipment.ShipmentID, Has_Clearance.Level FROM Employee JOIN Package ON Employee.EmployeeID = Package.Sender JOIN Client ON Employee.EmployeeID = Client.AccountNumber JOIN Package ON Employee.EmployeeID = Package.Recipient JOIN Client ON Employee.EmployeeID = Client.AccountNumber JOIN Planet ON Package.Shipment = Planet.PlanetID JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Has_Clearance ON Employee.EmployeeID = Has_Clearance.Employee AND Package.Shipment = Has_Clearance.Planet WHERE Employee.Position = 'Intern' AND Package.Contents = 'Laptop' AND Package.Weight = 10 AND Package.PackageNumber = 1 AND Package.Shipment = 1 AND Package.AccountNumber = 1 AND Package.AccountNumber = 2 AND Package.Shipment = 1 AND Package.AccountNumber = 1 AND Package.AccountNumber = 2 AND Package.Shipment = 1 AND Package.AccountNumber = 1 AND Package.AccountNumber = 2 AND Package.Shipment = 1 AND Package.AccountNumber = 1 AND Package.AccountNumber = 2 AND Package.Shipment = 1 AND Package.AccountNumber = 1 AND Package.AccountNumber = 2 AND Package.Shipment = 1 AND Package.AccountNumber
SELECT Has_Clearance.Contents FROM Has_Clearance WHERE Has_Clearance.Employee = 1 AND Has_Clearance.Level = 3 AND Has_Clearance.Plant = 1; 
SELECT Has_Clearance.Contents 
SELECT PackageNumber FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong') ORDER BY PackageNumber ASC; 
SELECT PackageNumber FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong') AND Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong') AND Contents = 'Gold' AND Weight > 1000 
SELECT PackageNumber FROM Package WHERE Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong') ORDER BY PackageNumber ASC; 
SELECT PackageNumber FROM Package WHERE Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong'); 
SELECT PackageNumber, Contents, Weight, Sender, Recipient FROM Package WHERE Sender = 'Leo Wong' OR Recipient = 'Leo Wong'; 
SELECT PackageNumber FROM Package WHERE Sender = 1 OR Recipient = 1 
SELECT Shipment.Shipment, Package.PackageNumber 
SELECT Package.PackageNumber FROM Package WHERE Package.PackageNumber = 1 
SELECT Package.Contents FROM Package WHERE Package.Sender = (SELECT Client.AccountNumber FROM Client WHERE Client.Name = 'John Zoidfarb') AND Package.Recipient = (SELECT Client.AccountNumber FROM Client WHERE Client.Name = 'John Zoidfarb'); 
SELECT Package.Contents FROM Package WHERE Package.Sender = (SELECT Client.AccountNumber FROM Client WHERE Client.Name = 'John Zoidfarb') AND Package.Recipient = (SELECT Client.AccountNumber FROM Client WHERE Client.Name = 'John Zoidfarb'); 
SELECT PackageNumber, Weight FROM Package WHERE Sender IN (SELECT AccountNumber FROM Client WHERE Name LIKE '%John%') ORDER BY Weight DESC LIMIT 1; 
SELECT PackageNumber, Weight FROM Package WHERE Contents LIKE '%John%' ORDER BY Weight DESC LIMIT 1; 
SELECT PackageNumber, Weight FROM Package WHERE Weight IN (SELECT MIN(Weight) FROM Package GROUP BY Shipment HAVING COUNT(*) = 3) ORDER BY Weight DESC LIMIT 3; 
SELECT PackageNumber, Weight FROM Package WHERE Weight IN (SELECT MIN(Weight) FROM Package GROUP BY Shipment HAVING COUNT(*) = 3); 
SELECT Client.Recipient, COUNT(Package.PackageNumber) AS NumberOfPackages 
SELECT Client.Recipient, COUNT(*) FROM Client, Package WHERE Client.AccountNumber = Package.Recipient GROUP BY Client.Recipient ORDER BY COUNT(*) DESC LIMIT 1; 
SELECT Client.Recipient, COUNT(Package.PackageNumber) AS NumPackages 
SELECT PackageNumber, Name FROM Package, Client WHERE Package.Recipient = Client.AccountNumber AND Package.Weight = (SELECT MIN(Package.Weight) FROM Package); 
SELECT Client.Recipient, Client.Name 
SELECT Client.Recipient FROM Client WHERE Client.AccountNumber IN (SELECT Package.Recipient FROM Package WHERE Package.PackageNumber IN (SELECT PackageNumber FROM Package WHERE Package.Sender IN (SELECT Client.AccountNumber FROM Client WHERE Client.Name = 'John Doe') AND Package.Weight > 1000)) AND Client.AccountNumber IN (SELECT Package.Sender FROM Package WHERE Package.PackageNumber IN (SELECT PackageNumber FROM Package WHERE Package.Sender IN (SELECT Client.AccountNumber FROM Client WHERE Client.Name = 'John Doe') AND Package.Weight > 1000)) AND Client.AccountNumber IN (SELECT Package.Sender FROM Package WHERE Package.PackageNumber IN (SELECT PackageNumber FROM Package WHERE Package.Sender IN (SELECT Client.AccountNumber FROM Client WHERE Client.Name = 'John Doe') AND Package.Weight > 1000)) AND Client.AccountNumber IN (SELECT Package.Sender FROM Package WHERE Package.PackageNumber IN (SELECT PackageNumber FROM Package WHERE Package.Sender IN (SELECT Client.AccountNumber FROM Client WHERE Client.Name = 'John Doe') AND Package.Weight > 1000)) AND Client.AccountNumber IN (SELECT Package.Sender FROM Package WHERE Package.PackageNumber IN (SELECT PackageNumber FROM Package WHERE Package.Sender IN (SELECT Client.AccountNumber FROM Client WHERE Client.Name = 'John Doe') AND Package.Weight > 1000)) AND Client.AccountNumber IN (SELECT Package.Sender FROM Package WHERE Package.PackageNumber IN (SELECT PackageNumber FROM Package WHERE Package.Sender IN (SELECT Client.AccountNumber FROM Client WHERE Client.Name = 'John Doe') AND Package.Weight > 1000)) AND Client.AccountNumber IN (SELECT Package.Sender FROM
SELECT Planet.Contents FROM Planet WHERE Planet.Name = 'Mars' AND Planet.Coordinates = (SELECT Coordinates FROM Planet WHERE Planet.Name = 'Earth' AND Planet.Coordinates = (SELECT Coordinates FROM Planet WHERE Planet.Name = 'Venus' AND Planet.Coordinates = (SELECT Coordinates FROM Planet WHERE Planet.Name = 'Jupiter' AND Planet.Coordinates = (SELECT Coordinates FROM Planet WHERE Planet.Name = 'Saturn' AND Planet.Coordinates = (SELECT Coordinates FROM Planet WHERE Planet.Name = 'Uranus' AND Planet.Coordinates = (SELECT Coordinates FROM Planet WHERE Planet.Name = 'Neptune' AND Planet.Coordinates = (SELECT Coordinates FROM Planet WHERE Planet.Name = 'Pluto' AND Planet.Coordinates = (SELECT Coordinates FROM Planet WHERE Planet.Name = 'Earth' AND Planet.Coordinates = (SELECT Coordinates FROM Planet WHERE Planet.Name = 'Venus' AND Planet.Coordinates = (SELECT Coordinates FROM Planet WHERE Planet.Name = 'Jupiter' AND Planet.Coordinates = (SELECT Coordinates FROM Planet WHERE Planet.Name = 'Saturn' AND Planet.Coordinates = (SELECT Coordinates FROM Planet WHERE Planet.Name = 'Uranus' AND Planet.Coordinates = (SELECT Coordinates FROM Planet WHERE Planet.Name = 'Neptune' AND Planet.Coordinates = (SELECT Coordinates FROM Planet WHERE Planet.Name = 'Pluto' AND Planet.Coordinates = (SELECT Coordinates FROM Planet WHERE Planet.Name = 'Earth' AND Planet.Coordinates = (SELECT Coordinates FROM Planet WHERE Planet.Name = 'Venus' AND Planet.Coordinates = (SELECT Coordinates FROM Planet WHERE Planet.Name = 'Jupiter
SELECT Planet.Contents FROM Planet WHERE Planet.Name = 'Mars'; 
SELECT Planet.PackageNumber, Package.Contents, Package.Weight, Package.Sender, Package.Recipient 
SELECT Planet.PackageNumber, Package.Contents, Package.Weight, Package.Sender, Package.Recipient 
SELECT Shipment.Shipment 
SELECT Shipment.Shipment 
SELECT Shipment.Shipment 
SELECT Shipment.Shipment 
SELECT Shipment.Shipment 
SELECT Shipment.Shipment 
SELECT Shipment.Shipment 
SELECT Shipment.Shipment 
SELECT Shipment.Shipment 
SELECT Shipment.Shipment 
SELECT Planet.PackageNumber, Planet.Name, SUM(Shipment.ShipmentID) AS TotalShipments 
SELECT Planet.PackageNumber, COUNT(Shipment.ShipmentID) AS ShipmentCount 
SELECT Planet.PackageNumber 
SELECT Planet.Contents FROM Planet 
SELECT Employee.Recipient, COUNT(*) FROM Employee, Shipment, Package WHERE Employee.EmployeeID = Shipment.Manager AND Shipment.ShipmentID = Package.Shipment GROUP BY Employee.EmployeeID ORDER BY COUNT(*) DESC LIMIT 1; 
SELECT Employee.Sender, COUNT(*) FROM Shipment, Employee, Client WHERE Shipment.Manager = Employee.EmployeeID AND Shipment.ShipmentID = Employee.EmployeeID AND Shipment.Recipient = Client.AccountNumber GROUP BY Employee.Sender; 
SELECT Weight FROM Package WHERE Shipment IN (SELECT ShipmentID FROM Shipment WHERE Planet IN (SELECT PlanetID FROM Planet WHERE Name = 'Mars')) AND Recipient IN (SELECT AccountNumber FROM Client WHERE Name = 'Mars') AND Sender IN (SELECT AccountNumber FROM Client WHERE Name = 'Earth') AND Contents LIKE '%computer%' AND PackageNumber = 1 
SELECT Weight 
SELECT Planet.PackageNumber, SUM(Package.Weight) FROM Package, Shipment, Planet WHERE Package.Shipment = Shipment.ShipmentID AND Shipment.Planet = Planet.PlanetID GROUP BY Planet.PlanetID; 
SELECT Planet.PackageNumber, Planet.Name, SUM(Package.Weight) FROM Planet, Package WHERE Package.Shipment = Planet.Shipment GROUP BY Planet.Name ORDER BY SUM(Package.Weight) DESC; 
SELECT Planet.PackageNumber 
SELECT Planet.PackageNumber 
SELECT PackageNumber FROM Package WHERE Shipment IN (SELECT ShipmentID FROM Shipment WHERE Planet IN (SELECT PlanetID FROM Planet WHERE Name = 'Omicron Persei 8') AND Sender IN (SELECT AccountNumber FROM Client WHERE Name = 'Zapp Brannigan')) AND Recipient IN (SELECT AccountNumber FROM Client WHERE Name = 'Kif Kroker') ORDER BY PackageNumber ASC; 
SELECT Package.PackageNumber 
SELECT PackageNumber FROM Package WHERE Shipment IN (SELECT ShipmentID FROM Shipment WHERE Planet IN (SELECT PlanetID FROM Planet WHERE Name = 'Omicron Persei 8') OR Sender IN (SELECT AccountNumber FROM Client WHERE Name = 'Zapp Brannigan')) OR Recipient IN (SELECT AccountNumber FROM Client WHERE Name = 'Zapp Brannigan') 
SELECT Shipment.Shipment, COUNT(*) FROM Shipment 
SELECT PackageNumber, Weight FROM Package WHERE Weight BETWEEN 10 AND 30; 
SELECT PackageNumber, Weight FROM Package WHERE Weight BETWEEN 10 AND 30 
SELECT Employee.Recipient FROM Employee 
SELECT Employee.Recipient FROM Employee 
SELECT Employee.Recipient FROM Employee 
SELECT Employee.Recipient FROM Employee 
SELECT Planet.PackageNumber 
SELECT Planet.PackageNumber 
SELECT Employee.Recipient FROM Employee WHERE Employee.Salary BETWEEN 5000 AND 10000; 
SELECT Employee.Recipient FROM Package WHERE Package.Sender = 1 AND Package.Recipient = 2 AND Package.Contents = 'Gold' AND Package.Weight > 1000 
SELECT Employee.Recipient FROM Employee 
SELECT Employee.Recipient 
SELECT Employee.Recipient FROM Employee 
SELECT Employee.Recipient FROM Employee 
SELECT Game_ID FROM game 
SELECT Game_ID FROM game WHERE Units_sold_Millions > 100 
SELECT game.Game_ID, game.Title, game.Developers 
SELECT game.Game_ID, game.Title, game.Developers FROM game ORDER BY Units_sold_Millions DESC; 
SELECT Game_ID, AVG(Units_sold_Millions) FROM game WHERE Developers!= 'Nintendo' GROUP BY Game_ID; 
SELECT Game_ID, AVG(Units_sold_Millions) FROM game WHERE Developers!= 'Nintendo' GROUP BY Game_ID; 
SELECT platform.Player_ID, platform.Platform_name, platform.Market_district 
SELECT platform.Player_ID, platform.Platform_name, platform.Market_district 
SELECT platform.Player_ID, platform.Platform_name 
SELECT platform.Player_ID, platform.Platform_name 
SELECT player.Player_ID, player.Rank_of_the_year 
SELECT Player_ID, MAX(Rank_of_the_year), MIN(Rank_of_the_year) FROM player GROUP BY Player_ID; 
SELECT player.Player_ID 
SELECT Player_ID FROM player WHERE Rank_of_the_year <= 3; 
SELECT player.Player_ID, player.Player_name 
SELECT player.Player_ID, player.Player_name 
SELECT player.Player_ID, player.Player_name, player.College 
SELECT player.Player_ID, player.Player_name, player.College 
SELECT player.Player_ID, player.Player_name, player.Rank_of_the_year FROM game_player JOIN player ON game_player.Player_ID = player.Player_ID WHERE game_player.Game_ID = (SELECT Game_ID FROM game WHERE Title = 'Super Mario World') AND game_player.If_active = 1 
SELECT player.Player_ID, player.Player_name, player.Rank_of_the_year 
SELECT game.Game_ID, game.Developers 
SELECT game.Game_ID, game.Title, game.Developers, game_player.If_active 
SELECT Game_ID, AVG(Units_sold_Millions) FROM game_player JOIN game ON game_player.Game_ID = game.Game_ID JOIN player ON game_player.Player_ID = player.Player_ID WHERE Position = 'Guard' GROUP BY Game_ID; 
SELECT Game_ID, AVG(Units_sold_Millions) FROM game_player 
SELECT game.Game_ID, game.Title, platform.Platform_name 
SELECT game.Game_ID, game.Title, platform.Platform_name FROM game, platform WHERE game.Platform_ID = platform.Platform_ID; 
SELECT game.Game_ID, game.Title FROM game WHERE game.Platform_ID IN (SELECT Platform_ID FROM platform WHERE platform.Market_district IN ('Asia', 'USA'))  
SELECT game.Game_ID, game.Title 
SELECT game.Game_ID, game.Title, game.Franchise, game.Platform_ID, game.Units_sold_Millions, platform.Platform_name, platform.Download_rank, platform.Market_district 
SELECT game.Game_ID, game.Title, game.Release_Date, game.Franchise, game.Developers, game.Platform_ID, game.Units_sold_Millions, platform.Platform_ID, platform.Platform_name, platform.Market_district, platform.Download_rank FROM game, platform WHERE game.Platform_ID = platform.Platform_ID GROUP BY game.Franchise ORDER BY game.Franchise ASC; 
SELECT game.Game_ID, game.Title, game.Franchise, game.Platform_ID, game.Units_sold_Millions 
SELECT game.Game_ID, game.Title, game.Franchise, game.Platform_ID, game.Units_sold_Millions 
SELECT game.Game_ID, game.Title, game.Franchise, game.Platform_ID, game.Units_sold_Millions, platform.Platform_name, platform.Download_rank 
SELECT game.Game_ID, game.Title, game.Release_Date, game.Franchise, game.Developers, game.Platform_ID, game.Units_sold_Millions, platform.Platform_ID, platform.Platform_name, platform.Market_district, platform.Download_rank 
SELECT player.Player_ID, player.Player_name 
SELECT player.Player_ID, player.Player_name 
SELECT game.Game_ID, game.Title 
SELECT game.Game_ID, game.Title 
SELECT Game_ID, Franchise 
SELECT Game_ID, Franchise 
SELECT game.Game_ID, game.Title 
SELECT game.Game_ID, game.Title 
SELECT press.Press_ID, press.Name, press.Month_Profits_billion, press.Year_Profits_billion FROM press ORDER BY press.Year_Profits_billion DESC; 
SELECT press.Press_ID, press.Name FROM press ORDER BY press.Year_Profits_billion DESC; 
SELECT press.Press_ID, press.Name 
SELECT Press_ID, Name FROM press WHERE Year_Profits_billion > 15 OR Month_Profits_billion > 1 
SELECT Press_ID, AVG(Year_Profits_billion), MAX(Year_Profits_billion) FROM press GROUP BY Press_ID; 
SELECT Press_ID, AVG(Year_Profits_billion), MAX(Year_Profits_billion) FROM press GROUP BY Press_ID; 
SELECT press.Press_ID, press.Name 
SELECT press.Press_ID, press.Name 
SELECT Press_ID FROM press WHERE Month_Profits_billion = (SELECT MAX(Month_Profits_billion) FROM press) OR Month_Profits_billion = (SELECT MIN(Month_Profits_billion) FROM press); 
SELECT Press_ID, Name, Month_Profits_billion FROM press ORDER BY Month_Profits_billion DESC LIMIT 1; 
SELECT Author_ID FROM author WHERE Age < 30; 
SELECT Author_ID FROM author WHERE Age < 30; 
SELECT Author_ID, Gender, AVG(Age) FROM author GROUP BY Gender; 
SELECT author.Author_ID, author.Name, author.Age, author.Gender, AVG(author.Age) AS avg_age 
SELECT Author_ID, Gender, COUNT(*) FROM author WHERE Age > 30 GROUP BY Gender; 
SELECT Author_ID, Gender, COUNT(*) FROM author WHERE Age > 30 GROUP BY Gender; 
SELECT Title FROM book WHERE Release_date IS NOT NULL ORDER BY Release_date DESC; 
SELECT Title FROM book WHERE Release_date IS NOT NULL ORDER BY Release_date DESC; 
SELECT Book_Series, COUNT(*) FROM book GROUP BY Book_Series; 
SELECT Book_Series, COUNT(*) AS Count FROM book GROUP BY Book_Series; 
SELECT book.Title, book.Release_date FROM book WHERE book.Sale_Amount = (SELECT MAX(book.Sale_Amount) FROM book) ORDER BY book.Sale_Amount DESC LIMIT 5; 
SELECT book.Title, book.Release_date FROM book WHERE book.Sale_Amount IN (SELECT MAX(book.Sale_Amount) FROM book) LIMIT 5; 
SELECT Book_Series FROM book WHERE Sale_Amount > 1000 AND Sale_Amount < 500 
SELECT Book_Series FROM book WHERE Sale_Amount > 1000 OR Sale_Amount < 500 
SELECT author.Author_ID, author.Name FROM author WHERE author.Author_ID IN (SELECT book.Author_ID FROM book WHERE book.Book_Series IN ('MM', 'LT')) ORDER BY author.Author_ID ASC; 
SELECT author.Author_ID, author.Name FROM author WHERE author.Author_ID IN (SELECT book.Author_ID FROM book WHERE book.Book_Series IN ('MM', 'LT')) ORDER BY author.Author_ID ASC; 
SELECT author.Author_ID, author.Name, author.Age FROM author LEFT JOIN book ON author.Author_ID = book.Author_ID WHERE book.Book_ID IS NULL; 
SELECT author.Author_ID, author.Name 
SELECT author.Author_ID, author.Name 
SELECT author.Author_ID, author.Name 
SELECT book.Title, author.Name, press.Name FROM book INNER JOIN author ON book.Author_ID = author.Author_ID INNER JOIN press ON book.Press_ID = press.Press_ID ORDER BY book.Sale_Amount DESC LIMIT 3; 
SELECT book.Title, author.Name, press.Name 
SELECT press.Press_ID, press.Name, SUM(book.Sale_Amount) AS Total_Sale_Amount FROM book JOIN author ON book.Author_ID = author.Author_ID JOIN press ON book.Press_ID = press.Press_ID GROUP BY press.Press_ID, press.Name 
SELECT press.Press_ID, press.Name, SUM(book.Sale_Amount) AS Total_Sale_Amount FROM book JOIN author ON book.Author_ID = author.Author_ID JOIN press ON book.Press_ID = press.Press_ID GROUP BY press.Press_ID 
SELECT press.Press_ID, press.Name, COUNT(book.Book_ID) AS Book_Count 
SELECT press.Press_ID, press.Name, COUNT(book.Book_ID) FROM press LEFT JOIN book ON press.Press_ID = book.Press_ID WHERE book.Sale_Amount > 1000 GROUP BY press.Press_ID, press.Name; 
SELECT author.Author_ID, author.Name 
SELECT author.Author_ID, author.Name 
SELECT author.Author_ID, author.Name, author.Gender 
SELECT author.Author_ID, author.Name, author.Gender 
SELECT author.Author_ID, author.Name FROM author WHERE author.Author_ID NOT IN (SELECT book.Author_ID FROM book WHERE book.Press_ID = (SELECT press.Press_ID FROM press WHERE press.Name = 'Accor')); 
SELECT author.Author_ID, author.Name FROM author WHERE author.Author_ID NOT IN (SELECT book.Author_ID FROM book WHERE book.Press_ID IN (SELECT press.Press_ID FROM press WHERE press.Name = 'Accor'))  
SELECT press.Press_ID, press.Name, press.Year_Profits_billion 
SELECT press.Press_ID, press.Name, press.Year_Profits_billion 
SELECT Authors.other_details 
SELECT document_id, process_id, staff_id, staff_role_code, date_from, date_to, other_details FROM Staff_in_Processes WHERE document_id IN (SELECT document_id FROM Documents WHERE author_name IN (SELECT author_name FROM Authors WHERE author_name IN (SELECT author_name FROM Documents_Processes WHERE process_outcome_code IN (SELECT process_outcome_code FROM Process_Outcomes WHERE process_outcome_code IN (SELECT process_outcome_code FROM Documents_Processes WHERE process_status_code IN (SELECT process_status_code FROM Process_Status WHERE process_status_code IN (SELECT process_status_code FROM Business_Processes WHERE process_id IN (SELECT process_id FROM Documents_Processes WHERE document_id IN (SELECT document_id FROM Documents WHERE author_name IN (SELECT author_name FROM Authors WHERE author_name IN (SELECT author_name FROM Documents_Processes WHERE process_outcome_code IN (SELECT process_outcome_code FROM Process_Outcomes WHERE process_outcome_code IN (SELECT process_outcome_code FROM Documents_Processes WHERE process_status_code IN (SELECT process_status_code FROM Process_Status WHERE process_status_code IN (SELECT process_status_code FROM Business_Processes WHERE process_id IN (SELECT process_id FROM Documents_Processes WHERE document_id IN (SELECT document_id FROM Documents WHERE author_name IN (SELECT author_name FROM Authors WHERE author_name IN (SELECT author_name FROM Documents_Processes WHERE process_outcome_code IN (SELECT process_outcome_code FROM Process_Outcomes WHERE process_outcome_code IN (SELECT process_outcome_code FROM Documents_Processes WHERE process_status_code IN (SELECT process_status_code FROM Process_Status WHERE process_status_code IN (SELECT process_status_code FROM Business_Processes WHERE process_id IN (SELECT process_id FROM Documents_Processes WHERE document_id IN (SELECT document_id FROM Documents WHERE author_name IN (SELECT author_name FROM Authors WHERE author_name IN (SELECT author_name FROM Documents_Processes WHERE process_outcome_code IN (SELECT process_outcome_code FROM Process_Outcomes WHERE process_outcome_code IN (SELECT process_outcome_code FROM Documents_Processes WHERE process_status_code IN (SELECT process_status_code FROM Process_Status WHERE process_status_code IN (SELECT process_status_code FROM Business_Processes WHERE process_id IN (SELECT process_id FROM Documents_Processes WHERE document_id IN (SELECT document_id FROM Documents WHERE author_name IN (SELECT author_name FROM Authors WHERE author_name IN (SELECT author_name FROM Documents_Processes WHERE process_outcome_code IN
SELECT Authors.other_details, Authors.author_name FROM Authors 
SELECT other_details FROM Authors WHERE author_name = 'Addison Denesik'; 
SELECT document_id FROM Documents 
SELECT document_id, author_name 
SELECT document_id, process_id, staff_id, staff_role_code, date_from, date_to, other_details 
SELECT document_id FROM Documents WHERE author_name = 'Era Kerluke'; 
SELECT document_id, document_name, document_description FROM Documents; 
SELECT document_id, document_name FROM Documents WHERE author_name = 'Bianka Cummings'; 
SELECT Authors.other_details, Authors.author_name FROM Documents JOIN Authors ON Documents.author_name = Authors.author_name WHERE Documents.document_name = 'Travel to China'; 
SELECT Authors.other_details, COUNT(DISTINCT Documents.document_id) AS num_documents FROM Authors JOIN Documents ON Authors.author_name = Documents.author_name GROUP BY Authors.other_details; 
SELECT document_id, author_name, COUNT(document_id) AS num_documents FROM Documents GROUP BY author_name ORDER BY num_documents DESC LIMIT 1; 
SELECT document_id, process_id, staff_id, staff_role_code, date_from, date_to, other_details 
SELECT process_id FROM Business_Processes 
SELECT process_id, process_name, process_description FROM Business_Processes WHERE process_id = 9; 
SELECT process_id, process_name FROM Business_Processes WHERE process_id = 9; 
SELECT process_id, COUNT(process_outcome_code) FROM Documents_Processes GROUP BY process_id; 
SELECT process_id, process_outcome_code, process_outcome_description 
SELECT process_id, process_name, process_description, process_outcome_code, process_status_code, document_name, document_description, author_name, staff_role_code, staff_details, date_from, date_to, other_details FROM Business_Processes, Documents_Processes, Documents, Staff_in_Processes, Staff, Ref_Staff_Roles, Authors WHERE process_outcome_code = 'working' AND process_status_code = 'working' AND document_id = 1 AND process_id = 1 AND staff_id = 1 AND staff_role_code = 'working' AND author_name = 'working' AND document_name = 'working' AND staff_details = 'working' AND date_from = 'working' AND date_to = 'working' AND other_details = 'working' ORDER BY process_id, process_name, process_description, process_outcome_code, process_status_code, document_name, document_description, author_name, staff_role_code, staff_details, date_from, date_to, other_details; 
SELECT process_id, process_status_code, COUNT(process_status_code) FROM Documents_Processes GROUP BY process_id, process_status_code ORDER BY process_id, process_status_code; 
SELECT process_id, process_status_code, process_status_description 
SELECT process_id, process_status_description 
SELECT staff_id FROM Staff 
SELECT staff_id, staff_details FROM Staff; 
SELECT staff_id, staff_details FROM Staff WHERE staff_id = 100; 
SELECT staff_role_code, COUNT(*) FROM Staff_in_Processes GROUP BY staff_role_code ORDER BY COUNT(*) DESC; 
SELECT staff_role_code, staff_role_description FROM Ref_Staff_Roles; 
SELECT Ref_Staff_Roles.staff_role_code, Ref_Staff_Roles.staff_role_description FROM Ref_Staff_Roles WHERE Ref_Staff_Roles.staff_role_code = 'HR'; 
SELECT document_id FROM Documents_Processes WHERE process_id IN (SELECT process_id FROM Business_Processes WHERE process_name = 'How many documents have a process?'); 
SELECT process_id FROM Documents_Processes WHERE document_id IN (SELECT document_id FROM Documents WHERE author_name IN (SELECT author_name FROM Authors WHERE author_name = 'John Doe')); 
SELECT document_id FROM Documents_Processes WHERE process_id IS NULL; 
SELECT process_id FROM Business_Processes WHERE process_id NOT IN (SELECT process_id FROM Documents_Processes); 
SELECT process_id, process_outcome_code, process_status_code FROM Documents_Processes WHERE document_id = 0; 
SELECT process_id, process_name FROM Business_Processes WHERE process_id IN (SELECT process_id FROM Documents_Processes WHERE document_id IN (SELECT document_id FROM Documents WHERE document_name = 'Travel to Brazil')); 
SELECT process_id, COUNT(document_id) FROM Documents_Processes GROUP BY process_id; 
SELECT staff_id FROM Staff_in_Processes WHERE document_id = 0 AND process_id = 9; 
SELECT staff_id, COUNT(*) FROM Staff_in_Processes GROUP BY staff_id; 
SELECT staff_role_code, COUNT(*) FROM Staff_in_Processes GROUP BY staff_role_code; 
SELECT staff_role_code FROM Staff_in_Processes WHERE staff_id = 3 GROUP BY staff_role_code HAVING COUNT(*) > 1; 
SELECT Agencies.staff_id, Staff.staff_details, Staff.agency_id, Agencies.agency_details 
SELECT Agencies.staff_id, COUNT(Staff.staff_id) FROM Agencies, Staff WHERE Agencies.agency_id = Staff.agency_id GROUP BY Agencies.agency_id HAVING COUNT(Staff.staff_id) > 1 ORDER BY Agencies.agency_id ASC; 
SELECT Agencies.staff_id, Agencies.agency_details 
SELECT Agencies.staff_id, Agencies.agency_details FROM Agencies INNER JOIN Staff ON Agencies.agency_id = Staff.agency_id WHERE Staff.staff_id = 1; 
SELECT Clients.meeting_id, COUNT(Clients.meeting_id) AS num_clients 
SELECT Clients.meeting_id, COUNT(Clients.meeting_id) AS num_clients 
SELECT Clients.meeting_id, Clients.client_details FROM Clients WHERE Clients.client_id = 1; 
SELECT Clients.meeting_id, Clients.client_id, Clients.client_details 
SELECT Agencies.staff_id, COUNT(Clients.client_id) FROM Agencies, Clients WHERE Agencies.agency_id = Clients.agency_id GROUP BY Agencies.agency_id; 
SELECT Agencies.staff_id, COUNT(Clients.client_id) AS num_clients 
SELECT Agencies.staff_id, Agencies.agency_details, COUNT(Clients.client_id) AS client_count FROM Agencies INNER JOIN Staff ON Agencies.agency_id = Staff.agency_id INNER JOIN Clients ON Staff.staff_id = Clients.staff_id GROUP BY Agencies.agency_id ORDER BY client_count DESC LIMIT 1; 
SELECT Agencies.staff_id, Agencies.agency_details 
SELECT Agencies.staff_id, Agencies.agency_details, Clients.client_id, Clients.sic_code, Clients.client_details 
SELECT Agencies.staff_id, Agencies.agency_details 
SELECT Agencies.staff_id, Agencies.agency_details, Staff.staff_details, Clients.client_details, Invoices.invoice_details, Meetings.meeting_outcome, Meetings.meeting_type, Meetings.billable_yn, Meetings.start_date_time, Meetings.end_date_time, Meetings.purpose_of_meeting, Meetings.other_details, Payments.payment_details FROM Agencies, Staff, Clients, Invoices, Meetings, Payments WHERE Clients.client_id = Invoices.client_id AND Meetings.client_id = Clients.client_id AND Payments.invoice_id = Invoices.invoice_id AND Staff.staff_id = Meetings.staff_id AND Clients.client_details = 'Mac' AND Agencies.agency_id = Clients.agency_id AND Invoices.invoice_status = 'Paid' AND Meetings.meeting_outcome = 'Successful' AND Meetings.meeting_type = 'Business' AND Meetings.billable_yn = 'Y' AND Meetings.start_date_time >= '2022-01-01' AND Meetings.end_date_time <= '2022-12-31' AND Meetings.purpose_of_meeting LIKE '%Business%' AND Meetings.other_details LIKE '%Business%' AND Payments.payment_details LIKE '%Business%' ORDER BY Agencies.agency_id, Staff.staff_id, Clients.client_id, Invoices.invoice_id, Meetings.meeting_id, Payments.payment_id; 
SELECT Agencies.staff_id, Agencies.agency_details, Staff.staff_details, Clients.client_details, Invoices.invoice_details, Meetings.meeting_outcome, Meetings.meeting_type, Meetings.billable_yn, Meetings.start_date_time, Meetings.end_date_time, Meetings.purpose_of_meeting, Meetings.other_details, Payments.payment_details FROM Agencies INNER JOIN Staff ON Agencies.agency_id = Staff.agency_id INNER JOIN Clients ON Agencies.agency_id = Clients.agency_id INNER JOIN Invoices ON Clients.client_id = Invoices.client_id INNER JOIN Meetings ON Clients.client_id = Meetings.client_id INNER JOIN Payments ON Invoices.invoice_id = Payments.invoice_id WHERE Clients.client_details = 'Mac' AND Agencies.agency_details = 'Mac' AND Staff.staff_details = 'Mac' AND Invoices.invoice_details = 'Mac' AND Meetings.meeting_outcome = 'Mac' AND Meetings.meeting_type = 'Mac' AND Meetings.billable_yn = 'Mac' AND Meetings.start_date_time = 'Mac' AND Meetings.end_date_time = 'Mac' AND Meetings.purpose_of_meeting = 'Mac' AND Meetings.other_details = 'Mac' AND Payments.payment_details = 'Mac' ORDER BY Agencies.agency_details, Staff.staff_details, Clients.client_details, Invoices.invoice_details, Meetings.meeting_outcome, Meetings.meeting_type, Meetings.billable_yn, Meetings.start_date_time, Meetings.end_date_time, Meetings
SELECT Clients.staff_id, Clients.client_id, Clients.sic_code, Clients.client_details, Agencies.agency_id, Agencies.agency_details, Staff.staff_id, Staff.agency_id, Staff.staff_details FROM Clients INNER JOIN Agencies ON Clients.agency_id = Agencies.agency_id INNER JOIN Staff ON Agencies.agency_id = Staff.agency_id WHERE Clients.client_id = Staff.staff_id; 
SELECT Clients.meeting_id, Clients.client_details, Agencies.agency_details FROM Clients, Agencies WHERE Clients.agency_id = Agencies.agency_id; 
SELECT Staff.staff_id, Staff.agency_id, Staff.staff_details, Agencies.agency_details, Clients.client_id, Clients.sic_code, Clients.client_details, Invoices.invoice_id, Invoices.invoice_status, Invoices.invoice_details, Meetings.meeting_id, Meetings.client_id, Meetings.meeting_outcome, Meetings.meeting_type, Meetings.billable_yn, Meetings.start_date_time, Meetings.end_date_time, Meetings.purpose_of_meeting, Meetings.other_details, Payments.payment_id, Payments.invoice_id, Payments.payment_details FROM Staff INNER JOIN Agencies ON Staff.agency_id = Agencies.agency_id INNER JOIN Clients ON Agencies.agency_id = Clients.agency_id INNER JOIN Invoices ON Clients.client_id = Invoices.client_id INNER JOIN Meetings ON Clients.client_id = Meetings.client_id INNER JOIN Payments ON Invoices.invoice_id = Payments.invoice_id WHERE Clients.sic_code = '12345' ORDER BY Clients.sic_code ASC; 
SELECT Clients.staff_id, Clients.sic_code, COUNT(Clients.sic_code) AS num_clients 
SELECT Clients.meeting_id, Clients.client_details, Clients.sic_code 
SELECT Clients.staff_id, Clients.client_details 
SELECT Agencies.staff_id, Agencies.agency_details 
SELECT Agencies.staff_id, Agencies.agency_details 
SELECT Agencies.staff_id FROM Agencies WHERE Agencies.agency_id NOT IN (SELECT Clients.agency_id FROM Clients WHERE Clients.client_id NOT IN (SELECT Invoices.client_id FROM Invoices WHERE Invoices.invoice_id NOT IN (SELECT Payments.invoice_id FROM Payments WHERE Payments.payment_id NOT IN (SELECT Staff_in_Meetings.meeting_id FROM Staff_in_Meetings WHERE Staff_in_Meetings.staff_id NOT IN (SELECT Staff.staff_id FROM Staff WHERE Staff.agency_id = Agencies.agency_id)))))) 
SELECT Agencies.staff_id 
SELECT Invoices.meeting_id, COUNT(Invoice_id) AS Invoice_count 
SELECT Invoices.meeting_id, COUNT(InvoiceStatus) AS InvoiceCount 
SELECT Payments.meeting_id, Payments.invoice_id, Payments.payment_details 
SELECT Invoices.meeting_id, Invoices.invoice_status, Invoices.invoice_details 
SELECT Clients.meeting_id, COUNT(Meetings.meeting_id) AS num_invoices 
SELECT Clients.meeting_id, COUNT(Clients.meeting_id) AS num_invoices 
SELECT Clients.meeting_id, Clients.client_details, COUNT(Invoices.invoice_id) AS invoice_count 
SELECT Clients.meeting_id, Clients.client_details 
SELECT Clients.meeting_id 
SELECT Clients.meeting_id 
SELECT Invoices.meeting_id, InvoiceStatus.invoice_status, COUNT(InvoiceStatus.invoice_status) AS InvoiceCount 
SELECT Invoices.meeting_id, InvoiceStatuses.invoice_status, COUNT(InvoiceStatuses.invoice_status) AS InvoiceCount 
SELECT Invoices.meeting_id, COUNT(InvoiceStatuses.invoice_status) AS InvoiceStatusCount 
SELECT Invoices.meeting_id, Invoices.invoice_status 
SELECT Invoices.meeting_id, Clients.client_id, Clients.client_details, Agencies.agency_id, Agencies.agency_details, Invoices.invoice_status, Invoices.invoice_details FROM Invoices INNER JOIN Clients ON Invoices.client_id = Clients.client_id INNER JOIN Agencies ON Clients.agency_id = Agencies.agency_id WHERE Invoices.invoice_status = 'Paid' ORDER BY Invoices.invoice_status DESC; 
SELECT Invoices.meeting_id, Invoices.invoice_status, Invoices.invoice_details, Clients.client_id, Clients.client_details, Agencies.agency_id, Agencies.agency_details FROM Invoices INNER JOIN Clients ON Invoices.client_id = Clients.client_id INNER JOIN Agencies ON Clients.agency_id = Agencies.agency_id WHERE Invoices.invoice_status = 'Paid' AND Invoices.invoice_details LIKE '%meeting%' ORDER BY Invoices.invoice_id DESC; 
SELECT meeting_id, meeting_type, purpose_of_meeting, other_details FROM Meetings WHERE meeting_type = 'Consultation' OR meeting_type = 'Training' OR meeting_type = 'Workshop' OR meeting_type = 'Seminar' OR meeting_type = 'Conference' OR meeting_type = 'Lecture' OR meeting_type = 'Presentation' OR meeting_type = 'Workshop' OR meeting_type = 'Seminar' OR meeting_type = 'Conference' OR meeting_type = 'Lecture' OR meeting_type = 'Presentation' OR meeting_type = 'Workshop' OR meeting_type = 'Seminar' OR meeting_type = 'Conference' OR meeting_type = 'Lecture' OR meeting_type = 'Presentation' OR meeting_type = 'Workshop' OR meeting_type = 'Seminar' OR meeting_type = 'Conference' OR meeting_type = 'Lecture' OR meeting_type = 'Presentation' OR meeting_type = 'Workshop' OR meeting_type = 'Seminar' OR meeting_type = 'Conference' OR meeting_type = 'Lecture' OR meeting_type = 'Presentation' OR meeting_type = 'Workshop' OR meeting_type = 'Seminar' OR meeting_type = 'Conference' OR meeting_type = 'Lecture' OR meeting_type = 'Presentation' OR meeting_type = 'Workshop' OR meeting_type = 'Seminar' OR meeting_type = 'Conference' OR meeting_type = 'Lecture' OR meeting_type = 'Presentation' OR meeting_type = 'Workshop' OR meeting_type = 'Seminar' OR meeting_type = 'Conference' OR meeting_type = 'Lecture' OR meeting_type = 'Presentation' OR meeting_type = 'Workshop' OR meeting_type = 'Seminar' OR meeting_type = 'Conference' OR meeting_type = 'Lecture' OR meeting_type = 'Presentation' OR meeting_type = 'Workshop' OR meeting_type = 'Seminar' OR meeting_type = 'Conference' OR meeting_type = 'Lecture' OR meeting_type = 'Presentation' OR meeting_type = 'Workshop' OR meeting_type = 'Seminar' OR meeting_type = 'Conference' OR meeting_type = 'Lecture' OR meeting_type = 'Presentation' OR meeting_type = 'Workshop' OR meeting_type = 'Seminar' OR meeting_type = 'Conference' OR meeting_type = 'Lecture' OR meeting_type = 'Presentation' OR meeting_type = 'Workshop' OR meeting_type = 'Seminar' OR meeting_type = 'Conference' OR meeting_type = 'Lecture' OR meeting_type = 'Presentation' OR meeting_type = 'Workshop' OR meeting_type = 'Seminar' OR meeting_type = 'Conference' OR meeting_type = 'Lecture' OR meeting_type = 'Presentation' OR meeting_type = 'Workshop' OR meeting_type = 'Seminar' OR meeting_type = 'Conference' OR meeting_type = 'Lecture' OR meeting_type = 'Presentation' OR meeting_type = 'Workshop' OR meeting_type = 'Seminar' OR meeting_type = 'Conference' OR meeting_type = 'Lecture' OR meeting_type = 'Presentation' OR meeting_type = 'Workshop' OR meeting_type = 'Seminar' OR meeting_type = 'Conference' OR meeting_type = 'Lecture' OR meeting_type = 'Presentation' OR meeting_type = 'Workshop' OR meeting_type = 'Seminar' OR meeting_type = 'Conference' OR meeting_type = 'Lecture' OR meeting_type = 'Presentation' OR meeting_type = 'Workshop'
SELECT meeting_id, meeting_type, purpose_of_meeting, other_details FROM Meetings 
SELECT meeting_id, meeting_outcome, purpose_of_meeting FROM Meetings 
SELECT meeting_id, meeting_outcome, purpose_of_meeting FROM Meetings 
SELECT Payments.meeting_id, Payments.payment_details 
SELECT Payments.meeting_id, Payments.payment_details 
SELECT Payments.meeting_id, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment
SELECT Payments.meeting_id, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments.invoice_id, Payments.payment_details, Payments
SELECT Payments.meeting_id, Payments.payment_id, Payments.payment_details, Payments.invoice_id, Payments.client_id, Payments.agency_id, Payments.staff_id, Payments.sic_code, Payments.invoice_status, Payments.invoice_details, Payments.meeting_outcome, Payments.meeting_type, Payments.billable_yn, Payments.start_date_time, Payments.end_date_time, Payments.purpose_of_meeting, Payments.other_details, Payments.agency_details, Payments.staff_details, Payments.client_details FROM Payments INNER JOIN Invoices ON Payments.invoice_id = Invoices.invoice_id INNER JOIN Clients ON Invoices.client_id = Clients.client_id INNER JOIN Staff ON Payments.staff_id = Staff.staff_id INNER JOIN Agencies ON Staff.agency_id = Agencies.agency_id INNER JOIN Meetings ON Payments.meeting_id = Meetings.meeting_id WHERE Payments.payment_details LIKE '%How many payments do we have?%' ORDER BY Payments.payment_id ASC; 
SELECT Payments.meeting_id, Payments.payment_id, Payments.payment_details, Payments.invoice_id, Payments.client_id, Payments.staff_id, Payments.agency_id, Payments.sic_code, Payments.invoice_status, Payments.invoice_details, Payments.meeting_outcome, Payments.meeting_type, Payments.billable_yn, Payments.start_date_time, Payments.end_date_time, Payments.purpose_of_meeting, Payments.other_details, Payments.agency_details, Payments.staff_details, Payments.client_details FROM Payments INNER JOIN Invoices ON Payments.invoice_id = Invoices.invoice_id INNER JOIN Clients ON Invoices.client_id = Clients.client_id INNER JOIN Staff ON Payments.staff_id = Staff.staff_id INNER JOIN Agencies ON Staff.agency_id = Agencies.agency_id WHERE Payments.payment_details LIKE '%Count the number of payments.%' ORDER BY Payments.payment_id ASC; 
SELECT Payments.meeting_id, Payments.payment_id, Payments.payment_details, Invoices.invoice_id, Invoices.invoice_details FROM Payments, Invoices WHERE Payments.invoice_id = Invoices.invoice_id; 
SELECT Payments.meeting_id, Payments.invoice_id, Payments.payment_details 
SELECT Payments.meeting_id, Payments.invoice_id, Payments.invoice_status 
SELECT Invoices.meeting_id, InvoiceStatuses.invoice_status 
SELECT Payments.meeting_id, COUNT(Payments.payment_id) AS num_payments 
SELECT Payments.meeting_id, Payments.payment_id, Payments.payment_details, Payments.invoice_id, Payments.client_id, Payments.agency_id, Payments.staff_id, Payments.sic_code, Payments.invoice_status, Payments.invoice_details, Payments.meeting_outcome, Payments.meeting_type, Payments.billable_yn, Payments.start_date_time, Payments.end_date_time, Payments.purpose_of_meeting, Payments.other_details, Payments.agency_details, Payments.staff_details, Payments.client_details FROM Payments INNER JOIN Invoices ON Payments.invoice_id = Invoices.invoice_id INNER JOIN Clients ON Invoices.client_id = Clients.client_id INNER JOIN Agencies ON Clients.agency_id = Agencies.agency_id INNER JOIN Staff ON Payments.staff_id = Staff.staff_id INNER JOIN Meetings ON Payments.meeting_id = Meetings.meeting_id WHERE Payments.payment_id = Payments.payment_id AND Payments.invoice_id = Payments.invoice_id AND Payments.client_id = Payments.client_id AND Payments.agency_id = Payments.agency_id AND Payments.staff_id = Payments.staff_id AND Payments.sic_code = Payments.sic_code AND Payments.invoice_status = Payments.invoice_status AND Payments.invoice_details = Payments.invoice_details AND Payments.meeting_outcome = Payments.meeting_outcome AND Payments.meeting_type = Payments.meeting_type AND Payments.billable_yn = Payments.billable_yn AND Payments.start_date_time = Payments.start_date_time AND Payments.end_date_time = Payments.end_date_time AND Payments
SELECT Invoices.meeting_id, Invoices.invoice_status, Invoices.invoice_details 
SELECT Invoices.meeting_id, Invoices.invoice_status, Invoices.invoice_details 
SELECT staff_id FROM Staff 
SELECT staff_id FROM Staff WHERE agency_id = 1; 
SELECT Agencies.staff_id, COUNT(Staff.staff_id) FROM Agencies, Staff WHERE Agencies.agency_id = Staff.agency_id GROUP BY Agencies.agency_id; 
SELECT Agencies.staff_id, COUNT(Staff.staff_id) FROM Agencies, Staff WHERE Agencies.agency_id = Staff.agency_id GROUP BY Agencies.agency_id; 
SELECT Agencies.staff_id, Agencies.agency_details 
SELECT Agencies.staff_id, Agencies.agency_details 
SELECT meeting_id, meeting_outcome, COUNT(*) AS meeting_count FROM Meetings GROUP BY meeting_outcome ORDER BY meeting_count DESC; 
SELECT meeting_id, meeting_outcome, COUNT(*) AS meeting_count FROM Meetings GROUP BY meeting_outcome; 
SELECT Clients.meeting_id, COUNT(Clients.meeting_id) AS meeting_count 
SELECT meeting_id, client_id, COUNT(*) AS meeting_count FROM Meetings GROUP BY client_id ORDER BY client_id ASC; 
SELECT meeting_id, client_id, meeting_type, COUNT(*) FROM Meetings GROUP BY meeting_id, client_id, meeting_type; 
SELECT meeting_id, meeting_type, COUNT(*) AS meeting_count FROM Meetings GROUP BY meeting_type, meeting_id ORDER BY meeting_type, meeting_id; 
SELECT meeting_id, meeting_outcome, meeting_type, client_details FROM Meetings JOIN Clients ON Meetings.client_id = Clients.client_id; 
SELECT meeting_id, meeting_outcome, meeting_type, client_details 
SELECT meeting_id, COUNT(staff_id) FROM Staff_in_Meetings GROUP BY meeting_id; 
SELECT meeting_id, COUNT(staff_id) FROM Staff_in_Meetings GROUP BY meeting_id; 
SELECT staff_id, COUNT(*) FROM Staff_in_Meetings GROUP BY staff_id HAVING COUNT(*) > 0 ORDER BY COUNT(*) ASC LIMIT 1; 
SELECT staff_id FROM Staff WHERE staff_id IN (SELECT staff_id FROM Staff_in_Meetings GROUP BY staff_id HAVING COUNT(*) = (SELECT COUNT(*) FROM Staff_in_Meetings GROUP BY staff_id HAVING COUNT(*) = (SELECT COUNT(*) FROM Staff_in_Meetings GROUP BY staff_id HAVING COUNT(*) = (SELECT COUNT(*) FROM Staff_in_Meetings GROUP BY staff_id HAVING COUNT(*) = (SELECT COUNT(*) FROM Staff_in_Meetings GROUP BY staff_id HAVING COUNT(*) = (SELECT COUNT(*) FROM Staff_in_Meetings GROUP BY staff_id HAVING COUNT(*) = (SELECT COUNT(*) FROM Staff_in_Meetings GROUP BY staff_id HAVING COUNT(*) = (SELECT COUNT(*) FROM Staff_in_Meetings GROUP BY staff_id HAVING COUNT(*) = (SELECT COUNT(*) FROM Staff_in_Meetings GROUP BY staff_id HAVING COUNT(*) = (SELECT COUNT(*) FROM Staff_in_Meetings GROUP BY staff_id HAVING COUNT(*) = (SELECT COUNT(*) FROM Staff_in_Meetings GROUP BY staff_id HAVING COUNT(*) = (SELECT COUNT(*) FROM Staff_in_Meetings GROUP BY staff_id HAVING COUNT(*) = (SELECT COUNT(*) FROM Staff_in_Meetings GROUP BY staff_id HAVING COUNT(*) = (SELECT COUNT(*) FROM Staff_in_Meetings GROUP BY staff_id HAVING COUNT(*) = (SELECT COUNT
SELECT staff_id FROM Staff_in_Meetings WHERE meeting_id IN (SELECT meeting_id FROM Meetings WHERE billable_yn = 'Y' AND meeting_outcome = 'Successful' AND meeting_type = 'Client Meeting' AND start_date_time >= '2019-01-01' AND start_date_time <= '2019-12-31' AND end_date_time >= '2019-01-01' AND end_date_time <= '2019-12-31' AND purpose_of_meeting LIKE '%Client Meeting%' AND other_details LIKE '%Client Meeting%') GROUP BY staff_id HAVING COUNT(*) > 1; 
SELECT staff_id FROM Staff_in_Meetings 
SELECT staff_id FROM Staff WHERE staff_id NOT IN (SELECT staff_id FROM Staff_in_Meetings); 
SELECT staff_id FROM Staff WHERE staff_id NOT IN (SELECT staff_id FROM Staff_in_Meetings); 
SELECT Clients.meeting_id, Clients.client_id, Clients.client_details 
SELECT Clients.meeting_id, Clients.client_id, Clients.sic_code, Clients.client_details, Clients.agency_id, Clients.invoice_id, Clients.invoice_status, Clients.invoice_details, Clients.payment_id, Clients.payment_details, Clients.staff_id, Clients.staff_details, Clients.agency_details, Clients.meeting_id, Clients.meeting_outcome, Clients.meeting_type, Clients.billable_yn, Clients.start_date_time, Clients.end_date_time, Clients.purpose_of_meeting, Clients.other_details FROM Clients WHERE Clients.meeting_id IS NOT NULL OR Clients.invoice_id IS NOT NULL; 
SELECT staff_id, staff_details FROM Staff WHERE staff_id IN (SELECT staff_id FROM Staff_in_Meetings WHERE meeting_id IN (SELECT meeting_id FROM Meetings WHERE meeting_id IN (SELECT meeting_id FROM Meetings WHERE meeting_outcome LIKE '%s%'))) 
SELECT staff_id, staff_details FROM Staff WHERE staff_id IN (SELECT staff_id FROM Staff_in_Meetings WHERE meeting_id IN (SELECT meeting_id FROM Meetings WHERE billable_yn = 'Y' AND meeting_outcome = 'S' AND meeting_type = 'S' AND start_date_time >= '2019-01-01' AND end_date_time <= '2019-12-31' AND purpose_of_meeting LIKE '%S%') AND staff_id IN (SELECT staff_id FROM Staff WHERE staff_details LIKE '%S%')) AND staff_details LIKE '%S%'; 
SELECT Clients.meeting_id, Clients.sic_code, Agencies.agency_id FROM Clients INNER JOIN Meetings ON Clients.client_id = Meetings.client_id INNER JOIN Agencies ON Clients.agency_id = Agencies.agency_id WHERE Meetings.meeting_id = 1 AND Clients.client_id IS NOT NULL AND Clients.sic_code IS NOT NULL AND Agencies.agency_id IS NOT NULL; 
SELECT Clients.meeting_id, Clients.sic_code, Agencies.agency_id 
SELECT Meetings.meeting_id, Meetings.start_date_time, Meetings.end_date_time, Clients.client_details, Staff.staff_details 
SELECT Meetings.meeting_id, Meetings.start_date_time, Meetings.end_date_time, Clients.client_details, Staff.staff_details FROM Meetings INNER JOIN Clients ON Meetings.client_id = Clients.client_id INNER JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id INNER JOIN Staff ON Staff_in_Meetings.staff_id = Staff.staff_id WHERE Meetings.meeting_outcome = 'Successful' AND Meetings.billable_yn = 'Y' ORDER BY Meetings.meeting_id ASC; 
