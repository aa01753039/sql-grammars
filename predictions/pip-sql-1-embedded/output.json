[
  {
    "id": 0,
    "db_id": "soccer_3",
    "question": "How many clubs are there?",
    "answer": "SELECT COUNT(club.Club_ID ) FROM (SELECT DISTINCT club.Club_ID FROM (SELECT DISTINCT club.Club_ID , COUNT(player.Player_ID ), player.Name FROM (SELECT player.Name FROM (SELECT DISTINCT player.Club_ID , player.Country , player.Manufacturer FROM (SELECT DISTINCT Player_ID , Manufacturer , club.Sponsor"
  },
  {
    "id": 1,
    "db_id": "soccer_3",
    "question": "Count the number of clubs.",
    "answer": "SELECT COUNT(club.Club_ID ) FROM (SELECT club.Club_ID FROM (SELECT DISTINCT club.Name , COUNT(club.Club_ID ) AS num FROM (SELECT club.Name , COUNT(club.Player_ID ), SUM(club.Events_number ) FROM (SELECT club.Name , club.Captain FROM (SELECT club.Name , club.Sponsor , club.Manufacturer , club.Country ,"
  },
  {
    "id": 2,
    "db_id": "soccer_3",
    "question": "List the name of clubs in ascending alphabetical order.",
    "answer": "SELECT DISTINCT club.Name FROM (SELECT DISTINCT club.Name FROM (SELECT club.Club_ID FROM soccer_3.player AS T INNER JOIN (SELECT DISTINCT club.Name FROM soccer_3.club) AS S  ON Sponsor = 'LARGE VARCHAR' ORDER BY club.Name ) AS t ORDER BY club.Name LIMIT 1000000000000000"
  },
  {
    "id": 3,
    "db_id": "soccer_3",
    "question": "What are the names of clubs, ordered alphabetically?",
    "answer": "SELECT DISTINCT club.Name FROM (SELECT DISTINCT club.Name FROM (SELECT club.Club_ID , COUNT(club.Player_ID ) AS num FROM (SELECT player.Player_ID FROM (SELECT Player_ID FROM (SELECT DISTINCT player.Country , player.Captain FROM (SELECT DISTINCT player.Name FROM (SELECT DISTINCT player.Country , player.Club_ID FROM (SELECT club.Name , club.Sp"
  },
  {
    "id": 4,
    "db_id": "soccer_3",
    "question": "What are the managers and captains of clubs?",
    "answer": "SELECT DISTINCT Manager FROM (SELECT DISTINCT Club_ID FROM (SELECT DISTINCT club.Name , club.Captain FROM (SELECT DISTINCT club.Name , club.Player_ID FROM (SELECT DISTINCT Name , Club_ID FROM (SELECT DISTINCT Player_ID FROM (SELECT club.Name , club.Captain FROM (SELECT DISTINCT club.Name , club.Player_ID FROM (SELECT DISTINCT Name ,"
  },
  {
    "id": 5,
    "db_id": "soccer_3",
    "question": "Return the managers and captains of all clubs.",
    "answer": "SELECT DISTINCT Manager FROM (SELECT DISTINCT Captain FROM (SELECT DISTINCT club.Name , club.Captain FROM (SELECT DISTINCT club.Name , club.Player_ID FROM (SELECT DISTINCT Club_ID , player.Name , club.Sponsor FROM (SELECT DISTINCT club.Name , club.Captain FROM (SELECT DISTINCT club.Name , club.Player_ID FROM (SELECT DIST"
  },
  {
    "id": 6,
    "db_id": "soccer_3",
    "question": "List the name of clubs whose manufacturer is not \"Nike\"",
    "answer": "SELECT DISTINCT club.Name FROM (SELECT DISTINCT club.Name FROM (SELECT club.Manufacturer FROM (SELECT DISTINCT Manufacturer FROM (SELECT club.Club_ID , COUNT(club.Name ) AS Nominations_number FROM (SELECT DISTINCT Manufacturer FROM (SELECT DISTINCT club.Manufacturer FROM (SELECT DISTINCT Manufacturer FROM (SELECT DISTINCT club.Name FROM"
  },
  {
    "id": 7,
    "db_id": "soccer_3",
    "question": "What are the names of clubs who do not have the manufacturer Nike?",
    "answer": "SELECT DISTINCT club.Name FROM (SELECT DISTINCT club.Name FROM (SELECT Name , Manufacturer FROM (SELECT Name , Manufacturer FROM (SELECT Manufacturer FROM (SELECT Name , COUNT(Name ) AS Events_number FROM (SELECT Name , Manufacturer FROM (SELECT Name , Manufacturer FROM (SELECT Name , COUNT(Name ) AS Events_number FROM (SELECT DISTINCT Name FROM (SELECT D"
  },
  {
    "id": 8,
    "db_id": "soccer_3",
    "question": "What are the names of players in ascending order of wins count?",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT Name FROM (SELECT Player_ID , MAX(Events_number ) AS jm FROM (SELECT COUNT(Player_ID ), SUM(Wins_count ), Club_ID FROM (SELECT club.Name , MAX(club.Earnings ) AS mk FROM (SELECT club.Club_ID , club.Name , SUM(Events_number ) AS N FROM (SELECT player.Country , club.Captain ,"
  },
  {
    "id": 9,
    "db_id": "soccer_3",
    "question": "Return the names of players in order of count of wins, ascending.",
    "answer": "SELECT DISTINCT player.Name FROM (SELECT DISTINCT club.Player_ID FROM (SELECT Player_ID FROM (SELECT COUNT(player.Wins_count ) AS win FROM (SELECT Player_ID , COUNT(player.Wins_count ) AS wins FROM (SELECT COUNT(player.Player_ID ), player.Player_ID FROM (SELECT Player_ID , COUNT(Player_ID ) AS wins FROM ("
  },
  {
    "id": 10,
    "db_id": "soccer_3",
    "question": "What is the name of the player with the highest earnings?",
    "answer": "SELECT DISTINCT Player_ID FROM (SELECT DISTINCT Player_ID FROM (SELECT MAX(Wins_count ) AS x FROM (SELECT Club_ID , SUM(Events_number ) FROM (SELECT Earnings FROM (SELECT Name , SUM(Wins_count ) AS sum FROM (SELECT Name , Events_number FROM (SELECT Name , MAX(Wins_count ) AS pw FROM (SELECT DISTINCT Events_number FROM (SELECT Name"
  },
  {
    "id": 11,
    "db_id": "soccer_3",
    "question": "Return the name of the player who earns the most money.",
    "answer": "SELECT DISTINCT Name FROM (SELECT MAX(Wins_count ) AS A , Name FROM (SELECT Club_ID , SUM(Wins_count ) AS Total FROM (SELECT DISTINCT Player_ID , Earnings FROM (SELECT Player_ID , COUNT(Player_ID ), club.Club_ID , SUM(Wins_count ) FROM (SELECT player.Name , club.Sponsor , Club_ID FROM (SELECT DISTINCT"
  },
  {
    "id": 12,
    "db_id": "soccer_3",
    "question": "What are the distinct countries of players with earnings higher than 1200000?",
    "answer": "SELECT DISTINCT player.Country FROM (SELECT DISTINCT COUNT(club.Club_ID ) AS sum , SUM(club.Wins_count ) AS avg , club.Earnings FROM soccer_3.player AS p INNER JOIN (SELECT DISTINCT club.Club_ID , SUM(Wins_count ) AS sum , COUNT(club.Club_ID ) AS avg FROM s"
  },
  {
    "id": 13,
    "db_id": "soccer_3",
    "question": "From which countries are players who make more than 1200000 from?",
    "answer": "SELECT DISTINCT Country FROM (SELECT DISTINCT COUNT(Club_ID ), SUM(Wins_count ) AS sum FROM (SELECT DISTINCT Club_ID , SUM(Wins_count ) AS total FROM (SELECT DISTINCT Club_ID , SUM(Wins_count ) FROM (SELECT SUM(Earnings ) AS Wins , COUNT(Club_ID ) FROM (SELECT COUNT(Club_ID ), Earnings FROM ("
  },
  {
    "id": 14,
    "db_id": "soccer_3",
    "question": "What is the country of the player with the highest earnings among players that have more than 2 win counts?",
    "answer": "SELECT DISTINCT player.Country FROM (SELECT DISTINCT COUNT(Earnings ) AS sum , Club_ID FROM (SELECT DISTINCT Earnings , COUNT(Club_ID ), SUM(Wins_count ) AS Total FROM (SELECT Player_ID , SUM(Wins_count ) AS num , club.Name FROM (SELECT DISTINCT Earnings , COUNT(club.Club_ID ) FROM (SELECT DISTINCT club"
  },
  {
    "id": 15,
    "db_id": "soccer_3",
    "question": "Of players who have more than 2 wins, what is the country of the player who makes the most?",
    "answer": "SELECT DISTINCT player.Country FROM (SELECT DISTINCT Country FROM soccer_3.player GROUP BY Country ORDER BY Manager , Wins_count LIMIT 1) AS T WHERE Manager = 'Pablo Pizzorno' GROUP BY Country ORDER BY Manager , Wins_count LIMIT 100000528730498673000000000000"
  },
  {
    "id": 16,
    "db_id": "soccer_3",
    "question": "Show names of players and names of clubs they are in.",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT Player_ID , Club_ID FROM (SELECT DISTINCT club.Club_ID FROM (SELECT DISTINCT player.Club_ID , player.Name FROM (SELECT DISTINCT player.Player_ID , club.Name FROM (SELECT DISTINCT Player_ID , club.Manufacturer FROM (SELECT DISTINCT Manufacturer , club.Name FROM (SELECT DISTINCT club"
  },
  {
    "id": 17,
    "db_id": "soccer_3",
    "question": "What are the names of players and the corresponding clubs that they are in?",
    "answer": "SELECT DISTINCT player.Name FROM (SELECT DISTINCT player.Name FROM (SELECT DISTINCT club.Name FROM (SELECT DISTINCT club.Club_ID FROM (SELECT DISTINCT club.Country , club.Sponsor FROM (SELECT DISTINCT club.Manufacturer , club.Sponsor FROM (SELECT DISTINCT player.Name FROM (SELECT DISTINCT club.Club_ID FROM (SELECT D"
  },
  {
    "id": 18,
    "db_id": "soccer_3",
    "question": "Show names of clubs that have players with more than 2 win counts.",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT Club_ID FROM (SELECT COUNT(Player_ID ) AS N FROM (SELECT DISTINCT Club_ID , COUNT(Wins_count ) AS MIN FROM (SELECT DISTINCT Club_ID , Player_ID FROM (SELECT DISTINCT Name FROM (SELECT COUNT(Wins_count ) AS N FROM (SELECT DISTINCT Player_ID FROM (SELECT DIST"
  },
  {
    "id": 19,
    "db_id": "soccer_3",
    "question": "What are the names of clubs that have players who have won more than twice?",
    "answer": "SELECT DISTINCT club.Name FROM (SELECT DISTINCT player.Name FROM (SELECT Club_ID , SUM(Wins_count ) AS total FROM (SELECT DISTINCT Earnings , COUNT(*) FROM (SELECT player.Club_ID , player.Player_ID FROM (SELECT Player_ID , SUM(Events_number ) AS sum FROM (SELECT club.Club_ID , Events_number FROM (SELECT DISTINCT Club_ID , Player"
  },
  {
    "id": 20,
    "db_id": "soccer_3",
    "question": "Show names of players from the club with manager \"Sam Allardyce\".",
    "answer": "SELECT DISTINCT player.Name FROM (SELECT DISTINCT club.Manager FROM (SELECT DISTINCT player.Name FROM (SELECT DISTINCT club.Captain FROM (SELECT DISTINCT club.Club_ID FROM (SELECT DISTINCT club.Player_ID FROM (SELECT DISTINCT Manufacturer FROM (SELECT DISTINCT club.Captain FROM (SELECT DISTINCT club.Manager FROM (SELECT DISTINCT"
  },
  {
    "id": 21,
    "db_id": "soccer_3",
    "question": "What are the names of players from the club managed by Sam Allardyce?",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT Name FROM (SELECT Manufacturer , club.Name FROM soccer_3.player AS T INNER JOIN (SELECT Club_ID , MIN(Captain ) AS P1 , MAX(Captain ) AS P2 FROM (SELECT DISTINCT Manufacturer , Club_ID FROM soccer_3.club) AS C WHERE Manager = 'Sam Allardyce') AS A  ON Club_ID"
  },
  {
    "id": 22,
    "db_id": "soccer_3",
    "question": "Show names of clubs in descending order of average earnings of players belonging.",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT club.Name , AVG(Player_ID ) AS avg_player_id FROM (SELECT DISTINCT Club_ID , Earnings , Player_ID FROM (SELECT DISTINCT player.Club_ID , Player_ID , Events_number FROM soccer_3.player INNER JOIN (SELECT club.Name , COUNT(player.Club_ID ) AS num FROM (SELECT DIST"
  },
  {
    "id": 23,
    "db_id": "soccer_3",
    "question": "What are the names of clubs, ordered descending by the average earnings of players within each?",
    "answer": "SELECT DISTINCT club.Name FROM (SELECT club.Name , AVG(Player_ID ) AS avg_Plaier_ID FROM (SELECT DISTINCT player.Name , Earnings FROM (SELECT Player_ID , SUM(Wins_count ) AS sum FROM (SELECT player.Country , COUNT(player.Player_ID ) AS wms FROM (SELECT DISTINCT club.Club_ID , player.Name , player"
  },
  {
    "id": 24,
    "db_id": "soccer_3",
    "question": "Show different manufacturers and the number of clubs they are associated with.",
    "answer": "SELECT DISTINCT Manufacturer , COUNT(Club_ID ) FROM (SELECT DISTINCT MIN(Manufacturer ), COUNT(Club_ID ) AS num FROM (SELECT DISTINCT club.Name , club.Captain FROM (SELECT DISTINCT club.Name , club.Club_ID FROM (SELECT DISTINCT player.Name , club.Sponsor , COUNT(club.Club_ID ) AS num FROM (SELECT"
  },
  {
    "id": 25,
    "db_id": "soccer_3",
    "question": "How many clubs use each manufacturer?",
    "answer": "SELECT DISTINCT COUNT(Club_ID ), Manufacturer FROM (SELECT DISTINCT COUNT(Club_ID ) AS num , Manufacturer FROM (SELECT DISTINCT club.Name FROM (SELECT DISTINCT club.Name FROM (SELECT club.Name , COUNT(club.Name ), Manufacturer FROM (SELECT DISTINCT club.Name , Manufacturer FROM (SELECT DISTINCT club.Name , Manufacturer FROM (SELECT D"
  },
  {
    "id": 26,
    "db_id": "soccer_3",
    "question": "Please show the most common manufacturer of clubs.",
    "answer": "SELECT DISTINCT MIN(Manufacturer ) FROM (SELECT Manufacturer FROM soccer_3.player GROUP BY Manufacturer ORDER BY Country , Name LIMIT 1) AS T ORDER BY Country , Name LIMIT 200000000000000000000000000000000000000000000000000"
  },
  {
    "id": 27,
    "db_id": "soccer_3",
    "question": "Which manufacturer is most common among clubs?",
    "answer": "SELECT DISTINCT MIN(Manufacturer ) FROM (SELECT Manufacturer FROM (SELECT club.Name , COUNT(club.Club_ID ) AS num FROM (SELECT Manufacturer , COUNT(*) AS num FROM (SELECT club.Name , club.Manufacturer FROM (SELECT DISTINCT Name FROM (SELECT club.Name , club.Manufacturer FROM (SELECT Manufacturer , COUNT(Club_ID ) AS num FROM (SELECT club.Name ,"
  },
  {
    "id": 28,
    "db_id": "soccer_3",
    "question": "List the manufacturers that are associated with more than one club.",
    "answer": "SELECT DISTINCT Manufacturer FROM (SELECT Manufacturer FROM (SELECT * FROM (SELECT Club_ID , COUNT(club.Name ) AS num FROM (SELECT DISTINCT Manufacturer FROM (SELECT club.Name , COUNT(club.Earnings ) AS num FROM (SELECT Name FROM (SELECT Name , COUNT(club.Club_ID ) AS id FROM (SELECT Name FROM (SELECT club.Name , Club_ID FROM "
  },
  {
    "id": 29,
    "db_id": "soccer_3",
    "question": "Which manufacturers work for more than 1 club?",
    "answer": "SELECT DISTINCT Manufacturer FROM (SELECT Manufacturer FROM (SELECT DISTINCT Name , COUNT(club.Name ) AS num FROM (SELECT DISTINCT club.Name FROM (SELECT club.Manufacturer , club.Club_ID FROM (SELECT DISTINCT club.Name , club.Country , club.Captain FROM (SELECT DISTINCT club.Name , club.Captain FROM (SELECT DISTINCT Manufacturer , club.Club_"
  },
  {
    "id": 30,
    "db_id": "soccer_3",
    "question": "List the country that have more than one player.",
    "answer": "SELECT DISTINCT player.Country FROM (SELECT DISTINCT Country FROM (SELECT Player_ID FROM soccer_3.player WHERE Earnings > 100 ORDER BY Events_number LIMIT 1)) AS T INNER JOIN soccer_3.club AS c  ON club.Club_ID = 1 GROUP BY player.Country ORDER BY Country LIMIT 21479982565000"
  },
  {
    "id": 31,
    "db_id": "soccer_3",
    "question": "Which countries have produced more than one player?",
    "answer": "SELECT DISTINCT Country FROM (SELECT DISTINCT COUNT(player.Country ) FROM (SELECT DISTINCT Country FROM (SELECT DISTINCT Earnings , Club_ID , Player_ID FROM (SELECT DISTINCT Manufacturer , Player_ID FROM (SELECT DISTINCT Player_ID , COUNT(Player_ID ) AS num FROM (SELECT DISTINCT Country , COUNT(Player_ID ) AS num FROM (SELECT DISTINCT Earnings"
  },
  {
    "id": 32,
    "db_id": "soccer_3",
    "question": "List the name of clubs that do not have players.",
    "answer": "SELECT DISTINCT club.Name FROM (SELECT DISTINCT club.Name FROM (SELECT player.Club_ID FROM (SELECT DISTINCT club.Club_ID FROM (SELECT club.Name , COUNT(player.Player_ID ) AS num FROM (SELECT player.Name , COUNT(club.Player_ID ) AS num FROM (SELECT club.Name , club.Captain , COUNT(club.Player_ID ) AS num FROM (SELECT D"
  },
  {
    "id": 33,
    "db_id": "soccer_3",
    "question": "What are the names of clubs that do not have any players?",
    "answer": "SELECT DISTINCT club.Name FROM (SELECT DISTINCT club.Name FROM (SELECT player.Club_ID FROM (SELECT DISTINCT club.Club_ID FROM (SELECT Club_ID FROM (SELECT Player_ID FROM (SELECT player.Country , COUNT(player.Player_ID ) AS num FROM (SELECT player.Name , player.Captain , player.Sponsor FROM (SELECT player.Name , player.Capt"
  },
  {
    "id": 34,
    "db_id": "soccer_3",
    "question": "Show the country of players with earnings more than 1400000 and players with earnings less than 1100000.",
    "answer": "SELECT DISTINCT player.Country FROM (SELECT DISTINCT club.Club_ID FROM (SELECT club.Name , SUM(Wins_count ) AS total FROM (SELECT Player_ID , SUM(Wins_count ) AS Total FROM (SELECT Earnings , player.Captain FROM (SELECT Player_ID , Earnings FROM (SELECT player.Name , SUM(Wins_count ) AS TOTAL FROM (SELECT DISTINCT"
  },
  {
    "id": 35,
    "db_id": "soccer_3",
    "question": "Which country has produced both players with earnings over 1400000 and players with earnings below 1100000?",
    "answer": "SELECT DISTINCT COUNT(player.Country ) FROM (SELECT DISTINCT player.Country FROM (SELECT DISTINCT club.Name , SUM(Earnings ) AS total FROM (SELECT DISTINCT Club_ID , Earnings FROM (SELECT MAX(Wins_count ), Club_ID , Player_ID FROM (SELECT DISTINCT player.Country , player.Earnings , COUNT(club.Name ) FROM (SELECT DISTINCT"
  },
  {
    "id": 36,
    "db_id": "soccer_3",
    "question": "What is the number of distinct countries of all players?",
    "answer": "SELECT COUNT(Name ) FROM (SELECT DISTINCT Country FROM (SELECT DISTINCT Country , COUNT(Club_ID ) AS num FROM (SELECT Club_ID , COUNT(Player_ID ) FROM (SELECT Player_ID FROM (SELECT Player_ID FROM (SELECT DISTINCT Player_ID FROM (SELECT COUNT(Club_ID ) FROM (SELECT DISTINCT Country FROM (SELECT DISTINCT Country FROM (SELECT DISTINCT Earnings FROM"
  },
  {
    "id": 37,
    "db_id": "soccer_3",
    "question": "How many different countries are players from?",
    "answer": "SELECT COUNT(Player_ID ) FROM (SELECT DISTINCT Country , Player_ID FROM (SELECT DISTINCT Country , Player_ID FROM (SELECT Player_ID , Earnings FROM (SELECT DISTINCT Name FROM (SELECT player.Name , COUNT(player.Country ), player.Wins_count FROM (SELECT DISTINCT Player_ID , club.Club_ID , Earnings FROM (SELECT DISTINCT club.Name"
  },
  {
    "id": 38,
    "db_id": "soccer_3",
    "question": "Show the earnings of players from country \"Australia\" or \"Zimbabwe\".",
    "answer": "SELECT DISTINCT SUM(Earnings ) FROM (SELECT Player_ID , COUNT(Player_ID ) AS Country FROM (SELECT Player_ID , Earnings FROM (SELECT Player_ID , COUNT(Club_ID ), Country FROM (SELECT DISTINCT Club_ID , Country FROM (SELECT DISTINCT Country , Player_ID FROM (SELECT DISTINCT Player_ID , Club_ID FROM (SELECT"
  },
  {
    "id": 39,
    "db_id": "soccer_3",
    "question": "What are the earnings of players from either of the countries of Australia or Zimbabwe?",
    "answer": "SELECT DISTINCT SUM(Earnings ) FROM (SELECT * FROM (SELECT Country , COUNT(Player_ID ), SUM(Wins_count ) AS sum FROM (SELECT Country , COUNT(Club_ID ) FROM (SELECT DISTINCT Name , club.Name FROM (SELECT DISTINCT Manufacturer , Player_ID FROM (SELECT DISTINCT Country , Player_ID FROM (SELECT DISTINCT Name , Club_ID FROM (SELECT DISTINCT"
  },
  {
    "id": 40,
    "db_id": "e_commerce",
    "question": "List the id, first name and last name of the customers who both have placed more than 2 orders and have bought at least 3 items.",
    "answer": "SELECT DISTINCT customer_first_name , customer_middle_initial FROM (SELECT DISTINCT town_city FROM (SELECT DISTINCT customer_id , COUNT(customer_last_name ) AS num FROM (SELECT SUM(order_item_status_code ) AS total , order_id FROM (SELECT DISTINCT product_id , SUM(order_item_status_code )"
  },
  {
    "id": 41,
    "db_id": "e_commerce",
    "question": "What are the ids, first and last names of the customers who have ordered more than twice and have bought at least 3 items?",
    "answer": "SELECT DISTINCT order_item_id FROM (SELECT DISTINCT order_item_id FROM (SELECT DISTINCT order_item_id FROM (SELECT COUNT(order_id ) AS cnt1 , SUM(order_item_status_code ) AS total FROM (SELECT DISTINCT product_id FROM (SELECT MIN(order_item_id ) AS x FROM (SELECT DISTINCT customer_first_name"
  },
  {
    "id": 42,
    "db_id": "e_commerce",
    "question": "For the orders with any produts, how many products does each orders contain ? List the order id, status and the number.",
    "answer": "SELECT SUM(invoice_number ), SUM(county ) FROM (SELECT COUNT(product_id ), SUM(order_item_status_code ) AS cnt , county , product_id FROM (SELECT DISTINCT town_city , order_item_status_code FROM (SELECT product_id , COUNT(*) AS cnt FROM (SELECT COUNT(product_id ) FROM ("
  },
  {
    "id": 43,
    "db_id": "e_commerce",
    "question": "For every order, how many products does it contain, and what are the orders' statuses and ids?",
    "answer": "SELECT COUNT(Products.product_id ) FROM (SELECT DISTINCT Products.product_id , order_item_status_code FROM (SELECT DISTINCT product_id FROM (SELECT Products.product_id FROM (SELECT COUNT(Products.product_id ) AS num FROM (SELECT DISTINCT Products.product_id FROM (SELECT COUNT(Products.customer_id ) AS num FROM (SELECT"
  },
  {
    "id": 44,
    "db_id": "e_commerce",
    "question": "List the dates of the orders which were placed at the earliest time or have more than 1 items.",
    "answer": "SELECT order_item_status_code FROM (SELECT DISTINCT order_item_status_code , COUNT(order_item_id ) AS total FROM (SELECT DISTINCT date_order_placed , SUM(order_item_id ), MAX(date_order_placed ) AS mt1 FROM (SELECT * FROM (SELECT DISTINCT invoice_number , payment_method_code FROM (SELECT DISTINCT payment_method_code"
  },
  {
    "id": 45,
    "db_id": "e_commerce",
    "question": "What are the dates of the earliest order and the dates of all orders with more than 1 item?",
    "answer": "SELECT MAX(date_order_placed ) FROM (SELECT MIN(date_order_placed ) AS day FROM (SELECT DISTINCT invoice_number , date_order_placed FROM (SELECT order_item_id FROM (SELECT SUM(order_item_status_code ), order_item_id FROM (SELECT product_id , COUNT(invoice_date ) FROM (SELECT DISTINCT invoice_number ,"
  },
  {
    "id": 46,
    "db_id": "e_commerce",
    "question": "Which customers did not make any orders? List the first name, middle initial and last name.",
    "answer": "SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_name FROM (SELECT DISTINCT customer_id FROM (SELECT DISTINCT email_address , login_name , login_password FROM (SELECT product_description , COUNT(order_item_id ) AS num FROM (SELECT product_name , COUNT(order_item_id ) AS num FROM (SELECT product_price , COUNT(order_item_id ) AS"
  },
  {
    "id": 47,
    "db_id": "e_commerce",
    "question": "WHat are the first and last names, and middle initials of all customers who did not make any orders?",
    "answer": "SELECT DISTINCT customer_first_name , customer_middle_initial FROM (SELECT DISTINCT customer_first_name , customer_middle_initial FROM (SELECT DISTINCT shipment_id FROM (SELECT DISTINCT order_item_id FROM (SELECT * FROM (SELECT DISTINCT customer_id FROM (SELECT DISTINCT Customers.customer_id , Customer_Payment"
  },
  {
    "id": 48,
    "db_id": "e_commerce",
    "question": "What are the id, name, price and color of the products which have not been ordered for at least twice?",
    "answer": "SELECT product_id FROM (SELECT DISTINCT product_name FROM (SELECT DISTINCT product_price , product_color FROM (SELECT DISTINCT product_id FROM (SELECT SUM(order_item_status_code ) AS num FROM (SELECT COUNT(customer_id ) AS num FROM (SELECT product_id FROM (SELECT COUNT(order_id ) FROM (SELECT DISTINCT order_item_id FROM (SELECT DISTINCT order_"
  },
  {
    "id": 49,
    "db_id": "e_commerce",
    "question": "What are the ids , names , prices , and colors of all products that have been listed in less than two orders ?",
    "answer": "SELECT DISTINCT product_name FROM (SELECT product_id FROM (SELECT DISTINCT town_city FROM (SELECT town_city FROM (SELECT COUNT(customer_first_name ) AS n , COUNT(customer_last_name ) AS x FROM (SELECT DISTINCT customer_id FROM (SELECT COUNT(order_item_id ) FROM (SELECT DISTINCT order_id FROM (SELECT DISTINCT town"
  },
  {
    "id": 50,
    "db_id": "e_commerce",
    "question": "Which orders have at least 2 products on it? List the order id and date.",
    "answer": "SELECT DISTINCT order_item_id FROM (SELECT DISTINCT order_id , MAX(date_order_placed ) AS num FROM (SELECT COUNT(order_item_id ) AS num , SUM(order_item_status_code ) AS num FROM (SELECT product_id , county , country FROM (SELECT DISTINCT product_id , county , country FROM (SELECT product_name , product_color , product_size , COUNT"
  },
  {
    "id": 51,
    "db_id": "e_commerce",
    "question": "What are the ids and dates of the orders with at least two products?",
    "answer": "SELECT DISTINCT product_id FROM (SELECT MAX(order_item_id ), order_item_status_code , date_order_placed FROM (SELECT DISTINCT town_city , order_item_status_code FROM (SELECT DISTINCT town_city , order_status_code FROM (SELECT MAX(order_item_id ), order_item_status_code , date_order_placed FROM (SELECT"
  },
  {
    "id": 52,
    "db_id": "e_commerce",
    "question": "Which product are listed in orders most frequently? List the id, product name and price.",
    "answer": "SELECT DISTINCT product_name , product_price FROM (SELECT DISTINCT town_city FROM (SELECT DISTINCT town_city FROM (SELECT DISTINCT COUNT(order_id ) AS total FROM (SELECT order_item_id FROM (SELECT product_id FROM (SELECT product_name , order_item_status_code  FROM (SELECT product_id FROM (SELECT order_item_status_code , COUNT(order_item_"
  },
  {
    "id": 53,
    "db_id": "e_commerce",
    "question": "What are the ids, names, and prices of all products that are ordered most frequently?",
    "answer": "SELECT DISTINCT product_name , SUM(product_price ) FROM (SELECT * FROM (SELECT town_city , COUNT(order_id ) AS num FROM (SELECT product_id FROM (SELECT product_id , COUNT(order_id ) AS sum FROM (SELECT order_item_id , COUNT(order_id ), date_order_placed FROM (SELECT product_id , SUM(order_item_status_code ) AS total FROM (SELECT order"
  },
  {
    "id": 54,
    "db_id": "e_commerce",
    "question": "Which order have the least sum of the product prices. List the order id and sum.",
    "answer": "SELECT DISTINCT order_item_id FROM (SELECT MAX(order_item_id ) AS j , SUM(product_price ) AS s FROM (SELECT DISTINCT order_item_id , SUM(product_price ) AS S FROM (SELECT COUNT(order_item_id ), SUM(product_price ) FROM (SELECT DISTINCT product_id , product_name FROM (SELECT DISTINCT product_id , product_name FROM (SELECT DIST"
  },
  {
    "id": 55,
    "db_id": "e_commerce",
    "question": "What is the order that total cost the least , and how much is the total cost ?",
    "answer": "SELECT SUM(Products.product_price ) FROM (SELECT DISTINCT SUM(Products.product_price ), Products.order_id FROM (SELECT Products.product_name , COUNT(Order_Items.invoice_number ) AS num FROM (SELECT order_item_id , SUM(Products.product_price ) AS sum FROM (SELECT DISTINCT product_id , SUM(Products.order"
  },
  {
    "id": 56,
    "db_id": "e_commerce",
    "question": "What is the most popular payment method?",
    "answer": "SELECT COUNT(payment_method_code ) FROM (SELECT DISTINCT payment_method_code FROM (SELECT product_name , COUNT(customer_first_name ), COUNT(customer_middle_initial ) AS num FROM (SELECT DISTINCT product_name FROM (SELECT product_id , COUNT(customer_first_name ), COUNT(customer_middle_initial ) AS num FROM (SELECT DISTINCT customer_first_name , customer_middle_initial FROM"
  },
  {
    "id": 57,
    "db_id": "e_commerce",
    "question": "What is the payment method that most customers use?",
    "answer": "SELECT DISTINCT payment_method_code FROM (SELECT DISTINCT payment_method_code FROM (SELECT product_name , COUNT(customer_first_name ), COUNT(customer_middle_initial ) AS num FROM (SELECT DISTINCT product_name FROM (SELECT product_id , SUM(product_price ) FROM (SELECT DISTINCT product_name , customer_first_name , customer_last_name FROM (SELECT DISTINCT product_name ,"
  },
  {
    "id": 58,
    "db_id": "e_commerce",
    "question": "How many number of products does each gender of customers buy? List the gender and the number",
    "answer": "SELECT SUM(town_city ), COUNT(town_city ), COUNT(gender_code ) FROM (SELECT DISTINCT town_city , COUNT(town_city ) AS num FROM (SELECT DISTINCT gender_code , COUNT(customer_id ) FROM (SELECT DISTINCT town_city , COUNT(customer_first_name ) AS str_num , customer_middle_initial , customer_last_"
  },
  {
    "id": 59,
    "db_id": "e_commerce",
    "question": "How many products does each gender buy?",
    "answer": "SELECT COUNT(parent_product_id ), SUM(invoice_number ) FROM (SELECT DISTINCT product_id , COUNT(gender_code ), COUNT(customer_first_name ), COUNT(customer_middle_initial ), COUNT(customer_last_name ) AS total FROM (SELECT gender_code , customer_first_name , customer_middle_initial , customer_last_name , order_id FROM (SELECT D"
  },
  {
    "id": 60,
    "db_id": "e_commerce",
    "question": "How many orders has each gender of customers placed?",
    "answer": "SELECT COUNT(order_item_id ) FROM (SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_name , email_address , login_name , login_password , phone_number , address_line_1 FROM (SELECT DISTINCT gender_code , customer_first_name , customer_middle_initial , customer_last_name , email_address , login_name , login_password , phone_number , address"
  },
  {
    "id": 61,
    "db_id": "e_commerce",
    "question": "How many orders has each gender placed?",
    "answer": "SELECT COUNT(town_city ) FROM (SELECT DISTINCT town_city , gender_code FROM (SELECT DISTINCT town_city , gender_code FROM (SELECT town_city , COUNT(order_id ) AS num FROM (SELECT DISTINCT town_city , product_id FROM (SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_name , email_address"
  },
  {
    "id": 62,
    "db_id": "e_commerce",
    "question": "List the customers' first name, middle initial, last name and payment methods.",
    "answer": "SELECT DISTINCT town_city , town_city FROM (SELECT DISTINCT town_city , town_city FROM (SELECT DISTINCT town_city , town_city , login_name , login_password FROM (SELECT DISTINCT town_city , town_city , login_name , login_password FROM (SELECT DISTINCT town_city , t"
  },
  {
    "id": 63,
    "db_id": "e_commerce",
    "question": "What are the first names, middle initials, last names, and payment methods of all customers?",
    "answer": "SELECT DISTINCT town_city FROM (SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_name FROM (SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_name FROM (SELECT DISTINCT login_name , login_password , phone_number , email_address , product_description FROM (SELECT DISTINCT town"
  },
  {
    "id": 64,
    "db_id": "e_commerce",
    "question": "List the invoices' status, date and the date of shipment.",
    "answer": "SELECT town_city FROM (SELECT DISTINCT town_city , date_order_placed , order_item_status_code FROM (SELECT product_id FROM (SELECT product_name FROM (SELECT DISTINCT town_city , town_city FROM (SELECT town_city , COUNT(town_city ) AS n FROM (SELECT town_city , COUNT(town_city ) AS n"
  },
  {
    "id": 65,
    "db_id": "e_commerce",
    "question": "What are the statuses, dates, and shipment dates for all invoices?",
    "answer": "SELECT DISTINCT town_city , town_city FROM (SELECT DISTINCT town_city , order_item_status_code FROM (SELECT town_city , order_item_status_code , order_id FROM (SELECT town_city , product_id FROM (SELECT order_item_id FROM (SELECT town_city , order_item_status_code FROM"
  },
  {
    "id": 66,
    "db_id": "e_commerce",
    "question": "List the names of the products being shipped and the corresponding shipment date.",
    "answer": "SELECT product_name FROM (SELECT DISTINCT product_name , order_item_status_code FROM (SELECT product_id , order_item_status_code FROM (SELECT order_item_id , order_item_status_code FROM (SELECT * FROM (SELECT DISTINCT product_id , order_item_status_code FROM (SELECT order_item_status_code FROM (SELECT order_item_id , order_item_status_code"
  },
  {
    "id": 67,
    "db_id": "e_commerce",
    "question": "What are the names of the products tht have been shipped, and on what days were they shipped?",
    "answer": "SELECT product_name FROM (SELECT DISTINCT product_name , order_item_status_code FROM (SELECT product_id FROM (SELECT DISTINCT product_id FROM (SELECT product_description FROM (SELECT DISTINCT product_price , order_status_code FROM (SELECT DISTINCT customer_first_name FROM (SELECT DISTINCT login_name FROM (SELECT DISTINCT product_description FROM (SELECT DIST"
  },
  {
    "id": 68,
    "db_id": "e_commerce",
    "question": "What is the status code of the items being ordered and shipped and its corresponding shipment tracking number?",
    "answer": "SELECT DISTINCT order_item_status_code FROM (SELECT DISTINCT town_city , SUM(shipment_tracking_number ) AS num FROM (SELECT order_id FROM (SELECT product_id , SUM(order_item_status_code ) AS num FROM (SELECT product_id , COUNT(town_city ) AS count FROM (SELECT DISTINCT town_city FROM (SELECT DISTINCT town_"
  },
  {
    "id": 69,
    "db_id": "e_commerce",
    "question": "What is the status code of the items have been ordered and shipped, and also what are their shipment tracking numbers?",
    "answer": "SELECT DISTINCT order_item_status_code FROM (SELECT DISTINCT town_city , order_id FROM (SELECT DISTINCT town_city , order_id FROM (SELECT product_id FROM (SELECT customer_first_name , customer_last_name , order_item_status_code FROM (SELECT DISTINCT order_item_status_code"
  },
  {
    "id": 70,
    "db_id": "e_commerce",
    "question": "What is the product name and the color of the ordered items which have been shipped?",
    "answer": "SELECT DISTINCT product_name , product_color FROM (SELECT DISTINCT town_city , town_city , country , order_item_status_code FROM (SELECT product_name , product_color FROM (SELECT product_id , town_city , county , country , order_item_status_code FROM (SELECT DISTINCT product_id FROM (SELECT DISTINCT COUNT(product_id ) AS total FROM (SELECT DISTINCT"
  },
  {
    "id": 71,
    "db_id": "e_commerce",
    "question": "What are the names and colors of all products that have been shipped?",
    "answer": "SELECT product_name , product_color FROM (SELECT DISTINCT product_name FROM (SELECT DISTINCT product_name , product_color FROM (SELECT DISTINCT product_name , product_price , product_color FROM (SELECT product_id FROM (SELECT product_name , product_price , product_color FROM (SELECT DISTINCT product_name , product_price FROM (SELECT DISTINCT product_name , product_price FROM ("
  },
  {
    "id": 72,
    "db_id": "e_commerce",
    "question": "List all the distinct product names, price and descriptions which are bought by female customers.",
    "answer": "SELECT DISTINCT town_city FROM (SELECT DISTINCT town_city , SUM(product_price ) AS total FROM (SELECT DISTINCT product_id FROM (SELECT DISTINCT product_name FROM (SELECT town_city , COUNT(product_id ) FROM (SELECT DISTINCT product_name FROM (SELECT product_id , COUNT(town_city ) AS num FROM (SELECT DIST"
  },
  {
    "id": 73,
    "db_id": "e_commerce",
    "question": "What are the different names, prices, and descriptions for all products bought by female customers?",
    "answer": "SELECT DISTINCT product_name FROM (SELECT DISTINCT product_name , SUM(product_price ) AS sum_price , SUM(product_color ) AS sum_color , SUM(product_size ) AS sum_size , SUM(product_description ) AS total FROM (SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_name , email_address , login_name , login_password FROM (SELECT DISTINCT"
  },
  {
    "id": 74,
    "db_id": "e_commerce",
    "question": "What are invoices status of all the orders which have not been shipped?",
    "answer": "SELECT COUNT(invoice_number ) FROM (SELECT DISTINCT order_item_status_code , order_id FROM (SELECT DISTINCT product_id , order_id FROM (SELECT DISTINCT customer_id , order_item_status_code , order_id FROM (SELECT DISTINCT product_id FROM (SELECT DISTINCT customer_id , order_item_status_code FROM (SELECT DISTINCT order_item_status_code ,"
  },
  {
    "id": 75,
    "db_id": "e_commerce",
    "question": "What are the invoice statuses for all orderes that have not been shipped out yet?",
    "answer": "SELECT DISTINCT invoice_status_code FROM (SELECT COUNT(order_id ) AS num , SUM(invoice_date ) AS total FROM (SELECT order_item_id FROM (SELECT product_id FROM (SELECT product_name FROM (SELECT MAX(order_item_id ) AS num FROM (SELECT product_name FROM (SELECT product_name FROM (SELECT MAX(order_item_id ) AS num FROM (SELECT MAX(order_item"
  },
  {
    "id": 76,
    "db_id": "e_commerce",
    "question": "What are the total cost of all the orders ? List the order id , date , and total cost .",
    "answer": "SELECT SUM(town_city ), SUM(order_item_id ), SUM(order_item_status_code ) FROM (SELECT DISTINCT town_city , date_order_placed , order_item_id FROM (SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_name  FROM (SELECT town_city , town_city , SUM(order_"
  },
  {
    "id": 77,
    "db_id": "e_commerce",
    "question": "For each order, what is its id, date, and total amount paid?",
    "answer": "SELECT DISTINCT order_item_id , SUM(order_item_status_code ) AS total , SUM(order_item_id ) FROM (SELECT DISTINCT product_id FROM (SELECT order_item_id , SUM(order_item_status_code ) AS total FROM (SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_name , order_item_id , order_item_status_code FROM"
  },
  {
    "id": 78,
    "db_id": "e_commerce",
    "question": "How many customers have placed any order?",
    "answer": "SELECT COUNT(customer_id ) FROM (SELECT DISTINCT customer_id FROM (SELECT DISTINCT customer_id FROM (SELECT product_id , SUM(order_item_status_code ), SUM(order_item_id ), COUNT(*) AS total FROM (SELECT DISTINCT customer_id FROM (SELECT DISTINCT product_id , SUM(order_item_status_code ) AS total FROM (SELECT DISTINCT product_id ,"
  },
  {
    "id": 79,
    "db_id": "e_commerce",
    "question": "How many different customers have ordered things?",
    "answer": "SELECT COUNT(customer_id ) FROM (SELECT DISTINCT customer_id FROM (SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_name FROM (SELECT product_name , parent_product_id , order_status_code FROM (SELECT DISTINCT town_city , town_city FROM (SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_name FROM"
  },
  {
    "id": 80,
    "db_id": "e_commerce",
    "question": "How many item states are there in the orders?",
    "answer": "SELECT COUNT(invoice_status_code ) FROM (SELECT DISTINCT order_item_status_code , SUM(order_item_status_code ) AS total FROM (SELECT DISTINCT product_id , order_item_status_code FROM (SELECT DISTINCT product_id , invoice_status_code , order_item_status_code FROM (SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_"
  },
  {
    "id": 81,
    "db_id": "e_commerce",
    "question": "How many different item status codes are there listed in ordered items?",
    "answer": "SELECT COUNT(order_item_status_code ) FROM (SELECT DISTINCT town_city , town_city FROM (SELECT DISTINCT town_city FROM (SELECT product_id , order_item_status_code  FROM (SELECT DISTINCT town_city , town_city FROM (SELECT DISTINCT town_city FROM (SELECT DISTINCT town_city FROM"
  },
  {
    "id": 82,
    "db_id": "e_commerce",
    "question": "How many different payment methods are there?",
    "answer": "SELECT COUNT(payment_method_code ) FROM (SELECT DISTINCT payment_method_code FROM (SELECT product_name , SUM(payment_method_code ) AS num FROM (SELECT product_description , SUM(payment_method_code ) AS num FROM (SELECT product_name , product_price , product_color FROM (SELECT product_name , product_price , product_color , login_name , login_password FROM (SELECT DISTINCT product"
  },
  {
    "id": 83,
    "db_id": "e_commerce",
    "question": "How many different payment methods can customers choose from?",
    "answer": "SELECT COUNT(payment_method_code ) FROM (SELECT DISTINCT payment_method_code FROM (SELECT product_name , SUM(payment_method_code ) AS num FROM (SELECT product_description , SUM(payment_method_code ) AS num FROM (SELECT product_name , product_price , product_color FROM (SELECT product_name , product_price , product_color , login_name , login_password FROM (SELECT DISTINCT product"
  },
  {
    "id": 84,
    "db_id": "e_commerce",
    "question": "What are the login names and passwords of the customers whose phone number have the prefix '+12'?",
    "answer": "SELECT DISTINCT login_name , login_password FROM (SELECT DISTINCT MIN(phone_number ) AS num FROM (SELECT DISTINCT phone_number FROM (SELECT phone_number , date_order_placed FROM (SELECT MAX(phone_number ), date_order_placed FROM (SELECT DISTINCT order_id FROM (SELECT town_city , COUNT(customer_id ) AS num FROM (SELECT MIN("
  },
  {
    "id": 85,
    "db_id": "e_commerce",
    "question": "What are the usernames and passwords of all customers whose phone number starts with '+12'?",
    "answer": "SELECT DISTINCT login_name FROM (SELECT DISTINCT login_name , email_address FROM (SELECT DISTINCT town_city , town_city , address_line_1 , address_line_1 , phone_number FROM (SELECT DISTINCT phone_number , phone_number FROM (SELECT DISTINCT customer_first_name , customer_last_name FROM (SELECT DISTINCT town"
  },
  {
    "id": 86,
    "db_id": "e_commerce",
    "question": "What are the product sizes of the products whose name has the substring 'Dell'?",
    "answer": "SELECT DISTINCT product_name FROM (SELECT DISTINCT product_name FROM (SELECT DISTINCT product_name FROM (SELECT DISTINCT product_name FROM (SELECT DISTINCT town_city , SUM(product_color ) AS num FROM (SELECT DISTINCT town_city , SUM(product_size ), product_description FROM (SELECT DISTINCT town_city , product_color , product_description"
  },
  {
    "id": 87,
    "db_id": "e_commerce",
    "question": "What are the sizes of all products whose name includes the word 'Dell'?",
    "answer": "SELECT product_name FROM (SELECT DISTINCT town_city FROM (SELECT DISTINCT town_city FROM (SELECT product_id FROM (SELECT DISTINCT product_name , product_color , product_size FROM (SELECT town_city , product_size FROM (SELECT DISTINCT product_name FROM (SELECT DISTINCT town_city FROM (SELECT DISTINCT town_city FROM (SELECT D"
  },
  {
    "id": 88,
    "db_id": "e_commerce",
    "question": "What are the product price and the product size of the products whose price is above average?",
    "answer": "SELECT DISTINCT SUM(product_price ) FROM (SELECT product_price , product_size FROM (SELECT MAX(product_price ), product_size FROM (SELECT product_id , COUNT(Products.product_name ) AS num FROM (SELECT * FROM (SELECT product_name , SUM(Products.product_price ) AS sum FROM (SELECT product_id , COUNT(Products.product_name ) AS num FROM (SELECT product_name"
  },
  {
    "id": 89,
    "db_id": "e_commerce",
    "question": "What are the prices and sizes of all products whose price is above the mean?",
    "answer": "SELECT DISTINCT product_price FROM (SELECT DISTINCT product_price , COUNT(product_id ) AS sum FROM (SELECT SUM(product_price ) AS total FROM (SELECT product_id , COUNT(product_id ) AS sum FROM (SELECT * FROM (SELECT SUM(product_price ), SUM(order_item_status_code ) AS strftime_places FROM (SELECT DISTINCT product_id FROM (SELECT DISTINCT product_name"
  },
  {
    "id": 90,
    "db_id": "e_commerce",
    "question": "How many kinds of products have not been sold?",
    "answer": "SELECT COUNT(order_item_id ) FROM (SELECT DISTINCT product_id FROM (SELECT product_id FROM (SELECT product_name , product_price FROM (SELECT product_name FROM (SELECT DISTINCT product_color , product_size FROM (SELECT DISTINCT product_color , product_size FROM (SELECT DISTINCT product_size FROM (SELECT DISTINCT product_color , product_size FROM (SELECT D"
  },
  {
    "id": 91,
    "db_id": "e_commerce",
    "question": "What is the number of products that have not been ordered yet?",
    "answer": "SELECT COUNT(customer_id ) FROM (SELECT DISTINCT product_id FROM (SELECT DISTINCT product_id FROM (SELECT product_id FROM (SELECT product_id FROM (SELECT customer_first_name , customer_middle_initial , customer_last_name FROM (SELECT login_name , login_password FROM (SELECT login_name , login_password FROM (SELECT customer_first_name , customer_middle_initial , customer_"
  },
  {
    "id": 92,
    "db_id": "e_commerce",
    "question": "How many customers do not have any payment method?",
    "answer": "SELECT COUNT(customer_id ) FROM (SELECT DISTINCT customer_id FROM (SELECT DISTINCT product_id , order_item_status_code FROM (SELECT product_id FROM (SELECT DISTINCT product_id FROM (SELECT DISTINCT product_name FROM (SELECT product_price , SUM(payment_method_code ) FROM (SELECT DISTINCT product_name , product_color , product_size FROM (SELECT DIST"
  },
  {
    "id": 93,
    "db_id": "e_commerce",
    "question": "How many customers do not have a listed payment method?",
    "answer": "SELECT COUNT(customer_id ) FROM (SELECT DISTINCT customer_id FROM (SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_name , login_name , login_password , phone_number FROM (SELECT product_name , product_price , product_color , product_size FROM (SELECT DISTINCT town_city , town_city , town_city , town_city"
  },
  {
    "id": 94,
    "db_id": "e_commerce",
    "question": "What are all the order status and all the dates of orders?",
    "answer": "SELECT DISTINCT town_city , town_city FROM (SELECT DISTINCT COUNT(town_city ), town_city FROM (SELECT customer_id , COUNT(customer_first_name ), COUNT(customer_middle_initial ) AS num FROM (SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_name FROM "
  },
  {
    "id": 95,
    "db_id": "e_commerce",
    "question": "What are the status codes and dates placed for all of the orders?",
    "answer": "SELECT DISTINCT order_item_status_code , date_order_placed FROM (SELECT DISTINCT product_id FROM (SELECT DISTINCT product_id FROM (SELECT DISTINCT product_name FROM (SELECT DISTINCT product_description FROM (SELECT DISTINCT product_price , SUM(product_price ) AS total FROM (SELECT product_id FROM (SELECT DISTINCT product_name FROM (SELECT DISTINCT product_description FROM ("
  },
  {
    "id": 96,
    "db_id": "e_commerce",
    "question": "List the address, town and county information of the customers who live in the USA.",
    "answer": "SELECT DISTINCT town_city , town_city , COUNT(town_city ) FROM (SELECT DISTINCT town_city , town_city FROM (SELECT DISTINCT town_city FROM (SELECT address_line_1 , town_city FROM (SELECT town_city , county FROM (SELECT DISTINCT country FROM (SELECT address_line_1 , town_city FROM ("
  },
  {
    "id": 97,
    "db_id": "e_commerce",
    "question": "What are the addresses, towns, and county information for all customers who live in the United States?",
    "answer": "SELECT DISTINCT town_city , address_line_1 FROM (SELECT DISTINCT town_city , address_line_1 FROM (SELECT DISTINCT customer_id FROM (SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_name FROM (SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_name FROM (SELECT DISTINCT phone_number FROM (SELECT D"
  },
  {
    "id": 98,
    "db_id": "e_commerce",
    "question": "List all the pairs of buyer first names and product names.",
    "answer": "SELECT DISTINCT town_city FROM (SELECT DISTINCT town_city FROM (SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_name FROM (SELECT DISTINCT customer_id FROM (SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_name FROM (SELECT DISTINCT town_c"
  },
  {
    "id": 99,
    "db_id": "e_commerce",
    "question": "What are the first names of all buyers and what products did they buy? List them in pairs.",
    "answer": "SELECT DISTINCT town_city FROM (SELECT DISTINCT town_city , SUM(order_item_status_code ) AS num , product_id FROM (SELECT DISTINCT town_city FROM (SELECT DISTINCT customer_first_name , customer_last_name FROM (SELECT town_city , town_city FROM (SELECT DISTINCT tow"
  },
  {
    "id": 100,
    "db_id": "e_commerce",
    "question": "How many items are shipped?",
    "answer": "SELECT COUNT(Products.product_id ) FROM (SELECT Products.product_id FROM (SELECT DISTINCT product_name , product_price FROM (SELECT DISTINCT product_name FROM (SELECT product_name , product_price FROM (SELECT * FROM (SELECT product_id FROM (SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_name , order_id FROM (SELECT DISTINCT customer_first"
  },
  {
    "id": 101,
    "db_id": "e_commerce",
    "question": "How many products have been shipped?",
    "answer": "SELECT COUNT(Products.product_name ) FROM (SELECT DISTINCT product_name FROM (SELECT Products.product_name , COUNT(Products.product_price ) AS num FROM (SELECT DISTINCT product_name , SUM(product_price ) AS sum FROM (SELECT DISTINCT Products.product_price FROM (SELECT product_id , COUNT(product_price ) AS num FROM (SELECT Products.product"
  },
  {
    "id": 102,
    "db_id": "e_commerce",
    "question": "What is the product average price?",
    "answer": "SELECT AVG(product_price ) FROM (SELECT DISTINCT product_name FROM (SELECT product_name FROM (SELECT DISTINCT product_name FROM (SELECT COUNT(Products.parent_product_id ) AS num FROM (SELECT DISTINCT Products.product_id FROM (SELECT DISTINCT Order_Items.order_item_id FROM (SELECT product_id FROM (SELECT DISTINCT Order_Items.order_item_id"
  },
  {
    "id": 103,
    "db_id": "e_commerce",
    "question": "How much do the products cost on average?",
    "answer": "SELECT SUM(Products.product_price ) AS total FROM (SELECT DISTINCT SUM(Products.product_price ) AS total FROM (SELECT Products.product_name , COUNT(*) AS num FROM (SELECT product_id FROM (SELECT MAX(Products.product_price ), SUM(Products.product_price ) AS num FROM (SELECT DISTINCT Products.product_name , COUNT(Products.product_name ) AS num FROM"
  },
  {
    "id": 104,
    "db_id": "e_commerce",
    "question": "What is the average price of the products being ordered?",
    "answer": "SELECT SUM(Products.product_price ) AS avg FROM (SELECT AVG(Products.product_price ) AS sum , COUNT(Products.product_id ) FROM (SELECT Products.product_name , product_id FROM (SELECT DISTINCT product_name FROM (SELECT DISTINCT product_name FROM (SELECT DISTINCT product_name FROM (SELECT DISTINCT product_name FROM "
  },
  {
    "id": 105,
    "db_id": "e_commerce",
    "question": "What is the price of all products being ordered on average?",
    "answer": "SELECT SUM(Products.product_price ) AS sum FROM (SELECT SUM(Products.product_price ) AS total FROM (SELECT DISTINCT town_city , town_city , SUM(town_city ) AS sum FROM (SELECT town_city FROM (SELECT COUNT(town_city ), MIN(town_city ) FROM (SELECT DISTINCT tow"
  },
  {
    "id": 106,
    "db_id": "e_commerce",
    "question": "What are the email address, town and county of the customers who are of the least common gender?",
    "answer": "SELECT DISTINCT customer_first_name , customer_middle_initial FROM (SELECT DISTINCT email_address , customer_first_name , customer_last_name FROM (SELECT DISTINCT customer_id , COUNT(customer_id ) AS total FROM (SELECT DISTINCT customer_id FROM (SELECT DISTINCT product_id , gender_code  FROM (SELECT DISTINCT product_name FROM (SELECT DISTINCT product_color , product_"
  },
  {
    "id": 107,
    "db_id": "e_commerce",
    "question": "What are the email addresses, cities, and counties listed for all cusomters who are from the gender that orders less often?",
    "answer": "SELECT DISTINCT customer_first_name FROM (SELECT DISTINCT town_city FROM (SELECT COUNT(customer_id ) AS total FROM (SELECT DISTINCT customer_id FROM (SELECT order_item_id , customer_first_name , customer_middle_initial FROM (SELECT DISTINCT town_city , customer_first_name , customer_middle_"
  },
  {
    "id": 108,
    "db_id": "e_commerce",
    "question": "List the order date of the orders who are placed by customers with at least 2 payment methods.",
    "answer": "SELECT DISTINCT order_item_status_code FROM (SELECT DISTINCT COUNT(invoice_number ), invoice_date FROM (SELECT SUM(order_item_status_code ) AS num , invoice_date FROM (SELECT COUNT(customer_first_name ), COUNT(customer_last_name ), COUNT(product_id ), COUNT(order_item_status_code ) AS sum FROM (SELECT DISTINCT customer_first_name , customer_"
  },
  {
    "id": 109,
    "db_id": "e_commerce",
    "question": "What is the date of all orders that have been placed by customers with at least 2 payment methods?",
    "answer": "SELECT MAX(date_order_placed ) FROM (SELECT SUM(date_order_placed ), COUNT(order_id ) AS total FROM (SELECT DISTINCT order_id , payment_method_code FROM (SELECT COUNT(customer_first_name ), COUNT(customer_last_name ), SUM(payment_method_code ) AS total FROM (SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_"
  },
  {
    "id": 110,
    "db_id": "e_commerce",
    "question": "What is the most uncommon order status?",
    "answer": "SELECT SUM(invoice_status_code ) FROM (SELECT COUNT(order_status_code ) AS num FROM (SELECT DISTINCT invoice_status_code FROM (SELECT COUNT(order_id ) AS num FROM (SELECT product_id FROM (SELECT SUM(order_item_status_code ), SUM(order_id ), COUNT(order_item_id ) FROM (SELECT order_id , country , country FROM (SELECT DISTINCT order_item_"
  },
  {
    "id": 111,
    "db_id": "e_commerce",
    "question": "What is the least common order status?",
    "answer": "SELECT SUM(order_item_status_code ) FROM (SELECT DISTINCT MAX(order_item_status_code ) AS sum FROM (SELECT DISTINCT product_id FROM (SELECT COUNT(Products.product_id ) AS total , Products.customer_id FROM (SELECT DISTINCT Customers.customer_first_name , Customers.customer_middle_initial , Customers.customer_last_name , SUM(Order_Items.order_"
  },
  {
    "id": 112,
    "db_id": "e_commerce",
    "question": "For all the products sold for more than 3 times, list their id and description.",
    "answer": "SELECT product_name , product_description FROM (SELECT DISTINCT product_id , product_description FROM (SELECT product_id , SUM(order_item_status_code ) AS total FROM (SELECT SUM(order_item_status_code ), COUNT(*) AS num FROM (SELECT DISTINCT product_id , order_item_status_code FROM (SELECT DISTINCT product_id , order_item_status_code FROM (SELECT DISTINCT product_"
  },
  {
    "id": 113,
    "db_id": "e_commerce",
    "question": "For all products sold more than 3 times, what are their ids and descriptions?",
    "answer": "SELECT product_id , product_name FROM (SELECT DISTINCT product_id FROM (SELECT DISTINCT product_id FROM (SELECT COUNT(order_item_id ) AS cnt FROM (SELECT COUNT(order_item_id ) AS o FROM (SELECT order_item_id , SUM(parent_product_id ) AS tot FROM (SELECT COUNT(order_item_id ), SUM(parent_product_id"
  },
  {
    "id": 114,
    "db_id": "e_commerce",
    "question": "List the invoice dates and ids of the invoices causing at least 2 shipments.",
    "answer": "SELECT DISTINCT invoice_date , order_item_id FROM (SELECT * FROM (SELECT MAX(order_item_status_code ), COUNT(order_item_id ) AS num FROM (SELECT SUM(order_item_status_code ), COUNT(order_item_id ) AS num FROM (SELECT COUNT(customer_id ), COUNT(order_item_id ), order_item_status_code FROM (SELECT MAX(order_item_status"
  },
  {
    "id": 115,
    "db_id": "e_commerce",
    "question": "What are the dates and ids of the invoices that are related to at least 2 shipments?",
    "answer": "SELECT DISTINCT invoice_date , order_item_id FROM (SELECT MIN(invoice_date ) AS date , SUM(order_item_status_code ) FROM (SELECT * FROM (SELECT COUNT(customer_id ), MAX(order_status_code ) AS num FROM (SELECT SUM(order_item_status_code ) AS total , order_id FROM (SELECT DISTINCT order_item_id , COUNT(order_"
  },
  {
    "id": 116,
    "db_id": "e_commerce",
    "question": "what are all shipment tracking numbers and shipment dates?",
    "answer": "SELECT DISTINCT order_item_id FROM (SELECT DISTINCT product_id , date_order_placed FROM (SELECT DISTINCT order_item_id FROM (SELECT DISTINCT product_id FROM (SELECT product_name FROM (SELECT SUM(product_price ) AS sum FROM (SELECT DISTINCT product_id FROM (SELECT DISTINCT customer_first_name , customer_middle_initial , customer_last_name FROM ("
  },
  {
    "id": 117,
    "db_id": "e_commerce",
    "question": "What are the tracking numbers and dates for all shipments listed?",
    "answer": "SELECT DISTINCT order_item_id FROM (SELECT product_id , order_item_status_code , date_order_placed FROM (SELECT order_id , date_order_placed FROM (SELECT product_id , customer_first_name , customer_middle_initial , customer_last_name , order_item_status_code , date_order_placed FROM (SELECT DISTINCT product_id"
  },
  {
    "id": 118,
    "db_id": "e_commerce",
    "question": "What are the color, description and size of the products priced below the maximum price.",
    "answer": "SELECT product_name FROM (SELECT DISTINCT product_color , product_size FROM (SELECT DISTINCT product_price FROM (SELECT MAX(product_price ) AS price FROM (SELECT DISTINCT product_id FROM (SELECT DISTINCT product_id , product_price FROM (SELECT DISTINCT product_price FROM (SELECT DISTINCT product_color , product_size FROM (SELECT DISTINCT product_price FROM (SELECT DISTINCT product_price FROM"
  },
  {
    "id": 119,
    "db_id": "e_commerce",
    "question": "What are the colors , descriptions , and sizes for all products that are not at the maximum price ?",
    "answer": "SELECT product_description FROM (SELECT DISTINCT product_name , product_color FROM (SELECT DISTINCT product_price , product_size FROM (SELECT DISTINCT product_price , product_size , product_color FROM (SELECT DISTINCT product_color , product_size FROM (SELECT DISTINCT product_name FROM (SELECT DISTINCT product_price , product_color FROM (SELECT DISTINCT product_price , product_size FROM ("
  },
  {
    "id": 120,
    "db_id": "bbc_channels",
    "question": "Return the names of directors who are older than the average age.",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title , AVG(Age ) AS avg FROM (SELECT DISTINCT Title , Age FROM (SELECT Title , AVG(Title ) AS avg FROM (SELECT Title , Program_ID , AVG(Title ) AS Avg FROM (SELECT DISTINCT Title , Program"
  },
  {
    "id": 121,
    "db_id": "bbc_channels",
    "question": "Find the the name of the oldest director.",
    "answer": "SELECT DISTINCT Title FROM (SELECT MAX(Title ) AS x FROM (SELECT DISTINCT Title , Title FROM (SELECT * FROM (SELECT DISTINCT Title , MIN(Title ) FROM (SELECT Title , MAX(Title ) FROM (SELECT DISTINCT Title , Title FROM (SELECT DIST"
  },
  {
    "id": 122,
    "db_id": "bbc_channels",
    "question": "How many channels have the word 'bbc' in their internet link?",
    "answer": "SELECT COUNT(Title ) FROM bbc_channels.director AS T INNER JOIN bbc_channels.director_admin AS T  ON Title = Title GROUP BY Title ORDER BY Title LIMIT 100000000000000000000000000000000000"
  },
  {
    "id": 123,
    "db_id": "bbc_channels",
    "question": "How many different digital terrestrial channels are there?",
    "answer": "SELECT COUNT(Title ), Title FROM (SELECT DISTINCT Channel_ID FROM (SELECT Title FROM (SELECT DISTINCT Digital_terrestrial_channel , Title FROM (SELECT Title FROM (SELECT DISTINCT Internet FROM (SELECT Title FROM (SELECT Title FROM (SELECT DISTINCT Program_ID  FROM (SELECT DISTINCT program.Channel_"
  },
  {
    "id": 124,
    "db_id": "bbc_channels",
    "question": "List all program titles in the order of starting year. List the most recent one first.",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title , MAX(Title ) AS lng FROM (SELECT Title , MAX(Title ) AS lng FROM (SELECT DISTINCT Title FROM bbc_channels.program ORDER BY Program_ID LIMIT 1)) ORDER BY Title LIMIT 1) AS S ORDER BY Title LIMIT 1000"
  },
  {
    "id": 125,
    "db_id": "bbc_channels",
    "question": "Which director is in charge of the most programs?",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title , COUNT(Title ) AS Total FROM (SELECT Title , COUNT(Title ) AS Cnt_From FROM (SELECT Title FROM (SELECT COUNT(Title ), Title FROM (SELECT DISTINCT Title , Channel_ID FROM (SELECT DISTINCT Title , Channel_ID FROM (SELECT Tit"
  },
  {
    "id": 126,
    "db_id": "bbc_channels",
    "question": "Find the name and age of the director who is in charge of the most programs?",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM (SELECT COUNT(Title ), MAX(Age ) AS num FROM (SELECT DISTINCT Director_ID , Channel_ID , SUM(Title ), SUM(Start_Year ), AVG(Title ) AS min_startyear FROM (SELECT DISTINCT Title  FROM (SELECT COUNT(Director_ID ), MAX("
  },
  {
    "id": 127,
    "db_id": "bbc_channels",
    "question": "Return the title of the program that began most recently.",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM bbc_channels.program ORDER BY Start_Year LIMIT 1) AS T ) AS a GROUP BY Title ORDER BY Title LIMIT 1346907827945489716251961855409808269751344946"
  },
  {
    "id": 128,
    "db_id": "bbc_channels",
    "question": "Find the name and website link of the channels that have more than one program.",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title , COUNT(Title ) AS num FROM (SELECT Title , COUNT(Title ) AS num FROM (SELECT Title , Channel_ID , Title FROM (SELECT Title , Channel_ID , COUNT(Title ) AS num FROM (SELECT Title , Channel_ID , Title FROM ("
  },
  {
    "id": 129,
    "db_id": "bbc_channels",
    "question": "Find the number of programs for each channel. Return the name of each channel as well.",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM bbc_channels.director WHERE Name = 'BBC RADIO' GROUP BY Title ORDER BY Title LIMIT 1) AS T WHERE Title = 'bbc radio' GROUP BY Title , Title ORDER BY Title LIMIT 2009806453141762000"
  },
  {
    "id": 130,
    "db_id": "bbc_channels",
    "question": "Find the number of channels that do not run any program.",
    "answer": "SELECT COUNT(channel.Channel_ID ) FROM (SELECT DISTINCT Title FROM (SELECT DISTINCT Channel_ID , COUNT(Title ) AS num FROM (SELECT DISTINCT Title FROM (SELECT DISTINCT Program_ID , Digital_terrestrial_channel , Internet FROM (SELECT Title FROM (SELECT DISTINCT Program_ID , Channel_ID FROM (SELECT DISTINCT Digital_terrest"
  },
  {
    "id": 131,
    "db_id": "bbc_channels",
    "question": "What is the name of the director who is in the \"Dracula\" program?",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM bbc_channels.director AS T INNER JOIN bbc_channels.program AS T  ON Title = Title LIMIT 1) AS T ORDER BY Title LIMIT 200000103801491555670548116644"
  },
  {
    "id": 132,
    "db_id": "bbc_channels",
    "question": "Find the name and internet web of the channel that is directed by the most directors.",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM bbc_channels.director AS T INNER JOIN bbc_channels.program AS P  ON Title = Program_ID ORDER BY Director_ID LIMIT 1) AS A WHERE Title > (SELECT MAX(Title ) FROM bbc_channels.director AS T INNER JOIN bbc_channels.program AS"
  },
  {
    "id": 133,
    "db_id": "bbc_channels",
    "question": "Find the name of the directors whose age is between 30 and 60.",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title , MIN(Title ) AS m FROM (SELECT Title , SUM(Age ) AS R1 FROM (SELECT Title , MAX(Age ) AS R2 FROM (SELECT Title , MAX(Start_Year ), COUNT(Title ) AS Tx FROM (SELECT"
  },
  {
    "id": 134,
    "db_id": "bbc_channels",
    "question": "give me the name of channels that have both a director younger than 40 and a director older than 60.",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title , SUM(Title ) AS RRQM2 FROM (SELECT Title FROM (SELECT Title , SUM(Title ) AS RRQM1 FROM (SELECT Title FROM (SELECT Title ,"
  },
  {
    "id": 135,
    "db_id": "bbc_channels",
    "question": "Find the id and name of the channel that is not directed by Hank Baskett.",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM bbc_channels.director WHERE Name = 'Hank Baskett' LIMIT 1) AS T ORDER BY Title LIMIT 1000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 136,
    "db_id": "tv_shows",
    "question": "How many radios are there?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT Transmitter FROM tv_shows.radio ORDER BY ID LIMIT 1) AS T WHERE Station_name = '2FM' GROUP BY Transmitter ORDER BY RnaG_MHz LIMIT 30"
  },
  {
    "id": 137,
    "db_id": "tv_shows",
    "question": "List the transmitters of radios in ascending order of erp kw .",
    "answer": "SELECT DISTINCT Transmitter FROM (SELECT Transmitter FROM tv_shows.radio ORDER BY ERP_kW LIMIT 1) AS T ORDER BY Transmitter LIMIT 1"
  },
  {
    "id": 138,
    "db_id": "tv_shows",
    "question": "What are the names and original air dates of tv shows?",
    "answer": "SELECT DISTINCT Transmitter , Original_Airdate FROM tv_shows.tv_show WHERE Transmitter = '2FM' ORDER BY Transmitter LIMIT 10000000"
  },
  {
    "id": 139,
    "db_id": "tv_shows",
    "question": "List the station names of city channels whose affiliation is not \"ABC\".",
    "answer": "SELECT Transmitter FROM tv_shows.city_channel WHERE Is_online = 'false' ORDER BY City_channel_ID LIMIT 10000000036045907"
  },
  {
    "id": 140,
    "db_id": "tv_shows",
    "question": "Show the transmitters of radios whose ERP is bigger than 150 or smaller than 30.",
    "answer": "SELECT DISTINCT Transmitter FROM (SELECT Transmitter FROM tv_shows.radio AS T INNER JOIN tv_shows.city_channel AS C  ON T"
  },
  {
    "id": 141,
    "db_id": "tv_shows",
    "question": "What is the transmitter of the radio with the largest ERP_kW?",
    "answer": "SELECT DISTINCT Transmitter FROM tv_shows.radio ORDER BY RnaG_MHz LIMIT 1000000000000000000000"
  },
  {
    "id": 142,
    "db_id": "tv_shows",
    "question": "What is the average ERP across all radios?",
    "answer": "SELECT AVG(Transmitter ) FROM tv_shows.radio GROUP BY Transmitter ORDER BY Transmitter LIMIT 10000000000000000"
  },
  {
    "id": 143,
    "db_id": "tv_shows",
    "question": "Show the different affiliations of city channels and the number of city channels with each affiliation.",
    "answer": "SELECT Transmitter FROM tv_shows.city_channel INNER JOIN tv_shows.city_channel ON city_channel.City_channel_ID = tv_show_ID GROUP BY Tran"
  },
  {
    "id": 144,
    "db_id": "tv_shows",
    "question": "Please show the most common affiliation for city channels.",
    "answer": "SELECT DISTINCT Transmitter FROM tv_shows.radio ORDER BY RnaG_MHz LIMIT 100000000000000000000000000"
  },
  {
    "id": 145,
    "db_id": "tv_shows",
    "question": "List the affiliations shared by more than three city channels.",
    "answer": "SELECT Transmitter FROM tv_shows.city_channel WHERE City_channel_ID > 3 GROUP BY Transmitter ORDER BY Transmitter LIMIT 1602458600000"
  },
  {
    "id": 146,
    "db_id": "tv_shows",
    "question": "Show the cities and station names of city channels in ascending alphabetical order of station name.",
    "answer": "SELECT DISTINCT Transmitter FROM tv_shows.city_channel WHERE Transmitter = 'ASC' ORDER BY Transmitter LIMIT 1"
  },
  {
    "id": 147,
    "db_id": "tv_shows",
    "question": "Show the transmitters of radios and the cities of the channels they are associated with.",
    "answer": "SELECT DISTINCT Transmitter FROM (SELECT Transmitter , RnaG_MHz FROM tv_shows.radio WHERE City = 'Washington Dc' ORDER BY Is_online LIMIT"
  },
  {
    "id": 148,
    "db_id": "tv_shows",
    "question": "Show the transmitters of radios and the station names of the channels they are associated with in descending order of the ERP of the radios.",
    "answer": "SELECT DISTINCT Transmitter FROM (SELECT Transmitter FROM tv_shows.radio WHERE Station_name = 'ERP' ORDER"
  },
  {
    "id": 149,
    "db_id": "tv_shows",
    "question": "Show the transmitters of the radios and the number of city channels they are associated with.",
    "answer": "SELECT DISTINCT Transmitter FROM (SELECT Transmitter FROM tv_shows.radio GROUP BY Transmitter ORDER BY Transmitter LIMIT 1) AS t INNER JOIN"
  },
  {
    "id": 150,
    "db_id": "tv_shows",
    "question": "Show the distinct transmitters of radios that are not associated with any city channel.",
    "answer": "SELECT Transmitter FROM (SELECT DISTINCT Transmitter FROM tv_shows.radio AS T WHERE Transmitter = '' GROUP BY Transmitter ORDER BY Lyric_FM"
  },
  {
    "id": 151,
    "db_id": "vehicle_driver",
    "question": "What is the model of the vehicle with maximum top speed whose power is higher than 6000?",
    "answer": "SELECT DISTINCT Top_Speed FROM vehicle_driver.vehicle GROUP BY Top_Speed ORDER BY Top_Speed LIMIT 1500000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 152,
    "db_id": "vehicle_driver",
    "question": "Of vehicles with power over 6000, return the model of the vehicle with the greatest top speed.",
    "answer": "SELECT DISTINCT Top_Speed FROM vehicle_driver.vehicle GROUP BY Top_Speed ORDER BY Top_Speed LIMIT 1500000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 153,
    "db_id": "vehicle_driver",
    "question": "What are the names of the drivers who are citizens of the 'United States'?",
    "answer": "SELECT Top_Speed FROM vehicle_driver.driver WHERE Citizenship = 'U.S.' ORDER BY Top_Speed LIMIT 100000000985274639396344326041716185886464091138957873946431278956"
  },
  {
    "id": 154,
    "db_id": "vehicle_driver",
    "question": "Return the names of drivers with citizenship from the United States.",
    "answer": "SELECT Top_Speed FROM (SELECT DISTINCT Top_Speed , Total_Production FROM vehicle_driver.vehicle WHERE Citizenship = 'US' LIMIT 1) AS T ORDER BY Total_Production LIMIT 100000000000000000000000000000000000000000"
  },
  {
    "id": 155,
    "db_id": "vehicle_driver",
    "question": "How many vehicles has a driver driven at most, and what is the driver id of the driver who has driven this many vehicles?",
    "answer": "SELECT COUNT(Top_Speed ) FROM vehicle_driver.vehicle GROUP BY Top_Speed ORDER BY Top_Speed LIMIT 100000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 156,
    "db_id": "vehicle_driver",
    "question": "What is the id of the driver who has driven the most vehicles, and how many vehicles is this?",
    "answer": "SELECT COUNT(Top_Speed ) FROM vehicle_driver.driver GROUP BY Top_Speed ORDER BY Total_Production LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 157,
    "db_id": "vehicle_driver",
    "question": "What is the maximum and average power for the vehicles manufactured by 'Zhuzhou'?",
    "answer": "SELECT MAX(Power ), AVG(Power ) FROM (SELECT DISTINCT Top_Speed , Builder FROM vehicle_driver.vehicle WHERE Model = 'zhuzhou') AS T INNER JOIN (SELECT Top_Speed , Racing_Series , SUM(Power ) FROM vehicle_driver.vehicle GROUP BY Top_Speed ORDER BY Racing_Series LIMIT 2) AS T  ON Top_Speed = T"
  },
  {
    "id": 158,
    "db_id": "vehicle_driver",
    "question": "Return the maximum and average power for the vehicles built by Zhuzhou.",
    "answer": "SELECT MAX(Power ), AVG(Power ) FROM vehicle_driver.driver WHERE Vehicle_ID = 'zhuzhou' GROUP BY Vehicle_ID ORDER BY Model , Model LIMIT 10000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 159,
    "db_id": "vehicle_driver",
    "question": "What is the id of the vehicle driven for the least times for the vehicles ever used?",
    "answer": "SELECT DISTINCT Top_Speed FROM (SELECT Top_Speed FROM vehicle_driver.vehicle ORDER BY Top_Speed LIMIT 1) AS T WHERE Top_Speed = '' GROUP BY Top_Speed ORDER BY Driver_ID LIMIT 10000000005826349900000000000000000000000"
  },
  {
    "id": 160,
    "db_id": "vehicle_driver",
    "question": "Return the id of the vehicle that has been driven the fewest times.",
    "answer": "SELECT DISTINCT Top_Speed FROM vehicle_driver.vehicle_driver ORDER BY Top_Speed LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 161,
    "db_id": "vehicle_driver",
    "question": "What is the top speed and power of the vehicle manufactured in the year of 1996?",
    "answer": "SELECT SUM(Top_Speed ), SUM(Power ) FROM (SELECT Top_Speed , SUM(Power ) AS ToS FROM vehicle_driver.vehicle GROUP BY Citizenship ORDER BY Top_Speed LIMIT 2) AS T WHERE Top_Speed = '532.4' GROUP BY Citizenship ORDER BY Total_Production LIMIT 2016676809020"
  },
  {
    "id": 162,
    "db_id": "vehicle_driver",
    "question": "Return the top speed and power of the vehicle that was built in the year 1996.",
    "answer": "SELECT SUM(Top_Speed ), SUM(Power ) FROM (SELECT Top_Speed , SUM(Power ) AS Sum FROM vehicle_driver.vehicle WHERE Build_Year = '1996' GROUP BY Vehicle_ID ORDER BY Top_Speed LIMIT 2) ORDER BY Top_Speed , Power LIMIT 35000000000000000000"
  },
  {
    "id": 163,
    "db_id": "vehicle_driver",
    "question": "What are the build year, model name and builder of the vehicles?",
    "answer": "SELECT DISTINCT Top_Speed FROM (SELECT Top_Speed FROM vehicle_driver.vehicle ORDER BY Builder LIMIT 1) AS T WHERE Top_Speed = '2' GROUP BY Top_Speed ORDER BY Builder LIMIT 10000000000000000000000000000000000000000000"
  },
  {
    "id": 164,
    "db_id": "vehicle_driver",
    "question": "Give the build year, model, and builder of each vehicle.",
    "answer": "SELECT DISTINCT Top_Speed , Model FROM vehicle_driver.vehicle WHERE Build_Year = '2014' ORDER BY Top_Speed LIMIT 1000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 165,
    "db_id": "vehicle_driver",
    "question": "How many drivers have driven vehicles built in 2012?",
    "answer": "SELECT COUNT(Top_Speed ) FROM vehicle_driver.driver WHERE Model = '2012' GROUP BY Top_Speed ORDER BY Top_Speed LIMIT 134476534800651746459147723587023634068271475271476647748947"
  },
  {
    "id": 166,
    "db_id": "vehicle_driver",
    "question": "Count the number of different drivers who have driven vehicles built in 2012.",
    "answer": "SELECT COUNT(Top_Speed ) FROM vehicle_driver.driver WHERE Builder = 'tokyo gear' GROUP BY Top_Speed ORDER BY Top_Speed LIMIT 180435636792922946536752727440886358055298372711578773644876"
  },
  {
    "id": 167,
    "db_id": "vehicle_driver",
    "question": "How many drivers have raced in 'NASCAR'?",
    "answer": "SELECT COUNT(Total_Production ) FROM (SELECT DISTINCT Top_Speed , Build_Year FROM vehicle_driver.driver WHERE Racing_Series = 'nascar' GROUP BY Top_Speed ORDER BY Total_Production LIMIT 1) AS T INNER JOIN vehicle_driver.vehicle_driver ON Total_Production = Total_Production GROUP BY Total_Production ORDER BY Total_Production LIMIT "
  },
  {
    "id": 168,
    "db_id": "vehicle_driver",
    "question": "Count the number of drivers who have raced in NASCAR.",
    "answer": "SELECT COUNT(Top_Speed ) FROM (SELECT Top_Speed FROM vehicle_driver.vehicle_driver GROUP BY Top_Speed ORDER BY Racing_Series LIMIT 1) AS T WHERE Top_Speed = '3648' GROUP BY Top_Speed , driver.Name ORDER BY driver.Name LIMIT 1 OFFSET 25000000000000000000"
  },
  {
    "id": 169,
    "db_id": "vehicle_driver",
    "question": "What is the average top speed of vehicles?",
    "answer": "SELECT Top_Speed FROM vehicle_driver.vehicle WHERE Vehicle_ID = (SELECT MAX(Top_Speed ) FROM vehicle_driver.vehicle WHERE Vehicle_ID = 'v7096') ORDER BY Top_Speed LIMIT 100000000000000000000000000000000000000"
  },
  {
    "id": 170,
    "db_id": "vehicle_driver",
    "question": "Return the average top speed across all vehicles.",
    "answer": "SELECT Top_Speed FROM vehicle_driver.vehicle WHERE Vehicle_ID = 1 GROUP BY Top_Speed ORDER BY Total_Production LIMIT 1"
  },
  {
    "id": 171,
    "db_id": "vehicle_driver",
    "question": "What are the distinct driver names who have driven vehicles with power more than 5000 ?",
    "answer": "SELECT Top_Speed FROM (SELECT DISTINCT Top_Speed FROM vehicle_driver.vehicle WHERE Power > 5000) AS T ORDER BY Top_Speed LIMIT 1;"
  },
  {
    "id": 172,
    "db_id": "vehicle_driver",
    "question": "Return the names of drivers who have driven vehicles with power over 5000.",
    "answer": "SELECT DISTINCT Top_Speed FROM vehicle_driver.driver WHERE Top_Speed > 1632 ORDER BY Total_Production LIMIT 10000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 173,
    "db_id": "vehicle_driver",
    "question": "Which car models have total production larger than 100 or top speed higher than 150?",
    "answer": "SELECT DISTINCT Top_Speed FROM (SELECT Top_Speed , COUNT(Vehicle_ID ) AS num FROM vehicle_driver.vehicle WHERE Total_Production > 100 ORDER BY Top_Speed LIMIT 35) AS T ORDER BY Top_Speed LIMIT 24486792956809682537646928198459"
  },
  {
    "id": 174,
    "db_id": "vehicle_driver",
    "question": "Give the models of cars that have a total production of over 100 or a top speed over 150.",
    "answer": "SELECT DISTINCT Top_Speed FROM vehicle_driver.vehicle ORDER BY Top_Speed LIMIT 100 OFFSET 150"
  },
  {
    "id": 175,
    "db_id": "vehicle_driver",
    "question": "What are the model names and build year of the cars with 'DJ' in its model name?",
    "answer": "SELECT DISTINCT Top_Speed FROM (SELECT Top_Speed , MIN(Build_Year ) AS build_year FROM vehicle_driver.vehicle_driver GROUP BY Top_Speed ORDER BY Top_Speed LIMIT 1) AS T WHERE Top_Speed = 'DJ' GROUP BY Top_Speed ORDER BY Driver_ID , Top_Speed LIMIT 100000000000"
  },
  {
    "id": 176,
    "db_id": "vehicle_driver",
    "question": "Return the model and build year of cars that include \"DJ\" in their model names.",
    "answer": "SELECT DISTINCT Top_Speed FROM vehicle_driver.vehicle_driver AS T WHERE Top_Speed = '301' INNER JOIN (SELECT Model , Racing_Series FROM vehicle_driver.vehicle WHERE driver.Name = 'DJ') AS A  ON Top_Speed = Top_Speed ORDER BY Top_Speed LIMIT 52000000000000"
  },
  {
    "id": 177,
    "db_id": "vehicle_driver",
    "question": "What are the models which have not been driven by any drivers?",
    "answer": "SELECT Top_Speed FROM vehicle_driver.driver WHERE Driver_ID = 'N/A' GROUP BY Model ORDER BY Model LIMIT 100000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 178,
    "db_id": "vehicle_driver",
    "question": "Return the models of vehicles that have never been driven.",
    "answer": "SELECT Top_Speed FROM (SELECT DISTINCT Top_Speed , Top_Speed FROM vehicle_driver.vehicle WHERE Total_Production = 0 GROUP BY Top_Speed ORDER BY Total_Production LIMIT 1) AS T WHERE Top_Speed = 54737468923922177455679012955048348"
  },
  {
    "id": 179,
    "db_id": "vehicle_driver",
    "question": "What are the vehicle ids and models of the vehicle which have been driven by two drivers or been manufactured by 'Ziyang'.",
    "answer": "SELECT DISTINCT Top_Speed FROM vehicle_driver.vehicle ORDER BY Driver_ID , Builder LIMIT 200000000000000000000000000147598868243813200000589041271730000274206275"
  },
  {
    "id": 180,
    "db_id": "vehicle_driver",
    "question": "Return the ids and models of vehicles that have been driven by exactly two drivers or built by Ziyang.",
    "answer": "SELECT DISTINCT Top_Speed FROM vehicle_driver.vehicle ORDER BY Top_Speed LIMIT 2 OFFSET 10000000034945976000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 181,
    "db_id": "vehicle_driver",
    "question": "What are the vehicle ids and models which have been driven by more than 2 drivers or been driven by the driver named 'Jeff Gordon'?",
    "answer": "SELECT DISTINCT Top_Speed FROM (SELECT DISTINCT Vehicle_ID , Top_Speed , Racing_Series FROM vehicle_driver.driver WHERE Builder = 'Jeff Gordon' GROUP BY Top_Speed ORDER BY Model LIMIT 1) AS T INNER JOIN vehicle_driver.vehicle ON Top_Speed = Vehicle_ID ORDER BY Total_Production LIMIT "
  },
  {
    "id": 182,
    "db_id": "vehicle_driver",
    "question": "Return the ids and models of vehicles that have been driven by more than 2 drivers or been driven by the Jeff Gordon.",
    "answer": "SELECT DISTINCT Top_Speed FROM vehicle_driver.vehicle_driver GROUP BY Top_Speed ORDER BY Total_Production LIMIT 1000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 183,
    "db_id": "vehicle_driver",
    "question": "How many vehicles have maximum top speed?",
    "answer": "SELECT SUM(Top_Speed ) FROM (SELECT Top_Speed FROM vehicle_driver.vehicle WHERE Builder = 'Nissan') AS T ORDER BY Top_Speed LIMIT 10000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 184,
    "db_id": "vehicle_driver",
    "question": "Count the number of vehicles that have a top speed equal to the maximum across all vehicles.",
    "answer": "SELECT COUNT(Top_Speed ) FROM vehicle_driver.vehicle ORDER BY Top_Speed LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 185,
    "db_id": "vehicle_driver",
    "question": "Show all driver names in the alphabetical order.",
    "answer": "SELECT Total_Production FROM (SELECT DISTINCT Total_Production FROM vehicle_driver.vehicle ORDER BY Total_Production ) AS T INNER JOIN vehicle_driver.driver ON Total_Production = Total_Production ORDER BY Total_Production LIMIT 10000000000000000000"
  },
  {
    "id": 186,
    "db_id": "vehicle_driver",
    "question": "What are the names of drivers, returned in alphbetical order?",
    "answer": "SELECT Top_Speed FROM (SELECT DISTINCT Top_Speed , Top_Speed FROM vehicle_driver.driver ORDER BY Top_Speed ) AS S ORDER BY Top_Speed LIMIT 100000000346895000000000000000000000000000000000000000"
  },
  {
    "id": 187,
    "db_id": "vehicle_driver",
    "question": "How many drivers have been racing in each racing series?",
    "answer": "SELECT SUM(Top_Speed ) FROM (SELECT DISTINCT Top_Speed FROM vehicle_driver.driver GROUP BY Top_Speed ORDER BY Top_Speed , Racing_Series LIMIT 1) AS T INNER JOIN vehicle_driver.driver ON Top_Speed = Vehicle_ID ORDER BY Top_Speed , Racing_Series LIMIT 100000000000000000"
  },
  {
    "id": 188,
    "db_id": "vehicle_driver",
    "question": "Count the number of drivers that have raced in each series.",
    "answer": "SELECT COUNT(Top_Speed ) FROM (SELECT DISTINCT Top_Speed FROM vehicle_driver.vehicle GROUP BY Top_Speed ORDER BY Top_Speed LIMIT 1) AS T ORDER BY Top_Speed , Top_Speed , Driver_ID LIMIT 200000000000000000000000000000000000000"
  },
  {
    "id": 189,
    "db_id": "vehicle_driver",
    "question": "What are the name and citizenship of the drivers who have driven the vehicle model 'DJ1'?",
    "answer": "SELECT DISTINCT Top_Speed FROM (SELECT DISTINCT Top_Speed , Citizenship FROM vehicle_driver.driver WHERE Vehicle_ID = 257) AS T INNER JOIN (SELECT Name , Citizenship FROM vehicle_driver.driver WHERE Model = 'DJ1' LIMIT 1) AS X  ON Top_Speed = Top_Speed ORDER"
  },
  {
    "id": 190,
    "db_id": "vehicle_driver",
    "question": "Return the names and citizenships of drivers who have driven the vehicle with the model 'DJ1'.",
    "answer": "SELECT DISTINCT Top_Speed FROM vehicle_driver.vehicle INNER JOIN vehicle_driver.driver ON vehicle_driver.Driver_ID = vehicle_driver.Driver_ID ORDER BY Top_Speed LIMIT 100000000000000000000000000000000000000000000000000"
  },
  {
    "id": 191,
    "db_id": "vehicle_driver",
    "question": "How many drivers have not driven any cars?",
    "answer": "SELECT COUNT(Driver_ID ) FROM (SELECT DISTINCT Top_Speed FROM vehicle_driver.driver WHERE Driver_ID = 'none') AS T ORDER BY Top_Speed LIMIT 100000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 192,
    "db_id": "vehicle_driver",
    "question": "Count the number of drivers who have not driven any vehicles.",
    "answer": "SELECT COUNT(Driver_ID ) FROM vehicle_driver.driver AS T WHERE Total_Production = 0 GROUP BY Total_Production ORDER BY Total_Production LIMIT 1"
  },
  {
    "id": 193,
    "db_id": "online_exams",
    "question": "How many exams are there?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT Type_of_Question_Code FROM (SELECT DISTINCT Question_ID FROM (SELECT Question_ID FROM (SELECT DISTINCT Questions.Type_of_Question_Code FROM (SELECT Question_ID FROM (SELECT Questions.Exam_Name FROM (SELECT Questions.Subject_Code , Questions.Exam_Date FROM (SELECT DISTINCT Questions.Subject_Code , Questions"
  },
  {
    "id": 194,
    "db_id": "online_exams",
    "question": "Count the number of exams.",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT Type_of_Question_Code FROM (SELECT Type_of_Question_Code , Question_ID FROM (SELECT Question_Text FROM (SELECT Type_of_Question_Code , Exam_Name FROM (SELECT Question_ID FROM (SELECT DISTINCT Type_of_Question_Code , Question_ID FROM (SELECT Question_Text FROM (SELECT Type_"
  },
  {
    "id": 195,
    "db_id": "online_exams",
    "question": "List the distinct subject code of exams in ascending alphabetical order .",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Type_of_Question_Code FROM (SELECT DISTINCT Subject_Code FROM (SELECT DISTINCT Questions.Subject_Code FROM (SELECT Question_ID FROM (SELECT Question_ID FROM (SELECT DISTINCT Questions.Subject_Code FROM (SELECT DISTINCT Type_of_Question_Code FROM (SELECT D"
  },
  {
    "id": 196,
    "db_id": "online_exams",
    "question": "Give me an alphabetically ordered list of the distinct subject code for exams.",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Subject_Code , COUNT(Type_of_Question_Code ) AS Distinct FROM (SELECT DISTINCT Type_of_Question_Code FROM (SELECT DISTINCT Question_ID , Type_of_Question_Code FROM (SELECT DISTINCT Question_ID , Subject_Code FROM (SELECT"
  },
  {
    "id": 197,
    "db_id": "online_exams",
    "question": "What are the names and dates of the exams with subject code that is not \"Database\"?",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Subject_Code , Question_ID FROM (SELECT DISTINCT Question_ID FROM (SELECT DISTINCT Type_of_Question_Code FROM (SELECT Type_of_Question_Code FROM (SELECT Question_ID FROM (SELECT Question_ID FROM (SELECT Question_ID FROM (SELECT DISTINCT Question_ID FROM (SELECT D"
  },
  {
    "id": 198,
    "db_id": "online_exams",
    "question": "Find the exams whose subject code is not \"Database\". What are the exam dates and exam names?",
    "answer": "SELECT Type_of_Question_Code FROM (SELECT DISTINCT Question_Text , Exam_Date FROM (SELECT Type_of_Question_Code FROM (SELECT DISTINCT Subject_Code FROM (SELECT Type_of_Question_Code FROM (SELECT Type_of_Question_Code FROM (SELECT DISTINCT Question_ID FROM (SELECT Type_of_Question_Code FROM"
  },
  {
    "id": 199,
    "db_id": "online_exams",
    "question": "List the dates of the exams with subject code containing the word \"data\", in descending order of dates.",
    "answer": "SELECT Type_of_Question_Code FROM (SELECT DISTINCT Question_Text , Type_of_Question_Code FROM (SELECT DISTINCT Question_Text , Type_of_Question_Code FROM (SELECT DISTINCT Questions.Subject_Code FROM (SELECT Type_of_Question_Code FROM (SELECT DISTINCT Question_Text , Type_of_Question_Code FROM"
  },
  {
    "id": 200,
    "db_id": "online_exams",
    "question": "What are the dates of the exams whose subject code contains the substring \"data\"? Return them in descending order of dates.",
    "answer": "SELECT Type_of_Question_Code FROM (SELECT DISTINCT Question_ID , Subject_Code FROM (SELECT Type_of_Question_Code FROM (SELECT DISTINCT Questions.Subject_Code FROM (SELECT Type_of_Question_Code FROM (SELECT Type_of_Question_Code FROM (SELECT DISTINCT Questions.Subject_Code FROM (SELECT Questions"
  },
  {
    "id": 201,
    "db_id": "online_exams",
    "question": "What are the type of questions and their counts?",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Type_of_Question_Code FROM (SELECT COUNT(Question_Text ), SUM(Question_ID ) AS Total_Questions_Num FROM (SELECT Question_ID , Questions.Valid_Answer_Text FROM (SELECT Type_of_Question_Code , Questions_in_Exams.Question_ID FROM (SELECT DISTINCT Type_of_Question_Code ,"
  },
  {
    "id": 202,
    "db_id": "online_exams",
    "question": "For each question type, return its type code and its count of occurrence.",
    "answer": "SELECT DISTINCT Type_of_Question_Code , SUM(Cell_Mobile_Phone ) FROM (SELECT DISTINCT Type_of_Question_Code , COUNT(*) AS num FROM (SELECT Question_ID FROM (SELECT * FROM (SELECT Question_Text , COUNT(*), Question_ID FROM (SELECT Question_Text , COUNT(*), Question_ID FROM (SELECT Question_ID FROM (SELECT Type_of_Question_Code ,"
  },
  {
    "id": 203,
    "db_id": "online_exams",
    "question": "What are the distinct student answer texts that received comments \"Normal\"?",
    "answer": "SELECT Type_of_Question_Code FROM (SELECT DISTINCT Type_of_Question_Code FROM (SELECT Type_of_Question_Code FROM (SELECT DISTINCT Questions.Question_Text FROM (SELECT Type_of_Question_Code FROM (SELECT Type_of_Question_Code FROM (SELECT DISTINCT Questions.Question_Text FROM (SELECT Questions.Question_ID FROM (SELECT Type_"
  },
  {
    "id": 204,
    "db_id": "online_exams",
    "question": "List all the distinct student answer texts to which comments \"Normal\" were given?",
    "answer": "SELECT Type_of_Question_Code FROM (SELECT DISTINCT Type_of_Question_Code FROM (SELECT Type_of_Question_Code FROM (SELECT DISTINCT Type_of_Question_Code FROM (SELECT Last_Name , COUNT(Last_Name ) AS Num_students FROM (SELECT DISTINCT First_Name , Last_Name , Gender_MFU FROM (SELECT DISTINCT T"
  },
  {
    "id": 205,
    "db_id": "online_exams",
    "question": "How many different comments are there for student answers?",
    "answer": "SELECT COUNT(Question_ID ) FROM (SELECT Type_of_Question_Code , Question_Text FROM (SELECT Type_of_Question_Code , Question_Text FROM (SELECT DISTINCT Questions.Question_ID FROM (SELECT Student_Address , Questions.Subject_Code FROM (SELECT First_Name , Middle_Name FROM (SELECT Last_Name , Middle_Name FROM (SELECT DISTINCT Type_of"
  },
  {
    "id": 206,
    "db_id": "online_exams",
    "question": "Count the number of different comments for student answers.",
    "answer": "SELECT COUNT(Question_ID ) FROM (SELECT Type_of_Question_Code , Question_ID FROM (SELECT Type_of_Question_Code , Question_ID FROM (SELECT * FROM (SELECT Type_of_Question_Code , Question_ID FROM (SELECT DISTINCT Type_of_Question_Code , Type_of_Question_Code FROM (SELECT Type_of_Question_Code , Question"
  },
  {
    "id": 207,
    "db_id": "online_exams",
    "question": "List all the student answer texts in descending order of count.",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Questions.Question_Text , COUNT(Question_Text ) AS Num FROM (SELECT Type_of_Question_Code , Questions.Question_ID , SUM(Type_of_Question_Code ) AS num FROM (SELECT DISTINCT Question_Text , Questions.Question_ID FROM (SELECT Questions.Question_Text , Questions.Question_"
  },
  {
    "id": 208,
    "db_id": "online_exams",
    "question": "Sort the student answer texts in descending order of their frequency of occurrence.",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Questions.Question_Text FROM (SELECT Questions.Question_ID FROM (SELECT Questions.Subject_Code FROM (SELECT DISTINCT Type_of_Question_Code FROM (SELECT Questions.Exam_Name FROM (SELECT DISTINCT Questions.Subject_Code FROM (SELECT DISTINCT Questions.Question_ID FROM (SELECT DISTINCT Questions."
  },
  {
    "id": 209,
    "db_id": "online_exams",
    "question": "Please show the first names of students and the dates of their answers.",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Questions.Question_Text , Questions.Question_ID FROM (SELECT Type_of_Question_Code , Questions.Question_ID FROM (SELECT DISTINCT Type_of_Question_Code , Questions.Question_ID FROM (SELECT Type_of_Question_Code , Questions.Question_ID FROM (SELECT D"
  },
  {
    "id": 210,
    "db_id": "online_exams",
    "question": "For each student answer, find the first name of the student and the date of the answer.",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT First_Name , Date_of_Answer FROM (SELECT Type_of_Question_Code , Question_ID FROM (SELECT Type_of_Question_Code , Question_ID FROM (SELECT DISTINCT First_Name , Date_of_Answer FROM (SELECT Type_of_Question_Code , Question_"
  },
  {
    "id": 211,
    "db_id": "online_exams",
    "question": "Please show the email addresses of students and the dates of their answers in descending order of dates.",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Questions.Question_ID , Date_of_Answer FROM (SELECT Questions.Question_ID , Questions.Date_of_Answer FROM (SELECT Questions.Subject_Code , Questions.Exam_Name , SUM(Date_of_Answer ) AS Total FROM (SELECT DISTINCT Questions.Question_ID , Questions.Valid_Answer_"
  },
  {
    "id": 212,
    "db_id": "online_exams",
    "question": "For each student answer, find the email address of the student and the date of the answer. Sort them in descending order of dates.",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Questions.Question_ID , Subject_Code , Date_of_Answer FROM (SELECT Question_ID FROM (SELECT DISTINCT Question_ID FROM (SELECT DISTINCT Student_Address , First_Name FROM (SELECT Type_of_Question_"
  },
  {
    "id": 213,
    "db_id": "online_exams",
    "question": "Please show the least common assessment for students.",
    "answer": "SELECT SUM(Assessment ) FROM (SELECT DISTINCT Type_of_Question_Code FROM (SELECT Type_of_Question_Code , COUNT(Question_ID ), SUM(Question_ID ) AS Total FROM (SELECT Type_of_Question_Code , COUNT(Question_ID ) FROM (SELECT DISTINCT Questions.Question_Text , Questions.Question_ID FROM (SELECT Questions.Question_Text , Questions"
  },
  {
    "id": 214,
    "db_id": "online_exams",
    "question": "Which assessment has the smallest frequency count?",
    "answer": "SELECT Question_ID FROM (SELECT Type_of_Question_Code FROM (SELECT DISTINCT Type_of_Question_Code FROM (SELECT COUNT(Type_of_Question_Code ) AS cnt FROM (SELECT DISTINCT Question_Text FROM (SELECT DISTINCT Question_Text , Question_ID FROM (SELECT Type_of_Question_Code , Question_ID FROM (SELECT DISTINCT Question_"
  },
  {
    "id": 215,
    "db_id": "online_exams",
    "question": "Please show the first names of the students that have at least two answer records.",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Type_of_Question_Code FROM (SELECT Type_of_Question_Code FROM (SELECT Questions.Question_ID , COUNT(*) AS TotalNum FROM (SELECT Questions.Question_Text , SUM(Question_ID ) AS TotalNum FROM (SELECT Questions.Question_ID , SUM(Question_ID ) FROM (SELECT Typ"
  },
  {
    "id": 216,
    "db_id": "online_exams",
    "question": "Which students have 2 or more answer records? Give me their first names.",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Questions.Question_Text FROM (SELECT DISTINCT Questions.Question_ID FROM (SELECT Question_ID FROM (SELECT Type_of_Question_Code FROM (SELECT DISTINCT Questions.Question_ID FROM (SELECT DISTINCT Questions.Question_ID FROM (SELECT Type_of_Question_Code FROM (SELECT D"
  },
  {
    "id": 217,
    "db_id": "online_exams",
    "question": "What is the most common valid answer text?",
    "answer": "SELECT Type_of_Question_Code FROM (SELECT Type_of_Question_Code , COUNT(Type_of_Question_Code ) AS num FROM (SELECT DISTINCT Type_of_Question_Code , Question_Text FROM (SELECT Type_of_Question_Code , Type_of_Question_Code , Question_ID FROM (SELECT Type_of_Question_Code , Question_ID FROM ("
  },
  {
    "id": 218,
    "db_id": "online_exams",
    "question": "Find the valid answer text that appeared most frequently.",
    "answer": "SELECT Type_of_Question_Code FROM (SELECT Type_of_Question_Code , COUNT(Question_ID ) AS num FROM (SELECT Question_Text FROM (SELECT DISTINCT Type_of_Question_Code FROM (SELECT Question_ID , MAX(Question_ID ) AS pos FROM (SELECT Question_ID , Date_of_Answer FROM (SELECT Question_ID , Valid_Answer_Text FROM (SELECT Type"
  },
  {
    "id": 219,
    "db_id": "online_exams",
    "question": "List the last names of the students whose gender is not \"M\".",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Questions.Question_Text FROM (SELECT Type_of_Question_Code FROM (SELECT Questions.Question_ID FROM (SELECT Type_of_Question_Code FROM (SELECT DISTINCT Questions.Subject_Code FROM (SELECT DISTINCT Last_Name , MIN(Last_Name ) AS First_Name FROM (SELECT DISTINCT First_Name"
  },
  {
    "id": 220,
    "db_id": "online_exams",
    "question": "What are the last names of the students with gender other than \"M\"?",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Questions.Question_Text FROM (SELECT Type_of_Question_Code FROM (SELECT DISTINCT Type_of_Question_Code FROM (SELECT * FROM (SELECT DISTINCT Type_of_Question_Code FROM (SELECT DISTINCT Type_of_Question_Code FROM (SELECT DISTINCT Type_of_Question"
  },
  {
    "id": 221,
    "db_id": "online_exams",
    "question": "List each gender and the corresponding number of students.",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Type_of_Question_Code FROM (SELECT DISTINCT Type_of_Question_Code FROM (SELECT SUM(Student_ID ) AS num FROM (SELECT Question_ID , Question_Text FROM (SELECT Question_ID , First_Name , Middle_Name FROM (SELECT DISTINCT First_Name , Last_Name FROM "
  },
  {
    "id": 222,
    "db_id": "online_exams",
    "question": "For each gender, return the gender code and the number of students who identify as that gender.",
    "answer": "SELECT Type_of_Question_Code , COUNT(Type_of_Question_Code ) AS num FROM (SELECT DISTINCT Type_of_Question_Code , First_Name FROM (SELECT First_Name , Middle_Name FROM (SELECT Type_of_Question_Code , First_Name , Last_Name FROM (SELECT DISTINCT Type_of_Question_Code , First_Name , Middle"
  },
  {
    "id": 223,
    "db_id": "online_exams",
    "question": "List the last names of the students whose gender is \"F\" or \"M\".",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Questions.Question_Text FROM (SELECT DISTINCT Questions.Question_ID FROM (SELECT Type_of_Question_Code FROM (SELECT Type_of_Question_Code FROM (SELECT DISTINCT First_Name , Middle_Name FROM (SELECT MIN(First_Name ) AS firstname FROM (SELECT T"
  },
  {
    "id": 224,
    "db_id": "online_exams",
    "question": "Which students identify their gender as \"F\" or \"M\"? Give me their last names.",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Questions.Question_ID FROM (SELECT DISTINCT Questions.Question_ID FROM (SELECT Type_of_Question_Code FROM (SELECT Type_of_Question_Code FROM (SELECT Last_Name FROM (SELECT Type_of_Question_Code FROM (SELECT Last_Name FROM (SELECT First_Name FROM ("
  },
  {
    "id": 225,
    "db_id": "online_exams",
    "question": "List the first names of the students who do not have any answers.",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Questions.Question_Text , Questions.Question_ID FROM (SELECT Questions.Question_Text , Questions.Exam_Name FROM (SELECT Questions.Question_Text , Questions.Exam_Date , Questions.Question_ID FROM (SELECT Type_of_Question_Code FROM (SELECT Questions.Question_Text , Questions.Exam_"
  },
  {
    "id": 226,
    "db_id": "online_exams",
    "question": "Which students do not have any answers? Find their first names.",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Questions.Question_Text , COUNT(Type_of_Question_Code ) AS NumOfAnswers FROM (SELECT Questions.Question_ID FROM (SELECT Questions.Question_Text , Questions.Question_ID , COUNT(Type_of_Question_Code ) AS NumOfAnswers FROM (SELECT Questions.Question_Text , Questions"
  },
  {
    "id": 227,
    "db_id": "online_exams",
    "question": "Show the student answer texts that received both \"Normal\" and \"Absent\" as comments.",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Question_Text , Question_ID FROM (SELECT DISTINCT Questions.Question_Text , Question_ID FROM (SELECT Question_ID FROM (SELECT Question_Text , Question_ID FROM (SELECT Question_ID , SUM(Comments ) FROM (SELECT Type_of_Question_Code , Question_ID , COUNT(Question_"
  },
  {
    "id": 228,
    "db_id": "online_exams",
    "question": "Which student answer texts were given both \"Normal\" and \"Absent\" as comments?",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Questions.Question_ID FROM (SELECT Type_of_Question_Code FROM (SELECT Questions.Question_ID FROM (SELECT Type_of_Question_Code FROM (SELECT Questions.Subject_Code FROM (SELECT Type_of_Question_Code FROM (SELECT Questions.Exam_Name FROM (SELECT Ty"
  },
  {
    "id": 229,
    "db_id": "online_exams",
    "question": "Show the types of questions that have at least three questions.",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Type_of_Question_Code FROM (SELECT DISTINCT Question_ID FROM (SELECT DISTINCT Type_of_Question_Code FROM (SELECT COUNT(Question_ID ) FROM (SELECT Type_of_Question_Code FROM (SELECT COUNT(Question_ID ) FROM (SELECT Type_of_Question_Code FROM (SELECT DISTINCT Type_of_Question_"
  },
  {
    "id": 230,
    "db_id": "online_exams",
    "question": "Which types of questions have 3 or more questions? Return the questions type code.",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Type_of_Question_Code , COUNT(Question_ID ) AS total FROM (SELECT Question_ID FROM (SELECT * FROM (SELECT Questions.Question_ID FROM (SELECT * FROM (SELECT Type_of_Question_Code FROM (SELECT Question_ID FROM (SELECT DISTINCT Questions.Question_Text FROM (SELECT DISTINCT Questions."
  },
  {
    "id": 231,
    "db_id": "online_exams",
    "question": "Show all information on students.",
    "answer": "SELECT Type_of_Question_Code FROM (SELECT DISTINCT Question_Text , Type_of_Question_Code FROM (SELECT DISTINCT Question_ID , Type_of_Question_Code FROM (SELECT DISTINCT Student_ID , Question_ID FROM (SELECT DISTINCT Questions.Question_ID FROM (SELECT DISTINCT Type_of_Question_Code FROM (SELECT Type_of_Question"
  },
  {
    "id": 232,
    "db_id": "online_exams",
    "question": "What is al the available information of each student?",
    "answer": "SELECT DISTINCT Type_of_Question_Code FROM (SELECT Questions.Question_Text , Type_of_Question_Code FROM (SELECT Type_of_Question_Code FROM (SELECT Type_of_Question_Code FROM (SELECT Student_Address , Questions.Question_ID FROM (SELECT Questions.Student_ID FROM (SELECT DISTINCT Questions.Question_ID FROM ("
  },
  {
    "id": 233,
    "db_id": "customers_and_orders",
    "question": "How many addresses do we have?",
    "answer": "SELECT COUNT(address_id ) FROM customers_and_orders.Addresses WHERE order_id = (SELECT MAX(order_id ) FROM customers_and_orders.Customer_Orders GROUP BY address_id ) LIMIT 100000000000000000000000000000000000000000000000000"
  },
  {
    "id": 234,
    "db_id": "customers_and_orders",
    "question": "Count the number of addresses.",
    "answer": "SELECT COUNT(address_id ) FROM customers_and_orders.Addresses GROUP BY address_id ORDER BY Addresses.customer_number LIMIT 10000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 235,
    "db_id": "customers_and_orders",
    "question": "List all address ids and address details.",
    "answer": "SELECT DISTINCT address_id , address_details FROM customers_and_orders.Addresses INNER JOIN customers_and_orders.Addresses ON address_id = address_details ORDER BY address_id LIMIT 100000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 236,
    "db_id": "customers_and_orders",
    "question": "What are all the address ids and address details?",
    "answer": "SELECT DISTINCT address_id , address_details FROM (SELECT DISTINCT address_id , address_details FROM customers_and_orders.Addresses WHERE customer_number = '3922567' LIMIT 1) AS T ORDER BY address_id LIMIT 100000000000000000000000000000000000000"
  },
  {
    "id": 237,
    "db_id": "customers_and_orders",
    "question": "How many products do we have?",
    "answer": "SELECT COUNT(Products.product_name ) FROM (SELECT Products.product_name FROM customers_and_orders.Products INNER JOIN customers_and_orders.Products AS T  ON Products.customer_id = Customers.order_id GROUP BY Products.product_name ORDER BY Products.product_name LIMIT 1) AS t INNER JOIN (SELECT DISTINCT Products.product_name FROM customers_and_orders"
  },
  {
    "id": 238,
    "db_id": "customers_and_orders",
    "question": "Count the number of products.",
    "answer": "SELECT COUNT(Products.product_name ) FROM (SELECT Products.product_name , COUNT(Products.product_id ) AS num FROM (SELECT DISTINCT Products.product_name FROM (SELECT product_type_code , MAX(order_quantity ) AS q1 FROM (SELECT Order_Items.order_item_id , SUM(order_quantity ) FROM customers_and_orders.Order_Items WHERE customer_number = 'customer_9"
  },
  {
    "id": 239,
    "db_id": "customers_and_orders",
    "question": "Show all product ids, product type codes, and product name.",
    "answer": "SELECT DISTINCT product_id FROM (SELECT DISTINCT product_id , product_type_code , product_name FROM customers_and_orders.Products GROUP BY product_id , product_type_code ) AS T INNER JOIN customers_and_orders.Order_Items AS T  ON Products.product_id = Order_Items.product_id ORDER BY Products.product_name LIMIT 100000000"
  },
  {
    "id": 240,
    "db_id": "customers_and_orders",
    "question": "What are the ids, type codes, and names for all products?",
    "answer": "SELECT product_type_code , product_name FROM (SELECT DISTINCT product_type_code , product_name FROM customers_and_orders.Products ORDER BY product_id LIMIT 1) AS T INNER JOIN (SELECT DISTINCT product_name FROM customers_and_orders.Order_Items GROUP BY product_name ORDER BY product_type_code LIMIT 1) AS t  ON Addresses.product_id = pro"
  },
  {
    "id": 241,
    "db_id": "customers_and_orders",
    "question": "What is the price for the product with name Monitor?",
    "answer": "SELECT SUM(Products.product_price ) AS total FROM (SELECT DISTINCT Products.product_name , SUM(Products.product_price ) FROM (SELECT DISTINCT Products.product_name FROM (SELECT DISTINCT Products.product_type_code , product_id FROM (SELECT Products.product_id , product_price FROM (SELECT Products.product_name"
  },
  {
    "id": 242,
    "db_id": "customers_and_orders",
    "question": "Give the price of the Monitor product.",
    "answer": "SELECT SUM(payment_method_code ), SUM(payment_method_code ) AS price FROM (SELECT DISTINCT product_name , product_price FROM customers_and_orders.Products WHERE product_type_code = 'monitor') AS T ORDER BY product_name LIMIT 10000000000000000000000000000000000"
  },
  {
    "id": 243,
    "db_id": "customers_and_orders",
    "question": "Show the minimum, average, maximum price for all products.",
    "answer": "SELECT DISTINCT MAX(product_price ), AVG(product_price ) AS min_price , SUM(product_price ) AS total FROM (SELECT DISTINCT product_id , product_name FROM customers_and_orders.Order_Items GROUP BY product_id ORDER BY product_name LIMIT 1) AS q WHERE product_name = 'Product name' LIMIT 100000000000000000"
  },
  {
    "id": 244,
    "db_id": "customers_and_orders",
    "question": "What are the minimum, average, and maximum prices across all products?",
    "answer": "SELECT DISTINCT AVG(product_price ) AS min_price , SUM(product_price ) AS sum_price FROM (SELECT DISTINCT product_name , SUM(product_price ) AS avg FROM (SELECT DISTINCT product_name , product_price FROM (SELECT DISTINCT product_id , SUM(product_price ) FROM (SELECT DISTINCT product_name , product_price FROM (SELECT DISTINCT product_name ,"
  },
  {
    "id": 245,
    "db_id": "customers_and_orders",
    "question": "What is the average price for products with type Clothes?",
    "answer": "SELECT AVG(Products.product_price ), SUM(Products.product_price ) FROM (SELECT DISTINCT product_name , product_type_code , product_price FROM (SELECT DISTINCT product_name , product_type_code , product_price FROM (SELECT DISTINCT product_name , product_type_code , product_price FROM (SELECT DISTINCT product_name , product_type_code , product"
  },
  {
    "id": 246,
    "db_id": "customers_and_orders",
    "question": "Return the average price of Clothes.",
    "answer": "SELECT AVG(product_price ) FROM (SELECT DISTINCT product_name FROM customers_and_orders.Products ORDER BY order_date LIMIT 1) AS a GROUP BY address_id ORDER BY address_id LIMIT 20000000000000000000000000000000000000000"
  },
  {
    "id": 247,
    "db_id": "customers_and_orders",
    "question": "How many hardware type products do we have?",
    "answer": "SELECT COUNT(Products.product_name ) FROM (SELECT Products.product_type_code , COUNT(Products.product_name ) AS num FROM (SELECT product_type_code , product_name FROM customers_and_orders.Products INNER JOIN (SELECT product_type_code FROM (SELECT product_type_code FROM customers_and_orders.Products ORDER BY Products.order_id LIMIT 1) AS T WHERE product_name = '"
  },
  {
    "id": 248,
    "db_id": "customers_and_orders",
    "question": "Count the number of products of the type Hardware.",
    "answer": "SELECT COUNT(Products.product_name ) FROM (SELECT Products.product_type_code , COUNT(Products.product_name ) AS num FROM (SELECT product_type_code , Products.product_name FROM (SELECT Products.product_type_code , COUNT(Products.product_name ), Products.product_price , COUNT(Products.product_name ) FROM customers_and_orders.Products WHERE product_type_"
  },
  {
    "id": 249,
    "db_id": "customers_and_orders",
    "question": "Show all product names with price higher than the average.",
    "answer": "SELECT DISTINCT product_name FROM (SELECT AVG(product_price ) AS sum FROM (SELECT DISTINCT product_id , SUM(order_quantity ) AS total FROM customers_and_orders.Order_Items GROUP BY product_id ORDER BY address_details LIMIT 1) AS T ORDER BY address_details LIMIT 1200000000000000000000000"
  },
  {
    "id": 250,
    "db_id": "customers_and_orders",
    "question": "What are the names of products that have a price above the average for all products.",
    "answer": "SELECT product_name FROM (SELECT DISTINCT product_name , SUM(product_price ) AS sum FROM (SELECT DISTINCT product_id , SUM(product_price ) AS sum FROM customers_and_orders.Order_Items GROUP BY product_name ORDER BY product_price LIMIT 1)) AS T ORDER BY Addresses.product_name LIMIT 10000000000000000"
  },
  {
    "id": 251,
    "db_id": "customers_and_orders",
    "question": "Show all hardware product names with price higher than the average price of hardware type products.",
    "answer": "SELECT DISTINCT product_name FROM (SELECT product_type_code , SUM(product_price ) AS sum FROM (SELECT DISTINCT product_type_code FROM (SELECT product_type_code , SUM(product_price ) AS sum FROM (SELECT product_type_code , SUM(product_price ) AS total_price FROM (SELECT product_id , product_price , product_name FROM customers_and_orders.Order_Items GROUP BY product_id"
  },
  {
    "id": 252,
    "db_id": "customers_and_orders",
    "question": "What are the names of Hardware product with prices above the average price of Hardware products.",
    "answer": "SELECT DISTINCT product_name FROM (SELECT product_name FROM (SELECT product_price FROM (SELECT product_price FROM customers_and_orders.Products ORDER BY customer_number , order_quantity LIMIT 1) AS T INNER JOIN (SELECT MIN(order_quantity ) AS min FROM (SELECT product_price FROM customers_and_orders.Products GROUP BY product_name ORDER BY product_price ) AS T INNER JOIN (SELECT DIST"
  },
  {
    "id": 253,
    "db_id": "customers_and_orders",
    "question": "What is the name of the most expensive product with type Clothes?",
    "answer": "SELECT DISTINCT product_name FROM (SELECT product_type_code , SUM(product_price ) AS total FROM (SELECT product_type_code , SUM(product_price ) AS total FROM (SELECT product_id , product_price FROM customers_and_orders.Products ORDER BY order_quantity LIMIT 1) GROUP BY product_name ORDER BY product_name , product_type_code , product_price LIMIT 1) AS T ORDER BY"
  },
  {
    "id": 254,
    "db_id": "customers_and_orders",
    "question": "Give the name of the most expensive Clothes product.",
    "answer": "SELECT DISTINCT product_name FROM (SELECT MAX(product_price ) AS q1 , SUM(product_price ) AS total FROM (SELECT product_id , SUM(product_price ) AS sum FROM (SELECT product_id , product_type_code FROM customers_and_orders.Products WHERE order_quantity > 3 GROUP BY product_id ORDER BY product_price LIMIT 1) AS T ORDER BY product_name LIMIT 1) AS q ORDER BY"
  },
  {
    "id": 255,
    "db_id": "customers_and_orders",
    "question": "What is the product id and product name for the cheapest Hardware type product?",
    "answer": "SELECT DISTINCT product_name FROM (SELECT DISTINCT product_name , MAX(product_price ) AS price FROM (SELECT DISTINCT product_type_code , product_name FROM customers_and_orders.Products ORDER BY customer_id LIMIT 1) AS T ORDER BY product_price LIMIT 2500000) AS t GROUP BY product_name ORDER BY product_price LIMIT 1000000"
  },
  {
    "id": 256,
    "db_id": "customers_and_orders",
    "question": "Give the id and name of the cheapest Hardware product.",
    "answer": "SELECT DISTINCT product_name FROM (SELECT DISTINCT product_name , AVG(product_price ) AS avg_price FROM (SELECT DISTINCT product_id , product_type_code , product_price FROM (SELECT DISTINCT product_id , product_type_code , product_price FROM customers_and_orders.Order_Items WHERE order_item_id = 'XXXXX') AS T ORDER BY product_name LIMIT 1)"
  },
  {
    "id": 257,
    "db_id": "customers_and_orders",
    "question": "List all product names in descending order of price.",
    "answer": "SELECT DISTINCT product_name FROM (SELECT DISTINCT product_name , AVG(product_price ) AS minPrice FROM (SELECT DISTINCT product_name , product_price FROM customers_and_orders.Order_Items GROUP BY product_id ORDER BY product_price LIMIT 1) AS T ORDER BY product_name LIMIT 1) GROUP BY product_name ORDER BY product_price LIMIT 100000000000"
  },
  {
    "id": 258,
    "db_id": "customers_and_orders",
    "question": "What are the names of the products, sorted by descending price?",
    "answer": "SELECT product_name FROM (SELECT DISTINCT product_name , product_price FROM (SELECT DISTINCT product_id , product_price FROM customers_and_orders.Order_Items WHERE order_status_code = 'Invoice' ORDER BY product_price LIMIT 1) AS T ORDER BY product_price LIMIT 1) AS T ORDER BY product_name LIMIT 2000000000000000000"
  },
  {
    "id": 259,
    "db_id": "customers_and_orders",
    "question": "Show all hardware type products in ascending order of price.",
    "answer": "SELECT DISTINCT product_name FROM (SELECT DISTINCT product_type_code , MAX(product_price ) AS maxPrice FROM (SELECT DISTINCT product_id , MAX(product_price ) AS minPrice FROM (SELECT DISTINCT product_name FROM (SELECT DISTINCT product_type_code , MAX(product_price ) AS maxPrice FROM (SELECT DISTINCT product_id , MIN(product_price ) AS minPrice FROM (SELECT"
  },
  {
    "id": 260,
    "db_id": "customers_and_orders",
    "question": "What are the names of all Hardware products, sorted by price ascending?",
    "answer": "SELECT product_name FROM (SELECT DISTINCT product_name , product_price FROM (SELECT DISTINCT product_type_code , product_price FROM (SELECT DISTINCT product_id FROM (SELECT product_id , SUM(product_price ) AS num FROM (SELECT product_id , product_price FROM (SELECT product_id , product_price FROM (SELECT DISTINCT product_id , product_name FROM (SELECT DISTINCT product_type_code"
  },
  {
    "id": 261,
    "db_id": "customers_and_orders",
    "question": "List all product type codes and the number of products in each type.",
    "answer": "SELECT DISTINCT product_type_code , COUNT(product_name ) FROM (SELECT DISTINCT product_type_code FROM customers_and_orders.Products GROUP BY product_type_code ORDER BY product_name LIMIT 1) AS T WHERE product_type_code = 'products' GROUP BY product_type_code ORDER BY product_price LIMIT 100000000000000000000"
  },
  {
    "id": 262,
    "db_id": "customers_and_orders",
    "question": "How many products are there for each product type?",
    "answer": "SELECT SUM(product_type_code ), COUNT(product_type_code ) FROM (SELECT DISTINCT product_type_code , product_name FROM customers_and_orders.Products GROUP BY product_type_code ORDER BY product_price LIMIT 1) AS T WHERE product_type_code = 'product_types' GROUP BY product_name ORDER BY product_type_code LIMIT 100"
  },
  {
    "id": 263,
    "db_id": "customers_and_orders",
    "question": "Show all product type codes and the average price for each type.",
    "answer": "SELECT DISTINCT product_type_code , SUM(product_price ) AS total FROM (SELECT DISTINCT product_type_code , AVG(product_price ) AS sum FROM (SELECT DISTINCT product_type_code , product_name , COUNT(product_id ) AS num FROM customers_and_orders.Order_Items GROUP BY product_type_code , product_name ORDER BY Addresses.customer_number ) AS T ORDER"
  },
  {
    "id": 264,
    "db_id": "customers_and_orders",
    "question": "What is the average price of products for each product type?",
    "answer": "SELECT AVG(product_price ) FROM (SELECT DISTINCT product_type_code , SUM(product_price ) AS total FROM (SELECT product_type_code , SUM(product_price ) FROM (SELECT DISTINCT product_name FROM (SELECT product_name FROM customers_and_orders.Products GROUP BY product_name ORDER BY product_name LIMIT 1) AS T ) AS c ORDER BY product_type_code ) AS T GROUP BY product"
  },
  {
    "id": 265,
    "db_id": "customers_and_orders",
    "question": "What are the product type code with at least two products?",
    "answer": "SELECT DISTINCT product_type_code FROM (SELECT DISTINCT product_name , SUM(product_price ) AS total_price FROM (SELECT DISTINCT product_name FROM customers_and_orders.Products GROUP BY product_name ) AS T GROUP BY product_name ORDER BY product_id LIMIT 20) AS T GROUP BY product_type_code ORDER BY product_id LIMIT 1504637892"
  },
  {
    "id": 266,
    "db_id": "customers_and_orders",
    "question": "Give the product type codes of product types that have two or more products.",
    "answer": "SELECT DISTINCT product_type_code FROM (SELECT DISTINCT product_name , COUNT(product_id ) AS num FROM (SELECT DISTINCT product_name , product_price , COUNT(product_id ) AS num FROM (SELECT DISTINCT product_name , product_price FROM customers_and_orders.Products GROUP BY product_name , product_price ORDER BY product_id , product_price LIMIT 1)) AS T INNER JOIN ("
  },
  {
    "id": 267,
    "db_id": "customers_and_orders",
    "question": "What is the product type code with most number of products?",
    "answer": "SELECT DISTINCT product_type_code FROM (SELECT DISTINCT product_name , COUNT(order_quantity ) AS num FROM (SELECT DISTINCT product_id , order_quantity FROM (SELECT order_item_id FROM customers_and_orders.Order_Items GROUP BY order_item_id ORDER BY order_quantity LIMIT 1) AS T ORDER BY order_quantity LIMIT 1) AS t ORDER BY order_quantity LIMIT "
  },
  {
    "id": 268,
    "db_id": "customers_and_orders",
    "question": "What is the most frequent product type code?",
    "answer": "SELECT DISTINCT product_type_code FROM (SELECT DISTINCT product_name , COUNT(product_type_code ) AS num FROM (SELECT DISTINCT product_type_code FROM customers_and_orders.Products ORDER BY order_item_id LIMIT 1) AS T WHERE product_type_code = 'MULTI' GROUP BY product_name ORDER BY product_name , product_price LIMIT 1) AS T ORDER BY product_"
  },
  {
    "id": 269,
    "db_id": "customers_and_orders",
    "question": "How many customers do we have?",
    "answer": "SELECT COUNT(customer_id ) FROM customers_and_orders.Order_Items AS T ORDER BY order_item_id LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 270,
    "db_id": "customers_and_orders",
    "question": "Count the number of customers.",
    "answer": "SELECT COUNT(customer_id ) FROM (SELECT DISTINCT customer_id FROM customers_and_orders.Customer_Orders GROUP BY customer_id ORDER BY customer_id LIMIT 1) AS T ORDER BY customer_id LIMIT 10000000000000000000000000000000000000000000000"
  },
  {
    "id": 271,
    "db_id": "customers_and_orders",
    "question": "Show all customer ids and customer names.",
    "answer": "SELECT DISTINCT customer_id FROM customers_and_orders.Order_Items WHERE order_item_id = (SELECT order_item_id FROM customers_and_orders.Customer_Orders GROUP BY customer_id ORDER BY customer_name LIMIT 1) ORDER BY customer_id , order_item_id LIMIT 10000000000000000000000000000"
  },
  {
    "id": 272,
    "db_id": "customers_and_orders",
    "question": "What are the ids and names of all customers?",
    "answer": "SELECT DISTINCT customer_id FROM customers_and_orders.Order_Items AS T ORDER BY order_item_id LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 273,
    "db_id": "customers_and_orders",
    "question": "What is the customer address, customer phone, and customer email for Jeromy?",
    "answer": "SELECT DISTINCT customer_address FROM customers_and_orders.Customer_Orders WHERE order_status_code = 'pending' ORDER BY customer_number LIMIT 1000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 274,
    "db_id": "customers_and_orders",
    "question": "Give the address, phone, and email for customers with the name Jeromy.",
    "answer": "SELECT DISTINCT address_details FROM customers_and_orders.Addresses AS T WHERE customer_name = 'Jeromy' ORDER BY address_id LIMIT 1000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 275,
    "db_id": "customers_and_orders",
    "question": "Show all payment method codes and the number of customers in each code.",
    "answer": "SELECT DISTINCT payment_method_code , COUNT(customer_number ) FROM customers_and_orders.Order_Items GROUP BY payment_method_code ORDER BY payment_method_code , order_quantity LIMIT 1000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 276,
    "db_id": "customers_and_orders",
    "question": "How many customers use each payment method?",
    "answer": "SELECT SUM(Products.payment_method_code ) FROM (SELECT DISTINCT product_name FROM customers_and_orders.Order_Items ORDER BY payment_method_code LIMIT 1) AS T INNER JOIN (SELECT Products.product_type_code , SUM(product_price ) FROM customers_and_orders.Customer_Orders WHERE order_status_code = 'Completed' GROUP BY p"
  },
  {
    "id": 277,
    "db_id": "customers_and_orders",
    "question": "What is the payment method code used by most number of customers?",
    "answer": "SELECT DISTINCT product_type_code FROM (SELECT DISTINCT product_name FROM customers_and_orders.Products ORDER BY customer_number LIMIT 1) AS t GROUP BY product_name ORDER BY product_type_code LIMIT 100000000000000000000000000000000000000000"
  },
  {
    "id": 278,
    "db_id": "customers_and_orders",
    "question": "Give the code of the payment method that is most commonly used.",
    "answer": "SELECT DISTINCT product_name FROM (SELECT DISTINCT product_name FROM customers_and_orders.Order_Items GROUP BY product_name ORDER BY product_name LIMIT 1) AS T ORDER BY product_name LIMIT 10000000000000000000000000000000000000000000"
  },
  {
    "id": 279,
    "db_id": "customers_and_orders",
    "question": "Show all customer names with the  payment method code used by least number of customers.",
    "answer": "SELECT DISTINCT customer_name FROM (SELECT DISTINCT MAX(order_id ) AS n , COUNT(order_item_id ) AS num FROM (SELECT DISTINCT order_item_id , order_quantity FROM (SELECT DISTINCT product_id , order_quantity FROM (SELECT DISTINCT product_id FROM customers_and_orders.Products WHERE payment_method_code = 'cvc' GROUP BY order_id ORDER BY order_quantity"
  },
  {
    "id": 280,
    "db_id": "customers_and_orders",
    "question": "What are the names of customers who use the least common payment method?",
    "answer": "SELECT DISTINCT customer_name FROM (SELECT DISTINCT customer_number FROM customers_and_orders.Order_Items GROUP BY customer_number ORDER BY customer_number LIMIT 1) AS t ORDER BY customer_number LIMIT 1;"
  },
  {
    "id": 281,
    "db_id": "customers_and_orders",
    "question": "What is the payment method and customer number for customer named Jeromy?",
    "answer": "SELECT DISTINCT product_name FROM customers_and_orders.Customer_Orders INNER JOIN (SELECT DISTINCT product_name , payment_method_code , customer_number , customer_address FROM customers_and_orders.Addresses WHERE customer_name = 'jeromy' ORDER BY address_details LIMIT 1) AS r  ON product_name = 'order item number: #06387942"
  },
  {
    "id": 282,
    "db_id": "customers_and_orders",
    "question": "Give the payment method code and customer number corresponding to the customer named Jeromy.",
    "answer": "SELECT DISTINCT product_name , customer_number FROM (SELECT DISTINCT product_name , customer_number FROM customers_and_orders.Customer_Orders) AS T INNER JOIN (SELECT DISTINCT payment_method_code , customer_number FROM customers_and_orders.Customers) AS T  ON product_name = '"
  },
  {
    "id": 283,
    "db_id": "customers_and_orders",
    "question": "What are the distinct payment methods used by customers?",
    "answer": "SELECT DISTINCT payment_method_code FROM customers_and_orders.Customer_Orders GROUP BY payment_method_code ORDER BY payment_method_code LIMIT 10000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 284,
    "db_id": "customers_and_orders",
    "question": "Give the different payment method codes that customers use.",
    "answer": "SELECT DISTINCT payment_method_code FROM (SELECT DISTINCT product_name , COUNT(order_quantity ) AS num FROM (SELECT DISTINCT product_id FROM customers_and_orders.Order_Items GROUP BY product_id ORDER BY product_name LIMIT 1) ORDER BY product_name , order_quantity LIMIT 1);"
  },
  {
    "id": 285,
    "db_id": "customers_and_orders",
    "question": "Show the id and the product type for all products, order by product name.",
    "answer": "SELECT DISTINCT product_id , product_type_code FROM (SELECT DISTINCT product_name , product_type_code FROM (SELECT DISTINCT product_name , product_type_code FROM (SELECT DISTINCT product_name FROM (SELECT * FROM (SELECT DISTINCT product_type_code FROM (SELECT DISTINCT product_name , product_type_code FROM (SELECT DISTINCT product_name FROM (SELECT DISTINCT product_type"
  },
  {
    "id": 286,
    "db_id": "customers_and_orders",
    "question": "What are the ids and product types for all products, sorted alphabetically by product name?",
    "answer": "SELECT DISTINCT product_id FROM (SELECT DISTINCT product_type_code , product_name FROM customers_and_orders.Products ORDER BY product_name LIMIT 1) AS t ORDER BY product_name LIMIT 100000000000000000000000000000000000000000000000000"
  },
  {
    "id": 287,
    "db_id": "customers_and_orders",
    "question": "What is the product type with least number of products?",
    "answer": "SELECT DISTINCT product_type_code FROM (SELECT DISTINCT product_type_code FROM customers_and_orders.Products GROUP BY product_type_code ORDER BY product_price LIMIT 1) AS T ORDER BY product_name LIMIT 10000000000000000000000000000000000000000000"
  },
  {
    "id": 288,
    "db_id": "customers_and_orders",
    "question": "What is the code of the product type that is least common?",
    "answer": "SELECT DISTINCT product_type_code FROM (SELECT DISTINCT product_name FROM customers_and_orders.Products GROUP BY product_name ORDER BY product_price LIMIT 1) AS t ORDER BY product_price LIMIT 1;"
  },
  {
    "id": 289,
    "db_id": "customers_and_orders",
    "question": "How many customer orders do we have?",
    "answer": "SELECT COUNT(order_item_id ) FROM (SELECT DISTINCT order_item_id FROM (SELECT DISTINCT product_id , SUM(order_quantity ) AS total FROM (SELECT * FROM customers_and_orders.Order_Items WHERE order_status_code = 'Completed' GROUP BY product_id ORDER BY Customers.customer_number LIMIT 1) AS T INNER JOIN customers_and_orders.Order_Items AS O  ON"
  },
  {
    "id": 290,
    "db_id": "customers_and_orders",
    "question": "Count the number of customer orders.",
    "answer": "SELECT COUNT(order_id ) FROM (SELECT DISTINCT customer_id , order_quantity FROM customers_and_orders.Order_Items GROUP BY customer_id ORDER BY Order_Items.order_quantity LIMIT 1) AS t WHERE product_id = 'xyz' GROUP BY product_id ORDER BY product_id LIMIT 200000000037658200000000"
  },
  {
    "id": 291,
    "db_id": "customers_and_orders",
    "question": "Show the order ids, order dates, and order status codes for all orders by customer Jeromy.",
    "answer": "SELECT DISTINCT order_item_id , order_date FROM (SELECT order_id , order_quantity , order_status_code FROM (SELECT DISTINCT order_item_id , SUM(order_quantity ) AS total FROM customers_and_orders.Order_Items GROUP BY customer_id ORDER BY order_date LIMIT 1)) AS T ORDER BY product_id , order_date LIMIT 1000000000"
  },
  {
    "id": 292,
    "db_id": "customers_and_orders",
    "question": "What were the ids, dates, and status codes for orders made by Jeromy?",
    "answer": "SELECT DISTINCT order_item_id FROM customers_and_orders.Order_Items WHERE customer_name = 'Jeromy' ORDER BY order_date LIMIT 10000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 293,
    "db_id": "customers_and_orders",
    "question": "Show all customer names, ids and the number of orders by each customer.",
    "answer": "SELECT DISTINCT customer_name , customer_id FROM (SELECT DISTINCT customer_id , COUNT(order_item_id ) AS num FROM (SELECT DISTINCT customer_id FROM customers_and_orders.Order_Items ORDER BY order_id LIMIT 1) AS T INNER JOIN customers_and_orders.Customer_Orders AS Q  ON order_item_id = Products.order_item_id GROUP BY customer_name"
  },
  {
    "id": 294,
    "db_id": "customers_and_orders",
    "question": "What are the names, ids, and number of orders made for each customer?",
    "answer": "SELECT DISTINCT customer_name , COUNT(customer_number ) FROM customers_and_orders.Order_Items GROUP BY customer_id ORDER BY customer_name , order_quantity LIMIT 10000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 295,
    "db_id": "customers_and_orders",
    "question": "What is the customer id, name, phone, and email for the customer with most orders?",
    "answer": "SELECT DISTINCT customers_and_orders.customer_id FROM (SELECT MAX(order_id ) AS id FROM customers_and_orders.Customer_Orders GROUP BY customer_id ORDER BY customer_number LIMIT 1) AS T ORDER BY order_quantity LIMIT 100000000596243480000000000000000000000"
  },
  {
    "id": 296,
    "db_id": "customers_and_orders",
    "question": "Give the id, name, phone, and email corresponding to the customer who made the most orders.",
    "answer": "SELECT DISTINCT product_id , customer_number , customer_name , customer_address , customer_phone FROM customers_and_orders.Order_Items GROUP BY product_id ORDER BY customer_id LIMIT 100000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 297,
    "db_id": "customers_and_orders",
    "question": "Show all order status and the number of orders in each status.",
    "answer": "SELECT DISTINCT order_status_code , COUNT(order_id ) FROM customers_and_orders.Order_Items GROUP BY order_status_code ORDER BY order_status_code LIMIT 1000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 298,
    "db_id": "customers_and_orders",
    "question": "How many orders have each order status code?",
    "answer": "SELECT SUM(order_status_code ) FROM customers_and_orders.Order_Items GROUP BY Order_Items.order_item_id ORDER BY order_status_code , Order_Items.order_quantity LIMIT 1000000000000000000000000000000000000000000000000"
  },
  {
    "id": 299,
    "db_id": "customers_and_orders",
    "question": "What is the order status code that is most common?",
    "answer": "SELECT DISTINCT SUM(order_status_code ) FROM customers_and_orders.Order_Items GROUP BY order_item_id ORDER BY order_status_code LIMIT 100000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 300,
    "db_id": "customers_and_orders",
    "question": "Give the order status code that is most frequent across customer orders.",
    "answer": "SELECT DISTINCT SUM(order_status_code ) FROM customers_and_orders.Order_Items GROUP BY customer_number ORDER BY product_id LIMIT 100000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 301,
    "db_id": "customers_and_orders",
    "question": "How many customers do not have an order?",
    "answer": "SELECT COUNT(customer_id ) FROM (SELECT DISTINCT customer_id FROM customers_and_orders.Order_Items WHERE Order_Items.order_item_id = 0 GROUP BY customer_id ORDER BY Customer_Orders.customer_number LIMIT 1) AS T GROUP BY customer_id LIMIT 10000000000000000000000000000"
  },
  {
    "id": 302,
    "db_id": "customers_and_orders",
    "question": "Count the number of customers who have not made an order.",
    "answer": "SELECT COUNT(customer_id ) FROM (SELECT DISTINCT customer_id FROM (SELECT * FROM customers_and_orders.Customer_Orders GROUP BY customer_id ORDER BY Customer_Orders.order_quantity LIMIT 1) AS T GROUP BY customer_id ORDER BY Customer_Orders.customer_number , Customer_Orders.payment_method_code LIMIT 1) AS D WHERE Customer_Orders"
  },
  {
    "id": 303,
    "db_id": "customers_and_orders",
    "question": "Show all product names without an order.",
    "answer": "SELECT DISTINCT product_name FROM (SELECT DISTINCT product_name FROM customers_and_orders.Order_Items WHERE order_quantity = 0 GROUP BY product_id ORDER BY product_name LIMIT 1) AS T ORDER BY product_name LIMIT 1"
  },
  {
    "id": 304,
    "db_id": "customers_and_orders",
    "question": "What are the names of products that have not been ordered?",
    "answer": "SELECT DISTINCT product_name FROM (SELECT DISTINCT product_name FROM customers_and_orders.Order_Items WHERE order_status_code = 'PENDING' GROUP BY product_id ORDER BY product_name LIMIT 1) AS x INNER JOIN customers_and_orders.Customers AS y  ON Addresses.product_id = address_details ORDER BY address_det"
  },
  {
    "id": 305,
    "db_id": "customers_and_orders",
    "question": "How many products named Monitor have been ordered?",
    "answer": "SELECT COUNT(Products.product_name ) FROM (SELECT Products.product_name FROM (SELECT DISTINCT product_name FROM customers_and_orders.Order_Items GROUP BY product_name ORDER BY Products.order_quantity LIMIT 1) AS T INNER JOIN (SELECT DISTINCT product_id , SUM(order_quantity ) FROM (SELECT DISTINCT product_id FROM customers_and_orders.Order_Items WHERE order_status_"
  },
  {
    "id": 306,
    "db_id": "customers_and_orders",
    "question": "What is the total number of Monitor products that have been ordered?",
    "answer": "SELECT COUNT(order_item_id ) FROM (SELECT DISTINCT product_name , order_quantity FROM (SELECT DISTINCT product_name , order_quantity FROM (SELECT DISTINCT product_name , order_quantity FROM (SELECT product_name FROM customers_and_orders.Products WHERE payment_method_code = 'monitor') GROUP BY product_name ) AS T ORDER BY order_quantity LIMIT 1) AS T ORDER BY order_quantity"
  },
  {
    "id": 307,
    "db_id": "customers_and_orders",
    "question": "How many customers have ordered the product named Monitor?",
    "answer": "SELECT COUNT(customer_name ) FROM (SELECT DISTINCT product_name FROM (SELECT product_id , SUM(order_quantity ) AS sum FROM (SELECT DISTINCT product_id , product_type_code FROM customers_and_orders.Products) AS T ORDER BY product_name ) AS t GROUP BY customer_name ORDER BY customer_number LIMIT 1000000000000000000"
  },
  {
    "id": 308,
    "db_id": "customers_and_orders",
    "question": "Count the number of different customers who have bought a Monitor Product.",
    "answer": "SELECT COUNT(customer_id ) FROM (SELECT DISTINCT customer_id FROM customers_and_orders.Order_Items WHERE product_type_code = 'monitor') AS T INNER JOIN (SELECT DISTINCT customer_id FROM (SELECT DISTINCT product_name , product_price , customer_number , customer_address FROM customers_and_orders.Customer_Orders) AS T GROUP BY customer_id ORDER BY customer_number ) AS T "
  },
  {
    "id": 309,
    "db_id": "customers_and_orders",
    "question": "How many customers have an order?",
    "answer": "SELECT COUNT(customer_id ) FROM customers_and_orders.Order_Items WHERE Order_Items.order_item_id = 'order' GROUP BY customer_id ORDER BY customer_number , customer_name LIMIT 100000000000000000000000000000000000000000000000000"
  },
  {
    "id": 310,
    "db_id": "customers_and_orders",
    "question": "Count the number of differnt customers who have made an order.",
    "answer": "SELECT COUNT(customer_id ) FROM (SELECT DISTINCT customer_id FROM (SELECT product_name , COUNT(order_item_id ) AS num FROM (SELECT DISTINCT product_id , product_name FROM customers_and_orders.Order_Items GROUP BY customer_id ORDER BY Customer_Orders.order_quantity LIMIT 1)) AS T WHERE product_type_code = 'product' GROUP BY customer_id ORDER BY customer_"
  },
  {
    "id": 311,
    "db_id": "customers_and_orders",
    "question": "Show all customer ids without an order.",
    "answer": "SELECT DISTINCT Customer_Orders.customer_id FROM (SELECT DISTINCT customer_id FROM customers_and_orders.Order_Items WHERE Customer_Orders.order_item_id = 'order_no' LIMIT 1) AS T ORDER BY customer_id LIMIT 2500000000000000000000000000000"
  },
  {
    "id": 312,
    "db_id": "customers_and_orders",
    "question": "What are the ids of customers who have not made an order?",
    "answer": "SELECT DISTINCT customer_id FROM (SELECT DISTINCT customer_id FROM customers_and_orders.Customer_Orders GROUP BY customer_id ORDER BY customer_number LIMIT 1) AS T ORDER BY customer_id LIMIT 10000000000000000000000000000000000000"
  },
  {
    "id": 313,
    "db_id": "customers_and_orders",
    "question": "Show all the order dates and ids of the orders with quantity of any product larger than 6 or with more than 3 products.",
    "answer": "SELECT DISTINCT SUM(order_date ) AS sum , Order_Items.order_item_id FROM customers_and_orders.Order_Items INNER JOIN (SELECT DISTINCT order_date FROM customers_and_orders.Order_Items WHERE customer_number = 13579820085466) AS t  ON Order_Items.order_item_id = 'order-3029' GROUP BY order"
  },
  {
    "id": 314,
    "db_id": "customers_and_orders",
    "question": "What are the order ids and corresponding order dates for orders with a quantity greater than 6 or consisting of more than 3 products?",
    "answer": "SELECT DISTINCT SUM(order_quantity ) FROM (SELECT MAX(order_quantity ), MIN(order_quantity ) AS j FROM (SELECT product_id , COUNT(order_quantity ) AS qr FROM (SELECT * FROM customers_and_orders.Order_Items GROUP BY order_id , customer_number ORDER BY Order_Items.order_item_id LIMIT 1)) AS T ORDER BY Addresses.address_id LIMIT 200"
  },
  {
    "id": 315,
    "db_id": "region_building",
    "question": "How many buildings are there?",
    "answer": "SELECT COUNT(Building_ID ) FROM region_building.building WHERE Name = 'Hong Kong City' LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 316,
    "db_id": "region_building",
    "question": "Count the number of buildings.",
    "answer": "SELECT COUNT(Building_ID ) FROM region_building.region WHERE Name = 'Northwest Region' LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 317,
    "db_id": "region_building",
    "question": "List the names of buildings in ascending order of number of stories.",
    "answer": "SELECT DISTINCT Name FROM region_building.region ORDER BY Number_of_Stories LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 318,
    "db_id": "region_building",
    "question": "What is the list of building names, sorted by the number of stories of each building in ascending order?",
    "answer": "SELECT DISTINCT Building_ID FROM region_building.building ORDER BY Number_of_Stories LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 319,
    "db_id": "region_building",
    "question": "List the addresses of buildings in descending order of building completion year.",
    "answer": "SELECT DISTINCT Building_ID FROM region_building.building ORDER BY Completed_Year LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 320,
    "db_id": "region_building",
    "question": "Sort the buildings in descending order of building completion year, and return the building addresses.",
    "answer": "SELECT DISTINCT Building_ID FROM region_building.building ORDER BY Completed_Year LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 321,
    "db_id": "region_building",
    "question": "What is the maximum number of stories of buildings not completed in 1980?",
    "answer": "SELECT COUNT(building.Building_ID ) FROM region_building.region AS T INNER JOIN region_building.building AS B  ON Building_ID = building.Region_ID GROUP BY Building_ID ORDER BY Area , Population LIMIT 100000000000000000000000000000000000000"
  },
  {
    "id": 322,
    "db_id": "region_building",
    "question": "Among the buildings not completed in 1980, what is the maximum number of stories?",
    "answer": "SELECT SUM(Building_ID ) FROM region_building.building WHERE Completed_Year < 2003 GROUP BY building.Region_ID ORDER BY Region_ID LIMIT 1400000000597986550000000000000000000000000000000000000000"
  },
  {
    "id": 323,
    "db_id": "region_building",
    "question": "What is the average population for all regions?",
    "answer": "SELECT SUM(Population ) FROM region_building.region WHERE Region_ID = (SELECT MAX(Region_ID ) FROM region_building.region GROUP BY Region_ID ORDER BY Population ) LIMIT 10000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 324,
    "db_id": "region_building",
    "question": "Compute the average population of a region.",
    "answer": "SELECT SUM(Population ) FROM region_building.region WHERE Region_ID = 1 GROUP BY Name ORDER BY Population LIMIT 100000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 325,
    "db_id": "region_building",
    "question": "What are the names of regions in ascending alphabetical order?",
    "answer": "SELECT DISTINCT region.Name FROM region_building.region AS T INNER JOIN region_building.region AS R  ON Region_ID = Population ORDER BY Name , Region_ID LIMIT 1;"
  },
  {
    "id": 326,
    "db_id": "region_building",
    "question": "List the names of regions in alphabetical order.",
    "answer": "SELECT DISTINCT region.Name FROM region_building.building AS T INNER JOIN region_building.region AS R  ON Region_ID =  Building_ID ORDER BY Name LIMIT 1"
  },
  {
    "id": 327,
    "db_id": "region_building",
    "question": "What are the capitals of the regions with area bigger than 10000?",
    "answer": "SELECT SUM(Population ) FROM region_building.region GROUP BY Region_ID ORDER BY Area LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 328,
    "db_id": "region_building",
    "question": "Give me the capitals of the regions whose area is larger than 10000.",
    "answer": "SELECT DISTINCT MAX(Capital ) FROM region_building.region WHERE Area > 10000 LIMIT 1"
  },
  {
    "id": 329,
    "db_id": "region_building",
    "question": "List the capital of the region with the largest population.",
    "answer": "SELECT MAX(Region_ID ) FROM (SELECT DISTINCT Name FROM region_building.region GROUP BY Region_ID ORDER BY Population LIMIT 1) AS T INNER JOIN region_building.building AS B  ON Building_ID = 12563801742873892002 ORDER BY Region_ID , Population LIMIT 100000000000"
  },
  {
    "id": 330,
    "db_id": "region_building",
    "question": "Which region has the largest population? Give me the capital of the region.",
    "answer": "SELECT DISTINCT region.Name FROM region_building.region AS T INNER JOIN (SELECT SUM(region.Population ) AS num FROM region_building.region AS T INNER JOIN (SELECT DISTINCT Region_ID FROM region_building.region AS T GROUP BY Region_ID ORDER BY Area LIMIT 1) AS T  ON Area = (SELECT SUM(Area ) FROM (SELECT DISTINCT Region_ID FROM region_building.region AS T"
  },
  {
    "id": 331,
    "db_id": "region_building",
    "question": "List the names of the regions with the top 5 largest areas.",
    "answer": "SELECT DISTINCT region.Name FROM region_building.region AS T INNER JOIN (SELECT DISTINCT region_building.Capital , SUM(Region_ID ) FROM region_building.region AS T INNER JOIN region_building.region AS R  ON region_building.Region_ID = Region_ID GROUP BY region.Name ORDER BY Area LIMIT 5) AS t  ON region_building.Region_ID ="
  },
  {
    "id": 332,
    "db_id": "region_building",
    "question": "What are the names of the 5 largest regions in terms of area?",
    "answer": "SELECT DISTINCT region.Name FROM region_building.region AS T INNER JOIN (SELECT DISTINCT Name FROM region_building.region GROUP BY Name ORDER BY Area LIMIT 5) AS T  ON Population = '2' ORDER BY Number_of_Stories LIMIT 5000136797384262745498648280646118995445"
  },
  {
    "id": 333,
    "db_id": "region_building",
    "question": "Show the names of buildings and the names of regions they are in.",
    "answer": "SELECT DISTINCT Building_ID , Region_ID FROM region_building.region AS T INNER JOIN region_building.building AS T  ON Building_ID = Building_ID GROUP BY Building_ID , Region_ID ORDER BY Name LIMIT 100000000000000000000000000000000000"
  },
  {
    "id": 334,
    "db_id": "region_building",
    "question": "For each building, return the name of the building and the name of the region it belongs to.",
    "answer": "SELECT DISTINCT Name , Region_ID FROM region_building.building AS T ORDER BY Region_ID LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 335,
    "db_id": "region_building",
    "question": "Show the names of regions that have more than one building.",
    "answer": "SELECT DISTINCT region.Name FROM region_building.region AS T INNER JOIN region_building.region AS S  ON region.Region_ID = 1 GROUP BY region.Name ORDER BY Area LIMIT 1"
  },
  {
    "id": 336,
    "db_id": "region_building",
    "question": "Which regions have more than one building? Give me the names of the regions.",
    "answer": "SELECT DISTINCT region.Name FROM region_building.region AS T INNER JOIN region_building.region AS B  ON Building_ID = Population LIMIT 1 OFFSET 0"
  },
  {
    "id": 337,
    "db_id": "region_building",
    "question": "Show the capital of the region that has the most buildings.",
    "answer": "SELECT MAX(Name ) FROM region_building.region WHERE Region_ID = (SELECT MAX(Region_ID ) FROM region_building.region GROUP BY Region_ID ORDER BY Number_of_Stories LIMIT 1) ORDER BY Number_of_Stories LIMIT 1000000000000000000000000000000000000000000"
  },
  {
    "id": 338,
    "db_id": "region_building",
    "question": "Which region has the largest number of buildings? Show me the capital of the region.",
    "answer": "SELECT SUM(Region_ID ) FROM (SELECT MAX(Capital ), Region_ID FROM region_building.region GROUP BY Capital ORDER BY Number_of_Stories LIMIT 1) AS T WHERE Capital = 'Total' ORDER BY Name LIMIT 1500000004596878432500000000000000000000000000"
  },
  {
    "id": 339,
    "db_id": "region_building",
    "question": "Show addresses of buildings and the capitals of regions they are in.",
    "answer": "SELECT DISTINCT Building_ID , Region_ID FROM (SELECT Name , Region_ID , SUM(Completed_Year ) AS Total FROM region_building.building WHERE Address = 'address1' GROUP BY Building_ID , Region_ID ORDER BY Region_ID LIMIT 3) AS T INNER JOIN region_building.region AS B  ON Building_ID = Building_ID GROUP BY B"
  },
  {
    "id": 340,
    "db_id": "region_building",
    "question": "For each building, return the address of the building and the name of the region it belongs to.",
    "answer": "SELECT DISTINCT Address , Name FROM region_building.building AS T WHERE Region_ID = (SELECT Region_ID FROM region_building.region) GROUP BY Address ORDER BY Name LIMIT 1000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 341,
    "db_id": "region_building",
    "question": "Show the number of stories of buildings in the region with name \"Abruzzo\".",
    "answer": "SELECT COUNT(Building_ID ) FROM region_building.region AS T INNER JOIN region_building.building AS B  ON Building_ID = Building_ID GROUP BY Building_ID ORDER BY Name , Building_ID LIMIT 100000000000000000000000000000000000"
  },
  {
    "id": 342,
    "db_id": "region_building",
    "question": "Return the number of stories for each building in the region named \"Abruzzo\".",
    "answer": "SELECT SUM(building.Number_of_Stories ) FROM region_building.building AS T INNER JOIN region_building.region AS R  ON Population = Region_ID ORDER BY region_building.Name LIMIT 10000000000000000000000000000000000000000000000000"
  },
  {
    "id": 343,
    "db_id": "region_building",
    "question": "Please show each completion year and the number of buildings completed in that year.",
    "answer": "SELECT COUNT(Building_ID ), SUM(Completed_Year ) FROM (SELECT Completed_Year , COUNT(Building_ID ) AS num FROM region_building.building WHERE Region_ID = 'Region_1602773465989346418' GROUP BY Completed_Year ORDER BY Number_of_Stories LIMIT 1) AS T INNER JOIN region_building.region AS R "
  },
  {
    "id": 344,
    "db_id": "region_building",
    "question": "For completion year, return the year and the number of buildings completed.",
    "answer": "SELECT COUNT(Building_ID ) FROM region_building.region WHERE Completed_Year = '2015' GROUP BY Region_ID ORDER BY Completed_Year , Building_ID LIMIT 10000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 345,
    "db_id": "region_building",
    "question": "List the year in which the most buildings are completed.",
    "answer": "SELECT SUM(Completed_Year ) FROM region_building.region WHERE Name = 'Takahashi City' GROUP BY Name ORDER BY Number_of_Stories LIMIT 1000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 346,
    "db_id": "region_building",
    "question": "In which year did the most building constructions complete?",
    "answer": "SELECT COUNT(Building_ID ) FROM region_building.building WHERE Completed_Year > 10 ORDER BY Number_of_Stories LIMIT 1000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 347,
    "db_id": "region_building",
    "question": "List the names of regions that do not have any buildings.",
    "answer": "SELECT DISTINCT region.Name FROM region_building.region AS T INNER JOIN region_building.region AS R  ON region.Region_ID = Region_ID GROUP BY Region_ID ORDER BY Region_ID LIMIT 10000000000000000000000000000000000000000000"
  },
  {
    "id": 348,
    "db_id": "region_building",
    "question": "What are the names of regions in which there are no buildings?",
    "answer": "SELECT DISTINCT region.Name FROM region_building.region AS T INNER JOIN region_building.region AS R  ON Region_ID = Region_ID GROUP BY Region_ID ORDER BY Region_ID , Number_of_Stories LIMIT 100000000000000000000000000000000000000"
  },
  {
    "id": 349,
    "db_id": "region_building",
    "question": "Show the completed years shared by buildings with more than 20 stories and buildings with less than 15 stories.",
    "answer": "SELECT COUNT(Building_ID ) AS num FROM (SELECT DISTINCT Building_ID , SUM(Completed_Year ) AS total FROM region_building.building WHERE Number_of_Stories > 20 GROUP BY building.Region_ID ORDER BY Number_of_Stories LIMIT 1) AS T INNER JOIN region_building.region AS R  ON Building_ID = Region_ID GROUP BY building.Region"
  },
  {
    "id": 350,
    "db_id": "region_building",
    "question": "In which years did both buildings with more than 20 stories and buildings with less than 15 stories were completed?",
    "answer": "SELECT MAX(Completed_Year ) FROM region_building.region AS T INNER JOIN (SELECT DISTINCT Building_ID , COUNT(Building_ID ) AS num FROM region_building.building WHERE Number_of_Stories > 20 ORDER BY Number_of_Stories LIMIT 1) AS T  ON Area = 'U' GROUP BY Population ORDER BY Completed_Year  DESC LIMIT 1000"
  },
  {
    "id": 351,
    "db_id": "region_building",
    "question": "Show the distinct addresses of buildings.",
    "answer": "SELECT DISTINCT Building_ID FROM region_building.building WHERE Building_ID = '413' GROUP BY Building_ID ORDER BY Name LIMIT 1200000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 352,
    "db_id": "region_building",
    "question": "Give me a list of distinct building addresses.",
    "answer": "SELECT DISTINCT Building_ID FROM region_building.building WHERE Name = 'distinct address' GROUP BY Building_ID ORDER BY Region_ID  DESC LIMIT 1000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 353,
    "db_id": "region_building",
    "question": "Show the completed years of buildings in descending order of the number of stories.",
    "answer": "SELECT DISTINCT COUNT(Building_ID ), SUM(Completed_Year ) AS total FROM region_building.building GROUP BY building.Region_ID ORDER BY Completed_Year , Building_ID LIMIT 10000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 354,
    "db_id": "region_building",
    "question": "Sort buildings in descending order of the number of stories, and return their completion years.",
    "answer": "SELECT MAX(Completed_Year ) FROM region_building.building WHERE Number_of_Stories = 2 GROUP BY Building_ID ORDER BY Number_of_Stories LIMIT 10000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 355,
    "db_id": "government_shift",
    "question": "List details of all the channel in alphabetical order .",
    "answer": "SELECT DISTINCT Channel_Details FROM (SELECT DISTINCT Service_ID FROM government_shift.Customer_Interactions GROUP BY Service_ID ORDER BY Customer_ID LIMIT 1) AS T ORDER BY Service_ID LIMIT 10000000465986132755955287630509555383491645"
  },
  {
    "id": 356,
    "db_id": "government_shift",
    "question": "What is the list of channel details ordered alphabetically ?",
    "answer": "SELECT DISTINCT Channel_Details FROM (SELECT DISTINCT Channel_Details , COUNT(Channel_ID ) AS num FROM (SELECT DISTINCT Service_ID FROM (SELECT DISTINCT SUM(Service_ID ) FROM (SELECT DISTINCT Service_ID FROM (SELECT DISTINCT Services_and_Channels_Details FROM (SELECT DISTINCT Services_and_Channels_Details , COUNT(Channel_ID ) AS num FROM "
  },
  {
    "id": 357,
    "db_id": "government_shift",
    "question": "How many services are there?",
    "answer": "SELECT COUNT(Service_Details ) FROM (SELECT Service_ID FROM (SELECT DISTINCT Services.Service_ID , COUNT(Services.Service_ID ) AS num FROM (SELECT DISTINCT Services.Service_ID , COUNT(Customer_Details ) AS cnt FROM (SELECT DISTINCT Customers.Customer_ID , Services.Service_ID FROM (SELECT DISTINCT Customers.Customer_ID , Services.Service_ID FROM (SELECT DISTINCT Services"
  },
  {
    "id": 358,
    "db_id": "government_shift",
    "question": "Count the number of services.",
    "answer": "SELECT COUNT(Services_and_Channels_Details ) FROM (SELECT DISTINCT Service_ID , COUNT(Services_and_Channels_Details ) AS num FROM (SELECT Services_and_Channels_Details , COUNT(Service_Details ) AS count FROM (SELECT Service_ID , COUNT(Service_Details ) FROM (SELECT DISTINCT Service_ID , COUNT(Customer_ID ), Channel_ID FROM (SELECT DISTINCT Channel_ID , Customer"
  },
  {
    "id": 359,
    "db_id": "government_shift",
    "question": "What is the most common analytical layer type code?",
    "answer": "SELECT COUNT(Analytical_Layer_Type_Code ) FROM (SELECT DISTINCT Analytical_Layer_Type_Code , COUNT(Analytical_Layer_Type_Code ) AS Num FROM (SELECT DISTINCT Analytical_Layer_Type_Code , Customer_ID , Service_ID FROM (SELECT DISTINCT Analytical_Layer_Type_Code , COUNT(Analytical_Layer_Type_Code ) AS Num"
  },
  {
    "id": 360,
    "db_id": "government_shift",
    "question": "Find the analytical layer type code that appears most often.",
    "answer": "SELECT Analytical_Layer_Type_Code FROM (SELECT DISTINCT Analytical_Layer_Type_Code FROM (SELECT DISTINCT Services.Service_ID , COUNT(Services.Customer_Details ) AS num FROM (SELECT DISTINCT Services.Customer_ID , COUNT(Service_Details ), SUM(Status_Code ) AS total FROM (SELECT DISTINCT Customers_and_Services.Customer_ID , Service_ID FROM (SELECT DISTINCT"
  },
  {
    "id": 361,
    "db_id": "government_shift",
    "question": "Find all the services that has been used by the customer with details \"Hardy Kutch\".",
    "answer": "SELECT DISTINCT Services.Service_Details FROM government_shift.Customer_Interactions AS T INNER JOIN (SELECT Service_ID FROM government_shift.Services WHERE Customer_Details = 'Hardy Kutch') AS U  ON Services.Customer_ID = Customers.Customer_ID ORDER BY Services.Service_ID LIMIT 1000000000000000"
  },
  {
    "id": 362,
    "db_id": "government_shift",
    "question": "Which services were used by the customer with details \"Hardy Kutch\"? Give me the service details.",
    "answer": "SELECT DISTINCT Services.Service_Details FROM (SELECT DISTINCT Services.Service_ID , MAX(Service_Details ) AS Service_ID FROM (SELECT DISTINCT Services.Service_ID , Customer_Details FROM (SELECT DISTINCT Service_ID FROM (SELECT DISTINCT Service_Details , COUNT(Customer_Details ) AS num FROM (SELECT Customers.Customer_ID , COUNT(Customer_Details ) AS num FROM (SELECT DISTINCT Customers."
  },
  {
    "id": 363,
    "db_id": "government_shift",
    "question": "Find the details of the services that have been used by more than 3 times .",
    "answer": "SELECT DISTINCT Service_Details FROM (SELECT MAX(Service_ID ), COUNT(*) AS total FROM (SELECT MAX(Service_ID ) AS S , COUNT(Customer_ID ) AS Cnt FROM (SELECT Customer_ID FROM (SELECT COUNT(Customer_ID ) AS Total FROM (SELECT Service_ID , Service_Details FROM (SELECT MAX(Service_ID ) AS S , COUNT(Customer_ID ) AS Cnt FROM (SELECT MAX"
  },
  {
    "id": 364,
    "db_id": "government_shift",
    "question": "Which services were used by customers by more than 3 times? Give me the service details.",
    "answer": "SELECT DISTINCT Services.Service_Details FROM (SELECT Service_ID FROM (SELECT COUNT(Service_ID ) AS num FROM (SELECT Service_ID , SUM(Service_Details ), MIN(Customer_ID ) FROM (SELECT Customers.Customer_ID , COUNT(Customer_Details ) AS sum FROM (SELECT DISTINCT Services.Service_Details , Customer_ID FROM (SELECT Service_ID FROM (SELECT COUNT(Customer_Details ) AS num FROM (SELECT"
  },
  {
    "id": 365,
    "db_id": "government_shift",
    "question": "Find the details of the customer who has used services the most times.",
    "answer": "SELECT DISTINCT Customer_Details FROM (SELECT MAX(Customer_Details ) AS rowid FROM (SELECT Service_ID , COUNT(Customer_ID ), SUM(Service_ID ) FROM (SELECT MAX(Customer_ID ) AS T1 , COUNT(Customer_ID ) AS T2 FROM (SELECT MAX(Service_ID ), COUNT(Service_ID ) AS T3 FROM (SELECT DISTINCT Services_and_Channels_Details , Service_ID FROM (SELECT"
  },
  {
    "id": 366,
    "db_id": "government_shift",
    "question": "return the details of the customer with largest count of used services.",
    "answer": "SELECT DISTINCT Services_and_Channels_Details FROM (SELECT DISTINCT Service_Details FROM (SELECT MAX(Service_ID ), COUNT(Service_ID ) AS num FROM (SELECT DISTINCT Service_ID , COUNT(*) FROM (SELECT DISTINCT Service_ID , SUM(Service_Details ) AS sum FROM (SELECT DISTINCT Services.Service_ID , COUNT(*), SUM(Services_and_Channels_Details )"
  },
  {
    "id": 367,
    "db_id": "government_shift",
    "question": "Find the name of the customer who has used the most types of services .",
    "answer": "SELECT DISTINCT Customer_Details FROM (SELECT MAX(Customer_Details ), COUNT(Service_ID ) AS num FROM (SELECT DISTINCT Service_ID , SUM(Status_Code ) AS Total FROM (SELECT DISTINCT Services_and_Channels_Details FROM (SELECT Service_ID , SUM(Status_Code ) FROM (SELECT DISTINCT Customer_ID , MAX(Customer_Details ), COUNT(Customer_ID ) AS num FROM (SELECT DISTINCT Services"
  },
  {
    "id": 368,
    "db_id": "government_shift",
    "question": "Which customer has used the most types of services ? Give me the customer details .",
    "answer": "SELECT DISTINCT Customers.Customer_Details FROM (SELECT MAX(Customer_Details ), COUNT(Service_ID ) AS Num FROM (SELECT DISTINCT Service_ID , COUNT(Customer_ID ), SUM(Status_Code ) AS Num FROM (SELECT DISTINCT Service_ID , Customer_ID FROM (SELECT MAX(Service_ID ) AS j FROM (SELECT DISTINCT Services.Service_ID , Customers.Customer_ID FROM (SELECT DIST"
  },
  {
    "id": 369,
    "db_id": "government_shift",
    "question": "Find the details of the customer who has never used any services .",
    "answer": "SELECT DISTINCT Customer_Details FROM (SELECT Customers.Customer_ID , SUM(Service_Details ) AS sum FROM (SELECT DISTINCT Service_ID FROM government_shift.Services GROUP BY Service_ID ORDER BY Status_Code LIMIT 1) AS T INNER JOIN (SELECT DISTINCT Customer_ID FROM government_shift.Customers GROUP BY Customer_ID ORDER BY Status_Code LIMIT"
  },
  {
    "id": 370,
    "db_id": "government_shift",
    "question": "Which customers never used any services ? Give me the customer details .",
    "answer": "SELECT DISTINCT Customers.Customer_Details FROM (SELECT DISTINCT Customers.Customer_ID , SUM(Services_and_Channels_Details ) AS num FROM (SELECT * FROM (SELECT Services_and_Channels_Details , COUNT(Service_ID ), SUM(Customers.Customers_and_Services_Details ) AS sum1 FROM (SELECT DISTINCT Service_ID FROM (SELECT DISTINCT Custom"
  },
  {
    "id": 371,
    "db_id": "government_shift",
    "question": "Find the details of the customers who have used the least-used service .",
    "answer": "SELECT DISTINCT Customer_Details FROM (SELECT MAX(Customer_Details ) AS N FROM (SELECT DISTINCT Service_ID , COUNT(Service_ID ) AS RS FROM (SELECT Service_ID FROM (SELECT DISTINCT Services.Service_ID , Service_Details FROM (SELECT DISTINCT Customers.Customer_ID , Service_Details FROM (SELECT DISTINCT Customer_ID , SUM(Services.Service_ID ), MAX(Services.Service_ID )"
  },
  {
    "id": 372,
    "db_id": "government_shift",
    "question": "Which customers used the least commonly-used service ? Give me the distinct customer details .",
    "answer": "SELECT DISTINCT Customers.Customer_Details FROM (SELECT DISTINCT Customer_ID FROM (SELECT COUNT(Service_ID ) AS num FROM (SELECT Service_ID FROM (SELECT COUNT(Services_and_Channels_Details ), Customer_ID , SUM(Status_Code ) AS num1 FROM (SELECT DISTINCT Services_and_Channels_Details , Customer_ID , Status_Code FROM (SELECT Customers_and_Services_Details ,"
  },
  {
    "id": 373,
    "db_id": "government_shift",
    "question": "How many distinct customer and services details are there?",
    "answer": "SELECT DISTINCT SUM(Services_and_Channels_Details ), COUNT(Customer_Details ) FROM (SELECT DISTINCT Services_and_Channels_Details , Services_and_Channels_Details FROM (SELECT * FROM (SELECT DISTINCT Service_ID , Services_and_Channels_Details FROM (SELECT DISTINCT Services_and_Channels_Details , Customer_Details FROM (SELECT DISTINCT"
  },
  {
    "id": 374,
    "db_id": "government_shift",
    "question": "Count the total number of available customers and services details.",
    "answer": "SELECT COUNT(Customers.Customer_Details ) FROM (SELECT DISTINCT Customers.Customer_Details , Services.Service_ID FROM (SELECT Service_ID FROM (SELECT DISTINCT Services.Service_ID FROM (SELECT Customers_and_Services_ID FROM (SELECT Customers.Customer_ID , Services_and_Channels_Details FROM (SELECT Customers.Customer_ID , Services_and_Channels"
  },
  {
    "id": 375,
    "db_id": "government_shift",
    "question": "Find all the customers whose name contains \"Kutch\".",
    "answer": "SELECT DISTINCT Customer_Details FROM (SELECT DISTINCT Customer_Details FROM (SELECT Customers.Customer_ID , COUNT(Customer_Details ) AS num FROM (SELECT DISTINCT Customer_ID FROM (SELECT Customer_Details FROM (SELECT Customers_and_Services_ID FROM government_shift.Services INNER JOIN (SELECT Service_ID FROM (SELECT Service_ID FROM (SELECT DISTINCT"
  },
  {
    "id": 376,
    "db_id": "government_shift",
    "question": "What are the details of the customers who have \"Kutch\" in part of their details?",
    "answer": "SELECT DISTINCT Customer_Details FROM (SELECT DISTINCT Customer_Details , COUNT(Service_ID ) AS num FROM (SELECT DISTINCT Service_ID FROM (SELECT DISTINCT Service_ID FROM (SELECT DISTINCT COUNT(Customer_Details ) AS num FROM (SELECT DISTINCT Service_ID FROM (SELECT DISTINCT Customers.Customer_ID , COUNT(Customers.Service_ID ) AS total FROM (SELECT DISTINCT Customer_"
  },
  {
    "id": 377,
    "db_id": "government_shift",
    "question": "Find the name of all the services which either have been used by customer \"Hardy Kutch\" or have been rated as \"good\" in one of the customer interactions.",
    "answer": "SELECT DISTINCT Services.Service_Details FROM (SELECT DISTINCT Services.Service_Details FROM government_shift.Customer_Interactions WHERE Customer_ID = 'HARDY_KUCKUTCH' GROUP BY Customers.Customers_and_Services_Details ORDER BY Pattern_Recognition LIMIT 1) AS T INNER JOIN (SELECT DISTINCT Services_and_Channels_Details FROM government_"
  },
  {
    "id": 378,
    "db_id": "government_shift",
    "question": "Which services are used by the customer \"Hardy Kutch\" or are rated as \"good\" in a customer interaction? Give me the service details.",
    "answer": "SELECT DISTINCT Services.Service_Details FROM (SELECT DISTINCT Services.Service_Details FROM government_shift.Customer_Interactions WHERE Customer_ID = 'HARDY_KUCKUTCH' ORDER BY Customers_and_Services_Details LIMIT 1) AS T INNER JOIN (SELECT DISTINCT Services.Service_Details FROM government_shift.Customer_Interactions WHERE Customers_and_Services_"
  },
  {
    "id": 379,
    "db_id": "government_shift",
    "question": "Find the names of all the services which both have been used by customer \"Hardy Kutch\" and have been rated \"bad\" in one of the customer interactions.",
    "answer": "SELECT DISTINCT Services.Service_Details FROM (SELECT DISTINCT Services.Service_Details FROM government_shift.Customer_Interactions WHERE Customer_ID = 'HARDY_KUCKUTCH' GROUP BY Customers.Customers_and_Services_Details ORDER BY Customer_Interaction_ID LIMIT 1) AS t INNER JOIN (SELECT DISTINCT Services.Service_Details FROM government_shift.Customer"
  },
  {
    "id": 380,
    "db_id": "government_shift",
    "question": "Which services are both used by the customer \"Hardy Kutch\" and are rated as \"bad\" in a customer interaction? Give me the service details.",
    "answer": "SELECT DISTINCT Services.Service_Details FROM (SELECT DISTINCT Services.Service_Details FROM government_shift.Customer_Interactions WHERE Customer_ID = 'HARDY_KUCKUTCH' GROUP BY Customers.Customers_and_Services_ID ORDER BY Customers.Customer_ID LIMIT 1) AS t INNER JOIN (SELECT DISTINCT Services.Service_Details FROM government_shift.Customer"
  },
  {
    "id": 381,
    "db_id": "government_shift",
    "question": "Find details of all the services that have interacted with `` 15 ij '' for the the channel details.",
    "answer": "SELECT DISTINCT Service_Details FROM (SELECT DISTINCT SUM(Status_Code ) AS service , Channel_ID FROM (SELECT DISTINCT SUM(Service_Details ) AS T1 FROM (SELECT SUM(Service_Details ) AS T2 FROM (SELECT DISTINCT SUM(Service_ID ), COUNT(Channel_ID ) FROM (SELECT DISTINCT Channel_ID , COUNT(Customer_ID )"
  },
  {
    "id": 382,
    "db_id": "government_shift",
    "question": "Give me the details of all the services that have interacted with the channel with detail \"15 ij\".",
    "answer": "SELECT DISTINCT Service_Details FROM (SELECT DISTINCT SUM(Status_Code ) AS str , Customer_ID , Service_ID FROM (SELECT DISTINCT Services_and_Channels_Details FROM (SELECT DISTINCT Channel_ID FROM (SELECT DISTINCT Service_ID , SUM(Service_Details ) AS num FROM (SELECT DISTINCT Customers_and_Services_ID , COUNT(Customer_ID ) AS num FROM (SELECT"
  },
  {
    "id": 383,
    "db_id": "government_shift",
    "question": "Find all the details of the customers who have been involved in an interaction with status `` Stuck '' and service and channel detail `` bad '' .",
    "answer": "SELECT DISTINCT Services_and_Channels_Details FROM (SELECT Service_ID , Status_Code , Customer_ID , Services_and_Channels_Details FROM (SELECT Customers_and_Services_ID , Customers_and_Services_Details , COUNT(Customer_ID ) AS num , Service_ID , Customer_Details FROM (SELECT Customers_and_Services_ID , Customers_and_Services_Details FROM (SELECT Service_ID ,"
  },
  {
    "id": 384,
    "db_id": "government_shift",
    "question": "Which customers have experienced status \"Stuck\" and service and channel detail \"bad\" in  an interaction? Give me the customer details.",
    "answer": "SELECT DISTINCT Customers.Customer_Details FROM (SELECT DISTINCT Customer_ID , Status_Code FROM (SELECT Service_ID , Services_and_Channels_Details , Service_Details FROM (SELECT Service_ID , Status_Code FROM (SELECT Service_ID , Service_Details FROM (SELECT Customers_and_Services_ID , Service_Details FROM (SELECT Customer_Details , Channel_Details FROM (SELECT DISTINCT Cust"
  },
  {
    "id": 385,
    "db_id": "government_shift",
    "question": "How many integration platforms are successful?",
    "answer": "SELECT COUNT(Customers.Customer_ID ) FROM (SELECT DISTINCT Customers.Customer_ID , COUNT(Services_and_Channels_Details ) AS total FROM (SELECT DISTINCT Service_ID , SUM(Services_and_Channels_Details ) AS total FROM (SELECT Services_and_Channels_Details FROM government_shift.Customer_Interactions GROUP BY Services_and_Channels_Details ORDER"
  },
  {
    "id": 386,
    "db_id": "government_shift",
    "question": "Count the number of integration platforms that have \"Success\" in the details.",
    "answer": "SELECT COUNT(Services.Channel_Details ) FROM (SELECT DISTINCT Services.Service_Details FROM (SELECT Service_ID , SUM(Status_Code ) AS total FROM (SELECT DISTINCT Services.Service_ID , SUM(Status_Code ) AS total FROM (SELECT Customer_ID , COUNT(Service_ID ) AS num FROM (SELECT Service_ID FROM (SELECT Service_ID , SUM(Service_Details ) AS num FROM ("
  },
  {
    "id": 387,
    "db_id": "government_shift",
    "question": "List the details of all the customers who are associated with a failed integration platform .",
    "answer": "SELECT DISTINCT Service_Details FROM (SELECT Service_ID FROM (SELECT DISTINCT Services.Service_ID , Customer_ID FROM (SELECT DISTINCT Customers.Customer_ID , Customer_Details FROM (SELECT DISTINCT Customers.Customer_ID , Service_ID FROM (SELECT DISTINCT Services.Service_ID , Customer_ID FROM (SELECT DISTINCT Customers.Customer_ID , Service_ID FROM (SELECT DISTINCT Services"
  },
  {
    "id": 388,
    "db_id": "government_shift",
    "question": "Which customers have integration platform details \"Fail\" in interactions? Give me the customer details.",
    "answer": "SELECT DISTINCT Customers.Customer_Details FROM (SELECT DISTINCT Customer_Details FROM (SELECT DISTINCT Services.Service_ID , Service_Details FROM (SELECT DISTINCT Services_and_Channels_Details FROM (SELECT DISTINCT Customers_and_Services_ID FROM (SELECT DISTINCT Customer_ID , Service_ID FROM (SELECT DISTINCT Service_ID FROM (SELECT DISTINCT Customers_and_Services_Details"
  },
  {
    "id": 389,
    "db_id": "government_shift",
    "question": "Which service ( s ) has never been used by any customer ? List their details .",
    "answer": "SELECT DISTINCT Service_Details FROM (SELECT DISTINCT SUM(Services_and_Channels_Details ) AS T1 FROM (SELECT DISTINCT SUM(Services_and_Channels_Details ) AS t1 FROM (SELECT DISTINCT Service_ID FROM (SELECT DISTINCT SUM(Service_Details ) AS s1 FROM (SELECT DISTINCT Services_and_Channels_Details FROM (SELECT D"
  },
  {
    "id": 390,
    "db_id": "government_shift",
    "question": "Find details of the services that no customer has ever used . Return the service details .",
    "answer": "SELECT DISTINCT Services.Service_Details FROM (SELECT DISTINCT Service_Details FROM (SELECT DISTINCT Services.Service_ID , COUNT(Customer_ID ) AS num FROM (SELECT * FROM (SELECT Service_ID , COUNT(*) AS numFROMCustomers_and_Services_Details \n                        FROM (SELECT DISTINCT Customers.Customer_ID , Customer_Details FROM (SELECT DISTINCT Services.Service_ID ,"
  },
  {
    "id": 391,
    "db_id": "government_shift",
    "question": "Find all the layer type codes with their corresponding usage count.",
    "answer": "SELECT DISTINCT SUM(Pattern_Recognition ) FROM (SELECT DISTINCT MIN(Pattern_Recognition ) AS T1 , MAX(Pattern_Recognition ) AS T2 , Pattern_Recognition FROM (SELECT Service_ID , SUM(Service_Details ) AS sum_service_details , Pattern_Recognition FROM (SELECT DISTINCT MIN(Service_"
  },
  {
    "id": 392,
    "db_id": "government_shift",
    "question": "For each analytical layer, return the analytical layer type code and the number of times it was used.",
    "answer": "SELECT SUM(Analytical_Layer_Type_Code ), COUNT(Analytical_Layer_Type_Code ) FROM (SELECT DISTINCT Analytical_Layer_Type_Code , COUNT(Analytical_Layer_Type_Code ) FROM (SELECT DISTINCT Analytical_Layer_Type_Code FROM (SELECT DISTINCT Customer_ID , Services.Service_Details FROM (SELECT DISTINCT Services.Customer_ID , Services.Service"
  },
  {
    "id": 393,
    "db_id": "government_shift",
    "question": "Find details of all the services that have been marked as `` unsatisfied '' in customers and services details .",
    "answer": "SELECT DISTINCT Services_and_Channels_Details FROM (SELECT Service_Details , SUM(Service_Details ) AS total FROM (SELECT Service_ID , SUM(Service_Details ) AS sum FROM (SELECT Service_ID , COUNT(Customer_ID ), SUM(Status_Code ) AS ct FROM (SELECT Customer_ID , COUNT(Customer_ID ) AS count FROM (SELECT Customers_and_Services_ID , Customer_ID , COUNT(Customer_"
  },
  {
    "id": 394,
    "db_id": "government_shift",
    "question": "Which services have been rated as \"unsatisfied\" in customers and services details? Give me the service_details.",
    "answer": "SELECT DISTINCT Service_Details FROM (SELECT DISTINCT Services.Service_Details , SUM(Service_Details ) AS sum FROM (SELECT Service_ID , SUM(Service_Details ) AS total , SUM(Customer_Details ) AS sum2 FROM (SELECT Customers_and_Services_Details FROM (SELECT DISTINCT Service_ID , SUM(Customers_and_Services_Details ) AS num1 , SUM(Customers_and_Services_Details )"
  },
  {
    "id": 395,
    "db_id": "vehicle_rent",
    "question": "How many vehicles do we have?",
    "answer": "SELECT COUNT(Type_of_powertrain ) FROM (SELECT Type_of_powertrain , SUM(membership_credit ) AS total FROM vehicle_rent.Vehicles GROUP BY Type_of_powertrain ORDER BY total_hours LIMIT 100) AS T WHERE Type_of_powertrain = 'R25' LIMIT 10000000"
  },
  {
    "id": 396,
    "db_id": "vehicle_rent",
    "question": "Count the number of vehicles.",
    "answer": "SELECT COUNT(Type_of_powertrain ) FROM (SELECT Type_of_powertrain , id FROM (SELECT Type_of_powertrain , COUNT(Type_of_powertrain ) AS num FROM vehicle_rent.Vehicles WHERE Model_year = '2001' GROUP BY Type_of_powertrain ORDER BY Renting_history.total_hours LIMIT 1) AS T"
  },
  {
    "id": 397,
    "db_id": "vehicle_rent",
    "question": "Show names for all vehicles in descending order of model year.",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM vehicle_rent.Vehicles ORDER BY Model_year LIMIT 1 OFFSET 2009"
  },
  {
    "id": 398,
    "db_id": "vehicle_rent",
    "question": "What are the names of all vehicles, ordered by model year descending?",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM vehicle_rent.Vehicles ORDER BY Model_year LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 399,
    "db_id": "vehicle_rent",
    "question": "List all distinct types of powertrain of vehicles.",
    "answer": "SELECT Type_of_powertrain FROM vehicle_rent.Vehicles WHERE id = '58317629-407' GROUP BY Type_of_powertrain ORDER BY Discount.id LIMIT 100000000000000000000000000000000000000000000"
  },
  {
    "id": 400,
    "db_id": "vehicle_rent",
    "question": "What are the different types of powertrains?",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM vehicle_rent.Vehicles WHERE Model_year = '2017' GROUP BY Type_of_powertrain ORDER BY Type_of_powertrain LIMIT 640000000000000000000000000000000000000000000"
  },
  {
    "id": 401,
    "db_id": "vehicle_rent",
    "question": "Show name, type of powertrain, and annual fuel cost for all vehicles with model year 2013 or 2014.",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT Model_year , Renting_history.Model_year FROM vehicle_rent.Vehicles WHERE Model_year = 2013 ORDER BY Model_year  ASC, Renting_history.discount_id LIMIT 1) AS T INNER JOIN (SELECT Type_of_powertrain , Renting_history.total"
  },
  {
    "id": 402,
    "db_id": "vehicle_rent",
    "question": "What are the names, types of powertrains, and yearly fuel costs for vehicles with model years in either 2013 2014?",
    "answer": "SELECT DISTINCT Type_of_powertrain , Model_year FROM vehicle_rent.Vehicles WHERE Model_year = '2013' ORDER BY Model_year LIMIT 1;"
  },
  {
    "id": 403,
    "db_id": "vehicle_rent",
    "question": "Show types of powertrain with vehicles both from 2014 and 2013.",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT DISTINCT Type_of_powertrain FROM vehicle_rent.Vehicles WHERE Model_year > '2011' INNER JOIN vehicle_rent.Vehicles ON Vehicles.vehicles_id = Vehicles.id ORDER BY Model_year LIMIT 3) AS T GROUP BY Discount.Type_of_powertrain ORDER BY"
  },
  {
    "id": 404,
    "db_id": "vehicle_rent",
    "question": "What are the types of powertrains that have vehicles that were made in both 2013 and 2014?",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT DISTINCT Type_of_powertrain FROM (SELECT Model_year , Type_of_powertrain FROM vehicle_rent.Vehicles WHERE Model_year = '2013' ORDER BY Model_year LIMIT 1) AS T INNER JOIN vehicle_rent.Vehicles AS V  ON Type_of_powertrain = Vehicles."
  },
  {
    "id": 405,
    "db_id": "vehicle_rent",
    "question": "Show all types of powertrain and the number of vehicles in each type.",
    "answer": "SELECT DISTINCT Type_of_powertrain , SUM(Vehicles.Type_of_powertrain ) FROM (SELECT DISTINCT Type_of_powertrain FROM vehicle_rent.Vehicles ORDER BY Vehicles.Model_year LIMIT 1) AS T WHERE Type_of_powertrain = 'Power train' GROUP BY Type_of_powertrain ORDER BY Type_of_powert"
  },
  {
    "id": 406,
    "db_id": "vehicle_rent",
    "question": "How many vehicles have each type of powertrain?",
    "answer": "SELECT SUM(Type_of_powertrain ) AS total FROM (SELECT Type_of_powertrain , SUM(Type_of_powertrain ) AS total_from , COUNT(Type_of_powertrain ) AS num FROM (SELECT DISTINCT Vehicles.name , Renting_history.discount_id , Renting_history.vehicles_id , Renting_history."
  },
  {
    "id": 407,
    "db_id": "vehicle_rent",
    "question": "What is the type of powertrain with most number of vehicles.",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT DISTINCT Type_of_powertrain FROM vehicle_rent.Vehicles WHERE id = (SELECT COUNT(Type_of_powertrain ) AS total FROM vehicle_rent.Vehicles GROUP BY Type_of_powertrain ORDER BY Type_of_powertrain LIMIT 1)) AS T ORDER BY Type_"
  },
  {
    "id": 408,
    "db_id": "vehicle_rent",
    "question": "Which type of powertrain is most common?",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT DISTINCT Type_of_powertrain FROM vehicle_rent.Vehicles WHERE id = 'V14894736') ORDER BY Type_of_powertrain LIMIT 1000000000000000000000000000000000000000"
  },
  {
    "id": 409,
    "db_id": "vehicle_rent",
    "question": "Show minimum, maximum, and average annual fuel cost for all vehicles.",
    "answer": "SELECT AVG(Type_of_powertrain ), MAX(Type_of_powertrain ) AS avg , MIN(Type_of_powertrain ) FROM (SELECT Type_of_powertrain FROM (SELECT DISTINCT Vehicles.Model_year FROM vehicle_rent.Renting_history INNER JOIN (SELECT DISTINCT Type_of_powertrain , SUM("
  },
  {
    "id": 410,
    "db_id": "vehicle_rent",
    "question": "What are the minimum, maximum, and average annual fuel costs across all vehicles?",
    "answer": "SELECT Type_of_powertrain FROM (SELECT SUM(Type_of_powertrain ) AS avg , COUNT(Type_of_powertrain ) FROM (SELECT Type_of_powertrain FROM vehicle_rent.Vehicles GROUP BY Type_of_powertrain ORDER BY total_hours LIMIT 1)) AS q ORDER BY Type_of_powertrain LIMIT "
  },
  {
    "id": 411,
    "db_id": "vehicle_rent",
    "question": "Show name and model year for vehicles with city fuel economy rate less than or equal to highway fuel economy rate.",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT MIN(Type_of_powertrain ) AS TYPE , Type_of_powertrain FROM vehicle_rent.Vehicles WHERE Model_year = '2008' GROUP BY Discount.name ORDER BY Customers.total_hours LIMIT 1) AS A ORDER BY Type_of_"
  },
  {
    "id": 412,
    "db_id": "vehicle_rent",
    "question": "What are the names and model years for vehicles that have a city fuel economy rate less than or equal to its highway fuel economy rate?",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM vehicle_rent.Vehicles WHERE Model_year < (SELECT MAX(Model_year ) FROM vehicle_rent.Vehicles) GROUP BY Type_of_powertrain ORDER BY City_fuel_economy_rate LIMIT 2500000000000000000000000000000"
  },
  {
    "id": 413,
    "db_id": "vehicle_rent",
    "question": "Show the type of powertrain with at least two vehicles, and the average annual fuel cost for vehicles in each such type.",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT DISTINCT Type_of_powertrain , AVG(Type_of_powertrain ) AS avg FROM (SELECT DISTINCT Type_of_powertrain , SUM(Type_of_powertrain ), SUM(Type_of_powertrain ) AS Total__AVG FROM vehicle_rent.Vehicles GROUP"
  },
  {
    "id": 414,
    "db_id": "vehicle_rent",
    "question": "What are the types of powertrains for which there are two or more vehicles, and what are their average annual fuel costs?",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM vehicle_rent.Vehicles WHERE id = 1 GROUP BY Type_of_powertrain ORDER BY Renting_history.total_hours LIMIT 20000000000000000000000000000000000000000000000000"
  },
  {
    "id": 415,
    "db_id": "vehicle_rent",
    "question": "Show the name, age, membership credit for all customers?",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT * FROM vehicle_rent.Vehicles WHERE Customers.name = 'John' GROUP BY Vehicles.name ORDER BY Type_of_powertrain LIMIT 1) AS t INNER JOIN (SELECT Type_of_powertrain , MIN(membership_credit ) FROM vehicle_rent.V"
  },
  {
    "id": 416,
    "db_id": "vehicle_rent",
    "question": "What are the names, ages, and membership credits for all customers?",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT Type_of_powertrain , SUM(membership_credit ) AS Total FROM (SELECT Type_of_powertrain , MIN(Type_of_powertrain ) FROM (SELECT DISTINCT Type_of_powertrain , membership_credit FROM vehicle_rent.Vehicles WHERE Model_"
  },
  {
    "id": 417,
    "db_id": "vehicle_rent",
    "question": "Show the name and age of the customer with maximum membership credit.",
    "answer": "SELECT Type_of_powertrain FROM (SELECT DISTINCT total_hours , customer_id , MAX(Type_of_powertrain ) AS temp FROM (SELECT Renting_history.name , customer_id FROM (SELECT Type_of_powertrain , customer_id FROM vehicle_rent.Vehicles WHERE Model_year = '2"
  },
  {
    "id": 418,
    "db_id": "vehicle_rent",
    "question": "What is the name and age of the customer with the most membership credit?",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT Type_of_powertrain , MAX(Type_of_powertrain ) AS num FROM (SELECT Type_of_powertrain , COUNT(id ), SUM(membership_credit ) AS total , MIN(id ) AS id FROM (SELECT DISTINCT Type_of_powert"
  },
  {
    "id": 419,
    "db_id": "vehicle_rent",
    "question": "What is the average age for customers with a membership credit above the average?",
    "answer": "SELECT AVG(Type_of_powertrain ), SUM(Type_of_powertrain ) FROM (SELECT Type_of_powertrain , COUNT(membership_credit ) AS num FROM (SELECT Type_of_powertrain , SUM(Type_of_powertrain ) AS avg FROM (SELECT id , Type_of_powertrain , COUNT(Type_of"
  },
  {
    "id": 420,
    "db_id": "vehicle_rent",
    "question": "Return the average age for customers who have membership above the average across all customers.",
    "answer": "SELECT AVG(Type_of_powertrain ) FROM (SELECT Type_of_powertrain , COUNT(Customers.id ) AS num FROM (SELECT Customers.name , SUM(Type_of_powertrain ) AS total FROM (SELECT DISTINCT Type_of_powertrain FROM (SELECT DISTINCT Type_of_powertrain , Type_of_power"
  },
  {
    "id": 421,
    "db_id": "vehicle_rent",
    "question": "Show all information for all discounts.",
    "answer": "SELECT Type_of_powertrain FROM (SELECT DISTINCT Type_of_powertrain FROM vehicle_rent.Discount GROUP BY Type_of_powertrain ORDER BY id LIMIT 1) AS t INNER JOIN vehicle_rent.Vehicles ON total_hours = Vehicles.id ORDER BY Type_of_powertrain LIMIT 2000000000000"
  },
  {
    "id": 422,
    "db_id": "vehicle_rent",
    "question": "Return all information about discounts.",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT * FROM (SELECT DISTINCT Type_of_powertrain FROM vehicle_rent.Vehicles WHERE Model_year > '1960' ORDER BY Renting_history.Type_of_powertrain LIMIT 5) AS T ORDER BY Type_of_powertrain LIMIT 5) AS T INNER JOIN"
  },
  {
    "id": 423,
    "db_id": "vehicle_rent",
    "question": "Show the name and total hours of renting for each vehicle.",
    "answer": "SELECT DISTINCT Type_of_powertrain , SUM(Type_of_powertrain ) AS TotalHours FROM (SELECT Type_of_powertrain , SUM(Type_of_powertrain ), Renting_history.id FROM vehicle_rent.Vehicles WHERE Vehicles.Type_of_powertrain = 'Pickup' GROUP BY Type_"
  },
  {
    "id": 424,
    "db_id": "vehicle_rent",
    "question": "What are the names and total rental hours for each vehicle?",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT DISTINCT Type_of_powertrain , SUM(total_hours ) AS sum FROM (SELECT Type_of_powertrain , Type_of_powertrain FROM (SELECT Type_of_powertrain , vehicles_id FROM (SELECT Type_of_powertrain , SUM(total_hours ) AS sum FROM (SELECT Type"
  },
  {
    "id": 425,
    "db_id": "vehicle_rent",
    "question": "Show the name of vehicles with no renting history.",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT DISTINCT Type_of_powertrain FROM (SELECT DISTINCT Type_of_powertrain FROM (SELECT customer_id , MAX(Type_of_powertrain ) AS tplt FROM vehicle_rent.Vehicles GROUP BY customer_id , total_hours ) AS t INNER JOIN (SELECT Type_of_powertrain"
  },
  {
    "id": 426,
    "db_id": "vehicle_rent",
    "question": "What are the names of vehicles that have never been rented?",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT DISTINCT Type_of_powertrain FROM vehicle_rent.Vehicles WHERE Vehicles.Model_year = 2013) AS v WHERE vehicle_rent.total_hours <= 0 GROUP BY total_hours ORDER BY total_hours LIMIT 1;"
  },
  {
    "id": 427,
    "db_id": "vehicle_rent",
    "question": "Show the name of customer with at least two renting history records.",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT Type_of_powertrain , COUNT(Type_of_powertrain ) AS Num FROM vehicle_rent.Renting_history WHERE Renting_history.total_hours > 1 GROUP BY Type_of_powertrain ORDER BY Type_of_powertrain LIMIT 2) AS T WHERE Ty"
  },
  {
    "id": 428,
    "db_id": "vehicle_rent",
    "question": "What are the names of customers who have two or more records of rental history?",
    "answer": "SELECT Type_of_powertrain FROM (SELECT DISTINCT total_hours FROM vehicle_rent.Vehicles WHERE id = 1 GROUP BY total_hours ORDER BY Type_of_powertrain , total_hours LIMIT 2) AS T INNER JOIN (SELECT DISTINCT customer_id FROM vehicle_rent.Customers GROUP BY customer_id ORDER BY total_hours LIMIT 2)"
  },
  {
    "id": 429,
    "db_id": "vehicle_rent",
    "question": "Show the name and model year of the vehicle with most number of renting history records.",
    "answer": "SELECT Type_of_powertrain FROM (SELECT DISTINCT Type_of_powertrain FROM vehicle_rent.Vehicles GROUP BY Type_of_powertrain ORDER BY total_hours LIMIT 1) AS t ORDER BY total_hours LIMIT 10000000000000100000000000000000000000"
  },
  {
    "id": 430,
    "db_id": "vehicle_rent",
    "question": "What is the name and model year of the vehicle which has been rented the most times?",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT DISTINCT Type_of_powertrain FROM (SELECT Type_of_powertrain , MIN(total_hours ) AS num , Type_of_powertrain FROM vehicle_rent.Vehicles GROUP BY Type_of_powertrain ORDER BY total_hours LIMIT 1) AS T WHERE total_h"
  },
  {
    "id": 431,
    "db_id": "vehicle_rent",
    "question": "Show the vehicle name with a descending order of total hours of renting.",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT total_hours , SUM(total_hours ) AS sum FROM (SELECT Type_of_powertrain , COUNT(Type_of_powertrain ) AS total FROM (SELECT Vehicles.Type_of_powertrain FROM (SELECT DISTINCT Type_of_powertrain FROM (SELECT Type_of_"
  },
  {
    "id": 432,
    "db_id": "vehicle_rent",
    "question": "What are the names of vehicles, sorted descending by total hours of renting?",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT DISTINCT Type_of_powertrain , SUM(total_hours ) AS sum FROM vehicle_rent.Renting_history GROUP BY Type_of_powertrain ORDER BY total_hours LIMIT 1) AS T ORDER BY total_hours LIMIT 20000000000000000000"
  },
  {
    "id": 433,
    "db_id": "vehicle_rent",
    "question": "What is the discount name with most number of renting history records?",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT Type_of_powertrain FROM vehicle_rent.Vehicles WHERE id = '38011724' GROUP BY Type_of_powertrain ORDER BY Type_of_powertrain LIMIT 1) AS T INNER JOIN (SELECT DISTINCT Type_of_powertrain FROM vehicle_rent.Veh"
  },
  {
    "id": 434,
    "db_id": "vehicle_rent",
    "question": "Return the name of the discount that corresponds to the most rental history records.",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT id , Type_of_powertrain FROM (SELECT DISTINCT Type_of_powertrain , SUM(Renting_history.discount_id ) AS num FROM (SELECT Type_of_powertrain , Renting_history.total_hours FROM (SELECT Type_of_powertrain , SUM(Ty"
  },
  {
    "id": 435,
    "db_id": "vehicle_rent",
    "question": "Find the name and powertrain type of the cars that rented for more than 30 total hours.",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT Type_of_powertrain , MIN(Type_of_powertrain ) AS TotalHours FROM (SELECT DISTINCT Type_of_powertrain , COUNT(Type_of_powertrain ) AS Num FROM (SELECT Type_of_powertrain , MIN(Type_of_powertrain"
  },
  {
    "id": 436,
    "db_id": "vehicle_rent",
    "question": "What are the names and powertrain types of cars that have more than 30 total rental hours?",
    "answer": "SELECT DISTINCT Type_of_powertrain FROM (SELECT Type_of_powertrain FROM vehicle_rent.Vehicles GROUP BY Type_of_powertrain ORDER BY Type_of_powertrain LIMIT 3) AS T WHERE total_hours > 30 ORDER BY Type_of_powertrain LIMIT 100000000487529600"
  },
  {
    "id": 437,
    "db_id": "vehicle_rent",
    "question": "Find the average city and highway fuel rates for cars with different powertrain types.",
    "answer": "SELECT AVG(Type_of_powertrain ) AS avg_city , Type_of_powertrain FROM (SELECT Type_of_powertrain , SUM(Type_of_powertrain ) FROM (SELECT DISTINCT Type_of_powertrain , COUNT(Type_of_powertrain ) AS n FROM vehicle_rent.Vehicles WHERE Model_year = '2"
  },
  {
    "id": 438,
    "db_id": "vehicle_rent",
    "question": "What are the average city fuel economy rate, average highway fuel economy rate for different types of powertrains?",
    "answer": "SELECT AVG(Type_of_powertrain ) AS avg_fuel_economy FROM (SELECT DISTINCT Type_of_powertrain , COUNT(*) AS Total_hours FROM vehicle_rent.Discount GROUP BY Type_of_powertrain ORDER BY total_hours LIMIT 1) AS S GROUP BY Type_of_powertrain ORDER BY Annual_fuel_cost ,"
  },
  {
    "id": 439,
    "db_id": "cre_Students_Information_Systems",
    "question": "What is the average amount of a student loan?",
    "answer": "SELECT AVG(Transcripts.amount_of_loan ) FROM (SELECT DISTINCT Transcripts.student_id , SUM(Transcripts.amount_of_loan ) AS avg FROM (SELECT * FROM (SELECT Transcripts.student_details , Transcripts.student_id , SUM(amount_of_loan ) AS total FROM (SELECT DISTINCT Transcripts.student_details"
  },
  {
    "id": 440,
    "db_id": "cre_Students_Information_Systems",
    "question": "Compute the average amount of student loans.",
    "answer": "SELECT AVG(Transcripts.amount_of_loan ) FROM (SELECT SUM(Transcripts.amount_of_loan ) AS sum FROM (SELECT Transcripts.student_id , SUM(Transcripts.amount_of_loan ) AS amount_of_loans FROM (SELECT Transcripts.student_details , COUNT(Transcripts.student_details ) AS total FROM (SELECT Tran"
  },
  {
    "id": 441,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the biographical data and student id for the students who take 2 or more classes and the students who have less than 2 detentions.",
    "answer": "SELECT DISTINCT Transcripts.transcript_details FROM (SELECT * FROM (SELECT DISTINCT Transcripts.student_id , Transcripts.student_details , COUNT(Transcripts.class_details ) AS num FROM (SELECT DISTINCT Student_Loans.student_id , Student_Loans.student_details , Transcripts.date_of_transcript FROM (SELECT"
  },
  {
    "id": 442,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the biographical data and student id of the students who either took two or more classes and or have less than two detentions?",
    "answer": "SELECT DISTINCT Teachers.student_id FROM (SELECT DISTINCT Teachers.student_id FROM (SELECT DISTINCT Teachers.student_details FROM (SELECT DISTINCT Teachers.behaviour_monitoring_details FROM (SELECT Teachers.address_id , Teachers.class_details FROM (SELECT Teachers.behaviour_monitoring_details"
  },
  {
    "id": 443,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the details of the teachers who teach some class whose detail has the substring 'data' but do not teach a class whose detail contains the prefix 'net'",
    "answer": "SELECT DISTINCT Teachers.address_details FROM (SELECT DISTINCT Teachers.student_id FROM (SELECT DISTINCT Teachers.student_details FROM (SELECT DISTINCT Teachers.teacher_id , Teachers.student_details FROM (SELECT Student_Loans.student_details , Teachers.address_details FROM (SELECT Teachers.student_"
  },
  {
    "id": 444,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which teachers teach a class that has the substring 'data' in its detail but do not teach a class that has prefix 'net' in its detail? Give me the teacher details.",
    "answer": "SELECT DISTINCT Teachers.address_type_description FROM (SELECT Teachers.address_type_description , Teachers.address_details FROM (SELECT Teachers.address_type_code , Teachers.class_details FROM (SELECT DISTINCT address_type_code FROM (SELECT Teachers.address_details , Teachers.student_id FROM (SELECT DISTINCT Teachers"
  },
  {
    "id": 445,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the biographical data of the students who never had a detention or student loan .",
    "answer": "SELECT Transcripts.transcript_details FROM (SELECT Transcripts.student_id , COUNT(Transcripts.student_details ) AS num FROM (SELECT Student_Loans.student_details , COUNT(Student_Loans.student_details ) AS num FROM (SELECT Transcripts.student_details , COUNT(Transcripts.transcript_details ) AS num FROM (SELECT Transcripts.student_details"
  },
  {
    "id": 446,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which students never had a detention or student loan ? Find their biographical data .",
    "answer": "SELECT Teachers.student_id FROM (SELECT DISTINCT Teachers.student_id FROM (SELECT DISTINCT Teachers.student_details FROM (SELECT Student_Events.teacher_id , Teachers.student_details FROM (SELECT Student_Events.student_id , Student_Events.event_type_code FROM (SELECT DISTINCT Student_Events.student_details"
  },
  {
    "id": 447,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the loan amounts and loan dates of the students who have at least 2 achievements?",
    "answer": "SELECT SUM(Achievements.amount_of_loan ), SUM(Achievements.date_of_loan ) FROM (SELECT DISTINCT Teachers.student_details , SUM(Teachers.teacher_details ) AS total FROM (SELECT Student_Loans.student_details , SUM(Student_Loans.amount_of_loan ) FROM (SELECT Student_Loans.student_id , Student_"
  },
  {
    "id": 448,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the amount and date of loan for the students who have two or more achievements.",
    "answer": "SELECT COUNT(Teachers.student_id ) FROM (SELECT DISTINCT Transcripts.student_id , MAX(Teachers.date_of_transcript ) AS year FROM (SELECT Transcripts.student_id , Student_Loans.date_of_transcript FROM (SELECT DISTINCT Transcripts.student_id , Student_Loans.date_of_transcript FROM (SELECT T"
  },
  {
    "id": 449,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the detail and id of the teacher who teaches the most courses.",
    "answer": "SELECT DISTINCT Teachers.student_details FROM (SELECT DISTINCT Student_Loans.teacher_details , COUNT(Teachers.student_id ) FROM (SELECT Teachers.student_details , COUNT(Teachers.student_id ) AS Total_Teachers FROM (SELECT Teachers.student_details , COUNT(Teachers.student_id ) AS Total_T"
  },
  {
    "id": 450,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the detail and id of the teacher who teaches the largest number of courses?",
    "answer": "SELECT DISTINCT Teachers.student_details FROM (SELECT DISTINCT Student_Loans.teacher_id , COUNT(Teachers.student_details ) FROM (SELECT Teachers.student_details FROM (SELECT DISTINCT Teachers.student_details FROM (SELECT Teachers.student_details , COUNT(Student_Loans.student_details ) AS Student_Count FROM"
  },
  {
    "id": 451,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the distinct descriptions of all the detentions which have ever happened?",
    "answer": "SELECT Transcripts.transcript_details FROM (SELECT DISTINCT transcript_id FROM (SELECT DISTINCT Transcripts.student_id FROM (SELECT student_details FROM (SELECT DISTINCT Transcripts.student_id FROM (SELECT DISTINCT Student_Events.student_id FROM (SELECT Student_Events.address_type_description , Addresses.address_details FROM (SELECT DISTINCT T"
  },
  {
    "id": 452,
    "db_id": "cre_Students_Information_Systems",
    "question": "Return the distinct descriptions of all the detentions that have happened.",
    "answer": "SELECT Transcripts.transcript_details FROM (SELECT DISTINCT transcript_id FROM (SELECT Transcripts.student_id , COUNT(Transcripts.date_of_transcript ) AS num FROM (SELECT Transcripts.student_id , Transcripts.date_of_transcript FROM (SELECT DISTINCT student_details FROM (SELECT DISTINCT Transcript"
  },
  {
    "id": 453,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the personal details and the address type descriptions of all the students.",
    "answer": "SELECT Transcripts.student_details FROM cre_Students_Information_Systems.Transcripts AS T WHERE Transcripts.student_id = '0' LIMIT 1000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 454,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the personal details and the address type descriptions of each student?",
    "answer": "SELECT Transcripts.student_details , Addresses.address_type_description FROM (SELECT DISTINCT Transcripts.student_id , Addresses.address_type_description FROM (SELECT Transcripts.student_id , Transcripts.address_details FROM (SELECT Transcripts.student_details , Transcripts.address_type_description FROM (SELECT DIST"
  },
  {
    "id": 455,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the the address details and the biographical information of the students.",
    "answer": "SELECT DISTINCT Transcripts.student_details FROM (SELECT Transcripts.student_id , Transcripts.address_details FROM (SELECT DISTINCT Transcripts.address_type_description , Transcripts.address_details FROM cre_Students_Information_Systems.Addresses AS A ORDER BY Transcripts.student_id LIMIT "
  },
  {
    "id": 456,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the address details and biographical information of each student?",
    "answer": "SELECT DISTINCT Transcripts.student_details FROM (SELECT DISTINCT Transcripts.student_id FROM (SELECT DISTINCT Transcripts.student_id FROM (SELECT Transcripts.address_id FROM (SELECT Transcripts.student_details FROM (SELECT Student_Loans.bio_data , Addresses.address_type_description FROM (SELECT Student_Loans.address"
  },
  {
    "id": 457,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the biographical data and the date of the transcript of all the students.",
    "answer": "SELECT DISTINCT Transcripts.date_of_transcript FROM (SELECT Transcripts.student_details FROM (SELECT Transcripts.student_id FROM cre_Students_Information_Systems.Students AS T INNER JOIN cre_Students_Information_Systems.Student_Events AS T  ON Transcripts.student_"
  },
  {
    "id": 458,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the biographical data and the date of transcript issuance of each student?",
    "answer": "SELECT DISTINCT Transcripts.student_details FROM (SELECT Transcripts.student_id , datetime_detention_start FROM (SELECT Transcripts.student_id , datetime_detention_start FROM (SELECT Student_Loans.student_id , datetime_detention_start FROM (SELECT Transcripts.transcript_details FROM (SELECT DISTINCT Transcripts.student_details"
  },
  {
    "id": 459,
    "db_id": "cre_Students_Information_Systems",
    "question": "How many students got the most common result in the behavioral monitoring details? Also list the result details.",
    "answer": "SELECT Transcripts.transcript_details FROM (SELECT DISTINCT transcript_id FROM (SELECT Transcripts.student_id , COUNT(transcript_id ) AS num FROM (SELECT Transcripts.student_id , COUNT(Transcripts.date_of_transcript ) AS sum FROM (SELECT Transcripts.date_of_transcript , SUM(Transcripts"
  },
  {
    "id": 460,
    "db_id": "cre_Students_Information_Systems",
    "question": "Find the most common result in the behavioral monitoring details. What are the count and the details of this result?",
    "answer": "SELECT DISTINCT Transcripts.transcript_details FROM (SELECT Transcripts.date_of_transcript , COUNT(Transcripts.student_id ) AS res1 FROM (SELECT Transcripts.student_details , AVG(Transcripts.date_of_transcript ), SUM(Transcripts.date_of_transcript ) FROM (SELECT student_details FROM (SELECT Student_Loans."
  },
  {
    "id": 461,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which students not only got the most common result but also got a result obtained by 3 students in behaviour monitoring? List the student's biographical data and details.",
    "answer": "SELECT DISTINCT Transcripts.student_id FROM (SELECT DISTINCT Student_Events.student_id FROM (SELECT DISTINCT Transcripts.student_id , Transcripts.behaviour_monitoring_details FROM (SELECT DISTINCT Transcripts.student_id , Transcripts.transcript_details FROM (SELECT DISTINCT Transcripts.student_"
  },
  {
    "id": 462,
    "db_id": "cre_Students_Information_Systems",
    "question": "Find the biographical data and details of students who got not only the most common result but also a result that is obtained by 3 students in behaviour monitoring.",
    "answer": "SELECT DISTINCT Transcripts.transcript_details FROM (SELECT * FROM (SELECT DISTINCT Transcripts.student_id , Transcripts.behaviour_monitoring_details FROM (SELECT student_id FROM (SELECT Transcripts.student_id , Transcripts.behaviour_monitoring_details FROM (SELECT Transcripts.transcript_id , Tr"
  },
  {
    "id": 463,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which students only got the most common result for his or her all behaviour monitoring details? List the students' biographical information.",
    "answer": "SELECT DISTINCT Teachers.student_id FROM (SELECT DISTINCT student_details FROM (SELECT Teachers.student_details FROM (SELECT Teachers.student_details FROM (SELECT Teachers.behaviour_monitoring_details FROM (SELECT DISTINCT Teachers.student_details FROM (SELECT Teachers.student_details FROM (SELECT DISTINCT Teachers"
  },
  {
    "id": 464,
    "db_id": "cre_Students_Information_Systems",
    "question": "What is the biographical information of the students who got the most common result for their behaviour monitoring details ?",
    "answer": "SELECT DISTINCT Transcripts.student_details FROM (SELECT Transcripts.student_id , COUNT(Transcripts.transcript_details ) AS res FROM (SELECT Student_Loans.student_details , Transcripts.student_details FROM (SELECT Transcripts.student_details , Transcripts.behaviour_monitoring_details FROM (SELECT DISTINCT Transcripts"
  },
  {
    "id": 465,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which students have gone through any event? List the students' biographical data and event date.",
    "answer": "SELECT DISTINCT Teachers.student_id FROM (SELECT DISTINCT student_details FROM (SELECT Teachers.student_details FROM (SELECT student_details FROM (SELECT Teachers.student_id , Student_Events.event_type_description FROM (SELECT Teachers.student_details FROM (SELECT Teachers.student_details FROM (SELECT Teachers.student_details FROM "
  },
  {
    "id": 466,
    "db_id": "cre_Students_Information_Systems",
    "question": "Find the biographical data and event date for students who participated in any events.",
    "answer": "SELECT DISTINCT Transcripts.transcript_details FROM (SELECT * FROM (SELECT Transcripts.student_id , Transcripts.event_type_description , Transcripts.date_of_transcript FROM (SELECT Transcripts.student_id , Transcripts.detention_type_code , Transcripts.detention_type_description FROM ("
  },
  {
    "id": 467,
    "db_id": "cre_Students_Information_Systems",
    "question": "How many students have joined in the most common type of event? List the number, the event type and description.",
    "answer": "SELECT COUNT(Teachers.student_id ) FROM (SELECT Transcripts.transcript_details , COUNT(Teachers.student_id ) AS id FROM (SELECT DISTINCT Transcripts.transcript_details , Teachers.student_id FROM (SELECT DISTINCT Transcripts.transcript_details , Student_Events.event_type_code , Student_Events.event_type_description FROM ("
  },
  {
    "id": 468,
    "db_id": "cre_Students_Information_Systems",
    "question": "What is the type of event the most students joined? Give me the number of students, and the event type code and description.",
    "answer": "SELECT DISTINCT Teachers.event_type_code , Teachers.event_type_description FROM (SELECT Teachers.event_type_code , Teachers.event_type_description FROM (SELECT event_type_description FROM (SELECT Teachers.event_type_description , COUNT(Teachers.student_id ) AS num FROM (SELECT DISTINCT Teachers.event_type_description"
  },
  {
    "id": 469,
    "db_id": "cre_Students_Information_Systems",
    "question": "How are all the achievements described? List the achievement detail and the type description.",
    "answer": "SELECT DISTINCT Teachers.achievement_type_description FROM (SELECT DISTINCT Teachers.achievement_type_code , Teachers.address_id FROM (SELECT DISTINCT Teachers.address_type_code , Teachers.address_details FROM (SELECT DISTINCT Teachers.address_type_description FROM (SELECT Teachers.address_type_"
  },
  {
    "id": 470,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the achievement detail and the type description of each achievements?",
    "answer": "SELECT Transcripts.achievement_type_description , Transcripts.event_type_code FROM (SELECT DISTINCT Transcripts.event_type_description FROM (SELECT DISTINCT Transcripts.event_type_description , Transcripts.event_type_code FROM (SELECT DISTINCT Transcripts.event_type_description , Transcripts.event_"
  },
  {
    "id": 471,
    "db_id": "cre_Students_Information_Systems",
    "question": "How many teachers have taught a student who has not won any achievements?",
    "answer": "SELECT COUNT(Teachers.student_id ) FROM (SELECT Transcripts.transcript_details FROM (SELECT DISTINCT Transcripts.student_id , SUM(Teachers.behaviour_monitoring_id ) AS sum FROM (SELECT Transcripts.student_details , COUNT(Teachers.student_details ) AS count FROM (SELECT Student_Loans.student_details , COUNT("
  },
  {
    "id": 472,
    "db_id": "cre_Students_Information_Systems",
    "question": "Count the number of teachers who have taught students who have never won an achievement.",
    "answer": "SELECT COUNT(Teachers.student_id ) FROM (SELECT DISTINCT Transcripts.teacher_id , COUNT(Teachers.student_details ) AS num FROM (SELECT Teachers.student_details , Transcripts.transcript_id FROM (SELECT student_details FROM (SELECT student_id , SUM(Achievements.detention_type_code ) AS sum FROM (SELECT DISTINCT Tran"
  },
  {
    "id": 473,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the date of the transcripts and the transcript details.",
    "answer": "SELECT DISTINCT Transcripts.date_of_transcript , Transcripts.transcript_details FROM (SELECT Transcripts.student_id , Transcripts.date_of_transcript FROM (SELECT student_id , date_of_transcript FROM (SELECT Transcripts.student_details FROM (SELECT Student_Loans.student_details FROM (SELECT Transcripts."
  },
  {
    "id": 474,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the date and detail of each transcript?",
    "answer": "SELECT DISTINCT Transcripts.date_of_transcript , Transcripts.transcript_details FROM (SELECT Transcripts.student_id , Ref_Event_Types.event_type_description FROM (SELECT Transcripts.student_id , Transcripts.behaviour_monitoring_details FROM (SELECT DISTINCT Transcripts.student_id , T"
  },
  {
    "id": 475,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the achievement type code, achievement details and the date of the achievements.",
    "answer": "SELECT DISTINCT Teachers.achievement_type_description , Teachers.achievement_type_code FROM (SELECT DISTINCT Teachers.achievement_type_description , Teachers.student_id , date_of_transcript FROM (SELECT Teachers.achievement_type_code , Teachers.student_id FROM (SELECT Teachers.achievement_type"
  },
  {
    "id": 476,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the type code, details, and date of each achievement?",
    "answer": "SELECT DISTINCT Teachers.event_type_code , Teachers.event_type_description FROM (SELECT DISTINCT event_type_description FROM (SELECT Teachers.event_type_description FROM (SELECT event_type_description FROM (SELECT Teachers.event_type_code FROM (SELECT Teachers.address_details FROM (SELECT DISTINCT Addresses.address_id FROM (SELECT DISTINCT T"
  },
  {
    "id": 477,
    "db_id": "cre_Students_Information_Systems",
    "question": "Show the detention start time and end time of the detentions.",
    "answer": "SELECT DISTINCT Transcripts.date_of_transcript FROM (SELECT Transcripts.date_of_transcript , Transcripts.student_id , Ref_Address_Types.address_type_description , Transcripts.detention_type_code FROM (SELECT DISTINCT Transcripts.student_id , Ref_Event_Types.event_type_code , Ref_Event_"
  },
  {
    "id": 478,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the starting time and ending time of each detention record?",
    "answer": "SELECT DISTINCT Transcripts.date_of_transcript FROM (SELECT DISTINCT Transcripts.date_of_transcript , Transcripts.student_id FROM (SELECT Transcripts.student_details FROM (SELECT Transcripts.student_id , Transcripts.date_of_transcript FROM (SELECT Student_Loans.student_details , Transcripts.date_of"
  },
  {
    "id": 479,
    "db_id": "cre_Students_Information_Systems",
    "question": "Show the biographical information of the students whose details include the substring 'Suite'.",
    "answer": "SELECT DISTINCT Transcripts.transcript_details FROM cre_Students_Information_Systems.Transcripts AS T INNER JOIN (SELECT Transcripts.student_id , Behaviour_Monitoring.student_id , MAX(Transcripts.date_of_transcript ) FROM cre_Students_Information_Systems.Trans"
  },
  {
    "id": 480,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which students have 'Suite' as a substring in their details? Give me their biographical information.",
    "answer": "SELECT DISTINCT Teachers.student_id FROM (SELECT Teachers.student_id , Teachers.student_details FROM (SELECT Teachers.student_details FROM (SELECT Teachers.student_details FROM (SELECT Teachers.student_details , Detention.address_type_description FROM (SELECT Teachers.student_details FROM (SELECT Teachers."
  },
  {
    "id": 481,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the details for all the pairs of teachers and students who are in the same class.",
    "answer": "SELECT DISTINCT Transcripts.transcript_details FROM (SELECT Transcripts.student_id , Transcripts.date_of_transcript FROM (SELECT Transcripts.student_id , Transcripts.date_of_transcript FROM (SELECT Transcripts.student_details , Transcripts.student_id FROM (SELECT DISTINCT Transcripts.student_id , Transcripts."
  },
  {
    "id": 482,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the pairs of teachers and students who are in the same class? Give me the pairs of their details.",
    "answer": "SELECT DISTINCT Transcripts.student_id FROM (SELECT Transcripts.student_details FROM (SELECT Transcripts.student_details , Transcripts.transcript_details FROM (SELECT Transcripts.student_id , Transcripts.behaviour_monitoring_details FROM (SELECT Transcripts."
  },
  {
    "id": 483,
    "db_id": "cre_Students_Information_Systems",
    "question": "How many courses do teachers teach at most? Also find the id of the teacher who teaches the most.",
    "answer": "SELECT DISTINCT Teachers.address_id FROM (SELECT DISTINCT Teachers.student_id FROM (SELECT DISTINCT Teachers.student_id , SUM(Students.detention_type_code ), COUNT(Teachers.teacher_id ) AS sum FROM (SELECT Teachers.student_details , SUM(Students.detention_type_description ) AS total FROM (SELECT"
  },
  {
    "id": 484,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which teacher teaches the most courses? Give me the id of the teacher and the number of courses he or she teaches.",
    "answer": "SELECT DISTINCT Teachers.teacher_id FROM (SELECT Teachers.teacher_id , COUNT(Teachers.student_id ) AS cnt FROM (SELECT * FROM (SELECT Student_Loans.teacher_id , COUNT(Teachers.student_id ), Ref_Event_Types.event_type_description FROM (SELECT DISTINCT Teachers.teacher_id ,"
  },
  {
    "id": 485,
    "db_id": "cre_Students_Information_Systems",
    "question": "How many courses do students take at most? Also find the id of the student who takes the most courses.",
    "answer": "SELECT COUNT(Teachers.student_id ) FROM (SELECT Teachers.student_id , COUNT(Teachers.student_details ) AS sum FROM (SELECT DISTINCT Teachers.student_id , COUNT(Teachers.student_details ), COUNT(Teachers.student_details ), Teachers.detention_type_code FROM (SELECT DISTINCT Teach"
  },
  {
    "id": 486,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which student is taking the most courses? Give me the id of the student and the number of courses he or she is taking.",
    "answer": "SELECT DISTINCT Teachers.student_id , SUM(Teachers.student_details ) AS Courses FROM (SELECT Teachers.student_id , SUM(Classes.class_details ) FROM (SELECT Teachers.student_id , COUNT(Student_Loans.teacher_id ), Student_Loans.class_details FROM (SELECT Teachers.student"
  },
  {
    "id": 487,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which students take 2 courses? List student id and details.",
    "answer": "SELECT DISTINCT Teachers.student_id , Teachers.student_details FROM (SELECT Teachers.student_id , Teachers.student_details FROM (SELECT DISTINCT Teachers.teacher_id , Teachers.student_id FROM (SELECT DISTINCT Teachers.teacher_id FROM (SELECT student_details FROM (SELECT Teachers.student_details FROM ("
  },
  {
    "id": 488,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the ids and details of the students who take 2 courses?",
    "answer": "SELECT DISTINCT Teachers.student_id FROM (SELECT DISTINCT Teachers.student_id , SUM(Teachers.teacher_id ) AS cnt1 , SUM(Teachers.teacher_id ) AS cnt2 FROM (SELECT DISTINCT Student_Events.student_details FROM (SELECT Student_Events.teacher_id , COUNT(Students.student_id"
  },
  {
    "id": 489,
    "db_id": "cre_Students_Information_Systems",
    "question": "What is the least common detention type? Show the type code and the description.",
    "answer": "SELECT DISTINCT Transcripts.transcript_details FROM (SELECT DISTINCT Transcripts.transcript_details FROM (SELECT DISTINCT Transcripts.transcript_id , COUNT(Transcripts.student_id ) AS cnt FROM (SELECT DISTINCT student_id FROM (SELECT Student_Loans.student_id FROM (SELECT Student_Loans.student_details , Transcripts.student"
  },
  {
    "id": 490,
    "db_id": "cre_Students_Information_Systems",
    "question": "Give me the type code and description of the least common detention type.",
    "answer": "SELECT DISTINCT Teachers.address_type_code , Teachers.address_details FROM (SELECT Teachers.address_type_description , Ref_Address_Types.event_type_description FROM (SELECT DISTINCT Teachers.address_type_description , Transcripts.transcript_id FROM (SELECT Transcripts.student_details FROM (SELECT Transcripts"
  },
  {
    "id": 491,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which students have a student loan more than the average amount? List the students' biographical data and the details.",
    "answer": "SELECT DISTINCT Teachers.student_id FROM (SELECT Teachers.student_details FROM (SELECT SUM(Teachers.student_details ) AS sum , student_id FROM (SELECT student_details FROM (SELECT student_details FROM (SELECT Teachers.student_details , AVG(Teachers.student_details ) FROM (SELECT Teachers.student_details , AVG(Teachers"
  },
  {
    "id": 492,
    "db_id": "cre_Students_Information_Systems",
    "question": "Find the biographical data and details for students whose student loan is above the average amount.",
    "answer": "SELECT DISTINCT Transcripts.transcript_details FROM (SELECT Transcripts.student_id , SUM(Transcripts.amount_of_loan ) AS avgFROM \n                        FROM (SELECT Transcripts.transcript_details , Behaviour_Monitoring.student_details , Behaviour_Monitoring.student_id FROM (SELECT Student_Lo"
  },
  {
    "id": 493,
    "db_id": "cre_Students_Information_Systems",
    "question": "When was the earliest date of loan?",
    "answer": "SELECT DISTINCT Transcripts.date_of_transcript FROM (SELECT Transcripts.date_of_transcript FROM (SELECT Transcripts.date_of_transcript , MAX(Transcripts.student_id ) AS max_student_id FROM (SELECT DISTINCT student_id , MAX(Transcripts.date_of_transcript ) AS diff_max FROM (SELECT DISTINCT Transcripts."
  },
  {
    "id": 494,
    "db_id": "cre_Students_Information_Systems",
    "question": "Return the earliest date of loan in the record.",
    "answer": "SELECT DISTINCT Transcripts.date_of_transcript FROM (SELECT Transcripts.date_of_transcript FROM (SELECT Transcripts.student_details FROM (SELECT student_id , SUM(transcript_details ) AS total FROM (SELECT DISTINCT Student_Loans.detention_type_code FROM (SELECT DISTINCT Transcripts.student_details"
  },
  {
    "id": 495,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which student has the loan with the minimum value? List the student's biographical information.",
    "answer": "SELECT DISTINCT Teachers.student_id FROM (SELECT DISTINCT Student_Loans.student_id , SUM(Student_Loans.amount_of_loan ) AS sum FROM (SELECT Teachers.student_details FROM (SELECT Student_Loans.student_details FROM (SELECT student_details FROM (SELECT Teachers.student_details , COUNT(Teachers.student_id ) AS num"
  },
  {
    "id": 496,
    "db_id": "cre_Students_Information_Systems",
    "question": "Find the biographical information of the student with the smallest student loan.",
    "answer": "SELECT DISTINCT Transcripts.transcript_details FROM (SELECT MAX(Transcripts.student_id ) AS id FROM (SELECT Transcripts.student_id FROM (SELECT Student_Loans.student_id , SUM(Transcripts.student_details ), COUNT(Transcripts.student_id ) AS sum FROM (SELECT student_details FROM (SELECT Student_Loans.student"
  },
  {
    "id": 497,
    "db_id": "cre_Students_Information_Systems",
    "question": "When was the transcript issued for the student with loan of maximum value?",
    "answer": "SELECT MAX(Transcripts.date_of_transcript ) AS year FROM (SELECT Transcripts.student_id , SUM(Transcripts.date_of_transcript ) AS total FROM (SELECT DISTINCT student_details FROM (SELECT Transcripts.student_details , SUM(Transcripts.date_of_transcript ) AS total FROM (SELECT Student_Loans."
  },
  {
    "id": 498,
    "db_id": "cre_Students_Information_Systems",
    "question": "What is the transcript issuance date for the student with the largest amount of loan?",
    "answer": "SELECT MAX(transcript_details ) FROM (SELECT Transcripts.date_of_transcript , COUNT(Transcripts.student_id ) AS total FROM (SELECT DISTINCT Student_Loans.student_id FROM cre_Students_Information_Systems.Students_Addresses AS T WHERE Transcripts.transcript_details = 'I-1"
  },
  {
    "id": 499,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which teachers have taught the student with the earliest transcript issuance? List the teacher details.",
    "answer": "SELECT DISTINCT Teachers.address_type_description FROM (SELECT MAX(Teachers.address_type_description ) AS AddressTypeID FROM (SELECT Teachers.address_type_description FROM (SELECT Teachers.address_type_description FROM (SELECT Teachers.address_details FROM (SELECT Teachers.student_id FROM (SELECT Teachers.student_details FROM (SELECT Student_Loan"
  },
  {
    "id": 500,
    "db_id": "cre_Students_Information_Systems",
    "question": "Find the details of the teachers who have taught the student with the earliest transcript issuance.",
    "answer": "SELECT DISTINCT Teachers.student_details FROM (SELECT Transcripts.date_of_transcript FROM (SELECT DISTINCT Transcripts.date_of_transcript FROM (SELECT Transcripts.student_id FROM (SELECT Student_Loans.student_id FROM (SELECT DISTINCT Student_Loans.student_details FROM (SELECT Student_Loans.student"
  },
  {
    "id": 501,
    "db_id": "cre_Students_Information_Systems",
    "question": "How much total loan does each student have ? List the student ids and the amounts .",
    "answer": "SELECT Transcripts.student_id , SUM(Transcripts.transcript_details ) AS sum , SUM(Transcripts.amount_of_loan ) FROM (SELECT DISTINCT Transcripts.student_id , SUM(Transcripts.transcript_details ) AS sum , SUM(Transcripts.amount_of_loan ) FROM (SELECT Student_Loans."
  },
  {
    "id": 502,
    "db_id": "cre_Students_Information_Systems",
    "question": "For each student, find the student id and the total amount of loan he or she has.",
    "answer": "SELECT DISTINCT Transcripts.student_id , SUM(Teachers.amount_of_loan ) FROM (SELECT Student_Loans.student_id , COUNT(*) AS sum FROM (SELECT Transcripts.student_id , COUNT(Transcripts.student_details ) AS total FROM (SELECT Transcripts.student_details FROM (SELECT Transcripts.student_details FROM"
  },
  {
    "id": 503,
    "db_id": "cre_Students_Information_Systems",
    "question": "How many courses does each student take? List the student id, the student biographical data and the course count.",
    "answer": "SELECT COUNT(Teachers.student_id ), Transcripts.student_id , SUM(Teachers.student_details ) FROM (SELECT DISTINCT Transcripts.student_id , Transcripts.student_details FROM (SELECT DISTINCT Transcripts.student_id FROM (SELECT student_id , COUNT(Teachers.teacher_details ) AS num FROM (SELECT Transcripts.student"
  },
  {
    "id": 504,
    "db_id": "cre_Students_Information_Systems",
    "question": "For each student, find the student id, student biographical data, and the number of courses he or she takes.",
    "answer": "SELECT DISTINCT Transcripts.student_id , Transcripts.date_of_transcript , SUM(Transcripts.class_id ) FROM (SELECT DISTINCT student_details FROM cre_Students_Information_Systems.Students INNER JOIN cre_Students_Information_Systems.T"
  },
  {
    "id": 505,
    "db_id": "cre_Students_Information_Systems",
    "question": "How many students have gone through a detention?",
    "answer": "SELECT COUNT(student_id ) FROM (SELECT Transcripts.student_id FROM (SELECT Transcripts.student_id FROM (SELECT Transcripts.student_details , COUNT(Transcripts.detention_type_code ) AS num FROM (SELECT Transcripts.student_details , Detention.address_type_description FROM (SELECT Transcripts.student_details , D"
  },
  {
    "id": 506,
    "db_id": "cre_Students_Information_Systems",
    "question": "Count the number of students who have a detention record.",
    "answer": "SELECT COUNT(student_id ) FROM (SELECT Teachers.student_details FROM (SELECT DISTINCT Teachers.student_details FROM (SELECT Teachers.student_details FROM (SELECT Student_Loans.teacher_details FROM (SELECT DISTINCT Student_Loans.student_details FROM (SELECT Teachers.student_details FROM (SELECT Teachers.student_details FROM ("
  },
  {
    "id": 507,
    "db_id": "cre_Students_Information_Systems",
    "question": "What is the code and description of the most common student address type?",
    "answer": "SELECT DISTINCT Transcripts.address_type_description FROM (SELECT DISTINCT Transcripts.address_type_description FROM (SELECT Transcripts.address_type_description , COUNT(Transcripts.student_details ) AS total FROM (SELECT DISTINCT Transcripts.address_type_description FROM (SELECT DISTINCT Transcripts.address_type_description , Transcripts.student"
  },
  {
    "id": 508,
    "db_id": "cre_Students_Information_Systems",
    "question": "What is the most common student address type? Give me the code and description of the address type.",
    "answer": "SELECT DISTINCT Transcripts.address_type_code FROM (SELECT DISTINCT Transcripts.address_type_description , Transcripts.address_details FROM (SELECT DISTINCT Transcripts.address_details FROM (SELECT Transcripts.student_details FROM (SELECT Student_Loans.student_id FROM (SELECT DISTINCT Student_Loans.student_details FROM (SELECT T"
  },
  {
    "id": 509,
    "db_id": "cre_Students_Information_Systems",
    "question": "For those students who have gone through an event, who do not have a student loan? List the students' biographical data",
    "answer": "SELECT Transcripts.student_id FROM (SELECT Transcripts.transcript_details FROM (SELECT DISTINCT Transcripts.student_details FROM (SELECT DISTINCT Transcripts.student_id , Transcripts.date_of_transcript FROM (SELECT student_details FROM (SELECT Transcripts.transcript_details FROM (SELECT DISTINCT Transcripts.student_details"
  },
  {
    "id": 510,
    "db_id": "cre_Students_Information_Systems",
    "question": "Among the students who have an event record, who do not have a student loan? Return the students' biographical data.",
    "answer": "SELECT Teachers.student_details FROM (SELECT DISTINCT Teachers.student_id FROM (SELECT DISTINCT Teachers.student_id FROM (SELECT student_id , COUNT(Teachers.transcript_details ) AS num FROM (SELECT Teachers.student_id FROM (SELECT DISTINCT Teachers.student_id FROM (SELECT DISTINCT Student_Loans.student_"
  },
  {
    "id": 511,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the start time and the end time of the students' addresses for the students who have 2 transcripts.",
    "answer": "SELECT DISTINCT Transcripts.student_details FROM (SELECT Transcripts.student_details FROM (SELECT Transcripts.address_id FROM (SELECT student_details FROM (SELECT Transcripts.address_details FROM (SELECT DISTINCT Addresses.address_id , Transcripts.date_of_transcript FROM (SELECT DISTINCT Transcripts.student_details FROM"
  },
  {
    "id": 512,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the start time and end time of addresses for the students who receive 2 transcripts?",
    "answer": "SELECT DISTINCT Transcripts.date_of_transcript FROM (SELECT DISTINCT Transcripts.date_of_transcript FROM (SELECT Transcripts.student_id FROM (SELECT student_details FROM (SELECT student_id FROM (SELECT DISTINCT Transcripts.address_details FROM (SELECT Transcripts.student_id FROM (SELECT Student_Loans.address_details FROM (SELECT"
  },
  {
    "id": 513,
    "db_id": "cre_Students_Information_Systems",
    "question": "When did all the detentions start?",
    "answer": "SELECT MAX(date_of_transcript ) FROM (SELECT DISTINCT Transcripts.student_id , Transcripts.date_of_transcript FROM (SELECT Transcripts.student_id , Transcripts.date_of_transcript FROM (SELECT Transcripts.student_details , Transcripts.student_id , Detention.detention_type_code , Transcripts.date_"
  },
  {
    "id": 514,
    "db_id": "cre_Students_Information_Systems",
    "question": "Give me the detention start date for all the detention records.",
    "answer": "SELECT Transcripts.date_of_transcript FROM (SELECT DISTINCT date_of_transcript FROM (SELECT Transcripts.student_id , date_of_transcript FROM (SELECT Transcripts.student_details FROM (SELECT Student_Loans.student_id , Transcripts.date_of_transcript FROM (SELECT student_details FROM (SELECT DISTINCT Transcripts"
  },
  {
    "id": 515,
    "db_id": "book_1",
    "question": "List all the author names.",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT Title FROM book_1.Book ORDER BY Author LIMIT 2)) AS T ORDER BY Title LIMIT 1000000000394576183720185720000888055105094666054815262"
  },
  {
    "id": 516,
    "db_id": "book_1",
    "question": "What are the names of all the authors?",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM"
  },
  {
    "id": 517,
    "db_id": "book_1",
    "question": "Show all Client names and their addresses.",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM"
  },
  {
    "id": 518,
    "db_id": "book_1",
    "question": "What are the names and addressed of all clients?",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM book_1.Book WHERE Author = 'TiK TU') AS T ORDER BY idAuthor LIMIT 1000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 519,
    "db_id": "book_1",
    "question": "List all Book titles, ISBNs, and sale prices.",
    "answer": "SELECT Title , ISBN FROM book_1.Orders WHERE Orders.IdOrder =  'b348597226' GROUP BY Title ORDER BY Title LIMIT 1000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 520,
    "db_id": "book_1",
    "question": "What are the titles, ISBNs, and sale prices for all books?",
    "answer": "SELECT Title , ISBN , SUM(SalePrice ) FROM (SELECT * FROM (SELECT Title , ISBN , SUM(Title ) AS sum FROM (SELECT Title , ISBN FROM (SELECT Title , COUNT(*) AS c FROM (SELECT Title , ISBN FROM book_1.Book WHERE NumCC = 0 GROUP BY Title ) ORDER BY Title ) AS q ORDER BY PurchasePrice , SalePrice ) AS t ORDER BY T"
  },
  {
    "id": 521,
    "db_id": "book_1",
    "question": "How many books do we have?",
    "answer": "SELECT COUNT(*) FROM book_1.Book WHERE idAuthor = 4355649580474724010 ORDER BY idAuthor LIMIT 10 OFFSET 1000000000121661252736927826469033577627971629775911662"
  },
  {
    "id": 522,
    "db_id": "book_1",
    "question": "Count the number of books.",
    "answer": "SELECT COUNT(*) FROM (SELECT Title , SUM(amount ) AS num FROM (SELECT Title , SUM(amount ) AS num FROM (SELECT Title , amount FROM book_1.Book GROUP BY Title ORDER BY NumCC LIMIT 1)) ORDER BY NumCC LIMIT 1) AS T ORDER BY NumCC LIMIT 1 OFFSET 0"
  },
  {
    "id": 523,
    "db_id": "book_1",
    "question": "How many authors are there?",
    "answer": "SELECT COUNT(Title ) FROM book_1.Author GROUP BY Title ORDER BY Title  DESC LIMIT 1000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 524,
    "db_id": "book_1",
    "question": "Count the number of authors.",
    "answer": "SELECT COUNT(Title ) FROM book_1.Author GROUP BY Title ORDER BY Title LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 525,
    "db_id": "book_1",
    "question": "How many clients are there?",
    "answer": "SELECT COUNT(idAuthor ) FROM (SELECT Title FROM (SELECT Title FROM book_1.Book WHERE ISBN = '978-0452165738') AS T INNER JOIN (SELECT Title , SUM(amount ) AS total FROM (SELECT DISTINCT idAuthor , SUM(Title ) FROM (SELECT Title FROM book_1.Book WHERE ISBN = '97"
  },
  {
    "id": 526,
    "db_id": "book_1",
    "question": "Return the number of clients.",
    "answer": "SELECT COUNT(idAuthor ) FROM (SELECT Title FROM book_1.Orders WHERE NumCC = 3 ORDER BY DateExped LIMIT 1) AS T INNER JOIN (SELECT COUNT(IdClient ) AS cnt FROM (SELECT IdClient , MAX(NumCC ) AS ncc FROM book_1.Orders GROUP BY idAuthor ) AS S ORDER BY DateExped LIMIT 1) AS t  ON Title = Title ORDER"
  },
  {
    "id": 527,
    "db_id": "book_1",
    "question": "List names and addresses of all clients in alphabetical order by their names.",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM book_1.Orders ORDER BY Name ) AS T ORDER BY Title LIMIT 1000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 528,
    "db_id": "book_1",
    "question": "What are the names and addressed of all clients, ordered alphabetically by name?",
    "answer": "SELECT DISTINCT Title FROM (SELECT Name , Address FROM (SELECT Name , Title FROM (SELECT Title FROM (SELECT Title FROM book_1.Orders ORDER BY Title LIMIT 2)) AS O ) AS T WHERE Title > '' ORDER BY Title LIMIT 2) GROUP BY Title ORDER BY Title LIMIT 2 OFFSET 1043"
  },
  {
    "id": 529,
    "db_id": "book_1",
    "question": "Show all book titles and corresponding author names.",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM"
  },
  {
    "id": 530,
    "db_id": "book_1",
    "question": "What are the names of all books and their corresponding authors?",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM book_1.Orders WHERE idAuthor = 'T207486891' ORDER BY Author LIMIT 1)) ORDER BY Title LIMIT 1500193379764000100000000000000000000000"
  },
  {
    "id": 531,
    "db_id": "book_1",
    "question": "Show all order ids and their client names.",
    "answer": "SELECT DISTINCT Title FROM (SELECT idAuthor , idAuthor , Title FROM book_1.Orders ORDER BY idAuthor LIMIT 1) AS A ORDER BY Title LIMIT 300192574463028389540000122879430470494709621296"
  },
  {
    "id": 532,
    "db_id": "book_1",
    "question": "What are the ids of all orders and the corresponding client names?",
    "answer": "SELECT DISTINCT Title FROM (SELECT idAuthor , IdClient , Title FROM (SELECT idAuthor , Title FROM book_1.Orders WHERE DateExped = '2020-93' ORDER BY DateExped LIMIT 1) AS T WHERE Title = 'other') AS t WHERE Orders.idAuthor = 'none' ORDER BY Title LIMIT"
  },
  {
    "id": 533,
    "db_id": "book_1",
    "question": "Show all author names and the numbers of books each has written.",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM book_1.Author AS T , book_1.Book ORDER BY Title LIMIT 5) AS A INNER JOIN book_1.Book AS B  ON Title = Books_Order.Title ORDER BY Title LIMIT 50000000000000000000000"
  },
  {
    "id": 534,
    "db_id": "book_1",
    "question": "What are the names of all the authors, and how many books has each written?",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Author.Name , COUNT(Title ) AS nums FROM (SELECT Title , SUM(amount ) AS NumCC FROM book_1.Orders GROUP BY Title ORDER BY NumCC LIMIT 1)) AS T ) AS T INNER JOIN book_1.Book AS b  ON Title = book_"
  },
  {
    "id": 535,
    "db_id": "book_1",
    "question": "Show all book isbns and the numbers of orders for each.",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM book_1.Orders GROUP BY Title ORDER BY Title LIMIT 1) AS x INNER JOIN book_1.Book AS T  ON Title = 'ISBN' GROUP BY Title ORDER BY Title LIMIT 1000000005462030000000"
  },
  {
    "id": 536,
    "db_id": "book_1",
    "question": "What are all isbns for each book, and how many times has each been ordered?",
    "answer": "SELECT SUM(PurchasePrice ) AS total , COUNT(PurchasePrice ) FROM (SELECT PurchasePrice , COUNT(PurchasePrice ) AS num FROM (SELECT Title  FROM (SELECT Title , ISBN , COUNT(Title ), SUM(amount ) AS Total FROM (SELECT DISTINCT ISBN , amount FROM (SELECT Title , COUNT(Title ) AS num FROM (SELECT PurchasePrice , COUNT(P"
  },
  {
    "id": 537,
    "db_id": "book_1",
    "question": "Show all book isbns and the total amount ordered for each.",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM book_1.Orders ORDER BY Orders.PurchasePrice LIMIT 1) AS t INNER JOIN book_1.Orders ON Title = 'IBNF' GROUP BY Title ORDER BY Title , PurchasePrice LIMIT 1000000000000000000000000"
  },
  {
    "id": 538,
    "db_id": "book_1",
    "question": "What are the isbns for all books, and what is the total amount ordered for each?",
    "answer": "SELECT Title FROM (SELECT SUM(amount ) AS Total , COUNT(IdOrder ), SUM(amount ) AS AllNum , SUM(Title ) AS Total FROM book_1.Book WHERE idAuthor = 'b294453a-70c8-47ea-888a-264d6ac670be3' GROUP BY IdOrder ) AS T ORDER BY Title LIMIT 10"
  },
  {
    "id": 539,
    "db_id": "book_1",
    "question": "Show the book title corresponding to the book with the most number of orders.",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT COUNT(Title ) AS N FROM (SELECT Title FROM (SELECT Title  FROM (SELECT DISTINCT Title FROM (SELECT DISTINCT Title , COUNT(Title ) AS n FROM (SELECT Title  FROM (SELECT Titl"
  },
  {
    "id": 540,
    "db_id": "book_1",
    "question": "What is the title of the book that has been ordered the greatest number of times?",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT COUNT(Title ) AS Total , Title FROM (SELECT Title FROM (SELECT Title , COUNT(Title ) AS Stats FROM (SELECT Title FROM (SELECT COUNT(Title ) AS Stats FROM (SELECT Title , Title FROM (SELECT COUNT(Title ) AS St"
  },
  {
    "id": 541,
    "db_id": "book_1",
    "question": "Show the book title and purchase price of the book that has had the greatest amount in orders.",
    "answer": "SELECT Title , SUM(Title ) FROM (SELECT Title , SUM(Title ) AS sum FROM (SELECT Title , MIN(amount ), SUM(amount ) FROM (SELECT amount , ISBN , idAuthor FROM (SELECT DISTINCT Title FROM (SELECT Title , MIN(amount ) AS x FROM (SELECT Title"
  },
  {
    "id": 542,
    "db_id": "book_1",
    "question": "What is the title and purchase price of the book that has the highest total order amount?",
    "answer": "SELECT Title , SUM(Title ) FROM (SELECT Title , SUM(Title ) AS sum FROM (SELECT Title , MAX(Title ) AS ta FROM (SELECT Title , Title , PurchasePrice FROM (SELECT Title , MAX(PurchasePrice ) FROM book_1.Orders WHERE idAuthor = 'a'"
  },
  {
    "id": 543,
    "db_id": "book_1",
    "question": "Show the titles of books that have been ordered.",
    "answer": "SELECT Title FROM book_1.Orders WHERE Orders.IdClient =  'LU0768592' GROUP BY Title ORDER BY NumCC LIMIT 1134592646818914381358734917739698011521471651989766584887"
  },
  {
    "id": 544,
    "db_id": "book_1",
    "question": "What are the different titles of books that have been ordered in the past?",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM book_1.Orders ORDER BY Orders.DateOrder LIMIT 2) AS t INNER JOIN book_1.Book AS B  ON Books_Order.ISBN = Books_Order.ISBN GROUP BY DateOrder ORDER BY Orders.DateOrder LIMIT 2) AS T INNER JOIN book_1.Book AS B  ON Bo"
  },
  {
    "id": 545,
    "db_id": "book_1",
    "question": "Show the names of clients who have ordered at least once.",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM book_1.Orders WHERE amount > 0 GROUP BY Title ORDER BY idAuthor LIMIT 1) AS T ORDER BY Title LIMIT 1"
  },
  {
    "id": 546,
    "db_id": "book_1",
    "question": "What are the names of the different clients who have made an order?",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM book_1.Orders ORDER BY DateExped LIMIT 1) AS T ORDER BY idAuthor LIMIT 1000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 547,
    "db_id": "book_1",
    "question": "Show all client names and the number of orders each has made.",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title , COUNT(*) AS Total FROM (SELECT idAuthor , SUM(PurchasePrice ) AS num FROM (SELECT Title FROM (SELECT Title , COUNT(Title ), SUM(amount ) AS sum FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title , PurchasePrice , SUM(amount ) AS total FROM (SELECT Tit"
  },
  {
    "id": 548,
    "db_id": "book_1",
    "question": "What are the names of all the clients, and how many times has each of them ordered?",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM book_1.Book ORDER BY NumCC LIMIT 1) AS T ORDER BY Title LIMIT 1000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 549,
    "db_id": "book_1",
    "question": "What is the name of the client with the most number of orders?",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM book_1.Orders ORDER BY NumCC LIMIT 1) AS T ORDER BY Title LIMIT 1640587234854725559263956150939141042187478287529551637249"
  },
  {
    "id": 550,
    "db_id": "book_1",
    "question": "Give the name of the client who has made the most orders.",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT COUNT(Title ) AS sum FROM (SELECT Title , SUM(amount ), SUM(PurchasePrice ) FROM (SELECT Title , amount FROM (SELECT Title , PurchasePrice FROM (SELECT idAuthor , SUM(amount ) FROM (SELECT DISTINCT Title , Title FROM (SELECT COUNT(Title"
  },
  {
    "id": 551,
    "db_id": "book_1",
    "question": "Show the client names and their total amounts of books ordered.",
    "answer": "SELECT Title FROM (SELECT Title , SUM(amount ) AS sum_total FROM (SELECT DISTINCT Title , SUM(amount ) AS sum_total FROM book_1.Book ORDER BY Title LIMIT 5) AS T ORDER BY Title LIMIT 10) WHERE Title = '' ORDER BY Title LIMIT 245679582321623"
  },
  {
    "id": 552,
    "db_id": "book_1",
    "question": "What are the names of all the clients, and the total amount of books ordered by each?",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM book_1.Book ORDER BY PurchasePrice LIMIT 2) AS T INNER JOIN (SELECT COUNT(Title ) AS n FROM (SELECT DISTINCT Title FROM book_1.Book WHERE Title = 'books order') AS T GROUP BY Title ORDER BY Title LIMIT 3) AS T  ON Title = Ti"
  },
  {
    "id": 553,
    "db_id": "book_1",
    "question": "Show the client name who has the most total amount of books ordered.",
    "answer": "SELECT Title FROM (SELECT Title FROM book_1.Orders ORDER BY NumCC LIMIT 1) AS T ORDER BY Title LIMIT 100000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 554,
    "db_id": "book_1",
    "question": "What is the name of the client who has ordered the greatest total amount of books?",
    "answer": "SELECT Title , Title FROM (SELECT SUM(Title ) AS total , COUNT(Title ) AS num FROM (SELECT COUNT(Title ) AS num FROM book_1.Orders GROUP BY idAuthor ORDER BY Title LIMIT 1) AS s WHERE Title > '92400' ORDER BY Title LIMIT 354684716"
  },
  {
    "id": 555,
    "db_id": "book_1",
    "question": "Show all book titles for books that have no orders.",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Tit"
  },
  {
    "id": 556,
    "db_id": "book_1",
    "question": "What are the titles of books that have never been ordered?",
    "answer": "SELECT Title FROM book_1.Book WHERE idAuthor = 2 LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 557,
    "db_id": "book_1",
    "question": "Show all client names for clients who have not made orders.",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM book_1.Orders WHERE Orders.PurchasePrice = 0 GROUP BY Title ORDER BY idAuthor LIMIT 1) AS T INNER JOIN (SELECT Title FROM book_1.Orders WHERE NumCC < 3 GROUP BY Title ORDER BY Title LIMIT 1) AS T  ON Title = Title"
  },
  {
    "id": 558,
    "db_id": "book_1",
    "question": "What are the names of clients who have never made an order?",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM book_1.Orders WHERE PurchasePrice = 0 GROUP BY Title ORDER BY DateExped LIMIT 1) AS T ORDER BY idAuthor LIMIT 1 OFFSET 256554892673100000000000000000000000000"
  },
  {
    "id": 559,
    "db_id": "book_1",
    "question": "What is the maximum and the minimum sale price?",
    "answer": "SELECT MAX(SalePrice ) AS min , MIN(PurchasePrice ) AS max FROM book_1.Orders GROUP BY idAuthor ORDER BY idAuthor LIMIT 1000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 560,
    "db_id": "book_1",
    "question": "Give the maximum and minimum sale price of books.",
    "answer": "SELECT Title FROM book_1.Book ORDER BY SalePrice LIMIT 1 OFFSET 25000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 561,
    "db_id": "book_1",
    "question": "What is the average purchase price and the average sale price?",
    "answer": "SELECT SUM(Title ), AVG(Title ) AS avg , SUM(SalePrice ) AS total FROM (SELECT SUM(PurchasePrice ), AVG(SalePrice ) AS sum , COUNT(Title ) FROM (SELECT Title , SUM(amount ) AS sum_from , SUM(Title ) AS total FROM (SELECT DISTINCT idAuthor , PurchasePrice , SalePrice FROM (SELECT"
  },
  {
    "id": 562,
    "db_id": "book_1",
    "question": "Give the average purchase price and average sale price for books.",
    "answer": "SELECT SUM(Title ), AVG(Title ) AS avg , SUM(SalePrice ) FROM (SELECT Title , SUM(Title ), SUM(Title ) AS sum , AVG(SalePrice ) FROM (SELECT Title , SUM(amount ) AS sum , SUM(amount ) AS total FROM book_1.Book GROUP BY Title , amount ORDER BY Titl"
  },
  {
    "id": 563,
    "db_id": "book_1",
    "question": "What is the maximum difference between the sale price and purchase price?",
    "answer": "SELECT SUM(Title ), SUM(PurchasePrice ) FROM (SELECT SUM(Title ), SUM(PurchasePrice ) AS sum FROM (SELECT Title , Title , PurchasePrice FROM (SELECT SalePrice , MAX(SalePrice ) AS q , PurchasePrice , PurchasePrice FROM (SELECT Title , MAX(Title ), MAX(PurchasePrice ) FROM (SELECT SUM(Ti"
  },
  {
    "id": 564,
    "db_id": "book_1",
    "question": "Return the largest difference in sale price and purchase price.",
    "answer": "SELECT MAX(SalePrice ) AS max , MAX(PurchasePrice ) AS min FROM (SELECT MAX(Title ), SUM(Title ) AS sum1 , SUM(Title ) AS sum2 FROM (SELECT SUM(Client.PurchasePrice ), Client.PurchasePrice FROM (SELECT Title , SUM(Title ) FROM (SELECT MIN(Title ) AS"
  },
  {
    "id": 565,
    "db_id": "book_1",
    "question": "List all book titles which have sale prices higher than the average.",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT SUM(Title ) AS sum FROM (SELECT SUM(PurchasePrice ) FROM (SELECT PurchasePrice , SUM(Client.amount ) AS total FROM (SELECT IdClient , COUNT(idAuthor ) AS n FROM (SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Tit"
  },
  {
    "id": 566,
    "db_id": "book_1",
    "question": "What are the titles of books with sale prices above the average sale price across all books?",
    "answer": "SELECT Title FROM (SELECT SUM(PurchasePrice ), SUM(Title ) AS total FROM (SELECT Title , SUM(PurchasePrice ), SUM(Title ) AS total FROM (SELECT DISTINCT Title , SUM(PurchasePrice ) FROM book_1.Book WHERE amount > 0 GROUP BY DateOrder ORDER BY Author.idAuthor , DateOrder LIMIT 1) AS"
  },
  {
    "id": 567,
    "db_id": "book_1",
    "question": "List all book titles which have the lowest sale price .",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title , SUM(PurchasePrice ) AS num FROM (SELECT Title , SUM(PurchasePrice ) AS num FROM (SELECT Title , SalePrice FROM book_1.Book WHERE amount = (SELECT MAX(amount ) FROM (SELECT Title , SalePrice FROM (SELECT Title FROM (SELECT DISTINCT Title , SUM(PurchasePrice ) AS num FROM (SELECT Title"
  },
  {
    "id": 568,
    "db_id": "book_1",
    "question": "What are the titles of books that have a sale price equal to the lowest sale price across all books ?",
    "answer": "SELECT Title FROM book_1.Book ORDER BY SalePrice LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 569,
    "db_id": "book_1",
    "question": "List all book titles which have highest purchase prices .",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title , SUM(PurchasePrice ) AS num FROM (SELECT DISTINCT Title , SUM(amount ), MAX(SalePrice ) AS num FROM (SELECT Title , Title , SUM(amount ) AS total_num FROM (SELECT DISTINCT Title , Title , COUNT(*) AS num FROM (SELECT DISTINCT Title , Title , SUM("
  },
  {
    "id": 570,
    "db_id": "book_1",
    "question": "What are the titles of books with the highest purchase price across all books ?",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM book_1.Orders GROUP BY Title ORDER BY PurchasePrice LIMIT 1) AS t ORDER BY PurchasePrice LIMIT 100000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 571,
    "db_id": "book_1",
    "question": "What is the average sale price of books written by George Orwell?",
    "answer": "SELECT SUM(PurchasePrice ) FROM book_1.Orders WHERE Title = 'George Orwell' GROUP BY Title ORDER BY PurchasePrice LIMIT 10 OFFSET 5134997863746756556622883750223937155826981216339589489437"
  },
  {
    "id": 572,
    "db_id": "book_1",
    "question": "Give the average sale price of books authored by George Orwell.",
    "answer": "SELECT SUM(PurchasePrice ) FROM book_1.Orders WHERE Author = 'George Orwell' GROUP BY Title ORDER BY Title LIMIT 1000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 573,
    "db_id": "book_1",
    "question": "What are sale prices of books written by Plato?",
    "answer": "SELECT SUM(PurchasePrice ) FROM book_1.Book AS T INNER JOIN book_1.Author AS a  ON Title = 'Plato' GROUP BY Title ORDER BY Title LIMIT 10000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 574,
    "db_id": "book_1",
    "question": "Return the sale prices of books authored by Plato.",
    "answer": "SELECT SUM(PurchasePrice ) FROM book_1.Book AS T INNER JOIN book_1.Author AS a  ON Title = 'Plato' GROUP BY Title ORDER BY Title LIMIT 10000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 575,
    "db_id": "book_1",
    "question": "What is the title of the book written by George Orwell that has the lowest sale price?",
    "answer": "SELECT Title FROM (SELECT Title FROM book_1.Book WHERE PurchasePrice = 0 ORDER BY SalePrice LIMIT 1) AS T INNER JOIN (SELECT ISBN FROM (SELECT Title FROM book_1.Book GROUP BY Title ORDER BY PurchasePrice LIMIT 1) AS T INNER JOIN (SELECT COUNT(Title ) AS Total , MAX(PurchasePrice ) FROM (SELECT Title"
  },
  {
    "id": 576,
    "db_id": "book_1",
    "question": "Give the title of book by George Orwell that has the lowest saleprice.",
    "answer": "SELECT Title FROM book_1.Orders ORDER BY PurchasePrice LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 577,
    "db_id": "book_1",
    "question": "What is the title of the book written by Plato has price lower than the average sale price of all books?",
    "answer": "SELECT Title FROM (SELECT Title FROM (SELECT DISTINCT Title , PurchasePrice FROM (SELECT DISTINCT Title , SUM(PurchasePrice ) AS sumprice FROM (SELECT DISTINCT Title , SUM(amount ) AS sumtotal FROM (SELECT DISTINCT Title , SUM(amount ) AS total FROM (SELECT Title , SUM(amount ) AS sumsum FROM (SELECT DISTINCT Tit"
  },
  {
    "id": 578,
    "db_id": "book_1",
    "question": "Give the titles of books authored by Plato that have a sale price lower than the average sale price across all books.",
    "answer": "SELECT Title FROM book_1.Book ORDER BY SalePrice LIMIT 1;"
  },
  {
    "id": 579,
    "db_id": "book_1",
    "question": "Who is the author of the book \"Pride and Prejudice\"?",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT Title FROM book_1.Book ORDER BY Title LIMIT 1)) AS T ORDER BY Title LIMIT 1 OFFSET 1369174580226851558736166069871626488494843443263"
  },
  {
    "id": 580,
    "db_id": "book_1",
    "question": "Give the name of the author who wrote the book titled Pride and Prejudice.",
    "answer": "SELECT Title FROM (SELECT Title FROM (SELECT Title FROM book_1.Book ORDER BY Title LIMIT 2)) AS T ORDER BY Title LIMIT 163849307805151517920685716162712108655877212457657252"
  },
  {
    "id": 581,
    "db_id": "book_1",
    "question": "List titles of all books published by an author whose name contains the string 'Plato'?",
    "answer": "SELECT Title FROM book_1.Orders WHERE idAuthor = 9 ORDER BY Title LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 582,
    "db_id": "book_1",
    "question": "What are the titles of all books written by an author with a name that contains Plato?",
    "answer": "SELECT Title FROM book_1.Orders WHERE idAuthor = 'Pythagoras' ORDER BY Title LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 583,
    "db_id": "book_1",
    "question": "How many orders do we have for \"Pride and Prejudice\"?",
    "answer": "SELECT COUNT(idAuthor ) FROM (SELECT DISTINCT Title FROM book_1.Orders WHERE Title = 'Pride and Prejudice') AS T ORDER BY Title LIMIT 1000000000236495000000000000000000000000000000000000000"
  },
  {
    "id": 584,
    "db_id": "book_1",
    "question": "Return the number of orders received for Pride and Prejudice.",
    "answer": "SELECT COUNT(idAuthor ) FROM (SELECT idAuthor , SUM(amount ) AS total FROM book_1.Orders GROUP BY idAuthor ORDER BY idAuthor ) AS T ORDER BY Title LIMIT 10000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 585,
    "db_id": "book_1",
    "question": "Show ids for orders including both \"Pride and Prejudice\" and \"The Little Prince\".",
    "answer": "SELECT DISTINCT Title FROM (SELECT idAuthor , SUM(Title ) AS sum FROM (SELECT Title FROM (SELECT Title FROM book_1.Book GROUP BY Title ORDER BY Title LIMIT 2)) AS T GROUP BY Title ORDER BY Title , Title , Title , Title ) AS T ORDER BY Tit"
  },
  {
    "id": 586,
    "db_id": "book_1",
    "question": "What are the order ids for orders that include both Pride and Prejudice and The Little Prince?",
    "answer": "SELECT DISTINCT Title FROM (SELECT idAuthor , MAX(idAuthor ) AS pId FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Ti"
  },
  {
    "id": 587,
    "db_id": "book_1",
    "question": "Show all book isbns which were ordered by both client Peter Doe and client James Smith.",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM"
  },
  {
    "id": 588,
    "db_id": "book_1",
    "question": "What are the isbns of books ordered by both clients named Peter Doe and James Smith?",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM book_1.Orders AS T ORDER BY idAuthor , ISBN ) AS T INNER JOIN (SELECT Title FROM (SELECT Title FROM book_1.Orders AS T INNER JOIN (SELECT Title FROM (SELECT Title FROM book_1.Orders AS T INNER JOIN (SELECT Title FROM (SELECT T"
  },
  {
    "id": 589,
    "db_id": "book_1",
    "question": "Find the title of books which are ordered by client Peter Doe but not client James Smith.",
    "answer": "SELECT Title FROM book_1.Book WHERE ISBN = 'A223085749' ORDER BY idAuthor LIMIT 1;"
  },
  {
    "id": 590,
    "db_id": "book_1",
    "question": "What are the titles of books that the client Peter Doe ordered, but the client James Smith did not?",
    "answer": "SELECT Title FROM book_1.Book WHERE idAuthor = 29 ORDER BY Title LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 591,
    "db_id": "book_1",
    "question": "Show all client names who have orders for \"Pride and Prejudice\".",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM book_1.Orders WHERE Title = 'Pride and Prejudice') AS t ORDER BY idAuthor LIMIT 1) AS T WHERE Title = 'Pride and Prejudice' GROUP BY Title ORDER BY Title LIMIT 12000000000387649510"
  },
  {
    "id": 592,
    "db_id": "book_1",
    "question": "What are the names of clients who have ordered Pride and Prejudice?",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM book_1.Orders WHERE ISBN = 'PQR' ORDER BY idAuthor , amount ) AS T ORDER BY Title LIMIT 1) AS T INNER JOIN book_1.Orders AS T  ON Title = Title GROUP BY Title ORDER BY idAuthor , idAuthor LIMIT 100"
  },
  {
    "id": 593,
    "db_id": "book_review",
    "question": "How many books are there?",
    "answer": "SELECT COUNT(Title ) FROM book_review.book WHERE Title = 'The Perks of Being a Wallflower' GROUP BY Title ORDER BY Title LIMIT 100000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 594,
    "db_id": "book_review",
    "question": "List the titles of books in ascending alphabetical order.",
    "answer": "SELECT Title FROM book_review.book ORDER BY Title LIMIT 1 OFFSET 10000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 595,
    "db_id": "book_review",
    "question": "List the titles of books in descending order of pages.",
    "answer": "SELECT Title FROM book_review.book ORDER BY Pages LIMIT 1"
  },
  {
    "id": 596,
    "db_id": "book_review",
    "question": "What are the types and release dates of books?",
    "answer": "SELECT DISTINCT Type , Release FROM book_review.book AS T WHERE Type = 'PUBLICATION' ORDER BY Type LIMIT 10000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 597,
    "db_id": "book_review",
    "question": "What are the maximum and minimum number of chapters for each book?",
    "answer": "SELECT Title FROM (SELECT MAX(Title ) AS n FROM (SELECT DISTINCT Book_ID , COUNT(Title ) AS min FROM (SELECT DISTINCT Review_ID FROM book_review.book GROUP BY Review_ID ORDER BY Title LIMIT 1)) AS t INNER JOIN (SELECT Title , MIN(Title ) AS m FROM (SELECT DISTINCT Book_ID , COUNT"
  },
  {
    "id": 598,
    "db_id": "book_review",
    "question": "What are the titles of books that are not \"Poet\"?",
    "answer": "SELECT DISTINCT Title FROM book_review.book WHERE Title = 'Poet' GROUP BY Title ORDER BY Title LIMIT 1000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 599,
    "db_id": "book_review",
    "question": "What is the average rating in reviews?",
    "answer": "SELECT SUM(Title ) FROM book_review.review INNER JOIN book_review.book ON review.Review_ID = book_review.Book_ID ORDER BY Title LIMIT 10000000000000000000000000000000000000000000"
  },
  {
    "id": 600,
    "db_id": "book_review",
    "question": "What are the titles and ratings of books?",
    "answer": "SELECT Title FROM book_review.book WHERE review.Title = 'title' ORDER BY Title LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 601,
    "db_id": "book_review",
    "question": "What is the rating of the book with the largest number of chapters?",
    "answer": "SELECT MAX(Title ) FROM book_review.book WHERE Book_ID = '748215' GROUP BY Title ORDER BY Title LIMIT 1000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 602,
    "db_id": "book_review",
    "question": "What is the rank of the book with the smallest number of pages?",
    "answer": "SELECT SUM(Title ) FROM book_review.book WHERE Rank = 1 GROUP BY Title ORDER BY Title LIMIT 1;"
  },
  {
    "id": 603,
    "db_id": "book_review",
    "question": "What is the title of the book with the highest rank in the review?",
    "answer": "SELECT Type FROM (SELECT DISTINCT Type FROM book_review.book ORDER BY Rating LIMIT 1) AS T ORDER BY Rank LIMIT 1 OFFSET 543607923733025128513746397716964051773918384529331967876"
  },
  {
    "id": 604,
    "db_id": "book_review",
    "question": "What is the average number of readers for books of type \"Novel\"?",
    "answer": "SELECT AVG(Title ) AS avg FROM book_review.book AS T WHERE Type = 'novel' GROUP BY Type ORDER BY Type LIMIT 1000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 605,
    "db_id": "book_review",
    "question": "For each book type return the type and the number of books of that type.",
    "answer": "SELECT DISTINCT Type , COUNT(Type ) FROM book_review.book AS T INNER JOIN book_review.book AS T  ON Type = Type GROUP BY Type ORDER BY Type LIMIT 100000000000000000000000000000000000000000000000000"
  },
  {
    "id": 606,
    "db_id": "book_review",
    "question": "What is the most common type of books?",
    "answer": "SELECT DISTINCT Type FROM book_review.book WHERE Review_ID = 1 GROUP BY Type ORDER BY Rating LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 607,
    "db_id": "book_review",
    "question": "What are the types of books that have at least three books belonging to?",
    "answer": "SELECT Type FROM book_review.book AS T INNER JOIN (SELECT COUNT(Book_ID ) AS num FROM book_review.book WHERE Rating > 3 GROUP BY Book_ID ORDER BY Type LIMIT 1) AS T  ON Type = Type ORDER BY Type LIMIT 3 OFFSET 5640000000000000000000000000000"
  },
  {
    "id": 608,
    "db_id": "book_review",
    "question": "List the titles of books in ascending order of the ratings in review?",
    "answer": "SELECT Title FROM book_review.review ORDER BY Title LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 609,
    "db_id": "book_review",
    "question": "List the title and audio length for all the books in descending order of the number of readers.",
    "answer": "SELECT Title FROM book_review.book ORDER BY Readers_in_Million LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 610,
    "db_id": "book_review",
    "question": "How many books do not have reviews?",
    "answer": "SELECT COUNT(Title ) FROM (SELECT Title  FROM book_review.book AS T INNER JOIN book_review.book AS T  ON Title  = Title GROUP BY Title ORDER BY Title LIMIT 1) AS A ORDER BY Title  ASC LIMIT 0 OFFSET 9982753461063"
  },
  {
    "id": 611,
    "db_id": "book_review",
    "question": "Show the types of books that have both books with more than 75 chapters and books with less than 50 chapters.",
    "answer": "SELECT DISTINCT Type FROM book_review.book WHERE Chapters > (SELECT MAX(Chapters ) FROM book_review.book) LIMIT 1000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 612,
    "db_id": "book_review",
    "question": "How many distinct types of book are there?",
    "answer": "SELECT COUNT(Title ) FROM book_review.book AS T , book_review.book AS T INNER JOIN book_review.book AS T  ON Title = Title GROUP BY Title ORDER BY Title  DESC LIMIT 10000000000000000000000000000000000"
  },
  {
    "id": 613,
    "db_id": "book_review",
    "question": "What are the type and title of the books that are not rated?",
    "answer": "SELECT DISTINCT Type , Title FROM book_review.book WHERE Review_ID = (SELECT Type FROM book_review.book ORDER BY Rating LIMIT 1) GROUP BY Type ORDER BY Type LIMIT 100000000000000000000000000000000000000000000000000"
  },
  {
    "id": 614,
    "db_id": "restaurant_bills",
    "question": "How many customers are there?",
    "answer": "SELECT COUNT(customer_order.Customer_ID ) FROM (SELECT DISTINCT Customer_ID , Branch_ID FROM (SELECT DISTINCT Branch_ID , Customer_ID , SUM(Quantity ) AS total FROM (SELECT DISTINCT Dish_Name , Branch_ID FROM (SELECT Branch_ID , COUNT(Customer_ID ) AS qd FROM (SELECT DISTINCT Customer_ID , Branch_ID FROM (SELECT DIST"
  },
  {
    "id": 615,
    "db_id": "restaurant_bills",
    "question": "Count the number of customers.",
    "answer": "SELECT COUNT(customer_order.Customer_ID ) FROM (SELECT DISTINCT COUNT(Customer_ID ) FROM (SELECT DISTINCT Branch_ID , SUM(Quantity ) AS num FROM (SELECT DISTINCT Dish_Name , Customer_ID FROM (SELECT DISTINCT Dish_Name , Branch_ID , MAX(Level_of_Membership ) FROM (SELECT DISTINCT Branch_ID , SUM(Quantity ) AS num FROM ("
  },
  {
    "id": 616,
    "db_id": "restaurant_bills",
    "question": "List the names of customers in ascending order of level of membership.",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT Name , Level_of_Membership FROM (SELECT DISTINCT Branch_ID , COUNT(Customer_ID ) AS total FROM (SELECT DISTINCT Customer_ID , SUM(Level_of_Membership ) AS sum FROM (SELECT DISTINCT Branch_ID FROM (SELECT DISTINCT Customer_ID , Level_of_Membership FROM (SELECT DISTINCT Customer"
  },
  {
    "id": 617,
    "db_id": "restaurant_bills",
    "question": "Sort all the customers by the level of membership in ascending order, and return the customer names.",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT Customer_ID , SUM(Level_of_Membership ) AS Total FROM (SELECT DISTINCT Branch_ID , SUM(Level_of_Membership ) AS Total FROM (SELECT DISTINCT customer_order.Customer_ID , customer_order.Branch_ID FROM (SELECT DISTINCT customer_order.Customer_ID , branch.Location_of_office FROM (SELECT DISTINCT"
  },
  {
    "id": 618,
    "db_id": "restaurant_bills",
    "question": "What are the nationalities and card credits of customers?",
    "answer": "SELECT DISTINCT Nationality , SUM(Card_Credit ) FROM (SELECT DISTINCT Nationality , SUM(Card_Credit ) AS total FROM (SELECT DISTINCT Branch_ID FROM (SELECT DISTINCT Customer_ID FROM (SELECT * FROM (SELECT DISTINCT Name FROM (SELECT DISTINCT Name FROM (SELECT DISTINCT Nationality , MAX(Level_of_Membership ) FROM (SELECT DISTINCT Name FROM ("
  },
  {
    "id": 619,
    "db_id": "restaurant_bills",
    "question": "Find the nationality and card credit of each customer.",
    "answer": "SELECT DISTINCT Nationality , SUM(Card_Credit ) FROM (SELECT DISTINCT Nationality , SUM(Card_Credit ) AS total FROM (SELECT DISTINCT Name FROM (SELECT DISTINCT Name FROM (SELECT Customer_ID , SUM(Level_of_Membership ) AS Total FROM (SELECT DISTINCT Branch_ID , Dish_Name FROM (SELECT DISTINCT Dish_Name FROM (SELECT DISTINCT Dish"
  },
  {
    "id": 620,
    "db_id": "restaurant_bills",
    "question": "Show the names of customers with nationality \"England\" or \"Australia\".",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT Name FROM (SELECT DISTINCT Name FROM (SELECT DISTINCT Nationality , Dish_Name FROM (SELECT DISTINCT Dish_Name FROM (SELECT DISTINCT Location_of_office , Dish_Name FROM (SELECT DISTINCT Branch_ID , Dish_Name FROM (SELECT DISTINCT Location_of_office , Dish_Name FROM ("
  },
  {
    "id": 621,
    "db_id": "restaurant_bills",
    "question": "Which customers have nationality \"England\" or \"Australia\"? Give me their names.",
    "answer": "SELECT DISTINCT customer.Name FROM (SELECT DISTINCT customer.Name FROM (SELECT DISTINCT customer.Nationality , COUNT(Branch_ID ) AS total FROM (SELECT DISTINCT Branch_ID , Branch_ID FROM (SELECT DISTINCT customer.Name , COUNT(Branch_ID ) AS Total FROM (SELECT DISTINCT Name FROM (SELECT DISTINCT Nationality , Branch_ID"
  },
  {
    "id": 622,
    "db_id": "restaurant_bills",
    "question": "What is the average card credit of customers with membership level higher than 1?",
    "answer": "SELECT AVG(Card_Credit ) FROM (SELECT DISTINCT Level_of_Membership , COUNT(Customer_ID ) AS num FROM (SELECT DISTINCT MIN(Level_of_Membership ) AS min_num , MAX(Customer_ID ) AS max_customer_ID FROM (SELECT DISTINCT MIN(Card_Credit ) AS MinCtr , Customer_ID , Level_of_Membership FROM (SELECT DIST"
  },
  {
    "id": 623,
    "db_id": "restaurant_bills",
    "question": "Find the average card credit customers whose membership level is above 1.",
    "answer": "SELECT AVG(Card_Credit ) FROM (SELECT DISTINCT Customer_ID , COUNT(Level_of_Membership ) AS num FROM (SELECT DISTINCT MIN(Level_of_Membership ) AS num FROM (SELECT DISTINCT Customer_ID , COUNT(Customer_ID ) AS num FROM (SELECT DISTINCT Branch_ID , MAX(Card_Credit ) AS Customer_ID FROM (SELECT DISTINCT Branch_ID"
  },
  {
    "id": 624,
    "db_id": "restaurant_bills",
    "question": "What is the card credit of the customer with the highest membership level?",
    "answer": "SELECT SUM(Level_of_Membership ) FROM (SELECT DISTINCT Level_of_Membership , Customer_ID FROM (SELECT MAX(Level_of_Membership ) AS Difference FROM (SELECT Customer_ID , Dish_Name , COUNT(Dish_Name ) AS Num FROM (SELECT Branch_ID , SUM(Quantity ) AS Total_Count FROM (SELECT Dish_Name , COUNT(Customer_ID ) AS Num FROM ("
  },
  {
    "id": 625,
    "db_id": "restaurant_bills",
    "question": "Find the customer with the highest membership level and return his or her card credit.",
    "answer": "SELECT MAX(Customer_ID ), SUM(Level_of_Membership ) AS total , Name FROM (SELECT DISTINCT Customer_ID , SUM(Level_of_Membership ) AS per FROM (SELECT DISTINCT Branch_ID , SUM(Level_of_Membership ) FROM (SELECT DISTINCT Branch_ID , COUNT(*) AS q FROM (SELECT DISTINCT Card_Credit FROM (SELECT DISTINCT Customer_ID , COUNT"
  },
  {
    "id": 626,
    "db_id": "restaurant_bills",
    "question": "Show different nationalities of customers, along with the number of customers of each nationality.",
    "answer": "SELECT DISTINCT Nationality FROM (SELECT DISTINCT Name , COUNT(Nationality ) AS Num FROM (SELECT DISTINCT Nationality FROM (SELECT DISTINCT Customer_ID , COUNT(Customer_ID ) AS Num FROM (SELECT DISTINCT Branch_ID , Dish_Name FROM (SELECT DISTINCT Customer_ID , Dish_Name FROM (SELECT DISTINCT Name FROM (SELECT DISTINCT Nationality FROM (SELECT DISTINCT Customer_"
  },
  {
    "id": 627,
    "db_id": "restaurant_bills",
    "question": "How many customers are associated with each nationality? List the nationality and the number of customers.",
    "answer": "SELECT COUNT(Nationality ), SUM(Customer_ID ) FROM (SELECT DISTINCT Name , Nationality FROM (SELECT DISTINCT Nationality , COUNT(Customer_ID ) AS num FROM (SELECT DISTINCT Customer_ID , Level_of_Membership FROM (SELECT DISTINCT Level_of_Membership FROM (SELECT DISTINCT Name FROM (SELECT DISTINCT Name , Nationality FROM (SELECT DISTINCT Nationality"
  },
  {
    "id": 628,
    "db_id": "restaurant_bills",
    "question": "Show the most common nationality of customers.",
    "answer": "SELECT DISTINCT Nationality FROM (SELECT DISTINCT Dish_Name , COUNT(Customer_ID ) AS num FROM (SELECT DISTINCT Dish_Name , Customer_ID FROM (SELECT DISTINCT Name FROM (SELECT DISTINCT Nationality FROM (SELECT DISTINCT Nationality FROM (SELECT DISTINCT Branch_ID FROM (SELECT DISTINCT customer_order.Branch_ID FROM (SELECT DISTINCT Dish"
  },
  {
    "id": 629,
    "db_id": "restaurant_bills",
    "question": "Which nationality does the most customers have?",
    "answer": "SELECT DISTINCT Nationality FROM (SELECT DISTINCT Name FROM (SELECT DISTINCT Nationality FROM (SELECT DISTINCT Dish_Name FROM (SELECT DISTINCT Customer_ID , COUNT(Customer_ID ) FROM (SELECT DISTINCT Branch_ID , COUNT(Dish_Name ) FROM (SELECT DISTINCT Dish_Name FROM (SELECT DISTINCT Dish_Name FROM (SELECT DISTINCT Dish"
  },
  {
    "id": 630,
    "db_id": "restaurant_bills",
    "question": "Show the nations that have both customers with card credit smaller than 50 and customers with card credit bigger than 75.",
    "answer": "SELECT DISTINCT Nationality FROM (SELECT DISTINCT Nationality FROM (SELECT Name , COUNT(Card_Credit ) AS Cnt FROM (SELECT DISTINCT Name , SUM(Level_of_Membership ) AS Cnt FROM (SELECT DISTINCT Level_of_Membership , Branch_ID , Customer_ID  FROM (SELECT Name , SUM(Level_of_Membership ) AS Total FROM (SELECT DISTINCT"
  },
  {
    "id": 631,
    "db_id": "restaurant_bills",
    "question": "Which nations have both customers with card credit above 50 and customers with card credit below 75.",
    "answer": "SELECT DISTINCT Nationality FROM (SELECT DISTINCT Nationality FROM (SELECT * FROM (SELECT SUM(Card_Credit ) AS total , Customer_ID FROM (SELECT SUM(Level_of_Membership ), Customer_ID FROM (SELECT DISTINCT COUNT(Customer_ID ) AS total FROM (SELECT DISTINCT Card_Credit , Dish_Name FROM (SELECT Dish_Name , SUM(Card_Credit ) AS Total FROM (SELECT"
  },
  {
    "id": 632,
    "db_id": "restaurant_bills",
    "question": "Show the names of customers and names of dishes they order.",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT Name , Branch_ID FROM (SELECT DISTINCT Customer_ID , Dish_Name FROM (SELECT Dish_Name FROM restaurant_bills.customer ORDER BY Card_Credit LIMIT 1)) AS T ) AS x WHERE Dish_Name = 'name' GROUP BY Dish_Name ORDER BY Dish_Name LIMIT 100000000000"
  },
  {
    "id": 633,
    "db_id": "restaurant_bills",
    "question": "For each order, return the customer name and the dish name.",
    "answer": "SELECT DISTINCT Name , Dish_Name FROM (SELECT DISTINCT Branch_ID , Dish_Name FROM (SELECT DISTINCT Customer_ID , Dish_Name FROM (SELECT Dish_Name FROM restaurant_bills.customer ORDER BY Customer_ID LIMIT 1)) AS T ORDER BY Customer_ID ) AS T GROUP BY Dish_Name ORDER BY Dish_Name LIMIT 1000000000000"
  },
  {
    "id": 634,
    "db_id": "restaurant_bills",
    "question": "Show the names of customers and names of dishes they order, in descending order of the quantity of dish.",
    "answer": "SELECT DISTINCT Dish_Name FROM (SELECT DISTINCT Dish_Name , COUNT(Quantity ) AS num FROM (SELECT DISTINCT Dish_Name , COUNT(Customer_ID ) FROM (SELECT DISTINCT Branch_ID FROM (SELECT Customer_ID , COUNT(Dish_Name ) AS qtrs FROM (SELECT DISTINCT Dish_Name FROM (SELECT Dish_Name , COUNT(Quantity ) AS num FROM (SELECT D"
  },
  {
    "id": 635,
    "db_id": "restaurant_bills",
    "question": "For each order, find the customer name and the dish name. Sort the result in descending order of the quantity of dish.",
    "answer": "SELECT DISTINCT Customer_ID , Dish_Name FROM (SELECT DISTINCT Branch_ID , SUM(Quantity ) AS total FROM (SELECT DISTINCT Dish_Name , COUNT(*) FROM (SELECT DISTINCT Dish_Name FROM (SELECT Dish_Name FROM (SELECT Dish_Name , SUM(Quantity ) AS tot FROM (SELECT DISTINCT Dish_Name , COUNT(Dish_Name ) AS num FROM (SELECT"
  },
  {
    "id": 636,
    "db_id": "restaurant_bills",
    "question": "Show each customer name and the total quantities of dishes ordered by that customer.",
    "answer": "SELECT DISTINCT Name , SUM(Quantity ) FROM (SELECT DISTINCT Name , SUM(Quantity ) AS sum FROM (SELECT DISTINCT Branch_ID , SUM(Dish_Name ), COUNT(Customer_ID ) AS total FROM (SELECT Customer_ID , COUNT(Branch_ID ) AS count FROM (SELECT DISTINCT Branch_ID , COUNT(Dish_Name ) FROM (SELECT DISTINCT Dish_Name , COUNT(Customer"
  },
  {
    "id": 637,
    "db_id": "restaurant_bills",
    "question": "What is the total quantities of dishes ordered by each customer ? List the customer name and the total quantity .",
    "answer": "SELECT SUM(Quantity ), SUM(Customer_ID ) FROM (SELECT DISTINCT Dish_Name , SUM(Quantity ) AS Total FROM (SELECT DISTINCT Dish_Name , Customer_ID , Branch_ID FROM (SELECT Customer_ID , COUNT(Dish_Name ) AS Num FROM (SELECT DISTINCT Dish_Name , MAX(Level_of_Membership ) FROM (SELECT DISTINCT Dish_Name , Level_of"
  },
  {
    "id": 638,
    "db_id": "restaurant_bills",
    "question": "Show the customers with total quantity of order bigger than 1.",
    "answer": "SELECT COUNT(Customer_ID ) FROM (SELECT SUM(Quantity ), Customer_ID , Dish_Name FROM (SELECT DISTINCT Customer_ID , COUNT(Dish_Name ) AS num FROM (SELECT DISTINCT Customer_ID , Dish_Name FROM (SELECT SUM(Quantity ), Branch_ID , Dish_Name FROM (SELECT DISTINCT Customer_ID , Dish_Name FROM"
  },
  {
    "id": 639,
    "db_id": "restaurant_bills",
    "question": "Which customers have total order quantity greater than 1? Give me the customer names.",
    "answer": "SELECT DISTINCT Customer_ID FROM (SELECT DISTINCT SUM(Quantity ) AS sum FROM (SELECT DISTINCT COUNT(Customer_ID ), SUM(Dish_Name ), SUM(Level_of_Membership ) FROM (SELECT * FROM (SELECT DISTINCT COUNT(Customer_ID ) AS num , Dish_Name , Level_of_Membership \nFROM (SELECT DISTINCT Customer_ID"
  },
  {
    "id": 640,
    "db_id": "restaurant_bills",
    "question": "Show distinct managers of branches.",
    "answer": "SELECT DISTINCT Dish_Name FROM (SELECT DISTINCT Dish_Name FROM (SELECT Branch_ID FROM (SELECT DISTINCT Dish_Name FROM (SELECT Dish_Name , COUNT(Customer_ID ) AS num FROM (SELECT Customer_ID , COUNT(Branch_ID ) AS num FROM (SELECT Branch_ID , Customer_ID FROM (SELECT DISTINCT Dish_Name FROM (SELECT Dish_Name , COUNT(Customer"
  },
  {
    "id": 641,
    "db_id": "restaurant_bills",
    "question": "Who are the distinct managers of branches?",
    "answer": "SELECT DISTINCT Manager FROM (SELECT DISTINCT Branch_ID FROM (SELECT DISTINCT branch.Location_of_office FROM (SELECT DISTINCT branch.Branch_ID FROM (SELECT DISTINCT branch.Years_opened , branch.Name FROM (SELECT DISTINCT branch.Card_Credit FROM (SELECT DISTINCT branch.Manager FROM (SELECT DISTINCT branch.Location_of_office FROM (SELECT"
  },
  {
    "id": 642,
    "db_id": "restaurant_bills",
    "question": "List the names of customers that do not have any order.",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT Name FROM (SELECT DISTINCT Customer_ID , Branch_ID FROM (SELECT DISTINCT Branch_ID , COUNT(Dish_Name ) AS Quantity FROM (SELECT DISTINCT Customer_ID , Dish_Name FROM (SELECT Dish_Name FROM (SELECT Dish_Name FROM (SELECT Dish_Name , SUM(Quantity ) AS Total FROM (SELECT Dish_Name , COUNT("
  },
  {
    "id": 643,
    "db_id": "restaurant_bills",
    "question": "Which customers do not have any order? Give me the customer names.",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT Name FROM (SELECT DISTINCT Dish_Name FROM (SELECT Dish_Name FROM (SELECT Dish_Name , COUNT(Dish_Name ) AS cnt FROM (SELECT Dish_Name FROM (SELECT Dish_Name , SUM(Quantity ) FROM (SELECT Dish_Name FROM (SELECT Dish_Name , SUM(Quantity ) FROM (SELECT Dish_Name FROM (SELECT D"
  },
  {
    "id": 644,
    "db_id": "club_leader",
    "question": "How many members are there?",
    "answer": "SELECT COUNT(Team_Leader ) FROM club_leader.member WHERE Team_Leader = 'player' GROUP BY Team_Leader ORDER BY Team_Leader LIMIT 1000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 645,
    "db_id": "club_leader",
    "question": "List the names of members in ascending order of age.",
    "answer": "SELECT DISTINCT Team_Leader FROM club_leader.member ORDER BY Age LIMIT 1;"
  },
  {
    "id": 646,
    "db_id": "club_leader",
    "question": "What are the names and nationalities of the members?",
    "answer": "SELECT Team_Leader FROM club_leader.club INNER JOIN (SELECT Member_ID , MAX(Team_Leader ) AS Team_Leader FROM club_leader.club GROUP BY member.Member_ID ORDER BY Member_ID LIMIT 1) AS T  ON Team_Leader = Team_Leader ORDER BY Team_Leader LIMIT 1;"
  },
  {
    "id": 647,
    "db_id": "club_leader",
    "question": "List the names of members whose nationality is not `` England '' .",
    "answer": "SELECT DISTINCT Team_Leader FROM club_leader.member WHERE Member_ID = '7321' GROUP BY Team_Leader ORDER BY Nationality  ASC LIMIT 10000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 648,
    "db_id": "club_leader",
    "question": "Show the names of members whose age is either 19 or 20.",
    "answer": "SELECT DISTINCT Team_Leader FROM club_leader.member WHERE Age = '19' ORDER BY Age , Team_Leader LIMIT 20130467581139785586204986330186464055231621410229883798286"
  },
  {
    "id": 649,
    "db_id": "club_leader",
    "question": "What is the name of the oldest member?",
    "answer": "SELECT Team_Leader FROM club_leader.club AS T ORDER BY Age LIMIT 1;"
  },
  {
    "id": 650,
    "db_id": "club_leader",
    "question": "Show different nationalities along with the number of members of each nationality.",
    "answer": "SELECT DISTINCT Team_Leader FROM club_leader.club WHERE Team_Leader = 'North America' GROUP BY Team_Leader ORDER BY Age LIMIT 10000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 651,
    "db_id": "club_leader",
    "question": "Please show the most common nationality of members.",
    "answer": "SELECT DISTINCT Team_Leader FROM club_leader.member WHERE Club_ID = 'T2109364' GROUP BY Team_Leader ORDER BY Team_Leader LIMIT 10 OFFSET 0"
  },
  {
    "id": 652,
    "db_id": "club_leader",
    "question": "Show the nations that have at least two members.",
    "answer": "SELECT DISTINCT Team_Leader FROM club_leader.club WHERE Member_ID = (SELECT MAX(Team_Leader ) FROM club_leader.club GROUP BY Team_Leader ORDER BY Year_Join LIMIT 2) LIMIT 100000000000000000000000000000000000000"
  },
  {
    "id": 653,
    "db_id": "club_leader",
    "question": "Show the names of club leaders and the names of clubs they joined.",
    "answer": "SELECT DISTINCT Team_Leader FROM club_leader.club INNER JOIN club_leader.club AS t  ON Team_Leader = 'Club_ID' ORDER BY Team_Leader LIMIT 200000000169379184000000000000000000000000000"
  },
  {
    "id": 654,
    "db_id": "club_leader",
    "question": "Show the names of club leaders of clubs with overall ranking higher than 100.",
    "answer": "SELECT DISTINCT Team_Leader FROM club_leader.club WHERE Year_Join > (SELECT MAX(Year_Join ) FROM club_leader.club ORDER BY Club_ID ) LIMIT 1"
  },
  {
    "id": 655,
    "db_id": "club_leader",
    "question": "Show the names of club leaders that joined their club before 2018.",
    "answer": "SELECT DISTINCT Team_Leader FROM club_leader.club WHERE Year_Join > (SELECT MAX(Year_Join ) FROM club_leader.club GROUP BY Club_ID ORDER BY Year_Join LIMIT 1) ORDER BY Member_ID LIMIT 2009954785163800000000000000000000000000"
  },
  {
    "id": 656,
    "db_id": "club_leader",
    "question": "Show the name of the leader of the club named \"Houston\".",
    "answer": "SELECT DISTINCT Team_Leader FROM club_leader.club AS T INNER JOIN club_leader.member AS M  ON Team_Leader = Member_ID ORDER BY Team_Leader LIMIT 1;"
  },
  {
    "id": 657,
    "db_id": "club_leader",
    "question": "List the names of members that are not club leaders.",
    "answer": "SELECT DISTINCT Team_Leader FROM club_leader.member WHERE Club_Name = 'unknown' LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 658,
    "db_id": "club_leader",
    "question": "Show the nations that have both members older than 22 and members younger than 19.",
    "answer": "SELECT DISTINCT Team_Leader FROM club_leader.club WHERE member.Age < 19 GROUP BY Team_Leader ORDER BY Team_Leader LIMIT 100000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 659,
    "db_id": "club_leader",
    "question": "What is the average age of all the club leaders?",
    "answer": "SELECT AVG(Team_Leader ) FROM club_leader.club AS T INNER JOIN club_leader.member AS M  ON Team_Leader = Member_ID GROUP BY Team_Leader ORDER BY Team_Leader , Member_ID LIMIT 1000 OFFSET 19427554638849000000"
  },
  {
    "id": 660,
    "db_id": "club_leader",
    "question": "Which club name contains the string 'state'?",
    "answer": "SELECT DISTINCT Team_Leader FROM club_leader.club WHERE Team_Leader = 'state' LIMIT 10000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 661,
    "db_id": "cre_Doc_and_collections",
    "question": "List all collections' subset. List the subsets' names.",
    "answer": "SELECT DISTINCT Documents_in_Collections.Collection_Name FROM (SELECT DISTINCT Documents_in_Collections.Collection_Name FROM (SELECT DISTINCT Parent_Collection_ID , Collection_Description FROM (SELECT DISTINCT Documents_in_Collections.Document_Object_ID FROM (SELECT Document_Object_ID FROM (SELECT DISTINCT Documents_in_Collections.Parent_Document_Object_ID FROM (SELECT DIST"
  },
  {
    "id": 662,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the collection susbset names?",
    "answer": "SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Documents_in_Collections.Collection_Name FROM (SELECT DISTINCT Collection_ID FROM (SELECT Collection_ID , Owner FROM (SELECT Parent_Document_Object_ID FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT Collection_Subset_ID , Owner FROM (SELECT DISTINCT Documents_in_Collections.Parent_Collection_ID FROM ("
  },
  {
    "id": 663,
    "db_id": "cre_Doc_and_collections",
    "question": "What is detail of collection subset with name 'Top collection'?",
    "answer": "SELECT DISTINCT Document_Subset_Details FROM (SELECT DISTINCT Documents_in_Collections.Collection_Name FROM (SELECT DISTINCT Collection_ID FROM (SELECT Collection_ID , Related_Document_Object_ID FROM (SELECT Parent_Collection_ID , Document_Object_ID FROM (SELECT Collection_Subset_Name FROM (SELECT DISTINCT Document_Subsets.Document_Subset_Name FROM (SELECT DIST"
  },
  {
    "id": 664,
    "db_id": "cre_Doc_and_collections",
    "question": "What collection details are there on the subset named 'Top collection'?",
    "answer": "SELECT DISTINCT Description FROM (SELECT DISTINCT Collection_Name , Document_Subset_ID FROM (SELECT DISTINCT Document_Object_ID , Related_Document_Object_ID FROM (SELECT DISTINCT Parent_Document_Object_ID , Collection_Name , Document_Subset_ID FROM (SELECT DISTINCT Documents_in_Collections.Collection_ID , Collections.Collection_Name , Related_Document_Object"
  },
  {
    "id": 665,
    "db_id": "cre_Doc_and_collections",
    "question": "List all documents's subset. List the subset's name.",
    "answer": "SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Documents_in_Collections.Document_Object_ID FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Collection_Subsets.Document_Subset_Name , Related_Collection_ID FROM (SELECT DISTINCT Document_Subset_Details FROM (SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Documents_in_"
  },
  {
    "id": 666,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the document subset names?",
    "answer": "SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Document_Object_ID , Document_Subset_Details FROM (SELECT DISTINCT Parent_Document_Object_ID FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Document_Object_ID , Collection_ID FROM (SELECT DISTINCT Document_Subset_ID FROM (SELECT DISTINCT Document_Subset_Name FROM "
  },
  {
    "id": 667,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the detail of document subset with name 'Best for 2000'?",
    "answer": "SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT Related_Collection_ID FROM (SELECT Collection_ID , Owner , Description FROM (SELECT DISTINCT Document_Object_ID , Parent_Document_Object_ID FROM (SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Document"
  },
  {
    "id": 668,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the details on the document subsets that are named 'Best for 2000'?",
    "answer": "SELECT DISTINCT Document_Subset_Details FROM (SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Document_Subset_ID FROM (SELECT DISTINCT Collection_ID , Related_Document_Object_ID , Description FROM (SELECT DISTINCT Parent_Collection_ID , Collection_Description FROM (SELECT DISTINCT Collection_Subset_Name FROM (SELECT DISTINCT Document_Subset_Name FROM ("
  },
  {
    "id": 669,
    "db_id": "cre_Doc_and_collections",
    "question": "List document id of all documents.",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Parent_Document_Object_ID , Owner FROM (SELECT DISTINCT Document_Object_ID , Owner FROM (SELECT DISTINCT Collection_Subset_Name , Owner , Document_Subset_Details FROM (SELECT DISTINCT Document_Subset_Name , Owner FROM (SELECT DISTINCT Collection_"
  },
  {
    "id": 670,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the object id of the document objects?",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Documents_in_Collections.Document_Object_ID FROM (SELECT DISTINCT Documents_in_Collections.Collection_Name FROM (SELECT DISTINCT Collection_ID FROM (SELECT DISTINCT Document_Object_ID , Parent_Collection_ID FROM (SELECT DISTINCT Collections.Parent_Collection_ID , Collecrtion_Subset_Details FROM (SELECT DIST"
  },
  {
    "id": 671,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the parent document of document owned by Marlin? List the document id.",
    "answer": "SELECT DISTINCT Parent_Document_Object_ID FROM (SELECT DISTINCT Parent_Document_Object_ID FROM (SELECT Document_Object_ID FROM (SELECT Parent_Document_Object_ID , Related_Document_Object_ID FROM (SELECT Related_Document_Object_ID FROM (SELECT Parent_Collection_ID , Collection_Name FROM (SELECT DISTINCT Parent_Collection_ID ,"
  },
  {
    "id": 672,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the document object ids of the objects owned by Marlin?",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Parent_Document_Object_ID FROM cre_Doc_and_collections.Document_Objects WHERE Owner = 'Marlin' GROUP BY Document_Object_ID ORDER BY Document_Object_ID LIMIT 1) AS T ORDER BY Document_Object_ID LIMIT 10000000050000230000000"
  },
  {
    "id": 673,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the owner of document with the Description 'Braeden Collection'?",
    "answer": "SELECT DISTINCT Owner FROM (SELECT DISTINCT Documents_in_Collections.Parent_Collection_ID , Collection_Name FROM (SELECT DISTINCT Parent_Document_Object_ID , Document_Object_ID FROM (SELECT DISTINCT Parent_Document_Object_ID , Document_Object_ID FROM cre_Doc_and_collections.Collection_Subsets WHERE Document_Subset_Name = 'Braeden Collection' ORDER BY"
  },
  {
    "id": 674,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the owners of the document objects described as the 'Braeden Collection'?",
    "answer": "SELECT DISTINCT Owner FROM (SELECT DISTINCT Owner FROM (SELECT DISTINCT Document_Object_ID , Collection_Name FROM (SELECT DISTINCT COUNT(Document_Object_ID ), Collection_Description FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Document_Subset_ID , Document_Object_ID FROM (SELECT DISTINCT Document_Subset_ID , Document_"
  },
  {
    "id": 675,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the owner of the parent document of document owned by 'Marlin'?",
    "answer": "SELECT DISTINCT Owner FROM (SELECT DISTINCT Parent_Document_Object_ID , Collection_Name FROM (SELECT DISTINCT Document_Object_ID , Collection_Subset_Name FROM (SELECT DISTINCT Document_Subset_ID FROM (SELECT DISTINCT Document_Object_ID , Collection_Subset_Name FROM (SELECT DISTINCT Document_Subset_ID , Collection_Subset_Name FROM (SELECT D"
  },
  {
    "id": 676,
    "db_id": "cre_Doc_and_collections",
    "question": "Who is the owner of the parent document of every documents where 'Marlin' is the owner?",
    "answer": "SELECT DISTINCT Owner FROM (SELECT DISTINCT Parent_Document_Object_ID , Parent_Collection_ID FROM (SELECT DISTINCT Parent_Document_Object_ID , Collecrtion_Subset_Details FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Documents_in_Collections.Parent_Document_Object_ID , Collections.Collection_Name FROM (SELECT DISTINCT Pare"
  },
  {
    "id": 677,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the different descriptions of all the parent documents?",
    "answer": "SELECT DISTINCT Description FROM (SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Parent_Document_Object_ID FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Collection_Subsets.Document_Subset_Details FROM (SELECT DISTINCT Document_Subset_ID FROM (SELECT DISTINCT Documents_in_Collections.Parent_Collection"
  },
  {
    "id": 678,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the unique description of every parent document?",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Document_Subset_Name , Document_Subset_Details FROM (SELECT DISTINCT Document_Subset_ID , Document_Subset_Name FROM (SELECT DISTINCT Document_Subset_Name , Document_Subset_Details FROM (SELECT DISTINCT Document_Subset_ID , Document"
  },
  {
    "id": 679,
    "db_id": "cre_Doc_and_collections",
    "question": "How many documents owned by Marlin?",
    "answer": "SELECT COUNT(Owner ) FROM (SELECT DISTINCT Owner FROM (SELECT Owner FROM (SELECT DISTINCT Documents_in_Collections.Collection_ID FROM (SELECT DISTINCT Parent_Document_Object_ID FROM (SELECT DISTINCT Collection_Subset_Name , Owner FROM (SELECT DISTINCT Document_Objects.Document_Object_ID FROM (SELECT DISTINCT Documents_in_Collections.Parent_Collection_"
  },
  {
    "id": 680,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the count of documents owned by Marlin?",
    "answer": "SELECT COUNT(Owner ) FROM (SELECT DISTINCT Owner FROM cre_Doc_and_collections.Collections WHERE Collection_Name = 'Marlin') AS T INNER JOIN (SELECT DISTINCT COUNT(Parent_Document_Object_ID ) FROM cre_Doc_and_collections.Documents_in_Collections) AS U  ON Owner = (SELECT DISTINCT Parent_Document_Object_ID FROM cre_Doc_"
  },
  {
    "id": 681,
    "db_id": "cre_Doc_and_collections",
    "question": "List all documents ids that are not the parent of other documents.",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Parent_Document_Object_ID , COUNT(Parent_Document_Object_ID ) AS num FROM (SELECT DISTINCT Other_Details FROM (SELECT DISTINCT Parent_Document_Object_ID , Owner FROM (SELECT DISTINCT Parent_Document_Object_ID , Owner FROM (SELECT DISTINCT Documents_in_Collections.Parent_Collection"
  },
  {
    "id": 682,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the ids of the documents that are not parent documents?",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT Parent_Document_Object_ID FROM (SELECT Collection_Subset_Name , Document_Object_ID FROM (SELECT Parent_Collection_ID , Collections.Collection_Description FROM (SELECT Collection_Subset_Name , Document_Object_ID FROM (SELECT Collection_Subset_Name , Document_Subset_Details FROM (SELECT Collection_Subset_Name , Document_"
  },
  {
    "id": 683,
    "db_id": "cre_Doc_and_collections",
    "question": "How many child documents does each parent document has? List the document id and the number.",
    "answer": "SELECT DISTINCT Parent_Document_Object_ID , COUNT(Parent_Document_Object_ID ) FROM (SELECT Parent_Document_Object_ID , COUNT(Document_Object_ID ) FROM (SELECT DISTINCT Document_Object_ID , Collecrtion_Subset_Details FROM (SELECT DISTINCT Document_Subset_ID , Document_Subset_Name FROM (SELECT DISTINCT Document_Subset_ID , Document_Sub"
  },
  {
    "id": 684,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the number of child documents for each parent document, and what are the ids of the parent documents?",
    "answer": "SELECT DISTINCT Parent_Document_Object_ID FROM (SELECT DISTINCT Parent_Document_Object_ID , COUNT(Document_Object_ID ) AS num FROM (SELECT DISTINCT Documents_in_Collections.Document_Object_ID FROM (SELECT DISTINCT Collection_Name , COUNT(Parent_Collection_ID ) AS num FROM (SELECT DISTINCT Parent_Document_Object_ID , Collection_Name FROM (SELECT D"
  },
  {
    "id": 685,
    "db_id": "cre_Doc_and_collections",
    "question": "List the name of all collections.",
    "answer": "SELECT DISTINCT Collection_Name FROM (SELECT DISTINCT Parent_Document_Object_ID FROM (SELECT DISTINCT Parent_Collection_ID FROM (SELECT DISTINCT Documents_in_Collections.Collection_ID FROM (SELECT Collection_ID , Related_Document_Object_ID FROM (SELECT Related_Document_Object_ID FROM (SELECT Documents_in_Collections.Document_Object_ID FROM (SELECT DISTINCT Documents"
  },
  {
    "id": 686,
    "db_id": "cre_Doc_and_collections",
    "question": "what are the collection names?",
    "answer": "SELECT DISTINCT Collection_Name FROM (SELECT DISTINCT Documents_in_Collections.Collection_Name FROM (SELECT Document_Object_ID FROM (SELECT DISTINCT Collection_ID FROM (SELECT Parent_Document_Object_ID , COUNT(Parent_Document_Object_ID ) AS total FROM (SELECT Collection_ID FROM (SELECT DISTINCT Collection_Subset_ID FROM (SELECT Document_Subset_Name , COUNT(Document_Subset"
  },
  {
    "id": 687,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the description of collection named Best?",
    "answer": "SELECT DISTINCT Documents_in_Collections.Collection_Description FROM (SELECT DISTINCT Documents_in_Collections.Collection_Name FROM (SELECT DISTINCT Collection_ID FROM (SELECT DISTINCT Document_Object_ID , Collection_Subset_Name FROM (SELECT DISTINCT Document_Subset_ID FROM (SELECT DISTINCT Documents_in_Collections.Collection_Name FROM (SELECT DISTINCT Collection_Subsets"
  },
  {
    "id": 688,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the collection descriptions that are named as 'Best'?",
    "answer": "SELECT DISTINCT Description FROM (SELECT DISTINCT Document_Subset_Details FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Owner , Description FROM (SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Collection_Subset_ID FROM (SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Document_Subset_Details FROM ("
  },
  {
    "id": 689,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the name of the parent collection of the collection named Nice?",
    "answer": "SELECT DISTINCT Parent_Collection_ID FROM (SELECT DISTINCT Documents_in_Collections.Parent_Collection_ID FROM cre_Doc_and_collections.Documents_in_Collections WHERE Collection_Name = 'Nice') AS T INNER JOIN cre_Doc_and_collections.Document_Objects AS C  ON Collections.Collecrtion_Subset_Details = Documents"
  },
  {
    "id": 690,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the names of all parent collections of the collection named Nice?",
    "answer": "SELECT DISTINCT Collection_Name FROM (SELECT DISTINCT Parent_Collection_ID FROM (SELECT DISTINCT Document_Object_ID FROM cre_Doc_and_collections.Document_Objects GROUP BY Document_Subset_Name ORDER BY Document_Subset_Details LIMIT 1)) AS T INNER JOIN cre_Doc_and_collections.Collection_Subsets AS C  ON Parent_Collection_ID = "
  },
  {
    "id": 691,
    "db_id": "cre_Doc_and_collections",
    "question": "Which collection is not the parent of other collection? List the collection's name.",
    "answer": "SELECT DISTINCT Collection_Name FROM (SELECT DISTINCT Collecrtion_Subset_Details FROM (SELECT DISTINCT Document_Object_ID , Collection_Name FROM (SELECT DISTINCT Parent_Document_Object_ID FROM (SELECT DISTINCT Collection_Subsets.Parent_Document_Object_ID , Collection_Subsets.Collection_Name FROM (SELECT DISTINCT Collection_Subsets.Document_Subset_ID , Documents"
  },
  {
    "id": 692,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the names of the collections that are not the parent of the other collections?",
    "answer": "SELECT DISTINCT Collection_Name FROM (SELECT Parent_Collection_ID FROM (SELECT DISTINCT Parent_Collection_ID FROM cre_Doc_and_collections.Collections)) AS T ORDER BY Parent_Collection_ID LIMIT 10000000000000000000000000000000000000000000000000"
  },
  {
    "id": 693,
    "db_id": "cre_Doc_and_collections",
    "question": "List document that have more than one child. List the document id.",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Parent_Document_Object_ID FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Collection_Subset_Name , COUNT(Parent_Collection_ID ) AS num FROM (SELECT DISTINCT Collection_Subset_Name , COUNT(Parent_Collection_ID ) AS num FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT D"
  },
  {
    "id": 694,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the ids of the documents that have more than one child?",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Parent_Document_Object_ID FROM (SELECT DISTINCT Documents_in_Collections.Parent_Collection_ID FROM (SELECT DISTINCT Collection_Subset_Name , SUM(Other_Details ) AS total FROM (SELECT DISTINCT Parent_Document_Object_ID FROM (SELECT DISTINCT Documents_in_Collections.Parent_Collection_ID FROM (SELECT DIST"
  },
  {
    "id": 695,
    "db_id": "cre_Doc_and_collections",
    "question": "How many child collection does the collection named Best has?",
    "answer": "SELECT COUNT(Collection_Name ) FROM (SELECT DISTINCT Collections.Collection_Name , Collection_ID FROM (SELECT Collection_ID FROM (SELECT DISTINCT Collection_Subset_Name , Owner FROM (SELECT DISTINCT Parent_Document_Object_ID , Collection_ID FROM (SELECT DISTINCT Document_Subset_Name , Owner FROM (SELECT DISTINCT Collection_Subset_Name , Owner FROM (SELECT DISTINCT Document_"
  },
  {
    "id": 696,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the number of child collections belonging to the collection named Best?",
    "answer": "SELECT COUNT(Collection_Name ) FROM (SELECT DISTINCT Parent_Collection_ID , Collections.Collection_Name FROM (SELECT Collection_Subset_ID , Collection_Subset_Name FROM (SELECT DISTINCT Document_Object_ID , Parent_Document_Object_ID , Parent_Document_Object_ID FROM (SELECT Collection_Subset_Name , Document_Object_ID FROM (SELECT DISTINCT Document_Subset"
  },
  {
    "id": 697,
    "db_id": "cre_Doc_and_collections",
    "question": "List all document which is related to document owned by Ransom . List the document id .",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Parent_Document_Object_ID , Related_Document_Object_ID FROM (SELECT Related_Document_Object_ID , Document_Subset_ID FROM (SELECT DISTINCT Document_Subset_ID , Document_Subset_Name FROM (SELECT DISTINCT Document_Subset_ID , Document_Subset_Name FROM "
  },
  {
    "id": 698,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the document object ids of the related to the document owned by Ransom ?",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT Parent_Document_Object_ID , Owner FROM (SELECT Collection_Subset_Name , Collection_Subset_ID , Related_Document_Object_ID , Related_Document_Object_ID FROM (SELECT DISTINCT Parent_Document_Object_ID FROM (SELECT DISTINCT Document_Object_ID , Owner FROM (SELECT Collection_Subset_"
  },
  {
    "id": 699,
    "db_id": "cre_Doc_and_collections",
    "question": "List collection subset id, name and number of collections in each subset.",
    "answer": "SELECT DISTINCT Document_Subset_ID , Collection_Name , COUNT(Collection_Subset_ID ) FROM (SELECT DISTINCT Document_Subset_ID , Collections.Collecrtion_Subset_Details FROM (SELECT DISTINCT Collection_Subset_ID , Documents_in_Collections.Parent_Collection_ID FROM (SELECT DISTINCT Documents_in_Collections.Document_Object_ID , Documents_"
  },
  {
    "id": 700,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the collection subset ids, names, and number of collections for each subset?",
    "answer": "SELECT DISTINCT Collection_Subset_Name , COUNT(Parent_Collection_ID ), COUNT(Document_Object_ID ) FROM (SELECT DISTINCT Collection_Subset_Name , COUNT(Parent_Collection_ID ), COUNT(Document_Object_ID ) FROM (SELECT DISTINCT Documents_in_Collections.Document_Object_ID FROM (SELECT DISTINCT Collection_ID FROM (SELECT DISTINCT Collection_Subset_ID FROM"
  },
  {
    "id": 701,
    "db_id": "cre_Doc_and_collections",
    "question": "Which document has most of child? List the document id and the number of child.",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT MAX(Parent_Collection_ID ), COUNT(Document_Object_ID ) AS num FROM (SELECT DISTINCT Collection_Name , COUNT(Parent_Collection_ID ) AS count FROM (SELECT DISTINCT Parent_Document_Object_ID , COUNT(Document_Object_ID ) FROM (SELECT DISTINCT Document_Object_ID , COUNT(Collection_ID ) AS count FROM ("
  },
  {
    "id": 702,
    "db_id": "cre_Doc_and_collections",
    "question": "For each document object id, how many children do they have?",
    "answer": "SELECT COUNT(Collection_ID ) FROM (SELECT DISTINCT Collection_Subset_ID FROM (SELECT DISTINCT Document_Object_ID , COUNT(Parent_Document_Object_ID ) AS num FROM (SELECT DISTINCT Parent_Document_Object_ID , COUNT(Collection_Subset_Name ) AS num FROM (SELECT DISTINCT Document_Object_ID , COUNT(Collection_Subset_Name ) AS num FROM (SELECT DISTINCT Collection_Sub"
  },
  {
    "id": 703,
    "db_id": "cre_Doc_and_collections",
    "question": "Which document has least number of related documents? List the document id and the number of related documents.",
    "answer": "SELECT MAX(Document_Object_ID ), COUNT(Document_Subset_Name ) FROM (SELECT DISTINCT Document_Object_ID , COUNT(Document_Subset_Name ) AS num FROM (SELECT DISTINCT Parent_Document_Object_ID , Related_Document_Object_ID FROM (SELECT DISTINCT Related_Document_Object_ID FROM (SELECT Related_Document_Object_ID FROM (SELECT DISTINCT Document_"
  },
  {
    "id": 704,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the document object id with the least number of documents ?",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT COUNT(Document_Object_ID ) AS T1 , COUNT(Parent_Document_Object_ID ) AS T2 FROM (SELECT Parent_Document_Object_ID , Description FROM (SELECT Parent_Document_Object_ID , Description FROM (SELECT DISTINCT Description FROM (SELECT Parent_Document_Object_ID , Description FROM (SELECT DIST"
  },
  {
    "id": 705,
    "db_id": "cre_Doc_and_collections",
    "question": "Which document has between 2 and 4 number of documents ? List the document id and the number of related documents .",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT COUNT(Document_Object_ID ), SUM(Other_Details ) AS Total FROM (SELECT DISTINCT Parent_Document_Object_ID , COUNT(*) AS Num FROM (SELECT DISTINCT Collecrtion_Subset_Details , Document_Subset_ID  FROM (SELECT DISTINCT Collections.Collection_ID , Document_Object_ID FROM (SELECT COUNT(Collecrtion_Sub"
  },
  {
    "id": 706,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the ids of the dcouments that have between 2 and 4 related documents and how many related items are there?",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Document_Subset_ID FROM (SELECT DISTINCT Collection_Subset_ID , COUNT(Document_Subset_Name ) AS num FROM (SELECT DISTINCT Documents_in_Collections.Document_Object_ID FROM (SELECT DISTINCT Documents_in_Collections.Collection_ID FROM (SELECT DISTINCT Documents_in_Collections.Parent_Collection_ID"
  },
  {
    "id": 707,
    "db_id": "cre_Doc_and_collections",
    "question": "List all owner of documents that is related to documents owned by Braeden.",
    "answer": "SELECT DISTINCT Owner FROM (SELECT DISTINCT Owner FROM (SELECT DISTINCT Parent_Collection_ID FROM (SELECT DISTINCT Document_Object_ID , Owner FROM (SELECT DISTINCT Collection_Subset_Name , MIN(Description ) AS Min_Descriptions FROM (SELECT DISTINCT Collection_Subset_Name , Owner FROM (SELECT DISTINCT Document_Object_ID , Owner FROM ("
  },
  {
    "id": 708,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the different owners of documents that are related to ones owned by Braeden?",
    "answer": "SELECT DISTINCT Owner FROM (SELECT DISTINCT Owner FROM (SELECT DISTINCT Parent_Document_Object_ID FROM (SELECT DISTINCT Parent_Collection_ID , Documents_in_Collections.Collection_Name , Documents_in_Collections.Description FROM (SELECT DISTINCT Parent_Document_Object_ID , Document_Object_ID FROM (SELECT DISTINCT Documents_in_Collections.Parent_Document_Object_"
  },
  {
    "id": 709,
    "db_id": "cre_Doc_and_collections",
    "question": "Which unique subset does document owned by Braeden belong to? List the subset name.",
    "answer": "SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Parent_Document_Object_ID , Owner FROM (SELECT Owner , Collection_ID FROM (SELECT DISTINCT Documents_in_Collections.Parent_Collection_ID , Collection_Description FROM (SELECT DISTINCT Owner , Collection_Subset_Name FROM (SELECT DISTINCT Documents_in_Collections.Document"
  },
  {
    "id": 710,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the different subset names of all documents owned by Braeden?",
    "answer": "SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Documents_in_Collections.Collection_Name FROM (SELECT DISTINCT Collection_ID FROM (SELECT DISTINCT Collection_Name FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Parent_Document_Object_ID FROM (SELECT DISTINCT Document_Subset_ID FROM (SELECT DISTINCT Documents_in_Collections.Collection"
  },
  {
    "id": 711,
    "db_id": "cre_Doc_and_collections",
    "question": "List subset id, name and number of different documents in each subset.",
    "answer": "SELECT DISTINCT Document_Subset_ID , COUNT(Document_Object_ID ) FROM (SELECT DISTINCT Document_Subset_ID , COUNT(Parent_Document_Object_ID ), COUNT(Collection_ID ) AS NumOfDocs , Related_Document_Object_ID FROM (SELECT DISTINCT Document_Subset_ID , Related_Document_Object_ID FROM (SELECT DISTINCT Document_Sub"
  },
  {
    "id": 712,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the subset id, name, and number of different documents for each subset?",
    "answer": "SELECT DISTINCT Document_Subset_ID , Document_Subset_Name , COUNT(Documents_in_Collections.Document_Object_ID ) FROM (SELECT DISTINCT Document_Subset_ID , Documents_in_Collections.Parent_Document_Object_ID FROM (SELECT DISTINCT Document_Object_ID , Document_Object_ID FROM (SELECT Collection_ID , Parent_Collection_ID FROM (SELECT D"
  },
  {
    "id": 713,
    "db_id": "cre_Doc_and_collections",
    "question": "Which document subset has most of number of distinct documents ? List subset id , name and number of documents .",
    "answer": "SELECT DISTINCT Documents_in_Collections.Document_Object_ID , Documents_in_Collections.Collection_Name FROM (SELECT DISTINCT Documents_in_Collections.Parent_Collection_ID , COUNT(Documents_in_Collections.Document_Object_ID ) AS num FROM (SELECT Parent_Collection_ID , MAX(Document_Subset_Details ) AS cNum FROM (SELECT DISTINCT Documents_in_"
  },
  {
    "id": 714,
    "db_id": "cre_Doc_and_collections",
    "question": "For the document subset with the most number of different documents , what are the ids and names of the subset , as well as the number of documents ?",
    "answer": "SELECT DISTINCT Document_Subset_ID , Document_Object_ID , COUNT(Parent_Document_Object_ID ) AS num FROM (SELECT DISTINCT Document_Object_ID , COUNT(Parent_Document_Object_ID ) FROM (SELECT Document_Object_ID , COUNT(Document_Object_ID ) FROM (SELECT DISTINCT Documents_in_Collections.Document_Object_ID FROM (SELECT DISTINCT Collection_Subset_ID ,"
  },
  {
    "id": 715,
    "db_id": "cre_Doc_and_collections",
    "question": "For document subset named 'Best for 2000', List all document id that in this subset.",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Document_Subset_Name , Document_Subset_Details FROM (SELECT DISTINCT Document_Subset_Name , Document_Subset_Details FROM (SELECT DISTINCT Document_Subset_Name , Document_Subset_Details FROM (SELECT DISTINCT Document_Subset_Name , Document_Sub"
  },
  {
    "id": 716,
    "db_id": "cre_Doc_and_collections",
    "question": "For the document subset named 'Best for 2000', what are the document ids in that subset?",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Collection_Subset_Name FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Document_Object_ID , COUNT(Document_Object_ID ) AS Num FROM (SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Collection_Subset_Name FROM (SELECT DISTINCT Document_Subset"
  },
  {
    "id": 717,
    "db_id": "cre_Doc_and_collections",
    "question": "List all document subsets of documents that related to each document id. List the name of document subset and the document id.",
    "answer": "SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Documents_in_Collections.Document_Object_ID , Collection_Name FROM (SELECT DISTINCT Collection_ID , Document_Object_ID FROM (SELECT DISTINCT Parent_Document_Object_ID , Collection_Description FROM (SELECT DISTINCT Document_Subset_Name , Parent_Collection_ID FROM (SELECT DISTINCT Documents_in_Collections.Document_Object"
  },
  {
    "id": 718,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the different subsets of documents related to each document id , list the name of the document subset and id of the actual document ?",
    "answer": "SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Documents_in_Collections.Document_Object_ID FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Collection_Subsets.Document_Object_ID FROM (SELECT DISTINCT Document_Subset_ID FROM (SELECT DISTINCT Document_Subset_Name , Parent_Document_Object_ID FROM (SELECT DISTINCT Documents_in_"
  },
  {
    "id": 719,
    "db_id": "cre_Doc_and_collections",
    "question": "List the Collection Name that document owned by 'Ransom ' belong to .",
    "answer": "SELECT DISTINCT Collection_Name FROM (SELECT DISTINCT Parent_Collection_ID , Document_Object_ID FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Documents_in_Collections.Document_Object_ID FROM (SELECT DISTINCT Documents_in_Collections.Parent_Collection_ID , Document_Objects.Collecrtion_Subset_Details FROM (SELECT DISTINCT Documents_"
  },
  {
    "id": 720,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the collection name of a document owned by 'Ransom'?",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Document_Object_ID , Related_Document_Object_ID FROM (SELECT DISTINCT Collection_Name FROM (SELECT DISTINCT Owner FROM (SELECT DISTINCT Document_Subset_ID , MIN(Document_Object_ID ) AS min_Documents FROM (SELECT DISTINCT Owner FROM (SELECT DISTINCT Collection_Subsets.Collection_"
  },
  {
    "id": 721,
    "db_id": "cre_Doc_and_collections",
    "question": "How many collections does each document belong to? List the count and the document id.",
    "answer": "SELECT COUNT(Document_Object_ID ), Document_Object_ID FROM (SELECT DISTINCT Parent_Collection_ID , Collection_Name , Description FROM (SELECT Collection_Subset_Name , Collection_ID FROM (SELECT DISTINCT Parent_Document_Object_ID , Related_Collection_ID FROM (SELECT Related_Document_Object_ID , Document_Object_ID FROM (SELECT DISTINCT Document"
  },
  {
    "id": 722,
    "db_id": "cre_Doc_and_collections",
    "question": "For each document object id, how many collections does it belong to?",
    "answer": "SELECT COUNT(Collection_ID ) FROM (SELECT DISTINCT Parent_Collection_ID , Document_Object_ID FROM (SELECT DISTINCT Parent_Collection_ID FROM (SELECT Document_Subset_ID FROM (SELECT DISTINCT Collection_ID FROM (SELECT DISTINCT Documents_in_Collections.Parent_Collection_ID FROM (SELECT DISTINCT Collection_ID FROM (SELECT DISTINCT Documents_in_Collections.Document_Object_"
  },
  {
    "id": 723,
    "db_id": "cre_Doc_and_collections",
    "question": "How many documents does collection named 'Best' has?",
    "answer": "SELECT COUNT(Collection_Name ) FROM (SELECT DISTINCT Collections.Collection_Name , Related_Document_Object_ID FROM (SELECT DISTINCT Collection_Subsets.Document_Subset_ID , Related_Collection_ID , Documents_in_Collections.Collection_Name FROM (SELECT Collection_Subset_ID , Collection_Name , Owner FROM (SELECT DISTINCT Collections.Parent_Document_Object_ID , Col"
  },
  {
    "id": 724,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the number of documents in the collection named 'Best'?",
    "answer": "SELECT COUNT(Documents_in_Collections.Document_Object_ID ) FROM (SELECT DISTINCT Documents_in_Collections.Collection_Name , COUNT(Documents_in_Collections.Collection_ID ) AS Num FROM (SELECT Collection_Name FROM (SELECT DISTINCT Documents_in_Collections.Collection_Name , COUNT(Documents_in_Collections.Document_Object_ID ) AS Num FROM (SELECT DISTINCT Documents_"
  },
  {
    "id": 725,
    "db_id": "cre_Doc_and_collections",
    "question": "List the document id of all documents in collection named Best.",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Documents_in_Collections.Document_Object_ID FROM (SELECT DISTINCT Documents_in_Collections.Collection_Name , Documents_in_Collections.Parent_Document_Object_ID FROM (SELECT DISTINCT Document_Subsets.Document_Subset_ID , Collection_Subsets.Collection_Name FROM (SELECT DISTINCT Document_Subsets."
  },
  {
    "id": 726,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the number of document object ids in the collection named Best?",
    "answer": "SELECT COUNT(Collection_ID ) FROM (SELECT DISTINCT Parent_Collection_ID FROM (SELECT Collection_Name FROM (SELECT Collection_Subset_ID FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT Documents_in_Collections.Document_Object_ID FROM (SELECT Collection_ID , Documents_in_Collections.Parent_Collection_ID FROM (SELECT DISTINCT Parent_Collection_ID"
  },
  {
    "id": 727,
    "db_id": "cre_Doc_and_collections",
    "question": "Which collection have most number of documents? List collection name, id and number of documents.",
    "answer": "SELECT DISTINCT Documents_in_Collections.Collection_Name , COUNT(Document_Objects.Document_Object_ID ) AS num FROM (SELECT DISTINCT Collection_ID , MAX(Document_Object_ID ) AS id FROM (SELECT DISTINCT Document_Object_ID , COUNT(Collection_ID ) AS count FROM (SELECT DISTINCT Documents_in_Collections.Collection_Name , COUNT(Document_Objects.Document_Object_ID"
  },
  {
    "id": 728,
    "db_id": "cre_Doc_and_collections",
    "question": "For ever collection named 'Best', what is the name and id of the one with the most documents, and how many documents does it have?",
    "answer": "SELECT DISTINCT Collection_Name , COUNT(Collection_ID ) FROM (SELECT * FROM (SELECT Collection_ID , COUNT(Document_Object_ID ) AS num FROM (SELECT Collection_Subset_Name , COUNT(Parent_Document_Object_ID ) FROM (SELECT Document_Object_ID , MIN(Description ), MIN(Other_Details ) AS min_details FROM (SELECT DISTINCT Description FROM (SELECT DISTINCT Collection_Subset_Name ,"
  },
  {
    "id": 729,
    "db_id": "cre_Doc_and_collections",
    "question": "List id of documents that in document subset Best for 2000 and collection named Best.",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Document_Subset_ID , Parent_Document_Object_ID FROM (SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Collection_Subset_ID , Collection_Name FROM (SELECT DISTINCT Collection_Subset_ID FROM (SELECT DISTINCT Documents_in_Collections.Collection_Name FROM (SELECT DISTINCT Collection_ID FROM (SELECT DISTINCT"
  },
  {
    "id": 730,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the different document object ids in the subset named 'Best for 2000' and in the collection named 'Best'?",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Collection_Subsets.Document_Subset_ID FROM (SELECT DISTINCT Document_Subsets.Document_Subset_Name , Collection_Subsets.Document_Subset_Details FROM (SELECT DISTINCT Document_Objects.Document_Object_ID FROM "
  },
  {
    "id": 731,
    "db_id": "cre_Doc_and_collections",
    "question": "List id of documents that in collection named Best but not in document subset Best for 2000.",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Parent_Document_Object_ID , Owner FROM (SELECT DISTINCT Owner FROM (SELECT DISTINCT Collection_Subset_Name , Collection_Subset_ID FROM (SELECT DISTINCT Document_Subset_ID FROM (SELECT DISTINCT Document_Subset_Details FROM (SELECT DISTINCT Documents_in_Collections.Document_Object_ID , Documents_in"
  },
  {
    "id": 732,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the different document object ids that are in the collection named Best but not in the subset named 'Best for 2000'?",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT Collection_Subset_Name , Related_Document_Object_ID FROM (SELECT Related_Document_Object_ID , Collection_Subset_Name FROM (SELECT Document_Subset_Details FROM (SELECT DISTINCT Document_Subset_Name , Related_Document_Object_ID FROM (SELECT DISTINCT R"
  },
  {
    "id": 733,
    "db_id": "cre_Doc_and_collections",
    "question": "List id of documents that in document subset Best for 2000 or in collection named Best.",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Document_Subset_ID , Document_Subset_Name FROM (SELECT DISTINCT Document_Subset_ID FROM (SELECT DISTINCT Collection_Subset_Name , Owner FROM (SELECT DISTINCT Collection_ID , Owner FROM (SELECT DISTINCT Document_Subset_Name , Collection_Name FROM (SELECT DISTINCT Collection_ID , Document_Subset"
  },
  {
    "id": 734,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the different document ids that are in the subset named 'Best for 2000' or in the collection named 'Best'?",
    "answer": "SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Documents_in_Collections.Document_Object_ID FROM (SELECT DISTINCT Documents_in_Collections.Document_Object_ID FROM (SELECT DISTINCT Collection_ID FROM (SELECT DISTINCT Documents_in_Collections.Collection_Subset_ID , Documents_in_Collections.Parent_Document_Object_ID FROM ("
  },
  {
    "id": 735,
    "db_id": "cre_Doc_and_collections",
    "question": "List all name of collections that are related to collection named Best.",
    "answer": "SELECT DISTINCT Collection_Name FROM (SELECT DISTINCT Collections.Collection_Name , Related_Collection_ID FROM (SELECT DISTINCT Collection_ID FROM (SELECT Collection_Description FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Documents_in_Collections.Parent_Document_Object_ID FROM (SELECT DISTINCT Collection_ID , Document_Object_ID FROM (SELECT DISTINCT"
  },
  {
    "id": 736,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the names of the collections that are related to the collection named Best?",
    "answer": "SELECT DISTINCT Collection_Name FROM (SELECT DISTINCT Collections.Collection_Name , Parent_Collection_ID FROM (SELECT DISTINCT Documents_in_Collections.Document_Object_ID FROM (SELECT DISTINCT Documents_in_Collections.Collection_ID FROM (SELECT DISTINCT Documents_in_Collections.Collection_Name , Parent_Document_Object_ID FROM (SELECT DISTINCT Collection_Name , Parent_Collection_"
  },
  {
    "id": 737,
    "db_id": "cre_Doc_and_collections",
    "question": "How many collections that are related to collection named Best?",
    "answer": "SELECT COUNT(Collection_Name ) FROM (SELECT DISTINCT Collections.Collection_Name , Related_Collection_ID FROM (SELECT DISTINCT Collection_Subsets.Collection_ID , Related_Collection_ID FROM (SELECT DISTINCT Documents_in_Collections.Document_Object_ID , Related_Collection_ID FROM (SELECT DISTINCT Documents_in_Collections.Parent_Collection_ID"
  },
  {
    "id": 738,
    "db_id": "cre_Doc_and_collections",
    "question": "How many different collections are related to the one named 'Best'?",
    "answer": "SELECT COUNT(Collection_Name ) FROM (SELECT DISTINCT Documents_in_Collections.Collection_Name FROM (SELECT DISTINCT Collection_ID FROM (SELECT DISTINCT Collection_ID FROM cre_Doc_and_collections.Collections AS T INNER JOIN cre_Doc_and_collections.Documents_in_Collections AS T    AS D  ON Documents_in_Collections.Parent_Collection_ID = Collections.Collection"
  },
  {
    "id": 739,
    "db_id": "cre_Doc_and_collections",
    "question": "Which collection subset does collection name Best in? List collection subset name.",
    "answer": "SELECT DISTINCT Documents_in_Collections.Collection_Name FROM (SELECT DISTINCT Collection_Name FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Owner FROM (SELECT DISTINCT Document_Objects.Parent_Document_Object_ID , Document_Objects.Description FROM (SELECT DISTINCT Documents_in_Collections.Document_Object_ID FROM (SELECT DISTINCT Document_"
  },
  {
    "id": 740,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the collection subsets that the collection named 'Best' in?",
    "answer": "SELECT DISTINCT Document_Subset_Name FROM (SELECT DISTINCT Documents_in_Collections.Collection_Name FROM (SELECT DISTINCT Collection_ID FROM (SELECT Collection_ID , Related_Document_Object_ID FROM (SELECT Collection_Name FROM (SELECT DISTINCT Collection_ID FROM (SELECT DISTINCT Document_Object_ID FROM (SELECT DISTINCT Document_Subset_ID FROM (SELECT DISTINCT Documents_"
  },
  {
    "id": 741,
    "db_id": "sing_contest",
    "question": "How many songs contain \"Love\" in their names?",
    "answer": "SELECT COUNT(id ) FROM (SELECT DISTINCT name FROM (SELECT id , MAX(songs.name ) AS n1 FROM (SELECT DISTINCT songs.name FROM sing_contest.songs WHERE language = 'zh-r') AS T INNER JOIN sing_contest.songs AS S  ON sing_contest.songs.songs_id = sing_contest.songs"
  },
  {
    "id": 742,
    "db_id": "sing_contest",
    "question": "List the name of the songs in ascending, lexicographical order.",
    "answer": "SELECT DISTINCT songs.name FROM (SELECT DISTINCT songs.name FROM sing_contest.songs AS T INNER JOIN (SELECT id FROM sing_contest.participants ORDER BY name LIMIT 1) AS B  ON songs.id = 2234691275088064179) AS S ORDER BY id LIMIT 1;"
  },
  {
    "id": 743,
    "db_id": "sing_contest",
    "question": "List the names and languages of the songs .",
    "answer": "SELECT DISTINCT name , language FROM sing_contest.songs ORDER BY id LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 744,
    "db_id": "sing_contest",
    "question": "What are the maximum and minimum voice sound quality score of the performances?",
    "answer": "SELECT DISTINCT MAX(voice_sound_quality ) AS min , MIN(voice_sound_quality ) FROM (SELECT AVG(voice_sound_quality ) AS min FROM (SELECT songs_id FROM (SELECT songs_id FROM sing_contest.songs WHERE language = 'en' GROUP BY songs_id ORDER BY popularity LIMIT 1) AS T ) WHERE id = 'p17624983"
  },
  {
    "id": 745,
    "db_id": "sing_contest",
    "question": "What are the voice sound quality score, rhythm tempo score and stage presence score performed by the participant named 'Freeway'?",
    "answer": "SELECT DISTINCT voice_sound_quality FROM (SELECT SUM(voice_sound_quality ) AS num , rhythm_tempo FROM (SELECT id , SUM(voice_sound_quality ) AS sum FROM (SELECT id , MAX(songs_id ) AS max FROM (SELECT MAX(songs_id ) AS id FROM (SELECT participant_id , songs_id FROM (SELECT id , id FROM (SELECT DISTINCT id"
  },
  {
    "id": 746,
    "db_id": "sing_contest",
    "question": "What are the id, language and original artist of the songs whose name is not 'Love'?",
    "answer": "SELECT id FROM sing_contest.songs WHERE name = 'love' LIMIT 1"
  },
  {
    "id": 747,
    "db_id": "sing_contest",
    "question": "What are the names and original artists of the song whose English translation is 'All the streets of love'?",
    "answer": "SELECT name , original_artist FROM (SELECT DISTINCT name , original_artist FROM (SELECT id , name , english_translation FROM (SELECT songs_id , language , voice_sound_quality , rhythm_tempo , stage_presence FROM (SELECT DISTINCT id FROM (SELECT id , language FROM (SELECT DISTINCT name , songs_id FROM (SELECT DISTINCT id , name FROM"
  },
  {
    "id": 748,
    "db_id": "sing_contest",
    "question": "What are the distinct stage presence scores for all the songs that are in language 'English' ?",
    "answer": "SELECT SUM(stage_presence ) FROM (SELECT DISTINCT voice_sound_quality , SUM(rhythm_tempo ) AS sum FROM (SELECT DISTINCT language FROM (SELECT DISTINCT language FROM sing_contest.songs GROUP BY language ORDER BY id ) AS T ORDER BY id LIMIT 1) AS A GROUP BY language ORDER BY stage_presence , language LIMIT 100"
  },
  {
    "id": 749,
    "db_id": "sing_contest",
    "question": "What are the ids and names of the participants who have performed at least two songs?",
    "answer": "SELECT DISTINCT id FROM (SELECT DISTINCT songs.participant_id FROM (SELECT DISTINCT songs.songs_id FROM (SELECT DISTINCT original_artist FROM (SELECT DISTINCT name FROM sing_contest.songs WHERE popularity > 20 ORDER BY songs.popularity LIMIT 1)) AS t INNER JOIN sing_contest.participants AS p  ON p"
  },
  {
    "id": 750,
    "db_id": "sing_contest",
    "question": "What are the ids, names and popularity of the participants, order by the number of songs they perform?",
    "answer": "SELECT DISTINCT id FROM (SELECT DISTINCT songs.id , SUM(popularity ) AS total_score FROM (SELECT DISTINCT id FROM (SELECT DISTINCT songs_id FROM (SELECT id FROM (SELECT id , language , language , COUNT(participant_id ) AS num_involved FROM (SELECT id , language , id FROM (SELECT id , id , popularity FROM (SELECT id , id , name , popular"
  },
  {
    "id": 751,
    "db_id": "sing_contest",
    "question": "What are the id and name of the participants who received score 5 for their sound quality or rhythm tempo?",
    "answer": "SELECT id FROM (SELECT DISTINCT id , rhythm_tempo , stage_presence , voice_sound_quality FROM (SELECT DISTINCT id , voice_sound_quality , stage_presence FROM (SELECT DISTINCT songs_id , voice_sound_quality , rhythm_tempo , name FROM (SELECT DISTINCT id , name , rhythm_tempo , stage_presence , popularity FROM (SELECT D"
  },
  {
    "id": 752,
    "db_id": "sing_contest",
    "question": "What are the voice sound quality scores received for the song named ' The Balkan Girls ' in English language ?",
    "answer": "SELECT SUM(popularity ) AS sum FROM (SELECT id , name , popularity FROM (SELECT id , name , SUM(popularity ) AS total FROM (SELECT DISTINCT songs.name , songs.language , songs.english_translation FROM (SELECT DISTINCT id FROM (SELECT DISTINCT name , language , songs.english_translation FROM (SELECT id , name , songs.language , songs.english"
  },
  {
    "id": 753,
    "db_id": "sing_contest",
    "question": "What are the id and name of the song sung by the most participants?",
    "answer": "SELECT id FROM (SELECT DISTINCT name FROM sing_contest.songs ORDER BY popularity LIMIT 1) AS T ORDER BY id LIMIT 10000000139285461521316017419586580986964013477937577656487223952"
  },
  {
    "id": 754,
    "db_id": "sing_contest",
    "question": "How many performances have a stage presence score less than 7 or higher than 9?",
    "answer": "SELECT COUNT(performance_score.participant_id ) FROM (SELECT MAX(popularity ) AS total , SUM(popularity ) AS sum FROM (SELECT DISTINCT id , popularity FROM (SELECT DISTINCT id FROM (SELECT id , SUM(popularity ) AS total , SUM(popularity ) FROM (SELECT id , SUM(popularity ) AS sum FROM (SELECT id , SUM(popular"
  },
  {
    "id": 755,
    "db_id": "sing_contest",
    "question": "How many songs listed are not performed?",
    "answer": "SELECT COUNT(id ) FROM (SELECT DISTINCT songs.name FROM (SELECT DISTINCT songs.id FROM sing_contest.songs AS T INNER JOIN sing_contest.performance_score AS T  ON id = performance_score.participant_id ORDER BY name LIMIT 1) AS T GROUP BY songs.name ORDER BY name LIMIT 2000000000000"
  },
  {
    "id": 756,
    "db_id": "sing_contest",
    "question": "What are the average rhythm scores for the songs in each different language?",
    "answer": "SELECT SUM(songs.rhythm_tempo ) FROM (SELECT DISTINCT language , SUM(songs.rhythm_tempo ) AS sum FROM (SELECT DISTINCT language , songs_id FROM (SELECT language , songs_id FROM (SELECT language , songs_id FROM (SELECT id FROM sing_contest.songs WHERE name = 'Rhythms')) AS T ORDER BY id LIMIT"
  },
  {
    "id": 757,
    "db_id": "sing_contest",
    "question": "What are the distinct names of the participants who have sung a song in 'English'?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name FROM (SELECT language , COUNT(participant_id ) AS num FROM (SELECT id , language FROM (SELECT id , SUM(popularity ), songs_id FROM (SELECT id , language FROM sing_contest.songs GROUP BY id ORDER BY popularity LIMIT 1)) WHERE id = 'en-US') AS T WHERE id = 'english' ORDER BY name LIMIT 1)"
  },
  {
    "id": 758,
    "db_id": "sing_contest",
    "question": "What are the name and popularity of participants who have sung a song both in 'Croatian' language and in 'English' language?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name , popularity FROM sing_contest.songs WHERE language = 'croatian' INNER JOIN (SELECT DISTINCT songs_id FROM sing_contest.participants WHERE language = 'english') AS u  ON id = songs_id ORDER BY name LIMIT 1) AS t WHERE language = 'en-US' GROUP BY name ORDER BY"
  },
  {
    "id": 759,
    "db_id": "sing_contest",
    "question": "Which song names have the substring \"Is\"?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name FROM (SELECT DISTINCT id FROM sing_contest.songs WHERE language = 'en' ORDER BY id LIMIT 1) AS T ) AS T INNER JOIN (SELECT DISTINCT name FROM sing_contest.songs WHERE language = 'en' GROUP BY name ORDER BY id LIMIT 1) AS t  ON songs.name =  'is' GROUP BY songs.name ORDER"
  },
  {
    "id": 760,
    "db_id": "sing_contest",
    "question": "Find the original artists who sing songs with rhythm tempo above 5 , and list results in descending order of voice sound quality .",
    "answer": "SELECT DISTINCT original_artist FROM (SELECT DISTINCT songs.songs_id , AVG(voice_sound_quality ) AS avg FROM (SELECT DISTINCT songs_id , AVG(voice_sound_quality ) AS avg FROM (SELECT DISTINCT songs_id , voice_sound_quality FROM (SELECT DISTINCT songs_id , AVG(voice_sound_quality ) AS avg FROM (SELECT DISTINCT"
  },
  {
    "id": 761,
    "db_id": "address_1",
    "question": "How many cities do we have?",
    "answer": "SELECT COUNT(city_code ) FROM (SELECT DISTINCT city_code FROM (SELECT city_name , longitude , latitude FROM (SELECT city_name , longitude , latitude FROM address_1.City WHERE country = 'US'))) AS T ORDER BY country LIMIT 10000000000000000000000000000000000"
  },
  {
    "id": 762,
    "db_id": "address_1",
    "question": "Count the number of cities.",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT city_code FROM address_1.City GROUP BY city_code ORDER BY country LIMIT 1) AS T ORDER BY country LIMIT 10000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 763,
    "db_id": "address_1",
    "question": "List all different states .",
    "answer": "SELECT DISTINCT state FROM (SELECT DISTINCT state FROM address_1.City GROUP BY state ORDER BY state LIMIT 1) AS T ORDER BY state LIMIT 20000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 764,
    "db_id": "address_1",
    "question": "What are all the distinct states?",
    "answer": "SELECT DISTINCT state FROM (SELECT DISTINCT state FROM address_1.City GROUP BY city_name ORDER BY Direct_distance.city_code LIMIT 1) AS t ORDER BY Direct_distance.city_name LIMIT 100000000000000000000000000000000000000000"
  },
  {
    "id": 765,
    "db_id": "address_1",
    "question": "How many countries do we have?",
    "answer": "SELECT COUNT(city_code ) FROM (SELECT DISTINCT city_name FROM (SELECT city_name , SUM(latitude ) AS sum FROM (SELECT DISTINCT country , city_name FROM address_1.City GROUP BY city_code ORDER BY latitude LIMIT 2)) AS t ORDER BY latitude LIMIT 2) AS T WHERE latitude = 89655321074817000000"
  },
  {
    "id": 766,
    "db_id": "address_1",
    "question": "Count the number of coutries.",
    "answer": "SELECT COUNT(city_code ) FROM (SELECT DISTINCT city_code FROM (SELECT city_name , COUNT(city_code ) AS num FROM (SELECT DISTINCT city_code FROM address_1.City WHERE state = 'RU' ORDER BY latitude LIMIT 1) AS t ) AS T ORDER BY City.city_name LIMIT 200000000057680000000000"
  },
  {
    "id": 767,
    "db_id": "address_1",
    "question": "Show names, codes, states, countries for all cities.",
    "answer": "SELECT DISTINCT LName , city_name , state , country FROM (SELECT DISTINCT LName , city_code , country FROM (SELECT DISTINCT city_code , country FROM address_1.City WHERE latitude > '54\u00b023' ORDER BY Fname ) AS R GROUP BY city_name ORDER BY Direct_distance.longitude LIMIT 1) AS t ORDER BY Direct"
  },
  {
    "id": 768,
    "db_id": "address_1",
    "question": "What are the names, codes, states, and countries for all cities?",
    "answer": "SELECT DISTINCT city_name , state , country FROM (SELECT DISTINCT state , city_code , SUM(latitude ) AS lat FROM (SELECT DISTINCT city1_code , city2_code FROM (SELECT DISTINCT City.city_code , COUNT(City.city_code ) AS n FROM (SELECT DISTINCT City.city_name , COUNT(City.country ) AS N FROM (SELECT DISTINCT City.city"
  },
  {
    "id": 769,
    "db_id": "address_1",
    "question": "What is the latitude and longitude for Baltimore?",
    "answer": "SELECT DISTINCT Direct_distance.city1_code , Direct_distance.city2_code FROM (SELECT city_name , MAX(latitude ) AS lat1 , MAX(longitude ) AS long FROM (SELECT city_name , latitude , longitude FROM (SELECT DISTINCT City.city_code , city_name , city_name FROM (SELECT DISTINCT City.city_code , City.city_name FROM (SELECT"
  },
  {
    "id": 770,
    "db_id": "address_1",
    "question": "What latitude and longitude correspond to Baltimore?",
    "answer": "SELECT DISTINCT Direct_distance.longitude , Direct_distance.latitude FROM address_1.City AS T INNER JOIN (SELECT city_code , MAX(LName ), MIN(Fname ) AS j054082976431 FROM address_1.City WHERE city_code = 'baltimore' GROUP BY Direct_distance.latitude , Direct_distance."
  },
  {
    "id": 771,
    "db_id": "address_1",
    "question": "Show names for all cities in state PA.",
    "answer": "SELECT DISTINCT Fname FROM (SELECT DISTINCT city_name FROM (SELECT DISTINCT state , country FROM (SELECT DISTINCT state , country FROM (SELECT DISTINCT City.city_name , City.latitude , City.longitude FROM address_1.City WHERE latitude = 48.7269083467956856 FULL JOIN (SELECT DISTINCT city_code FROM ("
  },
  {
    "id": 772,
    "db_id": "address_1",
    "question": "What are the names of all cities in PA?",
    "answer": "SELECT DISTINCT city_name FROM (SELECT DISTINCT City.city_name FROM (SELECT City.city_code , city_name FROM (SELECT DISTINCT City.city_code , Fname , LName FROM (SELECT DISTINCT city1_code , city2_code , Sex , Major FROM (SELECT DISTINCT city1_code , city2_code , Sex , Major FROM (SELECT DISTINCT City.city_code , city1"
  },
  {
    "id": 773,
    "db_id": "address_1",
    "question": "How many cities are in Canada?",
    "answer": "SELECT COUNT(city_code ) FROM (SELECT DISTINCT city_code FROM (SELECT city_name , country , city1_code , city2_code FROM (SELECT city_name , state , country , city2_code FROM (SELECT DISTINCT city_name , city1_code , city2_code FROM (SELECT DISTINCT city_name , city2_code FROM (SELECT city2_code , country , city1_code FROM (SELECT"
  },
  {
    "id": 774,
    "db_id": "address_1",
    "question": "Count the number of cities in Canada.",
    "answer": "SELECT COUNT(city_code ) FROM (SELECT DISTINCT city_code FROM (SELECT city_name , longitude , latitude FROM (SELECT city_name , longitude , latitude FROM address_1.City WHERE country = 'canada')) AS T ORDER BY city_name ) AS t GROUP BY city_name ORDER BY country  DESC LIMIT 25000000000000000000"
  },
  {
    "id": 775,
    "db_id": "address_1",
    "question": "Show names for all USA city ordered by latitude.",
    "answer": "SELECT DISTINCT Fname FROM (SELECT DISTINCT LName , SUM(longitude ) AS lng FROM (SELECT city_code , SUM(longitude ) AS lng FROM (SELECT DISTINCT City.city_name , SUM(longitude ) AS lon FROM (SELECT DISTINCT City.city_code , City.latitude , City.longitude FROM (SELECT DISTINCT LName , SUM(longitude ) AS lng FROM ("
  },
  {
    "id": 776,
    "db_id": "address_1",
    "question": "What are all the city names for cities in the USA, ordered by latitude?",
    "answer": "SELECT DISTINCT city_name FROM (SELECT city_code , MAX(city_name ) AS rn FROM (SELECT city_code , SUM(longitude ), SUM(latitude ) FROM (SELECT DISTINCT City.city_name FROM (SELECT City.city_name , City.latitude , City.longitude FROM (SELECT DISTINCT Fname , LName , Sex , Major , Advisor FROM (SELECT DISTINCT city_code , Fname"
  },
  {
    "id": 777,
    "db_id": "address_1",
    "question": "Show all states and number of cities in each state.",
    "answer": "SELECT DISTINCT state , COUNT(city_name ) FROM address_1.City GROUP BY state ORDER BY country , city_code LIMIT 10000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 778,
    "db_id": "address_1",
    "question": "How many cities are in each state?",
    "answer": "SELECT DISTINCT city_name FROM (SELECT DISTINCT city_code , state FROM address_1.City ORDER BY latitude , longitude ) AS T ORDER BY latitude , longitude LIMIT 1500000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 779,
    "db_id": "address_1",
    "question": "Show all countries and number of cities in each .",
    "answer": "SELECT DISTINCT country , COUNT(city_name ) FROM (SELECT DISTINCT city_name FROM address_1.City GROUP BY country ORDER BY latitude , longitude LIMIT 1) AS T WHERE city_code = 'US' GROUP BY city_name ORDER BY country , latitude , longitude LIMIT 100000000548755602944360241028022"
  },
  {
    "id": 780,
    "db_id": "address_1",
    "question": "How many cities are there in each country?",
    "answer": "SELECT SUM(country ), COUNT(city_name ) FROM (SELECT DISTINCT city_code , country , COUNT(city_name ) AS num FROM (SELECT DISTINCT city_name , COUNT(city_code ) AS num FROM (SELECT country , city_code , COUNT(city_name ) AS perfrom FROM (SELECT DISTINCT city_code , country , country , COUNT(city_name ) FROM (SELECT DISTINCT city"
  },
  {
    "id": 781,
    "db_id": "address_1",
    "question": "List all states with at least two cities.",
    "answer": "SELECT DISTINCT state FROM (SELECT DISTINCT state FROM address_1.City WHERE city_name = 'State') GROUP BY state ORDER BY country LIMIT 20"
  },
  {
    "id": 782,
    "db_id": "address_1",
    "question": "Which states have at least two cities?",
    "answer": "SELECT DISTINCT state FROM (SELECT DISTINCT city_code , COUNT(city_code ) AS num FROM (SELECT DISTINCT city_code , COUNT(city_code ) AS num FROM (SELECT DISTINCT City.city_name FROM (SELECT city_name FROM (SELECT DISTINCT city_code , Direct_distance.distance FROM (SELECT DISTINCT Direct_distance.city1_code , Direct"
  },
  {
    "id": 783,
    "db_id": "address_1",
    "question": "Which state has most number of cities?",
    "answer": "SELECT DISTINCT state FROM (SELECT DISTINCT city_code , COUNT(city_name ) AS num FROM (SELECT DISTINCT city_code , COUNT(city_name ) AS num FROM (SELECT DISTINCT state FROM (SELECT DISTINCT city_name , COUNT(city_name ) FROM (SELECT DISTINCT City.city_name , Fname FROM (SELECT DISTINCT city_name , Fname FROM (SELECT DISTINCT city_"
  },
  {
    "id": 784,
    "db_id": "address_1",
    "question": "Give the state that has the most cities.",
    "answer": "SELECT DISTINCT state FROM (SELECT DISTINCT city_code , COUNT(city_code ) AS num FROM (SELECT DISTINCT city_name FROM address_1.City ORDER BY city_name LIMIT 1) AS T ) AS t WHERE country = 'usa' GROUP BY state ORDER BY country LIMIT 100000000000000000000000000"
  },
  {
    "id": 785,
    "db_id": "address_1",
    "question": "Which country has fewest number of cities?",
    "answer": "SELECT COUNT(city_code ) FROM (SELECT DISTINCT city_name , MAX(City.city_code ) AS id FROM (SELECT DISTINCT City.city_name FROM (SELECT city_code FROM (SELECT city_name , SUM(city_name ) AS num FROM (SELECT DISTINCT City.city_code , COUNT(city_name ), SUM(city_name ) FROM (SELECT DISTINCT city_name FROM (SELECT DISTINCT city_"
  },
  {
    "id": 786,
    "db_id": "address_1",
    "question": "Give the country with the fewest number of cities.",
    "answer": "SELECT DISTINCT state FROM (SELECT DISTINCT city_code , COUNT(city_code ) AS num FROM (SELECT DISTINCT city_name FROM address_1.City ORDER BY City.latitude LIMIT 1) AS t WHERE latitude = 40 GROUP BY Direct_distance.city1_code ORDER BY country LIMIT 0) LIMIT 1;"
  },
  {
    "id": 787,
    "db_id": "address_1",
    "question": "Show the first name and the last name for students living in state MD.",
    "answer": "SELECT Fname , LName FROM (SELECT DISTINCT LName , city_code FROM (SELECT DISTINCT city_code FROM (SELECT city_name , state , country , latitude FROM (SELECT DISTINCT city_name FROM (SELECT state , country , latitude FROM (SELECT city_name , latitude , longitude FROM (SELECT DISTINCT city_name , state , country FROM (SELECT city_name , latitude , longitude FROM (SELECT"
  },
  {
    "id": 788,
    "db_id": "address_1",
    "question": "What are the full names of students living in MD?",
    "answer": "SELECT DISTINCT LName FROM (SELECT DISTINCT Fname , Sex , LName FROM (SELECT city_code , country , SUM(longitude ) AS lat , SUM(latitude ) AS lng FROM (SELECT City.city_name , SUM(distance ) AS mins FROM (SELECT DISTINCT City.city_code , COUNT(City.city_name ), distance FROM (SELECT DISTINCT City.city_name , city_code , long"
  },
  {
    "id": 789,
    "db_id": "address_1",
    "question": "How many students live in China?",
    "answer": "SELECT COUNT(StuID ) FROM (SELECT DISTINCT StuID FROM (SELECT city_code , country , Fname , Sex , Major , Advisor FROM (SELECT city_name , Advisor FROM address_1.City WHERE country = 'china' GROUP BY city_name ORDER BY city_code LIMIT 2)) AS T ) AS a ORDER BY StuID LIMIT 25000000000000000"
  },
  {
    "id": 790,
    "db_id": "address_1",
    "question": "Count the number of students living in China.",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT LName , Fname , Age , Sex , Major FROM address_1.Student WHERE city_code = 'china' GROUP BY city_code ORDER BY City.city_code ) AS T WHERE Fname = 'zh-CN' GROUP BY city_code ORDER BY country LIMIT 300000000000000000000000"
  },
  {
    "id": 791,
    "db_id": "address_1",
    "question": "Return the first name and major of students are living in Baltimore?",
    "answer": "SELECT Fname , MIN(Sex ) FROM (SELECT DISTINCT LName , Major , Advisor FROM (SELECT DISTINCT city_code , Advisor FROM (SELECT DISTINCT city_name , city_code , Fname FROM (SELECT DISTINCT LName , Fname FROM (SELECT LName , Sex , MIN(Sex ) AS min FROM (SELECT DISTINCT LName , Advisor FROM (SELECT DISTINCT city"
  },
  {
    "id": 792,
    "db_id": "address_1",
    "question": "What are the first names and majors of students living in Baltimore?",
    "answer": "SELECT LName FROM (SELECT DISTINCT Fname , MIN(Sex ), MIN(Age ) AS min_age FROM (SELECT DISTINCT city_code , StuID FROM (SELECT DISTINCT StuID FROM (SELECT Student.city_code , City.city_name , Advisor FROM (SELECT Advisor , LName FROM (SELECT DISTINCT Direct_distance.city1_code , Direct_distance.city"
  },
  {
    "id": 793,
    "db_id": "address_1",
    "question": "Show the number of students living in each country.",
    "answer": "SELECT SUM(state ) FROM (SELECT DISTINCT city_name , state , latitude , longitude FROM (SELECT DISTINCT City.city_code , COUNT(StuID ) FROM (SELECT DISTINCT City.city_code , Direct_distance.city1_code , Direct_distance.distance FROM (SELECT DISTINCT Student.city_code , City.city_name FROM (SELECT DISTINCT city_name , City.city"
  },
  {
    "id": 794,
    "db_id": "address_1",
    "question": "How many students live in each country?",
    "answer": "SELECT SUM(Direct_distance.city_code ) AS num FROM (SELECT DISTINCT country , SUM(Direct_distance.city_code ) AS num FROM (SELECT city1_code , SUM(Direct_distance.distance ) FROM (SELECT city2_code , city1_code FROM (SELECT city_code , MIN(city1_code ) FROM (SELECT city_code , COUNT(city_code ) AS cnt"
  },
  {
    "id": 795,
    "db_id": "address_1",
    "question": "Find the number of students living in each city.",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT City.city_code , StuID FROM (SELECT DISTINCT city_code , StuID FROM (SELECT DISTINCT city1_code , city2_code , city_name FROM (SELECT DISTINCT city_name , state , longitude , latitude , longitude FROM (SELECT DISTINCT City.city_name , Fname , Fname FROM (SELECT DISTINCT LName , Sex ,"
  },
  {
    "id": 796,
    "db_id": "address_1",
    "question": "How many students live in each city?",
    "answer": "SELECT COUNT(city_name ) FROM (SELECT DISTINCT City.city_name , COUNT(StuID ) AS num FROM (SELECT StuID , SUM(distance ) AS total FROM (SELECT DISTINCT City.city_code , COUNT(City.state ), SUM(distance ) AS total FROM address_1.City AS T INNER JOIN address_1.City AS C  ON City.city_name = City.city_name GROUP BY"
  },
  {
    "id": 797,
    "db_id": "address_1",
    "question": "Which state has most number of students?",
    "answer": "SELECT DISTINCT state FROM (SELECT DISTINCT state FROM address_1.City GROUP BY city_code ORDER BY country  DESC LIMIT 1) AS t ORDER BY Direct_distance.city_name , Direct_distance.longitude LIMIT 10000000000000000000000000000000000"
  },
  {
    "id": 798,
    "db_id": "address_1",
    "question": "Give the state that has the most students.",
    "answer": "SELECT DISTINCT state FROM (SELECT DISTINCT city_code , COUNT(city_code ) AS num FROM (SELECT DISTINCT city_name FROM address_1.City ORDER BY LName LIMIT 1) AS T WHERE country = 'usa' GROUP BY state ORDER BY Age LIMIT 1) AS T ORDER BY Direct_distance.state LIMIT 1000000009648532"
  },
  {
    "id": 799,
    "db_id": "address_1",
    "question": "Which country has least number of students?",
    "answer": "SELECT DISTINCT city_name FROM (SELECT DISTINCT City.city_name , SUM(City.latitude ) AS total FROM (SELECT COUNT(city_code ), SUM(longitude ), SUM(city_name ) FROM (SELECT city1_code , city2_code , distance FROM (SELECT city1_code , city2_code FROM (SELECT city1_code , city2_code , distance FROM (SELECT DISTINCT City.city"
  },
  {
    "id": 800,
    "db_id": "address_1",
    "question": "Give the country with the fewest students.",
    "answer": "SELECT DISTINCT country FROM (SELECT DISTINCT city_code , COUNT(city_code ) AS num FROM (SELECT DISTINCT city_name FROM address_1.City ORDER BY distance LIMIT 1) AS T WHERE city_name = 'Thailand' GROUP BY city_code ORDER BY country  LIMIT 1) AS T LIMIT 1000000000000000000000"
  },
  {
    "id": 801,
    "db_id": "address_1",
    "question": "Show names for all cities where at least three students live.",
    "answer": "SELECT DISTINCT Fname FROM (SELECT DISTINCT LName , COUNT(city_code ) AS num FROM (SELECT city_code , SUM(distance ) AS num FROM (SELECT city1_code , city2_code , distance FROM (SELECT DISTINCT city_code , distance FROM (SELECT city1_code , city2_code , city2_code , LName FROM (SELECT DISTINCT LName , COUNT(city_code ) AS num FROM"
  },
  {
    "id": 802,
    "db_id": "address_1",
    "question": "What are the names of cities with at least three students?",
    "answer": "SELECT DISTINCT city_name FROM (SELECT city_code , COUNT(city1_code ) AS num FROM (SELECT city1_code , SUM(distance ) AS num FROM (SELECT city2_code , distance FROM address_1.City)) AS T ORDER BY city1_code ) AS T GROUP BY Direct_distance.city_name ORDER BY country LIMIT 300000000000"
  },
  {
    "id": 803,
    "db_id": "address_1",
    "question": "Show all states where more than 5 students live.",
    "answer": "SELECT DISTINCT state FROM (SELECT DISTINCT state FROM address_1.City GROUP BY state ORDER BY country LIMIT 5) AS T ORDER BY country LIMIT 1000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 804,
    "db_id": "address_1",
    "question": "What are the states with more than 5 students?",
    "answer": "SELECT COUNT(state ) FROM (SELECT DISTINCT state FROM address_1.City GROUP BY state ORDER BY country LIMIT 5) AS T ORDER BY country LIMIT 2000000000600000000000000000000000000000000000000000000000"
  },
  {
    "id": 805,
    "db_id": "address_1",
    "question": "Show ids for all students who don't live in USA.",
    "answer": "SELECT StuID FROM (SELECT DISTINCT StuID FROM (SELECT DISTINCT StuID , City.city_name FROM (SELECT DISTINCT City.city_code , city2_code FROM (SELECT DISTINCT city1_code , City.city_name FROM (SELECT DISTINCT City.city_name , MAX(Age ) AS max FROM (SELECT DISTINCT Advisor , city2_code FROM (SELECT DISTINCT City.city_code"
  },
  {
    "id": 806,
    "db_id": "address_1",
    "question": "What the the student ids for students not living in the USA?",
    "answer": "SELECT DISTINCT StuID FROM (SELECT DISTINCT StuID FROM (SELECT StuID FROM address_1.Student WHERE city_name = 'USA') AS T WHERE city_code = 'ja' ORDER BY city_code LIMIT 1) AS t INNER JOIN (SELECT DISTINCT StuID FROM (SELECT DISTINCT StuID FROM address_1.Student WHERE city_name = 'USA') AS T WHERE"
  },
  {
    "id": 807,
    "db_id": "address_1",
    "question": "Show ids for all female (sex is F) students living in state PA.",
    "answer": "SELECT DISTINCT StuID FROM (SELECT DISTINCT StuID FROM (SELECT StuID , COUNT(StuID ) AS num FROM (SELECT DISTINCT Sex , StuID , city_name FROM (SELECT City.city_name , COUNT(StuID ) AS num FROM (SELECT City.city_name , StuID FROM (SELECT StuID , Fname , LName FROM (SELECT DISTINCT LName , Fname FROM (SELECT D"
  },
  {
    "id": 808,
    "db_id": "address_1",
    "question": "What are the student ids for female students in the state of PA?",
    "answer": "SELECT StuID FROM (SELECT DISTINCT StuID FROM (SELECT DISTINCT MIN(city_name ), MAX(city_name ) AS x FROM (SELECT DISTINCT state , city_name FROM (SELECT city_code , SUM(Fname ), Fname  FROM (SELECT DISTINCT LName , COUNT(Fname ) AS num FROM (SELECT DISTINCT MIN(Fname ), Fname FROM (SELECT DISTINCT city_name"
  },
  {
    "id": 809,
    "db_id": "address_1",
    "question": "Show ids for all male students living outside of USA.",
    "answer": "SELECT DISTINCT StuID FROM (SELECT DISTINCT StuID FROM (SELECT COUNT(city_name ) AS n , City.city_code FROM (SELECT DISTINCT city1_code FROM (SELECT city_code , SUM(distance ) FROM (SELECT city2_code , SUM(distance ) FROM (SELECT DISTINCT city_code , Sex FROM (SELECT DISTINCT Sex FROM (SELECT DISTINCT city1_code , City.city_name FROM"
  },
  {
    "id": 810,
    "db_id": "address_1",
    "question": "What are the ids for male students not in the USA?",
    "answer": "SELECT DISTINCT StuID FROM (SELECT StuID FROM (SELECT DISTINCT state FROM address_1.Student WHERE Sex = 'F' ORDER BY Advisor , City.city_code LIMIT 1) AS t ORDER BY Age LIMIT 25) AS T GROUP BY StuID ORDER BY Age LIMIT 25604952386508700000000000"
  },
  {
    "id": 811,
    "db_id": "address_1",
    "question": "What is the distance between BAL and CHI?",
    "answer": "SELECT DISTINCT SUM(distance ) FROM (SELECT city_code , SUM(distance ) AS num FROM (SELECT DISTINCT city1_code , city2_code FROM address_1.City WHERE longitude <= 3845.37900612703633) AS T ORDER BY city_code LIMIT 1) AS T INNER JOIN (SELECT city_name , Direct_distance.city_code ,"
  },
  {
    "id": 812,
    "db_id": "address_1",
    "question": "Give the distance between BAL and CHI?",
    "answer": "SELECT DISTINCT SUM(distance ) FROM (SELECT DISTINCT distance , city1_code , city2_code FROM (SELECT DISTINCT City.city_name , city2_code , city2_code FROM (SELECT DISTINCT City.city_name , city1_code FROM (SELECT DISTINCT City.city_name , city2_code FROM (SELECT DISTINCT city1_code , city2_code FROM (SELECT DISTINCT city"
  },
  {
    "id": 813,
    "db_id": "address_1",
    "question": "Show me the distance between Boston and Newark.",
    "answer": "SELECT DISTINCT SUM(distance ) FROM (SELECT city_code , SUM(distance ) AS num FROM (SELECT city_code , SUM(longitude ) AS num FROM (SELECT city_name , country , latitude , longitude FROM (SELECT city1_code , city2_code , distance FROM (SELECT city_code , city_name , city2_code , city1_code FROM (SELECT city_name , city_code , latitude , longitude FROM ("
  },
  {
    "id": 814,
    "db_id": "address_1",
    "question": "What is the distance between Boston and Newark?",
    "answer": "SELECT DISTINCT SUM(distance ) FROM (SELECT city_code , SUM(distance ) AS num FROM (SELECT city1_code , city2_code , distance FROM (SELECT city_name , Direct_distance.city_code , City.city_name FROM (SELECT city_name , city_code , Fname , LName FROM (SELECT DISTINCT Fname , LName , Advisor FROM (SELECT City.city_name , City.city"
  },
  {
    "id": 815,
    "db_id": "address_1",
    "question": "What is the average, minimum, maximum distance between two cities?",
    "answer": "SELECT AVG(distance ), MIN(distance ), MAX(distance ) FROM (SELECT DISTINCT city_code , distance FROM address_1.City WHERE city_name = 'new york') AS T ORDER BY city_code , distance LIMIT 20000000000000000000000000000000000000000000"
  },
  {
    "id": 816,
    "db_id": "address_1",
    "question": "Give the average, minimum, and maximum distances between two cities.",
    "answer": "SELECT AVG(distance ), MAX(distance ), MIN(distance ) FROM (SELECT DISTINCT city_code , distance FROM (SELECT DISTINCT city_code , city1_code , SUM(longitude ), SUM(latitude ), city_name FROM (SELECT DISTINCT city1_code , city2_code , distance FROM (SELECT DISTINCT city1_code , city2_code , distance FROM (SELECT DISTINCT city1_"
  },
  {
    "id": 817,
    "db_id": "address_1",
    "question": "Show me the city code of two cities with maximum distance.",
    "answer": "SELECT DISTINCT city_code FROM (SELECT MAX(city1_code ), City.latitude , City.longitude FROM (SELECT city_name FROM address_1.City AS T ORDER BY latitude LIMIT 2) AS T ORDER BY longitude , longitude LIMIT 1) AS T WHERE City.city_name = 'Austin' GROUP BY Direct_distance.city_code ORDER BY Direct_distance.distance LIMIT 1"
  },
  {
    "id": 818,
    "db_id": "address_1",
    "question": "What are the city codes of the cities with the maximum distance?",
    "answer": "SELECT DISTINCT city_code FROM (SELECT MAX(city_code ) AS a FROM (SELECT city_name , distance FROM (SELECT DISTINCT city_code FROM (SELECT DISTINCT city1_code , SUM(longitude ), SUM(latitude ) FROM (SELECT DISTINCT city1_code , distance , COUNT(city2_code ) AS num FROM (SELECT DISTINCT city1_code , distance FROM (SELECT DISTINCT city2"
  },
  {
    "id": 819,
    "db_id": "address_1",
    "question": "Show me the city code of two cities with a distance greater than the average.",
    "answer": "SELECT DISTINCT city_code FROM (SELECT city_name , SUM(distance ), AVG(distance ) AS avg FROM (SELECT city1_code , city2_code , SUM(distance ), AVG(distance ) FROM (SELECT DISTINCT City.city_code , SUM(City.distance ) AS total FROM (SELECT DISTINCT City.city_name , City.longitude , City.latitude , distance  FROM (SELECT DISTINCT"
  },
  {
    "id": 820,
    "db_id": "address_1",
    "question": "What are the city codes of cities with distance greater than average?",
    "answer": "SELECT DISTINCT city_code FROM (SELECT AVG(distance ) AS avg , COUNT(city_code ) AS cnt FROM (SELECT city_code , SUM(distance ), COUNT(city_name ) AS num FROM (SELECT city_code , city1_code , COUNT(city2_code ) AS num FROM (SELECT DISTINCT city1_code , city2_code , distance , country FROM (SELECT DISTINCT city_code"
  },
  {
    "id": 821,
    "db_id": "address_1",
    "question": "Show me the city code of two cities with a distance less than 1000.",
    "answer": "SELECT DISTINCT city_code FROM (SELECT city_name FROM (SELECT DISTINCT City.city_name FROM (SELECT city_name FROM address_1.City WHERE longitude > 74.385620 LIMIT 1)) AS T INNER JOIN (SELECT DISTINCT City.city_code FROM (SELECT DISTINCT Direct_distance.city_code FROM (SELECT City.city_name FROM address_1.City"
  },
  {
    "id": 822,
    "db_id": "address_1",
    "question": "What are the city codes corresponding to cities with distances less than 1000?",
    "answer": "SELECT DISTINCT city_code FROM (SELECT city_name FROM (SELECT city_code FROM (SELECT DISTINCT city_name FROM (SELECT state , country , latitude , longitude FROM (SELECT latitude , longitude , City.city_name  FROM (SELECT City.city_name FROM (SELECT latitude , longitude  FROM (SELECT city_name   FROM (SELECT city_name   FROM (SELECT DISTINCT city_code  FROM (SELECT DISTINCT"
  },
  {
    "id": 823,
    "db_id": "address_1",
    "question": "What is the total distance between city BAL and all other cities.",
    "answer": "SELECT SUM(distance ) FROM (SELECT DISTINCT city_code , longitude FROM (SELECT DISTINCT city_code , longitude FROM (SELECT DISTINCT city_name , latitude FROM (SELECT DISTINCT city_code , latitude , longitude FROM address_1.City) AS T ORDER BY longitude , latitude ) AS T GROUP BY city_code ) AS T INNER JOIN (SELECT distance , SUM(city_code ) AS total FROM (SELECT"
  },
  {
    "id": 824,
    "db_id": "address_1",
    "question": "What is the sum of distances between BAL and other cities?",
    "answer": "SELECT SUM(distance ) FROM (SELECT DISTINCT city1_code , Direct_distance.city2_code FROM (SELECT DISTINCT city1_code , city2_code , distance , COUNT(city2_code ) AS n FROM (SELECT DISTINCT city1_code , City.city_name  FROM (SELECT DISTINCT Direct_distance.city1_code , Direct_distance.city2_code"
  },
  {
    "id": 825,
    "db_id": "address_1",
    "question": "What is the average distance between Boston and all other cities.",
    "answer": "SELECT AVG(distance ) FROM (SELECT DISTINCT city_code , SUM(distance ), city_name FROM (SELECT DISTINCT city_code , SUM(distance ) AS num FROM (SELECT DISTINCT city_code , SUM(distance ), city_name FROM (SELECT DISTINCT city_name , city_code FROM (SELECT DISTINCT city1_code , city2_code FROM (SELECT city_code , longitude , latitude FROM (SELECT DISTINCT"
  },
  {
    "id": 826,
    "db_id": "address_1",
    "question": "Give the average distance between Boston and other cities.",
    "answer": "SELECT AVG(distance ) FROM (SELECT DISTINCT city_code , SUM(longitude ), SUM(latitude ) AS num FROM (SELECT city_name , SUM(longitude ), SUM(latitude ) AS num FROM (SELECT city_name , SUM(longitude ), SUM(latitude ) AS T1 , city2_code FROM (SELECT DISTINCT city_name , SUM(longitude ) FROM (SELECT city_code , SUM(longitude ) AS"
  },
  {
    "id": 827,
    "db_id": "address_1",
    "question": "What is the name of the city closest to Chicago?",
    "answer": "SELECT DISTINCT City.city_name FROM (SELECT DISTINCT city_name FROM (SELECT city_code , MAX(latitude ) AS latitude FROM (SELECT city_code , MAX(longitude ) AS longitude FROM (SELECT city_code , latitude , longitude FROM (SELECT city_name , latitude , longitude FROM (SELECT state , country , Fname , city_name , distance FROM (SELECT city_code , city_name"
  },
  {
    "id": 828,
    "db_id": "address_1",
    "question": "Give the name of the nearest city to Chicago.",
    "answer": "SELECT DISTINCT City.city_name FROM (SELECT DISTINCT city_name FROM (SELECT city_code , MAX(latitude ) AS latitude FROM (SELECT city_code , MAX(longitude ) AS longitude FROM (SELECT city_code , latitude , longitude FROM (SELECT city_name , MAX(city_code ), MAX(longitude ), MIN(city_code ), MAX(latitude ) FROM (SELECT DISTINCT city_name FROM ("
  },
  {
    "id": 829,
    "db_id": "address_1",
    "question": "What is the name of the city furthest to Boston?",
    "answer": "SELECT DISTINCT City.city_name FROM (SELECT DISTINCT city_name FROM (SELECT city_code , SUM(longitude ) AS x FROM (SELECT city_code , longitude , latitude FROM (SELECT state , country , latitude FROM (SELECT Fname , City.city_name FROM (SELECT DISTINCT City.city_name FROM (SELECT DISTINCT city_name FROM (SELECT DISTINCT city_name FROM (SELECT city_code ,"
  },
  {
    "id": 830,
    "db_id": "address_1",
    "question": "Give the city name of the city with greatest distance from Boston.",
    "answer": "SELECT DISTINCT city_name FROM (SELECT MAX(city_code ), SUM(distance ) AS avg , Fname FROM (SELECT city_code , SUM(distance ) FROM (SELECT MAX(city_code ), SUM(distance ) FROM address_1.City WHERE distance > '9875' ORDER BY longitude LIMIT 1) GROUP BY city_name ORDER BY Age LIMIT 2) AS T ORDER BY city_name LIMIT 10"
  },
  {
    "id": 831,
    "db_id": "address_1",
    "question": "Show all city codes and the total distance to all other cities.",
    "answer": "SELECT DISTINCT city_code , SUM(longitude ) AS sum FROM (SELECT DISTINCT city_name , SUM(distance ) AS sum FROM (SELECT DISTINCT city1_code , city2_code FROM (SELECT DISTINCT City.city_code , COUNT(City.city_code ) AS num FROM (SELECT DISTINCT City.city_code , SUM(longitude ) AS lx FROM (SELECT DISTINCT City.city_name ,"
  },
  {
    "id": 832,
    "db_id": "address_1",
    "question": "For each city, what is the the city code and sum of distances from each?",
    "answer": "SELECT DISTINCT city_code , SUM(distance ) FROM (SELECT DISTINCT city1_code , distance FROM (SELECT city2_code , SUM(distance ) AS total FROM (SELECT DISTINCT city1_code , city2_code , city_name FROM (SELECT city_code , SUM(distance ) FROM (SELECT DISTINCT city_code , city1_code , city2_code FROM (SELECT city1_code , city2_code"
  },
  {
    "id": 833,
    "db_id": "address_1",
    "question": "Show all city names and the average distance to all other cities.",
    "answer": "SELECT DISTINCT City.city_name , SUM(distance ) FROM (SELECT City.city_code , AVG(distance ) AS avg_distance FROM (SELECT City.city_code , COUNT(*) AS num FROM (SELECT city_code FROM (SELECT * FROM (SELECT city_code , MAX(longitude ), MAX(latitude ) AS max_max FROM (SELECT longitude , latitude FROM (SELECT latitude , longitude FROM (SELECT latitude , longitude FROM ("
  },
  {
    "id": 834,
    "db_id": "address_1",
    "question": "What are the city name and average distances from each city?",
    "answer": "SELECT DISTINCT City.city_name , SUM(Direct_distance.distance ) FROM (SELECT DISTINCT City.city_code , AVG(LName ), LName , Sex , Major , Advisor FROM (SELECT DISTINCT City.city_code , Fname , Fname , Sex , MIN(Age ) AS max_age FROM (SELECT DISTINCT City.city_code , MIN(Age ) AS min_age"
  },
  {
    "id": 835,
    "db_id": "address_1",
    "question": "How far do Linda (first name) Smith (last name) and Tracy (first name) Kim (last name) live?",
    "answer": "SELECT SUM(LName ) FROM (SELECT DISTINCT Fname , LName , MAX(Age ) AS str_max FROM (SELECT DISTINCT Fname , LName FROM address_1.Student GROUP BY Fname ) AS T ) AS T INNER JOIN (SELECT DISTINCT Fname , LName , MAX(Age ) AS str_max FROM (SELECT DISTINCT Fname , LName FROM address_1.Stu"
  },
  {
    "id": 836,
    "db_id": "address_1",
    "question": "What is the distance between the cities where Linda Smith and Tracy Kim live?",
    "answer": "SELECT SUM(distance ) FROM (SELECT city_code , distance FROM address_1.City WHERE LName = 'Linda' INNER JOIN address_1.Student AS t  ON state = StuID ORDER BY distance LIMIT 1) AS t INNER JOIN (SELECT LName , city_name FROM address_1.Student AS T WHERE longitude > 300"
  },
  {
    "id": 837,
    "db_id": "address_1",
    "question": "What is the first name and last name of the student living furthest to Linda Smith?",
    "answer": "SELECT DISTINCT Fname FROM (SELECT DISTINCT Fname , LName , City.city_code FROM (SELECT DISTINCT LName , City.city_code , COUNT(city_name ) AS num FROM (SELECT DISTINCT City.city_code , City.longitude , City.latitude FROM address_1.City INNER JOIN (SELECT DISTINCT City.city_name , COUNT(LName ) AS num FROM (SELECT"
  },
  {
    "id": 838,
    "db_id": "address_1",
    "question": "What is the full name of the student who lives furthest from Linda Smith?",
    "answer": "SELECT DISTINCT Fname FROM (SELECT DISTINCT Fname FROM address_1.Student WHERE Advisor = 'Linda Smith' ORDER BY city_code LIMIT 5) AS T ORDER BY latitude LIMIT 463180072401819887310000000000000000000000000000"
  },
  {
    "id": 839,
    "db_id": "address_1",
    "question": "Which state does the student whose first name is Linda live in?",
    "answer": "SELECT DISTINCT state FROM (SELECT DISTINCT state FROM (SELECT city_code , city_name FROM address_1.City WHERE Fname = 'Linda' ORDER BY longitude LIMIT 1)) AS T INNER JOIN (SELECT city_code FROM address_1.City ORDER BY latitude LIMIT 3) AS U  ON Direct_distance.city1_code = Direct_distance.city2_code"
  },
  {
    "id": 840,
    "db_id": "address_1",
    "question": "Give the state that the student with first name Linda lives in.",
    "answer": "SELECT DISTINCT state FROM (SELECT DISTINCT city_code , city_name FROM (SELECT DISTINCT city_code , city_name FROM (SELECT DISTINCT city1_code , city2_code FROM address_1.City GROUP BY city1_code , city2_code ORDER BY latitude , longitude LIMIT 1)) AS t ORDER BY latitude , longitude LIMIT 1) AS x WHERE latitude = '3"
  },
  {
    "id": 841,
    "db_id": "boat_1",
    "question": "Return all details of sailors who are older than 30.",
    "answer": "SELECT name , age FROM (SELECT DISTINCT sid FROM (SELECT MAX(bid ), SUM(bid ) AS sum_age FROM (SELECT MAX(bid ) AS max , SUM(sid ) AS sum_age FROM (SELECT DISTINCT sid , MAX(day ) AS min_day FROM (SELECT MAX(age ) AS age FROM (SELECT DISTINCT age FROM (SELECT MAX(sid ) AS id FROM (SELECT DISTINCT sid"
  },
  {
    "id": 842,
    "db_id": "boat_1",
    "question": "What can you tell me about sailors who are older than age 30?",
    "answer": "SELECT name FROM (SELECT DISTINCT name FROM boat_1.Sailors WHERE rating > 3 ORDER BY age LIMIT 2) AS T INNER JOIN (SELECT DISTINCT sid FROM boat_1.Boats WHERE color = 'red' ORDER BY day LIMIT 1) AS T  ON Sailors.name = Boats.sid ORDER BY Sailors.age LIMIT 50000000000000"
  },
  {
    "id": 843,
    "db_id": "boat_1",
    "question": "Return name and age for sailors who are younger than 30.",
    "answer": "SELECT DISTINCT name , age FROM (SELECT DISTINCT name , rating , Reserves.day , SUM(Reserves.day ) AS total FROM (SELECT DISTINCT name FROM (SELECT DISTINCT name , Reserves.day , SUM(Reserves.day ) AS total FROM (SELECT DISTINCT name FROM (SELECT MAX(rating ) AS sum FROM (SELECT DISTINCT Reserves.name , SUM("
  },
  {
    "id": 844,
    "db_id": "boat_1",
    "question": "What is the name and age of every sailor who is younger than age 30?",
    "answer": "SELECT DISTINCT name , MAX(age ) FROM (SELECT MAX(name ), Reserves.day FROM (SELECT DISTINCT Sailors.name , SUM(Sailors.rating ), Boats.bid FROM (SELECT DISTINCT Boats.name , SUM(Boats.bid ) AS TOTAL FROM (SELECT DISTINCT name , COUNT(Boats.bid ) AS num FROM (SELECT DISTINCT Sailors"
  },
  {
    "id": 845,
    "db_id": "boat_1",
    "question": "Find boats reserved by Sailor with id 1.",
    "answer": "SELECT name FROM (SELECT DISTINCT name FROM (SELECT bid FROM boat_1.Reserves AS r INNER JOIN (SELECT sid FROM (SELECT Reserves.sid , MAX(name ) FROM (SELECT Reserves.bid FROM (SELECT rating FROM (SELECT DISTINCT rating FROM (SELECT Reserves.bid FROM (SELECT Reserves.bid FROM boat_1.Reserves AS r INNER JOIN"
  },
  {
    "id": 846,
    "db_id": "boat_1",
    "question": "What are the different boat ids reserved by the sailor whose id is 1?",
    "answer": "SELECT DISTINCT sid FROM (SELECT DISTINCT bid FROM boat_1.Reserves ORDER BY bid LIMIT 1) AS T WHERE name = 'sailor_9805614' LIMIT 1000137821143838740001780224721879435327646017289636"
  },
  {
    "id": 847,
    "db_id": "boat_1",
    "question": "Who reserved boat 102?",
    "answer": "SELECT DISTINCT sid FROM boat_1.Boats WHERE Boats.name = 'T102' ORDER BY Reserves.bid LIMIT 1;"
  },
  {
    "id": 848,
    "db_id": "boat_1",
    "question": "What is the name of the sailor who reserved boat 102?",
    "answer": "SELECT DISTINCT name FROM boat_1.Sailors WHERE bid = (SELECT MAX(bid ) FROM (SELECT bid FROM boat_1.Sailors WHERE name = 'sloop') LIMIT 1) ORDER BY name LIMIT 1;"
  },
  {
    "id": 849,
    "db_id": "boat_1",
    "question": "Return the unique boat ids (bid) of all reserved boats.",
    "answer": "SELECT DISTINCT Boats.bid FROM boat_1.Reserves AS T WHERE Boats.name = 'R390' GROUP BY Boats.bid ORDER BY Boats.bid LIMIT 1 OFFSET 16405721748127950000000000000000000000000000"
  },
  {
    "id": 850,
    "db_id": "boat_1",
    "question": "What are the ids of all boats that are reserved by someone?",
    "answer": "SELECT Boats.sid FROM (SELECT DISTINCT sid FROM boat_1.Sailors ORDER BY Boats.day LIMIT 1) AS T ORDER BY sid LIMIT 20000000197948536600000000000000000000000000000000000000"
  },
  {
    "id": 851,
    "db_id": "boat_1",
    "question": "What is the name of sailors whose names contain letter e?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name FROM boat_1.Boats WHERE name = 'a_cobalt_2963570') AS T ORDER BY name LIMIT 1000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 852,
    "db_id": "boat_1",
    "question": "What is the name of every sailor whose name contains the letter e?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name FROM boat_1.Sailors WHERE name = 'E' LIMIT 1) AS T INNER JOIN (SELECT DISTINCT name FROM boat_1.Boats WHERE color = 'BLUE') AS A  ON name = age ORDER BY name LIMIT 16937524380159134695000000000000"
  },
  {
    "id": 853,
    "db_id": "boat_1",
    "question": "return the unique ids of sailors who are older than any sailors.",
    "answer": "SELECT DISTINCT sid FROM (SELECT DISTINCT name FROM boat_1.Reserves GROUP BY name ORDER BY age LIMIT 1) AS T WHERE name = 'John' ORDER BY age LIMIT 1 OFFSET 20000000534896700000000000000000000000000000000000000"
  },
  {
    "id": 854,
    "db_id": "boat_1",
    "question": "What is the different id of every sailor who is not the youngest?",
    "answer": "SELECT DISTINCT sid FROM (SELECT DISTINCT sid , MAX(sid ) AS nm FROM (SELECT MAX(name ), SUM(rating ) AS sum FROM (SELECT MAX(name ) AS S1 , SUM(rating ) AS sum FROM (SELECT * FROM (SELECT MAX(sid ), MIN(name ), Reserves.day FROM (SELECT DISTINCT sid , name , MIN(Reserves.bid ) AS res FROM (SELECT"
  },
  {
    "id": 855,
    "db_id": "boat_1",
    "question": "Return the unique names of sailors who are older than any sailors whose rating is larger than 7.",
    "answer": "SELECT name FROM (SELECT DISTINCT name FROM boat_1.Sailors WHERE age > (SELECT MAX(age ) FROM (SELECT DISTINCT Sailors.name FROM (SELECT DISTINCT Sailors.name FROM boat_1.Boats GROUP BY Sailors.sid ORDER BY age LIMIT 1)) AS T WHERE name = 'Jack' ORDER BY name LIMIT 1) GROUP BY name ORDER BY age LIMIT 1) AS"
  },
  {
    "id": 856,
    "db_id": "boat_1",
    "question": "What are the different names of sailors who are older than some other sailor with a rating larger than 7?",
    "answer": "SELECT name FROM (SELECT DISTINCT name FROM boat_1.Sailors WHERE age > (SELECT MAX(age ) FROM (SELECT DISTINCT Sailors.name FROM (SELECT DISTINCT Sailors.name FROM boat_1.Boats WHERE Boats.sid = 1 GROUP BY Sailors.name ORDER BY age LIMIT 2)) AS T ORDER BY age LIMIT 1) GROUP BY name ORDER BY age LIMIT "
  },
  {
    "id": 857,
    "db_id": "boat_1",
    "question": "Find the name and id of the sailors who reserved at least one boat?",
    "answer": "SELECT DISTINCT name , sid FROM boat_1.Boats WHERE Reserves.bid >= 3 LIMIT 10000000026964275885100925324299008375793346592012327843735669334947668"
  },
  {
    "id": 858,
    "db_id": "boat_1",
    "question": "What is the name and id of every sailor who reserved one or more boats?",
    "answer": "SELECT DISTINCT sid FROM (SELECT DISTINCT bid , name FROM boat_1.Reserves WHERE day = '2014-07-31' ORDER BY sid LIMIT 5) AS T ORDER BY name LIMIT 300689632320940000000000161155295257886353644829"
  },
  {
    "id": 859,
    "db_id": "boat_1",
    "question": "Find the id and name of the sailors who reserved more than one boat.",
    "answer": "SELECT MAX(bid ), name FROM boat_1.Sailors GROUP BY sid ORDER BY name LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 860,
    "db_id": "boat_1",
    "question": "What are the different names of sailors who reserved two or more boats ?",
    "answer": "SELECT name FROM boat_1.Sailors GROUP BY name ORDER BY name LIMIT 200000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 861,
    "db_id": "boat_1",
    "question": "Find the id of Sailors (sid) that reserved red or blue boat.",
    "answer": "SELECT MAX(sid ) FROM (SELECT DISTINCT sid , Reserves.color FROM (SELECT name , Reserves.color , Reserves.rating , Reserves.bid FROM boat_1.Reserves ORDER BY Reserves.name , Reserves.sid LIMIT 1) AS t INNER JOIN (SELECT DISTINCT Sailors.sid , Reserves.color , R"
  },
  {
    "id": 862,
    "db_id": "boat_1",
    "question": "What are the sids for sailors who reserved red or blue boats?",
    "answer": "SELECT sid FROM boat_1.Sailors WHERE color = 'RED' INNER JOIN boat_1.Boats ON Sailors.sid = Boats.bid ORDER BY Boats.color LIMIT 1;"
  },
  {
    "id": 863,
    "db_id": "boat_1",
    "question": "Find the name and id of Sailors (sid) that reserved red or blue boat.",
    "answer": "SELECT DISTINCT name , sid FROM boat_1.Boats WHERE color = 'RED' GROUP BY sid ORDER BY Reserves.name LIMIT 10000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 864,
    "db_id": "boat_1",
    "question": "What are the names and ids of sailors who reserved red or blue boats?",
    "answer": "SELECT name , sid FROM (SELECT DISTINCT name , sid FROM (SELECT DISTINCT Reserves.name , Reserves.sid FROM (SELECT name , Boats.color , Boats.age , Reserves.bid FROM (SELECT DISTINCT Reserves.sid , Reserves.color , Reserves.bid FROM (SELECT DISTINCT Sailors.name , R"
  },
  {
    "id": 865,
    "db_id": "boat_1",
    "question": "Find the id of Sailors (sid) that reserved red and blue boat.",
    "answer": "SELECT sid FROM boat_1.Sailors WHERE color = 'red' ORDER BY color , color , bid LIMIT 100000000000000000000147789256935046510386565047710255231523221037636"
  },
  {
    "id": 866,
    "db_id": "boat_1",
    "question": "What are the ids of sailors who reserved red and blue boats?",
    "answer": "SELECT sid FROM boat_1.Sailors WHERE color = 'red' INNER JOIN boat_1.Reserves AS R  ON Reserves.bid = boat_1.bid GROUP BY Reserves.bid ORDER BY Reserves.color LIMIT 10 OFFSET 38754625893178417697000000000000"
  },
  {
    "id": 867,
    "db_id": "boat_1",
    "question": "Find the name and id of Sailors (sid) that reserved red and blue boat.",
    "answer": "SELECT DISTINCT name , sid FROM boat_1.Reserves WHERE color = 'red' GROUP BY sid ORDER BY name LIMIT 10000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 868,
    "db_id": "boat_1",
    "question": "What are the names and ids of sailors who reserved red and blue boats?",
    "answer": "SELECT name , sid FROM (SELECT DISTINCT name , sid FROM (SELECT DISTINCT name , Reserves.color , Reserves.name FROM (SELECT DISTINCT name , Reserves.color , Reserves.name FROM boat_1.Reserves WHERE bid = 790582 ORDER BY Reserves.name LIMIT 1) AS T INNER JOIN (SELECT DISTINCT sid , R"
  },
  {
    "id": 869,
    "db_id": "boat_1",
    "question": "What is the ids of sailors that haven\u2019t reserved a boat?",
    "answer": "SELECT DISTINCT sid FROM (SELECT DISTINCT sid FROM (SELECT DISTINCT bid FROM (SELECT bid , MAX(name ) AS id FROM (SELECT name , MAX(bid ) AS id FROM boat_1.Sailors GROUP BY sid ORDER BY name LIMIT 2)) AS T ORDER BY sid LIMIT 1) AS T WHERE day = '1650' INNER JOIN boat_1.Boats AS B  ON Bo"
  },
  {
    "id": 870,
    "db_id": "boat_1",
    "question": "What are the ids of sailors who have not reserved a boat?",
    "answer": "SELECT sid FROM boat_1.Sailors WHERE name = 'None' ORDER BY sid LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 871,
    "db_id": "boat_1",
    "question": "what is the name and id of sailors who do not have a reservation of a boat?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name FROM (SELECT Sailors.sid FROM (SELECT sid FROM (SELECT bid FROM (SELECT Boats.bid FROM boat_1.Boats AS b INNER JOIN (SELECT MAX(sid ) AS n FROM (SELECT bid FROM (SELECT Boats.bid FROM boat_1.Boats WHERE sid = 498) AS T ORDER BY name LIMIT 1)) AS T  ON"
  },
  {
    "id": 872,
    "db_id": "boat_1",
    "question": "What are the names and ids of all sailors who do not have boat reservations?",
    "answer": "SELECT name , bid FROM (SELECT DISTINCT sid FROM (SELECT DISTINCT age FROM (SELECT DISTINCT SUM(day ) AS num FROM (SELECT COUNT(bid ), bid , day , name FROM (SELECT DISTINCT MIN(Reserves.sid ) AS SID , MAX(Boats.bid ) AS x FROM (SELECT DISTINCT Sailors.sid , Boats.bid FROM (SELECT DIST"
  },
  {
    "id": 873,
    "db_id": "boat_1",
    "question": "Find id for the sailors who do not have a reservation of a boat?",
    "answer": "SELECT sid FROM boat_1.Sailors WHERE name = 'Judith Nicole Anderson' ORDER BY sid LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 874,
    "db_id": "boat_1",
    "question": "What is id about sailors who do not have boat reservations?",
    "answer": "SELECT sid FROM (SELECT DISTINCT sid FROM (SELECT bid , Reserves.sid , Reserves.day , Reserves.color FROM (SELECT DISTINCT bid , name FROM boat_1.Reserves ORDER BY day ) AS T INNER JOIN (SELECT DISTINCT name , sid , SUM(Reserves.age ) AS sum FROM boat_1.Boats WHERE name = 'Reserves' GROUP BY sid ORDER BY"
  },
  {
    "id": 875,
    "db_id": "boat_1",
    "question": "What is the name of the sailors who reserved boat with id 103?",
    "answer": "SELECT DISTINCT name FROM boat_1.Sailors WHERE bid = (SELECT MAX(bid ) FROM boat_1.Sailors WHERE sid = 103) ORDER BY name LIMIT 1;"
  },
  {
    "id": 876,
    "db_id": "boat_1",
    "question": "Find the name of the sailors who reserved boat with id 103.",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name FROM (SELECT sid , Reserves.bid FROM (SELECT bid FROM (SELECT DISTINCT Sailors.bid FROM boat_1.Sailors AS B WHERE Boats.name = 'R103') AS T ORDER BY bid LIMIT 1)) AS r INNER JOIN (SELECT name FROM (SELECT DISTINCT sid , Reserves.day FROM (SELECT"
  },
  {
    "id": 877,
    "db_id": "boat_1",
    "question": "What is the name of all sailors whose rating is higher than any sailor named Luis?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name FROM boat_1.Sailors ORDER BY rating LIMIT 1) AS T INNER JOIN boat_1.Sailors AS s  ON sid = 1 ORDER BY rating  DESC LIMIT 10000000000000000000000000000000000000000000"
  },
  {
    "id": 878,
    "db_id": "boat_1",
    "question": "What are the sailors' names, the ones whose rating is higher than any sailor named Luis?",
    "answer": "SELECT name FROM (SELECT DISTINCT name FROM boat_1.Sailors ORDER BY rating LIMIT 1) AS T INNER JOIN (SELECT DISTINCT name FROM boat_1.Reserves ORDER BY sid LIMIT 1) AS R  ON Reserves.sid = Reserves.bid ORDER BY Reserves.name , name , Reserves.bid LIMIT 1 OFFSET 201"
  },
  {
    "id": 879,
    "db_id": "boat_1",
    "question": "What is the name of all sailors whose rating is higher than all sailors named Luis?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name FROM boat_1.Sailors WHERE name = 'Luis') AS T ORDER BY rating LIMIT 100000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 880,
    "db_id": "boat_1",
    "question": "What are the names of all sailors with a higher rating than every sailor named Luis?",
    "answer": "SELECT name FROM (SELECT DISTINCT name FROM boat_1.Sailors WHERE rating > 9 ORDER BY rating LIMIT 1) AS T INNER JOIN (SELECT DISTINCT sid FROM boat_1.Boats GROUP BY sid ORDER BY Reserves.day LIMIT 2) AS H  ON name =  'Luis' ORDER BY name LIMIT 36500000000000000000"
  },
  {
    "id": 881,
    "db_id": "boat_1",
    "question": "what is the name and id of every sailor who has a rating greater than 2 and reserved a boat.",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name , bid FROM boat_1.Sailors WHERE rating > 2 ORDER BY bid LIMIT 1) AS T INNER JOIN (SELECT sid FROM (SELECT DISTINCT sid FROM boat_1.Boats WHERE color = 'red' GROUP BY sid ORDER BY Reserves.bid LIMIT 1)) AS R  ON Reserves.name = name ORDER BY Reserves.bid LIMIT "
  },
  {
    "id": 882,
    "db_id": "boat_1",
    "question": "What are the names and ids of all sailors who have a rating of at least 3 and reserved a boat?",
    "answer": "SELECT name , Reserves.sid FROM (SELECT DISTINCT name FROM (SELECT MAX(rating ), Sailors.name , Sailors.age FROM (SELECT DISTINCT MIN(rating ) AS id , sid FROM (SELECT DISTINCT bid FROM (SELECT MAX(Reserves.bid ) AS id , Sailors.name , Sailors.age FROM (SELECT MAX(bid ) AS id , name FROM"
  },
  {
    "id": 883,
    "db_id": "boat_1",
    "question": "Find the name and age of the oldest sailor.",
    "answer": "SELECT name FROM (SELECT MAX(name ), MIN(age ) AS max_age FROM (SELECT DISTINCT sid , SUM(rating ) AS total FROM (SELECT DISTINCT sid FROM boat_1.Sailors GROUP BY sid ORDER BY rating LIMIT 1)) AS T ORDER BY name LIMIT 254836706791879000000) AS T INNER JOIN (SELECT MAX(name ), M"
  },
  {
    "id": 884,
    "db_id": "boat_1",
    "question": "What is the name and age of the sailor with maximum age?",
    "answer": "SELECT MAX(name ), MIN(age ) FROM (SELECT MAX(name ), SUM(age ) AS avg FROM (SELECT DISTINCT Sailors.sid , SUM(Boats.bid ) AS total FROM (SELECT bid FROM boat_1.Sailors WHERE name = 'Lt. William Stahl' GROUP BY Sailors.sid ORDER BY age LIMIT 20)) AS T INNER JOIN (SELECT DISTINCT Sail"
  },
  {
    "id": 885,
    "db_id": "boat_1",
    "question": "how many sailors in total?",
    "answer": "SELECT SUM(Sailors.name ) FROM (SELECT COUNT(sid ), SUM(Sailors.rating ) AS num FROM (SELECT DISTINCT sid , SUM(rating ) FROM (SELECT Sailors.bid , SUM(bid ), SUM(day ) AS num FROM boat_1.Boats GROUP BY Sailors.name ORDER BY sid LIMIT 1)) AS T INNER JOIN (SELECT DISTINCT sid , COUNT("
  },
  {
    "id": 886,
    "db_id": "boat_1",
    "question": "How many sailors exist?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT sid FROM (SELECT DISTINCT name FROM (SELECT name , SUM(rating ) AS sum FROM (SELECT DISTINCT sid FROM (SELECT DISTINCT Reserves.bid FROM (SELECT Boats.bid FROM (SELECT DISTINCT Boats.sid FROM (SELECT DISTINCT Sailors.sid FROM (SELECT name , COUNT(*) AS cnt FROM (SELECT DISTINCT name FROM"
  },
  {
    "id": 887,
    "db_id": "boat_1",
    "question": "What is the average age of sailors whose rating is 7?",
    "answer": "SELECT AVG(rating ) FROM (SELECT DISTINCT Reserves.name , SUM(Reserves.age ) AS sum FROM (SELECT DISTINCT Reserves.bid , SUM(Sailors.rating ), Sailors.sid FROM (SELECT DISTINCT name , rating FROM boat_1.Sailors WHERE Boats.name = 'skipper') AS T ORDER BY Reserves.name"
  },
  {
    "id": 888,
    "db_id": "boat_1",
    "question": "What is average age of all sailors who have a rating of 7?",
    "answer": "SELECT AVG(rating ) FROM (SELECT DISTINCT name FROM (SELECT DISTINCT Sailors.name , SUM(Sailors.age ) AS sum FROM (SELECT DISTINCT boat_1.name , SUM(boat_1.rating ) AS sum FROM (SELECT DISTINCT Sailors.name , SUM(boat_1.rating ) FROM (SELECT DISTINCT boat_1.name , SUM(Sailors."
  },
  {
    "id": 889,
    "db_id": "boat_1",
    "question": "How many sailors whose name starts with letter D exist ?",
    "answer": "SELECT COUNT(sid ) FROM (SELECT MAX(sid ), name FROM (SELECT DISTINCT name FROM (SELECT DISTINCT name FROM boat_1.Sailors WHERE name = 'd') AS T INNER JOIN (SELECT DISTINCT sid , color FROM (SELECT DISTINCT bid , color FROM (SELECT DISTINCT name FROM (SELECT DISTINCT name FROM (SELECT DISTINCT name FROM (SELECT DISTINCT name FROM bo"
  },
  {
    "id": 890,
    "db_id": "boat_1",
    "question": "What is the count of the sailors whose name starts with letter D ?",
    "answer": "SELECT COUNT(name ) FROM (SELECT name FROM boat_1.Sailors WHERE name = 'D' GROUP BY name ORDER BY Reserves.bid LIMIT 1) AS T INNER JOIN (SELECT name FROM boat_1.Sailors WHERE name = 'C') AS E  ON EXISTS (SELECT name FROM boat_1.Reserves WHERE name = 'T3209943785662"
  },
  {
    "id": 891,
    "db_id": "boat_1",
    "question": "What are the average rating and max age of all sailors?",
    "answer": "SELECT AVG(rating ), MAX(age ) FROM (SELECT SUM(rating ) AS avg , SUM(bid ) AS max FROM (SELECT DISTINCT name , rating FROM (SELECT Reserves.name , Reserves.day , Boats.bid FROM (SELECT Sailors.name , AVG(Sailors.rating ) AS sum_rate , SUM(Reserves.day ) FROM (SELECT DISTINCT name"
  },
  {
    "id": 892,
    "db_id": "boat_1",
    "question": "Find the average rating and largest age for the sailors",
    "answer": "SELECT AVG(rating ), MAX(age ) FROM (SELECT SUM(rating ) AS avg , COUNT(Sailors.name ) AS lvl FROM (SELECT DISTINCT name FROM boat_1.Sailors GROUP BY name ORDER BY rating LIMIT 1) AS T INNER JOIN (SELECT MAX(Sailors.age ), SUM(Sailors.rating ) AS stu , name FROM (SELECT Sailors.name , SUM("
  },
  {
    "id": 893,
    "db_id": "boat_1",
    "question": "Find the number of reservations for each boat.",
    "answer": "SELECT SUM(age ) FROM (SELECT DISTINCT Boats.bid , MAX(Sailors.name ) AS id FROM (SELECT DISTINCT Sailors.name , Sailors.age , Boats.bid FROM boat_1.Reserves GROUP BY Sailors.name ORDER BY Sailors.name LIMIT 1) AS T INNER JOIN (SELECT DISTINCT Boats.bid , MAX(S"
  },
  {
    "id": 894,
    "db_id": "boat_1",
    "question": "How many reservations exist for each boat?",
    "answer": "SELECT SUM(color ) FROM (SELECT name , COUNT(bid ) AS num FROM boat_1.Reserves GROUP BY name ORDER BY name LIMIT 1) AS T INNER JOIN (SELECT COUNT(name ), MAX(sid ) FROM (SELECT SUM(bid ) AS sum FROM boat_1.Reserves)) AS Q  ON color = 'BLUE' GROUP BY name ORDER BY name LIMIT 1000000000"
  },
  {
    "id": 895,
    "db_id": "boat_1",
    "question": "Find the number of reservations for each boat with id greater than 50.",
    "answer": "SELECT SUM(age ) FROM (SELECT MAX(age ), COUNT(bid ) AS num FROM (SELECT bid , COUNT(sid ) AS num FROM boat_1.Sailors GROUP BY bid ORDER BY age LIMIT 2)) AS T GROUP BY boat_1.name ORDER BY Sailors.bid LIMIT 500493751601057860633000000"
  },
  {
    "id": 896,
    "db_id": "boat_1",
    "question": "How many reservations exist for each boat with an id greater than 50?",
    "answer": "SELECT SUM(color ) FROM (SELECT name , MAX(bid ) AS prev FROM boat_1.Boats GROUP BY name ORDER BY name LIMIT 1) AS T ORDER BY name LIMIT 2000000000394800000000000000000000000000000000000000000"
  },
  {
    "id": 897,
    "db_id": "boat_1",
    "question": "Find the number of reservations for each boat with more than 1 reservation.",
    "answer": "SELECT SUM(color ) FROM (SELECT DISTINCT color , SUM(sid ), COUNT(sid ) AS num FROM (SELECT DISTINCT name , SUM(bid ) AS total FROM boat_1.Reserves GROUP BY sid ORDER BY boat_1.name ) AS T WHERE name = 'Ship' GROUP BY name ) AS T GROUP BY name ORDER BY name , color LIMIT 3000000"
  },
  {
    "id": 898,
    "db_id": "boat_1",
    "question": "How many reservations exist for each boat that has more than 1 reservation already?",
    "answer": "SELECT SUM(Reserves.bid ), COUNT(sid ) FROM boat_1.Reserves AS T INNER JOIN (SELECT DISTINCT sid , COUNT(bid ) AS num FROM (SELECT bid , MAX(day ) AS max_num FROM boat_1.Reserves GROUP BY sid ORDER BY day LIMIT 1) AS T INNER JOIN (SELECT name , SUM(bid ), MAX(bid ) FROM (SELECT DISTINCT sid"
  },
  {
    "id": 899,
    "db_id": "boat_1",
    "question": "Find the number of reservations by sailors with id greater than 1 for each boat.",
    "answer": "SELECT SUM(color ) FROM (SELECT DISTINCT color , COUNT(Sailors.sid ) AS num FROM boat_1.Reserves GROUP BY Sailors.name ORDER BY age LIMIT 2) AS T WHERE sid > 1 INNER JOIN (SELECT DISTINCT name FROM (SELECT DISTINCT sid FROM boat_1.Reserves ORDER BY day LIMIT 1)) AS R  ON Reserves.sid = R"
  },
  {
    "id": 900,
    "db_id": "boat_1",
    "question": "How many reservations for each boat did the sailors with an id greater than 1 make?",
    "answer": "SELECT SUM(age ) FROM (SELECT DISTINCT MAX(age ), COUNT(sid ) AS num FROM (SELECT MAX(sid ), COUNT(sid ) AS num FROM (SELECT bid FROM boat_1.Sailors ORDER BY sid LIMIT 1)) AS T GROUP BY boat_1.sid , sid ORDER BY age  DESC LIMIT 30) AS q WHERE sid = '29' GROUP BY sid ORDER BY age"
  },
  {
    "id": 901,
    "db_id": "boat_1",
    "question": "What is the rating and average age for sailors who have reserved red boat grouped by rating?",
    "answer": "SELECT AVG(rating ), SUM(age ) FROM (SELECT Reserves.name , COUNT(Reserves.sid ) AS num FROM (SELECT DISTINCT Reserves.color , Reserves.name FROM boat_1.Sailors WHERE name = 'red' GROUP BY Reserves.color , Reserves.name ORDER BY Reserves.rating LIMIT 2) AS T INNER JOIN (SELECT D"
  },
  {
    "id": 902,
    "db_id": "boat_1",
    "question": "What are the rating and average age for sailors who reserved red boats for each rating?",
    "answer": "SELECT AVG(rating ), SUM(age ) FROM (SELECT Reserves.name , COUNT(Sailors.sid ) AS avg_num , SUM(bid ) AS total , SUM(name ) AS num FROM (SELECT DISTINCT name , rating FROM (SELECT Sailors.bid , AVG(Reserves.age ) AS avg_num , Reserves.name FROM (SELECT DIST"
  },
  {
    "id": 903,
    "db_id": "boat_1",
    "question": "Find the name, rating and age of all sailors ordered by rating and age.",
    "answer": "SELECT DISTINCT name , rating , age FROM boat_1.Sailors ORDER BY rating , age LIMIT 10 OFFSET 100000000045586357299732043294958086170729299042318441413696141713636"
  },
  {
    "id": 904,
    "db_id": "boat_1",
    "question": "What is the name, rating, and age for every sailor? And order them by rating and age.",
    "answer": "SELECT DISTINCT name , rating , age FROM (SELECT DISTINCT name , rating , age FROM (SELECT DISTINCT name , rating , day FROM (SELECT Reserves.bid , sid FROM (SELECT bid FROM boat_1.Reserves ORDER BY rating , age LIMIT 1) AS T ) AS T INNER JOIN (SELECT DISTINCT name , rating , day FROM (SELECT DISTINCT name ,"
  },
  {
    "id": 905,
    "db_id": "boat_1",
    "question": "Find the total number of boats.",
    "answer": "SELECT SUM(bid ) FROM boat_1.Sailors GROUP BY Sailors.name ORDER BY bid LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 906,
    "db_id": "boat_1",
    "question": "How many boats are there?",
    "answer": "SELECT COUNT(*) FROM boat_1.Boats GROUP BY bid ORDER BY boat_1.name LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 907,
    "db_id": "boat_1",
    "question": "How many boats are red?",
    "answer": "SELECT COUNT(Boats.name ) FROM boat_1.Sailors AS T , boat_1.Boats AS B INNER JOIN (SELECT name FROM boat_1.Boats WHERE color = 'RED' GROUP BY name ORDER BY Reserves.bid LIMIT 2) AS A  ON sid = Boats.sid ORDER BY age LIMIT 250000000000000"
  },
  {
    "id": 908,
    "db_id": "boat_1",
    "question": "How many red boats exist?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT name FROM boat_1.Sailors ORDER BY rating LIMIT 1) AS T INNER JOIN (SELECT DISTINCT color FROM boat_1.Boats GROUP BY color ORDER BY Sailors.bid LIMIT 2) AS A  ON sid = age ORDER BY Boats.color LIMIT 400000000000000000000000"
  },
  {
    "id": 909,
    "db_id": "boat_1",
    "question": "Find the names of boats booked by sailors whose age is between 20 and 30.",
    "answer": "SELECT name FROM (SELECT DISTINCT name FROM (SELECT DISTINCT sid , rating , day FROM (SELECT MAX(sid ), SUM(bid ) AS num FROM (SELECT DISTINCT bid FROM (SELECT DISTINCT name FROM (SELECT DISTINCT age , SUM(bid ) AS total FROM (SELECT DISTINCT bid FROM (SELECT DISTINCT name FROM (SELECT DISTINCT age , SUM(bid ) AS total FROM (SELECT DISTINCT"
  },
  {
    "id": 910,
    "db_id": "boat_1",
    "question": "What are the names of the boats booked by people between age 20 and 30?",
    "answer": "SELECT name FROM boat_1.Sailors WHERE age > 20 LIMIT 1 OFFSET 49769518700000000000150014990832817814165319240529767089234614544976323685262"
  },
  {
    "id": 911,
    "db_id": "boat_1",
    "question": "Find the names of sailors whose rating is larger than the rating of all sailors who booked a red boat.",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name FROM (SELECT name , rating FROM (SELECT name , rating FROM boat_1.Sailors ORDER BY rating LIMIT 1) AS T ORDER BY rating LIMIT 1)) AS R WHERE name <> '' GROUP BY name ORDER BY rating LIMIT 10000000000000000000000000000000000"
  },
  {
    "id": 912,
    "db_id": "boat_1",
    "question": "What are the names of the sailors whose rating is larger than the rating of all sailors who booked a red boat?",
    "answer": "SELECT name FROM boat_1.Sailors WHERE rating > (SELECT MAX(rating ) FROM boat_1.Sailors) GROUP BY name ORDER BY name LIMIT 1000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 913,
    "db_id": "boat_1",
    "question": "What is highest rating between sailors?",
    "answer": "SELECT DISTINCT SUM(rating ) FROM (SELECT MAX(Reserves.name ) AS RAND FROM (SELECT DISTINCT name FROM boat_1.Sailors WHERE sid = '596873') AS r ORDER BY Sailors.name LIMIT 1) AS T ORDER BY name , Reserves.rating LIMIT 1000000000000000000000"
  },
  {
    "id": 914,
    "db_id": "boat_1",
    "question": "What is the maximum rating for sailors?",
    "answer": "SELECT MAX(rating ) FROM (SELECT DISTINCT Reserves.name FROM (SELECT DISTINCT Sailors.name , boat_1.name FROM (SELECT DISTINCT name , boat_1.name FROM boat_1.Boats WHERE name = 'ship280') AS T ORDER BY Reserves.name LIMIT 1) AS T INNER JOIN (SELECT MAX(rating ) FROM (SELECT DISTINCT Sailors"
  },
  {
    "id": 915,
    "db_id": "boat_1",
    "question": "Find the names of sailors who reserved boat with the name Melon.",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name FROM (SELECT name FROM boat_1.Sailors ORDER BY name LIMIT 2)) AS T INNER JOIN boat_1.Boats AS B  ON Boats.bid = sid ORDER BY sid LIMIT 2 OFFSET 34950000000000000000000000000000"
  },
  {
    "id": 916,
    "db_id": "boat_1",
    "question": "What are the names of sailors who reserved a boat with the name Melon?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name FROM (SELECT name FROM boat_1.Sailors ORDER BY Reserves.bid LIMIT 2)) AS T ORDER BY Reserves.name LIMIT 100163687594965580139480632748055840173669741823638"
  },
  {
    "id": 917,
    "db_id": "boat_1",
    "question": "List the names and ages of all sailors sorted by rating in descending order.",
    "answer": "SELECT name , MAX(age ) FROM (SELECT DISTINCT Sailors.name , SUM(rating ) AS sum FROM (SELECT DISTINCT Sailors.name , SUM(Sailors.rating ) AS sum FROM (SELECT bid , sid FROM (SELECT DISTINCT Boats.sid FROM (SELECT DISTINCT Boats.sid , SUM(Sailors.rating ) AS sum FROM (SELECT DISTINCT S"
  },
  {
    "id": 918,
    "db_id": "boat_1",
    "question": "What are the names and ages of all sailors sorted by decreasing rating?",
    "answer": "SELECT name , MAX(age ) FROM (SELECT DISTINCT Sailors.name , MIN(rating ) AS min_rate FROM (SELECT DISTINCT Sailors.name , Reserves.bid FROM (SELECT DISTINCT Sailors.name , Boats.bid FROM (SELECT DISTINCT name , Reserves.day FROM (SELECT DISTINCT sid FROM boat_1.Reserves GROUP BY name ORDER BY rating"
  },
  {
    "id": 919,
    "db_id": "headphone_store",
    "question": "Find the model of the most expensive headphone.",
    "answer": "SELECT DISTINCT Model FROM headphone_store.headphone GROUP BY Model ORDER BY Model LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 920,
    "db_id": "headphone_store",
    "question": "Which headphone model has the highest price?",
    "answer": "SELECT DISTINCT headphone.Model FROM headphone_store.headphone AS t INNER JOIN (SELECT MAX(Price ) AS a , headphone_store.Store_ID FROM headphone_store.headphone WHERE Headphone_ID = 'WK0N7418' GROUP BY headphone_store.Store_ID ORDER BY Price LIMIT 1) AS T  ON headphone_store.headphone.Headphone_ID = 'WK0N"
  },
  {
    "id": 921,
    "db_id": "headphone_store",
    "question": "List all different headphone models in the alphabetical order.",
    "answer": "SELECT DISTINCT Driver-matched_dB FROM headphone_store.headphone ORDER BY Name LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 922,
    "db_id": "headphone_store",
    "question": "Return the list of distinct headphone models ordered alphabetically.",
    "answer": "SELECT DISTINCT MIN(Model ) FROM headphone_store.stock GROUP BY Model ORDER BY Driver-matched_dB LIMIT 1000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 923,
    "db_id": "headphone_store",
    "question": "Which headphone class is the most common one?",
    "answer": "SELECT DISTINCT MIN(Model ) FROM (SELECT DISTINCT Model FROM headphone_store.headphone ORDER BY Price LIMIT 1) AS T GROUP BY Driver-matched_dB ORDER BY Driver-matched_dB LIMIT 100000000000000000000000000000000000000"
  },
  {
    "id": 924,
    "db_id": "headphone_store",
    "question": "Which headphone class contains the most headphones?",
    "answer": "SELECT DISTINCT Model FROM headphone_store.headphone WHERE Price > (SELECT MAX(Price ) FROM headphone_store.headphone GROUP BY Model ORDER BY Price LIMIT 1) LIMIT 1"
  },
  {
    "id": 925,
    "db_id": "headphone_store",
    "question": "Which headphone class does have more than two headphones?",
    "answer": "SELECT DISTINCT MIN(Class ) FROM (SELECT DISTINCT Driver-matched_dB FROM headphone_store.headphone GROUP BY Driver-matched_dB LIMIT 2) AS T ORDER BY Driver-matched_dB LIMIT 10000000000000000000000000000000000000"
  },
  {
    "id": 926,
    "db_id": "headphone_store",
    "question": "Find the headphone class that does not contain more than two headphones.",
    "answer": "SELECT DISTINCT headphone.Model FROM headphone_store.headphone AS t INNER JOIN (SELECT COUNT(Headphone_ID ) AS num FROM headphone_store.headphone WHERE Model = 'no' GROUP BY Driver-matched_dB ORDER BY Driver-matched_dB LIMIT 2) AS T  ON headphone.Headphone_ID = (SELECT headphone.Headphone_ID FROM headphone_store."
  },
  {
    "id": 927,
    "db_id": "headphone_store",
    "question": "Find the number of headphones with a price higher than 200 for each class.",
    "answer": "SELECT COUNT(Driver-matched_dB ) AS num FROM (SELECT DISTINCT Price , Model FROM headphone_store.headphone GROUP BY Model ORDER BY Driver-matched_dB LIMIT 1) AS T GROUP BY Driver-matched_dB ORDER BY Driver-matched_dB LIMIT 200000000000000000000"
  },
  {
    "id": 928,
    "db_id": "headphone_store",
    "question": "How many headphones cost more than 200 for each headphone class?",
    "answer": "SELECT SUM(Quantity ) FROM (SELECT COUNT(Headphone_ID ), SUM(Price ), SUM(Driver-matched_dB ) AS sum FROM headphone_store.stock GROUP BY headphone.Model ORDER BY Quantity LIMIT 10) AS A ORDER BY Driver-matched_dB , Price , Headphone_ID LIMIT 400000000000000000000000"
  },
  {
    "id": 929,
    "db_id": "headphone_store",
    "question": "how many different earpads are there?",
    "answer": "SELECT COUNT(Earpads ) FROM headphone_store.headphone WHERE store.Store_ID = 'B74F219A-368D-4098-BA7C-90259DE6BDB1' GROUP BY Earpads ORDER BY Driver-matched_dB LIMIT 1000000000000000000000"
  },
  {
    "id": 930,
    "db_id": "headphone_store",
    "question": "Count the number of different earpads.",
    "answer": "SELECT COUNT(Earpads ) FROM headphone_store.headphone WHERE store.Store_ID = 'B470928' GROUP BY Earpads ORDER BY Driver-matched_dB LIMIT 1 OFFSET 0"
  },
  {
    "id": 931,
    "db_id": "headphone_store",
    "question": "Find the top 2 earpads that are mostly used.",
    "answer": "SELECT DISTINCT Earpads FROM headphone_store.headphone ORDER BY Driver-matched_dB LIMIT 2 OFFSET 200000000315604784745845865864129930786467028194558798625899558776"
  },
  {
    "id": 932,
    "db_id": "headphone_store",
    "question": "What are the top 2 earpads in terms of the number of headphones using them?",
    "answer": "SELECT DISTINCT Earpads FROM headphone_store.headphone WHERE headphone_store.Store_ID = 'E0985763' ORDER BY Earpads LIMIT 20000000141742251418940689726000312873957877656134531236"
  },
  {
    "id": 933,
    "db_id": "headphone_store",
    "question": "What are the model, class, and construction of the cheapest headphone?",
    "answer": "SELECT DISTINCT MIN(Model ), Class , Construction FROM headphone_store.headphone GROUP BY Model ORDER BY Price LIMIT 1000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 934,
    "db_id": "headphone_store",
    "question": "Find the model, class, and construction of the headphone with the lowest price.",
    "answer": "SELECT DISTINCT Model , Class , Construction FROM headphone_store.headphone ORDER BY Price LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 935,
    "db_id": "headphone_store",
    "question": "Find the average price for each headphone construction.",
    "answer": "SELECT DISTINCT AVG(Price ), SUM(Price ) FROM headphone_store.stock GROUP BY Construction ORDER BY Driver-matched_dB , Price LIMIT 1000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 936,
    "db_id": "headphone_store",
    "question": "How much does headphones cost on average for each headphone construction?",
    "answer": "SELECT SUM(Driver-matched_dB ) FROM headphone_store.headphone INNER JOIN (SELECT DISTINCT Model , Price FROM headphone_store.headphone GROUP BY Model ORDER BY Price LIMIT 1) AS T  ON headphone_store.Headphone_ID = headphone_store.headphone.Headphone_ID ORDER BY Driver-matched_dB , Price LIMIT 10000"
  },
  {
    "id": 937,
    "db_id": "headphone_store",
    "question": "Which headphone classes have both headphones with \"Bowls\" and headphones with \"Comfort Pads\" earpads?",
    "answer": "SELECT DISTINCT Headphone_ID FROM (SELECT DISTINCT Driver-matched_dB FROM headphone_store.headphone WHERE Model = 'bowls' INNER JOIN headphone_store.headphone AS T  ON Headphone_ID =  Headphone_ID GROUP BY Driver-matched_dB ORDER BY Driver-matched_dB LIMIT 1) AS"
  },
  {
    "id": 938,
    "db_id": "headphone_store",
    "question": "Find the headphone classes that contain both headphones using \"Bowls\" earpads and headphones using \"Comfort Pads\" earpads.",
    "answer": "SELECT DISTINCT Class FROM headphone_store.headphone WHERE Price = '249.8' GROUP BY Class ORDER BY Driver-matched_dB LIMIT 100000000305376615653835069886356032268581971445721372262"
  },
  {
    "id": 939,
    "db_id": "headphone_store",
    "question": "Which earpads never use plastic construction?",
    "answer": "SELECT DISTINCT store.Name FROM headphone_store.stock AS T WHERE Driver-matched_dB = (SELECT AVG(Driver-matched_dB ) FROM headphone_store.stock WHERE Date_Opened > '2015-7' GROUP BY store.Store_ID ORDER BY Driver-matched_dB LIMIT 1) LIMIT 1;"
  },
  {
    "id": 940,
    "db_id": "headphone_store",
    "question": "Find all earpads that do not use plastic construction.",
    "answer": "SELECT DISTINCT Earpads FROM headphone_store.headphone WHERE Model = 'plastic' GROUP BY Earpads ORDER BY Driver-matched_dB  DESC LIMIT 10000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 941,
    "db_id": "headphone_store",
    "question": "Find the headphone models whose price is below the average price.",
    "answer": "SELECT DISTINCT headphone.Model FROM headphone_store.stock AS T WHERE Price < (SELECT AVG(Price ) FROM headphone_store.stock) LIMIT 160834295705921351470118586180776364019232921131686441779119"
  },
  {
    "id": 942,
    "db_id": "headphone_store",
    "question": "What are the headphone models that cost less than the average price?",
    "answer": "SELECT DISTINCT headphone.Model FROM (SELECT SUM(Price ) AS avg FROM headphone_store.headphone WHERE Price < 100) AS T GROUP BY headphone.Headphone_ID ORDER BY Driver-matched_dB LIMIT 200000000000000000000000000000000000000"
  },
  {
    "id": 943,
    "db_id": "headphone_store",
    "question": "Sort all store names by store open date.",
    "answer": "SELECT DISTINCT SUM(store.Name ) FROM (SELECT DISTINCT SUM(Parking ) AS Store_ID , SUM(Date_Opened ) AS OpenDate FROM (SELECT Store_ID , Date_Opened FROM headphone_store.stock GROUP BY Store_ID ORDER BY Date_Opened ) AS T ORDER BY Date_Opened LIMIT 1) AS s ORDER BY Store_ID LIMIT 100000"
  },
  {
    "id": 944,
    "db_id": "headphone_store",
    "question": "Give me a list of store names, sorted by store open date.",
    "answer": "SELECT DISTINCT Name FROM headphone_store.headphone ORDER BY Date_Opened LIMIT 1;"
  },
  {
    "id": 945,
    "db_id": "headphone_store",
    "question": "List name and parking info for the stores in the Tarzana neighborhood.",
    "answer": "SELECT DISTINCT store.Name , stock.Parking FROM headphone_store.store AS T INNER JOIN (SELECT DISTINCT store.Name , COUNT(Store_ID ) AS parking FROM headphone_store.store WHERE Neighborhood = 'Tarzana') AS u  ON stock.Store_ID = 'T' ORDER BY store.Name , stock.Parking LIMIT "
  },
  {
    "id": 946,
    "db_id": "headphone_store",
    "question": "Which stores are located in the \"Tarzana\" neighborhood? Return their names and parking information.",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT Store_ID , Neighborhood , Store_ID FROM headphone_store.headphone WHERE Model = 'mp4503-146' ORDER BY Neighborhood , Price LIMIT 1) AS T WHERE Name = 'Tarzana' ORDER BY Parking LIMIT 10000000000000000000000000"
  },
  {
    "id": 947,
    "db_id": "headphone_store",
    "question": "How many different neighborhoods are there for all stores?",
    "answer": "SELECT COUNT(Driver-matched_dB ) FROM headphone_store.store GROUP BY store.Neighborhood ORDER BY Driver-matched_dB LIMIT 100000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 948,
    "db_id": "headphone_store",
    "question": "Count the number of distinct neighborhoods stores are located.",
    "answer": "SELECT COUNT(Name ) FROM (SELECT DISTINCT Name FROM (SELECT DISTINCT Neighborhood , Price FROM headphone_store.headphone WHERE Price = '199.40') AS T ORDER BY Name LIMIT 1) AS t WHERE Name = 'Downtown LA' GROUP BY Name ORDER BY Name LIMIT 100000000000000000000000000"
  },
  {
    "id": 949,
    "db_id": "headphone_store",
    "question": "find the number of stores in each neighborhood.",
    "answer": "SELECT SUM(Quantity ), SUM(Store_ID ) FROM (SELECT SUM(Store_ID ) AS T1 , AVG(Price ) AS q_rate FROM headphone_store.headphone GROUP BY Store_ID ORDER BY Store_ID LIMIT 3) AS Q ORDER BY Neighborhood LIMIT 500000000000000000000000"
  },
  {
    "id": 950,
    "db_id": "headphone_store",
    "question": "How many stores are there in each neighborhood?",
    "answer": "SELECT SUM(stock.Quantity ) FROM (SELECT DISTINCT Store_ID , Parking , Price FROM (SELECT DISTINCT Store_ID , Parking , Price FROM headphone_store.stock ORDER BY Neighborhood , Class , Driver-matched_dB LIMIT 1) AS T INNER JOIN (SELECT DISTINCT Store_ID , Name , Price FROM (SELECT DISTINCT Store_ID , Name , Park"
  },
  {
    "id": 951,
    "db_id": "headphone_store",
    "question": "Find the name of the store which has the most headphones in stock. List the number of headphones as well.",
    "answer": "SELECT SUM(stock.Quantity ) FROM headphone_store.headphone AS t INNER JOIN (SELECT DISTINCT COUNT(Headphone_ID ) AS num FROM headphone_store.headphone WHERE Driver-matched_dB = '99%' GROUP BY Headphone_ID ORDER BY Driver-matched_dB LIMIT 1) AS q  ON headphone_store.Headphone_ID = stock.Headphone_ID ORDER BY"
  },
  {
    "id": 952,
    "db_id": "headphone_store",
    "question": "Which store has the headphones in stock? Give me the store name and the total quantity.",
    "answer": "SELECT DISTINCT Store_ID , SUM(Quantity ) AS total FROM (SELECT DISTINCT Store_ID , COUNT(Headphone_ID ) AS num FROM headphone_store.stock WHERE Quantity > 1 GROUP BY Store_ID ORDER BY Quantity LIMIT 1) AS T WHERE Store_ID = 'Sales' GROUP BY Store_ID ORDER BY Driver-matched_dB LIMIT 200000000"
  },
  {
    "id": 953,
    "db_id": "headphone_store",
    "question": "Find the name of stores which have no headphone in stock.",
    "answer": "SELECT DISTINCT Driver-matched_dB FROM headphone_store.headphone WHERE store.Name = 'none' LIMIT 1"
  },
  {
    "id": 954,
    "db_id": "headphone_store",
    "question": "Which stores do not have any headphones in stock? Give me the store names.",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT Store_ID FROM (SELECT Store_ID FROM (SELECT DISTINCT Headphone_ID FROM headphone_store.stock ORDER BY Store_ID LIMIT 1) AS T INNER JOIN (SELECT DISTINCT Headphone_ID FROM headphone_store.stock ORDER BY store.Name LIMIT 1) AS s  ON Store_ID = Driver-matched_dB ORDER BY Store"
  },
  {
    "id": 955,
    "db_id": "headphone_store",
    "question": "Which headphone models do not have any stock in any store?",
    "answer": "SELECT DISTINCT Name FROM headphone_store.stock WHERE Store_ID = '' GROUP BY Name ORDER BY Date_Opened LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 956,
    "db_id": "headphone_store",
    "question": "Find the headphone models that are not in stock in any store.",
    "answer": "SELECT DISTINCT headphone_store.Name FROM headphone_store.headphone AS T INNER JOIN headphone_store.stock AS S  ON Store_ID = headphone.Store_ID GROUP BY headphone_store.Name ORDER BY Driver-matched_dB LIMIT 1;"
  },
  {
    "id": 957,
    "db_id": "headphone_store",
    "question": "Which headphone model has the largest quantity of stock across all the stores?",
    "answer": "SELECT DISTINCT headphone.Model FROM headphone_store.stock AS S INNER JOIN headphone_store.stock AS T  ON Store_ID = Store_ID GROUP BY Headphone_ID ORDER BY Quantity LIMIT 10000000000000000000000000000000000000000000000"
  },
  {
    "id": 958,
    "db_id": "headphone_store",
    "question": "Find the headphone model whose total quantity in stock is the largest.",
    "answer": "SELECT DISTINCT headphone.Model FROM (SELECT MAX(Price ) AS qtd FROM (SELECT headphone.Model , SUM(headphone.Driver-matched_dB ), SUM(Driver-matched_dB ) AS dbls , SUM(Driver-matched_dB ) AS stgs FROM headphone_store.headphone GROUP BY Driver-matched_dB ORDER BY stock.Quantity LIMIT "
  },
  {
    "id": 959,
    "db_id": "headphone_store",
    "question": "How many headphones are stored in the Woodman store?",
    "answer": "SELECT COUNT(headphone.Headphone_ID ) FROM headphone_store.store AS T INNER JOIN (SELECT Store_ID , SUM(Quantity ) AS num FROM headphone_store.store WHERE Neighborhood = 'woodman' GROUP BY Store_ID ORDER BY Date_Opened LIMIT 1) AS s  ON store.Store_ID = headphone_store.store.Headphone_ID GROUP BY store.Store_ID ORDER BY"
  },
  {
    "id": 960,
    "db_id": "headphone_store",
    "question": "Find the total quantity of headphones stored in the Woodman store.",
    "answer": "SELECT SUM(Quantity ) FROM (SELECT SUM(Parking ), Store_ID FROM (SELECT Store_ID , COUNT(Headphone_ID ) AS num FROM (SELECT Headphone_ID FROM headphone_store.headphone ORDER BY Date_Opened LIMIT 1)) AS T GROUP BY Store_ID ) AS q ORDER BY Quantity LIMIT 10000000000000000000"
  },
  {
    "id": 961,
    "db_id": "headphone_store",
    "question": "Which neighborhood does not have any headphone in stock?",
    "answer": "SELECT DISTINCT Neighborhood FROM (SELECT DISTINCT Neighborhood FROM headphone_store.headphone ORDER BY store.Store_ID LIMIT 1) AS T INNER JOIN (SELECT DISTINCT Name FROM headphone_store.headphone WHERE Store_ID = 'XXXXXXXXXX') AS M  ON Model = 'HEADPHONE' ORDER BY Model , store.Store_ID LIMIT 1000000"
  },
  {
    "id": 962,
    "db_id": "headphone_store",
    "question": "Find the neighborhood where no headphones are in stock.",
    "answer": "SELECT DISTINCT Neighborhood FROM (SELECT DISTINCT Neighborhood FROM headphone_store.stock WHERE Quantity = 0 LIMIT 1) AS T WHERE EXISTS (SELECT * FROM headphone_store.stock WHERE Name = 'None of the above' LIMIT 1) LIMIT 1;"
  },
  {
    "id": 963,
    "db_id": "aan_1",
    "question": "How many authors do we have?",
    "answer": "SELECT COUNT(author_id ) FROM (SELECT DISTINCT author_id , COUNT(author_id ) AS num FROM (SELECT DISTINCT author_id , COUNT(author_id ) AS num FROM (SELECT cited_paper_id , SUM(cited_paper_id ), COUNT(Paper.affiliation"
  },
  {
    "id": 964,
    "db_id": "aan_1",
    "question": "Count the number of authors.",
    "answer": "SELECT COUNT(Author_list.author_id ) FROM (SELECT DISTINCT Paper.paper_id , COUNT(Paper.author_id ) AS num FROM (SELECT Author_list.paper_id , COUNT(Author_list.author_id ) AS num FROM (SELECT DISTINCT Author_list.name FROM (SELECT DISTINCT"
  },
  {
    "id": 965,
    "db_id": "aan_1",
    "question": "How many papers do we have?",
    "answer": "SELECT COUNT(title ) FROM (SELECT DISTINCT title FROM (SELECT * FROM (SELECT cited_paper_id FROM (SELECT DISTINCT cited_paper_id , Paper.title FROM (SELECT cited_paper_id , title FROM (SELECT DISTINCT title FROM (SELECT DIST"
  },
  {
    "id": 966,
    "db_id": "aan_1",
    "question": "Count the number of papers.",
    "answer": "SELECT COUNT(title ) FROM (SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT cited_paper_id , cited_paper_id FROM (SELECT cited_paper_id , cited_paper_id FROM (SELECT * FROM (SELECT DIST"
  },
  {
    "id": 967,
    "db_id": "aan_1",
    "question": "How many affiliations do we have?",
    "answer": "SELECT COUNT(Affiliation.affiliation_id ) FROM (SELECT DISTINCT Affiliation.affiliation_id FROM (SELECT DISTINCT Affiliation.name , Affiliation.address FROM (SELECT DISTINCT name FROM (SELECT Affiliation.affiliation_id , Affiliation.email FROM ("
  },
  {
    "id": 968,
    "db_id": "aan_1",
    "question": "Count the number of affiliations.",
    "answer": "SELECT COUNT(affiliation_id ) FROM (SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT cited_paper_id , SUM(title ), SUM(title ) AS sum2 FROM (SELECT DISTINCT title , title FROM (SELECT cited_paper_"
  },
  {
    "id": 969,
    "db_id": "aan_1",
    "question": "How many papers do we have in NAACL 2000?",
    "answer": "SELECT COUNT(title ) FROM (SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT DISTINCT cited_paper_id FROM (SELECT DISTINCT Paper.paper_id FROM (SELECT DISTINCT cited_paper_"
  },
  {
    "id": 970,
    "db_id": "aan_1",
    "question": "Count the number of papers in NAACL 2000.",
    "answer": "SELECT COUNT(title ) FROM (SELECT DISTINCT title FROM (SELECT Paper.paper_id , SUM(Paper.cited_paper_id ), SUM(Paper.year ) AS num FROM (SELECT * FROM (SELECT cited_paper_id , year"
  },
  {
    "id": 971,
    "db_id": "aan_1",
    "question": "How many papers are published in year 2009 by Columbia University?",
    "answer": "SELECT COUNT(cited_paper_id ) FROM (SELECT DISTINCT cited_paper_id FROM (SELECT DISTINCT Paper.paper_id , SUM(Paper.year ), SUM(Paper.paper_id ), SUM(Citation.cited_paper_id "
  },
  {
    "id": 972,
    "db_id": "aan_1",
    "question": "Count the number of papers published by Columbia University in 2009.",
    "answer": "SELECT COUNT(title ) FROM (SELECT DISTINCT title , MIN(year ) AS y FROM (SELECT DISTINCT title , MIN(year ) AS m1 FROM (SELECT DISTINCT Paper.paper_id , year FROM (SELECT DISTINCT"
  },
  {
    "id": 973,
    "db_id": "aan_1",
    "question": "List names and addresses for all affiliations.",
    "answer": "SELECT DISTINCT name , address FROM (SELECT DISTINCT affiliation_id FROM (SELECT DISTINCT Affiliation.affiliation_id FROM (SELECT DISTINCT Affiliation.author_id FROM (SELECT DISTINCT Paper.author_id FROM (SELECT DISTINCT Affiliation.affiliation_id"
  },
  {
    "id": 974,
    "db_id": "aan_1",
    "question": "What are the names and addresses for all affiliations?",
    "answer": "SELECT DISTINCT name , address FROM (SELECT DISTINCT affiliation_id , address FROM (SELECT DISTINCT author_id , email FROM (SELECT DISTINCT Affiliation.name , Affiliation.address FROM (SELECT DISTINCT affiliation_id , email FROM (SELECT DISTINCT author_"
  },
  {
    "id": 975,
    "db_id": "aan_1",
    "question": "List all venues and years for papers ordered by year.",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT cited_paper_id FROM (SELECT cited_paper_id FROM (SELECT DISTINCT Paper.paper_id FROM (SELECT cited_paper_id FROM (SELECT DISTINCT Paper.paper_id FROM (SELECT"
  },
  {
    "id": 976,
    "db_id": "aan_1",
    "question": "What are the distinct venues for papers, ordered by year?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT paper_id FROM (SELECT DISTINCT Paper.paper_id FROM (SELECT DISTINCT Paper.title , SUM(cited_paper_id ) AS COUNT FROM (SELECT cited_paper_id , year FROM ("
  },
  {
    "id": 977,
    "db_id": "aan_1",
    "question": "Find the titles and paper IDs for papers written by Harvard University.",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT Paper.paper_id FROM (SELECT DISTINCT cited_paper_id FROM (SELECT DISTINCT author_id , paper_id FROM (SELECT DISTINCT author_id FROM (SELECT cited_paper_id FROM (SELECT cited_paper_"
  },
  {
    "id": 978,
    "db_id": "aan_1",
    "question": "What are the titles and paper ids for papers written in affiliation with Harvard University?",
    "answer": "SELECT DISTINCT Paper.paper_id , Paper.affiliation_id FROM (SELECT DISTINCT Paper.paper_id , Paper.affiliation_id FROM (SELECT DISTINCT cited_paper_id FROM (SELECT DISTINCT author_id FROM ("
  },
  {
    "id": 979,
    "db_id": "aan_1",
    "question": "Find all papers with titles and paper IDs written by Mckeown.",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT DISTINCT title , cited_paper_id FROM (SELECT DISTINCT title , cited_paper_id FROM (SELECT DIST"
  },
  {
    "id": 980,
    "db_id": "aan_1",
    "question": "What are the titles and paper ids for papers written by Mckeown?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT title , paper_id FROM (SELECT title , paper_id FROM (SELECT DISTINCT title , cited_paper_id FROM (SELECT DISTINCT author_id , Paper.name ,"
  },
  {
    "id": 981,
    "db_id": "aan_1",
    "question": "Find all papers with titles and paper IDs collaborated by Stanford University and Columbia University.",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT cited_paper_id , paper_id FROM (SELECT DISTINCT cited_paper_id , Paper.affiliation_id FROM (SELECT DISTINCT cited_paper_id , Paper.name"
  },
  {
    "id": 982,
    "db_id": "aan_1",
    "question": "What are the titles and paper ids for papers which were affiliated with both Stanford and Columbia University?",
    "answer": "SELECT DISTINCT Paper.title FROM (SELECT DISTINCT Paper.title FROM (SELECT DISTINCT paper_id FROM (SELECT DISTINCT paper_id , Affiliation.name , Affiliation.address , Affiliation.email FROM"
  },
  {
    "id": 983,
    "db_id": "aan_1",
    "question": "Find all papers with titles and paper IDs co-authored by Mckeown, Kathleen and Rambow, Owen.",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT cited_paper_id , cited_paper_id FROM (SELECT DISTINCT Paper.cited_paper_id , Paper.paper"
  },
  {
    "id": 984,
    "db_id": "aan_1",
    "question": "What are the titles and paper ids co-authored by Mckeown, Kathleen and Rambow, Owen?",
    "answer": "SELECT DISTINCT cited_paper_id FROM (SELECT DISTINCT cited_paper_id FROM (SELECT DISTINCT author_id FROM (SELECT DISTINCT author_id FROM (SELECT DISTINCT affiliation_id FROM (SELECT"
  },
  {
    "id": 985,
    "db_id": "aan_1",
    "question": "Find the titles and paper IDs for papers which have Mckeown but not Rambow in author list.",
    "answer": "SELECT DISTINCT Paper.title FROM (SELECT DISTINCT Paper.paper_id , cited_paper_id FROM (SELECT DISTINCT Paper.paper_id , cited_paper_id FROM (SELECT DISTINCT cited_paper"
  },
  {
    "id": 986,
    "db_id": "aan_1",
    "question": "What are the titles and paper ids which have Mckeown as an author, but not Rambow?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT DISTINCT author_id , Paper.paper_id FROM (SELECT DISTINCT Paper.author_id , Paper.affiliation_id FROM (SELECT DISTINCT"
  },
  {
    "id": 987,
    "db_id": "aan_1",
    "question": "Find the titles and paper IDs for papers which have Mckeown, Kathleen or Rambow, Owen in author list.",
    "answer": "SELECT DISTINCT Paper.paper_id FROM (SELECT DISTINCT Paper.paper_id FROM (SELECT DISTINCT Author.author_id FROM (SELECT DISTINCT title FROM (SELECT DISTINCT aff"
  },
  {
    "id": 988,
    "db_id": "aan_1",
    "question": "What are the titles and paper ids for papers that have Mckeown, Kathleen or Rambow, Owen in their author list?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT cited_paper_id FROM (SELECT DISTINCT Paper.title FROM (SELECT DISTINCT Paper.author_id FROM (SELECT DISTINCT Author.name , Author."
  },
  {
    "id": 989,
    "db_id": "aan_1",
    "question": "List the names of all authors and their number of papers in descending order by number of papers.",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT author_id , COUNT(paper_id ) AS num FROM (SELECT Paper.paper_id , COUNT(Paper.affiliation_id ) AS num FROM (SELECT DISTINCT Paper.author_id , Paper"
  },
  {
    "id": 990,
    "db_id": "aan_1",
    "question": "How many papers did each author publish, ordered by number of papers?",
    "answer": "SELECT SUM(Paper.author_id ) AS total FROM (SELECT DISTINCT Paper.paper_id , COUNT(author_id ) AS num FROM (SELECT DISTINCT Author.affiliation_id FROM (SELECT DISTINCT affiliation_id FROM (SELECT DISTINCT author_id FROM ("
  },
  {
    "id": 991,
    "db_id": "aan_1",
    "question": "List all affiliations with ascending ordered number of papers.",
    "answer": "SELECT DISTINCT affiliation_id FROM (SELECT DISTINCT affiliation_id FROM (SELECT DISTINCT cited_paper_id , COUNT(cited_paper_id ) AS num FROM (SELECT DISTINCT Paper.paper_id FROM (SELECT DISTINCT Paper.affiliation_id"
  },
  {
    "id": 992,
    "db_id": "aan_1",
    "question": "What are the names of all affiliations, ordered by number of papers?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT cited_paper_id , paper_id FROM (SELECT Paper.paper_id , Paper.affiliation_id FROM (SELECT DISTINCT title , Paper.affiliation_id FROM"
  },
  {
    "id": 993,
    "db_id": "aan_1",
    "question": "List names of all authors who have more than 50 papers.",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT author_id , COUNT(paper_id ) AS num FROM (SELECT DISTINCT Paper.author_id , COUNT(paper_id ) AS num FROM (SELECT DISTINCT cited_paper_id , COUNT(Paper.author_id"
  },
  {
    "id": 994,
    "db_id": "aan_1",
    "question": "What are the names of all authors who have more than 50 papers?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT author_id FROM (SELECT SUM(Paper.author_id ) AS sum FROM (SELECT COUNT(paper_id ) AS id FROM (SELECT Paper.paper_id , SUM(Paper.author_id ) AS sum FROM (SELECT COUNT("
  },
  {
    "id": 995,
    "db_id": "aan_1",
    "question": "List names of all authors who have only 1 paper.",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT cited_paper_id FROM (SELECT DISTINCT author_id FROM (SELECT DISTINCT author_id FROM (SELECT DISTINCT cited_paper_id FROM (SELECT DISTINCT cited_paper"
  },
  {
    "id": 996,
    "db_id": "aan_1",
    "question": "What are the names of authors who have exactly 1 paper?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT cited_paper_id FROM (SELECT DISTINCT author_id FROM (SELECT DISTINCT author_id FROM (SELECT DISTINCT Affiliation.author_id FROM (SELECT DISTINCT paper_id"
  },
  {
    "id": 997,
    "db_id": "aan_1",
    "question": "What is the venue and year with the most number of publications?",
    "answer": "SELECT COUNT(paper_id ) FROM (SELECT DISTINCT paper_id , MAX(year ) AS max FROM (SELECT DISTINCT paper_id , MAX(year ) AS max FROM (SELECT DISTINCT author_id , MAX(year ) FROM (SELECT DISTINCT affiliation_id FROM ("
  },
  {
    "id": 998,
    "db_id": "aan_1",
    "question": "What was the venue and year with the most publications?",
    "answer": "SELECT COUNT(paper_id ), SUM(title ) AS total FROM (SELECT DISTINCT paper_id , SUM(cited_paper_id ) AS total FROM (SELECT cited_paper_id , Paper.title FROM (SELECT DISTINCT cited_paper_id , year , paper_id FROM"
  },
  {
    "id": 999,
    "db_id": "aan_1",
    "question": "What is the venue with the least number of publications?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT DISTINCT COUNT(Paper.paper_id ) AS num FROM (SELECT Paper.author_id , SUM(Paper.cited_paper_id ) AS total FROM (SELECT Paper.paper"
  },
  {
    "id": 1000,
    "db_id": "aan_1",
    "question": "Which venue has the fewest publications?",
    "answer": "SELECT COUNT(venue ) FROM (SELECT DISTINCT venue , COUNT(paper_id ) AS num FROM (SELECT DISTINCT Paper.venue , COUNT(Paper.cited_paper_id ) AS num FROM (SELECT cited_paper_id , COUNT(Paper.cited_paper_"
  },
  {
    "id": 1001,
    "db_id": "aan_1",
    "question": "How many papers cite paper with id A00-1002?",
    "answer": "SELECT COUNT(Author_list.paper_id ) FROM (SELECT DISTINCT Paper.paper_id , COUNT(Paper.cited_paper_id ) AS total FROM (SELECT cited_paper_id , COUNT(*) AS total FROM (SELECT Paper.paper_id"
  },
  {
    "id": 1002,
    "db_id": "aan_1",
    "question": "Count the number of papers which cited a paper with id A00-1002.",
    "answer": "SELECT COUNT(title ) FROM (SELECT DISTINCT title FROM (SELECT Paper.paper_id , SUM(title ) AS num FROM (SELECT title FROM (SELECT cited_paper_id , SUM(c"
  },
  {
    "id": 1003,
    "db_id": "aan_1",
    "question": "How many reference papers does paper with id D12-1027 have?",
    "answer": "SELECT COUNT(paper_id ) FROM (SELECT Paper.paper_id , COUNT(cited_paper_id ) AS num FROM (SELECT cited_paper_id FROM (SELECT Paper.paper_id , COUNT(author_id ) FROM (SELECT DISTINCT Author_"
  },
  {
    "id": 1004,
    "db_id": "aan_1",
    "question": "Count the number of references the paper with id D12-1027 has.",
    "answer": "SELECT COUNT(Paper.paper_id ) FROM (SELECT Paper.paper_id , SUM(Paper.cited_paper_id ) AS total FROM (SELECT DISTINCT Paper.paper_id , Paper.cited_paper_id FROM (SELECT DISTINCT P"
  },
  {
    "id": 1005,
    "db_id": "aan_1",
    "question": "What is the id and the number of citations of the most cited paper?",
    "answer": "SELECT MAX(title ) FROM (SELECT DISTINCT title , SUM(Citation.cited_paper_id ) AS total FROM (SELECT DISTINCT Paper.paper_id , Citation.author_id  FROM (SELECT DISTINCT Author_list.paper"
  },
  {
    "id": 1006,
    "db_id": "aan_1",
    "question": "Give the id and the number of citations of the most cited paper.",
    "answer": "SELECT DISTINCT cited_paper_id , COUNT(paper_id ) FROM (SELECT MAX(paper_id ), SUM(cited_paper_id ) AS citation FROM (SELECT title , COUNT(title ) AS n FROM (SELECT title , "
  },
  {
    "id": 1007,
    "db_id": "aan_1",
    "question": "Give the title of the paper which cites most number of papers?",
    "answer": "SELECT DISTINCT title FROM (SELECT COUNT(cited_paper_id ), SUM(title ) AS total FROM (SELECT DISTINCT Paper.title , Paper.cited_paper_id FROM (SELECT title FROM (SELECT DISTINCT cited_paper"
  },
  {
    "id": 1008,
    "db_id": "aan_1",
    "question": "What is the title of the paper which cites the most other papers?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT DISTINCT cited_paper_id FROM (SELECT DISTINCT paper_id , MAX(cited_paper_id ) AS ppid FROM (SELECT DISTINCT paper_"
  },
  {
    "id": 1009,
    "db_id": "aan_1",
    "question": "List top 10 most cited papers and their numbers of citations.",
    "answer": "SELECT SUM(paper_id ) AS sum FROM (SELECT DISTINCT Paper.paper_id , COUNT(Paper.cited_paper_id ) AS num FROM (SELECT Paper.paper_id , cited_paper_id FROM (SELECT DISTINCT Paper.paper_"
  },
  {
    "id": 1010,
    "db_id": "aan_1",
    "question": "What are the 10 most cited papers, and how many citations did each have?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT DISTINCT paper_id , COUNT(cited_paper_id ) AS num FROM (SELECT Paper.paper_id , COUNT(author_id ), SUM(Paper"
  },
  {
    "id": 1011,
    "db_id": "aan_1",
    "question": "How many citations does Mckeown , Kathleen have ?",
    "answer": "SELECT COUNT(Citation.paper_id ) FROM (SELECT cited_paper_id , SUM(cited_paper_id ) AS num FROM (SELECT DISTINCT Paper.paper_id FROM (SELECT DISTINCT Paper.paper_id , Citation.cited_paper_id FROM ("
  },
  {
    "id": 1012,
    "db_id": "aan_1",
    "question": "Count the number of citations Mckeown , Kathleen has .",
    "answer": "SELECT COUNT(Paper.cited_paper_id ) FROM (SELECT DISTINCT cited_paper_id FROM (SELECT DISTINCT Paper.paper_id , COUNT(cited_paper_id ) AS num FROM (SELECT cited_paper_id , SUM(author_id"
  },
  {
    "id": 1013,
    "db_id": "aan_1",
    "question": "How many papers does Mckeown , Kathleen cite ?",
    "answer": "SELECT COUNT(paper_id ) FROM (SELECT DISTINCT paper_id FROM (SELECT DISTINCT author_id FROM (SELECT DISTINCT author_id FROM (SELECT DISTINCT affiliation_id FROM (SELECT DISTINCT name , Affiliation.affiliation_id"
  },
  {
    "id": 1014,
    "db_id": "aan_1",
    "question": "Count the number of papers Mckeown , Kathleen has cited .",
    "answer": "SELECT COUNT(cited_paper_id ) FROM (SELECT DISTINCT Paper.paper_id FROM (SELECT DISTINCT Paper.paper_id FROM (SELECT DISTINCT cited_paper_id FROM (SELECT DISTINCT Paper.paper_id FROM (SELECT cited"
  },
  {
    "id": 1015,
    "db_id": "aan_1",
    "question": "Find the name and number of citations of the author who has most citations among all authors?",
    "answer": "SELECT DISTINCT cited_paper_id , COUNT(title ), title FROM (SELECT DISTINCT Paper.paper_id , SUM(title ) AS num , title FROM (SELECT DISTINCT * FROM (SELECT DISTINCT cited"
  },
  {
    "id": 1016,
    "db_id": "aan_1",
    "question": "What is the name and number of citations of the author with the greatest number of citations among authors?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT cited_paper_id , SUM(cited_paper_id ) AS total FROM (SELECT DISTINCT cited_paper_id , SUM(cited_paper_id )"
  },
  {
    "id": 1017,
    "db_id": "aan_1",
    "question": "What are the venues and years where Mckeown , Kathleen had papers ?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT venue , SUM(year ) AS total FROM (SELECT DISTINCT title FROM (SELECT DISTINCT author_id , MIN(paper_id ) AS cited_pap FROM (SELECT DISTINCT author"
  },
  {
    "id": 1018,
    "db_id": "aan_1",
    "question": "Which venues and years did Mckeown , Kathleen have papers ?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT cited_paper_id , SUM(year ) AS years FROM (SELECT cited_paper_id , COUNT(year ), COUNT(cited_paper_id ) FROM (SELECT Citation.paper_id , SUM("
  },
  {
    "id": 1019,
    "db_id": "aan_1",
    "question": "What are the venues and years where Columbia University had papers ?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT venue , MIN(year ) AS min_year FROM (SELECT DISTINCT cited_paper_id FROM (SELECT cited_paper_id , year FROM (SELECT Paper.venue , Paper.year FROM (SELECT venue , c"
  },
  {
    "id": 1020,
    "db_id": "aan_1",
    "question": "Which venues and years did Columbia University have papers ?",
    "answer": "SELECT DISTINCT Paper.title FROM (SELECT DISTINCT Paper.paper_id , COUNT(Paper.author_id ) AS cnt FROM (SELECT DISTINCT Author.affiliation_id FROM (SELECT DISTINCT affiliation_id FROM (SELECT DISTINCT Affiliation.name , SUM"
  },
  {
    "id": 1021,
    "db_id": "aan_1",
    "question": "Which author had the most papers in the year 2009?",
    "answer": "SELECT DISTINCT cited_paper_id FROM (SELECT MAX(paper_id ) AS pID FROM (SELECT Paper.paper_id , SUM(Paper.year ), SUM(cited_paper_id ) AS total FROM (SELECT year , MAX(paper_id ) AS pID FROM"
  },
  {
    "id": 1022,
    "db_id": "aan_1",
    "question": "What is the name of the author with the most papers in 2009?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT cited_paper_id , SUM(paper_id ) AS count FROM (SELECT DISTINCT cited_paper_id , MAX(paper_id ) AS paper_id"
  },
  {
    "id": 1023,
    "db_id": "aan_1",
    "question": "What are the names of the top 3 affiliations that have the most papers in year 2009?",
    "answer": "SELECT DISTINCT Affiliation.name FROM (SELECT DISTINCT cited_paper_id , SUM(year ) AS sum FROM (SELECT cited_paper_id , COUNT(cited_paper_id ) AS num FROM (SELECT paper"
  },
  {
    "id": 1024,
    "db_id": "aan_1",
    "question": "Which 3 affiliations had the most papers in 2009?",
    "answer": "SELECT DISTINCT affiliation_id FROM (SELECT DISTINCT name , SUM(Paper.cited_paper_id ) AS total FROM (SELECT DISTINCT name FROM aan_1.Author_list GROUP BY Affiliation.affiliation_id ORDER BY"
  },
  {
    "id": 1025,
    "db_id": "aan_1",
    "question": "How many papers does Columbia University have in or before 2009 ?",
    "answer": "SELECT COUNT(paper_id ) FROM (SELECT DISTINCT cited_paper_id , year FROM (SELECT cited_paper_id , MAX(year ) AS y FROM (SELECT cited_paper_id , SUM(year ), Paper.affiliation_id FROM (SELECT"
  },
  {
    "id": 1026,
    "db_id": "aan_1",
    "question": "Count the number of papers Columbia University had during or prior to 2009 .",
    "answer": "SELECT COUNT(title ) FROM (SELECT DISTINCT title FROM (SELECT DISTINCT cited_paper_id FROM (SELECT DISTINCT author_id FROM (SELECT DISTINCT author_id , Affiliation.affiliation_id FROM "
  },
  {
    "id": 1027,
    "db_id": "aan_1",
    "question": "How many papers does Stanford University have between 2000 and 2009?",
    "answer": "SELECT COUNT(Paper.paper_id ) FROM (SELECT DISTINCT Paper.paper_id FROM (SELECT DISTINCT Paper.paper_id FROM (SELECT DISTINCT cited_paper_id FROM (SELECT DISTINCT Paper.paper_id"
  },
  {
    "id": 1028,
    "db_id": "aan_1",
    "question": "Count the number of papers Stanford University had between 2000 and 2009.",
    "answer": "SELECT COUNT(Paper.paper_id ) FROM (SELECT DISTINCT Paper.paper_id , MAX(year ) AS year FROM (SELECT DISTINCT Paper.paper_id FROM (SELECT DISTINCT Citation.paper_id , MIN(Citation."
  },
  {
    "id": 1029,
    "db_id": "aan_1",
    "question": "What is the title of the paper that has most number of authors?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT cited_paper_id , COUNT(author_id ) AS num FROM (SELECT DISTINCT author_id , COUNT(Paper.paper_id ) AS num FROM (SELECT Paper.paper_id , COUNT(Paper.affili"
  },
  {
    "id": 1030,
    "db_id": "aan_1",
    "question": "Give the title of the paper with the most authors.",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT Paper.title , SUM(Author_list.author_id ) AS total FROM (SELECT DISTINCT Author.name , SUM(Author_list.affiliation_id ) AS author_id FROM (SELECT DISTINCT Citation.paper_id"
  },
  {
    "id": 1031,
    "db_id": "aan_1",
    "question": "How many collaborators has Mckeown , Kathleen had ?",
    "answer": "SELECT COUNT(Author_list.affiliation_id ) FROM (SELECT DISTINCT Author_list.author_id FROM (SELECT DISTINCT author_id FROM (SELECT Paper.paper_id FROM (SELECT DISTINCT Affiliation.affiliation_id FROM (SELECT DIST"
  },
  {
    "id": 1032,
    "db_id": "aan_1",
    "question": "Count the number of collaborators that Mckeown , Kathleen has had .",
    "answer": "SELECT COUNT(affiliation_id ) FROM (SELECT DISTINCT affiliation_id FROM (SELECT DISTINCT cited_paper_id FROM (SELECT DISTINCT Paper.paper_id , cited_paper_id FROM (SELECT DISTINCT cited_"
  },
  {
    "id": 1033,
    "db_id": "aan_1",
    "question": "Who has the most papers co-authored with Mckeown , Kathleen ?",
    "answer": "SELECT DISTINCT Paper.paper_id FROM (SELECT cited_paper_id FROM (SELECT DISTINCT author_id FROM (SELECT DISTINCT author_id FROM (SELECT * FROM (SELECT DISTINCT cited_paper_id , Paper.affiliation_"
  },
  {
    "id": 1034,
    "db_id": "aan_1",
    "question": "What is the name of the author who has co-authored the most papers with Mckeown , Kathleen ?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT DISTINCT author_id FROM (SELECT DISTINCT author_id , COUNT(paper_id ) AS cited_paper__citation__"
  },
  {
    "id": 1035,
    "db_id": "aan_1",
    "question": "Find the id of the papers whose title has the key word 'translation'.",
    "answer": "SELECT DISTINCT Paper.paper_id FROM (SELECT DISTINCT Paper.paper_id FROM (SELECT DISTINCT Paper.title FROM (SELECT DISTINCT title FROM (SELECT title , title FROM (SELECT DISTINCT tit"
  },
  {
    "id": 1036,
    "db_id": "aan_1",
    "question": "What are the ids for papers with titles containing 'translation'?",
    "answer": "SELECT DISTINCT Paper.paper_id FROM (SELECT DISTINCT Paper.paper_id FROM (SELECT DISTINCT Paper.title FROM (SELECT DISTINCT title , title FROM (SELECT DISTINCT title FROM (SELECT * FROM (SELECT title , SUM(ti"
  },
  {
    "id": 1037,
    "db_id": "aan_1",
    "question": "Find the id and title of the papers that are never cited by others.",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT cited_paper_id , paper_id , author_id FROM (SELECT DISTINCT cited_paper_id FROM (SELECT DISTINCT author_id , cited_paper_id FROM (SELECT DISTINCT c"
  },
  {
    "id": 1038,
    "db_id": "aan_1",
    "question": "What are the ids and titles for papers that have never been cited?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT Paper.title , title FROM (SELECT DISTINCT Paper.title , title FROM (SELECT * FROM (SELECT DISTINCT Paper.paper_id FROM (SELECT DISTINCT Paper.aff"
  },
  {
    "id": 1039,
    "db_id": "aan_1",
    "question": "Find the name of the affiliation whose address contains 'China' and publishes the greatest number of papers.",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT DISTINCT cited_paper_id , title FROM (SELECT DISTINCT paper_id , c"
  },
  {
    "id": 1040,
    "db_id": "aan_1",
    "question": "What is the name of the affiliation which publishes the greatest number of papers among those whose address contains 'China'.",
    "answer": "SELECT DISTINCT Affiliation.name FROM (SELECT DISTINCT cited_paper_id , COUNT(Paper.affiliation_id ) AS num FROM (SELECT Paper.paper_id , COUNT(Paper.address ) AS num FROM "
  },
  {
    "id": 1041,
    "db_id": "aan_1",
    "question": "Find the number of papers published in different conferences each year.",
    "answer": "SELECT SUM(Citation.cited_paper_id ) AS cited_published , COUNT(Citation.paper_id ) FROM (SELECT DISTINCT Paper.paper_id FROM (SELECT DISTINCT Citation.paper_id FROM aan_1.Paper AS T WHERE year = '"
  },
  {
    "id": 1042,
    "db_id": "aan_1",
    "question": "How many papers are published in each venue in each year?",
    "answer": "SELECT DISTINCT Paper.title FROM (SELECT DISTINCT title FROM (SELECT DISTINCT paper_id , SUM(cited_paper_id ) AS num , AVG(title ) AS name FROM (SELECT DISTINCT cited_paper_id , SUM("
  },
  {
    "id": 1043,
    "db_id": "aan_1",
    "question": "Find the total number of papers for each affiliation.",
    "answer": "SELECT SUM(affiliation_id ) AS total FROM (SELECT DISTINCT Paper.affiliation_id , COUNT(Paper.paper_id ) AS total FROM (SELECT DISTINCT Paper.affiliation_id , COUNT(cited_paper_id ) AS num FROM ("
  },
  {
    "id": 1044,
    "db_id": "aan_1",
    "question": "How many papers has each affiliation published?",
    "answer": "SELECT DISTINCT cited_paper_id FROM (SELECT DISTINCT Paper.affiliation_id , COUNT(cited_paper_id ) AS num FROM (SELECT DISTINCT Paper.affiliation_id , SUM(Paper.cited_paper_id ), SUM(Paper.author"
  },
  {
    "id": 1045,
    "db_id": "aan_1",
    "question": "Find the titles of papers that have more than 50 citations.",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT cited_paper_id , COUNT(cited_paper_id ) AS num FROM (SELECT DISTINCT Paper.title , COUNT(Paper.author_id ) AS num FROM (SELECT * FROM (SELECT DISTINCT Paper.title ,"
  },
  {
    "id": 1046,
    "db_id": "aan_1",
    "question": "What are the titles for papers with more than 50 citations?",
    "answer": "SELECT title FROM (SELECT DISTINCT Paper.title FROM (SELECT DISTINCT cited_paper_id , COUNT(author_id ) AS num FROM (SELECT DISTINCT author_id FROM (SELECT DISTINCT cited_paper_id , COUNT(author_id ) FROM ("
  },
  {
    "id": 1047,
    "db_id": "aan_1",
    "question": "Find the number of authors who did not publish any paper that is cited more than 50 times.",
    "answer": "SELECT COUNT(author_id ) FROM (SELECT DISTINCT author_id , SUM(cited_paper_id ) AS num FROM (SELECT DISTINCT Paper.paper_id , SUM(cited_paper_id ) AS cnt FROM (SELECT DISTINCT"
  },
  {
    "id": 1048,
    "db_id": "aan_1",
    "question": "How many authors have not published a paper with more than 50 citations?",
    "answer": "SELECT COUNT(name ) FROM (SELECT DISTINCT name FROM (SELECT cited_paper_id FROM (SELECT cited_paper_id FROM (SELECT DISTINCT author_id FROM (SELECT DISTINCT author_id , SUM(cited_paper_id ) AS num FROM ("
  },
  {
    "id": 1049,
    "db_id": "aan_1",
    "question": "Find the names of authors who published some paper on NAACL and ACL in the year 2009.",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT DISTINCT author_id FROM (SELECT DISTINCT cited_paper_id , Paper.affiliation_id FROM (SELECT DISTINCT"
  },
  {
    "id": 1050,
    "db_id": "aan_1",
    "question": "What are the names of authors who published in both NAACL and ACL in 2009?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT * FROM (SELECT DISTINCT author_id FROM (SELECT DISTINCT cited_paper_id , SUM(author_id ) AS total , year FROM (SELECT"
  },
  {
    "id": 1051,
    "db_id": "aan_1",
    "question": "Find the name of authors who have never published a paper in ACL.",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT cited_paper_id , SUM(cited_paper_id ) AS count FROM (SELECT DISTINCT author_id FROM (SELECT DISTINCT Paper.author_id , MAX(P"
  },
  {
    "id": 1052,
    "db_id": "aan_1",
    "question": "What are the names of authors who have not published a paper in ACL?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT author_id FROM (SELECT Paper.paper_id FROM (SELECT cited_paper_id FROM (SELECT DISTINCT cited_paper_id FROM (SELECT cited_paper_id FROM (SELECT cited_paper_id FROM"
  },
  {
    "id": 1053,
    "db_id": "conference",
    "question": "How many conferences are there?",
    "answer": "SELECT COUNT(Institution_ID ) FROM conference.institution GROUP BY institution.Location ORDER BY institution.name LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1054,
    "db_id": "conference",
    "question": "What is the total number of conferences?",
    "answer": "SELECT COUNT(institution.Conference_Name ) FROM conference.institution AS T INNER JOIN conference.conference AS C  ON institution.Institution_ID = Conference_ID GROUP BY conference.Conference_Name ORDER BY Institution_Name LIMIT 100000000000000000000000000000000000000"
  },
  {
    "id": 1055,
    "db_id": "conference",
    "question": "List all distinct conference names.",
    "answer": "SELECT DISTINCT Conference_Name FROM conference.conference WHERE Year = 2018 GROUP BY Conference_Name ORDER BY Founded LIMIT 100000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1056,
    "db_id": "conference",
    "question": "What are the different conference names?",
    "answer": "SELECT DISTINCT Conference_Name FROM conference.institution WHERE institution.Institution_ID = 'C61042573849' GROUP BY Conference_Name ORDER BY Conference_Name LIMIT 10000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1057,
    "db_id": "conference",
    "question": "List all conference name, year, and location.",
    "answer": "SELECT DISTINCT conference_participation.Conference_Name , Year , Conference_ID FROM conference.staff AS T INNER JOIN conference.conference AS C  ON Location = 'T' GROUP BY conference.Conference_Name , Year ORDER BY Conference_Name , Year LIMIT 3 OFFSET 4000000100060027824590548242364"
  },
  {
    "id": 1058,
    "db_id": "conference",
    "question": "What are the names, years, and locations of all conferences?",
    "answer": "SELECT DISTINCT Conference_Name , Year FROM conference.staff AS T WHERE Institution_ID = 'institution' ORDER BY Year LIMIT 10000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1059,
    "db_id": "conference",
    "question": "Show all conference names and the number of times each conference has.",
    "answer": "SELECT DISTINCT conference_participation.Conference_Name , COUNT(Conference_ID ) FROM conference.staff AS T INNER JOIN conference.conference AS C  ON Conference_ID = Conference_ID GROUP BY Conference_ID ORDER BY name LIMIT 10 OFFSET 0;"
  },
  {
    "id": 1060,
    "db_id": "conference",
    "question": "For each conference name, how many times has it occurred?",
    "answer": "SELECT COUNT(institution.name ) FROM conference.conference AS T INNER JOIN (SELECT DISTINCT Conference_Name FROM conference.conference WHERE institution.name = 'institution2' GROUP BY Conference_Name ORDER BY Conference_ID , Conference_Name LIMIT 1) AS T  ON institution.name = Conference_Name ORDER BY Conference_ID , Conference_Name LIMIT 1 OFFSET 1567830409"
  },
  {
    "id": 1061,
    "db_id": "conference",
    "question": "show all years and the number of conferences in each year.",
    "answer": "SELECT COUNT(Year ) AS num FROM conference.institution WHERE Location = 'World-Wide Web' GROUP BY Year ORDER BY Year LIMIT 10000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1062,
    "db_id": "conference",
    "question": "How many conferences occur every year?",
    "answer": "SELECT COUNT(institution.Conference_ID ) FROM conference.institution AS T INNER JOIN conference.conference AS C  ON institution.Institution_ID = Conference_ID GROUP BY institution.Year ORDER BY Year LIMIT 10 OFFSET 50000000000000000000000000000000000000000"
  },
  {
    "id": 1063,
    "db_id": "conference",
    "question": "which year has least number of conferences?",
    "answer": "SELECT MAX(Year ) FROM conference.conference GROUP BY Year ORDER BY Location LIMIT 1;"
  },
  {
    "id": 1064,
    "db_id": "conference",
    "question": "What year had the fewest conferences?",
    "answer": "SELECT SUM(Age ) FROM conference.staff GROUP BY Age ORDER BY Age LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1065,
    "db_id": "conference",
    "question": "Show all locations where at least two conferences are located.",
    "answer": "SELECT DISTINCT MIN(Location ) FROM conference.conference WHERE Location = (SELECT MIN(Location ) FROM conference.conference GROUP BY Conference_Name ORDER BY Year , Location LIMIT 2) INNER JOIN conference.conference ON Conference_ID = conference.Conference_ID GROUP BY conference.Conference_Name ORDER BY Year , Location LIMIT 2019 OFFSET 474653051505845"
  },
  {
    "id": 1066,
    "db_id": "conference",
    "question": "What are all locations that have hosted at least two conferences?",
    "answer": "SELECT DISTINCT SUM(Location ) FROM conference.institution AS T INNER JOIN conference.staff AS S  ON institution.Institution_ID =  staff.staff_ID GROUP BY conference.Conference_Name ORDER BY Conference_Name LIMIT 20000000140592000000000000000000000000000000"
  },
  {
    "id": 1067,
    "db_id": "conference",
    "question": "Show the institution name, location and founded year of all institutions.",
    "answer": "SELECT DISTINCT institution.name , Location , Year FROM conference.institution AS T INNER JOIN conference.staff AS S  ON Conference_ID = 1982 GROUP BY institution.name , Location ORDER BY Year LIMIT 1000000000000000000000000000000000000000000"
  },
  {
    "id": 1068,
    "db_id": "conference",
    "question": "What are the names, locations, and founding years for all institutions?",
    "answer": "SELECT DISTINCT name FROM conference.institution WHERE institution.name = 'Babies in Babies Outside' GROUP BY institution.name ORDER BY institution.Founded , institution.Location LIMIT 10000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1069,
    "db_id": "conference",
    "question": "How many institution are founded between 1850 and 1900?",
    "answer": "SELECT COUNT(institution.Institution_Name ) FROM conference.institution AS T INNER JOIN conference.conference AS C  ON Conference_ID = 1224796083515000000 LIMIT 1500000000000000000000000000000000000000000"
  },
  {
    "id": 1070,
    "db_id": "conference",
    "question": "How many institutions were founded between 1850 and 1900?",
    "answer": "SELECT COUNT(institution.Institution_Name ) FROM conference.institution AS T INNER JOIN conference.conference AS C  ON institution.Institution_ID = Conference_ID ORDER BY conference.Year LIMIT 1850 OFFSET 1900"
  },
  {
    "id": 1071,
    "db_id": "conference",
    "question": "Show the institution name and location of institution that is most recently founded.",
    "answer": "SELECT DISTINCT institution.name , Location FROM conference.institution AS T INNER JOIN conference.staff AS S  ON conference.Conference_ID =  staff.staff_ID ORDER BY staff.Institution_Name  DESC LIMIT 10000000000000000000000000000000000000000"
  },
  {
    "id": 1072,
    "db_id": "conference",
    "question": "What are the names and locations of the most recently-founded institution?",
    "answer": "SELECT DISTINCT name FROM conference.institution WHERE Founded = (SELECT MAX(Founded ) FROM conference.institution GROUP BY Institution_ID ORDER BY Founded LIMIT 1) LIMIT 200000000659183700000000000000000000000000000000000000000"
  },
  {
    "id": 1073,
    "db_id": "conference",
    "question": "Show the institution name and the number of staff for each institution founded after 1800.",
    "answer": "SELECT DISTINCT name , COUNT(institution.Institution_ID ) FROM conference.staff AS T INNER JOIN conference.institution AS I  ON staff.staff_ID = Institution_ID ORDER BY Institution_ID , Year LIMIT 1000 OFFSET 500269851409784360000000000"
  },
  {
    "id": 1074,
    "db_id": "conference",
    "question": "For each institution id , how many staff members does each institution have that was founded after 1800 ? return their names .",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT institution.name FROM conference.staff WHERE institution.Institution_ID = 'institutions.institution_id' ORDER BY institution.Year LIMIT 1) AS T INNER JOIN conference.staff AS a  ON staff.staff_ID =  Age  ORDER BY institution.Age , institution.Institution_Name LIMIT 25000000000000"
  },
  {
    "id": 1075,
    "db_id": "conference",
    "question": "Show institution name which there is no staff in our record.",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name FROM conference.institution AS T WHERE EXISTS (SELECT name FROM conference.staff AS S INNER JOIN conference.conference_participation AS P  ON conference.Conference_ID =  Founded ) ORDER BY name LIMIT 1) AS t ORDER BY name LIMIT 1;"
  },
  {
    "id": 1076,
    "db_id": "conference",
    "question": "What is the name of the institution with no staff in the records?",
    "answer": "SELECT DISTINCT institution.name FROM conference.institution AS T INNER JOIN conference.staff AS S  ON conference.conference_participation.Conference_ID = conference.Conference_ID ORDER BY institution.Founded LIMIT 1;"
  },
  {
    "id": 1077,
    "db_id": "conference",
    "question": "Show all staff name who are above the average age.",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT staff_ID , AVG(Age ) AS avg FROM conference.staff WHERE Age > (SELECT MAX(Age ) FROM conference.conference) GROUP BY staff_ID ORDER BY Age LIMIT 1) AS T ORDER BY Age LIMIT 100000000748394658273666131241486"
  },
  {
    "id": 1078,
    "db_id": "conference",
    "question": "What are the names of all staff members who are older than average?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name FROM conference.staff WHERE Age > 15 ORDER BY Age LIMIT 1) AS T ORDER BY Age LIMIT 20090217386408752941156305986550586258011077557971529747916262"
  },
  {
    "id": 1079,
    "db_id": "conference",
    "question": "What is the maximum and minimum age of all staff from the United States?",
    "answer": "SELECT DISTINCT MAX(Age ) AS min_age , MIN(Age ), COUNT(Age ) FROM conference.staff WHERE Nationality = 'US' GROUP BY Nationality ORDER BY Nationality LIMIT 100000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1080,
    "db_id": "conference",
    "question": "What are the maximum and minimum ages for all staff?",
    "answer": "SELECT DISTINCT MAX(Age ) AS min FROM (SELECT SUM(Age ) AS sum , COUNT(Age ) AS num FROM (SELECT staff_ID , SUM(Age ), MIN(Age ), MAX(Age ) FROM conference.staff GROUP BY staff_ID ORDER BY Age LIMIT 1) AS T INNER JOIN conference.conference_participation AS A         AS p  ON staff_ID =  Age GROUP BY staff_"
  },
  {
    "id": 1081,
    "db_id": "conference",
    "question": "Show all conference names which the staff from Canada attends.",
    "answer": "SELECT DISTINCT name FROM conference.staff WHERE Nationality = 'Canada' GROUP BY name ORDER BY name LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1082,
    "db_id": "conference",
    "question": "What are the names of all the conferences that has staff from Canada attending?",
    "answer": "SELECT DISTINCT name FROM conference.staff AS T INNER JOIN conference.conference AS C  ON Conference_ID = (SELECT Conference_ID FROM conference.staff WHERE Nationality = 'Canada') ORDER BY name LIMIT 100000000000000000000000000000000000000000000000"
  },
  {
    "id": 1083,
    "db_id": "conference",
    "question": "Show all staff names who have been both speaker and sponsor in some conference.",
    "answer": "SELECT DISTINCT name FROM conference.staff AS T INNER JOIN conference.staff AS T  AS T  ON staff.staff_ID =  conference.staff_ID ORDER BY staff.name , staff.name , staff.role LIMIT 1000 OFFSET 13796458324299063179600715261433"
  },
  {
    "id": 1084,
    "db_id": "conference",
    "question": "What are the names of the staff members who have been both a speaker and a sponsor at some conference?",
    "answer": "SELECT DISTINCT name FROM conference.staff AS T INNER JOIN conference.staff AS B  ON name = 'T' ORDER BY name LIMIT 1000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1085,
    "db_id": "conference",
    "question": "Show all names who have been in both ACL and Naccl.",
    "answer": "SELECT DISTINCT name FROM conference.staff AS T INNER JOIN conference.conference AS C  ON Conference_ID = 'ACL' GROUP BY name ORDER BY name LIMIT 1000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1086,
    "db_id": "conference",
    "question": "What are the names of everbody who has participated in both the ACL and NACCL conferences?",
    "answer": "SELECT DISTINCT name FROM conference.staff WHERE role = 'participant AND Institution_ID IN ( SELECT T2.institution_id FROM conference AS T1 INNER JOIN staff AS T2 ON T1.Conference_ID = T2.Conference_ID GROUP BY T2.conference_name,T1.Institution_Name,T2.Staff_ID )</sql>\n<question>Who was the member of NACCL"
  },
  {
    "id": 1087,
    "db_id": "conference",
    "question": "Show all staff names who attend a conference in 2003 or 2004.",
    "answer": "SELECT DISTINCT name FROM conference.staff WHERE Year > '2015' ORDER BY Year LIMIT 1 OFFSET 0;"
  },
  {
    "id": 1088,
    "db_id": "conference",
    "question": "What are the staff names who participated in conferences between 2003 or 2004?",
    "answer": "SELECT DISTINCT name FROM conference.staff WHERE Year > '2015' GROUP BY staff_ID ORDER BY Year LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1089,
    "db_id": "conference",
    "question": "Show the conference name and year and the number of participants for each conference.",
    "answer": "SELECT conference.name , SUM(staff_ID ) AS total FROM conference.conference_participation GROUP BY conference.conference_participation.Conference_ID ORDER BY Year , conference.name LIMIT 1200000000000000000000000000000000000000000000"
  },
  {
    "id": 1090,
    "db_id": "conference",
    "question": "For each conference id, what are their names, year, and number of participants?",
    "answer": "SELECT DISTINCT name , Year , COUNT(staff_ID ) FROM conference.conference WHERE Conference_ID = (SELECT Conference_ID FROM conference.conference GROUP BY Conference_ID ORDER BY Year LIMIT 1) GROUP BY name , Year ORDER BY Year LIMIT 10000000000000000000000000000000000000"
  },
  {
    "id": 1091,
    "db_id": "conference",
    "question": "Find the name of the conferences that have the top 2 most number of attendants.",
    "answer": "SELECT DISTINCT conference.name FROM conference.conference AS T INNER JOIN conference.staff AS S  ON conference.Conference_ID =  staff.staff_ID ORDER BY staff.Age LIMIT 200148236795228910529324461913897510182565161656575"
  },
  {
    "id": 1092,
    "db_id": "conference",
    "question": "What are the names of the conferences that have the top 2 most people attending?",
    "answer": "SELECT DISTINCT name FROM conference.conference AS T INNER JOIN (SELECT COUNT(name ), SUM(staff_ID ) AS total FROM conference.conference WHERE role = 'Attendee') AS C  ON Conference_ID = 'conferences/1843590526665137' ORDER BY conference.staff_ID LIMIT 2000000000000"
  },
  {
    "id": 1093,
    "db_id": "conference",
    "question": "Find the name and nationality of the people who did not participate in any ACL conference.",
    "answer": "SELECT DISTINCT name , name FROM conference.staff WHERE staff.role = 'PARTICIPATE IN' GROUP BY staff.name ORDER BY name LIMIT 120896537402921925120148900367924349766893557671546713881982"
  },
  {
    "id": 1094,
    "db_id": "conference",
    "question": "What are the names and nationalities of the people who did not participate in any ACL conferences?",
    "answer": "SELECT DISTINCT name , name FROM conference.staff WHERE role = 'unparticipated' GROUP BY staff_ID ORDER BY name LIMIT 1000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1095,
    "db_id": "conference",
    "question": "Find the name and location of the universities that did not have any staff participated in any conference in 2004.",
    "answer": "SELECT DISTINCT name FROM conference.institution WHERE institution.name = 'university' LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1096,
    "db_id": "conference",
    "question": "What are the names and locations of the universities that did not have any staff participating in any conferences in 2004?",
    "answer": "SELECT DISTINCT name FROM conference.institution WHERE institution.name = 'university' LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1097,
    "db_id": "pilot_1",
    "question": "What is the name of the oldest pilot?",
    "answer": "SELECT pilot_name FROM pilot_1.PilotSkills AS T WHERE age = (SELECT MAX(age ) FROM pilot_1.PilotSkills) GROUP BY pilot_name ORDER BY pilot_name LIMIT 1 OFFSET 304795827356564743330000000000000000000"
  },
  {
    "id": 1098,
    "db_id": "pilot_1",
    "question": "Return the name of the oldest pilot.",
    "answer": "SELECT pilot_name FROM pilot_1.PilotSkills GROUP BY age ORDER BY age LIMIT 1;"
  },
  {
    "id": 1099,
    "db_id": "pilot_1",
    "question": "What are the names of pilots whose age is below the average age, ordered by age?",
    "answer": "SELECT DISTINCT pilot_name FROM (SELECT AVG(pilot_name ) AS avg FROM (SELECT PilotSkills.plane_name , SUM(pilot_name ), PilotSkills.age \n  FROM (SELECT pilot_name , COUNT(pilot_name ), age \n  FROM pilot_1.Hangar GROUP BY pilot_name ORDER BY age LIMIT 2) AS T ) AS"
  },
  {
    "id": 1100,
    "db_id": "pilot_1",
    "question": "Return the names of pilots who are younger than average, ordered by age ascending.",
    "answer": "SELECT DISTINCT pilot_name FROM (SELECT DISTINCT plane_name , COUNT(age ) AS avg FROM pilot_1.PilotSkills GROUP BY plane_name ORDER BY age LIMIT 2) AS T ORDER BY age LIMIT 10000000000000000000000000000000000000000000"
  },
  {
    "id": 1101,
    "db_id": "pilot_1",
    "question": "Find all information of on pilots whose age is less than 30.",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.Hangar WHERE plane_name = 'Pilot27' LIMIT 1600000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1102,
    "db_id": "pilot_1",
    "question": "What is all the information about pilots who are younger than 30 ?",
    "answer": "SELECT DISTINCT pilot_name FROM (SELECT DISTINCT pilot_name FROM pilot_1.Hangar WHERE age < 30 ORDER BY pilot_name LIMIT 1) AS t ORDER BY pilot_name LIMIT 200894576815750000000000000000000000000000000000"
  },
  {
    "id": 1103,
    "db_id": "pilot_1",
    "question": "Find the names of all pilots who have a plane named Piper Cub and is under 35.",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.Hangar INNER JOIN (SELECT pilot_name , COUNT(plane_name ) AS num FROM pilot_1.Hangar GROUP BY pilot_name ORDER BY age LIMIT 20) AS T  ON pilot_1.pilot_name = 'Piper_Cub' LIMIT 100000000000000000"
  },
  {
    "id": 1104,
    "db_id": "pilot_1",
    "question": "What are the names of pilots who are younger than 35 and have a plane named Piper Cub?",
    "answer": "SELECT DISTINCT pilot_name FROM (SELECT DISTINCT pilot_name , plane_name FROM (SELECT plane_name , age FROM pilot_1.Hangar GROUP BY plane_name ORDER BY age LIMIT 3)) WHERE age < 35 ORDER BY pilot_name LIMIT 100000000692752806063466529934981"
  },
  {
    "id": 1105,
    "db_id": "pilot_1",
    "question": "Where is the plane F-14 Fighter located?",
    "answer": "SELECT DISTINCT location FROM pilot_1.Hangar WHERE pilot_name = 'F-14 Fighter' GROUP BY location ORDER BY location LIMIT 1;"
  },
  {
    "id": 1106,
    "db_id": "pilot_1",
    "question": "Return the location of the hangar in which F-14 Fighter is located.",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.Hangar WHERE plane_name = 'F-14 Fighter' LIMIT 1;"
  },
  {
    "id": 1107,
    "db_id": "pilot_1",
    "question": "How many different places have some plane?",
    "answer": "SELECT COUNT(location ) FROM (SELECT DISTINCT location FROM (SELECT DISTINCT plane_name FROM pilot_1.Hangar GROUP BY location ORDER BY location LIMIT 2)) AS T INNER JOIN pilot_1.Hangar ON Hangar.plane_name = PilotSkills.pilot_name ORDER BY location LIMIT 100000000000000000000000"
  },
  {
    "id": 1108,
    "db_id": "pilot_1",
    "question": "Count the number of different locations of hangars.",
    "answer": "SELECT COUNT(location ) FROM (SELECT DISTINCT location FROM pilot_1.Hangar GROUP BY location ORDER BY location LIMIT 1) AS T ORDER BY location LIMIT 100000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1109,
    "db_id": "pilot_1",
    "question": "Which plane does the pilot Jones with age 32 has?",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.Hangar WHERE location = 'North Dakota' GROUP BY pilot_name ORDER BY age LIMIT 1;"
  },
  {
    "id": 1110,
    "db_id": "pilot_1",
    "question": "What are the names of planes that the pilot Jones who is 32 has?",
    "answer": "SELECT DISTINCT plane_name FROM pilot_1.PilotSkills WHERE pilot_name = 'Jones' GROUP BY plane_name ORDER BY age LIMIT 10000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1111,
    "db_id": "pilot_1",
    "question": "How many pilots who are older than 40?",
    "answer": "SELECT COUNT(pilot_name ) FROM pilot_1.PilotSkills WHERE age > 40 GROUP BY pilot_name ORDER BY age LIMIT 1000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1112,
    "db_id": "pilot_1",
    "question": "Count the number of pilots with age greater than 40.",
    "answer": "SELECT COUNT(pilot_name ) FROM pilot_1.PilotSkills WHERE age > 40 GROUP BY pilot_name ORDER BY age LIMIT 1000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1113,
    "db_id": "pilot_1",
    "question": "How many plane B-52 Bomber owned by the pilot who is under 35?",
    "answer": "SELECT COUNT(pilot_name ) FROM (SELECT DISTINCT pilot_name , MAX(age ) AS age__from_table__ FROM pilot_1.PilotSkills WHERE plane_name = 'B-52 Bomber' GROUP BY pilot_name ORDER BY age LIMIT 1) AS t WHERE age < 35 INNER JOIN (SELECT DISTINCT pilot_name , MAX(age ) AS avg_age__from_"
  },
  {
    "id": 1114,
    "db_id": "pilot_1",
    "question": "Count the number of B-52 Bombers owned by pilots under 35.",
    "answer": "SELECT COUNT(pilot_name ) FROM pilot_1.Hangar WHERE age < (SELECT MAX(age ) FROM pilot_1.Hangar) GROUP BY pilot_name ORDER BY age LIMIT 1000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1115,
    "db_id": "pilot_1",
    "question": "Who is the youngest pilot to fly the plane Piper Cub?",
    "answer": "SELECT pilot_name FROM pilot_1.PilotSkills WHERE plane_name = 'Piper-Cub' ORDER BY age LIMIT 1;"
  },
  {
    "id": 1116,
    "db_id": "pilot_1",
    "question": "Return the name of the youngest pilot to fly Piper Cub.",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.PilotSkills ORDER BY age LIMIT 1;"
  },
  {
    "id": 1117,
    "db_id": "pilot_1",
    "question": "What is the name of the most popular plane?",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.PilotSkills GROUP BY pilot_name ORDER BY pilot_name LIMIT 1000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1118,
    "db_id": "pilot_1",
    "question": "What is the name of the plane that is flown the most often?",
    "answer": "SELECT DISTINCT pilot_name FROM (SELECT DISTINCT plane_name FROM pilot_1.Hangar GROUP BY plane_name ORDER BY Hangar.pilot_name LIMIT 1) AS T ORDER BY pilot_name LIMIT 1000000000000000000000000000000000000000000"
  },
  {
    "id": 1119,
    "db_id": "pilot_1",
    "question": "What is the name of the least popular plane?",
    "answer": "SELECT pilot_name FROM pilot_1.PilotSkills AS T INNER JOIN (SELECT PilotSkills.plane_name , COUNT(pilot_name ) FROM pilot_1.Hangar GROUP BY pilot_name ORDER BY PilotSkills.plane_name LIMIT 1) AS T  ON pilot_1.PilotSkills.plane_name = 'lc9874' ORDER BY"
  },
  {
    "id": 1120,
    "db_id": "pilot_1",
    "question": "What is the name of the plane that is flown the least often?",
    "answer": "SELECT DISTINCT plane_name FROM pilot_1.PilotSkills GROUP BY plane_name ORDER BY age LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1121,
    "db_id": "pilot_1",
    "question": "How many pilots whose planes are in Chicago?",
    "answer": "SELECT COUNT(*) FROM pilot_1.PilotSkills WHERE location = 'chicago' GROUP BY pilot_name ORDER BY location LIMIT 10000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1122,
    "db_id": "pilot_1",
    "question": "Count the number of pilots who have planes in Chicago.",
    "answer": "SELECT COUNT(pilot_name ) FROM (SELECT DISTINCT plane_name FROM pilot_1.Hangar WHERE location = 'Chicago' GROUP BY plane_name ORDER BY location LIMIT 1) AS T ORDER BY location LIMIT 200689534278940649716464701555389811646737299989"
  },
  {
    "id": 1123,
    "db_id": "pilot_1",
    "question": "What are the planes owned by pilot Smith with age 41?",
    "answer": "SELECT DISTINCT plane_name FROM pilot_1.Hangar WHERE pilot_name = 'Smith' GROUP BY plane_name ORDER BY age LIMIT 10000000168379522921914451585024710239368014327651410229717821926"
  },
  {
    "id": 1124,
    "db_id": "pilot_1",
    "question": "Return the names of planes owned by the pilot whose name is Smith and is 41 years old.",
    "answer": "SELECT DISTINCT pilot_name FROM (SELECT DISTINCT plane_name FROM pilot_1.Hangar GROUP BY pilot_name ORDER BY age LIMIT 1) AS T ORDER BY age LIMIT 1000137162594183980000000000000000000000000000000000"
  },
  {
    "id": 1125,
    "db_id": "pilot_1",
    "question": "How many distinct planes are owned across all pilots?",
    "answer": "SELECT COUNT(pilot_name ) FROM pilot_1.Hangar GROUP BY pilot_name ORDER BY PilotSkills.age LIMIT 100000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1126,
    "db_id": "pilot_1",
    "question": "Count the number of different plane names across all pilots.",
    "answer": "SELECT COUNT(pilot_name ) FROM pilot_1.PilotSkills GROUP BY pilot_name ORDER BY pilot_name LIMIT 1000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1127,
    "db_id": "pilot_1",
    "question": "How many planes are owned by the pilot whose name is Smith?",
    "answer": "SELECT COUNT(pilot_name ) FROM pilot_1.Hangar WHERE pilot_name = 'Smith' GROUP BY pilot_name ORDER BY plane_name LIMIT 200000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1128,
    "db_id": "pilot_1",
    "question": "Count the number of planes Smith owns.",
    "answer": "SELECT COUNT(pilot_name ) FROM pilot_1.Hangar AS T INNER JOIN pilot_1.PilotSkills AS S  ON pilot_1.pilot_name = pilot_1.pilot_name ORDER BY pilot_1.location LIMIT 10000000000000000000000000000000000"
  },
  {
    "id": 1129,
    "db_id": "pilot_1",
    "question": "How many planes are controlled by the pilots whose age is older than 40?",
    "answer": "SELECT COUNT(pilot_name ) FROM pilot_1.PilotSkills WHERE pilot_name = 'Roger' GROUP BY pilot_name ORDER BY age LIMIT 180162397508920300000000000000000000000000000000000000000000"
  },
  {
    "id": 1130,
    "db_id": "pilot_1",
    "question": "Count the number of planes flown by pilots older than 40.",
    "answer": "SELECT COUNT(*) FROM pilot_1.PilotSkills WHERE age > 30 GROUP BY pilot_name ORDER BY pilot_name LIMIT 1000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1131,
    "db_id": "pilot_1",
    "question": "Find the names of all pilots with age between 30 and 40 sorted by their ages in ascending order.",
    "answer": "SELECT DISTINCT pilot_name FROM (SELECT DISTINCT pilot_name , AVG(age ) AS avg FROM (SELECT pilot_name , AVG(age ) AS avg FROM pilot_1.Hangar ORDER BY age  DESC LIMIT 30) AS T ) AS T GROUP BY pilot_name ORDER BY age ;"
  },
  {
    "id": 1132,
    "db_id": "pilot_1",
    "question": "What are the names of pilots between the ages of 30 and 40, ordered by age ascending?",
    "answer": "SELECT DISTINCT pilot_name FROM (SELECT DISTINCT pilot_name FROM pilot_1.PilotSkills WHERE age > 30 ORDER BY age LIMIT 2) AS T INNER JOIN (SELECT plane_name , COUNT(pilot_name ) AS num FROM pilot_1.Hangar GROUP BY plane_name ORDER BY age LIMIT 10) AS B  ON PilotSkills.plane_name = 'Pil"
  },
  {
    "id": 1133,
    "db_id": "pilot_1",
    "question": "List all pilot names sorted by their ages in the descending order.",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.PilotSkills ORDER BY age LIMIT 1;"
  },
  {
    "id": 1134,
    "db_id": "pilot_1",
    "question": "What are the names of pilots, ordered by age descending?",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.Hangar GROUP BY pilot_name ORDER BY age LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1135,
    "db_id": "pilot_1",
    "question": "Find all locations of planes sorted by the plane name.",
    "answer": "SELECT DISTINCT pilot_name FROM (SELECT DISTINCT pilot_name FROM pilot_1.Hangar ORDER BY plane_name LIMIT 1) AS T WHERE location = 'planes' GROUP BY location ORDER BY location , plane_name LIMIT 100000000000000000000000000000000000000000"
  },
  {
    "id": 1136,
    "db_id": "pilot_1",
    "question": "What are the locations of the different planes, ordered by plane name?",
    "answer": "SELECT DISTINCT location FROM pilot_1.Hangar ORDER BY plane_name LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1137,
    "db_id": "pilot_1",
    "question": "List all distinct types of planes owned by all pilots in alphabetic order?",
    "answer": "SELECT DISTINCT plane_name FROM pilot_1.PilotSkills GROUP BY plane_name ORDER BY pilot_name LIMIT 10000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1138,
    "db_id": "pilot_1",
    "question": "What are the different plane names, ordered alphabetically?",
    "answer": "SELECT DISTINCT pilot_name FROM (SELECT DISTINCT pilot_name FROM pilot_1.Hangar ORDER BY pilot_name LIMIT 1) AS T INNER JOIN pilot_1.PilotSkills ON pilot_1.pilot_name = PilotSkills.plane_name ORDER BY pilot_name LIMIT 1000000000000000000"
  },
  {
    "id": 1139,
    "db_id": "pilot_1",
    "question": "How many pilots who are older than 40 or younger than 30?",
    "answer": "SELECT COUNT(pilot_name ) FROM (SELECT DISTINCT pilot_name FROM pilot_1.Hangar WHERE age > 30 ORDER BY PilotSkills.pilot_name , PilotSkills.plane_name LIMIT 1) AS t ORDER BY pilot_name LIMIT 250678671448277922885126341"
  },
  {
    "id": 1140,
    "db_id": "pilot_1",
    "question": "Count the number of pilots with age greater than 40 or less than 30.",
    "answer": "SELECT COUNT(pilot_name ) FROM (SELECT DISTINCT pilot_name FROM pilot_1.Hangar GROUP BY pilot_name ORDER BY age LIMIT 2) AS T INNER JOIN pilot_1.Hangar ON pilot_1.pilot_name = pilot_1.plane_name ORDER BY age LIMIT 500000000000000000000000"
  },
  {
    "id": 1141,
    "db_id": "pilot_1",
    "question": "What are the names and ages of pilots who own plane Piper Cub and are older than 35, or have F-14 Fighter and are younger than 30?",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.PilotSkills WHERE location = 'hanger' INNER JOIN (SELECT plane_name , MAX(age ) AS num FROM (SELECT DISTINCT pilot_name , location , SUM(pilot_name ), SUM(age ), AVG(pilot_name ) FROM pilot_1.Hangar WHERE location = 'hanger') AS T GROUP BY plane_"
  },
  {
    "id": 1142,
    "db_id": "pilot_1",
    "question": "Return the names and ages of pilors who have flown Piper Cub and are older than 35, or have flown the F-14 Fighter and are younger than 30.",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.PilotSkills AS T INNER JOIN (SELECT MAX(pilot_name ), SUM(age ) AS sum FROM pilot_1.Hangar GROUP BY pilot_1.plane_name ORDER BY pilot_1.plane_name , pilot_1.age LIMIT 5) AS T  ON pilot_1.pilot_name = 'T3629"
  },
  {
    "id": 1143,
    "db_id": "pilot_1",
    "question": "Find pilots who own plane Piper Cub but not B-52 Bomber.",
    "answer": "SELECT DISTINCT pilot_name FROM (SELECT DISTINCT pilot_name , plane_name FROM pilot_1.Hangar WHERE location = 'Piper Cubs'  INNER JOIN pilot_1.PilotSkills AS p  ON pilot_1.plane_name = pilot_1.pilot_name GROUP BY pilot_name ORDER BY pilot_name ) AS T ORDER BY pilot_name"
  },
  {
    "id": 1144,
    "db_id": "pilot_1",
    "question": "What are the names of pilots who have flown Piper Cub but not the B-52 Bomber?",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.Hangar INNER JOIN (SELECT PilotSkills.pilot_name , COUNT(PilotSkills.plane_name ) AS avg FROM pilot_1.PilotSkills GROUP BY PilotSkills.pilot_name ORDER BY pilot_name LIMIT 2) AS t  ON PilotSkills.plane_name = 'B-5"
  },
  {
    "id": 1145,
    "db_id": "pilot_1",
    "question": "Find pilots who own planes Piper Cub and B-52 Bomber.",
    "answer": "SELECT DISTINCT pilot_name FROM (SELECT DISTINCT pilot_name , plane_name FROM pilot_1.Hangar WHERE plane_name = 'Piper Cub' ORDER BY plane_name ) AS t INNER JOIN pilot_1.Hangar AS u  ON pilot_1.Hangar.pilot_name = pilot_1.Hangar.plane_name ORDER BY pilot_1"
  },
  {
    "id": 1146,
    "db_id": "pilot_1",
    "question": "What are the names of pilots who own both Piper Cub and the B-52 Bomber?",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.PilotSkills WHERE plane_name = 'Piper Cub' INNER JOIN (SELECT DISTINCT pilot_name FROM pilot_1.Hangar GROUP BY plane_name ) AS T  ON pilot_name = 'B-52 Bomber' ORDER BY location LIMIT 1;"
  },
  {
    "id": 1147,
    "db_id": "pilot_1",
    "question": "What are the average and smallest ages of all pilots?",
    "answer": "SELECT SUM(age ) FROM pilot_1.PilotSkills ORDER BY age LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1148,
    "db_id": "pilot_1",
    "question": "Return the average and minimum ages across all pilots.",
    "answer": "SELECT SUM(age ), AVG(age ), MIN(age ) FROM pilot_1.PilotSkills GROUP BY pilot_name ORDER BY age LIMIT 100000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1149,
    "db_id": "pilot_1",
    "question": "What are the names of pilots who have planes in both Austin and Boston?",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.Hangar INNER JOIN pilot_1.Hangar AS T  ON Hangar.plane_name = 'Austin' ORDER BY Hangar.pilot_name , plane_name  ASC \n      LIMIT 300000000000000000000000000000"
  },
  {
    "id": 1150,
    "db_id": "pilot_1",
    "question": "Give the names of pilots who have planes in Austin and Boston.",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.Hangar INNER JOIN (SELECT pilot_name , MAX(location ) AS min_latitude , MAX(location ) AS max_latitude FROM pilot_1.Hangar GROUP BY pilot_name ) AS T  ON pilot_1.pilot_name = 'Austin' ORDER BY pilot_name LIMIT 1;"
  },
  {
    "id": 1151,
    "db_id": "pilot_1",
    "question": "Find the pilots who have either plane Piper Cub or plane F-14 Fighter.",
    "answer": "SELECT DISTINCT pilot_name FROM (SELECT DISTINCT pilot_name , plane_name FROM pilot_1.Hangar WHERE location = 'Piper-Cub' ORDER BY location , plane_name ) AS T WHERE EXISTS (SELECT DISTINCT pilot_name FROM pilot_1.Hangar WHERE location = 'F-14 Fighter' LIMIT 2) GROUP BY pilot_name ORDER BY pilot_name"
  },
  {
    "id": 1152,
    "db_id": "pilot_1",
    "question": "What are the names of pilots who have either the Piper Cub or the F-14 Fighter?",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.Hangar INNER JOIN pilot_1.PilotSkills ON Hangar.pilot_name = pilot_1.pilot_name ORDER BY plane_name , location LIMIT 100000000000000000000000000000000000000000"
  },
  {
    "id": 1153,
    "db_id": "pilot_1",
    "question": "What is the average age of pilots for different types of planes?",
    "answer": "SELECT AVG(age ) FROM pilot_1.PilotSkills WHERE PilotSkills.pilot_name = 'hanger' GROUP BY PilotSkills.plane_name ORDER BY PilotSkills.plane_name , age LIMIT 1000000000000000000000000000000000000"
  },
  {
    "id": 1154,
    "db_id": "pilot_1",
    "question": "Return the average age of pilots for each plane name.",
    "answer": "SELECT SUM(pilot_name ), AVG(age ) FROM (SELECT pilot_name , plane_name FROM pilot_1.Hangar GROUP BY pilot_name ORDER BY PilotSkills.pilot_name LIMIT 1) AS T ORDER BY PilotSkills.pilot_name LIMIT 1500000000000000000000000"
  },
  {
    "id": 1155,
    "db_id": "pilot_1",
    "question": "Find the number of planes for each type.",
    "answer": "SELECT COUNT(pilot_name ), SUM(location ), COUNT(location ) FROM (SELECT DISTINCT pilot_name , plane_name , location FROM (SELECT DISTINCT plane_name , age FROM pilot_1.Hangar GROUP BY pilot_name , plane_name ORDER BY location LIMIT 2)) AS T INNER JOIN (SELECT DISTINCT pilot_name , location , age FROM pilot_1.Hangar GROUP BY pilot"
  },
  {
    "id": 1156,
    "db_id": "pilot_1",
    "question": "Count the number of entries for each plane name.",
    "answer": "SELECT COUNT(pilot_name ), SUM(location ) FROM pilot_1.Hangar GROUP BY pilot_name ORDER BY pilot_name LIMIT 20000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1157,
    "db_id": "pilot_1",
    "question": "Find the name of the oldest pilot for each type of plane, and order the results by plane name.",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.PilotSkills ORDER BY pilot_name LIMIT 20000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1158,
    "db_id": "pilot_1",
    "question": "What are the different plane names, and what are the names of the oldest pilot who has each, ordered by plane name?",
    "answer": "SELECT DISTINCT pilot_name FROM (SELECT DISTINCT pilot_name , COUNT(pilot_name ) AS num FROM pilot_1.Hangar GROUP BY pilot_name ORDER BY pilot_name LIMIT 1) AS T ORDER BY pilot_name LIMIT 5000000000000000000000000000000"
  },
  {
    "id": 1159,
    "db_id": "pilot_1",
    "question": "What are the names of oldest pilots for each type of plane?",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.Hangar ORDER BY plane_name LIMIT 2000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1160,
    "db_id": "pilot_1",
    "question": "Return the names of the different planes, as well as the names of the oldest pilots who flew each.",
    "answer": "SELECT DISTINCT plane_name , plane_name FROM pilot_1.PilotSkills WHERE age = (SELECT MAX(age ) FROM pilot_1.PilotSkills WHERE location = 'hangar' ORDER BY plane_name LIMIT 2) GROUP BY plane_name ORDER BY PilotSkills.location LIMIT 100346721506970860383413323"
  },
  {
    "id": 1161,
    "db_id": "pilot_1",
    "question": "Find the max age for each group of pilots with the same name.",
    "answer": "SELECT SUM(pilot_name ), MAX(age ) FROM pilot_1.Hangar GROUP BY pilot_1.pilot_name ORDER BY pilot_1.pilot_name , pilot_1.plane_name LIMIT 1500000000000000000000000000000000000000000000"
  },
  {
    "id": 1162,
    "db_id": "pilot_1",
    "question": "What are the different pilot names, and what are the maximum ages of pilots for each?",
    "answer": "SELECT DISTINCT pilot_name , MAX(age ) FROM (SELECT PilotSkills.pilot_name , SUM(PilotSkills.plane_name ) AS sum FROM (SELECT DISTINCT pilot_name , plane_name FROM pilot_1.Hangar GROUP BY pilot_name ORDER BY age LIMIT 1)) AS T INNER JOIN pilot_1.Hangar AS H  ON pilot_1.pil"
  },
  {
    "id": 1163,
    "db_id": "pilot_1",
    "question": "For each city, find the number and average age of pilots who have a plane.",
    "answer": "SELECT COUNT(pilot_name ), AVG(age ), SUM(pilot_name ), SUM(pilot_name ) FROM pilot_1.Hangar GROUP BY pilot_name ORDER BY PilotSkills.location , PilotSkills.pilot_name LIMIT 4000000000000000000000000000000"
  },
  {
    "id": 1164,
    "db_id": "pilot_1",
    "question": "What are the different hangar locations and how many pilots correspond to each. Also, what are their average ages?",
    "answer": "SELECT AVG(location ), SUM(pilot_name ), SUM(age ), COUNT(pilot_name ) FROM (SELECT DISTINCT location , COUNT(pilot_name ) AS num FROM (SELECT plane_name , PilotSkills.plane_name , pilot_name FROM pilot_1.Hangar GROUP BY Hangar.location ORDER BY pilot_name LIMIT 2) AS T WHERE PilotS"
  },
  {
    "id": 1165,
    "db_id": "pilot_1",
    "question": "Find the number of pilots for the plane types with average pilot age below 35.",
    "answer": "SELECT SUM(PilotSkills.pilot_name ), AVG(PilotSkills.age ) FROM (SELECT DISTINCT PilotSkills.plane_name , PilotSkills.age FROM pilot_1.Hangar AS T INNER JOIN pilot_1.Hangar AS T \n  AS T  ON pilot_1.pilot_name = 132097854668"
  },
  {
    "id": 1166,
    "db_id": "pilot_1",
    "question": "What are the different plane names of planes with an average pilot age of below 35, and how many pilots have flown each of them?",
    "answer": "SELECT AVG(pilot_name ), SUM(pilot_name ), COUNT(pilot_name ) FROM (SELECT DISTINCT plane_name , SUM(pilot_name ) AS avg FROM (SELECT DISTINCT pilot_name , location FROM (SELECT DISTINCT location FROM pilot_1.Hangar GROUP BY location ORDER BY PilotSkills.plane_name LIMIT 5)) AS T WHERE age < 3"
  },
  {
    "id": 1167,
    "db_id": "pilot_1",
    "question": "Find the location of the plane that is owned by the youngest pilot.",
    "answer": "SELECT DISTINCT pilot_name FROM (SELECT DISTINCT pilot_name , MAX(location ) AS x FROM (SELECT DISTINCT plane_name , plane_name FROM pilot_1.Hangar GROUP BY pilot_name ORDER BY age LIMIT 1) AS T INNER JOIN pilot_1.PilotSkills AS p  ON pilot_name = PilotSkills.pilot_name ORDER BY age LIMIT 1"
  },
  {
    "id": 1168,
    "db_id": "pilot_1",
    "question": "What is the location of the plane that was flown by the pilot with the lowest age?",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.Hangar WHERE pilot_name = 'LW297036' ORDER BY age LIMIT 1"
  },
  {
    "id": 1169,
    "db_id": "pilot_1",
    "question": "Find the name and age of pilots who have a plane in Austin.",
    "answer": "SELECT DISTINCT pilot_name , MAX(age ) FROM pilot_1.Hangar GROUP BY pilot_name ORDER BY location LIMIT 100000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1170,
    "db_id": "pilot_1",
    "question": "What are the names and ages of pilots who have planes located in Austin?",
    "answer": "SELECT DISTINCT pilot_name , SUM(age ) FROM (SELECT pilot_name , COUNT(pilot_name ) AS num FROM (SELECT plane_name , COUNT(pilot_name ) AS num FROM pilot_1.Hangar GROUP BY location ORDER BY pilot_name ), (SELECT DISTINCT pilot_name FROM pilot_1.Hangar WHERE location = 'Austin' GROUP BY pil"
  },
  {
    "id": 1171,
    "db_id": "pilot_1",
    "question": "List in alphabetic order the names of pilots whose age is greater than some pilots having plane Piper Cub.",
    "answer": "SELECT DISTINCT pilot_name FROM (SELECT DISTINCT PilotSkills.pilot_name FROM pilot_1.Hangar AS T INNER JOIN pilot_1.Hangar AS T  ON Hangar.plane_name = PilotSkills.plane_name ORDER BY pilot_name LIMIT 1) AS t ORDER BY age LIMIT 1000000000000000"
  },
  {
    "id": 1172,
    "db_id": "pilot_1",
    "question": "Return the names of pilots who are older than any pilot who has flown Piper Cub, ordered alphabetically.",
    "answer": "SELECT DISTINCT pilot_name FROM (SELECT DISTINCT plane_name FROM (SELECT pilot_name , age FROM pilot_1.PilotSkills WHERE location = 'PILOTS') AS T ORDER BY pilot_name , age LIMIT 1) AS T ORDER BY pilot_name LIMIT 1000192780051333640000000000"
  },
  {
    "id": 1173,
    "db_id": "pilot_1",
    "question": "Find the number of pilots whose age is younger than all pilots whose plane is F-14 Fighter.",
    "answer": "SELECT COUNT(pilot_name ) FROM (SELECT DISTINCT pilot_name FROM pilot_1.Hangar WHERE location = 'F-14 Fighter' GROUP BY pilot_name ORDER BY age LIMIT 1) AS T ORDER BY age LIMIT 10000000009726358911435629355646087831211"
  },
  {
    "id": 1174,
    "db_id": "pilot_1",
    "question": "How many pilots are younger than all pilots who own the F-14 Fighter?",
    "answer": "SELECT COUNT(pilot_name ) FROM pilot_1.Hangar INNER JOIN pilot_1.PilotSkills AS T  ON Hangar.plane_name = PilotSkills.pilot_name GROUP BY plane_name ORDER BY age LIMIT 1000000002056439380773017077316529374446"
  },
  {
    "id": 1175,
    "db_id": "pilot_1",
    "question": "Find all different planes whose names contain substring 'Bomber'.",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.Hangar WHERE plane_name = 'bomber' GROUP BY pilot_name ORDER BY PilotSkills.plane_name LIMIT 1000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1176,
    "db_id": "pilot_1",
    "question": "What are the different plane names that contain the word Bomber?",
    "answer": "SELECT DISTINCT pilot_name FROM pilot_1.Hangar WHERE pilot_name = 'bomber' GROUP BY pilot_name ORDER BY pilot_name LIMIT 100000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1177,
    "db_id": "pilot_1",
    "question": "Find the number of all pilots whose age is older than some pilot who has plane Piper Cub.",
    "answer": "SELECT COUNT(*) FROM pilot_1.PilotSkills AS T INNER JOIN (SELECT PilotSkills.pilot_name , SUM(PilotSkills.age ) AS total FROM pilot_1.PilotSkills WHERE age > 69 GROUP BY pilot_1.PilotSkills.pilot_name ORDER BY pilot_1.PilotSkills.pilot_name"
  },
  {
    "id": 1178,
    "db_id": "pilot_1",
    "question": "How many pilots are older than the youngest pilot who has Piper Cub?",
    "answer": "SELECT COUNT(pilot_name ) FROM (SELECT DISTINCT pilot_name , plane_name FROM pilot_1.PilotSkills WHERE age = (SELECT MIN(age ) FROM (SELECT MAX(age ), PilotSkills.plane_name FROM pilot_1.Hangar GROUP BY pilot_1.pilot_name ORDER BY PilotSkills.plane_name LIMIT 1)) ORDER BY pilot"
  },
  {
    "id": 1179,
    "db_id": "district_spokesman",
    "question": "Find the name of the district which has the largest area.",
    "answer": "SELECT DISTINCT Name FROM district_spokesman.district ORDER BY Area_km LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1180,
    "db_id": "district_spokesman",
    "question": "Select the area and government website of the district with the smallest population.",
    "answer": "SELECT SUM(Age ) AS total , Rank_position FROM (SELECT COUNT(Population ), Rank_position FROM district_spokesman.district GROUP BY District_ID ORDER BY Density_km LIMIT 1) AS x WHERE District_ID = 3840 GROUP BY District_ID ORDER BY Density_km LIMIT 1000000002596352722500"
  },
  {
    "id": 1181,
    "db_id": "district_spokesman",
    "question": "Find the names and populations of the districts whose area is greater than the average area.",
    "answer": "SELECT DISTINCT Name , SUM(Area_km ) AS sum FROM district_spokesman.district GROUP BY District_ID ORDER BY Age LIMIT 1000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1182,
    "db_id": "district_spokesman",
    "question": "Give me the biggest and average areas of all districts.",
    "answer": "SELECT SUM(Area_km ) AS avg FROM district_spokesman.district GROUP BY district_spokesman.district.Name ORDER BY Density_km LIMIT 10000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1183,
    "db_id": "district_spokesman",
    "question": "What is the total population of the districts whose areas are in the top 3?",
    "answer": "SELECT SUM(Spokesman_ID ), COUNT(Spokesman_ID ) FROM district_spokesman.district ORDER BY Population LIMIT 3 OFFSET 0"
  },
  {
    "id": 1184,
    "db_id": "district_spokesman",
    "question": "List the ids, names, and government websites of all districts sorted by population.",
    "answer": "SELECT DISTINCT district.Name , spokesman.Rank_position FROM district_spokesman.district AS T INNER JOIN (SELECT DISTINCT district_spokesman.district.District_ID FROM district_spokesman.district AS T INNER JOIN (SELECT district_spokesman.spokesman.Rank_position FROM district_spokesman.district AS T INNER JOIN (SELECT spokesman_"
  },
  {
    "id": 1185,
    "db_id": "district_spokesman",
    "question": "Find the names of districts whose government links use a 'gov' domain.",
    "answer": "SELECT DISTINCT Name FROM district_spokesman.district WHERE Government_website = 'gov' LIMIT 1"
  },
  {
    "id": 1186,
    "db_id": "district_spokesman",
    "question": "Return the ids and names of the districts whose population is larger than 4000 or area bigger than 3000.",
    "answer": "SELECT DISTINCT District_ID , Name FROM district_spokesman.district WHERE Population > (SELECT SUM(Points ) FROM (SELECT COUNT(District_ID ), SUM(Area_km ) AS sum FROM district_spokesman.district GROUP BY District_ID ORDER BY Density_km  DESC LIMIT 1) GROUP BY District_ID ORDER BY Density_km  DESC LIMIT 2500) LIMIT 1"
  },
  {
    "id": 1187,
    "db_id": "district_spokesman",
    "question": "Find all spokesman's names and speech titles.",
    "answer": "SELECT DISTINCT Name , Speach_title FROM (SELECT DISTINCT Name , Speach_title FROM district_spokesman.district GROUP BY Name ORDER BY Rank_position LIMIT 1) AS T INNER JOIN (SELECT Name , COUNT(Name ) AS num FROM (SELECT DISTINCT District_ID , COUNT(Rank_position ) FROM district_spokesman.district WHERE District_ID = '392"
  },
  {
    "id": 1188,
    "db_id": "district_spokesman",
    "question": "Find the average points and average ages of all spokesmen whose rank position is 1.",
    "answer": "SELECT SUM(Rank_position ) AS avg , AVG(Age ) AS avgs FROM (SELECT DISTINCT Rank_position FROM (SELECT DISTINCT spokesman.Points , COUNT(*) FROM (SELECT COUNT(Spokesman_ID ) FROM district_spokesman.spokesman GROUP BY District_ID ORDER BY Rank_position ) AS T WHERE Age = '1' GROUP BY District_ID ORDER BY"
  },
  {
    "id": 1189,
    "db_id": "district_spokesman",
    "question": "What are the names and points of spokesmen who are younger than 40?",
    "answer": "SELECT DISTINCT spokesman.Name FROM (SELECT DISTINCT COUNT(Spokesman_ID ) AS num , MAX(Age ) AS max FROM district_spokesman.spokesman GROUP BY Age ORDER BY Age LIMIT 1) AS T INNER JOIN (SELECT DISTINCT SUM(Points ) AS Points , MIN(Start_year ) AS minFROMspokesmanWHERESpokenID__r23596047__"
  },
  {
    "id": 1190,
    "db_id": "district_spokesman",
    "question": "Who is the oldest spokesman?",
    "answer": "SELECT DISTINCT MIN(Name ) FROM (SELECT DISTINCT Name FROM (SELECT Age , Rank_position FROM district_spokesman.spokesman ORDER BY Age LIMIT 1)) AS t ORDER BY Age LIMIT 1;"
  },
  {
    "id": 1191,
    "db_id": "district_spokesman",
    "question": "Which spokesman has lower points than the average?",
    "answer": "SELECT DISTINCT spokesman.Name FROM district_spokesman.spokesman AS T INNER JOIN (SELECT COUNT(Spokesman_ID ) AS num , AVG(Points ), Name FROM district_spokesman.spokesman GROUP BY Name ORDER BY Density_km LIMIT 1) AS T  ON spokesman.District_ID = Density_km GROUP BY spokesman.Name ORDER BY Density"
  },
  {
    "id": 1192,
    "db_id": "district_spokesman",
    "question": "Find the name of the district which has greatest number of spokesmen.",
    "answer": "SELECT DISTINCT Name FROM district_spokesman.district GROUP BY Name ORDER BY Rank_position LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1193,
    "db_id": "district_spokesman",
    "question": "Find the names of spokesmen who have served some district before 2004.",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT Spokesman_ID FROM (SELECT DISTINCT District_ID FROM district_spokesman.district WHERE Start_year > '1997' ORDER BY District_ID LIMIT 1) AS T INNER JOIN district_spokesman.spokesman AS S  ON Spokesman_ID = Spokesman_ID ORDER BY District_ID LIMIT 2000) AS T"
  },
  {
    "id": 1194,
    "db_id": "district_spokesman",
    "question": "Find the number of spokesmen for each district, and the show district names as well.",
    "answer": "SELECT COUNT(Name ), District_ID FROM (SELECT DISTINCT Spokesman_ID , District_ID FROM district_spokesman.district GROUP BY District_ID ) AS T ORDER BY District_ID ;"
  },
  {
    "id": 1195,
    "db_id": "district_spokesman",
    "question": "Find the names of the districts which have had both spokesman with rank position 1 and 2.",
    "answer": "SELECT DISTINCT Name FROM district_spokesman.district AS T ORDER BY Rank_position , Name LIMIT 2000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1196,
    "db_id": "district_spokesman",
    "question": "Find the names of districts which have more than one spokesman.",
    "answer": "SELECT DISTINCT District_ID FROM district_spokesman.spokesman WHERE Rank_position > 1 GROUP BY District_ID ORDER BY District_ID LIMIT 10000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1197,
    "db_id": "district_spokesman",
    "question": "Find the number of districts which have no spokesmen.",
    "answer": "SELECT COUNT(district.District_ID ) FROM district_spokesman.district AS T INNER JOIN (SELECT DISTINCT District_ID FROM district_spokesman.district GROUP BY District_ID ORDER BY Name LIMIT 1) AS T  ON district_spokesman.District_ID = district_spokesman.district.District_ID ORDER BY Name LIMIT 1000"
  },
  {
    "id": 1198,
    "db_id": "district_spokesman",
    "question": "Find the name of spokesmen who do not speak for any district.",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT District_ID , Start_year FROM district_spokesman.district WHERE District_ID = '' ORDER BY Rank_position LIMIT 1) AS T INNER JOIN (SELECT DISTINCT Spokesman_ID , COUNT(Rank_position ) FROM (SELECT DISTINCT District_ID , Start_year FROM district_spokesman.district GROUP BY District_"
  },
  {
    "id": 1199,
    "db_id": "district_spokesman",
    "question": "Find the total and average population of the districts which have some spokesman.",
    "answer": "SELECT SUM(Rank_position ), AVG(Rank_position ) FROM district_spokesman.spokesman WHERE District_ID = (SELECT DISTINCT District_ID FROM district_spokesman.spokesman ORDER BY Age LIMIT 1) GROUP BY District_ID ORDER BY Age LIMIT 5000000000000000000000000000000"
  },
  {
    "id": 1200,
    "db_id": "art_1",
    "question": "What is the title of the sculpture that was created in the most recent year ?",
    "answer": "SELECT title FROM (SELECT DISTINCT title FROM art_1.Sculptures WHERE artistID = '495362' ORDER BY title LIMIT 1) AS T INNER JOIN art_1.Paintings AS p  ON title = paintingID GROUP BY title ORDER BY year LIMIT 1;"
  },
  {
    "id": 1201,
    "db_id": "art_1",
    "question": "What is the name of the scuplture that was created most recently ?",
    "answer": "SELECT DISTINCT title FROM art_1.Paintings AS T WHERE Paintings.painterID = 2 LIMIT 1000000000586907342399349191010886228576194082735615251919753424926"
  },
  {
    "id": 1202,
    "db_id": "art_1",
    "question": "What is the title and location of the oldest painting ?",
    "answer": "SELECT title FROM (SELECT MAX(title ) AS s FROM (SELECT DISTINCT sculptureID , year , MAX(height_mm ), MAX(width_mm ) FROM art_1.Sculptures GROUP BY artistID ORDER BY height_mm LIMIT 1) AS T INNER JOIN (SELECT MIN(location ) AS l FROM (SELECT DISTINCT sculptureID , MIN(lname ) FROM art_1.Paintings WHERE deathYear > "
  },
  {
    "id": 1203,
    "db_id": "art_1",
    "question": "What is the name of the oldest painting and where is it located?",
    "answer": "SELECT title FROM (SELECT DISTINCT title FROM (SELECT MAX(paintingID ) AS x FROM art_1.Paintings GROUP BY artistID ORDER BY deathYear LIMIT 2)) AS T INNER JOIN (SELECT DISTINCT title FROM (SELECT MAX(title ) AS x FROM (SELECT DISTINCT sculptureID FROM art_1.Sculptures WHERE year >= '1947') AS T ORDER BY deathYear"
  },
  {
    "id": 1204,
    "db_id": "art_1",
    "question": "Find the names of all sculptures located in gallery 226.",
    "answer": "SELECT DISTINCT title FROM art_1.Paintings AS T , art_1.Sculptures AS S WHERE Sculptures.location = 'Gallery 226' LIMIT 100000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1205,
    "db_id": "art_1",
    "question": "What are the names of all sculptures in gallery 226?",
    "answer": "SELECT DISTINCT title FROM art_1.Sculptures WHERE location = 'gallery' GROUP BY title ORDER BY Paintings.year LIMIT 1000000000584750000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1206,
    "db_id": "art_1",
    "question": "List the title and location of all paintings.",
    "answer": "SELECT title FROM art_1.Paintings WHERE location = 'north america' ORDER BY title LIMIT 100000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1207,
    "db_id": "art_1",
    "question": "What are the paintings called and where are they located?",
    "answer": "SELECT title , COUNT(paintingID ) FROM art_1.Paintings GROUP BY paintingID ORDER BY location LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1208,
    "db_id": "art_1",
    "question": "List the title and location of all sculptures.",
    "answer": "SELECT title , lname , location FROM art_1.Paintings INNER JOIN art_1.Sculptures ON Paintings.artistID = Artists.artistID ORDER BY paintingID LIMIT 20 OFFSET 30000000004796854934879547385149797648549"
  },
  {
    "id": 1209,
    "db_id": "art_1",
    "question": "What are the sculptures called and where are they located?",
    "answer": "SELECT DISTINCT title FROM art_1.Paintings WHERE location = 'South East Asia' GROUP BY artistID ORDER BY location LIMIT 10000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1210,
    "db_id": "art_1",
    "question": "What are the medium types of the painting with id = 80",
    "answer": "SELECT DISTINCT medium FROM art_1.Paintings WHERE Paintings.painterID = '73' LIMIT 100000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1211,
    "db_id": "art_1",
    "question": "What mediums were used for the painting with id 80 ?",
    "answer": "SELECT DISTINCT title FROM art_1.Paintings AS T , art_1.Sculptures AS S WHERE artistID = '80' GROUP BY title ORDER BY title LIMIT 2;"
  },
  {
    "id": 1212,
    "db_id": "art_1",
    "question": "Find the first and last names of all artists who were born after 1850.",
    "answer": "SELECT DISTINCT fname FROM art_1.Artists WHERE birthYear > '1790' LIMIT 1;"
  },
  {
    "id": 1213,
    "db_id": "art_1",
    "question": "What are the full names of artists born after 1850?",
    "answer": "SELECT fname , title FROM art_1.Artists WHERE birthYear > '1790' LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1214,
    "db_id": "art_1",
    "question": "Find the names and years of all sculptures that are not located in gallery 226.",
    "answer": "SELECT DISTINCT title FROM art_1.Paintings INNER JOIN art_1.Sculptures ON Paintings.painterID = Sculptures.sculptorID ORDER BY location LIMIT 100 OFFSET 3640097555798260000000"
  },
  {
    "id": 1215,
    "db_id": "art_1",
    "question": "What are the names and dates created for all sculptures not located in gallery 226?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT title , year FROM art_1.Sculptures WHERE location = 'gallery 226' ORDER BY year LIMIT 3) AS T ORDER BY year LIMIT 0 OFFSET 1500000000000000000000000000000000000000000"
  },
  {
    "id": 1216,
    "db_id": "art_1",
    "question": "What are the first and last names of all distinct artists who made sculptures before 1900?",
    "answer": "SELECT DISTINCT artistID FROM (SELECT DISTINCT artistID FROM (SELECT Paintings.title , year , COUNT(Paintings.painterID ) AS num , MAX(year ) AS y FROM (SELECT title FROM (SELECT title , year , COUNT(Paintings.artistID ) AS num , MAX(year ) AS y FROM (SELECT Paintings.title , year , artistID FROM (SELECT DIST"
  },
  {
    "id": 1217,
    "db_id": "art_1",
    "question": "What is the first and last name of each distinct artists who made a sculpture before 1900?",
    "answer": "SELECT DISTINCT artistID FROM (SELECT DISTINCT artistID FROM (SELECT * FROM art_1.Sculptures AS T INNER JOIN (SELECT DISTINCT artistID , year FROM art_1.Paintings WHERE artistID > 99 ORDER BY artistID LIMIT 1) AS P  ON Paintings.artistID = Artists.artistID ORDER BY artistID LIMIT 1) AS A INNER JOIN (SELECT DISTINCT artist"
  },
  {
    "id": 1218,
    "db_id": "art_1",
    "question": "Find the birth years of all distinct artists who made sculptures after 1920?",
    "answer": "SELECT MAX(birthYear ) FROM art_1.Artists WHERE deathYear > '1754' GROUP BY artistID ORDER BY lname , deathYear LIMIT 1;"
  },
  {
    "id": 1219,
    "db_id": "art_1",
    "question": "What is the birth year of each distinct artists who created sculptures after 1920?",
    "answer": "SELECT MAX(birthYear ) FROM art_1.Artists WHERE deathYear > '1758' GROUP BY artistID ORDER BY artistID LIMIT 10000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1220,
    "db_id": "art_1",
    "question": "What are the first and last names of the artist who lived the longest?",
    "answer": "SELECT fname FROM (SELECT DISTINCT title , MAX(year ), MIN(year ) FROM (SELECT DISTINCT artistID FROM art_1.Artists WHERE deathYear  > 1923 GROUP BY artistID ORDER BY lname LIMIT 1) AS T INNER JOIN art_1.Paintings AS p  ON title = Paintings.paintingID ORDER BY painterID LIMIT 1) AS T"
  },
  {
    "id": 1221,
    "db_id": "art_1",
    "question": "Give the full name of the artist who lived the longest.",
    "answer": "SELECT lname FROM art_1.Artists WHERE deathYear  >  2039 ORDER BY deathYear LIMIT 1;"
  },
  {
    "id": 1222,
    "db_id": "art_1",
    "question": "What is the age of the artist who had the shortest life?",
    "answer": "SELECT DISTINCT title FROM (SELECT MAX(title ) AS T2 , year FROM art_1.Artists WHERE lname = 'Tonya Smith' ORDER BY year LIMIT 1) AS T INNER JOIN art_1.Paintings ON title = title ORDER BY title LIMIT 1000000003682091471560"
  },
  {
    "id": 1223,
    "db_id": "art_1",
    "question": "How old is the artist who lived the shortest life?",
    "answer": "SELECT MIN(birthYear ) FROM art_1.Artists WHERE deathYear = '2037' GROUP BY artistID ORDER BY deathYear LIMIT 1;"
  },
  {
    "id": 1224,
    "db_id": "art_1",
    "question": "What are the first name and age of the artist who had the longest life?",
    "answer": "SELECT fname , year FROM art_1.Artists ORDER BY lname LIMIT 200000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1225,
    "db_id": "art_1",
    "question": "What is the first name and age of the artist who lived the longest?",
    "answer": "SELECT DISTINCT fname FROM art_1.Artists ORDER BY birthYear LIMIT 201512241693487100000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1226,
    "db_id": "art_1",
    "question": "How many paintings are exhibited at gallery 240?",
    "answer": "SELECT COUNT(title ) FROM art_1.Paintings WHERE location = 'gallery' GROUP BY location ORDER BY title LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1227,
    "db_id": "art_1",
    "question": "What is the total number of paintings exhibited in gallery 240?",
    "answer": "SELECT COUNT(title ) FROM art_1.Paintings AS T WHERE title = 'Gallery 240' GROUP BY title ORDER BY title LIMIT 10000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1228,
    "db_id": "art_1",
    "question": "How many paintings did the artist with the longest life make ?",
    "answer": "SELECT COUNT(title ) FROM art_1.Paintings WHERE artistID = 9074835286824331000 LIMIT 120464064601711914686517336950836464012738148341626144584922"
  },
  {
    "id": 1229,
    "db_id": "art_1",
    "question": "What is the painting count of the artist with the longest life ?",
    "answer": "SELECT COUNT(title ) FROM art_1.Artists WHERE artistID = 7603 ORDER BY year LIMIT 12549285540171130340014505702771119742825970046459028433943234656444535912"
  },
  {
    "id": 1230,
    "db_id": "art_1",
    "question": "Give me a list of names and years of paintings that were created by the artist whose first name is Mary.",
    "answer": "SELECT DISTINCT title FROM art_1.Paintings WHERE fname = 'Mary' ORDER BY deathYear LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1231,
    "db_id": "art_1",
    "question": "What is the name and year of each painting created by the artist whose first name is Mary?",
    "answer": "SELECT DISTINCT title FROM art_1.Paintings WHERE lname = 'Mary' ORDER BY Paintings.year LIMIT 10000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1232,
    "db_id": "art_1",
    "question": "What are the widths of the paintings that were created by the artist who was born before 1850?",
    "answer": "SELECT DISTINCT MAX(width_mm ) FROM art_1.Paintings WHERE artistID = 'a94e6b29-3d7c-44c4-ae5f-c449dca61ce0' LIMIT 1;"
  },
  {
    "id": 1233,
    "db_id": "art_1",
    "question": "How wide were the paintings by the artist who was born prior to 1850?",
    "answer": "SELECT DISTINCT SUM(height_mm ) AS width_mm FROM (SELECT title , MAX(year ) AS max FROM art_1.Paintings WHERE Paintings.deathYear > '1924' GROUP BY year ORDER BY year LIMIT 1) AS x INNER JOIN art_1.Artists AS T  ON title = title LIMIT 100000000000"
  },
  {
    "id": 1234,
    "db_id": "art_1",
    "question": "What are the location and medium type of paintings that are created by the artist whose first name is Pablo?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT title , MIN(medium ), MAX(medium ) AS jm FROM art_1.Paintings GROUP BY artistID ORDER BY lname , deathYear LIMIT 1) AS T ORDER BY title LIMIT 200000000000000000000000000000000000"
  },
  {
    "id": 1235,
    "db_id": "art_1",
    "question": "In what locations and on what mediums are the paintings created by the artist with the first name Pablo?",
    "answer": "SELECT DISTINCT title FROM art_1.Artists AS T INNER JOIN (SELECT DISTINCT location , medium FROM art_1.Paintings ORDER BY year , medium LIMIT 1) AS P  ON Paintings.painterID = Paintings.painterID GROUP BY Paintings.artistID ORDER BY title LIMIT 1 OFFSET 15469382"
  },
  {
    "id": 1236,
    "db_id": "art_1",
    "question": "Find the first and last names of the artists who have both works of paintings and sculptures?",
    "answer": "SELECT DISTINCT fname FROM art_1.Artists GROUP BY fname ORDER BY year LIMIT 1;"
  },
  {
    "id": 1237,
    "db_id": "art_1",
    "question": "Give the full names of artists who have created paintings and sculptures.",
    "answer": "SELECT DISTINCT fname FROM art_1.Artists GROUP BY artistID ORDER BY title , lname LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1238,
    "db_id": "art_1",
    "question": "What are the first and last names of the artists who have not only medium oil paintings but also paintings with the lithographic medium?",
    "answer": "SELECT DISTINCT fname FROM (SELECT DISTINCT title FROM art_1.Paintings WHERE location = 'medium' INNER JOIN art_1.Artists ON title = artistID ORDER BY location LIMIT 2) AS T INNER JOIN art_1.Paintings AS A  ON Artists.artistID = Artists.artistID GROUP BY fname ORDER BY title LIMIT 2"
  },
  {
    "id": 1239,
    "db_id": "art_1",
    "question": "What are the first and last names of artists who have painted using both oil and lithographic mediums?",
    "answer": "SELECT DISTINCT artistID FROM (SELECT DISTINCT artistID , title , lname FROM (SELECT DISTINCT title , lname FROM (SELECT artistID , medium FROM (SELECT DISTINCT medium , lname FROM (SELECT DISTINCT Artists.artistID , Artists.location , Artists.medium FROM art_1.Artists AS T WHERE artistID = 2408) AS T INNER JOIN (SELECT"
  },
  {
    "id": 1240,
    "db_id": "art_1",
    "question": "What is the birth year of the artist who created a painting in 1884 that is on canvas?",
    "answer": "SELECT MAX(birthYear ) FROM art_1.Paintings WHERE Paintings.title = 'Muse (Glass) (Watercolor)' GROUP BY birthYear ORDER BY birthYear LIMIT 100000000749285365740000000000000000000000000000000000"
  },
  {
    "id": 1241,
    "db_id": "art_1",
    "question": "In what year was the artist who created a painting in 1884 born?",
    "answer": "SELECT MAX(year ) FROM art_1.Artists WHERE lname = 'JAMES CHAMBERLAIN' GROUP BY year ORDER BY year LIMIT 1000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1242,
    "db_id": "art_1",
    "question": "What are the unique first names of the artists who had medium oil paintings located in gallery 241?",
    "answer": "SELECT DISTINCT fname FROM art_1.Artists WHERE location = 'Gallery' GROUP BY fname ORDER BY Paintings.height_mm LIMIT 1000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1243,
    "db_id": "art_1",
    "question": "What are first names of the artists with oil paintings in gallery 241?",
    "answer": "SELECT fname FROM (SELECT DISTINCT title FROM art_1.Artists INNER JOIN art_1.Paintings ON Artists.artistID = art_1.Artists.artistID ORDER BY title LIMIT 2) AS T WHERE title = 'Gallery241' GROUP BY fname ORDER BY fname LIMIT 10000000000000000"
  },
  {
    "id": 1244,
    "db_id": "art_1",
    "question": "What are the numbers of works for different medium type?",
    "answer": "SELECT COUNT(paintingID ) FROM (SELECT DISTINCT title , year FROM art_1.Paintings WHERE medium = 'Paintings' GROUP BY medium ORDER BY year LIMIT 2) AS T INNER JOIN (SELECT DISTINCT title , title FROM art_1.Sculptures WHERE medium = 'Sculpture') AS S  ON Sculptures.paintingID =  art_1.Paintings."
  },
  {
    "id": 1245,
    "db_id": "art_1",
    "question": "How many works are there in each medium?",
    "answer": "SELECT COUNT(paintingID ) FROM (SELECT DISTINCT medium , artistID FROM (SELECT DISTINCT medium , artistID FROM art_1.Paintings GROUP BY medium ORDER BY Paintings.year LIMIT 3) AS t ORDER BY title , paintingID LIMIT 50) AS T INNER JOIN (SELECT DISTINCT medium , COUNT(artistID ) AS total FROM (SELECT DISTINCT artistID"
  },
  {
    "id": 1246,
    "db_id": "art_1",
    "question": "What are the average height of paintings for different medium types?",
    "answer": "SELECT AVG(height_mm ) FROM (SELECT DISTINCT medium , title FROM (SELECT title , year , height_mm FROM art_1.Paintings WHERE location = 'North Wall' GROUP BY medium ORDER BY height_mm LIMIT 5) AS T ORDER BY medium LIMIT 4) AS T GROUP BY medium ORDER BY height_mm LIMIT 3006894751283485234516"
  },
  {
    "id": 1247,
    "db_id": "art_1",
    "question": "What is the average height of paintings for different medium types?",
    "answer": "SELECT AVG(height_mm ) FROM (SELECT DISTINCT medium , COUNT(paintingID ) AS num FROM art_1.Paintings GROUP BY medium ORDER BY medium ) AS A GROUP BY medium ORDER BY Artists.lname LIMIT 200000000000000000000000000000000000000000"
  },
  {
    "id": 1248,
    "db_id": "art_1",
    "question": "What are the numbers of paintings created before 1900 in different places?",
    "answer": "SELECT SUM(year ) FROM (SELECT DISTINCT year , artistID FROM art_1.Paintings WHERE location = 'Tokyo' GROUP BY artistID ORDER BY year LIMIT 3) AS T ORDER BY year LIMIT 3;"
  },
  {
    "id": 1249,
    "db_id": "art_1",
    "question": "How many paintings were created before 1900 in different locations?",
    "answer": "SELECT COUNT(title ) FROM art_1.Paintings WHERE artistID = '935' ORDER BY year LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1250,
    "db_id": "art_1",
    "question": "What are the titles of paintings that are created after 1910 and whose medium is oil?",
    "answer": "SELECT title FROM (SELECT DISTINCT title FROM art_1.Paintings WHERE medium = 'oil' LIMIT 1) AS T ORDER BY year LIMIT 1000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1251,
    "db_id": "art_1",
    "question": "Give the names of all oil paintings created after 1910.",
    "answer": "SELECT DISTINCT lname FROM art_1.Paintings WHERE artistID = 3827 LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1252,
    "db_id": "art_1",
    "question": "Find the unique id of the painters who had medium oil paintings exhibited at gallery 240?",
    "answer": "SELECT DISTINCT painterID FROM art_1.Artists WHERE mediumOn = 'oil' GROUP BY painterID ORDER BY painterID LIMIT 199718935689433288500000000000000000000000000000000000000000000"
  },
  {
    "id": 1253,
    "db_id": "art_1",
    "question": "What is the unique id of every painter who had a medium oil painting displayed at gallery 240?",
    "answer": "SELECT DISTINCT painterID FROM (SELECT DISTINCT artistID FROM (SELECT title FROM (SELECT title , year , medium , location , sculptorID FROM art_1.Paintings WHERE medium = 'oil') AS T ) INNER JOIN (SELECT DISTINCT artistID , year FROM (SELECT title , year , medium FROM art_1.Sculptures GROUP BY artistID ORDER BY year LIMIT 2)) AS T  ON t"
  },
  {
    "id": 1254,
    "db_id": "art_1",
    "question": "Find the distinct titles of all the paintings that have a longer height than some painting on canvas?",
    "answer": "SELECT DISTINCT title FROM art_1.Paintings WHERE height_mm > 346890745006266000 INNER JOIN (SELECT title FROM art_1.Artists WHERE artistID = '7676453') AS T  ON title = Artists.artistID ORDER BY height_mm LIMIT 1;"
  },
  {
    "id": 1255,
    "db_id": "art_1",
    "question": "What are the distinct titles of every painting that has a greater height than some painting on canvas?",
    "answer": "SELECT title FROM (SELECT DISTINCT title FROM (SELECT DISTINCT title FROM art_1.Paintings WHERE height_mm > 3000 LIMIT 1)) AS T ORDER BY height_mm LIMIT 1249375668848920283746468522597497973696289143949"
  },
  {
    "id": 1256,
    "db_id": "art_1",
    "question": "Find the distinct ids of all paintings that are older than some painting at location gallery 240.",
    "answer": "SELECT DISTINCT title FROM art_1.Paintings AS T WHERE location = 'gallery' ORDER BY year LIMIT 100000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1257,
    "db_id": "art_1",
    "question": "What are the distinct ids of every painting that is older than some painting in gallery 240?",
    "answer": "SELECT COUNT(paintingID ) FROM art_1.Paintings INNER JOIN art_1.Sculptures AS T  ON Artists.artistID = Artists.painterID GROUP BY artistID ORDER BY Artists.year LIMIT 2500000000000000000000000000000000000000"
  },
  {
    "id": 1258,
    "db_id": "art_1",
    "question": "Find the id of the oldest painting.",
    "answer": "SELECT title FROM (SELECT MAX(paintingID ) AS id , year FROM (SELECT MAX(year ), MAX(deathYear ) AS id FROM art_1.Paintings) AS T ORDER BY year LIMIT 1) AS T GROUP BY title ORDER BY year LIMIT 205789460533699000000000000000000"
  },
  {
    "id": 1259,
    "db_id": "art_1",
    "question": "What is the id of the oldest painting?",
    "answer": "SELECT MAX(paintingID ) FROM (SELECT DISTINCT title , MAX(year ) AS min FROM art_1.Paintings GROUP BY title ORDER BY year LIMIT 1) AS T GROUP BY title ORDER BY title , title , year LIMIT 20485754691084380883000000"
  },
  {
    "id": 1260,
    "db_id": "art_1",
    "question": "What are the first and last name of the artist who had a sculpture work whose title has the word \u201cfemale\u201d in it?",
    "answer": "SELECT DISTINCT fname FROM art_1.Artists WHERE lname = 'Mirza Yusuf Khan' ORDER BY fname LIMIT 10000000096632480000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1261,
    "db_id": "art_1",
    "question": "What is the full name of the artist with a sculpture whose title includes the word \"female\"?",
    "answer": "SELECT DISTINCT title FROM art_1.Sculptures AS T INNER JOIN art_1.Artists AS T  ON title = 'Male' GROUP BY title ORDER BY title LIMIT 2640578632839327960000000000000000000000000000"
  },
  {
    "id": 1262,
    "db_id": "art_1",
    "question": "List the names of all distinct paintings in alphabetical order.",
    "answer": "SELECT DISTINCT title FROM art_1.Paintings ORDER BY artistID LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1263,
    "db_id": "art_1",
    "question": "What is the name of every distinct painting in alphabetical order?",
    "answer": "SELECT DISTINCT title FROM art_1.Paintings ORDER BY artistID LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1264,
    "db_id": "art_1",
    "question": "List the names of all distinct paintings ordered by length.",
    "answer": "SELECT DISTINCT title FROM art_1.Paintings ORDER BY lname LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1265,
    "db_id": "art_1",
    "question": "List the names of all distinct paintings from shortest to longest in height.",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT title FROM (SELECT MAX(title ), year , title FROM art_1.Paintings GROUP BY year ORDER BY height_mm LIMIT 1) AS T ORDER BY title LIMIT 1) WHERE title = 'shortest to longest' LIMIT 100000000258901472378610995210109"
  },
  {
    "id": 1266,
    "db_id": "art_1",
    "question": "What are the names of both paintings and sculptures created between 1900 and 1950?",
    "answer": "SELECT DISTINCT title FROM art_1.Paintings WHERE year > (SELECT MAX(year ) FROM art_1.Paintings WHERE artistID = '49681') INNER JOIN art_1.Sculptures AS T  ON Paintings.paintingID = Sculptures.sculptureID LIMIT 10 OFFSET 3511271992592551"
  },
  {
    "id": 1267,
    "db_id": "art_1",
    "question": "What are the names of  paintings and scupltures created between 1900 and 1950?",
    "answer": "SELECT DISTINCT title FROM art_1.Paintings WHERE deathYear  <  1923 GROUP BY title ORDER BY deathYear LIMIT 1000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1268,
    "db_id": "art_1",
    "question": "Find the titles of paintings and sculpture works made by the artist whose id is 222?",
    "answer": "SELECT title FROM art_1.Paintings INNER JOIN art_1.Paintings AS T  ON Paintings.painterID = Artists.artistID ORDER BY Artists.deathYear LIMIT 1;"
  },
  {
    "id": 1269,
    "db_id": "art_1",
    "question": "What are the titles of all paintings and sculpture works made by the artist whose id is 222?",
    "answer": "SELECT title FROM art_1.Paintings INNER JOIN art_1.Artists AS T  ON Paintings.artistID = Artists.artistID ORDER BY Artists.deathYear LIMIT 1000 OFFSET 50000000984378426400119705215037626790492156"
  },
  {
    "id": 1270,
    "db_id": "art_1",
    "question": "What is the id of the artist who has the highest number of painting works before 1900?",
    "answer": "SELECT MAX(title ) FROM (SELECT DISTINCT title , year FROM (SELECT COUNT(title ), title , SUM(year ) AS num FROM (SELECT DISTINCT title , artistID , MAX(year ) AS y FROM (SELECT DISTINCT title , artistID FROM (SELECT artistID , SUM(year ) AS num FROM (SELECT DISTINCT year , artistID FROM (SELECT DISTINCT artistID , MAX(year ) AS y"
  },
  {
    "id": 1271,
    "db_id": "art_1",
    "question": "What is the id of the artist with the most paintings before 1900?",
    "answer": "SELECT MAX(title ) FROM (SELECT DISTINCT title FROM art_1.Artists WHERE deathYear < 1857 ORDER BY birthYear LIMIT 1) GROUP BY title ORDER BY title LIMIT 1000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1272,
    "db_id": "art_1",
    "question": "What is the first name of the artist who has the highest number of sculptures?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT artistID , MAX(height_mm ) AS maxHeight FROM art_1.Sculptures GROUP BY artistID ORDER BY height_mm LIMIT 1) AS T WHERE title = 'Giuseppe Giustino' ORDER BY title LIMIT 1;"
  },
  {
    "id": 1273,
    "db_id": "art_1",
    "question": "What is the first name of the sculptor with the greatest number of works?",
    "answer": "SELECT DISTINCT fname FROM art_1.Sculptures WHERE artistID = (SELECT MAX(artistID ) FROM art_1.Artists GROUP BY artistID ORDER BY artistID LIMIT 1) LIMIT 1000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1274,
    "db_id": "art_1",
    "question": "What are the names of paintings whose width is less than 600 or height is larger than 800?",
    "answer": "SELECT title FROM art_1.Paintings WHERE width_mm < 45920000 ORDER BY height_mm  DESC LIMIT 160017453666101351358641258300529245001366834679410000844155529"
  },
  {
    "id": 1275,
    "db_id": "art_1",
    "question": "What are the titles of paintings that have a width less than 600 or a height taller taller than 800?",
    "answer": "SELECT DISTINCT title FROM art_1.Paintings WHERE height_mm < (SELECT MAX(height_mm ) FROM art_1.Paintings) ORDER BY width_mm , height_mm , height_mm LIMIT 20000000169788645000100034004523005818126691"
  },
  {
    "id": 1276,
    "db_id": "art_1",
    "question": "Which locations have paintings created before 1885 or after 1930?",
    "answer": "SELECT DISTINCT location FROM art_1.Paintings WHERE year > 1722 ORDER BY year  ASC  LIMIT 100000000146628500153359621414845040945005394844598588725374261262"
  },
  {
    "id": 1277,
    "db_id": "art_1",
    "question": "What locations have works painted before 1885 or after 1930?",
    "answer": "SELECT DISTINCT location FROM art_1.Sculptures WHERE year > (SELECT MAX(year ) FROM art_1.Sculptures WHERE artistID = '716') ORDER BY year LIMIT 2000593384266462396589261462369558918833926525668946"
  },
  {
    "id": 1278,
    "db_id": "art_1",
    "question": "Find the ids of paintings whose height is bigger than 500 and less than 2000?",
    "answer": "SELECT DISTINCT artistID FROM (SELECT MAX(height_mm ) AS id1 , COUNT(artistID ) AS num FROM (SELECT DISTINCT title , year , height_mm FROM (SELECT title , year , height_mm FROM (SELECT title FROM art_1.Paintings ORDER BY height_mm LIMIT 2000) WHERE location = 'outer' GROUP BY artistID ORDER BY height_mm LIMIT 1)) AS T ORDER BY height"
  },
  {
    "id": 1279,
    "db_id": "art_1",
    "question": "What are the ids of paintings that are taller than 500 and shorter than 2000?",
    "answer": "SELECT DISTINCT title FROM art_1.Paintings WHERE height_mm < 2000 ORDER BY lname LIMIT 500 OFFSET 600"
  },
  {
    "id": 1280,
    "db_id": "art_1",
    "question": "Which locations have paintings in the mediums of on panel and on canvas?",
    "answer": "SELECT DISTINCT location FROM art_1.Sculptures WHERE medium = 'on canvas' GROUP BY location ORDER BY location LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1281,
    "db_id": "art_1",
    "question": "What are the locations that have paintings in the mediums of on panels and on canvas?",
    "answer": "SELECT DISTINCT location FROM art_1.Paintings WHERE medium = 'on panels' GROUP BY location ORDER BY location LIMIT 100000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1282,
    "db_id": "art_1",
    "question": "Find the locations that have paintings created before 1885 and after 1930?",
    "answer": "SELECT DISTINCT location FROM art_1.Paintings WHERE Paintings.year < 2014 INNER JOIN art_1.Sculptures ON Sculptures.painterID = Artists.artistID LIMIT 1;"
  },
  {
    "id": 1283,
    "db_id": "art_1",
    "question": "What are the locations that have works painted before 1885 and after 1930?",
    "answer": "SELECT DISTINCT location FROM art_1.Sculptures WHERE year > '1720' ORDER BY artistID LIMIT 1600000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1284,
    "db_id": "art_1",
    "question": "What are the average height and width of paintings that are oil medium in the place of gallery 241?",
    "answer": "SELECT AVG(height_mm ) AS avg , SUM(width_mm ) AS sum FROM (SELECT title , SUM(height_mm ) AS sum FROM (SELECT DISTINCT artistID , location , medium , mediumOn FROM art_1.Paintings WHERE medium = 'oil') WHERE artistID = '17639289' GROUP BY medium , artistID ORDER BY Paintings.medium , Paintings.year LIMIT"
  },
  {
    "id": 1285,
    "db_id": "art_1",
    "question": "What is the average height and width of paintings that are oil medium in gallery 241?",
    "answer": "SELECT SUM(height_mm ) AS avg , SUM(width_mm ) AS avg FROM (SELECT SUM(height_mm ), SUM(width_mm ) FROM (SELECT title , medium FROM art_1.Paintings WHERE Paintings.medium = 'OIL' GROUP BY Paintings.medium ORDER BY height_mm LIMIT 3) AS T WHERE artistID = '2497085') AS a INNER"
  },
  {
    "id": 1286,
    "db_id": "art_1",
    "question": "What are the maximum height and id of paintings painted before 1900?",
    "answer": "SELECT MAX(height_mm ) AS max_h , painterID FROM (SELECT DISTINCT MAX(height_mm ), year FROM art_1.Paintings WHERE lname = 'Roberto Pettinato' ORDER BY birthYear LIMIT 1) AS T WHERE painterID = (SELECT artistID FROM (SELECT artistID , SUM(lname ) AS num FROM art_1.Sculptures GROUP BY artistID ORDER"
  },
  {
    "id": 1287,
    "db_id": "art_1",
    "question": "What is the height and id of the tallest painting created before 1900?",
    "answer": "SELECT DISTINCT MAX(height_mm ) AS id FROM art_1.Sculptures WHERE year < '2007' GROUP BY artistID ORDER BY height_mm LIMIT 1;"
  },
  {
    "id": 1288,
    "db_id": "art_1",
    "question": "What are the maximum height and width of paintings for each year?",
    "answer": "SELECT MAX(height_mm ), MAX(width_mm ) FROM (SELECT MAX(height_mm ) AS height_mm , MAX(width_mm ) AS width_mm FROM art_1.Paintings GROUP BY artistID ORDER BY year LIMIT 5) AS T ORDER BY year LIMIT 400002786931911455000000000000000000"
  },
  {
    "id": 1289,
    "db_id": "art_1",
    "question": "What are largest height and width dimensions for paintings in each year?",
    "answer": "SELECT MAX(height_mm ), MAX(width_mm ) FROM (SELECT DISTINCT Paintings.year , SUM(Paintings.height_mm ) AS x , SUM(Paintings.width_mm ) AS y FROM (SELECT DISTINCT artistID , SUM(birthYear ) AS xx , SUM(deathYear ) AS yy FROM art_1.Paintings GROUP BY Paintings.year ORDER BY "
  },
  {
    "id": 1290,
    "db_id": "art_1",
    "question": "What are the average height and width of paintings grouped by painters and ordered by name?",
    "answer": "SELECT AVG(height_mm ), AVG(width_mm ) FROM (SELECT DISTINCT Paintings.painterID , COUNT(Paintings.year ) AS num FROM art_1.Sculptures AS T INNER JOIN art_1.Paintings AS P  ON Paintings.artistID = Paintings.paintingID GROUP BY Paintings.painterID ORDER BY Paintings"
  },
  {
    "id": 1291,
    "db_id": "art_1",
    "question": "Find the average height and width of paintings grouped by painters and ordered by name",
    "answer": "SELECT AVG(height_mm ), AVG(width_mm ) FROM (SELECT DISTINCT Paintings.painterID , COUNT(Paintings.artistID ) AS num FROM (SELECT Artists.lname , SUM(Sculptures.height_mm ) AS total , SUM(Paintings.width_mm ) AS total , artistID FROM (SELECT Paintings.title , COUNT(Artists.l"
  },
  {
    "id": 1292,
    "db_id": "art_1",
    "question": "Find the first names and number of works of all artists who have at least two paintings?",
    "answer": "SELECT DISTINCT artistID FROM (SELECT DISTINCT artistID , COUNT(title ) AS num FROM art_1.Paintings GROUP BY artistID ORDER BY artistID , height_mm , width_mm LIMIT 2) AS t INNER JOIN art_1.Artists ON title = title GROUP BY title , title , artistID ORDER BY title , title , "
  },
  {
    "id": 1293,
    "db_id": "art_1",
    "question": "What are the first names of all artists who have at least two paintings, and how many works did each create?",
    "answer": "SELECT DISTINCT artistID FROM (SELECT DISTINCT artistID , COUNT(title ) AS num FROM (SELECT title , SUM(height_mm ), SUM(width_mm ) AS min_w FROM (SELECT DISTINCT title , year , height_mm , width_mm FROM art_1.Paintings GROUP BY artistID ORDER BY title , height_mm , width_mm ) AS T ORDER BY title , year , height"
  },
  {
    "id": 1294,
    "db_id": "art_1",
    "question": "Find the death year of all artists who have at most 3 paintings?",
    "answer": "SELECT DISTINCT MAX(deathYear ) FROM art_1.Artists GROUP BY artistID ORDER BY lname LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1295,
    "db_id": "art_1",
    "question": "When did each artist who created less than 4 paintings die ?",
    "answer": "SELECT COUNT(artistID ) FROM (SELECT DISTINCT SUM(birthYear ) AS num FROM (SELECT artistID , deathYear FROM art_1.Paintings ORDER BY deathYear LIMIT 3) AS T WHERE deathYear <4 GROUP BY artistID ORDER BY deathYear LIMIT 3) AS T ORDER BY artistID LIMIT 2600000005741890000000000"
  },
  {
    "id": 1296,
    "db_id": "art_1",
    "question": "Find the death year of the artist who made the least number of sculptures?",
    "answer": "SELECT DISTINCT MAX(deathYear ) FROM art_1.Artists ORDER BY sculptureID LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1297,
    "db_id": "art_1",
    "question": "When did the artist who made the fewest sculptures die?",
    "answer": "SELECT DISTINCT MAX(deathYear ) FROM art_1.Artists ORDER BY deathYear LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1298,
    "db_id": "art_1",
    "question": "What are the id and height of the painting with the longest width in gallery 240?",
    "answer": "SELECT MAX(paintingID ), MAX(height_mm ) FROM (SELECT Paintings.title , COUNT(Paintings.year ) AS num FROM (SELECT DISTINCT artistID , MAX(year ) AS id FROM (SELECT Artists.birthYear , SUM(Artists.deathYear ) AS year FROM (SELECT DISTINCT deathYear , COUNT(painterID ) FROM art_1.Sculptures WHERE location = 'G"
  },
  {
    "id": 1299,
    "db_id": "art_1",
    "question": "Tell me the height and id number of the widest painting in gallery 240.",
    "answer": "SELECT SUM(title ), title , MAX(title ) FROM art_1.Paintings GROUP BY title ORDER BY title LIMIT 1136879542911710000000000000000000000000000000000000000000"
  },
  {
    "id": 1300,
    "db_id": "art_1",
    "question": "What are the ids of the paintings created before all of the paintings in gallery 240?",
    "answer": "SELECT DISTINCT artistID FROM (SELECT DISTINCT title FROM art_1.Paintings WHERE year < 1657 ORDER BY year LIMIT 1) AS T INNER JOIN art_1.Sculptures AS S  ON Sculptures.artistID = Artists.artistID GROUP BY artistID ORDER BY Sculptures.year LIMIT 195042641383714"
  },
  {
    "id": 1301,
    "db_id": "art_1",
    "question": "What is the id of every painting created before the oldest painting in gallery 240?",
    "answer": "SELECT DISTINCT Paintings.painterID FROM (SELECT DISTINCT paintingID FROM art_1.Paintings WHERE artistID = '51681' GROUP BY Paintings.painterID ORDER BY year LIMIT 2) AS T LEFT JOIN art_1.Paintings AS P  ON Paintings.painterID = Paintings.painterID ORDER BY y"
  },
  {
    "id": 1302,
    "db_id": "art_1",
    "question": "What are the ids of the paintings whose height is longer than the height of all paintings created after 1900?",
    "answer": "SELECT DISTINCT Paintings.painterID FROM art_1.Paintings AS T INNER JOIN (SELECT MAX(year ) AS y FROM art_1.Paintings WHERE title = 'Renaissance') AS R  ON art_1.paintingID = art_1.Paintings.painterID GROUP BY artistID ORDER BY year LIMIT 204800609575360"
  },
  {
    "id": 1303,
    "db_id": "art_1",
    "question": "List the ids of all paintings that are taller than the longest painting created after 1900.",
    "answer": "SELECT DISTINCT artistID FROM (SELECT DISTINCT title FROM art_1.Paintings WHERE location = 'Longest' ORDER BY year LIMIT 1) AS T WHERE height_mm > lname ORDER BY title LIMIT 1"
  },
  {
    "id": 1304,
    "db_id": "art_1",
    "question": "Find the top 3 artists who have the biggest number of painting works whose medium is oil?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT artistID , MAX(paintingID ) AS max FROM art_1.Paintings GROUP BY artistID ORDER BY title LIMIT 3) AS T ORDER BY title LIMIT 3 OFFSET 300000009765240988479122090016545495996"
  },
  {
    "id": 1305,
    "db_id": "art_1",
    "question": "Which artists have the most paintings in oil?",
    "answer": "SELECT DISTINCT title FROM (SELECT DISTINCT artistID , MAX(paintingID ) AS max_id FROM art_1.Paintings GROUP BY artistID ORDER BY Artists.lname LIMIT 2) AS t INNER JOIN (SELECT DISTINCT artistID , COUNT(title ) AS num FROM art_1.Sculptures WHERE medium = 'oil' GROUP BY artistID ORDER BY Artists.lname"
  },
  {
    "id": 1306,
    "db_id": "art_1",
    "question": "List the painting id, location and title of the medium oil paintings ordered by year.",
    "answer": "SELECT DISTINCT paintingID , lname , title FROM (SELECT title , SUM(year ) AS pos FROM (SELECT DISTINCT title , medium , mediumOn , location , sculptorID FROM (SELECT DISTINCT title , medium , location , sculptorID FROM art_1.Paintings)) AS T ORDER BY year LIMIT 1) AS t WHERE lname = 'tadah' ORDER BY title LIMIT 1000"
  },
  {
    "id": 1307,
    "db_id": "art_1",
    "question": "Order all of the oil paintings by date of creation and list their ids, locations, and titles.",
    "answer": "SELECT DISTINCT artistID FROM (SELECT title , MAX(year ), medium , location FROM (SELECT MIN(year ) AS year , medium , location FROM (SELECT title , MAX(year ) AS year , medium , location FROM (SELECT DISTINCT artistID , title FROM (SELECT MIN(title ) AS year , medium FROM art_1.Paintings ORDER BY year LIMIT 2)) AS T WHERE artistID = '"
  },
  {
    "id": 1308,
    "db_id": "art_1",
    "question": "List the year, location and title of paintings whose height is longer than 1000 ordered by title.",
    "answer": "SELECT title FROM art_1.Paintings ORDER BY height_mm LIMIT 2000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1309,
    "db_id": "art_1",
    "question": "List the year, location, and name of all paintings that are taller than 1000 in alphabetical order.",
    "answer": "SELECT MAX(paintingID ), lname FROM art_1.Paintings ORDER BY lname LIMIT 1000 OFFSET 1000025354276940000123391558849715130849152023788587207659320269616"
  },
  {
    "id": 1310,
    "db_id": "art_1",
    "question": "Find the first and last name of artists who have painting but no sculpture work.",
    "answer": "SELECT DISTINCT fname FROM art_1.Artists WHERE artistID = '25984376' ORDER BY lname LIMIT 1;"
  },
  {
    "id": 1311,
    "db_id": "art_1",
    "question": "What are the first and last names of the artists who did not sculpt but could paint.",
    "answer": "SELECT fname FROM art_1.Artists WHERE artistID = 1996720836 LIMIT 1;"
  },
  {
    "id": 1312,
    "db_id": "art_1",
    "question": "Find the locations that have paintings before 1885 and no work with medium on canvas?",
    "answer": "SELECT DISTINCT location FROM art_1.Sculptures WHERE year < '2004' GROUP BY location ORDER BY location LIMIT 100000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1313,
    "db_id": "art_1",
    "question": "Where do you have paintings that were created before 1885 that are not on canvas?",
    "answer": "SELECT DISTINCT title FROM art_1.Paintings WHERE year > '1927' LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1314,
    "db_id": "car_road_race",
    "question": "How many races are there?",
    "answer": "SELECT COUNT(Driver_ID ) FROM car_road_race.race GROUP BY Driver_ID ORDER BY Driver_ID LIMIT 100000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1315,
    "db_id": "car_road_race",
    "question": "Count the number of races.",
    "answer": "SELECT COUNT(Driver_ID ) FROM car_road_race.race WHERE Pole_Position = 'P1' GROUP BY Driver_ID ORDER BY Race_Name LIMIT 10000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1316,
    "db_id": "car_road_race",
    "question": "List the winning drivers and winning teams of races in ascending alphabetical order of winning team.",
    "answer": "SELECT DISTINCT Winning_driver , Winning_team FROM (SELECT DISTINCT Race_Name FROM car_road_race.race ORDER BY Winning_team , Driver_ID ) AS T ORDER BY Age LIMIT 10000000000000000000000000000000000000000000"
  },
  {
    "id": 1317,
    "db_id": "car_road_race",
    "question": "What are the winning drivers and teams of races, ordered alphabetically by team?",
    "answer": "SELECT DISTINCT Winning_driver , Winning_team FROM (SELECT * FROM (SELECT DISTINCT Race_Name , Driver_ID , Pole_Position FROM (SELECT DISTINCT Road , Driver_ID FROM (SELECT DISTINCT Entrant FROM (SELECT DISTINCT Constructor FROM (SELECT DISTINCT Chassis FROM (SELECT DISTINCT Fastest_Lap , Winning_driver FROM "
  },
  {
    "id": 1318,
    "db_id": "car_road_race",
    "question": "Which winning drivers of races had pole position that is not \"Junior Strous\"?",
    "answer": "SELECT DISTINCT Pole_Position FROM car_road_race.race WHERE Pole_Position = 'Junior Strous' GROUP BY Driver_ID ORDER BY Winning_driver LIMIT 100000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1319,
    "db_id": "car_road_race",
    "question": "Return the winning drivers of races who did not have the pole position of Junior Strous.",
    "answer": "SELECT DISTINCT driver.Driver_Name FROM (SELECT DISTINCT race.Race_Name FROM (SELECT DISTINCT Pole_Position FROM (SELECT DISTINCT Race_Name FROM (SELECT DISTINCT Pole_Position , Fastest_Lap FROM (SELECT DISTINCT Winning_driver FROM (SELECT DISTINCT Winning_driver FROM (SELECT DISTINCT Pole_Position , Fastest_"
  },
  {
    "id": 1320,
    "db_id": "car_road_race",
    "question": "Who are the constructors of drivers sorted by drivers' age in ascending order?",
    "answer": "SELECT DISTINCT Driver_Name FROM (SELECT DISTINCT Driver_Name FROM car_road_race.driver ORDER BY Pole_Position LIMIT 1) AS T ORDER BY Pole_Position LIMIT 1000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1321,
    "db_id": "car_road_race",
    "question": "Return the different constructors of drivers, ordered by age ascending.",
    "answer": "SELECT DISTINCT Constructor FROM (SELECT DISTINCT Driver_Name FROM car_road_race.driver ORDER BY Age LIMIT 1) AS T WHERE Driver_Name = 'D' ORDER BY Driver_Name , Age LIMIT 10000000002956847931577627087636785354526"
  },
  {
    "id": 1322,
    "db_id": "car_road_race",
    "question": "What are the distinct entrant types of drivers aged 20 or older?",
    "answer": "SELECT DISTINCT Driver_Name FROM (SELECT DISTINCT Driver_ID FROM (SELECT DISTINCT Engine , COUNT(Driver_ID ) AS Total FROM (SELECT MAX(Driver_ID ), Entrant , Pole_Position FROM (SELECT Driver_ID , Race_Name FROM (SELECT DISTINCT Fastest_Lap FROM (SELECT DISTINCT Winning_driver , COUNT(D"
  },
  {
    "id": 1323,
    "db_id": "car_road_race",
    "question": "Give the different entrant types for drivers at least 20 years old.",
    "answer": "SELECT DISTINCT Driver_Name FROM (SELECT DISTINCT Driver_Name FROM car_road_race.driver AS T INNER JOIN (SELECT MAX(Age ) AS age_from , COUNT(Pole_Position ), SUM(Driver_ID ) AS total FROM car_road_race.driver WHERE Age > 20 GROUP BY Driver_Name ORDER BY Age LIMIT 1) AS T  ON Driver"
  },
  {
    "id": 1324,
    "db_id": "car_road_race",
    "question": "What are the maximum and minimum age of driver?",
    "answer": "SELECT SUM(Pole_Position ), MIN(Age ) FROM (SELECT DISTINCT Winning_driver , Pole_Position , Fastest_Lap FROM (SELECT DISTINCT Race_Name FROM car_road_race.driver ORDER BY Winning_team LIMIT 10)) AS T INNER JOIN (SELECT DISTINCT Pole_Position , MIN(Age ) FROM car_road_race"
  },
  {
    "id": 1325,
    "db_id": "car_road_race",
    "question": "Return the maximum and minimum age across drivers.",
    "answer": "SELECT DISTINCT MAX(Age ) AS min FROM (SELECT MAX(Age ), MAX(Pole_Position ) AS avg FROM (SELECT DISTINCT Pole_Position , COUNT(Driver_ID ), driver.Entrant FROM (SELECT driver.Entrant , driver.Chassis FROM car_road_race.driver AS T INNER JOIN (SELECT DISTINCT Age , Driver_ID , Race_Name FROM (SELECT MAX(Pole_Position )"
  },
  {
    "id": 1326,
    "db_id": "car_road_race",
    "question": "How many different engines are used by drivers with age older than 30 or younger than 20?",
    "answer": "SELECT COUNT(driver.Entrant ) FROM (SELECT DISTINCT Entrant FROM car_road_race.driver WHERE Age < 30 ORDER BY Age  \n           LIMIT 1) AS T INNER JOIN car_road_race.race AS R  ON Driver_ID = Race_Name ORDER BY Race_Name , Engine , driver.Entrant , Age LIMIT 1 OFFSET "
  },
  {
    "id": 1327,
    "db_id": "car_road_race",
    "question": "Count the number of different engines used by drivers who had an age either over 30 or under 20.",
    "answer": "SELECT COUNT(driver.Engine ) FROM (SELECT DISTINCT Driver_ID , Fastest_Lap FROM (SELECT DISTINCT Driver_ID , MAX(Age ) AS Temp FROM (SELECT Driver_ID , Pole_Position FROM car_road_race.driver WHERE Entrant = 'Joe' GROUP BY driver.Entrant ORDER BY Pole_Position LIMIT 1) AS T ORDER BY Pole_Position"
  },
  {
    "id": 1328,
    "db_id": "car_road_race",
    "question": "List all names of drivers in descending alphabetical order.",
    "answer": "SELECT DISTINCT Driver_Name FROM (SELECT DISTINCT Driver_Name FROM car_road_race.driver ORDER BY Driver_Name LIMIT 1) AS T GROUP BY Driver_Name ORDER BY Race_Name LIMIT 1"
  },
  {
    "id": 1329,
    "db_id": "car_road_race",
    "question": "What are the names of drivers, ordered descending alphabetically?",
    "answer": "SELECT DISTINCT Driver_Name FROM (SELECT DISTINCT Driver_ID FROM (SELECT DISTINCT driver.Driver_ID FROM (SELECT DISTINCT driver.Entrant FROM car_road_race.driver AS T ORDER BY Driver_ID LIMIT 1)) AS T ORDER BY Driver_ID ) AS T ORDER BY Driver_Name , Driver_ID LIMIT 3000000000000"
  },
  {
    "id": 1330,
    "db_id": "car_road_race",
    "question": "Please show the names of drivers and the names of races they participate in.",
    "answer": "SELECT DISTINCT Driver_Name FROM (SELECT DISTINCT Driver_Name , Race_Name FROM car_road_race.driver WHERE Entrant = 'Gilles' ORDER BY Race_Name LIMIT 1) AS T INNER JOIN (SELECT DISTINCT Pole_Position , Fastest_Lap , Winning_driver , Winning_team FROM car_road_race.driver GROUP BY Pole_Position , Fast"
  },
  {
    "id": 1331,
    "db_id": "car_road_race",
    "question": "What are the names of drivers and the names of the races they took part in?",
    "answer": "SELECT DISTINCT driver.Driver_Name FROM (SELECT DISTINCT race.Road FROM car_road_race.driver AS T INNER JOIN (SELECT DISTINCT car_road_race.Pole_Position FROM car_road_race.driver AS T INNER JOIN (SELECT DISTINCT race.Race_Name FROM car_road_race.driver WHERE driver.Entrant = 'F1') AS R  ON Race_Name"
  },
  {
    "id": 1332,
    "db_id": "car_road_race",
    "question": "Please show the names of drivers and the number of races they participate in.",
    "answer": "SELECT DISTINCT driver.Driver_Name FROM (SELECT DISTINCT Driver_Name , COUNT(Race_Name ) AS num FROM (SELECT DISTINCT race.Road , driver.Chassis , Race_Name FROM car_road_race.driver AS T INNER JOIN (SELECT DISTINCT Driver_ID FROM car_road_race.driver AS T INNER JOIN (SELECT race.Pole_Position ,"
  },
  {
    "id": 1333,
    "db_id": "car_road_race",
    "question": "How many races did each driver participate in?",
    "answer": "SELECT COUNT(driver.Driver_ID ) FROM (SELECT DISTINCT driver.Entrant , COUNT(driver.Entrant ) AS num FROM (SELECT DISTINCT driver.Entrant , Pole_Position , Fastest_Lap FROM car_road_race.race ORDER BY driver.Entrant LIMIT 1) AS T INNER JOIN (SELECT DISTINCT Race_Name , COUNT(Entrant ) AS num FROM car_"
  },
  {
    "id": 1334,
    "db_id": "car_road_race",
    "question": "Please show the age of the driver who participated in the most number of races.",
    "answer": "SELECT DISTINCT MAX(Age ) FROM (SELECT COUNT(Entrant ), Age FROM (SELECT Driver_ID , SUM(Age ) AS num FROM (SELECT DISTINCT Entrant , Road FROM car_road_race.driver GROUP BY Age ORDER BY Age LIMIT 1)) AS T INNER JOIN car_road_race.driver AS C  ON Chassis = Driver_Name ORDER BY Road LIMIT 2) AS T ORDER BY Driver"
  },
  {
    "id": 1335,
    "db_id": "car_road_race",
    "question": "What is the age of the driver who raced in the most races?",
    "answer": "SELECT COUNT(Pole_Position ) FROM (SELECT MAX(Race_Name ) AS RESULT FROM (SELECT DISTINCT Pole_Position FROM car_road_race.race GROUP BY Driver_ID ORDER BY Pole_Position LIMIT 1) AS T ORDER BY Race_Name LIMIT 1) AS T ORDER BY Driver_ID LIMIT 2006505473353800000"
  },
  {
    "id": 1336,
    "db_id": "car_road_race",
    "question": "Please show the names and ages of the drivers who participated in at least two races.",
    "answer": "SELECT DISTINCT Driver_Name FROM (SELECT DISTINCT Driver_ID , COUNT(Driver_ID ) AS num FROM (SELECT DISTINCT Driver_ID , COUNT(*) AS num FROM (SELECT DISTINCT Road , Winning_driver , Pole_Position , Engine FROM car_road_race.race WHERE Age > 42 GROUP BY Road ORDER BY Road LIMIT 1) AS T ) AS T INNER JOIN ("
  },
  {
    "id": 1337,
    "db_id": "car_road_race",
    "question": "What are the names and ages of drivers who raced in two or more races?",
    "answer": "SELECT DISTINCT Driver_Name FROM (SELECT DISTINCT Driver_Name , COUNT(Race_Name ) AS num FROM (SELECT DISTINCT Race_Name , Race_Name , COUNT(Pole_Position ) FROM (SELECT DISTINCT Driver_ID , Pole_Position FROM (SELECT DISTINCT Pole_Position FROM (SELECT DISTINCT driver.Entrant , driver.Chassis ,"
  },
  {
    "id": 1338,
    "db_id": "car_road_race",
    "question": "Please list the names of races with drivers aged 26 or older participating.",
    "answer": "SELECT DISTINCT race.Race_Name FROM (SELECT Race_Name , MAX(Age ) AS num FROM (SELECT driver.Entrant , driver.Chassis FROM (SELECT Entrant , Chassis FROM (SELECT driver.Driver_ID , Fastest_Lap FROM car_road_race.driver AS T INNER JOIN (SELECT Pole_Position , Fastest_Lap , Race_Name FROM car_"
  },
  {
    "id": 1339,
    "db_id": "car_road_race",
    "question": "What are the names of races in which drivers 26 or older took part?",
    "answer": "SELECT DISTINCT race.Race_Name FROM (SELECT MAX(race.Race_Name ), driver.Entrant FROM (SELECT DISTINCT driver.Entrant , MAX(driver.Pole_Position ) AS age FROM (SELECT DISTINCT driver.Entrant , race.Driver_ID FROM (SELECT DISTINCT driver.Entrant , driver.Age FROM (SELECT driver.Entrant , MAX(driver.Pole_Position"
  },
  {
    "id": 1340,
    "db_id": "car_road_race",
    "question": "List the names of drivers whose constructor is not \"Bugatti\".",
    "answer": "SELECT DISTINCT driver.Driver_Name FROM car_road_race.driver AS T INNER JOIN (SELECT DISTINCT Pole_Position FROM car_road_race.driver GROUP BY Pole_Position ORDER BY Driver_ID LIMIT 1) AS U  ON driver.Driver_ID = (SELECT DISTINCT Pole_Position FROM car_road_race.driver GROUP BY Pole_Position ORDER BY Driver_ID"
  },
  {
    "id": 1341,
    "db_id": "car_road_race",
    "question": "What are the names od drivers who did not have the constructor Bugatti?",
    "answer": "SELECT DISTINCT driver.Driver_Name FROM (SELECT DISTINCT driver.Driver_Name , Race_Name FROM (SELECT DISTINCT race.Road , Fastest_Lap FROM (SELECT DISTINCT Constructor , Road FROM (SELECT DISTINCT Engine , Age , Chassis FROM (SELECT DISTINCT race.Chassis , Race_Name FROM (SELECT DISTINCT race.Entr"
  },
  {
    "id": 1342,
    "db_id": "car_road_race",
    "question": "List different constructors and the number of drivers that use each constructor.",
    "answer": "SELECT DISTINCT Driver_Name FROM (SELECT DISTINCT Constructor FROM (SELECT DISTINCT Engine , COUNT(Driver_ID ) AS num FROM (SELECT * FROM car_road_race.driver)) AS T ) GROUP BY Driver_Name ORDER BY Driver_ID LIMIT 1000000000000000000000000000"
  },
  {
    "id": 1343,
    "db_id": "car_road_race",
    "question": "How many drivers use each constructor?",
    "answer": "SELECT DISTINCT COUNT(Driver_Name ) FROM car_road_race.driver WHERE Entrant = 'Polo' GROUP BY Constructor ORDER BY Driver_Name LIMIT 10000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1344,
    "db_id": "car_road_race",
    "question": "List the most common type of engine used by drivers.",
    "answer": "SELECT DISTINCT Engine FROM (SELECT DISTINCT Engine FROM car_road_race.driver GROUP BY Engine ORDER BY Race_Name LIMIT 1) AS T WHERE Report = 'Engine Type' ORDER BY Driver_ID , Race_Name LIMIT 10000000009765283741438067857656117914946"
  },
  {
    "id": 1345,
    "db_id": "car_road_race",
    "question": "What is the most common type of engine?",
    "answer": "SELECT DISTINCT MIN(Engine ) FROM (SELECT DISTINCT Engine , Fastest_Lap FROM car_road_race.race GROUP BY Engine ORDER BY Driver_ID LIMIT 1) AS T INNER JOIN car_road_race.driver AS d  ON driver.Driver_ID = driver.Driver_ID ORDER BY Engine LIMIT 2000000000000"
  },
  {
    "id": 1346,
    "db_id": "car_road_race",
    "question": "List the types of engines that are used by at least two drivers.",
    "answer": "SELECT DISTINCT Engine FROM (SELECT DISTINCT Engine FROM (SELECT driver.Engine , COUNT(driver.Engine ) AS num FROM (SELECT DISTINCT Driver_Name , MAX(Chassis ) AS X FROM (SELECT DISTINCT Chassis , Fastest_Lap , Age FROM (SELECT DISTINCT Driver_ID , Pole_Position FROM (SELECT DISTINCT Engine , MAX(Fastest"
  },
  {
    "id": 1347,
    "db_id": "car_road_race",
    "question": "What are the engine types that are used by two or more drivers?",
    "answer": "SELECT DISTINCT Engine FROM (SELECT DISTINCT Driver_ID , Driver_Name , Entrant FROM (SELECT DISTINCT Driver_ID , Driver_Name , Entrant FROM (SELECT driver.Entrant , driver.Chassis FROM car_road_race.driver AS T , car_road_race.driver AS C WHERE Chassis = 'T203'"
  },
  {
    "id": 1348,
    "db_id": "car_road_race",
    "question": "List the names of drivers that do not participate in any race.",
    "answer": "SELECT DISTINCT driver.Driver_Name FROM (SELECT DISTINCT Driver_Name FROM (SELECT DISTINCT Entrant FROM car_road_race.driver) AS T ) AS T INNER JOIN (SELECT DISTINCT race.Race_Name FROM car_road_race.race AS T INNER JOIN (SELECT DISTINCT driver.Driver_ID , race.Race_Name FROM car_road_race."
  },
  {
    "id": 1349,
    "db_id": "car_road_race",
    "question": "What are names of drivers who did not take part in a race?",
    "answer": "SELECT DISTINCT Driver_Name FROM (SELECT DISTINCT Driver_ID FROM car_road_race.driver WHERE Pole_Position = '76' ORDER BY Fastest_Lap ) AS T GROUP BY Driver_Name ORDER BY race.Pole_Position LIMIT 10 OFFSET 19502362480238561000"
  },
  {
    "id": 1350,
    "db_id": "car_road_race",
    "question": "Show the constructors that are used both by drivers with age lower than 20 and drivers with age over than 30.",
    "answer": "SELECT DISTINCT Constructor FROM (SELECT DISTINCT Driver_Name , MAX(Age ) AS num FROM (SELECT Driver_ID , COUNT(Driver_ID ) AS age FROM (SELECT Driver_ID , Pole_Position FROM car_road_race.driver WHERE Age < 20 GROUP BY Constructor ORDER BY Age LIMIT 1) AS T ORDER BY Age LIMIT 1) AS T INNER JOIN (SELECT DISTINCT Driver_"
  },
  {
    "id": 1351,
    "db_id": "car_road_race",
    "question": "What are the constructors who are used by both drivers who are younger than 20 and drivers older than 30?",
    "answer": "SELECT DISTINCT Driver_Name FROM (SELECT DISTINCT Constructor , MAX(Age ) AS Age FROM (SELECT Driver_ID , Fastest_Lap , MAX(Pole_Position ) AS PLT FROM (SELECT DISTINCT driver.Entrant , driver.Chassis , driver.Fastest_Lap , driver.Winning_driver , driver.Report FROM car_road_race.driver AS T INNER JOIN ("
  },
  {
    "id": 1352,
    "db_id": "car_road_race",
    "question": "Find the teams that won more than once.",
    "answer": "SELECT DISTINCT Pole_Position FROM (SELECT DISTINCT Pole_Position FROM (SELECT * FROM (SELECT Race_Name , MAX(Pole_Position ) AS a FROM (SELECT DISTINCT Winning_driver , MAX(Fastest_Lap ) AS b FROM (SELECT driver.Entrant , race.Road , driver.Chassis FROM (SELECT DISTINCT * FROM (SELECT DISTINCT Race_Name , Pole"
  },
  {
    "id": 1353,
    "db_id": "car_road_race",
    "question": "Which teams won more than 1 race?",
    "answer": "SELECT DISTINCT SUM(Pole_Position ), COUNT(Pole_Position ) FROM (SELECT * FROM (SELECT DISTINCT Pole_Position , Race_Name FROM car_road_race.race GROUP BY Pole_Position ORDER BY Fastest_Lap LIMIT 1)) AS T WHERE Pole_Position > 1 GROUP BY Driver_ID ORDER BY Driver_ID LIMIT 200000000"
  },
  {
    "id": 1354,
    "db_id": "car_road_race",
    "question": "Find the names of drivers who were in both \"James Hinchcliffe\" and \"Carl Skerlong\" pole positions before.",
    "answer": "SELECT DISTINCT driver.Driver_Name FROM (SELECT DISTINCT car_road_race.driver.Driver_ID FROM (SELECT DISTINCT driver.Driver_ID , COUNT(Chassis ), COUNT(Entrant ) AS cnt , COUNT(Pole_Position ) AS per FROM (SELECT DISTINCT Entrant , Chassis FROM car_road_race.driver) AS T WHERE Pole_Position = 'Carl Sker"
  },
  {
    "id": 1355,
    "db_id": "car_road_race",
    "question": "What are the names of drivers who had both the pole position James Hinchcliffe and the pole position Carl Skerlong?",
    "answer": "SELECT DISTINCT Driver_Name FROM car_road_race.driver WHERE Pole_Position = 'James Hinchcliffe' INNER JOIN car_road_race.driver AS J  ON driver.Driver_ID = 11861957026447131293 ORDER BY Driver_Name LIMIT 23469188054107665000"
  },
  {
    "id": 1356,
    "db_id": "car_road_race",
    "question": "find the name of drivers who were never in \"James Hinchcliffe\" pole position before.",
    "answer": "SELECT DISTINCT Driver_Name FROM car_road_race.driver AS T WHERE driver.Entrant = 'James Hinchcliffe' LIMIT 1"
  },
  {
    "id": 1357,
    "db_id": "car_road_race",
    "question": "What are the names of drivers except for those who had the pole position James Hinchcliffe?",
    "answer": "SELECT DISTINCT driver.Driver_Name FROM (SELECT DISTINCT Driver_Name FROM (SELECT DISTINCT Driver_ID , Pole_Position FROM (SELECT DISTINCT Driver_ID , Race_Name , Winning_driver FROM (SELECT DISTINCT driver.Driver_ID , Winning_driver FROM (SELECT DISTINCT Driver_Name FROM (SELECT DISTINCT Driver_ID , P"
  },
  {
    "id": 1358,
    "db_id": "country_language",
    "question": "How many languages are there?",
    "answer": "SELECT COUNT(name ) FROM country_language.languages GROUP BY name ORDER BY country_language.name LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1359,
    "db_id": "country_language",
    "question": "Count the number of languages.",
    "answer": "SELECT COUNT(name ) FROM country_language.languages GROUP BY name ORDER BY countries.name LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1360,
    "db_id": "country_language",
    "question": "List the name of languages in ascending alphabetical order.",
    "answer": "SELECT DISTINCT language_id FROM (SELECT DISTINCT languages.name , language_id FROM (SELECT DISTINCT language_id FROM country_language.languages WHERE id = 'en') AS T ORDER BY languages.language_id ) AS R WHERE name = 'asc' LIMIT 10000000000000000000000"
  },
  {
    "id": 1361,
    "db_id": "country_language",
    "question": "What are the names of languages, in alphabetical order?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name FROM country_language.languages ORDER BY name LIMIT 1) AS T ORDER BY name LIMIT 1000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1362,
    "db_id": "country_language",
    "question": "What are the names of languages that contain the word \"ish\"?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name FROM country_language.languages WHERE overall_score = '207' GROUP BY name ORDER BY countries.id LIMIT 1) AS t ORDER BY countries.name LIMIT 10000000000000000000000000000000000000000000"
  },
  {
    "id": 1363,
    "db_id": "country_language",
    "question": "Return the names of langauges that contain the substring \"ish\".",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name FROM country_language.languages WHERE language_id = 'ish' LIMIT 1) AS T ORDER BY countries.name LIMIT 10000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1364,
    "db_id": "country_language",
    "question": "Show the names of countries in descending order of overall scores.",
    "answer": "SELECT DISTINCT name FROM country_language.languages ORDER BY id LIMIT 1"
  },
  {
    "id": 1365,
    "db_id": "country_language",
    "question": "What are the names of the countries, ordered descending by overall score?",
    "answer": "SELECT DISTINCT name FROM country_language.languages ORDER BY overall_score LIMIT 1 OFFSET 1000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1366,
    "db_id": "country_language",
    "question": "What is the average justice scores among countries?",
    "answer": "SELECT AVG(overall_score ) FROM (SELECT DISTINCT SUM(overall_score ), COUNT(id ) AS num FROM (SELECT DISTINCT COUNT(country_id ), SUM(overall_score ) FROM (SELECT language_id FROM country_language.countries GROUP BY language_id ORDER BY politics_score LIMIT 1) AS T WHERE id = (SELECT id FROM country_language.languages"
  },
  {
    "id": 1367,
    "db_id": "country_language",
    "question": "Give the average justice scores across all countries.",
    "answer": "SELECT AVG(justice_score ) FROM (SELECT DISTINCT COUNT(*) AS sum , id FROM (SELECT COUNT(country_id ), SUM(justice_score ) FROM country_language.countries GROUP BY country_id ORDER BY politics_score LIMIT 1) AS T ORDER BY id LIMIT 100000000000000000000000000"
  },
  {
    "id": 1368,
    "db_id": "country_language",
    "question": "What are the maximum and minimum health scores among countries that are not \"Norway\".",
    "answer": "SELECT SUM(justice_score ) AS total FROM (SELECT COUNT(justice_score ), SUM(justice_score ) AS sum FROM (SELECT DISTINCT country_id , MAX(overall_score ) AS score FROM (SELECT DISTINCT id , country_id FROM country_language.countries WHERE language_id = 'norway')) AS T GROUP BY countries.name ORDER BY politics_score LIMIT 1) AS T INNER JOIN"
  },
  {
    "id": 1369,
    "db_id": "country_language",
    "question": "Return the maximum and minimum health scores across all countries other than Norway.",
    "answer": "SELECT SUM(politics_score ), MAX(politics_score ) FROM country_language.languages WHERE country_id = 'norway' GROUP BY language_id ORDER BY health_score LIMIT 100000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1370,
    "db_id": "country_language",
    "question": "How many different official languages are there?",
    "answer": "SELECT COUNT(languages.name ) FROM country_language.languages AS l INNER JOIN country_language.official_languages AS l  ON languages.country_id = country_language.id ORDER BY languages.name LIMIT 1000000000000000000000000000000000000"
  },
  {
    "id": 1371,
    "db_id": "country_language",
    "question": "Count the number of different official languages.",
    "answer": "SELECT COUNT(languages.name ) FROM country_language.languages AS t INNER JOIN country_language.languages AS u  ON languages.country_id = countries.id GROUP BY languages.name ORDER BY languages.id LIMIT 100000000000000000000000000000000000000000"
  },
  {
    "id": 1372,
    "db_id": "country_language",
    "question": "List names of countries in descending order of education_score.",
    "answer": "SELECT DISTINCT country_id FROM (SELECT DISTINCT COUNT(id ) AS num , name FROM country_language.official_languages ORDER BY education_score LIMIT 1) AS T INNER JOIN (SELECT DISTINCT language_id , COUNT(id ) AS num , name FROM (SELECT DISTINCT id , name , SUM(overall_score ) AS sum_value FROM country_language.official_"
  },
  {
    "id": 1373,
    "db_id": "country_language",
    "question": "What are the names of the countries, ordered descending by education score?",
    "answer": "SELECT DISTINCT name FROM country_language.languages ORDER BY education_score LIMIT 1 OFFSET 100000000029600135708462753722319837086270326868027485688310226424798322"
  },
  {
    "id": 1374,
    "db_id": "country_language",
    "question": "List the name of the country with the biggest score in politics.",
    "answer": "SELECT DISTINCT id FROM (SELECT DISTINCT MAX(justice_score ), COUNT(overall_score ) AS sum , SUM(overall_score ) AS total , SUM(overall_score ) AS avg FROM (SELECT MIN(id ), SUM(overall_score ), MAX(overall_score ), SUM(overall_score ) AS avg FROM (SELECT DISTINCT overall_score  FROM country_language."
  },
  {
    "id": 1375,
    "db_id": "country_language",
    "question": "What is the name of the country with the highest politics score?",
    "answer": "SELECT DISTINCT politics_score FROM (SELECT DISTINCT countries.name , COUNT(countries.id ) AS total FROM country_language.countries AS T INNER JOIN (SELECT id FROM country_language.official_languages WHERE country_id = 'T' ORDER BY politics_score LIMIT 1) AS c  ON countries.name ="
  },
  {
    "id": 1376,
    "db_id": "country_language",
    "question": "Show the names of countries and their official languages.",
    "answer": "SELECT DISTINCT country_id FROM (SELECT DISTINCT id FROM country_language.languages ORDER BY id LIMIT 1) AS T INNER JOIN (SELECT DISTINCT language_id FROM country_language.languages GROUP BY language_id ORDER BY politics_score LIMIT 3) AS A  ON country_language.language_id = 'lang_T' ORDER BY politics_score LIMIT 3000000"
  },
  {
    "id": 1377,
    "db_id": "country_language",
    "question": "What are the names of the countries, as well as the names of their official langauges?",
    "answer": "SELECT DISTINCT name FROM country_language.languages GROUP BY country_id ORDER BY name LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1378,
    "db_id": "country_language",
    "question": "Show the official languages and the number of countries speaking each language.",
    "answer": "SELECT COUNT(id ), SUM(language_id ) FROM (SELECT DISTINCT name , COUNT(id ) AS num FROM country_language.languages GROUP BY id ORDER BY id LIMIT 1) AS T INNER JOIN (SELECT id , COUNT(*) AS num FROM (SELECT DISTINCT id , language_id , MAX(overall_score ), MIN(overall_score ), MAX(justice_score ) AS min_score , MAX(he"
  },
  {
    "id": 1379,
    "db_id": "country_language",
    "question": "What are the names of the different official languages, as well as the number of countries that speak each?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT language_id , COUNT(name ) AS num FROM country_language.languages GROUP BY language_id ) AS T ORDER BY language_id LIMIT 1000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1380,
    "db_id": "country_language",
    "question": "Show the official language spoken by the most number of countries.",
    "answer": "SELECT COUNT(language_id ) FROM country_language.official_languages GROUP BY language_id ORDER BY countries.country_id LIMIT 1000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1381,
    "db_id": "country_language",
    "question": "What is the official language that is most common?",
    "answer": "SELECT id FROM country_language.languages ORDER BY countries.name LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1382,
    "db_id": "country_language",
    "question": "Show the official languages spoken by at least two countries.",
    "answer": "SELECT DISTINCT COUNT(language_id ) FROM (SELECT DISTINCT language_id FROM country_language.countries GROUP BY language_id ORDER BY countries.name LIMIT 2) AS T INNER JOIN (SELECT DISTINCT COUNT(language_id ) FROM (SELECT language_id FROM country_language.countries GROUP BY language_id ORDER BY countries.name LIMIT 1)) AS T  ON language_"
  },
  {
    "id": 1383,
    "db_id": "country_language",
    "question": "Which official languages are spoken in two or more countries?",
    "answer": "SELECT DISTINCT COUNT(language_id ) FROM (SELECT language_id , COUNT(country_id ) AS num FROM country_language.countries GROUP BY country_id ORDER BY country_id LIMIT 2) AS t WHERE country_id = 't' ORDER BY country_id LIMIT 2;"
  },
  {
    "id": 1384,
    "db_id": "country_language",
    "question": "Show the average overall scores of countries whose official language is \"English\".",
    "answer": "SELECT SUM(overall_score ) FROM (SELECT DISTINCT name , SUM(overall_score ) AS total FROM (SELECT DISTINCT language_id FROM country_language.official_languages WHERE language_id = 'english' GROUP BY language_id ORDER BY overall_score LIMIT 1) AS T INNER JOIN (SELECT DISTINCT countries.name , COUNT(countries.country_id ) FROM country_language."
  },
  {
    "id": 1385,
    "db_id": "country_language",
    "question": "What is the average overall score across countries with English as their official language?",
    "answer": "SELECT SUM(overall_score ) FROM (SELECT DISTINCT id FROM country_language.countries WHERE overall_score = 1 ORDER BY name LIMIT 2) AS t INNER JOIN (SELECT DISTINCT language_id FROM (SELECT languages.language_id , COUNT(overall_score ) FROM (SELECT DISTINCT id , language_id FROM country_language.countries WHERE overall_score = 1 ORDER BY"
  },
  {
    "id": 1386,
    "db_id": "country_language",
    "question": "Show the three official languages that are most commonly spoken.",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name FROM country_language.languages ORDER BY overall_score LIMIT 3) AS T INNER JOIN country_language.languages AS U  ON EXISTS (SELECT DISTINCT language_id , country_id FROM (SELECT DISTINCT language_id , COUNT(politics_score ) AS per FROM country_language.languages WHERE overall_score > 0 GROUP BY language_id ORDER BY count"
  },
  {
    "id": 1387,
    "db_id": "country_language",
    "question": "What are the names of the three official languages spoken in the most countries?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT id FROM country_language.languages GROUP BY id ORDER BY countries.name LIMIT 3) AS t ORDER BY countries.name LIMIT 200000000489961700000000000000000000000000000000000000000"
  },
  {
    "id": 1388,
    "db_id": "country_language",
    "question": "Show the official languages sorted in descending order by the average overall scores among countries speaking them.",
    "answer": "SELECT DISTINCT COUNT(languages.language_id ), SUM(overall_score ) FROM (SELECT COUNT(id ) AS num , AVG(overall_score ) AS total , languages.name FROM country_language.official_languages AS T INNER JOIN country_language.official_languages AS C  ON languages.country_id =  countries.id ORDER BY name LIMIT 1) AS T ORDER BY"
  },
  {
    "id": 1389,
    "db_id": "country_language",
    "question": "What are the names of the official languages, sorted descending by the average overall scores across the countries that correspond to each?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT COUNT(language_id ) AS num FROM (SELECT language_id , SUM(overall_score ) AS sum FROM (SELECT language_id , COUNT(*) AS num FROM country_language.countries GROUP BY language_id ORDER BY politics_score  DESC LIMIT 1) AS t ORDER BY politics_score ) AS l ORDER BY name , politics_score LIMIT "
  },
  {
    "id": 1390,
    "db_id": "country_language",
    "question": "Show the name of the country that has the greatest number of official languages.",
    "answer": "SELECT DISTINCT id FROM (SELECT COUNT(id ) AS n FROM (SELECT * FROM country_language.countries GROUP BY country_id ORDER BY countries.name LIMIT 1) AS T ORDER BY countries.name LIMIT 1) AS t WHERE name = 'ID' GROUP BY country_id ORDER BY countries.name LIMIT 25000000000000000000"
  },
  {
    "id": 1391,
    "db_id": "country_language",
    "question": "Which country has the greatest number of official languages?",
    "answer": "SELECT COUNT(country_id ) FROM (SELECT DISTINCT language_id FROM (SELECT COUNT(languages.language_id ), COUNT(languages.country_id ) AS result FROM country_language.countries AS T WHERE name = 'Pakistan' GROUP BY language_id ORDER BY countries.country_id LIMIT 1)) AS T ORDER BY country_id LIMIT 20000000000000"
  },
  {
    "id": 1392,
    "db_id": "country_language",
    "question": "List the names of languages that are not the official language of any countries.",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT language_id FROM country_language.languages WHERE country_id = 'none' LIMIT 1) AS T INNER JOIN country_language.countries AS C   AS T  ON language_id =  country_id ORDER BY languages.name LIMIT 1000000000000000"
  },
  {
    "id": 1393,
    "db_id": "country_language",
    "question": "What are the names of languages that are not the official language of any country?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name FROM (SELECT id FROM (SELECT language_id , COUNT(id ) AS num FROM (SELECT DISTINCT language_id FROM country_language.languages GROUP BY language_id ORDER BY id LIMIT 1) AS T INNER JOIN country_language.countries AS c  ON country_language.id = country_lang"
  },
  {
    "id": 1394,
    "db_id": "country_language",
    "question": "List the names of countries that do not have any official language.",
    "answer": "SELECT DISTINCT name FROM country_language.languages WHERE id = 1 LIMIT 1"
  },
  {
    "id": 1395,
    "db_id": "country_language",
    "question": "What are the names of countries that do not have an official language?",
    "answer": "SELECT DISTINCT name FROM country_language.languages WHERE id = 1206738445091255000 ORDER BY name LIMIT 1206738445091255000"
  },
  {
    "id": 1396,
    "db_id": "country_language",
    "question": "Show the names of languages that are the official language for both countries with overall score greater than 95 and countries with overall score less than than 90.",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT language_id , country_id , SUM(overall_score ) AS total , SUM(justice_score ) AS total1 , SUM(health_score ) AS total2 , SUM(education_score ) AS total3 , SUM(politics_score ) AS total4 , SUM(economics_score ) AS total5 , SUM(name ) AS total6 FROM ("
  },
  {
    "id": 1397,
    "db_id": "country_language",
    "question": "What are the names of languages that are the official language not only for countries that have an overall score of above 95, but also for countries that have an overall score below 90?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT name FROM (SELECT COUNT(languages.name ) AS total , languages.overall_score , languages.justice_score , languages.health_score , languages.education_score , languages.politics_score , languages.politics_score , languages.economics_score , languages.justice_score , languages.health_score , l"
  },
  {
    "id": 1398,
    "db_id": "real_estate_rentals",
    "question": "Which countries and cities are included in addresses?",
    "answer": "SELECT COUNT(address_id ) FROM (SELECT address_id FROM (SELECT DISTINCT user_address_id , county_state_province FROM (SELECT DISTINCT zip_postcode FROM (SELECT DISTINCT address_id FROM (SELECT DISTINCT address_id FROM (SELECT DISTINCT county_state_province FROM (SELECT DISTINCT zip_postcode FROM (SELECT DISTINCT town_city , address_id FROM (SELECT"
  },
  {
    "id": 1399,
    "db_id": "real_estate_rentals",
    "question": "What are the countries and cities for each address?",
    "answer": "SELECT DISTINCT country , address_id FROM (SELECT DISTINCT country , address_id FROM (SELECT DISTINCT address_id FROM (SELECT DISTINCT zip_postcode FROM (SELECT DISTINCT county_state_province FROM (SELECT DISTINCT COUNT(Addresses.zip_postcode ) AS num FROM (SELECT address_id FROM (SELECT DISTINCT Addresses.address_id , COUNT(Addresses.line_1"
  },
  {
    "id": 1400,
    "db_id": "real_estate_rentals",
    "question": "In which states are each of the the properties located?",
    "answer": "SELECT DISTINCT zip_postcode FROM (SELECT DISTINCT zip_postcode FROM real_estate_rentals.Properties WHERE address_id = 'addresses' LIMIT 1) AS t INNER JOIN real_estate_rentals.Addresses AS a  ON town_city = address_id ORDER BY is_seller LIMIT 100000000000000000"
  },
  {
    "id": 1401,
    "db_id": "real_estate_rentals",
    "question": "Give the states or provinces corresponding to each property.",
    "answer": "SELECT DISTINCT town_city FROM (SELECT DISTINCT county_state_province FROM real_estate_rentals.Addresses WHERE address_id = '3523864') AS T ORDER BY address_id , town_city LIMIT 1;"
  },
  {
    "id": 1402,
    "db_id": "real_estate_rentals",
    "question": "How is the feature rooftop described?",
    "answer": "SELECT DISTINCT town_city FROM (SELECT DISTINCT town_city , COUNT(feature_id ) AS num FROM (SELECT DISTINCT town_city FROM (SELECT DISTINCT address_id , feature_name FROM real_estate_rentals.Features WHERE property_type_code = 'rooftop') AS T ORDER BY feature_id ) AS T GROUP BY town_city ORDER BY count"
  },
  {
    "id": 1403,
    "db_id": "real_estate_rentals",
    "question": "Return the description of the feature 'rooftop'.",
    "answer": "SELECT DISTINCT feature_description FROM (SELECT DISTINCT feature_description FROM (SELECT DISTINCT town_city , town_city FROM (SELECT DISTINCT line_1_number_building , line_2_number_street FROM (SELECT DISTINCT zip_postcode FROM (SELECT DISTINCT town_city , zip_postcode FROM (SELECT DISTINCT county_state_province , country FROM ("
  },
  {
    "id": 1404,
    "db_id": "real_estate_rentals",
    "question": "What are the feature name and description of the most commonly seen feature across properties?",
    "answer": "SELECT DISTINCT feature_name , feature_description FROM (SELECT DISTINCT Features.feature_name , feature_description FROM (SELECT DISTINCT Features.feature_id , Features.feature_name FROM (SELECT town_city , COUNT(town_city ) AS count FROM (SELECT DISTINCT zip_postcode FROM (SELECT COUNT(property_address_id ), SUM(property_type_code )"
  },
  {
    "id": 1405,
    "db_id": "real_estate_rentals",
    "question": "Give the feature name and description for the most common feature across all properties.",
    "answer": "SELECT DISTINCT feature_name , feature_description FROM (SELECT DISTINCT Features.feature_name , feature_description FROM (SELECT DISTINCT Features.feature_name , feature_description FROM (SELECT Features.property_id , COUNT(Features.property_type_code ), Features.feature_name FROM (SELECT property_id , COUNT(property_type_code ) AS num FROM (SELECT property_type_"
  },
  {
    "id": 1406,
    "db_id": "real_estate_rentals",
    "question": "What is the minimum number of rooms in a property?",
    "answer": "SELECT SUM(price_min ) FROM (SELECT MAX(price_min ) AS T1 , COUNT(owner_user_id ) AS count FROM (SELECT DISTINCT owner_user_id , COUNT(*) FROM (SELECT MIN(property_address_id ), COUNT(property_name ) FROM (SELECT property_type_code , COUNT(property_address_id ) FROM (SELECT DISTINCT address_id , COUNT(property_name ) FROM (SELECT D"
  },
  {
    "id": 1407,
    "db_id": "real_estate_rentals",
    "question": "What is the lowest room count across all the properties?",
    "answer": "SELECT DISTINCT COUNT(room_type_description ) FROM (SELECT DISTINCT COUNT(room_type_code ) AS total FROM (SELECT DISTINCT property_type_description FROM (SELECT DISTINCT property_type_code , SUM(room_size ) AS sum FROM (SELECT DISTINCT property_type_code FROM (SELECT DISTINCT property_type_description FROM (SELECT DISTINCT COUNT(property_type_description ) AS total FROM ("
  },
  {
    "id": 1408,
    "db_id": "real_estate_rentals",
    "question": "How many properties have 1 parking lot or 1 garage?",
    "answer": "SELECT COUNT(owner_user_id ) FROM (SELECT DISTINCT property_type_code , SUM(parking_lots ) AS total FROM (SELECT DISTINCT property_type_description FROM real_estate_rentals.Property_Photos WHERE parking_lots = 'YES' GROUP BY property_type_description ORDER BY property_type_code ) AS T WHERE county_state_province = 'boston' LIMIT 1"
  },
  {
    "id": 1409,
    "db_id": "real_estate_rentals",
    "question": "Count the number of properties that have 1 parking lot or 1 garage.",
    "answer": "SELECT COUNT(user_id ) FROM (SELECT COUNT(user_address_id ), COUNT(is_buyer ), COUNT(is_seller ) AS total FROM (SELECT DISTINCT owner_user_id , is_buyer , is_seller , date_registered FROM (SELECT COUNT(user_address_id ) AS num FROM (SELECT property_address_id FROM (SELECT DISTINCT property_address_id FROM (SELECT DISTINCT address"
  },
  {
    "id": 1410,
    "db_id": "real_estate_rentals",
    "question": "For users whose description contain the string 'Mother', which age categories are they in?",
    "answer": "SELECT DISTINCT age_category_description FROM (SELECT DISTINCT age_category_code , user_id FROM (SELECT DISTINCT user_category_code , user_address_id FROM (SELECT DISTINCT user_category_description FROM (SELECT user_category_code , user_address_id FROM (SELECT user_category_description FROM (SELECT DISTINCT user_category_code , user_address_id FROM (SELECT DISTINCT user_category"
  },
  {
    "id": 1411,
    "db_id": "real_estate_rentals",
    "question": "What are the age categories for users whose description contains the string Mother?",
    "answer": "SELECT DISTINCT age_category_description FROM (SELECT DISTINCT town_city FROM (SELECT DISTINCT town_city FROM real_estate_rentals.Property_Photos AS T INNER JOIN real_estate_rentals.Property_Features AS P   AS F  ON Features.property_type_code = 'PROPERTY_TYPE_CODE_MOTHER' ORDER BY"
  },
  {
    "id": 1412,
    "db_id": "real_estate_rentals",
    "question": "What is the first name of the user who owns the greatest number of properties?",
    "answer": "SELECT DISTINCT first_name FROM (SELECT COUNT(owner_user_id ), COUNT(property_type_code ) AS total FROM (SELECT property_type_code , COUNT(owner_user_id ) AS num FROM (SELECT owner_user_id FROM (SELECT COUNT(property_type_description ) AS num FROM real_estate_rentals.Properties)) GROUP BY owner_user_id ORDER BY county_state_province LIMIT 1"
  },
  {
    "id": 1413,
    "db_id": "real_estate_rentals",
    "question": "Return the first name of the user who owns the most properties.",
    "answer": "SELECT DISTINCT first_name FROM (SELECT DISTINCT MAX(first_name ) AS selling_first_name , COUNT(owner_user_id ) AS total FROM (SELECT DISTINCT first_name , owner_user_id , COUNT(login_name ) AS total FROM (SELECT user_address_id FROM real_estate_rentals.Addresses GROUP BY login_name ORDER BY county_state_province LIMIT 1))"
  },
  {
    "id": 1414,
    "db_id": "real_estate_rentals",
    "question": "List the average room count of the properties with gardens.",
    "answer": "SELECT AVG(town_city ) AS avg , COUNT(town_city ) FROM (SELECT DISTINCT town_city FROM (SELECT DISTINCT town_city , COUNT(property_type_code ), SUM(town_city ) AS sum_count FROM (SELECT property_type_description FROM (SELECT DISTINCT room_type_code , SUM(town_city ) AS sum_count FROM ("
  },
  {
    "id": 1415,
    "db_id": "real_estate_rentals",
    "question": "On average, how many rooms do properties with garden features have?",
    "answer": "SELECT COUNT(price_max ) AS num FROM (SELECT SUM(search_string ) AS sum , AVG(town_city ), AVG(town_city ), COUNT(price_max ) AS num FROM (SELECT DISTINCT Rooms.room_type_code , Rooms.room_type_description , Rooms.property_name , Rooms."
  },
  {
    "id": 1416,
    "db_id": "real_estate_rentals",
    "question": "In which cities are there any properties equipped with a swimming pool?",
    "answer": "SELECT DISTINCT COUNT(property_id ) FROM (SELECT property_address_id , SUM(Ref_Property_Types.property_type_description ) AS total_total FROM (SELECT COUNT(property_type_code ), SUM(Ref_Property_Types.property_type_description ) AS total_total FROM (SELECT DISTINCT property_type_description FROM (SELECT DISTINCT property_type_code , COUNT(property_type_"
  },
  {
    "id": 1417,
    "db_id": "real_estate_rentals",
    "question": "Return the cities in which there exist properties that have swimming pools.",
    "answer": "SELECT DISTINCT COUNT(price_max ) FROM (SELECT DISTINCT Properties.town_city FROM (SELECT DISTINCT COUNT(Properties.property_id ) AS num FROM real_estate_rentals.Properties AS p INNER JOIN real_estate_rentals.Ref_Property_Types AS p  ON price_max = '57236' GROUP BY"
  },
  {
    "id": 1418,
    "db_id": "real_estate_rentals",
    "question": "Which property had the lowest price requested by the vendor? List the id and the price.",
    "answer": "SELECT DISTINCT town_city FROM (SELECT DISTINCT property_id FROM (SELECT property_name , SUM(price_min ) AS sum FROM (SELECT MAX(price_min ) AS a , SUM(price_max ) AS b FROM (SELECT DISTINCT COUNT(property_type_code ), COUNT(town_city ), property_address_id FROM (SELECT DISTINCT p"
  },
  {
    "id": 1419,
    "db_id": "real_estate_rentals",
    "question": "What is the id of the property that had the lowest requested price from the vendor, and what was that price?",
    "answer": "SELECT MAX(Properties.property_id ), Properties.first_name , Properties.last_name FROM (SELECT MAX(price_min ), Properties.line_3_area_locality FROM (SELECT price_min FROM (SELECT Property_Photos.line_1_number_building , AVG(property_type_code ) AS price_min FROM (SELECT"
  },
  {
    "id": 1420,
    "db_id": "real_estate_rentals",
    "question": "On average, how many rooms does a property have?",
    "answer": "SELECT SUM(Addresses.room_type_description ) AS avg FROM (SELECT AVG(Property_Features.feature_id ), COUNT(Property_Features.feature_name ) AS num FROM (SELECT DISTINCT property_type_code , COUNT(property_type_code ) AS num FROM (SELECT Property_Features.feature_description , COUNT(property_type_description ) AS num FROM (SELECT DISTINCT property_"
  },
  {
    "id": 1421,
    "db_id": "real_estate_rentals",
    "question": "What is the average number of rooms in a property?",
    "answer": "SELECT AVG(county_state_province ) FROM (SELECT COUNT(zip_postcode ) AS sum FROM (SELECT address_id , SUM(room_type_description ), COUNT(address_id ) AS r FROM (SELECT DISTINCT address_id , room_type_description FROM real_estate_rentals.Addresses) AS T GROUP BY address_id ORDER BY property_name LIMIT 1) AS T GROUP BY county_"
  },
  {
    "id": 1422,
    "db_id": "real_estate_rentals",
    "question": "How many kinds of room sizes are listed?",
    "answer": "SELECT COUNT(room_type_description ) FROM (SELECT DISTINCT room_type_code , SUM(town_city ) AS total FROM (SELECT DISTINCT room_type_code , MAX(town_city ) AS pv FROM (SELECT DISTINCT room_type_description , COUNT(room_type_description ) AS n1 FROM (SELECT DISTINCT room_type_description , SUM(town_city ) AS pv"
  },
  {
    "id": 1423,
    "db_id": "real_estate_rentals",
    "question": "Return the number of different room sizes.",
    "answer": "SELECT COUNT(room_type_description ) FROM (SELECT DISTINCT Rooms.room_type_description , SUM(Rooms.line_1_number_building ), SUM(Rooms.line_2_number_street ) AS num_rooms FROM (SELECT DISTINCT Rooms.room_type_code , COUNT(Rooms.line_1_number_building ), COUNT(Rooms.line_2_number_street"
  },
  {
    "id": 1424,
    "db_id": "real_estate_rentals",
    "question": "What are the ids of users who have searched at least twice, and what did they search?",
    "answer": "SELECT DISTINCT user_id FROM (SELECT DISTINCT is_seller , COUNT(user_address_id ) AS total FROM (SELECT user_address_id FROM (SELECT COUNT(login_name ) AS num FROM (SELECT DISTINCT is_seller , COUNT(login_name ) FROM (SELECT DISTINCT address_id FROM (SELECT user_address_id , COUNT(address_id ) AS num FROM (SELECT DISTINCT user_address_"
  },
  {
    "id": 1425,
    "db_id": "real_estate_rentals",
    "question": "Return the ids of users who have performed two or more searches, as well as their search sequence.",
    "answer": "SELECT DISTINCT user_id FROM (SELECT DISTINCT MAX(user_address_id ) AS id , SUM(price_min ) AS num FROM (SELECT COUNT(user_address_id ), MIN(price_min ) AS num FROM (SELECT MIN(property_name ) AS user_address_id FROM (SELECT property_name FROM real_estate_rentals.Addresses) GROUP BY user_address_id ORDER BY county_"
  },
  {
    "id": 1426,
    "db_id": "real_estate_rentals",
    "question": "When was the time of the latest search by a user?",
    "answer": "SELECT COUNT(login_name ) FROM (SELECT login_name FROM (SELECT DISTINCT property_address_id , COUNT(user_address_id ) AS num FROM (SELECT address_id FROM (SELECT DISTINCT address_id FROM (SELECT DISTINCT user_address_id FROM (SELECT address_id FROM (SELECT user_address_id FROM real_estate_rentals.User_Property_History GROUP BY property_address_id ORDER BY"
  },
  {
    "id": 1427,
    "db_id": "real_estate_rentals",
    "question": "What was the time of the most recent search?",
    "answer": "SELECT COUNT(owner_user_id ) FROM (SELECT MAX(last_name ), MAX(first_name ), MAX(date_registered ), MAX(date_off_market ), MAX(property_name ), MAX(first_name ), MAX(middle_name ), MAX(last_name ), MAX(zip_postcode ) AS location FROM (SELECT DISTINCT last_name , first_name , middle_name , last_name"
  },
  {
    "id": 1428,
    "db_id": "real_estate_rentals",
    "question": "What are all the user searches time and content? Sort the result descending by content.",
    "answer": "SELECT SUM(Properties.date_on_market ) AS days FROM (SELECT DISTINCT Rooms.date_on_market , COUNT(Rooms.owner_user_id ) AS num FROM (SELECT DISTINCT Properties.date_on_market FROM real_estate_rentals.Properties WHERE Property_Features.feature_name = 'users' GROUP BY Properties.date_on_"
  },
  {
    "id": 1429,
    "db_id": "real_estate_rentals",
    "question": "Return the search strings and corresonding time stamps for all user searches, sorted by search string descending.",
    "answer": "SELECT DISTINCT login_name FROM (SELECT DISTINCT login_name FROM (SELECT DISTINCT address_id , COUNT(user_address_id ) AS num FROM (SELECT DISTINCT first_name , middle_name , last_name , date_registered FROM (SELECT DISTINCT address_id , zip_postcode , county_state_province FROM real_estate_rentals.Addresses GROUP BY address_id ORDER BY date"
  },
  {
    "id": 1430,
    "db_id": "real_estate_rentals",
    "question": "What are the zip codes of properties which do not belong to users who own at most 2 properties?",
    "answer": "SELECT DISTINCT COUNT(owner_user_id ) FROM (SELECT DISTINCT zip_postcode , COUNT(owner_user_id ) AS num FROM (SELECT DISTINCT property_type_description FROM (SELECT DISTINCT property_name FROM (SELECT DISTINCT property_type_description , owner_user_id FROM (SELECT DISTINCT Property_Photos.zip_postcode , property_type_description FROM (SELECT"
  },
  {
    "id": 1431,
    "db_id": "real_estate_rentals",
    "question": "Return the zip codes for properties not belonging to users who own two or fewer properties.",
    "answer": "SELECT DISTINCT photo_seq FROM (SELECT DISTINCT MIN(photo_seq ) AS ph FROM (SELECT DISTINCT COUNT(user_id ) FROM (SELECT DISTINCT user_address_id , MAX(property_name ) FROM (SELECT COUNT(property_address_id ), property_type_description FROM (SELECT DISTINCT property_type_code , COUNT(user_address_id ) AS num FROM"
  },
  {
    "id": 1432,
    "db_id": "real_estate_rentals",
    "question": "What are the users making only one search? List both category and user id.",
    "answer": "SELECT DISTINCT owner_user_id FROM (SELECT DISTINCT is_buyer FROM (SELECT DISTINCT is_seller FROM (SELECT COUNT(owner_user_id ) AS n FROM (SELECT DISTINCT property_name , login_name FROM (SELECT DISTINCT user_category_code , last_name FROM (SELECT DISTINCT user_address_id FROM (SELECT DISTINCT address_id FROM (SELECT DISTINCT COUNT("
  },
  {
    "id": 1433,
    "db_id": "real_estate_rentals",
    "question": "What are the ids of users who have only made one search, and what are their category codes?",
    "answer": "SELECT DISTINCT user_id FROM (SELECT COUNT(user_address_id ), user_category_code FROM (SELECT DISTINCT user_address_id FROM (SELECT DISTINCT owner_user_id FROM (SELECT DISTINCT address_id FROM real_estate_rentals.Properties WHERE date_registered = '2018-06-09' ORDER BY property_name LIMIT 1)) AS T ) AS T GROUP BY"
  },
  {
    "id": 1434,
    "db_id": "real_estate_rentals",
    "question": "What is the age range category of the user who made the first search?",
    "answer": "SELECT DISTINCT MAX(age_category_description ) FROM (SELECT DISTINCT age_category_description FROM real_estate_rentals.Users WHERE login_name = 'JOHN' GROUP BY login_name ORDER BY login_name LIMIT 1) AS T INNER JOIN (SELECT COUNT(login_name ), SUM(age_category_description ) AS min , MAX(age_category_description ) AS max FROM real_estate_rent"
  },
  {
    "id": 1435,
    "db_id": "real_estate_rentals",
    "question": "Return the age category for the user who made the earliest search.",
    "answer": "SELECT DISTINCT MAX(age_category_description ) FROM (SELECT DISTINCT owner_user_id , MAX(date_registered ) AS date FROM (SELECT DISTINCT first_name , last_name , login_name , password FROM (SELECT is_seller , user_address_id FROM (SELECT user_id , COUNT(user_address_id ) AS total FROM (SELECT DISTINCT user_address_id FROM (SELECT DISTINCT owner"
  },
  {
    "id": 1436,
    "db_id": "real_estate_rentals",
    "question": "Find the login names of all senior citizen users ordered by their first names.",
    "answer": "SELECT DISTINCT first_name FROM (SELECT owner_user_id FROM real_estate_rentals.Properties WHERE property_type_code = 'real estate rental' ORDER BY Features.feature_name LIMIT 1) AS t ORDER BY Features.feature_name LIMIT 1 OFFSET 1000000090057222463262864123"
  },
  {
    "id": 1437,
    "db_id": "real_estate_rentals",
    "question": "What are the login names of all senior citizens, sorted by first name?",
    "answer": "SELECT DISTINCT is_seller FROM (SELECT DISTINCT owner_user_id , login_name FROM (SELECT DISTINCT first_name , middle_name , last_name , property_name FROM (SELECT user_address_id , login_name FROM (SELECT DISTINCT first_name , middle_name , last_name , property_name FROM (SELECT DISTINCT user_address_id , login_name FROM (SELECT DISTINCT first_"
  },
  {
    "id": 1438,
    "db_id": "real_estate_rentals",
    "question": "How many searches do buyers make in total?",
    "answer": "SELECT COUNT(price_max ) FROM (SELECT SUM(search_seq ) AS total FROM (SELECT COUNT(price_max ) AS num FROM (SELECT COUNT(feature_name ) AS num , MAX(property_name ) AS p__name FROM (SELECT property_name , COUNT(feature_name ) AS num FROM (SELECT town_city , town_city , zip_postcode , COUNT(town"
  },
  {
    "id": 1439,
    "db_id": "real_estate_rentals",
    "question": "Count the number of searches made by buyers.",
    "answer": "SELECT COUNT(county_state_province ) FROM (SELECT COUNT(address_id ), COUNT(user_address_id ) AS total FROM (SELECT DISTINCT address_id , user_address_id FROM (SELECT address_id , county_state_province , COUNT(user_address_id ) AS res FROM (SELECT DISTINCT zip_postcode , COUNT(address_id ), COUNT(user_address_id ) AS res FROM ("
  },
  {
    "id": 1440,
    "db_id": "real_estate_rentals",
    "question": "When did the user with login name ratione register?",
    "answer": "SELECT COUNT(town_city ) FROM (SELECT DISTINCT town_city , MAX(town_city ) AS last FROM (SELECT DISTINCT town_city FROM (SELECT DISTINCT county_state_province FROM real_estate_rentals.Addresses GROUP BY county_state_province ORDER BY town_city LIMIT 1) AS T WHERE login_name = 'ratione' GROUP"
  },
  {
    "id": 1441,
    "db_id": "real_estate_rentals",
    "question": "What was the registration date for the user whose login name is ratione?",
    "answer": "SELECT DISTINCT first_name , middle_name FROM (SELECT DISTINCT date_registered , date_on_market FROM real_estate_rentals.Properties WHERE login_name = 'ratione' ORDER BY date_on_market LIMIT 1) AS T ORDER BY login_name LIMIT 2000000000000000000000000000000"
  },
  {
    "id": 1442,
    "db_id": "real_estate_rentals",
    "question": "List the first name, middle name and last name, and log in name of all the seller users, whose seller value is 1.",
    "answer": "SELECT DISTINCT user_id FROM (SELECT DISTINCT search_seq FROM (SELECT owner_user_id FROM (SELECT DISTINCT login_name FROM (SELECT user_address_id FROM (SELECT DISTINCT town_city , zip_postcode FROM (SELECT DISTINCT user_address_id FROM (SELECT town_city , zip_postcode FROM (SELECT DISTINCT COUNT("
  },
  {
    "id": 1443,
    "db_id": "real_estate_rentals",
    "question": "What are the first, middle, last, and login names for all users who are sellers?",
    "answer": "SELECT DISTINCT first_name , middle_name , last_name FROM (SELECT DISTINCT town_city , line_3_area_locality , login_name , password , zip_postcode FROM (SELECT DISTINCT town_city , line_3_area_locality , login_name , password FROM (SELECT DISTINCT town_city , zip_postcode , county_state_province FROM ("
  },
  {
    "id": 1444,
    "db_id": "real_estate_rentals",
    "question": "Where do the Senior Citizens live? List building, street, and the city.",
    "answer": "SELECT DISTINCT town_city FROM (SELECT DISTINCT town_city FROM (SELECT address_id FROM (SELECT DISTINCT address_id FROM (SELECT DISTINCT address_id FROM (SELECT DISTINCT line_3_area_locality FROM (SELECT DISTINCT line_2_number_street FROM (SELECT DISTINCT zip_postcode FROM (SELECT DISTINCT county_state_province FROM (SELECT DISTINCT"
  },
  {
    "id": 1445,
    "db_id": "real_estate_rentals",
    "question": "What are the buildings, streets, and cities corresponding to the addresses of senior citizens?",
    "answer": "SELECT DISTINCT address_id FROM (SELECT address_id , COUNT(line_1_number_building ) AS num FROM (SELECT DISTINCT line_1_number_building FROM real_estate_rentals.Addresses GROUP BY address_id ORDER BY age_category_description LIMIT 1) AS A GROUP BY address_id ORDER BY address_id , county_state_province , zip_postcode , county_state_province"
  },
  {
    "id": 1446,
    "db_id": "real_estate_rentals",
    "question": "How many properties are there with at least 2 features?",
    "answer": "SELECT COUNT(Properties.feature_id ) FROM (SELECT Features.feature_id , COUNT(Features.feature_name ) AS num FROM (SELECT Features.feature_id , COUNT(Properties.feature_name ) AS num FROM real_estate_rentals.Properties WHERE last_name = 'Price' GROUP BY Features.feature_name ORDER BY county_state_prov"
  },
  {
    "id": 1447,
    "db_id": "real_estate_rentals",
    "question": "Count the number of properties with at least two features.",
    "answer": "SELECT COUNT(Features.feature_id ) FROM (SELECT Features.feature_name , SUM(Features.is_buyer ) AS num FROM (SELECT DISTINCT Features.feature_name FROM (SELECT DISTINCT property_name , COUNT(property_address_id ), COUNT(is_buyer ) AS num FROM (SELECT Property_Features.property_address_id , COUNT(property_address_id ) AS"
  },
  {
    "id": 1448,
    "db_id": "real_estate_rentals",
    "question": "How many photos does each property have?",
    "answer": "SELECT COUNT(photo_filename ) FROM (SELECT DISTINCT property_id FROM (SELECT DISTINCT property_address_id , Ref_Property_Types.property_type_description FROM real_estate_rentals.Properties AS P INNER JOIN real_estate_rentals.Ref_Property_Types AS T    \n      \n            AS R  ON Property_Features.feature_id = R"
  },
  {
    "id": 1449,
    "db_id": "real_estate_rentals",
    "question": "Count the number of property photos each property has by id.",
    "answer": "SELECT COUNT(owner_user_id ) FROM (SELECT DISTINCT owner_user_id FROM real_estate_rentals.Property_Photos WHERE property_name = 'xxxxxx' GROUP BY owner_user_id ORDER BY county_state_province , zip_postcode LIMIT 1) AS T ORDER BY county_state_province , zip_postcode LIMIT 1000000000000"
  },
  {
    "id": 1450,
    "db_id": "real_estate_rentals",
    "question": "How many photos does each owner has of his or her properties? List user id and number of photos.",
    "answer": "SELECT DISTINCT user_id , COUNT(price_max ) AS num FROM (SELECT DISTINCT user_id , COUNT(price_max ) AS count FROM (SELECT DISTINCT owner_user_id , COUNT(property_address_id ) AS pri FROM (SELECT MAX(property_name ) AS p FROM (SELECT DISTINCT property_type_code , Ref_Property_Types.property_type_description FROM (SELECT"
  },
  {
    "id": 1451,
    "db_id": "real_estate_rentals",
    "question": "What are the user ids of property owners who have property photos, and how many do each of them have?",
    "answer": "SELECT COUNT(owner_user_id ) FROM (SELECT DISTINCT owner_user_id FROM real_estate_rentals.Property_Photos WHERE property_type_code = 'FH' GROUP BY user_id ORDER BY county_state_province LIMIT 1) AS T INNER JOIN (SELECT COUNT(owner_user_id ) AS num , MIN(date_registered ) FROM (SELECT DISTINCT owner_user_id"
  },
  {
    "id": 1452,
    "db_id": "real_estate_rentals",
    "question": "What is the total max price of the properties owned by single mothers or students?",
    "answer": "SELECT SUM(Properties.price_max ) AS MaxPrice FROM (SELECT Properties.owner_user_id , MAX(Properties.price_max ) FROM (SELECT owner_user_id , MAX(property_name ), property_type_code FROM (SELECT Properties.address_id , Properties.property_name FROM (SELECT DISTINCT Properties.owner_user_id , P"
  },
  {
    "id": 1453,
    "db_id": "real_estate_rentals",
    "question": "Give the total max price corresponding to any properties owned by single mothers or students.",
    "answer": "SELECT MAX(price_max ) FROM (SELECT COUNT(owner_user_id ), MAX(price_max ) AS sum FROM (SELECT DISTINCT owner_user_id FROM (SELECT MAX(owner_user_id ) AS id FROM (SELECT MAX(property_name ), MAX(date_registered ) AS dr , SUM(property_type_code ) AS PT FROM (SELECT DISTINCT property_type_description  FROM (SELECT DISTINCT"
  },
  {
    "id": 1454,
    "db_id": "real_estate_rentals",
    "question": "What are the date stamps and property names for each item of property history, ordered by date stamp?",
    "answer": "SELECT DISTINCT property_id FROM (SELECT Ref_Property_Types.property_type_description , COUNT(Ref_User_Categories.user_id ) AS COUNT FROM real_estate_rentals.Ref_Property_Types INNER JOIN (SELECT DISTINCT COUNT(property_name ) AS Stamp FROM real_estate_rentals.Property_Features GROUP BY property_"
  },
  {
    "id": 1455,
    "db_id": "real_estate_rentals",
    "question": "Return the date stamp and property name for each property history event, sorted by date stamp.",
    "answer": "SELECT COUNT(owner_user_id ), Property_Features.feature_name , Property_Features.feature_description FROM (SELECT DISTINCT owner_user_id , Features.feature_name , Features.feature_description , date_registered FROM (SELECT property_address_id , first_name , last_name FROM (SELECT property_type_code , COUNT(user_address_id ) AS num FROM (SELECT DIST"
  },
  {
    "id": 1456,
    "db_id": "real_estate_rentals",
    "question": "What is the description of the most common property type? List the description and code.",
    "answer": "SELECT DISTINCT property_type_description FROM (SELECT DISTINCT property_type_code , COUNT(property_type_code ) AS num FROM (SELECT DISTINCT property_type_description FROM real_estate_rentals.Properties GROUP BY property_type_description ORDER BY country LIMIT 1)) AS T ORDER BY country LIMIT 1"
  },
  {
    "id": 1457,
    "db_id": "real_estate_rentals",
    "question": "What is the most common property type, and what is its description.",
    "answer": "SELECT DISTINCT property_type_description FROM (SELECT DISTINCT property_type_code , SUM(county_state_province ) AS total FROM (SELECT COUNT(property_type_code ) AS num FROM (SELECT DISTINCT property_type_code FROM (SELECT DISTINCT COUNT(property_type_description ), COUNT(owner_user_id ) FROM (SELECT DISTINCT property_name , COUNT(is_seller ) FROM (SELECT D"
  },
  {
    "id": 1458,
    "db_id": "real_estate_rentals",
    "question": "What is the detailed description of the age category code 'Over 60'?",
    "answer": "SELECT DISTINCT town_city FROM (SELECT DISTINCT Rooms.town_city FROM (SELECT DISTINCT MIN(Rooms.zip_postcode ), MAX(Rooms.zip_postcode ) AS zp FROM (SELECT MIN(Rooms.zip_postcode ), MIN(Rooms.country ) FROM (SELECT DISTINCT Rooms.zip_post"
  },
  {
    "id": 1459,
    "db_id": "real_estate_rentals",
    "question": "Give the category description of the age category 'Over 60'.",
    "answer": "SELECT DISTINCT town_city FROM (SELECT DISTINCT county_state_province FROM (SELECT DISTINCT COUNT(country ) AS num FROM (SELECT country , COUNT(zip_postcode ) AS total FROM (SELECT address_id FROM (SELECT DISTINCT user_address_id FROM (SELECT user_category_description FROM (SELECT DISTINCT room_type_code FROM (SELECT DISTINCT property_type_description FROM (SELECT D"
  },
  {
    "id": 1460,
    "db_id": "real_estate_rentals",
    "question": "What are the different room sizes, and how many of each are there?",
    "answer": "SELECT COUNT(room_size ), SUM(room_type_code ) FROM (SELECT DISTINCT town_city , town_city , town_city , town_city , town_city , room_type_description FROM (SELECT DISTINCT Rooms.first_name , Rooms.last_name FROM (SELECT DISTINCT owner_user_id , first_name , last_name FROM"
  },
  {
    "id": 1461,
    "db_id": "real_estate_rentals",
    "question": "Return the number of rooms with each different room size.",
    "answer": "SELECT COUNT(town_city ) FROM (SELECT DISTINCT Rooms.town_city , SUM(Rooms.room_type_description ) AS total FROM (SELECT DISTINCT room_type_code , SUM(Rooms.room_type_description ) AS sum FROM (SELECT room_type_description FROM (SELECT DISTINCT Rooms.line_3_area_locality , Rooms.room_type_description FROM ("
  },
  {
    "id": 1462,
    "db_id": "real_estate_rentals",
    "question": "In which country does the user with first name Robbie live?",
    "answer": "SELECT DISTINCT COUNT(user_address_id ) FROM (SELECT DISTINCT user_address_id FROM real_estate_rentals.User_Searches WHERE user_address_id = 'ROBBYI1343968' LIMIT 1) AS T WHERE first_name = 'Robbie' GROUP BY country ORDER BY Ref_Age_Categories.country LIMIT 15000000"
  },
  {
    "id": 1463,
    "db_id": "real_estate_rentals",
    "question": "Return the country in which the user with first name Robbie lives.",
    "answer": "SELECT DISTINCT town_city FROM (SELECT DISTINCT county_state_province , zip_postcode FROM (SELECT DISTINCT zip_postcode FROM real_estate_rentals.Users WHERE login_name = 'ROB' GROUP BY county_state_province ORDER BY county_state_province LIMIT 1)) AS T ORDER BY town_city LIMIT 100000000000"
  },
  {
    "id": 1464,
    "db_id": "real_estate_rentals",
    "question": "What are the first, middle and last names of users who own the property they live in?",
    "answer": "SELECT DISTINCT user_id FROM (SELECT DISTINCT last_name , MIN(first_name ) AS middle_name , MAX(last_name ) AS middle_name FROM (SELECT DISTINCT first_name , middle_name FROM real_estate_rentals.Users ORDER BY date_on_market LIMIT 1) AS t WHERE town_city = 'silver lake city' GROUP BY user_id ORDER BY last_name ,"
  },
  {
    "id": 1465,
    "db_id": "real_estate_rentals",
    "question": "Return the full names of users who live in properties that they own.",
    "answer": "SELECT DISTINCT first_name , middle_name FROM (SELECT DISTINCT is_buyer , login_name , password , date_registered , zip_postcode , COUNT(owner_user_id ) AS total FROM (SELECT owner_user_id , COUNT(owner_user_id ) AS num FROM (SELECT login_name , password , COUNT(owner_user_id ) AS num FROM (SELECT DISTINCT is_buyer , login_name"
  },
  {
    "id": 1466,
    "db_id": "real_estate_rentals",
    "question": "List the search content of the users who do not own a single property.",
    "answer": "SELECT DISTINCT town_city FROM (SELECT DISTINCT town_city FROM real_estate_rentals.Properties WHERE owner_user_id = '0125463' GROUP BY town_city LIMIT 1) AS T ORDER BY town_city LIMIT 100000000000000000000000000000"
  },
  {
    "id": 1467,
    "db_id": "real_estate_rentals",
    "question": "What search strings were entered by users who do not own any properties?",
    "answer": "SELECT DISTINCT owner_user_id FROM (SELECT DISTINCT is_buyer FROM (SELECT COUNT(is_seller ) AS num FROM (SELECT COUNT(owner_user_id ), COUNT(property_type_code ) AS num FROM (SELECT login_name , password FROM (SELECT first_name , middle_name , last_name , login_name , password FROM (SELECT DISTINCT last_name , last_name FROM (SELECT DISTINCT"
  },
  {
    "id": 1468,
    "db_id": "real_estate_rentals",
    "question": "List the last names and ids of users who have at least 2 properties and searched at most twice.",
    "answer": "SELECT DISTINCT first_name , middle_name FROM (SELECT DISTINCT is_buyer , is_seller FROM (SELECT DISTINCT user_address_id , COUNT(user_address_id ) AS num FROM (SELECT COUNT(user_address_id ) AS num FROM (SELECT property_type_code FROM real_estate_rentals.Users GROUP BY user_address_id ORDER BY county_state_province LIMIT 2))"
  },
  {
    "id": 1469,
    "db_id": "real_estate_rentals",
    "question": "What are the last names and ids of users who have searched two or fewer times, and own two or more properties?",
    "answer": "SELECT DISTINCT login_name FROM (SELECT COUNT(user_id ) AS total FROM (SELECT COUNT(owner_user_id ) AS num FROM (SELECT user_address_id , COUNT(property_type_code ) AS num FROM (SELECT COUNT(user_address_id ) AS num FROM (SELECT COUNT(property_id ) AS num FROM (SELECT COUNT(property_address_id ) AS num FROM (SELECT COUNT(property_type_code ) AS"
  },
  {
    "id": 1470,
    "db_id": "bike_racing",
    "question": "How many bikes are heavier than 780 grams?",
    "answer": "SELECT SUM(price ) FROM bike_racing.bike WHERE weight >= 780 GROUP BY id ORDER BY weight LIMIT 1500000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1471,
    "db_id": "bike_racing",
    "question": "List the product names and weights of the bikes in ascending order of price.",
    "answer": "SELECT DISTINCT product_name , weight FROM bike_racing.cyclist ORDER BY price LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1472,
    "db_id": "bike_racing",
    "question": "List the heat, name, and nation for all the cyclists.",
    "answer": "SELECT DISTINCT product_name , nation , price FROM bike_racing.cyclist GROUP BY product_name , nation ORDER BY price LIMIT 10000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1473,
    "db_id": "bike_racing",
    "question": "What are the maximum and minimum weight of all bikes?",
    "answer": "SELECT SUM(weight ), MIN(weight ) FROM bike_racing.bike GROUP BY id ORDER BY weight LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1474,
    "db_id": "bike_racing",
    "question": "What is the average price of the bikes made of material 'Carbon CC'?",
    "answer": "SELECT SUM(purchase_year ) FROM bike_racing.cyclists_own_bikes WHERE product_name = 'carbon cc' GROUP BY product_name ORDER BY result LIMIT 10000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1475,
    "db_id": "bike_racing",
    "question": "What are the name and result of the cyclists not from 'Russia' ?",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT cyclist.name FROM bike_racing.cyclist AS T INNER JOIN bike_racing.bike AS B    AS U  ON cyclist.id =  bike_racing.bike_id ORDER BY purchase_year LIMIT 1) AS t WHERE name = 'none' INNER JOIN (SELECT DISTINCT cyclists_own"
  },
  {
    "id": 1476,
    "db_id": "bike_racing",
    "question": "What are the distinct ids and product names of the bikes that are purchased after year 2015?",
    "answer": "SELECT DISTINCT id , name FROM bike_racing.cyclists_own_bikes WHERE purchase_year > 2015 GROUP BY id ORDER BY id LIMIT 1 OFFSET 14697068840316253930637783639735611489310484191544986"
  },
  {
    "id": 1477,
    "db_id": "bike_racing",
    "question": "What are the ids and names of racing bikes that are purchased by at least 4 cyclists?",
    "answer": "SELECT id , name FROM bike_racing.cyclist GROUP BY id ORDER BY id LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1478,
    "db_id": "bike_racing",
    "question": "What are the id and name of the cyclist who owns the most bikes?",
    "answer": "SELECT id FROM bike_racing.cyclists_own_bikes GROUP BY id ORDER BY product_name LIMIT 100000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1479,
    "db_id": "bike_racing",
    "question": "What are the distinct product names of bikes owned by cyclists from 'Russia' or cyclists from 'Great Britain'?",
    "answer": "SELECT DISTINCT name FROM bike_racing.cyclist WHERE cyclists_own_bikes.nation = 'ru' ORDER BY cyclists_own_bikes.cyclist_id LIMIT 1500000000296308674500164395023593646272723936"
  },
  {
    "id": 1480,
    "db_id": "bike_racing",
    "question": "How many different levels of heat are there for the cyclists?",
    "answer": "SELECT SUM(nation ) FROM bike_racing.cyclist AS T WHERE result = 'High' GROUP BY nation ORDER BY nation LIMIT 1000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1481,
    "db_id": "bike_racing",
    "question": "How many cyclists did not purchase any bike after year 2015?",
    "answer": "SELECT COUNT(bike_id ) FROM bike_racing.cyclist WHERE purchase_year = '2015' GROUP BY bike_id ORDER BY result LIMIT 10000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1482,
    "db_id": "bike_racing",
    "question": "What are the names of distinct racing bikes that are purchased by the cyclists with better results than '4:21.558' ?",
    "answer": "SELECT DISTINCT name FROM bike_racing.cyclist WHERE id = (SELECT id FROM (SELECT DISTINCT id FROM bike_racing.cyclist WHERE nation = 90 ORDER BY result LIMIT 1) AS T GROUP BY id ORDER BY result LIMIT 2) ORDER BY id LIMIT 345678791285318477660487514266"
  },
  {
    "id": 1483,
    "db_id": "bike_racing",
    "question": "List the name and price of the bike that is owned by both the cyclists named 'Bradley Wiggins' and the cyclist named 'Antonio Tauler'.",
    "answer": "SELECT DISTINCT name , price FROM bike_racing.cyclists_own_bikes AS T INNER JOIN bike_racing.cyclists_own_bikes AS T  ON id = (SELECT cyclist.id FROM bike_racing.cyclist WHERE id = 'Bradley Wiggins' ORDER BY id LIMIT 1) ORDER BY name , price LIMIT 200"
  },
  {
    "id": 1484,
    "db_id": "bike_racing",
    "question": "Show the name, nation and result for the cyclists who did not purchase any racing bike.",
    "answer": "SELECT DISTINCT name FROM (SELECT DISTINCT purchase_year , nation FROM bike_racing.cyclist WHERE product_name = 'Racing bikes' LIMIT 1) AS T ORDER BY result LIMIT 200168734053729589350000000000000000000000000000"
  },
  {
    "id": 1485,
    "db_id": "bike_racing",
    "question": "What are the names of the bikes that have substring 'fiber' in their material?",
    "answer": "SELECT DISTINCT name FROM bike_racing.bike WHERE name = 'fiber' ORDER BY product_name LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1486,
    "db_id": "bike_racing",
    "question": "How many bikes does each cyclist own? Order by cyclist id.",
    "answer": "SELECT SUM(bike.price ) FROM bike_racing.cyclists_own_bikes AS T INNER JOIN (SELECT DISTINCT bike_id , purchase_year , MAX(result ) AS result FROM bike_racing.cyclist WHERE id = '948714') AS T  ON bike_racing.cyclists_own_bikes.bike_id = bike.bi"
  },
  {
    "id": 1487,
    "db_id": "bakery_1",
    "question": "What is the most expensive cake and its flavor?",
    "answer": "SELECT SUM(items.Price ) FROM (SELECT DISTINCT items.Price , items.Flavor FROM (SELECT DISTINCT items.Flavor FROM (SELECT ReceiptNumber , items.Item , Item , Flavor FROM (SELECT DISTINCT ReceiptNumber , Food FROM (SELECT DISTINCT MIN(Item ) FROM (SELECT DISTINCT Date FROM (SELECT ReceiptNumber , item"
  },
  {
    "id": 1488,
    "db_id": "bakery_1",
    "question": "Give the id and flavor of the most expensive cake.",
    "answer": "SELECT DISTINCT MAX(Item ), Flavor FROM (SELECT DISTINCT Receipt FROM (SELECT SUM(Price ) AS sum , Receipt FROM (SELECT * FROM (SELECT DISTINCT items.Flavor , items.Ordinal , SUM(Price ) FROM (SELECT DISTINCT goods.Item , receipts.ReceiptNumber , Flavor , Receipt FROM (SELECT DISTINCT items.Flav"
  },
  {
    "id": 1489,
    "db_id": "bakery_1",
    "question": "What is the cheapest cookie and its flavor?",
    "answer": "SELECT DISTINCT Flavor FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT goods.Food , items.Receipt FROM (SELECT DISTINCT items.Ordinal , items.Flavor FROM (SELECT DISTINCT items.Item , Price FROM (SELECT DISTINCT Receipt , Price FROM (SELECT DISTINCT goods.Id , items.Ordinal , items."
  },
  {
    "id": 1490,
    "db_id": "bakery_1",
    "question": "What is the id and flavor of the cheapest cookie?",
    "answer": "SELECT DISTINCT Date FROM (SELECT DISTINCT ReceiptNumber FROM (SELECT DISTINCT receipts.Item , receipts.Ordinal , items.Flavor , receipts.Price FROM (SELECT DISTINCT receipts.Receipt , items.Flavor FROM (SELECT DISTINCT items.Flavor , ReceiptNumber , ReceiptNumber FROM (SELECT DISTINCT"
  },
  {
    "id": 1491,
    "db_id": "bakery_1",
    "question": "Find the ids of goods that have apple flavor.",
    "answer": "SELECT DISTINCT Item FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Ordinal , items.Flavor FROM (SELECT DISTINCT Flavor FROM (SELECT DISTINCT Food FROM (SELECT items.ReceiptNumber , items.Food FROM (SELECT DISTINCT items.Id , receipts.ReceiptNumber FROM (SELECT DISTINCT items.Ordinal , items.Item FROM "
  },
  {
    "id": 1492,
    "db_id": "bakery_1",
    "question": "What are the ids with apple flavor?",
    "answer": "SELECT DISTINCT Id FROM (SELECT DISTINCT Flavor FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Food , COUNT(items.Item ) AS num FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT Date FROM (SELECT DISTINCT items.Id FROM (SELECT DISTINCT items.Price , items.Id FROM (SELECT DISTINCT items"
  },
  {
    "id": 1493,
    "db_id": "bakery_1",
    "question": "What are the ids of goods that cost less than 3 dollars?",
    "answer": "SELECT DISTINCT Item FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT goods.Item , SUM(items.Price ) AS sum FROM (SELECT DISTINCT items.Food , SUM(items.Price ) AS price FROM (SELECT DISTINCT goods.Flavor , SUM(items.Price ) AS sum FROM (SELECT DISTINCT items.Price , items.ReceiptNumber FROM (SELECT DISTINCT receipts.Rece"
  },
  {
    "id": 1494,
    "db_id": "bakery_1",
    "question": "Give the ids of goods that cost less than 3 dollars.",
    "answer": "SELECT DISTINCT Item FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT ReceiptNumber , Receipt , Ordinal FROM (SELECT DISTINCT Receipt , Ordinal FROM (SELECT DISTINCT items.Flavor , items.Price FROM (SELECT DISTINCT Flavor , Price , items.Id FROM (SELECT DISTINCT Date , Item FROM (SELECT DISTINCT items."
  },
  {
    "id": 1495,
    "db_id": "bakery_1",
    "question": "List the distinct ids of all customers who bought a cake with lemon flavor?",
    "answer": "SELECT DISTINCT customers.Id FROM (SELECT DISTINCT items.CustomerId FROM (SELECT DISTINCT items.Item FROM (SELECT items.Flavor , ReceiptNumber FROM (SELECT DISTINCT items.Item , ReceiptNumber FROM (SELECT DISTINCT receipts.ReceiptNumber FROM (SELECT DISTINCT receipts.Ordinal , items.Flavor FROM (SELECT D"
  },
  {
    "id": 1496,
    "db_id": "bakery_1",
    "question": "What are the distinct ids of customers who bought lemon flavored cake?",
    "answer": "SELECT DISTINCT Date FROM (SELECT DISTINCT Item , Ordinal , Receipt FROM (SELECT DISTINCT Flavor , Item , Price FROM (SELECT DISTINCT items.Flavor , items.Food , receipts.Ordinal FROM (SELECT DISTINCT Date FROM (SELECT DISTINCT customers.Id , ReceiptNumber FROM (SELECT DISTINCT customers.FirstName , items.Item ,"
  },
  {
    "id": 1497,
    "db_id": "bakery_1",
    "question": "For each type of food, tell me how many customers have ever bought it.",
    "answer": "SELECT COUNT(CustomerId ) FROM (SELECT DISTINCT Item , CustomerId FROM (SELECT DISTINCT items.Item , receipts.ReceiptNumber FROM (SELECT DISTINCT items.Flavor , items.Food , Receipt FROM (SELECT DISTINCT Flavor FROM (SELECT DISTINCT Food FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Food , recei"
  },
  {
    "id": 1498,
    "db_id": "bakery_1",
    "question": "How many customers have bought each food?",
    "answer": "SELECT SUM(Price ) FROM (SELECT DISTINCT FirstName , LastName , Food FROM (SELECT Flavor , Item FROM (SELECT DISTINCT items.Food FROM (SELECT ReceiptNumber , Ordinal FROM (SELECT DISTINCT receipts.Item , receipts.Food FROM (SELECT DISTINCT items.Flavor , receipts.Item FROM (SELECT DISTINCT Flavor , Item"
  },
  {
    "id": 1499,
    "db_id": "bakery_1",
    "question": "Find the id of customers who shopped at the bakery at least 15 times.",
    "answer": "SELECT DISTINCT CustomerId FROM (SELECT DISTINCT customers.CustomerId FROM (SELECT COUNT(Item ) AS num FROM (SELECT DISTINCT Item FROM (SELECT items.Flavor , SUM(Price ), ReceiptNumber FROM (SELECT DISTINCT receipts.Receipt FROM (SELECT DISTINCT Flavor , MAX(Price ) FROM (SELECT items.Flavor , SUM(Price ) AS num"
  },
  {
    "id": 1500,
    "db_id": "bakery_1",
    "question": "What are the customer ids of customers who have at least 15 receipts?",
    "answer": "SELECT DISTINCT customers.Id FROM (SELECT DISTINCT COUNT(Item ) AS num FROM (SELECT DISTINCT items.Flavor , SUM(items.Price ), items.Receipt FROM (SELECT DISTINCT Date , Date , items.Flavor FROM (SELECT DISTINCT ReceiptNumber , receipts.Ordinal FROM (SELECT DISTINCT Receipt , Ordinal , Item FROM (SELECT DIST"
  },
  {
    "id": 1501,
    "db_id": "bakery_1",
    "question": "What is the last name of the customers who shopped at the bakery more than 10 times?",
    "answer": "SELECT DISTINCT LastName FROM (SELECT LastName FROM (SELECT COUNT(*) AS total FROM (SELECT items.ReceiptNumber , SUM(items.Price ) AS num FROM (SELECT DISTINCT items.Item FROM (SELECT * FROM (SELECT items.ReceiptNumber , items.Ordinal , Receipt FROM (SELECT DISTINCT items.ReceiptNumber , items.Flavor , items.Price FROM (SELECT D"
  },
  {
    "id": 1502,
    "db_id": "bakery_1",
    "question": "Give the last names of customers who have been to the bakery more than 10 times?",
    "answer": "SELECT DISTINCT LastName FROM (SELECT DISTINCT FirstName , MAX(ReceiptNumber ) AS Recid FROM (SELECT ReceiptNumber , COUNT(Id ) AS N FROM (SELECT DISTINCT Flavor , Price FROM (SELECT * FROM (SELECT Flavor , MIN(Price ) AS q FROM (SELECT DISTINCT Item , Flavor , Price FROM (SELECT Flavor , Id , MIN(Price ) AS q"
  },
  {
    "id": 1503,
    "db_id": "bakery_1",
    "question": "How many types of Cake does this bakery sell?",
    "answer": "SELECT COUNT(items.Item ) FROM (SELECT DISTINCT items.Flavor , items.Price FROM (SELECT DISTINCT items.Flavor FROM (SELECT items.Flavor FROM (SELECT DISTINCT Flavor FROM (SELECT DISTINCT items.Food FROM (SELECT DISTINCT items.Ordinal FROM (SELECT DISTINCT items.Item , items.Price FROM (SELECT DISTINCT item"
  },
  {
    "id": 1504,
    "db_id": "bakery_1",
    "question": "Count the number of types of cake this bakery sells.",
    "answer": "SELECT COUNT(items.Item ) FROM (SELECT DISTINCT items.Flavor , items.Price FROM (SELECT DISTINCT items.Flavor FROM (SELECT items.Flavor , items.Price FROM (SELECT ReceiptNumber , items.Id FROM (SELECT DISTINCT items.Item FROM bakery_1.items AS i INNER JOIN bakery_1.receipts AS r  ON"
  },
  {
    "id": 1505,
    "db_id": "bakery_1",
    "question": "List all the flavors of Croissant available in this bakery.",
    "answer": "SELECT DISTINCT Flavor FROM (SELECT DISTINCT Flavor FROM bakery_1.items GROUP BY Flavor ORDER BY Item LIMIT 1) AS T ORDER BY Flavor LIMIT 1000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1506,
    "db_id": "bakery_1",
    "question": "What are all the flavors of croissant?",
    "answer": "SELECT DISTINCT Flavor FROM (SELECT DISTINCT Flavor FROM (SELECT Item , SUM(Price ) AS num FROM (SELECT DISTINCT items.Flavor , Ordinal , Price FROM (SELECT DISTINCT Food , Ordinal , Price FROM (SELECT DISTINCT items.Flavor , Item FROM (SELECT DISTINCT Item FROM (SELECT DISTINCT items.Flavor , Ordinal , Price"
  },
  {
    "id": 1507,
    "db_id": "bakery_1",
    "question": "Give me a list of all the distinct items bought by the customer number 15.",
    "answer": "SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Flavor , MAX(items.Price ) AS id FROM (SELECT DISTINCT items.Flavor , MIN(items.Price ) AS max_price FROM (SELECT DISTINCT items.Id , items.CustomerId FROM (SELECT DISTINCT items.Flavor , MIN(Item ) AS min_price FROM (SELECT DISTINCT items"
  },
  {
    "id": 1508,
    "db_id": "bakery_1",
    "question": "What are all the distinct items bought by customer 15?",
    "answer": "SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Ordinal FROM (SELECT DISTINCT Ordinal FROM (SELECT DISTINCT items.Flavor FROM (SELECT DISTINCT Flavor FROM (SELECT DISTINCT Food , ReceiptNumber FROM (SELECT ReceiptNumber , Date , Item FROM (SELECT DISTINCT Flavor FROM (SELECT DISTINCT Food , ReceiptNumber FROM (SELECT D"
  },
  {
    "id": 1509,
    "db_id": "bakery_1",
    "question": "For each type of food, what are the average, maximum and minimum price?",
    "answer": "SELECT AVG(Price ), MAX(Price ), MIN(Price ) FROM (SELECT DISTINCT Item , ReceiptNumber FROM (SELECT DISTINCT items.Flavor , items.Food , items.Price FROM (SELECT DISTINCT goods.Flavor , goods.Ordinal , receipts.ReceiptNumber FROM (SELECT DISTINCT goods.Flavor , items.Item , items.Price FROM (SELECT DISTINCT"
  },
  {
    "id": 1510,
    "db_id": "bakery_1",
    "question": "What are the average, minimum and maximum prices for each food?",
    "answer": "SELECT AVG(Price ), MAX(Price ), MIN(Price ) FROM (SELECT DISTINCT SUM(Price ), SUM(Price ) AS min , SUM(Price ) AS max , Flavor FROM (SELECT DISTINCT Flavor , SUM(Flavor ) AS min , SUM(Flavor ) AS max , Item FROM (SELECT Flavor , MAX(Price ) AS num FROM (SELECT DISTINCT Flavor , SUM(Price )"
  },
  {
    "id": 1511,
    "db_id": "bakery_1",
    "question": "Find the receipt numbers where both Cake and Cookie were bought.",
    "answer": "SELECT DISTINCT receipts.ReceiptNumber FROM (SELECT DISTINCT Item FROM (SELECT Item FROM (SELECT items.Item , Receipt FROM (SELECT DISTINCT items.Ordinal , items.Flavor , items.Food FROM (SELECT DISTINCT items.Flavor , Flavor FROM (SELECT DISTINCT items.Item , Flavor FROM (SELECT DISTINCT items.Food , items"
  },
  {
    "id": 1512,
    "db_id": "bakery_1",
    "question": "What are the receipt numbers for instances where both cakes and cookies were purchased?",
    "answer": "SELECT receipts.ReceiptNumber FROM (SELECT DISTINCT receipts.ReceiptNumber FROM (SELECT ReceiptNumber FROM (SELECT DISTINCT items.Ordinal , Item FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Flavor FROM (SELECT DISTINCT customers.Item FROM (SELECT DISTINCT customers.Food FROM (SELECT DISTINCT items."
  },
  {
    "id": 1513,
    "db_id": "bakery_1",
    "question": "Find all the receipt numbers in which customer with last name LOGAN purchased Croissant.",
    "answer": "SELECT DISTINCT receipts.ReceiptNumber FROM (SELECT DISTINCT items.Item , Receipt FROM (SELECT DISTINCT items.Ordinal , receipts.Flavor , receipts.Price FROM (SELECT Receipt , Flavor , Price FROM (SELECT DISTINCT items.Id , SUM(Price ) AS Total FROM (SELECT DISTINCT items.Ordinal , receipts.Price FROM"
  },
  {
    "id": 1514,
    "db_id": "bakery_1",
    "question": "What are the receipt numbers for a customer with the last name Logan who purchased a croissant?",
    "answer": "SELECT DISTINCT receipts.ReceiptNumber FROM (SELECT DISTINCT items.Item , Receipt FROM (SELECT DISTINCT items.Flavor , items.Ordinal , receipts.CustomerId FROM (SELECT DISTINCT Flavor , Ordinal FROM (SELECT DISTINCT goods.Food , receipts.ReceiptNumber FROM (SELECT DISTINCT Receipt , items.Item FROM (SELECT D"
  },
  {
    "id": 1515,
    "db_id": "bakery_1",
    "question": "What is the receipt number and date of the receipt in which the most expensive item was bought?",
    "answer": "SELECT DISTINCT receipts.ReceiptNumber , receipts.Date FROM (SELECT MAX(receipts.ReceiptNumber ), receipts.Date FROM (SELECT receipts.Id , SUM(Price ) AS sum FROM (SELECT ReceiptNumber , Flavor FROM (SELECT DISTINCT Flavor FROM (SELECT COUNT(Item ), MAX(Price ) FROM (SELECT ReceiptNumber , Item FROM (SELECT DIST"
  },
  {
    "id": 1516,
    "db_id": "bakery_1",
    "question": "What is the receipt number and date corresponding to the receipt for which the most expensive item was purchased?",
    "answer": "SELECT DISTINCT receipts.ReceiptNumber , receipts.Date , MAX(receipts.Item ) AS Receipt_Price FROM (SELECT DISTINCT receipts.ReceiptNumber , receipts.Receipt , items.Ordinal , SUM(items.Price ) AS TotalPrice FROM (SELECT DISTINCT items.Id , receipts.Ordinal FROM (SELECT Receipt FROM (SELECT DISTINCT items."
  },
  {
    "id": 1517,
    "db_id": "bakery_1",
    "question": "What is the item that was bought the least number of times?",
    "answer": "SELECT items.Item FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Flavor , COUNT(items.ReceiptNumber ) AS NumFrom FROM (SELECT * FROM (SELECT Flavor , SUM(Price ) FROM (SELECT DISTINCT Item FROM (SELECT DISTINCT ReceiptNumber FROM (SELECT Flavor , ReceiptNumber FROM (SELECT DISTINCT ReceiptNumb"
  },
  {
    "id": 1518,
    "db_id": "bakery_1",
    "question": "Which item was bought the fewest times?",
    "answer": "SELECT COUNT(Item ) FROM (SELECT DISTINCT Item FROM (SELECT DISTINCT items.Flavor , MAX(ReceiptNumber ) AS num FROM (SELECT DISTINCT items.Food , MAX(ReceiptNumber ) AS num FROM (SELECT DISTINCT Flavor , ReceiptNumber FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Food , items.Ordinal FROM (SELECT DISTINCT item"
  },
  {
    "id": 1519,
    "db_id": "bakery_1",
    "question": "How many goods are available for each food type?",
    "answer": "SELECT COUNT(items.Item ) FROM (SELECT DISTINCT items.Item , COUNT(items.Flavor ) AS num FROM (SELECT DISTINCT Flavor , Ordinal FROM (SELECT DISTINCT Food , Ordinal FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT Flavor , Item , ReceiptNumber FROM (SELECT DISTINCT items.Food , Item FROM ("
  },
  {
    "id": 1520,
    "db_id": "bakery_1",
    "question": "Count the number of goods for each food type.",
    "answer": "SELECT SUM(Date ), SUM(Price ) FROM (SELECT DISTINCT items.Item , items.Price FROM (SELECT DISTINCT items.Flavor , items.Price FROM (SELECT DISTINCT items.Food FROM (SELECT DISTINCT items.Food FROM (SELECT DISTINCT items.Food , items.Ordinal FROM (SELECT DISTINCT items.Food FROM (SELECT DISTINCT"
  },
  {
    "id": 1521,
    "db_id": "bakery_1",
    "question": "What is the average price for each food type?",
    "answer": "SELECT DISTINCT SUM(Price ) FROM (SELECT DISTINCT Flavor FROM (SELECT * FROM (SELECT DISTINCT Food , SUM(Price ) AS sum FROM (SELECT DISTINCT Flavor FROM (SELECT DISTINCT Price FROM (SELECT DISTINCT Food FROM (SELECT DISTINCT Item , items.Ordinal FROM (SELECT DISTINCT Date , Item , COUNT(*) AS num FROM (SELECT DISTINCT items."
  },
  {
    "id": 1522,
    "db_id": "bakery_1",
    "question": "Give the average price for each food type.",
    "answer": "SELECT DISTINCT SUM(Price ) FROM (SELECT DISTINCT Flavor FROM (SELECT Flavor FROM (SELECT DISTINCT items.Food FROM (SELECT DISTINCT items.Item , items.Price FROM (SELECT DISTINCT items.Food , items.Price FROM (SELECT DISTINCT goods.Id , items.Flavor FROM (SELECT DISTINCT Flavor FROM "
  },
  {
    "id": 1523,
    "db_id": "bakery_1",
    "question": "What are ids of the goods that have Apricot flavor and are cheaper than 5 dollars?",
    "answer": "SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Ordinal FROM (SELECT DISTINCT Ordinal FROM (SELECT DISTINCT Flavor FROM (SELECT DISTINCT items.Food FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Flavor FROM (SELECT DISTINCT items.Food FROM (SELECT DISTINCT Item FROM (SELECT DISTINCT Food FROM (SELECT DISTINCT"
  },
  {
    "id": 1524,
    "db_id": "bakery_1",
    "question": "Give the ids for goods that have Apricot flavor and have a price lower than 5 dollars.",
    "answer": "SELECT DISTINCT Item FROM (SELECT DISTINCT items.Item , SUM(items.Price ) AS sum_price FROM (SELECT DISTINCT items.Flavor , SUM(items.Price ) AS sum_price FROM (SELECT DISTINCT Flavor , items.Item , SUM(items.Price ) FROM (SELECT items.Flavor , items.Ordinal , SUM(items.Price ) AS sum_price"
  },
  {
    "id": 1525,
    "db_id": "bakery_1",
    "question": "Find flavor of cakes that cost more than 10 dollars.",
    "answer": "SELECT DISTINCT Flavor FROM (SELECT DISTINCT Flavor FROM bakery_1.goods WHERE Price > 10 ORDER BY Price LIMIT 1) AS T WHERE Id = '2478' LIMIT 1"
  },
  {
    "id": 1526,
    "db_id": "bakery_1",
    "question": "What are the flavors of cakes that cost more than 10 dollars?",
    "answer": "SELECT DISTINCT Flavor FROM (SELECT SUM(Price ) AS sum FROM (SELECT * FROM (SELECT items.Flavor , SUM(items.Price ) AS sum FROM (SELECT DISTINCT items.Item FROM (SELECT ReceiptNumber , Item FROM (SELECT DISTINCT items.Ordinal , items.Flavor FROM (SELECT COUNT(items.Item ) AS num FROM (SELECT * FROM (SELECT DISTINCT"
  },
  {
    "id": 1527,
    "db_id": "bakery_1",
    "question": "Give me the distinct id and price for all goods whose price is below the average of all goods?",
    "answer": "SELECT DISTINCT Id , Price FROM (SELECT SUM(Price ) AS sum1 , SUM(Price ) AS avg FROM (SELECT DISTINCT items.Item , SUM(items.Flavor ) AS total FROM (SELECT items.Price , items.Flavor FROM (SELECT DISTINCT ReceiptNumber , Ordinal , Item , Price FROM (SELECT DISTINCT items.Receipt , Ordinal , items"
  },
  {
    "id": 1528,
    "db_id": "bakery_1",
    "question": "What are the distinct ids and prices for goods that cost less than the average good?",
    "answer": "SELECT DISTINCT Id , Price FROM (SELECT DISTINCT Flavor , MAX(Price ) AS num FROM (SELECT SUM(Price ), Flavor FROM (SELECT DISTINCT Item , AVG(Price ) FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT goods.Food FROM (SELECT DISTINCT goods.Flavor FROM (SELECT DISTINCT items.Id FROM (SELECT DISTINCT goods.Id FROM (SELECT DISTINCT"
  },
  {
    "id": 1529,
    "db_id": "bakery_1",
    "question": "What are the distinct ids of all goods that are cheaper than some goods of type Tart?",
    "answer": "SELECT DISTINCT Item FROM (SELECT DISTINCT items.Item , COUNT(items.Price ) AS num FROM (SELECT DISTINCT items.Flavor , items.Price , SUM(items.Price ) AS num FROM (SELECT DISTINCT goods.Food , Date FROM (SELECT DISTINCT items.Food , items.Ordinal , MAX(ReceiptNumber ) AS id FROM (SELECT DISTINCT items."
  },
  {
    "id": 1530,
    "db_id": "bakery_1",
    "question": "Give the distinct ids for goods that cost less than any Tart.",
    "answer": "SELECT DISTINCT Id FROM (SELECT DISTINCT Item FROM (SELECT items.Item FROM (SELECT DISTINCT items.Flavor , SUM(items.Price ) AS total_price FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Food  FROM (SELECT DISTINCT Flavor , items.Ordinal FROM (SELECT DISTINCT Flavor , items.Price FROM (SELECT DISTINCT"
  },
  {
    "id": 1531,
    "db_id": "bakery_1",
    "question": "List distinct receipt numbers for which someone bought a good that costs more than 13 dollars.",
    "answer": "SELECT DISTINCT Date FROM (SELECT DISTINCT Date FROM (SELECT DISTINCT Ordinal , SUM(Price ) AS total FROM (SELECT ReceiptNumber , Price , Item FROM (SELECT items.Item , COUNT(items.ReceiptNumber ) AS num FROM (SELECT Receipt , Ordinal , Price , items.Item FROM (SELECT DISTINCT ReceiptNumber , Price , items.Item FROM (SELECT DISTINCT item"
  },
  {
    "id": 1532,
    "db_id": "bakery_1",
    "question": "What distinct receipt numbers correspond to someone who bought a good that costs more than 13 dollars?",
    "answer": "SELECT DISTINCT ReceiptNumber FROM (SELECT DISTINCT Receipt , Ordinal FROM (SELECT SUM(Price ) AS Total FROM (SELECT DISTINCT items.Item , Price FROM (SELECT DISTINCT items.Receipt , Price FROM (SELECT DISTINCT Flavor , SUM(Price ) AS total FROM (SELECT DISTINCT Item FROM (SELECT DISTINCT items.Flavor , items.Price FROM"
  },
  {
    "id": 1533,
    "db_id": "bakery_1",
    "question": "On which date did some customer buy a good that costs more than 15 dollars?",
    "answer": "SELECT MAX(Date ) FROM (SELECT DISTINCT receipts.ReceiptNumber , receipts.Item FROM (SELECT DISTINCT Item , SUM(Price ) AS Total_Price FROM (SELECT items.Item , SUM(Price ) AS Total_Price FROM (SELECT DISTINCT receipts.ReceiptNumber , items.Ordinal FROM (SELECT DISTINCT receipts.Id , receipts.CustomerId FROM (SELECT DIST"
  },
  {
    "id": 1534,
    "db_id": "bakery_1",
    "question": "Which date corresponds to when a customer purchased a good costing over 15 dollars?",
    "answer": "SELECT MAX(Date ) FROM (SELECT DISTINCT SUM(receipts.Item ), receipts.ReceiptNumber , receipts.Ordinal FROM (SELECT DISTINCT receipts.Item , receipts.ReceiptNumber , receipts.Ordinal FROM (SELECT DISTINCT items.Id , receipts.Item , receipts.ReceiptNumber FROM (SELECT DISTINCT items.ReceiptNumber , recei"
  },
  {
    "id": 1535,
    "db_id": "bakery_1",
    "question": "Give me the list of ids of all goods whose id has \"APP\".",
    "answer": "SELECT DISTINCT Item FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Ordinal , items.Flavor FROM (SELECT DISTINCT Flavor , SUM(Price ) AS sum FROM (SELECT DISTINCT Flavor FROM (SELECT DISTINCT Flavor FROM bakery_1.goods GROUP BY items.Item ORDER BY Price LIMIT 2)) AS T ORDER BY Price"
  },
  {
    "id": 1536,
    "db_id": "bakery_1",
    "question": "What are all the ids of goods with an id which contains \"APP\"?",
    "answer": "SELECT DISTINCT Item FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Flavor , items.Price FROM (SELECT DISTINCT goods.Flavor , items.Ordinal , items.Price FROM (SELECT DISTINCT Flavor , Ordinal FROM (SELECT DISTINCT items.Flavor , items.Price FROM (SELECT DISTINCT items.Item FROM (SELECT D"
  },
  {
    "id": 1537,
    "db_id": "bakery_1",
    "question": "Which good has \"70\" in its id? And what is its price?",
    "answer": "SELECT DISTINCT Item FROM (SELECT DISTINCT items.Flavor , MAX(receipts.Price ) AS max_price FROM (SELECT DISTINCT items.Flavor FROM (SELECT DISTINCT Flavor , ReceiptNumber FROM (SELECT DISTINCT Date FROM (SELECT DISTINCT items.Id , items.Flavor FROM (SELECT DISTINCT items.Id , items.Flav"
  },
  {
    "id": 1538,
    "db_id": "bakery_1",
    "question": "What are the id and price for the good with \"70\" in its id?",
    "answer": "SELECT DISTINCT Item FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT Flavor FROM (SELECT Flavor FROM (SELECT DISTINCT items.Flavor FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT Flavor FROM (SELECT DISTINCT Flavor FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT Ordinal FROM (SELECT DISTINCT Item FROM (SELECT D"
  },
  {
    "id": 1539,
    "db_id": "bakery_1",
    "question": "List the last names of all customers in an alphabetical order.",
    "answer": "SELECT DISTINCT FirstName FROM (SELECT DISTINCT LastName FROM (SELECT DISTINCT Flavor , ReceiptNumber FROM (SELECT DISTINCT Item FROM (SELECT FirstName , MIN(LastName ) AS lastname FROM (SELECT LastName FROM (SELECT DISTINCT Item FROM (SELECT FirstName , MAX(LastName ) AS LastName FROM (SELECT DISTINCT FirstName FROM (SELECT DISTINCT Item FROM (SELECT FirstName ,"
  },
  {
    "id": 1540,
    "db_id": "bakery_1",
    "question": "What are the last names of the customers in alphabetical order?",
    "answer": "SELECT DISTINCT FirstName FROM (SELECT DISTINCT LastName FROM (SELECT LastName , Item FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT FirstName , ReceiptNumber FROM (SELECT DISTINCT Flavor FROM (SELECT DISTINCT Item FROM (SELECT DISTINCT FirstName , ReceiptNumber FROM (SELECT DISTINCT items.Ordinal FROM (SELECT DISTINCT Date , Receipt FROM (SELECT"
  },
  {
    "id": 1541,
    "db_id": "bakery_1",
    "question": "Return the ordered list of all good ids.",
    "answer": "SELECT DISTINCT Item FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT ReceiptNumber FROM (SELECT DISTINCT items.Ordinal , MAX(items.Price ) AS minPrice FROM (SELECT DISTINCT items.Flavor , items.Receipt FROM (SELECT DISTINCT items.Id FROM (SELECT DISTINCT items.Food FROM (SELECT DISTINCT goods.Flavor , goods"
  },
  {
    "id": 1542,
    "db_id": "bakery_1",
    "question": "Order the distinct good ids.",
    "answer": "SELECT DISTINCT Date FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Flavor , MAX(Item ) AS item_id FROM (SELECT DISTINCT items.Flavor , MAX(Item ) AS item_id FROM (SELECT DISTINCT Flavor , MAX(items.Id ) AS item_id FROM (SELECT DISTINCT"
  },
  {
    "id": 1543,
    "db_id": "bakery_1",
    "question": "Find all receipts in which either apple flavor pie was bought or customer id 12 shopped.",
    "answer": "SELECT DISTINCT items.Receipt FROM (SELECT DISTINCT items.Item , COUNT(items.ReceiptNumber ) AS num FROM (SELECT DISTINCT items.Flavor FROM (SELECT DISTINCT Flavor , COUNT(CustomerId ) AS num FROM (SELECT DISTINCT Item FROM (SELECT DISTINCT items.Price , items.Id FROM (SELECT DISTINCT items.Price , items.Food FROM ("
  },
  {
    "id": 1544,
    "db_id": "bakery_1",
    "question": "What are the receipt numbers for which either an apple flavor pie was purchased or the customer with id 12 shopped?",
    "answer": "SELECT DISTINCT ReceiptNumber FROM (SELECT DISTINCT Receipt , Ordinal FROM (SELECT Receipt FROM (SELECT DISTINCT Flavor , Food FROM (SELECT items.Food , COUNT(items.Ordinal ) AS num FROM (SELECT DISTINCT Item FROM (SELECT DISTINCT items.Item , receipts.ReceiptNumber FROM (SELECT Receipt , Ordinal FROM (SELECT DISTINCT Flav"
  },
  {
    "id": 1545,
    "db_id": "bakery_1",
    "question": "Find all receipts which has the latest date. Also tell me that date.",
    "answer": "SELECT DISTINCT Date FROM (SELECT MAX(Date ) AS Date FROM (SELECT receipts.ReceiptNumber FROM (SELECT receipts.Receipt , ReceiptNumber FROM (SELECT receipts.Ordinal , receipts.Flavor , SUM(receipts.Price ) AS Sum_Price FROM (SELECT DISTINCT receipts.ReceiptNumber , COUNT(receipts.ReceiptNumber ) AS num FROM ("
  },
  {
    "id": 1546,
    "db_id": "bakery_1",
    "question": "What is the receipt number with the latest date, and what is that date?",
    "answer": "SELECT MAX(receipts.ReceiptNumber ) FROM (SELECT DISTINCT ReceiptNumber FROM (SELECT DISTINCT Receipt , ReceiptNumber FROM (SELECT DISTINCT items.Item , Receipt FROM (SELECT ReceiptNumber , items.Flavor FROM (SELECT DISTINCT goods.Flavor , Flavor FROM (SELECT DISTINCT items.Ordinal , items.Price FROM (SELECT DISTINCT"
  },
  {
    "id": 1547,
    "db_id": "bakery_1",
    "question": "Find all receipts which either has the earliest date or has a good with price above 10.",
    "answer": "SELECT DISTINCT Receipt FROM (SELECT MAX(ReceiptNumber ) AS id FROM (SELECT Receipt FROM (SELECT Receipt FROM (SELECT Receipt FROM (SELECT DISTINCT items.Receipt FROM (SELECT items.Item FROM (SELECT Flavor , COUNT(items.Ordinal ) AS num_all FROM (SELECT DISTINCT items.Item , SUM(Price ) FROM (SELECT DISTINCT Item , Price FROM (SELECT DIST"
  },
  {
    "id": 1548,
    "db_id": "bakery_1",
    "question": "What are all the receipt numbers that have a good with a price above 10 or have the earliest date?",
    "answer": "SELECT MAX(receipts.ReceiptNumber ) FROM (SELECT DISTINCT ReceiptNumber FROM (SELECT DISTINCT Item , Flavor , Price FROM (SELECT DISTINCT items.Item , Ordinal , SUM(Price ) FROM (SELECT DISTINCT goods.Food , goods.Flavor , receipts.ReceiptNumber , ReceiptNumber FROM (SELECT DISTINCT items.Item , Ord"
  },
  {
    "id": 1549,
    "db_id": "bakery_1",
    "question": "What are the ids of Cookie and Cake that cost between 3 and 7 dollars.",
    "answer": "SELECT DISTINCT Item FROM (SELECT DISTINCT items.Item , SUM(items.Price ) AS sum FROM (SELECT DISTINCT Flavor , SUM(Price ) AS total_price FROM (SELECT DISTINCT Flavor FROM (SELECT DISTINCT Food , Price FROM (SELECT DISTINCT Flavor , SUM(Price ) FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT Item , Price FROM (SELECT DIST"
  },
  {
    "id": 1550,
    "db_id": "bakery_1",
    "question": "Give the ids of Cookies or Cakes that cost between 3 and 7 dollars.",
    "answer": "SELECT DISTINCT Item FROM (SELECT DISTINCT items.Item , SUM(items.Price ) AS sum FROM (SELECT DISTINCT items.Flavor , SUM(items.Price ) AS sum FROM (SELECT DISTINCT Item FROM (SELECT DISTINCT items.Food , SUM(items.Price ) AS sum FROM (SELECT DISTINCT goods.Food , COUNT(items.Id ) AS num FROM (SELECT DISTINCT"
  },
  {
    "id": 1551,
    "db_id": "bakery_1",
    "question": "Find the first name and last name of a customer who visited on the earliest date.",
    "answer": "SELECT DISTINCT FirstName , LastName FROM (SELECT DISTINCT CustomerId , ReceiptNumber FROM (SELECT ReceiptNumber , Date FROM (SELECT DISTINCT ReceiptNumber , Date FROM (SELECT Receipt FROM (SELECT DISTINCT Receipt FROM (SELECT items.Ordinal , items.Food , items.Price FROM (SELECT DISTINCT Flavor , ReceiptNumber , Item FROM ("
  },
  {
    "id": 1552,
    "db_id": "bakery_1",
    "question": "What is the full name of the customer who visited on the earliest date?",
    "answer": "SELECT DISTINCT FirstName FROM (SELECT DISTINCT FirstName , Date , ReceiptNumber FROM (SELECT DISTINCT ReceiptNumber , Date FROM (SELECT MIN(ReceiptNumber ) AS receiptnumbern FROM (SELECT DISTINCT receipts.ReceiptNumber , CustomerId FROM (SELECT DISTINCT items.Item , ReceiptNumber , Ordinal FROM (SELECT DISTINCT goods.F"
  },
  {
    "id": 1553,
    "db_id": "bakery_1",
    "question": "What is average price of goods whose flavor is blackberry or blueberry?",
    "answer": "SELECT AVG(Price ) FROM (SELECT DISTINCT items.Item , items.Flavor FROM (SELECT DISTINCT items.Flavor FROM (SELECT items.Item , Item FROM (SELECT DISTINCT items.Flavor FROM (SELECT DISTINCT items.Food FROM (SELECT Flavor FROM (SELECT Food FROM (SELECT items.Item , items.Price FROM (SELECT DISTINCT items.Item ,"
  },
  {
    "id": 1554,
    "db_id": "bakery_1",
    "question": "What are the average prices of goods with blackberry or blueberry flavor?",
    "answer": "SELECT AVG(Price ) FROM (SELECT DISTINCT items.Flavor , COUNT(items.Flavor ) AS num FROM (SELECT DISTINCT items.Flavor , Date FROM (SELECT DISTINCT items.Flavor , ReceiptNumber FROM (SELECT DISTINCT items.Flavor , Price FROM (SELECT DISTINCT Date FROM (SELECT DISTINCT items.Flav"
  },
  {
    "id": 1555,
    "db_id": "bakery_1",
    "question": "Return the cheapest price for goods with cheese flavor.",
    "answer": "SELECT DISTINCT Price FROM (SELECT SUM(Price ), Flavor FROM (SELECT * FROM (SELECT Flavor , MAX(Price ) AS id FROM (SELECT ReceiptNumber , items.Food FROM (SELECT Price , Item FROM (SELECT * FROM (SELECT items.Item FROM (SELECT DISTINCT items.Flavor , items.ReceiptNumber FROM (SELECT ReceiptNumber , Flavor ,"
  },
  {
    "id": 1556,
    "db_id": "bakery_1",
    "question": "What is the cheapest good with cheese flavor?",
    "answer": "SELECT SUM(Price ) FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Item , SUM(Price ) AS sum_price FROM (SELECT DISTINCT items.Food , SUM(Price ) AS sum_price FROM (SELECT DISTINCT items.Flavor , items.Price FROM (SELECT DISTINCT items.Id , items.Price FROM (SELECT DISTINCT Date , Item , SUM("
  },
  {
    "id": 1557,
    "db_id": "bakery_1",
    "question": "What are highest, lowest, and average prices of goods, grouped and ordered by flavor?",
    "answer": "SELECT DISTINCT MAX(Price ), MIN(Price ) FROM (SELECT DISTINCT items.Flavor , items.Price FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Flavor FROM (SELECT items.Flavor , SUM(Price ) AS avg FROM (SELECT DISTINCT items.Item , items.Price FROM (SELECT DISTINCT Flavor , items."
  },
  {
    "id": 1558,
    "db_id": "bakery_1",
    "question": "What are the maximum, minimum, and average prices of goods of each flavor, ordered by flavor?",
    "answer": "SELECT MAX(Price ), MIN(Price ), AVG(Price ) FROM (SELECT DISTINCT items.Flavor , items.Price FROM (SELECT DISTINCT items.Food , items.Price FROM (SELECT * FROM (SELECT DISTINCT items.Food , items.Price , Flavor FROM (SELECT Flavor FROM (SELECT DISTINCT items.Food , items.Price FROM (SELECT DIST"
  },
  {
    "id": 1559,
    "db_id": "bakery_1",
    "question": "Return the lowest and highest prices of goods grouped and ordered by food type.",
    "answer": "SELECT MAX(Price ), MIN(Price ) FROM (SELECT DISTINCT Flavor FROM bakery_1.items GROUP BY Flavor ORDER BY Food , Price LIMIT 1) AS t ORDER BY Food , Price LIMIT 1200385496670930000000000000000000000000000000000"
  },
  {
    "id": 1560,
    "db_id": "bakery_1",
    "question": "What are the minimum and maximum prices of food goods, ordered by food?",
    "answer": "SELECT MAX(Price ) FROM (SELECT DISTINCT items.Food , COUNT(items.Flavor ) AS num FROM (SELECT DISTINCT items.Food FROM (SELECT items.Item , SUM(items.Price ), items.Flavor FROM (SELECT DISTINCT items.Id FROM (SELECT DISTINCT Item FROM (SELECT Flavor FROM (SELECT Food , COUNT(Flavor ) AS num FROM (SELECT D"
  },
  {
    "id": 1561,
    "db_id": "bakery_1",
    "question": "Find the top three dates with the most receipts.",
    "answer": "SELECT MAX(receipts.ReceiptNumber ) FROM (SELECT DISTINCT MAX(ReceiptNumber ), Receipt FROM (SELECT DISTINCT Receipt , Date FROM (SELECT Date , MAX(Date ) AS Rd FROM (SELECT ReceiptNumber , Receipt FROM (SELECT SUM(Date ) AS X , COUNT(ReceiptNumber ) AS N FROM (SELECT ReceiptNumber , Receipt FROM (SELECT D"
  },
  {
    "id": 1562,
    "db_id": "bakery_1",
    "question": "What are the three dates for which the most receipts were given?",
    "answer": "SELECT DISTINCT Date FROM (SELECT MAX(Date ) AS date FROM (SELECT ReceiptNumber , SUM(Price ) AS total FROM (SELECT items.Item , SUM(items.Price ) AS tot FROM (SELECT Item , ReceiptNumber FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Flavor , COUNT(items.Item ) AS num FROM (SELECT DISTINCT goods.Food , items.Id FROM"
  },
  {
    "id": 1563,
    "db_id": "bakery_1",
    "question": "Which customer shopped most often? How many times?",
    "answer": "SELECT DISTINCT COUNT(CustomerId ) FROM (SELECT COUNT(CustomerId ), SUM(Price ) AS total_price FROM (SELECT DISTINCT CustomerId , Price FROM (SELECT items.Flavor , items.Price , COUNT(ReceiptNumber ) AS num FROM (SELECT DISTINCT receipts.Item , receipts.Ordinal , items.Flavor FROM (SELECT DISTINCT items.Flavor"
  },
  {
    "id": 1564,
    "db_id": "bakery_1",
    "question": "Give the customer id of the customer that made the most purchases, as well as the number of purchases made.",
    "answer": "SELECT DISTINCT Price FROM (SELECT COUNT(Price ) AS cnt FROM (SELECT CustomerId , SUM(Price ) AS sum FROM (SELECT DISTINCT Item , CustomerId , ReceiptNumber FROM (SELECT DISTINCT Item , Date , ReceiptNumber FROM (SELECT DISTINCT items.CustomerId , items.ReceiptNumber FROM (SELECT DISTINCT items.Item , items.Price FROM (SELECT DISTINCT"
  },
  {
    "id": 1565,
    "db_id": "bakery_1",
    "question": "For each date, return how many distinct customers visited on that day.",
    "answer": "SELECT COUNT(Item ) FROM (SELECT DISTINCT items.Receipt FROM (SELECT Receipt , ReceiptNumber FROM (SELECT DISTINCT items.Receipt FROM (SELECT Receipt , Ordinal FROM (SELECT DISTINCT Flavor , Item , Date FROM (SELECT DISTINCT items.Item , Date FROM (SELECT DISTINCT customers.LastName , CustomerId FROM (SELECT DISTINCT items.Flav"
  },
  {
    "id": 1566,
    "db_id": "bakery_1",
    "question": "How many cusomters visited on each date?",
    "answer": "SELECT SUM(Date ) AS num , COUNT(Item ) FROM (SELECT DISTINCT Ordinal FROM bakery_1.items GROUP BY Date ORDER BY Date ) AS T ORDER BY Date LIMIT 100000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1567,
    "db_id": "bakery_1",
    "question": "Give me the first name and last name of customers who have bought apple flavor Tart.",
    "answer": "SELECT DISTINCT FirstName , LastName FROM (SELECT DISTINCT Flavor FROM (SELECT Id FROM (SELECT Item FROM (SELECT DISTINCT items.Flavor FROM (SELECT FirstName , LastName FROM (SELECT MIN(items.Food ) AS x FROM (SELECT DISTINCT Item FROM (SELECT DISTINCT items.Flavor FROM (SELECT items.Item FROM (SELECT DISTINCT Flavor FROM"
  },
  {
    "id": 1568,
    "db_id": "bakery_1",
    "question": "What are the full names of customers who bought apple flavored Tarts?",
    "answer": "SELECT DISTINCT FirstName FROM (SELECT DISTINCT FirstName , MAX(Id ) AS id FROM (SELECT FirstName , SUM(Price ) AS sum FROM (SELECT Flavor , Food , Price , SUM(Price ) AS total FROM (SELECT DISTINCT items.Item , COUNT(items.ReceiptNumber ) FROM (SELECT DISTINCT Receipt , Ordinal FROM (SELECT DISTINCT Flavor , Food , Item , receipts.Rece"
  },
  {
    "id": 1569,
    "db_id": "bakery_1",
    "question": "What are the ids of Cookies whose price is lower than any Croissant?",
    "answer": "SELECT DISTINCT Id FROM (SELECT DISTINCT Flavor FROM (SELECT ReceiptNumber , Price FROM (SELECT Item , ReceiptNumber , Ordinal FROM bakery_1.items WHERE Item = 'Cookies' ORDER BY Price LIMIT 1)) AS T INNER JOIN (SELECT DISTINCT customers.FirstName , customers.LastName FROM (SELECT DISTINCT Flavor FROM (SELECT R"
  },
  {
    "id": 1570,
    "db_id": "bakery_1",
    "question": "Give the ids of cookes that are cheaper than any croissant.",
    "answer": "SELECT DISTINCT Date FROM (SELECT DISTINCT Item , SUM(Price ) AS num FROM (SELECT DISTINCT items.Item , SUM(receipts.ReceiptNumber ) AS num FROM (SELECT DISTINCT items.Id , receipts.Ordinal FROM (SELECT DISTINCT items.Item , receipts.Ordinal FROM (SELECT DISTINCT items.Flavor , receipts.Price FROM (SELECT DISTINCT"
  },
  {
    "id": 1571,
    "db_id": "bakery_1",
    "question": "Give me the ids of Cakes whose price is at least as much as the average price of Tart?",
    "answer": "SELECT DISTINCT customers.ReceiptNumber FROM (SELECT SUM(Price ), AVG(Price ) AS avg_price , ReceiptNumber FROM (SELECT CustomerId , Price FROM (SELECT SUM(Price ), AVG(Price ) AS avg FROM (SELECT DISTINCT CustomerId , items.Ordinal FROM (SELECT Item , items.Flavor , Date , receipts."
  },
  {
    "id": 1572,
    "db_id": "bakery_1",
    "question": "What are the ids of cakes that are at least as expensive as the average Tart?",
    "answer": "SELECT DISTINCT Item FROM (SELECT DISTINCT items.Item , SUM(Price ) AS sumPrice FROM (SELECT DISTINCT items.Flavor , SUM(items.Price ) FROM (SELECT DISTINCT Flavor FROM (SELECT SUM(Price ) AS sumPrice FROM (SELECT items.Food , SUM(Price ) FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Id , items.Price FROM"
  },
  {
    "id": 1573,
    "db_id": "bakery_1",
    "question": "What are the ids of goods whose price is above twice the average price of all goods?",
    "answer": "SELECT DISTINCT Item FROM (SELECT SUM(Price ) AS num , ReceiptNumber FROM (SELECT SUM(Price ), Ordinal , ReceiptNumber FROM (SELECT Item , COUNT(ReceiptNumber ) FROM (SELECT SUM(Price ) AS Num FROM (SELECT DISTINCT Item FROM (SELECT DISTINCT Price , ReceiptNumber FROM (SELECT SUM(Price ), Ordinal , Re"
  },
  {
    "id": 1574,
    "db_id": "bakery_1",
    "question": "Give the ids of goods that are more than twice as expensive as the average good.",
    "answer": "SELECT DISTINCT Item FROM (SELECT DISTINCT items.Item , SUM(Price ) AS total FROM (SELECT DISTINCT items.Id , AVG(Price ) FROM (SELECT items.Id , SUM(Price ) AS sum_price FROM (SELECT DISTINCT goods.Food , SUM(goods.Price ) AS sum_sum FROM (SELECT DISTINCT items.Id , AVG(Price ) AS sum_avg FROM ("
  },
  {
    "id": 1575,
    "db_id": "bakery_1",
    "question": "List the id, flavor and type of food of goods ordered by price.",
    "answer": "SELECT DISTINCT Item FROM (SELECT DISTINCT items.Flavor , items.Food FROM (SELECT DISTINCT items.Flavor , items.Food FROM bakery_1.items AS t INNER JOIN bakery_1.goods ON items.Id = goods.Item ORDER BY items.Price LIMIT 2)) AS T WHERE Date > '2020-07-31'"
  },
  {
    "id": 1576,
    "db_id": "bakery_1",
    "question": "What are the ids, flavors, and food types of goods, ordered by price?",
    "answer": "SELECT DISTINCT Item FROM (SELECT DISTINCT items.Item , SUM(items.Price ) AS sum FROM (SELECT DISTINCT Flavor , SUM(Flavor ) AS sum , items.Food FROM (SELECT DISTINCT Flavor , items.Food FROM (SELECT DISTINCT items.Item , items.Ordinal FROM (SELECT DISTINCT items.Food FROM (SELECT DISTINCT item"
  },
  {
    "id": 1577,
    "db_id": "bakery_1",
    "question": "Return a list of the id and flavor for Cakes ordered by flavor.",
    "answer": "SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.ReceiptNumber , Receipt FROM (SELECT DISTINCT items.Ordinal , SUM(items.Flavor ) AS total FROM (SELECT SUM(Price ), Flavor FROM (SELECT DISTINCT items.Price FROM (SELECT DISTINCT Date , Receipt , items.Flavor FROM (SELECT DISTINCT items."
  },
  {
    "id": 1578,
    "db_id": "bakery_1",
    "question": "What are the ids and flavors of cakes, ordered by flavor?",
    "answer": "SELECT DISTINCT Item FROM (SELECT DISTINCT items.Flavor , items.Price FROM (SELECT DISTINCT Flavor FROM (SELECT DISTINCT items.Food FROM bakery_1.items ORDER BY items.Flavor LIMIT 1)) AS t ) AS T INNER JOIN (SELECT DISTINCT customers.LastName , COUNT(Item ), SUM(Price ) AS total FROM (SELECT DIST"
  },
  {
    "id": 1579,
    "db_id": "bakery_1",
    "question": "Find all the items that have chocolate flavor but were not bought more than 10 times.",
    "answer": "SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Id FROM (SELECT * FROM (SELECT DISTINCT items.Id FROM (SELECT DISTINCT SUM(items.Price ) AS num FROM (SELECT DISTINCT Flavor FROM (SELECT DISTINCT Flavor FROM (SELECT DISTINCT Food FROM (SELECT DISTINCT Item FROM (SELECT DISTINCT Price , COUNT(Item ) AS num FROM (SELECT DISTINCT"
  },
  {
    "id": 1580,
    "db_id": "bakery_1",
    "question": "What are the items with chocolate flavor that were purchased at most 10 times.",
    "answer": "SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Ordinal FROM (SELECT DISTINCT Ordinal , SUM(Price ) AS num FROM (SELECT DISTINCT items.Item , COUNT(items.Flavor ) AS count FROM (SELECT DISTINCT items.Flavor , Item FROM (SELECT DISTINCT Item FROM (SELECT DISTINCT Flavor FROM (SELECT DISTINCT ReceiptNumber , Ord"
  },
  {
    "id": 1581,
    "db_id": "bakery_1",
    "question": "What are the flavors available for Cake but not for Tart?",
    "answer": "SELECT DISTINCT Flavor FROM (SELECT DISTINCT items.Food FROM (SELECT DISTINCT items.Food FROM (SELECT DISTINCT items.Food FROM (SELECT DISTINCT Flavor FROM (SELECT DISTINCT items.Flavor FROM (SELECT DISTINCT Item FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Price FROM (SELECT DISTINCT items"
  },
  {
    "id": 1582,
    "db_id": "bakery_1",
    "question": "Give the flavors of Cakes that are not available for Tart.",
    "answer": "SELECT DISTINCT Flavor FROM (SELECT DISTINCT Item FROM (SELECT Item FROM (SELECT ReceiptNumber , Item FROM (SELECT Item FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Receipt FROM (SELECT DISTINCT goods.Food FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Ordinal FROM (SELECT DISTINCT goods.Flavor FROM ("
  },
  {
    "id": 1583,
    "db_id": "bakery_1",
    "question": "What is the three most popular goods in this bakery?",
    "answer": "SELECT MAX(Price ) FROM (SELECT DISTINCT items.Item , customers.LastName , customers.FirstName FROM (SELECT DISTINCT items.Ordinal , Date , items.Flavor FROM (SELECT DISTINCT Flavor , ReceiptNumber FROM (SELECT items.Item , ReceiptNumber , Price FROM (SELECT DISTINCT items.Price , Item , Receipt"
  },
  {
    "id": 1584,
    "db_id": "bakery_1",
    "question": "Give the three most purchased items at this bakery.",
    "answer": "SELECT DISTINCT Item FROM (SELECT DISTINCT items.Item FROM bakery_1.items AS T INNER JOIN (SELECT COUNT(items.ReceiptNumber ) AS n FROM bakery_1.receipts AS T WHERE Receipt = 'Baked Goods: Pizza, Sweetened' GROUP BY items.Item ORDER BY Date LIMIT 3) AS T  ON receipts.CustomerId = "
  },
  {
    "id": 1585,
    "db_id": "bakery_1",
    "question": "Find the ids of customers who have spent more than 150 dollars in total.",
    "answer": "SELECT DISTINCT customers.CustomerId FROM (SELECT COUNT(ReceiptNumber ) AS num , Receipt FROM (SELECT DISTINCT ReceiptNumber FROM (SELECT Flavor , SUM(Price ) AS sum FROM (SELECT Price FROM (SELECT SUM(Price ) AS TOTAL_PXG FROM (SELECT Flavor , SUM(Price ) AS sum FROM (SELECT * FROM (SELECT * FROM (SELECT SUM(Price ) AS"
  },
  {
    "id": 1586,
    "db_id": "bakery_1",
    "question": "What are the ids of customers who have spent over 150 dollars in total?",
    "answer": "SELECT DISTINCT customers.LastName FROM (SELECT DISTINCT customers.FirstName , SUM(Price ) AS Total FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Item FROM (SELECT DISTINCT items.Ordinal FROM (SELECT DISTINCT receipts.ReceiptNumber FROM (SELECT DISTINCT items.Ordinal FROM (SELECT DISTINCT items.Flavor"
  },
  {
    "id": 1587,
    "db_id": "bakery_1",
    "question": "Find the ids of customers whose average spending for each good is above 5.",
    "answer": "SELECT DISTINCT Date FROM (SELECT SUM(Price ) AS sum , ReceiptNumber , Ordinal , SUM(CustomerId ) AS num FROM (SELECT DISTINCT CustomerId FROM (SELECT DISTINCT items.Receipt FROM (SELECT DISTINCT items.Flavor , items.Ordinal , items.Food FROM (SELECT DISTINCT items.Price , items.Item FROM (SELECT DISTINCT item"
  },
  {
    "id": 1588,
    "db_id": "bakery_1",
    "question": "What are the ids of customers who spend more than 5 on average for each good?",
    "answer": "SELECT DISTINCT Date FROM (SELECT SUM(Price ) AS sum FROM (SELECT DISTINCT Date , Item FROM (SELECT DISTINCT items.Flavor , items.Price , items.Id FROM (SELECT DISTINCT Date , Item FROM (SELECT DISTINCT items.Flavor , items.Price , items.Id FROM (SELECT DISTINCT items.Flavor , items.Price , items.Ord"
  },
  {
    "id": 1589,
    "db_id": "bakery_1",
    "question": "On which day did the bakery sell more than 100 dollars in total.",
    "answer": "SELECT MAX(ReceiptNumber ) FROM (SELECT MIN(Date ), SUM(ReceiptNumber ) AS Total FROM (SELECT DISTINCT CustomerId FROM (SELECT COUNT(Item ) AS Num FROM (SELECT SUM(Price ) AS Sum FROM (SELECT Id , SUM(Price ) AS sum FROM (SELECT SUM(Price ) AS sum , ReceiptNumber FROM (SELECT COUNT(Id ), Item FROM (SELECT ReceiptNumber FROM (SELECT DISTINCT SUM("
  },
  {
    "id": 1590,
    "db_id": "bakery_1",
    "question": "On what dates did the bakery sell more than 100 dollars worth of goods in total?",
    "answer": "SELECT MAX(Date ), SUM(Price ) FROM (SELECT DISTINCT SUM(Price ) AS sum_total , items.ReceiptNumber FROM (SELECT DISTINCT items.Ordinal FROM (SELECT DISTINCT Ordinal FROM (SELECT MIN(receipts.Item ) AS receipt100 FROM (SELECT ReceiptNumber FROM (SELECT DISTINCT receipts.Id FROM (SELECT DISTINCT items.Flavor , items"
  },
  {
    "id": 1591,
    "db_id": "car_racing",
    "question": "How many drivers are there?",
    "answer": "SELECT COUNT(Driver_ID ) FROM (SELECT DISTINCT Team_ID FROM car_racing.driver AS T INNER JOIN (SELECT DISTINCT Team_ID , COUNT(*) AS num FROM (SELECT Team_ID , Country , SUM(Laps ) AS num FROM (SELECT Team_ID , Regoin FROM (SELECT Team_ID , Car_Owner , MAX(Laps ) AS num FROM"
  },
  {
    "id": 1592,
    "db_id": "car_racing",
    "question": "Find the total number of drivers.",
    "answer": "SELECT COUNT(Team_ID ) FROM (SELECT Team_ID FROM (SELECT DISTINCT Team_ID , Points FROM (SELECT DISTINCT Team_ID , COUNT(Driver_ID ) AS num FROM car_racing.driver WHERE Age > 26 ORDER BY Driver_ID , Car_# LIMIT 1)) AS T ORDER BY Team_ID ) GROUP BY Team_ID ORDER BY Team_"
  },
  {
    "id": 1593,
    "db_id": "car_racing",
    "question": "Find the number of drivers whose points are greater than 150 for each make.",
    "answer": "SELECT SUM(team.Points ) AS num FROM (SELECT DISTINCT team.Make , SUM(team.Points ) AS sum FROM car_racing.driver AS t INNER JOIN (SELECT Team_ID , AVG(Make ) AS avg FROM car_racing.driver) AS t  ON team.Team = team.Team_ID GROUP BY team.Make ORDER BY Driv"
  },
  {
    "id": 1594,
    "db_id": "car_racing",
    "question": "How many drivers receive points greater than 150 for each make? Show the make and the count.",
    "answer": "SELECT DISTINCT Team_ID FROM (SELECT Team_ID FROM car_racing.driver AS T INNER JOIN (SELECT MAX(Team_ID ), COUNT(Car_Owner ) AS num FROM car_racing.driver WHERE Laps > 150 GROUP BY Car_Owner ORDER BY Laps LIMIT 1) AS R  ON Team_ID = Regoin GROUP BY Team_ID ORDER BY Te"
  },
  {
    "id": 1595,
    "db_id": "car_racing",
    "question": "Find the average age of drivers for each make.",
    "answer": "SELECT AVG(Team_ID ), Age FROM (SELECT DISTINCT Team_ID , Team_ID , SUM(Age ) AS avg FROM car_racing.team WHERE Manager = 'Dave' GROUP BY Team_ID ORDER BY Team_ID , Age LIMIT 1) AS T ORDER BY Team_ID , Age LIMIT 25000000000000"
  },
  {
    "id": 1596,
    "db_id": "car_racing",
    "question": "What is the average age of drivers for each make? Return the average age and make.",
    "answer": "SELECT AVG(Team_ID ), Team FROM (SELECT DISTINCT Manager FROM car_racing.driver WHERE Car_# = 'F32' ORDER BY Regoin LIMIT 1) AS T WHERE Age = 16 GROUP BY Team ORDER BY Team LIMIT 100000000000000000000000000000"
  },
  {
    "id": 1597,
    "db_id": "car_racing",
    "question": "What are the average laps of all the drivers who are younger than 20?",
    "answer": "SELECT AVG(Team_ID ) AS avg , Team FROM (SELECT DISTINCT Team FROM car_racing.driver WHERE Age < 18 ORDER BY Team LIMIT 1) AS T INNER JOIN (SELECT * FROM car_racing.driver GROUP BY Driver_ID ORDER BY Regoin LIMIT 10) AS P  ON Team = Points GROUP BY Team ORDER BY Team"
  },
  {
    "id": 1598,
    "db_id": "car_racing",
    "question": "Compute the average laps of drivers under the age of 20.",
    "answer": "SELECT AVG(Team_ID ) AS avg , Team FROM (SELECT DISTINCT Team_ID , SUM(Laps ) AS sum FROM (SELECT Team_ID , COUNT(Team_ID ), MAX(Age ) AS max FROM (SELECT Driver_ID , Regoin FROM (SELECT DISTINCT driver.Car_# , driver.Age , driver.Points , Laps , Winnings FROM (SELECT"
  },
  {
    "id": 1599,
    "db_id": "car_racing",
    "question": "What are the managers and sponsors of teams? Sort the results by Car Owners.",
    "answer": "SELECT DISTINCT Team_ID FROM (SELECT Team_ID FROM (SELECT DISTINCT Manager , Sponsor FROM car_racing.team AS T INNER JOIN (SELECT DISTINCT Team_ID FROM (SELECT Team_ID FROM (SELECT Team_ID FROM (SELECT Manager , Sponsor  FROM car_racing.team) AS T ORDER BY Car_Owner LIMIT 1)) AS T ORDER BY"
  },
  {
    "id": 1600,
    "db_id": "car_racing",
    "question": "Find the manager and sponsor for each team and order them by the car owner.",
    "answer": "SELECT DISTINCT Team_ID FROM (SELECT Team_ID FROM (SELECT DISTINCT Manager , Sponsor FROM (SELECT Team_ID , Car_Owner , Driver_ID FROM car_racing.driver ORDER BY Winnings LIMIT 1)) AS T ) GROUP BY Team_ID ORDER BY Team_ID , Car_# , Winnings LIMIT 2000000000000"
  },
  {
    "id": 1601,
    "db_id": "car_racing",
    "question": "Find the make that has more than one team.",
    "answer": "SELECT DISTINCT Team FROM (SELECT DISTINCT Make FROM car_racing.team WHERE Team = 'Citroen') AS T INNER JOIN (SELECT DISTINCT Team FROM (SELECT DISTINCT Team FROM car_racing.team WHERE Team = 'Peugeot')) AS T  ON Team = Team ORDER BY Team LIMIT 1 OFFSET 0;"
  },
  {
    "id": 1602,
    "db_id": "car_racing",
    "question": "Which make has more than one team?",
    "answer": "SELECT DISTINCT Team FROM (SELECT DISTINCT MIN(Team_ID ), MIN(Make ), MAX(Team_ID ) AS id , MIN(Team_ID ), MAX(Team_ID ), SUM(Team_ID ) FROM (SELECT DISTINCT Team_ID , MAX(Team_ID ) FROM (SELECT MIN(Team_ID ), MIN("
  },
  {
    "id": 1603,
    "db_id": "car_racing",
    "question": "What are the makes of the teams with car owner \"Buddy Arrington\"?",
    "answer": "SELECT DISTINCT Team_ID FROM (SELECT Team_ID FROM car_racing.team AS T INNER JOIN (SELECT Team_ID , Regoin FROM car_racing.driver AS T INNER JOIN (SELECT driver.Make , driver.Car_# FROM car_racing.driver AS T INNER JOIN (SELECT Team_ID , MIN(Regoin ) FROM car_racing.team AS T WHERE Car_Owner"
  },
  {
    "id": 1604,
    "db_id": "car_racing",
    "question": "Find the make of the team whose car owner is \"Buddy Arrington\".",
    "answer": "SELECT DISTINCT Team_ID FROM car_racing.team WHERE car_racing.Team_ID = '92761' GROUP BY Team_ID ORDER BY Team_ID , Team_ID LIMIT 100000000485647400000000000000000000000000000"
  },
  {
    "id": 1605,
    "db_id": "car_racing",
    "question": "What are the maximum and minimum points of drivers.",
    "answer": "SELECT Team_ID FROM (SELECT DISTINCT Team_ID FROM (SELECT DISTINCT Driver_ID , MAX(Points ) AS p FROM car_racing.team GROUP BY Team_ID ORDER BY Driver_ID LIMIT 1)) AS t INNER JOIN (SELECT DISTINCT MIN(Points ) AS minPts FROM car_racing.team GROUP BY Team_ID ORDER BY Driv"
  },
  {
    "id": 1606,
    "db_id": "car_racing",
    "question": "Find the highest and lowest points of drivers.",
    "answer": "SELECT DISTINCT Team_ID FROM (SELECT MAX(Team_ID ) AS ID , Laps , SUM(Points ) AS Total FROM (SELECT Team_ID , Laps , SUM(Points ) FROM car_racing.driver WHERE Car_Owner = 'TeamRACING' GROUP BY Team_ID ORDER BY Team_ID LIMIT 1) AS T ORDER BY Team_ID"
  },
  {
    "id": 1607,
    "db_id": "car_racing",
    "question": "How many drivers have points smaller than 150?",
    "answer": "SELECT COUNT(Team_ID ) FROM (SELECT Team_ID FROM (SELECT DISTINCT Team_ID , SUM(Points ) AS POINTS FROM (SELECT Team_ID , SUM(Points ) AS POINTS FROM (SELECT Team_ID , COUNT(Points ), Regoin FROM (SELECT MAX(Points ) AS p FROM (SELECT DISTINCT Team_ID , SUM(Points )"
  },
  {
    "id": 1608,
    "db_id": "car_racing",
    "question": "Count the number of drivers whose points are below 150.",
    "answer": "SELECT COUNT(Team_ID ) FROM (SELECT Team_ID FROM (SELECT DISTINCT Driver_ID , Laps FROM (SELECT DISTINCT Driver_ID , Regoin FROM (SELECT DISTINCT Make , Car_# , Points FROM car_racing.driver AS T WHERE Driver_ID = '3' ORDER BY Points LIMIT 10)) AS T INNER JOIN (SELECT Team_ID , Laps"
  },
  {
    "id": 1609,
    "db_id": "car_racing",
    "question": "List all the driver names in ascending order of age.",
    "answer": "SELECT Team_ID FROM (SELECT DISTINCT Team_ID , Regoin FROM (SELECT DISTINCT Driver_ID , MIN(Age ) AS Min FROM (SELECT Team_ID , MIN(Age ) AS Age FROM car_racing.driver WHERE Manager = 'GPTG') AS T ORDER BY Age ) AS T ORDER BY Age LIMIT 1) GROUP BY Team_ID ORDER BY Team_"
  },
  {
    "id": 1610,
    "db_id": "car_racing",
    "question": "Sort the driver names by age in ascending order.",
    "answer": "SELECT Team_ID FROM (SELECT DISTINCT Team_ID , Regoin FROM (SELECT Team_ID , MAX(Age ) AS num FROM (SELECT Team_ID , Regoin FROM (SELECT DISTINCT Team_ID , MAX(Laps ) AS num FROM car_racing.driver WHERE Manager = 'John Winston' ORDER BY Laps LIMIT 1)) AS t ORDER BY Team_"
  },
  {
    "id": 1611,
    "db_id": "car_racing",
    "question": "List all the driver names in descending order of points.",
    "answer": "SELECT Team_ID FROM (SELECT DISTINCT Team_ID , SUM(Points ) AS Total FROM (SELECT DISTINCT Team_ID FROM (SELECT DISTINCT Team_ID , SUM(Points ) FROM (SELECT Team_ID FROM (SELECT Team_ID , SUM(Team_ID ) AS Total FROM (SELECT DISTINCT Team_ID , SUM(P"
  },
  {
    "id": 1612,
    "db_id": "car_racing",
    "question": "What is the list of drivers ordered by points in descending order?",
    "answer": "SELECT Team_ID FROM (SELECT DISTINCT Team_ID , SUM(Points ) AS POINTS FROM (SELECT DISTINCT Team_ID , Points  FROM (SELECT Team_ID FROM (SELECT Team_ID , Regoin FROM (SELECT Team_ID , Points FROM (SELECT Driver_ID , Regoin FROM (SELECT Team_ID , Car_Owner , Winnings FROM (SELECT"
  },
  {
    "id": 1613,
    "db_id": "car_racing",
    "question": "Please show the names of drivers, and countries they are from.",
    "answer": "SELECT Team_ID FROM (SELECT DISTINCT Team_ID FROM (SELECT DISTINCT Team_ID , Driver_ID FROM (SELECT DISTINCT Driver_ID FROM car_racing.driver WHERE Country_Id = 34)) AS T INNER JOIN car_racing.team ON Team_ID = Car_Owner GROUP BY Team_ID ORDER BY Team_ID LIMIT 1) AS T ORDER"
  },
  {
    "id": 1614,
    "db_id": "car_racing",
    "question": "For each driver, return his or her name and country.",
    "answer": "SELECT Team_ID FROM (SELECT DISTINCT Team_ID FROM car_racing.driver AS T , car_racing.country AS T WHERE Team_ID = Team_ID ORDER BY Team_ID , Team_ID LIMIT 1) AS T ORDER BY Team_ID LIMIT 300000000067482101592000"
  },
  {
    "id": 1615,
    "db_id": "car_racing",
    "question": "Show the maximum points of the drivers from countries with capital \"Dublin\"",
    "answer": "SELECT SUM(Team_ID ), MAX(Team_ID ), Team_ID FROM (SELECT DISTINCT Team_ID , COUNT(Team_ID ) AS num FROM (SELECT DISTINCT Team_ID , Team_ID FROM (SELECT DISTINCT Team_ID , Team_ID FROM car_racing.team GROUP BY Team_ID ORDER BY Team_"
  },
  {
    "id": 1616,
    "db_id": "car_racing",
    "question": "What is the maximum points of the drivers from a country whose capital is \"Dublin\"?",
    "answer": "SELECT Team_ID FROM (SELECT DISTINCT Team_ID , MAX(Points ) AS num FROM (SELECT DISTINCT Team_ID , Team_ID , Car_# , Laps , Winnings , Driver_ID FROM car_racing.driver WHERE Team = 'Team Dublin') AS T ORDER BY Team_ID LIMIT 1) AS t GROUP BY team_driver.Team ORDER BY Team_"
  },
  {
    "id": 1617,
    "db_id": "car_racing",
    "question": "What is the average age of drivers from countries with official native language \"English\"",
    "answer": "SELECT AVG(Team_ID ) AS avg , Team FROM (SELECT DISTINCT Team FROM car_racing.driver WHERE Laps > 280 INNER JOIN (SELECT Team FROM car_racing.country WHERE Laps > '73' ORDER BY Car_Owner LIMIT 1) AS T  ON Team = Team_ID GROUP BY Team ORDER BY Team"
  },
  {
    "id": 1618,
    "db_id": "car_racing",
    "question": "Find the average age of the drivers from the countries that use \"English\" as official native language.",
    "answer": "SELECT Team_ID FROM (SELECT DISTINCT Team_ID , AVG(Age ) AS avg FROM (SELECT DISTINCT Team_ID , COUNT(Team_ID ) AS num FROM (SELECT DISTINCT Team_ID , Laps FROM car_racing.team WHERE Country = 'Eng' GROUP BY Team_ID ORDER BY Laps LIMIT 1) AS T INNER JOIN (SELECT D"
  },
  {
    "id": 1619,
    "db_id": "car_racing",
    "question": "What are the countries that have drivers with points larger than 150?",
    "answer": "SELECT Team_ID FROM (SELECT DISTINCT Team_ID , COUNT(Points ) AS pnt FROM (SELECT DISTINCT Team_ID , Points , Regoin FROM (SELECT DISTINCT Driver_ID , Points , Winnings , Car_# FROM (SELECT DISTINCT Team_ID , Country , car_racing.Regoin , Regoin FROM (SELECT D"
  },
  {
    "id": 1620,
    "db_id": "car_racing",
    "question": "Find all the countries where some drivers have points above 150.",
    "answer": "SELECT Team_ID FROM (SELECT DISTINCT Team_ID , COUNT(Points ) AS POINTS FROM (SELECT DISTINCT Team_ID , Points  FROM (SELECT Team_ID , MAX(Winnings ) AS Points FROM (SELECT DISTINCT Team_ID , Points   FROM (SELECT DISTINCT Team_ID , Points FROM (SELECT Team_ID ,"
  },
  {
    "id": 1621,
    "db_id": "car_racing",
    "question": "What is the capital of the country where the driver with the most points is from?",
    "answer": "SELECT DISTINCT Team_ID FROM (SELECT Team_ID FROM (SELECT DISTINCT Team_ID FROM car_racing.driver ORDER BY Winnings LIMIT 1)) AS T WHERE Team_ID = '46837' GROUP BY Team_ID ORDER BY Team_ID LIMIT 1 OFFSET 51200348960000"
  },
  {
    "id": 1622,
    "db_id": "car_racing",
    "question": "Which country is the driver with the highest points from? Give me the capital of the country.",
    "answer": "SELECT DISTINCT Team_ID FROM (SELECT Team_ID FROM car_racing.driver WHERE Car_Owner = 'Roberto Cavalli' ORDER BY Points LIMIT 1) AS T INNER JOIN (SELECT Team_ID , MAX(Team_ID ) AS id FROM car_racing.team WHERE Team = 'Team_38740901') AS T  ON Team_ID = T"
  },
  {
    "id": 1623,
    "db_id": "car_racing",
    "question": "List each make with the number of drivers with that make.",
    "answer": "SELECT DISTINCT Team_ID FROM car_racing.driver GROUP BY Make ORDER BY Driver_ID LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1624,
    "db_id": "car_racing",
    "question": "For each make, return the make and the count of drivers with that make.",
    "answer": "SELECT DISTINCT Team_ID FROM car_racing.driver AS t INNER JOIN car_racing.team AS t  ON team_driver.Team_ID = team_driver.Driver_ID GROUP BY Team_ID ORDER BY country.Make , car_racing.team_driver.Team_ID LIMIT 1000000000000000000"
  },
  {
    "id": 1625,
    "db_id": "car_racing",
    "question": "List the make that are associated with most drivers.",
    "answer": "SELECT DISTINCT Team_ID FROM (SELECT Team_ID FROM car_racing.driver WHERE Car_# = 'GT' GROUP BY Team_ID ORDER BY Laps , Points LIMIT 1) AS T GROUP BY Team_ID ORDER BY Laps , Points LIMIT 1"
  },
  {
    "id": 1626,
    "db_id": "car_racing",
    "question": "Which make does the most drivers have?",
    "answer": "SELECT DISTINCT Team_ID FROM (SELECT Team_ID FROM car_racing.driver WHERE Make = 'Audi' GROUP BY Team_ID ORDER BY country.Country_Id LIMIT 1) AS T WHERE Team_ID = 'C140T5W4' GROUP BY Team_ID ORDER BY Team_ID LIMIT 100000000000"
  },
  {
    "id": 1627,
    "db_id": "car_racing",
    "question": "List the driver makes that are associated with at least three drivers.",
    "answer": "SELECT Team_ID FROM (SELECT DISTINCT Team_ID , COUNT(Team_ID ) AS num FROM (SELECT Team_ID , COUNT(Team_ID ) AS num FROM (SELECT DISTINCT Team_ID , Team_ID FROM (SELECT Team_ID , Team_ID FROM (SELECT Team_ID , MAX(Team_ID ) AS max_id FROM"
  },
  {
    "id": 1628,
    "db_id": "car_racing",
    "question": "Which make is associated with 3 or more drivers?",
    "answer": "SELECT DISTINCT Team_ID FROM (SELECT DISTINCT Team_ID FROM car_racing.team WHERE Manager = 'Racing' GROUP BY Team_ID ORDER BY country.Country LIMIT 3) AS T ORDER BY Team_ID LIMIT 104265876100215919179100945641353"
  },
  {
    "id": 1629,
    "db_id": "car_racing",
    "question": "List the names of teams that do not have any drivers.",
    "answer": "SELECT DISTINCT Team_ID FROM (SELECT DISTINCT Team_ID FROM (SELECT Team_ID FROM (SELECT DISTINCT Team_ID , COUNT(*) AS num FROM (SELECT DISTINCT driver.Driver_ID , driver.Points , car_racing.Car_Owner , driver.Regoin , driver.Capital , driver.Age FROM car_racing.driver AS t INNER JOIN (SELECT DIST"
  },
  {
    "id": 1630,
    "db_id": "car_racing",
    "question": "Which team does not have drivers?",
    "answer": "SELECT DISTINCT Team_ID FROM (SELECT DISTINCT Team_ID FROM (SELECT Team_ID FROM (SELECT DISTINCT Team_ID , Driver FROM (SELECT Team_ID FROM (SELECT DISTINCT Team_ID FROM (SELECT Team_ID FROM (SELECT DISTINCT Team_ID FROM (SELECT DISTINCT Team_ID FROM (SELECT"
  },
  {
    "id": 1631,
    "db_id": "car_racing",
    "question": "Which country has both drivers with make \"Dodge\" and drivers with make \"Chevrolet\"?",
    "answer": "SELECT Team_ID FROM (SELECT DISTINCT Team_ID , Team_ID , Regoin FROM (SELECT DISTINCT Team_ID , Team_ID , Regoin FROM (SELECT Team_ID , Team_ID , MIN(Make ) AS makenow , MAX(Team_ID ) AS max FROM car_racing.driver AS T ) AS T WHERE Team"
  },
  {
    "id": 1632,
    "db_id": "car_racing",
    "question": "Find the countries in which there are both drivers with make \"Dodge\" and drivers with make \"Chevrolet\".",
    "answer": "SELECT Team_ID FROM (SELECT DISTINCT Team_ID , Team_ID FROM car_racing.driver WHERE Team_ID = 'dodge' INNER JOIN car_racing.driver AS d  ON Team_ID = driver.Car_Owner ORDER BY Team_ID LIMIT 1) GROUP BY Team_ID ORDER BY Team_ID LIMIT 100"
  },
  {
    "id": 1633,
    "db_id": "car_racing",
    "question": "Show total and average points of all drivers.",
    "answer": "SELECT SUM(Points ), AVG(Points ) FROM (SELECT DISTINCT Team_ID , Team_ID , COUNT(Team_ID ) AS Total , SUM(Points ) AS avg FROM (SELECT DISTINCT Team_ID , Team_ID , COUNT(Team_ID ) AS Total , SUM(Team_ID ) AS avg FROM (SELECT"
  },
  {
    "id": 1634,
    "db_id": "car_racing",
    "question": "What are the total and average points of drivers?",
    "answer": "SELECT SUM(Points ), AVG(Points ) FROM (SELECT DISTINCT Team_ID , COUNT(Team_ID ) AS total , SUM(Points ) AS avg FROM (SELECT DISTINCT Team_ID , COUNT(Driver_ID ) AS sum FROM (SELECT DISTINCT Team_ID , Driver_ID , Points FROM (SELECT Team_ID , Driver"
  },
  {
    "id": 1635,
    "db_id": "car_racing",
    "question": "Find the countries where no driver come from.",
    "answer": "SELECT Team_ID FROM (SELECT DISTINCT Team_ID , COUNT(Team_ID ) AS n FROM (SELECT Team_ID , Regoin FROM car_racing.driver) AS T WHERE Regoin = '') AS T GROUP BY Team_ID ORDER BY country.Country_Id LIMIT 10000000000000000000000"
  },
  {
    "id": 1636,
    "db_id": "car_racing",
    "question": "Which countries do not have any drivers?",
    "answer": "SELECT Team_ID FROM (SELECT DISTINCT Team_ID , COUNT(Team_ID ) AS total FROM (SELECT Team_ID , COUNT(*) AS cnt FROM car_racing.driver WHERE Country_Id = 324760122) AS T ) ORDER BY Team_ID LIMIT 1;"
  },
  {
    "id": 1637,
    "db_id": "car_racing",
    "question": "What are the manager and sponsor of the team that has the most drivers?",
    "answer": "SELECT DISTINCT Team_ID FROM (SELECT Team_ID FROM (SELECT Team_ID , COUNT(Driver_ID ) AS num FROM (SELECT DISTINCT Team_ID , Driver_ID FROM (SELECT Team_ID FROM (SELECT Team_ID , Car_# FROM car_racing.driver WHERE Winnings > 300 ORDER BY Team_ID , Laps LIMIT 1)) AS T"
  },
  {
    "id": 1638,
    "db_id": "car_racing",
    "question": "Find the manager and sponsor of the team that has the most drivers.",
    "answer": "SELECT DISTINCT Team_ID FROM (SELECT Team_ID FROM (SELECT Team_ID , COUNT(Team_ID ) AS num FROM (SELECT Team_ID , COUNT(Team_ID ), SUM(Car_# ) AS sum FROM car_racing.driver)) GROUP BY Team_ID ORDER BY Driver_ID LIMIT 10) AS T INNER JOIN (SELECT Team_ID"
  },
  {
    "id": 1639,
    "db_id": "car_racing",
    "question": "What are the manager and car owner of the team that has at least 2 drivers?",
    "answer": "SELECT DISTINCT Team_ID FROM (SELECT Team_ID FROM (SELECT DISTINCT Team_ID , Driver_ID , COUNT(Team_ID ) AS num1 FROM (SELECT Team_ID FROM (SELECT Team_ID , MAX(Team_ID ) FROM (SELECT DISTINCT Team_ID , Manager , Car_Owner FROM car_racing.driver GROUP BY Team"
  },
  {
    "id": 1640,
    "db_id": "car_racing",
    "question": "Find the team with two or more drivers and return the the manager and car owner of the team.",
    "answer": "SELECT DISTINCT Team_ID FROM (SELECT Team_ID FROM (SELECT Team_ID , COUNT(Team_ID ) AS num FROM (SELECT Team_ID , COUNT(Driver_ID ) AS num FROM (SELECT DISTINCT Team_ID , Driver_ID FROM (SELECT DISTINCT Team_ID , Country , Driver_ID FROM (SELECT DISTINCT Team_ID , Country"
  },
  {
    "id": 1641,
    "db_id": "institution_sports",
    "question": "How many institutions are there?",
    "answer": "SELECT COUNT(Team ) FROM (SELECT DISTINCT Team FROM (SELECT * FROM (SELECT DISTINCT Team FROM institution_sports.institution AS t INNER JOIN institution_sports.Championship AS c  ON Team = Capacity ) AS T ORDER BY Team LIMIT 1)) AS T ORDER BY Team LIMIT 29468634054723"
  },
  {
    "id": 1642,
    "db_id": "institution_sports",
    "question": "Count the number of institutions.",
    "answer": "SELECT COUNT(Team ) FROM (SELECT DISTINCT Team FROM institution_sports.institution GROUP BY Team ORDER BY Team LIMIT 1) AS s ORDER BY Team LIMIT 100492153786128940159300604732895421820639541932636"
  },
  {
    "id": 1643,
    "db_id": "institution_sports",
    "question": "List the names of institutions in ascending alphabetical order.",
    "answer": "SELECT DISTINCT Team FROM (SELECT Team , Name FROM institution_sports.institution ORDER BY Name ) AS t ORDER BY Name LIMIT 1"
  },
  {
    "id": 1644,
    "db_id": "institution_sports",
    "question": "What are the names of institutions, ordered alphabetically?",
    "answer": "SELECT DISTINCT Team FROM institution_sports.institution ORDER BY Team LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1645,
    "db_id": "institution_sports",
    "question": "List the names of institutions in ascending order of founded year.",
    "answer": "SELECT DISTINCT Team FROM institution_sports.institution WHERE Founded = '2015' ORDER BY Founded LIMIT 1"
  },
  {
    "id": 1646,
    "db_id": "institution_sports",
    "question": "What are the names of institutions, ordered by the years in which they were founded?",
    "answer": "SELECT DISTINCT Team FROM institution_sports.institution AS T ORDER BY Team LIMIT 1 OFFSET 200000000045186960000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1647,
    "db_id": "institution_sports",
    "question": "What are the cities and provinces of institutions?",
    "answer": "SELECT DISTINCT Team FROM institution_sports.institution INNER JOIN institution_sports.Championship ON institution_sports.Institution_ID = institution_sports.institution.Institution_ID ORDER BY Team , Province LIMIT 12400000587982662042360989423488"
  },
  {
    "id": 1648,
    "db_id": "institution_sports",
    "question": "Return the cities and provinces of institutions.",
    "answer": "SELECT DISTINCT Team FROM institution_sports.Championship ORDER BY Joined LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1649,
    "db_id": "institution_sports",
    "question": "What are the maximum and minimum enrollment of all institutions?",
    "answer": "SELECT Team FROM (SELECT DISTINCT MAX(Team ) AS enrollment , MIN(Team ) AS enrollment FROM institution_sports.institution GROUP BY Team ORDER BY Team LIMIT 1) AS A ORDER BY Team LIMIT 1480270436954921877125477434029458426"
  },
  {
    "id": 1650,
    "db_id": "institution_sports",
    "question": "Return the maximum and minimum enrollment across all institutions.",
    "answer": "SELECT SUM(Enrollment ) AS max , MAX(Enrollment ) AS min FROM institution_sports.institution GROUP BY institution_sports.Institution_ID ORDER BY Endowment LIMIT 1 OFFSET 0"
  },
  {
    "id": 1651,
    "db_id": "institution_sports",
    "question": "What are the affiliations of institutions that are not in city \"Vancouver\"?",
    "answer": "SELECT Team FROM institution_sports.institution WHERE City = 'VANCOUVER' GROUP BY Team ORDER BY Team LIMIT 100000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1652,
    "db_id": "institution_sports",
    "question": "Return the affiliations of instituions that are not in the city of Vancouver.",
    "answer": "SELECT Team FROM (SELECT DISTINCT Team FROM institution_sports.institution WHERE City = 'Vancouver' LIMIT 1) AS T ORDER BY Team LIMIT 1234567890222794614569223518012233843473527209696448962239"
  },
  {
    "id": 1653,
    "db_id": "institution_sports",
    "question": "What are the stadiums of institutions in descending order of the capacity.",
    "answer": "SELECT DISTINCT Team FROM (SELECT Team , SUM(Capacity ) AS total FROM institution_sports.institution WHERE City = 'Boston' GROUP BY Team ORDER BY Number_of_Championships LIMIT 1) AS T ORDER BY Team LIMIT 100000000000000000000000000000000"
  },
  {
    "id": 1654,
    "db_id": "institution_sports",
    "question": "Return the stadiums of institutions, ordered by capacity descending.",
    "answer": "SELECT Team FROM (SELECT DISTINCT Stadium FROM institution_sports.Championship ORDER BY Capacity LIMIT 1) AS t ORDER BY Capacity LIMIT 20050218479635341926446505716518716464053738219473965877121296"
  },
  {
    "id": 1655,
    "db_id": "institution_sports",
    "question": "What is the stadium of the institution with the largest enrollment?",
    "answer": "SELECT DISTINCT Team FROM (SELECT DISTINCT Team FROM (SELECT * FROM institution_sports.institution AS T INNER JOIN (SELECT COUNT(Institution_ID ) AS N FROM institution_sports.institution AS I INNER JOIN (SELECT Team FROM institution_sports.institution WHERE Team > 'Championship' ORDER BY Number_of_Championships LIMIT 1) AS"
  },
  {
    "id": 1656,
    "db_id": "institution_sports",
    "question": "Give the stadium of the institution which is the greatest enrollment.",
    "answer": "SELECT DISTINCT Team FROM (SELECT DISTINCT Team FROM (SELECT * FROM institution_sports.institution AS T , institution_sports.institution AS T  AS T INNER JOIN (SELECT Team FROM (SELECT DISTINCT Team FROM (SELECT * FROM institution_sports.institution AS T ) AS T ORDER BY Team LIMIT 1)) AS T  ON Team = Team"
  },
  {
    "id": 1657,
    "db_id": "institution_sports",
    "question": "What are the names and nicknames of institutions?",
    "answer": "SELECT DISTINCT Team FROM institution_sports.institution WHERE Institution_ID = 'F814A305-72C9-4A2D-BBC4-EAD926BBCFE6F' LIMIT 10000000000000000000000000000000000000000"
  },
  {
    "id": 1658,
    "db_id": "institution_sports",
    "question": "Return the names of institutions, as well as their nicknames.",
    "answer": "SELECT DISTINCT Team FROM institution_sports.institution WHERE Enrollment = (SELECT SUM(Enrollment ) FROM institution_sports.institution ORDER BY Enrollment ) GROUP BY Team ORDER BY Team LIMIT 10000000000000000000000000000000000000000000"
  },
  {
    "id": 1659,
    "db_id": "institution_sports",
    "question": "What is the nickname of the institution with the smallest enrollment?",
    "answer": "SELECT Team FROM (SELECT DISTINCT Team FROM institution_sports.Championship WHERE Enrollment = (SELECT MIN(Enrollment ) FROM institution_sports.Championship) ORDER BY Stadium , Name LIMIT 1) AS T INNER JOIN (SELECT DISTINCT Nickname FROM institution_sports.Championship GROUP BY Team ORDER BY Team LIMIT 1) AS T "
  },
  {
    "id": 1660,
    "db_id": "institution_sports",
    "question": "Return the nickname of the institution with the lowest enrollment.",
    "answer": "SELECT Team FROM (SELECT DISTINCT Team FROM institution_sports.institution ORDER BY Team LIMIT 1) AS T ORDER BY Team LIMIT 10000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1661,
    "db_id": "institution_sports",
    "question": "List the names of institutions in descending order of the number of championships.",
    "answer": "SELECT DISTINCT Team FROM (SELECT DISTINCT Team FROM institution_sports.institution WHERE Joined = '2013' GROUP BY Team ORDER BY Number_of_Championships LIMIT 1) AS T INNER JOIN (SELECT Team FROM institution_sports.institution WHERE Joined = '2017' GROUP BY Team ORDER BY Number_of_Championships LIMIT 1)"
  },
  {
    "id": 1662,
    "db_id": "institution_sports",
    "question": "What are the names of institutions, ordered descending by their number of championships?",
    "answer": "SELECT DISTINCT Team FROM (SELECT DISTINCT Team FROM (SELECT * FROM institution_sports.Championship AS T INNER JOIN institution_sports.Championship AS C  ON Team = City GROUP BY Team ORDER BY Team ) AS T ORDER BY Team LIMIT 1) ORDER BY Team , Team LIMIT 2000000000000"
  },
  {
    "id": 1663,
    "db_id": "institution_sports",
    "question": "List the names of institutions with at least one championship.",
    "answer": "SELECT DISTINCT Team FROM (SELECT DISTINCT Team FROM (SELECT COUNT(Nickname ), Joined FROM institution_sports.Championship AS T INNER JOIN institution_sports.institution AS I  ON Team = Institution_ID GROUP BY Team ORDER BY Affiliation LIMIT 1) AS T INNER JOIN institution_sports.institution AS I  ON Team = In"
  },
  {
    "id": 1664,
    "db_id": "institution_sports",
    "question": "What are the names of institutions that have 1 or more championships?",
    "answer": "SELECT DISTINCT Team FROM (SELECT DISTINCT Team FROM institution_sports.Championship GROUP BY Team ORDER BY Team LIMIT 1) AS t ORDER BY Team LIMIT 100000376952848930153340604730575608380639847910166"
  },
  {
    "id": 1665,
    "db_id": "institution_sports",
    "question": "What is the total number of championship of institution with public affiliation?",
    "answer": "SELECT SUM(Team ), COUNT(Team ) FROM (SELECT DISTINCT Team FROM institution_sports.Championship GROUP BY Team ORDER BY Affiliation ) AS T WHERE Affiliation = 'PublicAff' GROUP BY Team ORDER BY Team LIMIT 1000000000000000000000000000000"
  },
  {
    "id": 1666,
    "db_id": "institution_sports",
    "question": "Return the total number of championships of institutions that have a Public affiliation.",
    "answer": "SELECT SUM(Team ), COUNT(Institution_ID ) FROM (SELECT Team , COUNT(Team ) AS num FROM institution_sports.Championship GROUP BY institution.Name ORDER BY Team ) AS x GROUP BY Institution_ID ORDER BY Team LIMIT 10000000000000000000000000000000000"
  },
  {
    "id": 1667,
    "db_id": "institution_sports",
    "question": "What are different types of affiliations of institutions and the corresponding number of institutions?",
    "answer": "SELECT Team FROM (SELECT DISTINCT Team , COUNT(Team ) AS n FROM institution_sports.institution WHERE Affiliation = 'Affiliate' GROUP BY Team ORDER BY Team LIMIT 1) AS s ORDER BY Team LIMIT 1234569078765567699996491987242561978"
  },
  {
    "id": 1668,
    "db_id": "institution_sports",
    "question": "How many institutions are there for each type of affiliation?",
    "answer": "SELECT Team FROM (SELECT DISTINCT Team , Affiliation FROM institution_sports.institution GROUP BY Team ORDER BY Affiliation ) AS t ORDER BY Team LIMIT 100000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1669,
    "db_id": "institution_sports",
    "question": "What is the most common type of affiliation for institutions?",
    "answer": "SELECT DISTINCT Team FROM (SELECT Team , COUNT(Team ) AS Num FROM (SELECT DISTINCT Team FROM institution_sports.Championship GROUP BY Team ORDER BY Number_of_Championships LIMIT 1) AS T WHERE Team = 'CANONICAL') AS x GROUP BY Team ORDER BY Team , Number_of_Championships LIMIT "
  },
  {
    "id": 1670,
    "db_id": "institution_sports",
    "question": "Return the most common type of affiliation across all institutions.",
    "answer": "SELECT DISTINCT Team FROM (SELECT DISTINCT Team FROM (SELECT DISTINCT Team FROM institution_sports.institution AS T INNER JOIN (SELECT DISTINCT Team FROM institution_sports.institution ORDER BY Team LIMIT 1) AS T  ON Team = Team GROUP BY Team ORDER BY Team LIMIT 2)) AS T ORDER BY Team LIMIT 10"
  },
  {
    "id": 1671,
    "db_id": "institution_sports",
    "question": "In which years were more than one institution founded?",
    "answer": "SELECT Team FROM (SELECT DISTINCT Team FROM institution_sports.institution AS T WHERE Team = 'Founded' GROUP BY Team ORDER BY Capacity LIMIT 1) AS T WHERE Team > 2003 ORDER BY Capacity LIMIT 2500000000000000000000000000000"
  },
  {
    "id": 1672,
    "db_id": "institution_sports",
    "question": "Return the years in which more than 1 institution was founded, as well as the number of institutions founded in each of those.",
    "answer": "SELECT COUNT(Team ), SUM(Team ) AS num FROM (SELECT Team , COUNT(Institution_ID ) AS num FROM institution_sports.institution GROUP BY Team ) AS T ORDER BY Team LIMIT 1000000000000000000000000000000000000000000"
  },
  {
    "id": 1673,
    "db_id": "institution_sports",
    "question": "List the nicknames of institutions in descending order of capacity.",
    "answer": "SELECT DISTINCT Team FROM (SELECT DISTINCT Team FROM (SELECT Name , MAX(Capacity ) AS temp FROM institution_sports.institution GROUP BY Team ORDER BY Capacity LIMIT 1) AS T INNER JOIN (SELECT Nickname , SUM(Team ) AS sum FROM institution_sports.institution WHERE Number_of_Championships > 10) AS T  ON Team = 'N' ORDER"
  },
  {
    "id": 1674,
    "db_id": "institution_sports",
    "question": "What are the nicknames of institutions, ordered descending by their capacities?",
    "answer": "SELECT DISTINCT Team FROM (SELECT DISTINCT Team FROM (SELECT Name , MAX(Team ) AS ROWNUM , SUM(Team ) AS total , COUNT(*) FROM (SELECT DISTINCT Team FROM (SELECT Team , SUM(Team ) AS ROWNum , COUNT(Team ) AS total FROM institution_sports.institution)) AS T ORDER BY Team LIMIT 1) AS"
  },
  {
    "id": 1675,
    "db_id": "institution_sports",
    "question": "What are the total enrollment of institutions in city `` Vancouver '' or `` Calgary '' ?",
    "answer": "SELECT SUM(Team ), SUM(Stadium ) FROM (SELECT City , SUM(Stadium ), COUNT(Stadium ) AS num FROM institution_sports.institution GROUP BY Team ) AS T ORDER BY Team LIMIT 10000000000000000000000000000000000000000000"
  },
  {
    "id": 1676,
    "db_id": "institution_sports",
    "question": "Return all the enrollments of institutions in either the city of Vancouver or the city of Calgary .",
    "answer": "SELECT COUNT(Team ), Team FROM (SELECT DISTINCT City , COUNT(Team ) AS RESULT FROM institution_sports.institution GROUP BY Team ) AS T ORDER BY Team LIMIT 10463875626029229726163913298428577454727937964"
  },
  {
    "id": 1677,
    "db_id": "institution_sports",
    "question": "Show the provinces that have both institutions founded before 1920 and institutions founded after 1950.",
    "answer": "SELECT Team FROM (SELECT DISTINCT Province FROM institution_sports.institution AS T WHERE Team = 'Miami Dolphins' LIMIT 1) AS t INNER JOIN institution_sports.institution AS T  ON Team = Team ORDER BY Team , Team , Nickname LIMIT 5000 OFFSET 4099600000000000"
  },
  {
    "id": 1678,
    "db_id": "institution_sports",
    "question": "What are the provinces that have not only institutions founded before 1920, but also institutions founded after 1950?",
    "answer": "SELECT Team FROM (SELECT DISTINCT Province FROM institution_sports.institution AS T INNER JOIN (SELECT Team FROM institution_sports.institution WHERE Team = 'Institute of Physical Education' LIMIT 1) AS t  ON Team = Team ORDER BY Team , Institution_ID LIMIT 2013) AS a WHERE Team = '' GROUP BY Province ORDER BY Team LIMIT 201"
  },
  {
    "id": 1679,
    "db_id": "institution_sports",
    "question": "How many distinct provinces are the institutions in?",
    "answer": "SELECT COUNT(Province ) FROM institution_sports.institution INNER JOIN (SELECT DISTINCT Team , COUNT(Team ) AS num FROM (SELECT DISTINCT Team FROM institution_sports.institution WHERE Province = 'Province_List' GROUP BY Team ORDER BY Team ) AS T WHERE Team = 'province' LIMIT 1) AS x  ON institution_spor"
  },
  {
    "id": 1680,
    "db_id": "institution_sports",
    "question": "Count the number of different provinces that have institutions.",
    "answer": "SELECT COUNT(Province ) FROM institution_sports.institution WHERE Province = 'Uruguay' GROUP BY Province ORDER BY Province LIMIT 100000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1681,
    "db_id": "warehouse_1",
    "question": "Select all details of all warehouses.",
    "answer": "SELECT DISTINCT Location FROM warehouse_1.Warehouses GROUP BY Location ORDER BY Code LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1682,
    "db_id": "warehouse_1",
    "question": "What is all the information about the warehouses?",
    "answer": "SELECT * FROM warehouse_1.Warehouses INNER JOIN (SELECT DISTINCT Contents , SUM(Value ) AS sum FROM (SELECT DISTINCT Contents , SUM(Value ), warehouse_1.Code FROM (SELECT DISTINCT Warehouse FROM warehouse_1.Boxes) AS T ORDER BY Value LIMIT 2) AS T INNER JOIN warehouse_1.Warehouses ON Warehouse ="
  },
  {
    "id": 1683,
    "db_id": "warehouse_1",
    "question": "Find all different contents stored in New York.",
    "answer": "SELECT DISTINCT Contents FROM (SELECT DISTINCT Contents FROM warehouse_1.Warehouses WHERE Location = 'New York' GROUP BY Contents ORDER BY Code LIMIT 1) AS T INNER JOIN warehouse_1.Warehouses AS W  ON Warehouses.Code =  Warehouses.Contents ORDER BY Warehouse LIMIT 1 OFFSET 0;"
  },
  {
    "id": 1684,
    "db_id": "warehouse_1",
    "question": "What are all the different contents stored in boxes in New York?",
    "answer": "SELECT DISTINCT Contents FROM (SELECT DISTINCT Contents FROM warehouse_1.Warehouses AS T INNER JOIN (SELECT Warehouse , SUM(Value ) AS num FROM (SELECT COUNT(Contents ), Value FROM (SELECT DISTINCT Contents FROM warehouse_1.Warehouses WHERE Code = 'NY') GROUP BY Warehouse ORDER BY Value LIMIT 1)) AS T  ON Location = 'new york'"
  },
  {
    "id": 1685,
    "db_id": "warehouse_1",
    "question": "Select contents of all boxes with a value larger than $150.",
    "answer": "SELECT DISTINCT SUM(Contents ) FROM (SELECT DISTINCT Contents , AVG(Value ) AS total FROM (SELECT DISTINCT Contents , Value FROM (SELECT DISTINCT SUM(Contents ), Value FROM (SELECT DISTINCT Boxes.Location , Boxes.Warehouse , SUM(Contents ) AS total FROM (SELECT DISTINCT Boxes.Code , Warehouse FROM (SELECT DISTINCT Location , Boxes.Warehouse"
  },
  {
    "id": 1686,
    "db_id": "warehouse_1",
    "question": "What are the contents of boxes with value greater than 150?",
    "answer": "SELECT DISTINCT SUM(Contents ) FROM (SELECT MAX(Contents ), SUM(Value ) AS total FROM (SELECT Contents , Value FROM (SELECT Code , SUM(Value ) AS Total FROM (SELECT DISTINCT Boxes.Contents , Warehouse FROM (SELECT DISTINCT Boxes.Code , Boxes.Location FROM (SELECT DISTINCT COUNT(Boxes.Warehouse ), Boxes.Code FROM (SELECT DISTINCT Contents ,"
  },
  {
    "id": 1687,
    "db_id": "warehouse_1",
    "question": "Select the warehouse code and the average value of the boxes in each warehouse.",
    "answer": "SELECT DISTINCT warehouse_1.Code , AVG(Boxes.Value ) FROM warehouse_1.Warehouses AS T INNER JOIN (SELECT DISTINCT Warehouse FROM warehouse_1.Warehouses GROUP BY Warehouse ORDER BY Location LIMIT 3) AS T  ON Warehouses.Code = 'T' GROUP BY warehouse_1.Warehouse ORDER BY ware"
  },
  {
    "id": 1688,
    "db_id": "warehouse_1",
    "question": "What is the average value of boxes for each warehouse?",
    "answer": "SELECT SUM(Value ) FROM (SELECT DISTINCT Value , Boxes.Warehouse , Boxes.Location FROM (SELECT DISTINCT Code , Warehouse , MIN(Contents ) AS Va , MAX(Contents ) AS MI FROM (SELECT DISTINCT Contents , warehouse_1.Warehouse FROM (SELECT DISTINCT Code , Warehouses.Warehouse FROM (SELECT DISTINCT "
  },
  {
    "id": 1689,
    "db_id": "warehouse_1",
    "question": "Find the average and total values of all boxes.",
    "answer": "SELECT AVG(Value ), SUM(Value ) FROM (SELECT DISTINCT Boxes.Contents , COUNT(Boxes.Code ) AS num FROM (SELECT DISTINCT Boxes.Contents , SUM(Boxes.Value ) AS num FROM (SELECT Warehouses.Code , COUNT(Warehouse ) AS Num FROM (SELECT DISTINCT warehouse_1.Code , Boxes.Warehouse FROM (SELECT DISTINCT Warehouses"
  },
  {
    "id": 1690,
    "db_id": "warehouse_1",
    "question": "What are the average and total values across all boxes?",
    "answer": "SELECT SUM(Value ), SUM(Value ) FROM (SELECT SUM(Value ) AS Total , AVG(Value ) AS Avg FROM (SELECT DISTINCT * FROM (SELECT DISTINCT Value , Warehouse , Value , MIN(Warehouse ) FROM (SELECT DISTINCT Value FROM (SELECT DISTINCT Code FROM (SELECT Code , COUNT(Boxes.Code ) AS Total , SUM(Boxes"
  },
  {
    "id": 1691,
    "db_id": "warehouse_1",
    "question": "Find the average and total capacity of all warehouses.",
    "answer": "SELECT AVG(Capacity ), SUM(Capacity ) FROM warehouse_1.Warehouses GROUP BY Code ORDER BY Value LIMIT 100000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1692,
    "db_id": "warehouse_1",
    "question": "What are the average and total capacities across all warehouses?",
    "answer": "SELECT SUM(Capacity ), SUM(Capacity ) FROM (SELECT DISTINCT Capacity , COUNT(Value ) AS sum FROM (SELECT Code , SUM(Value ) AS avg FROM warehouse_1.Boxes GROUP BY Code , Code , Location ORDER BY Code , Value LIMIT 2) AS T INNER JOIN warehouse_1.Warehouses AS W  ON Warehouse = 'Warehouse_1'"
  },
  {
    "id": 1693,
    "db_id": "warehouse_1",
    "question": "Find the average and maximum value for each different content.",
    "answer": "SELECT AVG(Value ), MAX(Value ) FROM (SELECT DISTINCT Contents FROM warehouse_1.Warehouses ORDER BY Value LIMIT 1) AS T GROUP BY Contents ORDER BY Location , Contents LIMIT 20000000000000000000000000000000000000000000"
  },
  {
    "id": 1694,
    "db_id": "warehouse_1",
    "question": "What are the average and maximum values for each type of content in boxes?",
    "answer": "SELECT AVG(Value ), MAX(Value ) FROM (SELECT DISTINCT Contents , Value FROM warehouse_1.Boxes WHERE Warehouse = 'Warehousing_C' ORDER BY Contents ) AS T ORDER BY Value LIMIT 20000000000000000000000000000000000000000000"
  },
  {
    "id": 1695,
    "db_id": "warehouse_1",
    "question": "Find the content that has the highest total values in all boxes.",
    "answer": "SELECT DISTINCT SUM(Value ) FROM (SELECT DISTINCT Contents , COUNT(Value ) AS sum FROM (SELECT DISTINCT MAX(Value ), COUNT(Warehouse ) FROM warehouse_1.Boxes) AS T GROUP BY Warehouse ORDER BY Location LIMIT 1) AS t INNER JOIN warehouse_1.Boxes ON warehouse_1.Code = warehouse_1."
  },
  {
    "id": 1696,
    "db_id": "warehouse_1",
    "question": "What is the content with the greatest value across all boxes?",
    "answer": "SELECT SUM(Value ) FROM (SELECT DISTINCT Contents FROM (SELECT MAX(Contents ), Code , Value FROM (SELECT DISTINCT Boxes.Contents FROM (SELECT DISTINCT Boxes.Warehouse FROM (SELECT DISTINCT Warehouses.Code , COUNT(Boxes.Location ) AS num FROM warehouse_1.Boxes INNER JOIN warehouse_1.Warehouses ON Warehouses."
  },
  {
    "id": 1697,
    "db_id": "warehouse_1",
    "question": "Select the average value of all the boxes.",
    "answer": "SELECT SUM(Value ), AVG(Value ) FROM (SELECT DISTINCT Boxes.Contents , AVG(Warehouse ) AS avg_value FROM (SELECT DISTINCT Boxes.Contents , Warehouse FROM warehouse_1.Boxes) AS T ) AS x INNER JOIN (SELECT SUM(warehouse_1.Value ), AVG(warehouse_1.Value ) FROM (SELECT DISTINCT Boxes.Contents ,"
  },
  {
    "id": 1698,
    "db_id": "warehouse_1",
    "question": "What is the average value of boxes?",
    "answer": "SELECT AVG(Value ) FROM (SELECT DISTINCT SUM(Value ) AS Total FROM (SELECT Code , SUM(Value ) AS sum FROM (SELECT DISTINCT Contents FROM (SELECT * FROM warehouse_1.Boxes GROUP BY Contents ORDER BY Location LIMIT 1) AS T ORDER BY Value ) AS T ORDER BY Location LIMIT 1) AS T ORDER BY Location LIMIT 10000000000"
  },
  {
    "id": 1699,
    "db_id": "warehouse_1",
    "question": "Select all distinct contents in all the boxes.",
    "answer": "SELECT DISTINCT COUNT(Contents ) FROM (SELECT DISTINCT Boxes.Contents , Code FROM (SELECT DISTINCT Boxes.Contents , Code FROM (SELECT Contents FROM (SELECT DISTINCT Boxes.Contents , Warehouse FROM (SELECT DISTINCT Contents , Code FROM warehouse_1.Boxes WHERE Code = '2742') AS T ) AS T INNER JOIN (SELECT DISTINCT"
  },
  {
    "id": 1700,
    "db_id": "warehouse_1",
    "question": "What are the different contents in boxes?",
    "answer": "SELECT DISTINCT Contents FROM (SELECT DISTINCT Contents FROM warehouse_1.Boxes GROUP BY Contents ORDER BY Location LIMIT 1) AS T ORDER BY Location LIMIT 200000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1701,
    "db_id": "warehouse_1",
    "question": "Find the number of all distinct contents in all the boxes.",
    "answer": "SELECT COUNT(Contents ) FROM (SELECT DISTINCT Contents FROM (SELECT DISTINCT * FROM (SELECT DISTINCT Contents FROM (SELECT DISTINCT Contents FROM (SELECT DISTINCT Location , SUM(Value ) AS num FROM (SELECT DISTINCT Code , MAX(Code ) FROM warehouse_1.Warehouses) AS T ORDER BY Code LIMIT 1)) AS T ORDER BY Contents , Location , Warehouse"
  },
  {
    "id": 1702,
    "db_id": "warehouse_1",
    "question": "How many different contents are stored in boxes?",
    "answer": "SELECT COUNT(Contents ) FROM (SELECT DISTINCT Contents FROM warehouse_1.Boxes WHERE Warehouse = 'W4206' GROUP BY Contents ORDER BY Code LIMIT 1) AS T INNER JOIN warehouse_1.Warehouses ON Location = 'NJ2537' ORDER BY Code LIMIT 1;"
  },
  {
    "id": 1703,
    "db_id": "warehouse_1",
    "question": "Find all distinct locations of warehouses.",
    "answer": "SELECT DISTINCT Location FROM warehouse_1.Warehouses GROUP BY Location ORDER BY Location LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1704,
    "db_id": "warehouse_1",
    "question": "What are the different locations of warehouses?",
    "answer": "SELECT DISTINCT Location FROM warehouse_1.Warehouses ORDER BY Code LIMIT 2000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1705,
    "db_id": "warehouse_1",
    "question": "Find the code of boxes that are stored at the warehouses located at Chicago or New York.",
    "answer": "SELECT DISTINCT COUNT(Warehouses.Code ) FROM (SELECT DISTINCT Code FROM (SELECT DISTINCT Warehouse , Location FROM warehouse_1.Boxes WHERE Location = 'Chicago' ORDER BY Code LIMIT 1) AS T ORDER BY Location , Code LIMIT 2), (SELECT DISTINCT COUNT(Warehouse ) FROM (SELECT DISTINCT Warehouse , Location FROM warehous"
  },
  {
    "id": 1706,
    "db_id": "warehouse_1",
    "question": "What are the codes of boxes stored in warehouses in either Chicago or New York?",
    "answer": "SELECT DISTINCT Code FROM (SELECT DISTINCT Warehouses.Code FROM warehouse_1.Warehouses AS T INNER JOIN warehouse_1.Boxes AS B  ON Boxes.Contents = Warehouses.Contents ORDER BY Location ) AS T WHERE Location = 'Chicago' ORDER BY Location , Location , Code \n  LIMIT 10000000000"
  },
  {
    "id": 1707,
    "db_id": "warehouse_1",
    "question": "Find the total value of boxes in the warehouses located at Chicago or New York.",
    "answer": "SELECT SUM(Value ) FROM (SELECT DISTINCT Contents , Location FROM warehouse_1.Boxes GROUP BY Contents ORDER BY Location LIMIT 1) AS T INNER JOIN warehouse_1.Warehouses ON Location = 'Chicago' ORDER BY Location , Code LIMIT 100000000000000000000000000"
  },
  {
    "id": 1708,
    "db_id": "warehouse_1",
    "question": "What is the total value of boxes located in Chicago or New York?",
    "answer": "SELECT SUM(Value ) FROM (SELECT DISTINCT Contents , Location FROM (SELECT Code , Value , Warehouse FROM (SELECT Code , Location , Warehouse FROM warehouse_1.Warehouses GROUP BY Warehouse ORDER BY Value LIMIT 1)) AS T ) AS t INNER JOIN warehouse_1.Boxes AS b  ON Location = 'Chicago' ORDER BY Location"
  },
  {
    "id": 1709,
    "db_id": "warehouse_1",
    "question": "Find all contents present in warehouses located in Chicago and those located in New York.",
    "answer": "SELECT DISTINCT Contents FROM warehouse_1.Warehouses AS T , warehouse_1.Warehouses AS T WHERE Location = 'Chicago' INNER JOIN (SELECT DISTINCT Contents FROM warehouse_1.Warehouses AS T INNER JOIN warehouse_1.Warehouses AS T  ON EXISTS (SELECT Warehouse , Contents , Code , Ware"
  },
  {
    "id": 1710,
    "db_id": "warehouse_1",
    "question": "Find the contents that are stored in both Chicago and New York.",
    "answer": "SELECT DISTINCT SUM(Contents ) FROM (SELECT DISTINCT Contents FROM warehouse_1.Warehouses WHERE Location = 'Chicago' INNER JOIN warehouse_1.Warehouses ON Warehouses.Location = 'New York' ORDER BY Location , Contents LIMIT 3) AS T INNER JOIN (SELECT DISTINCT Boxes.Contents FROM (SELECT DISTINCT Warehouse FROM warehouse"
  },
  {
    "id": 1711,
    "db_id": "warehouse_1",
    "question": "Find the type of contents that are not in the warehouses located at New York.",
    "answer": "SELECT DISTINCT COUNT(Contents ) FROM (SELECT DISTINCT Contents FROM (SELECT Code , SUM(Value ), MAX(Code ) AS temp FROM (SELECT DISTINCT Code , Value FROM warehouse_1.Warehouses ORDER BY Location LIMIT 1) AS T ORDER BY Location LIMIT 3)) AS T WHERE Warehouses.Location = 'New York' GROUP BY Contents ORDER BY Value LIMIT 20000"
  },
  {
    "id": 1712,
    "db_id": "warehouse_1",
    "question": "What types of contents cannot be found in warehouses in New York?",
    "answer": "SELECT DISTINCT COUNT(Contents ) FROM (SELECT DISTINCT Contents FROM warehouse_1.Warehouses WHERE Location = 'NY' GROUP BY Contents ORDER BY Code LIMIT 1) AS T INNER JOIN warehouse_1.Warehouses AS W  ON Warehouse  IN (SELECT Code FROM (SELECT DISTINCT Contents , COUNT(Contents ) AS result FROM (SELECT DISTINCT Contents , SUM(Value"
  },
  {
    "id": 1713,
    "db_id": "warehouse_1",
    "question": "Find the location of the warehouses which have contents Rocks but not Scissors.",
    "answer": "SELECT DISTINCT Location FROM warehouse_1.Warehouses WHERE Contents = 'Rock' INNER JOIN warehouse_1.Warehouses ON Warehouses.Code = warehouse_1.Code ORDER BY Warehouses.Location LIMIT 1;"
  },
  {
    "id": 1714,
    "db_id": "warehouse_1",
    "question": "What are the locations of warehouses that have boxes containing Rocks but not Scissors?",
    "answer": "SELECT DISTINCT Location FROM warehouse_1.Warehouses WHERE Code = 'ROCKS' GROUP BY Location ORDER BY Location LIMIT 10000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1715,
    "db_id": "warehouse_1",
    "question": "Find the warehouses which store contents Rocks or Scissors.",
    "answer": "SELECT DISTINCT warehouse_1.Location FROM (SELECT DISTINCT Location FROM warehouse_1.Boxes WHERE Contents = 'Rocks' ORDER BY Location ) AS T ORDER BY warehouse_1.Code LIMIT 10000000000000000000000000000000000000000"
  },
  {
    "id": 1716,
    "db_id": "warehouse_1",
    "question": "What are the distinct warehouses that have boxes with Rocks or Scissors as contents?",
    "answer": "SELECT DISTINCT warehouse_1.Warehouse FROM (SELECT DISTINCT warehouse_1.Code , warehouse_1.Contents FROM warehouse_1.Boxes AS T INNER JOIN warehouse_1.Warehouses AS T  ON warehouse_1.Code =  'T065' ORDER BY Contents ) AS T GROUP BY Warehouses.Warehouse"
  },
  {
    "id": 1717,
    "db_id": "warehouse_1",
    "question": "Find the location of the warehouses which store contents Rocks and Scissors.",
    "answer": "SELECT DISTINCT Location FROM warehouse_1.Warehouses WHERE Value = (SELECT MAX(Value ) FROM (SELECT DISTINCT Contents FROM warehouse_1.Warehouses GROUP BY Warehouses.Location ORDER BY Value LIMIT 1)) GROUP BY Location ORDER BY Location , Value LIMIT 10485761206355000000000000"
  },
  {
    "id": 1718,
    "db_id": "warehouse_1",
    "question": "What are the locations of warehouses in which boxes that contain Rocks and Scissors are kept?",
    "answer": "SELECT DISTINCT Location FROM (SELECT DISTINCT Warehouse FROM (SELECT Contents FROM (SELECT DISTINCT Boxes.Contents , Value FROM (SELECT DISTINCT Contents , MAX(Code ) AS code FROM (SELECT DISTINCT Boxes.Code , COUNT(Boxes.Warehouse ) AS total_containers FROM (SELECT DISTINCT Boxes.Location , Code , Value FROM (SELECT DISTINCT Boxes.Contents"
  },
  {
    "id": 1719,
    "db_id": "warehouse_1",
    "question": "List the code and contents of all boxes sorted by their values.",
    "answer": "SELECT DISTINCT Code , Contents FROM (SELECT DISTINCT Contents , Value FROM (SELECT DISTINCT Contents , Value FROM (SELECT Warehouse , SUM(Value ) AS total_value , MAX(Value ) AS max_value FROM (SELECT MIN(Warehouse ), MAX(Value ) AS min_val FROM (SELECT DISTINCT warehouse_1.Code , SUM(Warehouse ) AS num FROM (SELECT DISTINCT Ware"
  },
  {
    "id": 1720,
    "db_id": "warehouse_1",
    "question": "What are the codes and corresponding contents of all the boxes, ordered by their values?",
    "answer": "SELECT DISTINCT Contents FROM (SELECT DISTINCT Boxes.Contents , COUNT(Boxes.Value ) AS total_value FROM (SELECT DISTINCT Boxes.Code , MAX(Value ), COUNT(Value ) FROM (SELECT Code , MAX(Value ) AS sum FROM (SELECT DISTINCT Boxes.Warehouse , SUM(Value ), Warehouses.Location FROM (SELECT DISTINCT Warehouses.Code , Warehouses"
  },
  {
    "id": 1721,
    "db_id": "warehouse_1",
    "question": "Find the code and contents of the box with the lowest value.",
    "answer": "SELECT DISTINCT Code , Contents FROM (SELECT DISTINCT Contents , Location FROM (SELECT DISTINCT SUM(Value ) AS val FROM (SELECT DISTINCT warehouse_1.Code , warehouse_1.Contents FROM warehouse_1.Warehouses AS T WHERE warehouse_1.Warehouse = 'Groveville' ORDER BY Location LIMIT 1) AS R ) AS T"
  },
  {
    "id": 1722,
    "db_id": "warehouse_1",
    "question": "What is the code and contents for the box that has the smallest value?",
    "answer": "SELECT Code , SUM(Value ) FROM (SELECT DISTINCT Boxes.Contents FROM (SELECT DISTINCT Contents , MAX(Value ) AS min_value FROM (SELECT DISTINCT Boxes.Code , Warehouse FROM (SELECT DISTINCT Boxes.Code , Warehouse FROM (SELECT DISTINCT Boxes.Contents , COUNT(Boxes.Location ) AS Index FROM (SELECT DISTINCT Location , Boxes."
  },
  {
    "id": 1723,
    "db_id": "warehouse_1",
    "question": "Find the unique contents of all boxes whose value is higher than the average value of all boxes.",
    "answer": "SELECT DISTINCT Contents FROM (SELECT SUM(Value ) AS sum FROM (SELECT DISTINCT Value FROM warehouse_1.Boxes GROUP BY Warehouse ORDER BY Value ) AS T ORDER BY Value LIMIT 1) AS t INNER JOIN (SELECT DISTINCT Value , SUM(Value ) FROM (SELECT DISTINCT Contents FROM (SELECT DISTINCT Boxes.Warehouse , SUM(Value ) FROM (SELECT DISTINCT"
  },
  {
    "id": 1724,
    "db_id": "warehouse_1",
    "question": "What are the different contents of boxes for which the value is higher than the average value across all boxes?",
    "answer": "SELECT SUM(Contents ) FROM (SELECT DISTINCT SUM(Contents ), AVG(Value ), Value FROM (SELECT DISTINCT Contents , Value FROM (SELECT DISTINCT COUNT(*) AS i FROM (SELECT COUNT(Contents ), SUM(Contents ), Value FROM (SELECT DISTINCT SUM(Contents ), Value FROM (SELECT DISTINCT COUNT(*), Value FROM (SELECT DISTINCT COUNT(Contents ), SUM(Contents ) FROM (SELECT DISTINCT"
  },
  {
    "id": 1725,
    "db_id": "warehouse_1",
    "question": "List all different types of contents ordered by contents.",
    "answer": "SELECT DISTINCT Contents FROM (SELECT DISTINCT Contents FROM (SELECT Location FROM (SELECT DISTINCT Contents FROM (SELECT DISTINCT Contents , COUNT(Contents ) AS num FROM (SELECT DISTINCT COUNT(Contents ) AS num FROM (SELECT DISTINCT Code FROM (SELECT DISTINCT Location FROM (SELECT DISTINCT Contents , COUNT(Contents ) AS num FROM (SELECT DISTINCT Contents FROM (SELECT"
  },
  {
    "id": 1726,
    "db_id": "warehouse_1",
    "question": "What are the different contents of boxes, ordered alphabetically?",
    "answer": "SELECT DISTINCT SUM(Contents ), SUM(Contents ) FROM (SELECT DISTINCT Location , Value FROM (SELECT DISTINCT Contents , Warehouse , SUM(Value ) AS Total FROM (SELECT DISTINCT Boxes.Code , Contents FROM (SELECT DISTINCT Boxes.Warehouse , Contents FROM (SELECT DISTINCT warehouse_1.Code , Value FROM (SELECT DISTINCT"
  },
  {
    "id": 1727,
    "db_id": "warehouse_1",
    "question": "Find the code of all boxes whose value is higher than the value of any boxes with Rocks as content.",
    "answer": "SELECT DISTINCT Code FROM (SELECT DISTINCT Code , Value FROM (SELECT DISTINCT Boxes.Contents , AVG(Boxes.Value ) AS sum , MAX(Boxes.Value ) AS max FROM (SELECT Boxes.Contents , AVG(Boxes.Value ) AS sum FROM (SELECT DISTINCT Boxes.Contents , AVG(Boxes.Value ) AS sum , COUNT(Boxes.Contents"
  },
  {
    "id": 1728,
    "db_id": "warehouse_1",
    "question": "What are the codes of boxes for which the value is greater than the value of any box that contains Rocks?",
    "answer": "SELECT DISTINCT Code FROM (SELECT DISTINCT Contents FROM (SELECT DISTINCT COUNT(Code ), MAX(Value ) AS max FROM (SELECT DISTINCT Contents , SUM(Value ), warehouse_1.Warehouses.Capacity FROM (SELECT DISTINCT warehouse_1.Location , MAX(Value ), warehouse_1.Warehouses.Capacity FROM warehouse_1.Box"
  },
  {
    "id": 1729,
    "db_id": "warehouse_1",
    "question": "Find the code and content of all boxes whose value is higher than the value of all boxes with Scissors as content.",
    "answer": "SELECT DISTINCT Contents FROM (SELECT DISTINCT Contents , MAX(Value ) AS MaxValue FROM (SELECT DISTINCT Boxes.Contents , Boxes.Warehouse FROM (SELECT DISTINCT Boxes.Code , Boxes.Warehouse FROM (SELECT DISTINCT Boxes.Contents , MAX(Contents ) AS MaxValue FROM (SELECT DISTINCT Boxes.Code , Boxes.Warehouse FROM (SELECT DISTINCT Boxes"
  },
  {
    "id": 1730,
    "db_id": "warehouse_1",
    "question": "What are the codes and corresponding contents of boxes for which their value is higher than the values of all boxes containing Scissors?",
    "answer": "SELECT DISTINCT Code , Contents FROM (SELECT DISTINCT Contents , Warehouse FROM (SELECT DISTINCT Boxes.Code , Boxes.Value FROM (SELECT DISTINCT Boxes.Code , Boxes.Contents , SUM(Contents ) AS total FROM (SELECT DISTINCT Contents , Warehouse FROM (SELECT DISTINCT Boxes.Code , Boxes.Value FROM (SELECT DISTINCT Boxes.Code , Box"
  },
  {
    "id": 1731,
    "db_id": "warehouse_1",
    "question": "Find the total value of boxes stored in the warehouse with the largest capacity.",
    "answer": "SELECT SUM(Value ) FROM (SELECT DISTINCT MAX(Value ) AS V FROM (SELECT Code , MAX(Capacity ) AS V FROM (SELECT DISTINCT Warehouses.Warehouse , SUM(Warehouses.Value ), Warehouses.Code FROM (SELECT DISTINCT warehouse_1.Location , SUM(Warehouses.Value ) FROM (SELECT DISTINCT Code , MAX(Capacity )"
  },
  {
    "id": 1732,
    "db_id": "warehouse_1",
    "question": "What is the total value of boxes kept in the warehouse with the greatest capacity?",
    "answer": "SELECT SUM(Value ) FROM (SELECT MAX(Value ), Capacity , SUM(Value ) AS avg FROM (SELECT DISTINCT Warehouses.Code , AVG(Warehouses.Value ) FROM (SELECT Warehouses.Code , COUNT(Boxes.Contents ) FROM (SELECT DISTINCT Boxes.Contents , Boxes.Location FROM (SELECT DISTINCT warehouse_1.Code , w"
  },
  {
    "id": 1733,
    "db_id": "warehouse_1",
    "question": "Select the warehouse code and the average value of the boxes only for those warehouses where the average value of the boxes is greater than 150.",
    "answer": "SELECT DISTINCT Boxes.Warehouse , AVG(Boxes.Value ) FROM (SELECT DISTINCT Warehouse , SUM(Value ) AS avg FROM (SELECT DISTINCT MAX(Value ), Warehouse , SUM(Value ) FROM (SELECT DISTINCT Contents , warehouse_1.Value , warehouse_1.Warehouse , SUM(Warehouse ), SUM(Contents ) FROM (SELECT DISTINCT"
  },
  {
    "id": 1734,
    "db_id": "warehouse_1",
    "question": "What are the average values of boxes for each warehouse than has an average value greater than 150?",
    "answer": "SELECT AVG(Value ), SUM(Value ) FROM (SELECT DISTINCT Warehouses.Warehouse , SUM(Warehouses.Value ) AS sum FROM (SELECT DISTINCT Warehouses.Code , SUM(Warehouses.Value ) AS value FROM warehouse_1.Boxes GROUP BY Warehouses.Warehouse ORDER BY Value LIMIT 2) AS T WHERE Code > 150 GROUP BY"
  },
  {
    "id": 1735,
    "db_id": "warehouse_1",
    "question": "Find the total value and number of boxes for each content type.",
    "answer": "SELECT SUM(Value ), COUNT(Boxes.Contents ) FROM warehouse_1.Boxes AS T , warehouse_1.Warehouses AS T WHERE Warehouses.Code = 'C088' GROUP BY Contents ORDER BY Value LIMIT 25000000000000000000000000000000000"
  },
  {
    "id": 1736,
    "db_id": "warehouse_1",
    "question": "For each content, what is the total value and number of boxes?",
    "answer": "SELECT SUM(Value ), COUNT(Code ) FROM (SELECT DISTINCT Contents , Value , Warehouse FROM (SELECT DISTINCT Contents , Warehouse , Code FROM (SELECT Code , SUM(Value ), COUNT(Warehouse ) AS sum_boxes FROM (SELECT DISTINCT Contents , Warehouse FROM (SELECT DISTINCT Contents , Warehouse FROM (SELECT DISTINCT "
  },
  {
    "id": 1737,
    "db_id": "warehouse_1",
    "question": "Find the total, average, and maximum capacity for different locations.",
    "answer": "SELECT SUM(Capacity ), AVG(Capacity ), MAX(Capacity ), MIN(Capacity ) FROM warehouse_1.Warehouses GROUP BY Location ORDER BY Location LIMIT 20000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1738,
    "db_id": "warehouse_1",
    "question": "For each location, what are the total, average, and maximum capacities of warehouses?",
    "answer": "SELECT SUM(Value ), AVG(Value ), MAX(Value ), MIN(Value ) FROM (SELECT DISTINCT Location , SUM(Value ) AS sum , AVG(Value ) AS avg , MIN(Value ) AS min FROM (SELECT DISTINCT Warehouse , SUM(Value ) AS sum , AVG(Value ) AS avg , MIN(Value ) AS min FROM (SELECT DISTINCT Code , SUM(Warehouse ), AVG("
  },
  {
    "id": 1739,
    "db_id": "warehouse_1",
    "question": "Find the total capacity of all warehouse locations.",
    "answer": "SELECT SUM(Capacity ) FROM warehouse_1.Warehouses WHERE Location = 'A' GROUP BY Location ORDER BY Code LIMIT 100000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1740,
    "db_id": "warehouse_1",
    "question": "What is the total capacity of all warehouses?",
    "answer": "SELECT SUM(Capacity ) FROM warehouse_1.Warehouses GROUP BY Warehouse ORDER BY Capacity LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1741,
    "db_id": "warehouse_1",
    "question": "Find the value of the most expensive boxes saved in each warehouse location.",
    "answer": "SELECT DISTINCT SUM(Value ), Location FROM (SELECT MAX(Value ), COUNT(Code ) AS total FROM (SELECT DISTINCT Boxes.Contents , Warehouses.Code FROM warehouse_1.Boxes INNER JOIN (SELECT DISTINCT Warehouse FROM (SELECT DISTINCT Location FROM warehouse_1.Boxes ORDER BY Warehouse ) AS T ORDER BY Code LIMIT 1) AS T "
  },
  {
    "id": 1742,
    "db_id": "warehouse_1",
    "question": "For each warehouse location, what is the value of the most expensive box?",
    "answer": "SELECT MAX(Value ), SUM(Value ) FROM (SELECT DISTINCT Location FROM warehouse_1.Warehouses GROUP BY Warehouse ORDER BY Value LIMIT 1) AS T ORDER BY Value LIMIT 10000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1743,
    "db_id": "warehouse_1",
    "question": "Select the warehouse codes along with the number of boxes in each warehouse.",
    "answer": "SELECT DISTINCT Code , SUM(Value ), COUNT(Location ) FROM (SELECT DISTINCT Location , COUNT(Code ) AS num FROM (SELECT DISTINCT Warehouses.Warehouse FROM (SELECT DISTINCT Warehouses.Code FROM warehouse_1.Warehouses) AS T INNER JOIN (SELECT DISTINCT Warehouses.Location , SUM(Value ) FROM (SELECT DISTINCT Warehouses"
  },
  {
    "id": 1744,
    "db_id": "warehouse_1",
    "question": "How many boxes are there with each warehouse ?",
    "answer": "SELECT SUM(Code ) FROM (SELECT DISTINCT Code , SUM(Value ) AS num FROM (SELECT DISTINCT Warehouse , SUM(Value ) AS num FROM (SELECT Warehouse FROM (SELECT DISTINCT Code , COUNT(Contents ) FROM (SELECT DISTINCT Boxes.Contents FROM (SELECT DISTINCT Boxes.Code , Code FROM (SELECT DISTINCT Code , warehouse_1.Location FROM (SELECT DISTINCT W"
  },
  {
    "id": 1745,
    "db_id": "warehouse_1",
    "question": "Find the number of different locations where Rocks are stored.",
    "answer": "SELECT COUNT(Location ), SUM(Location ) FROM warehouse_1.Boxes GROUP BY Location ORDER BY Location , Location LIMIT 10000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1746,
    "db_id": "warehouse_1",
    "question": "In how many different warehouses are Rocks stored within boxes?",
    "answer": "SELECT COUNT(Boxes.Code ) FROM warehouse_1.Warehouses AS T INNER JOIN (SELECT DISTINCT Boxes.Code , MAX(Value ) FROM (SELECT DISTINCT Warehouses.Location , SUM(Value ) AS Total FROM (SELECT DISTINCT Boxes.Location , SUM(Contents ) AS Total FROM (SELECT DISTINCT Boxes.Contents , Warehouses.Warehouse FROM ware"
  },
  {
    "id": 1747,
    "db_id": "warehouse_1",
    "question": "Select the code of each box, along with the name of the city the box is located in.",
    "answer": "SELECT DISTINCT Code , Location FROM (SELECT DISTINCT Boxes.Code , Boxes.Contents , SUM(Value ) AS total FROM (SELECT DISTINCT Warehouse , COUNT(Warehouses.Warehouse ), COUNT(Warehouses.Location ) FROM warehouse_1.Boxes GROUP BY Boxes.Code ORDER BY Code LIMIT 2) AS T ORDER BY Code LIMIT "
  },
  {
    "id": 1748,
    "db_id": "warehouse_1",
    "question": "What are the codes of all boxes, as well as the locations of the warehouses they are in?",
    "answer": "SELECT DISTINCT Code FROM (SELECT DISTINCT Warehouse , Location , SUM(Value ) AS sum_value FROM (SELECT DISTINCT Boxes.Code , Boxes.Contents FROM (SELECT DISTINCT Warehouses.Code , Boxes.Contents , SUM(Boxes.Value ), COUNT(Boxes.Value ) AS total_amount FROM (SELECT DISTINCT Boxes.Code , Location , SUM(Value )"
  },
  {
    "id": 1749,
    "db_id": "warehouse_1",
    "question": "Select the codes of all the boxes located in Chicago.",
    "answer": "SELECT DISTINCT Code FROM (SELECT DISTINCT Code FROM (SELECT DISTINCT Location FROM warehouse_1.Warehouses WHERE Warehouse = 'Chicago' ORDER BY Capacity LIMIT 1) AS T INNER JOIN warehouse_1.Boxes AS B  ON Boxes.Code = 'WL-419679923187705' GROUP BY Code ORDER BY Code LIMIT 1"
  },
  {
    "id": 1750,
    "db_id": "warehouse_1",
    "question": "What are the codes of boxes stored in warehouses in Chicago?",
    "answer": "SELECT DISTINCT Code FROM (SELECT DISTINCT Contents FROM (SELECT DISTINCT Boxes.Contents , MAX(Warehouse ) AS id FROM (SELECT DISTINCT Boxes.Contents , COUNT(Warehouse ) AS num FROM warehouse_1.Boxes GROUP BY Warehouse ORDER BY Code LIMIT 1) AS T WHERE Warehouse = 'Chicago') AS a INNER JOIN warehouse_1.Wareh"
  },
  {
    "id": 1751,
    "db_id": "warehouse_1",
    "question": "Find the number of boxes saved in each warehouse.",
    "answer": "SELECT SUM(Warehouse ), COUNT(Code ) FROM warehouse_1.Warehouses GROUP BY Warehouse ORDER BY Code LIMIT 10000000000000000000"
  },
  {
    "id": 1752,
    "db_id": "warehouse_1",
    "question": "How many boxes are stored in each warehouse?",
    "answer": "SELECT SUM(Capacity ) FROM warehouse_1.Warehouses GROUP BY Warehouses.Location ORDER BY Capacity LIMIT 100000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1753,
    "db_id": "warehouse_1",
    "question": "Find the number of distinct types of contents in each warehouse.",
    "answer": "SELECT DISTINCT COUNT(Contents ), SUM(Contents ) FROM warehouse_1.Warehouses GROUP BY Code ORDER BY Contents , Warehouse LIMIT 20000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1754,
    "db_id": "warehouse_1",
    "question": "How many different types of contents are stored in each warehouse?",
    "answer": "SELECT COUNT(Contents ), SUM(Contents ) FROM (SELECT DISTINCT Contents FROM warehouse_1.Warehouses GROUP BY Contents ORDER BY Contents LIMIT 1) AS T INNER JOIN (SELECT DISTINCT Contents , Warehouse , SUM(Value ) FROM warehouse_1.Boxes GROUP BY Contents ORDER BY Warehouse , Value LIMIT 1) AS T  ON Contents =  'Contents'"
  },
  {
    "id": 1755,
    "db_id": "warehouse_1",
    "question": "Select the codes of all warehouses that are above capacity.",
    "answer": "SELECT DISTINCT Code FROM warehouse_1.Warehouses GROUP BY Code ORDER BY Value LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1756,
    "db_id": "warehouse_1",
    "question": "What are the codes of warehouses that have more boxes than their capacity?",
    "answer": "SELECT DISTINCT Code FROM warehouse_1.Warehouses GROUP BY Code ORDER BY Location LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1757,
    "db_id": "warehouse_1",
    "question": "Find the total values of boxes that are not in the warehouses located at Chicago.",
    "answer": "SELECT SUM(Value ) FROM (SELECT DISTINCT Contents , Warehouse FROM warehouse_1.Warehouses GROUP BY Warehouse ORDER BY Value  DESC LIMIT 1) AS T INNER JOIN (SELECT DISTINCT Warehouse FROM warehouse_1.Warehouses WHERE Location = 'Chicago' GROUP BY Warehouse ORDER BY Value LIMIT 1) AS B  ON Boxes.Code"
  },
  {
    "id": 1758,
    "db_id": "warehouse_1",
    "question": "What is the total value of boxes contained in any location but Chicago?",
    "answer": "SELECT SUM(Value ) FROM (SELECT DISTINCT SUM(Value ), Location FROM (SELECT Code , Location , Warehouse FROM (SELECT DISTINCT Location , SUM(Value ), MAX(Code ) FROM (SELECT Code , Location , Warehouse FROM (SELECT DISTINCT Location , Warehouses.Value FROM (SELECT DISTINCT Location , Warehouse FROM (SELECT DISTINCT Code ,"
  },
  {
    "id": 1759,
    "db_id": "university_rank",
    "question": "Show name, city, and state for all universities in  alphabetical order of university name.",
    "answer": "SELECT DISTINCT Total FROM university_rank.university ORDER BY University_Name , City , State LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1760,
    "db_id": "university_rank",
    "question": "What are the names, cities, and states of all universities in alphabetical order (by name of the university).",
    "answer": "SELECT DISTINCT Total FROM university_rank.university ORDER BY Total LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1761,
    "db_id": "university_rank",
    "question": "How many universities are in Illinois or Ohio?",
    "answer": "SELECT COUNT(Team_Name ) FROM university_rank.university WHERE Team_Name = 'Illinois' ORDER BY Team_Name LIMIT 1000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1762,
    "db_id": "university_rank",
    "question": "What is the total number of universities located in Illinois or Ohio?",
    "answer": "SELECT COUNT(Team_Name ) FROM university_rank.university WHERE Team_Name = 'Illinois' ORDER BY Team_Name LIMIT 150936782406911974415547916751936362002818971511929873332636"
  },
  {
    "id": 1763,
    "db_id": "university_rank",
    "question": "What is the maximum, average, and minimum enrollment for universities?",
    "answer": "SELECT MAX(Team_Name ), AVG(Team_Name ) AS sum , MIN(Team_Name ) FROM university_rank.university ORDER BY Team_Name LIMIT 10000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1764,
    "db_id": "university_rank",
    "question": "What is the maximum, average, and minimum enrollment for all universities?",
    "answer": "SELECT Team_Name FROM university_rank.university ORDER BY Team_Name LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1765,
    "db_id": "university_rank",
    "question": "List team name for all universities with enrollments above the average.",
    "answer": "SELECT DISTINCT Total FROM university_rank.university AS U INNER JOIN (SELECT DISTINCT Total FROM university_rank.university WHERE Enrollment > Affiliation INNER JOIN university_rank.university AS t  ON University_ID = Total ORDER BY Total , Enrollment ) AS T  ON University_ID = Total LIMIT "
  },
  {
    "id": 1766,
    "db_id": "university_rank",
    "question": "What are the names of all teams from universities that have more people enrolled than average ?",
    "answer": "SELECT DISTINCT Total FROM university_rank.university AS U INNER JOIN (SELECT COUNT(Total ) AS num , SUM(Total ) AS avg FROM university_rank.university WHERE State = 'state.city' GROUP BY Total ORDER BY Total LIMIT 1) AS T  ON Total = University_ID LIMIT 20000"
  },
  {
    "id": 1767,
    "db_id": "university_rank",
    "question": "Show all home conferences.",
    "answer": "SELECT Team_Name FROM (SELECT DISTINCT Team_Name , Home_Conference FROM university_rank.university ORDER BY Rank LIMIT 1) AS t INNER JOIN university_rank.university AS u  ON University_ID = Team_Name GROUP BY Team_Name ORDER BY Team_Name LIMIT 1000000000000000000"
  },
  {
    "id": 1768,
    "db_id": "university_rank",
    "question": "What are the different home conferences from the university table?",
    "answer": "SELECT Team_Name FROM university_rank.university AS u INNER JOIN (SELECT DISTINCT Team_Name FROM university_rank.university WHERE Home_Conference = 'ATLANTA' ORDER BY Rank LIMIT 1) AS T  ON Team_Name = Total GROUP BY university_rank.university.University_ID ORDER BY Team_Name LIMIT 1"
  },
  {
    "id": 1769,
    "db_id": "university_rank",
    "question": "Show all home conferences and the number of universities in each conference.",
    "answer": "SELECT DISTINCT Total FROM (SELECT Total FROM university_rank.university WHERE Home_Conference = 'home' ORDER BY Total LIMIT 1) AS T GROUP BY Total ORDER BY Total LIMIT 10000000000000000000000000000000000000000000"
  },
  {
    "id": 1770,
    "db_id": "university_rank",
    "question": "For every home conference, how many universities attended that conference?",
    "answer": "SELECT COUNT(Team_Name ) FROM university_rank.university AS T INNER JOIN (SELECT DISTINCT Team_Name FROM university_rank.university AS U WHERE Enrollment > 0 GROUP BY Team_Name ORDER BY Rank LIMIT 1) AS t  ON Team_Name = Total GROUP BY Total ORDER BY Total LIMIT 3000000000000"
  },
  {
    "id": 1771,
    "db_id": "university_rank",
    "question": "Which state has most number of universities?",
    "answer": "SELECT DISTINCT Total FROM university_rank.university ORDER BY Major_ID LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1772,
    "db_id": "university_rank",
    "question": "What is the state with the most universities?",
    "answer": "SELECT DISTINCT Total FROM university_rank.university ORDER BY Rank LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1773,
    "db_id": "university_rank",
    "question": "Show all home conferences with average enrollment of universities above 2000.",
    "answer": "SELECT DISTINCT Total FROM university_rank.university AS T ORDER BY Total , Rank LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1774,
    "db_id": "university_rank",
    "question": "What are the home conferences that have an average university enrollment above 2000?",
    "answer": "SELECT SUM(Total ), Total FROM university_rank.university WHERE Total > (SELECT SUM(Total ) FROM university_rank.university ORDER BY Total LIMIT 1) GROUP BY University_ID ORDER BY Total , Major_ID , University_Name LIMIT 1500000000000000000000000"
  },
  {
    "id": 1775,
    "db_id": "university_rank",
    "question": "Which conference has the least number of total enrollment?",
    "answer": "SELECT COUNT(Total ), Total FROM (SELECT Total , SUM(Total ) AS num FROM university_rank.university WHERE State = 'beijing' GROUP BY University_ID ORDER BY Total LIMIT 1) AS t LIMIT 1000000000000000000000000000000000000000000"
  },
  {
    "id": 1776,
    "db_id": "university_rank",
    "question": "What are the home conferences with the fewest number of people enrolled?",
    "answer": "SELECT DISTINCT Total FROM university_rank.university WHERE Home_Conference = (SELECT Total FROM university_rank.university ORDER BY Enrollment LIMIT 1) LIMIT 1000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1777,
    "db_id": "university_rank",
    "question": "List all major name and major code in the order of their major code",
    "answer": "SELECT DISTINCT Total FROM (SELECT Total , Team_Name FROM university_rank.major ORDER BY Team_Name LIMIT 1) AS R WHERE Total = 'Major' LIMIT 1234567890778968647874001359940270927428678757"
  },
  {
    "id": 1778,
    "db_id": "university_rank",
    "question": "What are the names and codes for all majors ordered by their code?",
    "answer": "SELECT DISTINCT Total FROM (SELECT DISTINCT Total , Rank FROM (SELECT DISTINCT Major_Code , Major_Name FROM university_rank.university AS T INNER JOIN (SELECT Total FROM university_rank.major ORDER BY Total ) AS T  ON Total = Total LIMIT 1) AS R WHERE Rank < 20 GROUP BY Total ORDER BY Rank"
  },
  {
    "id": 1779,
    "db_id": "university_rank",
    "question": "Show all majors and major ranks for the university with name Augustana College.",
    "answer": "SELECT Team_Name FROM university_rank.university AS T WHERE University_ID = '843791' ORDER BY Rank LIMIT 100000000265582100000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1780,
    "db_id": "university_rank",
    "question": "What are the ranks and names of all majors at Augustana College?",
    "answer": "SELECT DISTINCT Total FROM (SELECT Total FROM university_rank.university AS u INNER JOIN (SELECT Total FROM university_rank.major AS M INNER JOIN (SELECT Total FROM university_rank.major AS M INNER JOIN (SELECT Total , SUM(Total ) AS sum_from FROM (SELECT Total , SUM(Total ) AS sum_to"
  },
  {
    "id": 1781,
    "db_id": "university_rank",
    "question": "What is the name, city, state of the university with a rank 1 on Accounting major?",
    "answer": "SELECT DISTINCT Team_Name FROM (SELECT Team_Name FROM university_rank.university AS T INNER JOIN (SELECT Team_Name , Rank FROM (SELECT DISTINCT Major_ID , Rank FROM university_rank.major WHERE Major_Code = 'ACCTG' ORDER BY Rank ) AS T ORDER BY Rank LIMIT 1) AS T  ON Team_Name = Team_Name GROUP BY Team_"
  },
  {
    "id": 1782,
    "db_id": "university_rank",
    "question": "What is the name, city, and state of the university with number 1 ranked Accounting major?",
    "answer": "SELECT DISTINCT Total FROM university_rank.university AS T ORDER BY Rank LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1783,
    "db_id": "university_rank",
    "question": "What is the name of the university that has most number of majors with rank 1?",
    "answer": "SELECT DISTINCT Total FROM university_rank.university AS U INNER JOIN (SELECT Team_Name , COUNT(Team_Name ) AS num FROM university_rank.university WHERE Rank = '1' GROUP BY Team_Name ORDER BY university_rank.university.Rank LIMIT 1) AS u  ON University_ID = university_rank.univer"
  },
  {
    "id": 1784,
    "db_id": "university_rank",
    "question": "What is the name of the university with the most majors ranked number 1?",
    "answer": "SELECT DISTINCT Total FROM (SELECT Total , COUNT(Total ) AS rank FROM (SELECT * FROM (SELECT Rank , COUNT(Total ) AS Totals_rank FROM university_rank.university WHERE State = 'CA' GROUP BY Total ORDER BY Total LIMIT 1)) AS T ORDER BY Total LIMIT 1) AS T ORDER BY Total LIMIT 1234567890"
  },
  {
    "id": 1785,
    "db_id": "university_rank",
    "question": "Show all university names without a major with rank 1?",
    "answer": "SELECT Team_Name FROM university_rank.university WHERE Rank = '2' LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1786,
    "db_id": "university_rank",
    "question": "What are the names of all universities without any majors ranked number 1?",
    "answer": "SELECT Team_Name FROM university_rank.university AS T INNER JOIN university_rank.major AS M  ON Total  =  Major_ID GROUP BY Team_Name ORDER BY Rank LIMIT 1500000000000000000000000000000000000000000000000"
  },
  {
    "id": 1787,
    "db_id": "university_rank",
    "question": "Show all university names with both major Accounting and major Urban Education.",
    "answer": "SELECT Team_Name FROM university_rank.university INNER JOIN (SELECT Team_Name FROM university_rank.university WHERE Major_Code = 'ACCOUNTING' GROUP BY Team_Name ORDER BY Rank LIMIT 1) AS T  ON Team_Name = Total   GROUP BY Team_Name ORDER BY Rank LIMIT 25000000000000000000"
  },
  {
    "id": 1788,
    "db_id": "university_rank",
    "question": "What are the names of all universities that have both Accounting and Urban Education majors?",
    "answer": "SELECT Team_Name FROM university_rank.university WHERE Major_Code = 'A' GROUP BY Team_Name ORDER BY Team_Name LIMIT 100000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1789,
    "db_id": "university_rank",
    "question": "What is the name and overall ranking of universities in Wisconsin state?",
    "answer": "SELECT DISTINCT Total FROM university_rank.university WHERE State = 'Wisconsin' ORDER BY Rank LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1790,
    "db_id": "university_rank",
    "question": "What is the name and rank of every university in Wisconsin?",
    "answer": "SELECT DISTINCT Team_Name FROM university_rank.university INNER JOIN (SELECT Team_Name FROM university_rank.university WHERE State = 'WI' GROUP BY Team_Name ORDER BY Rank LIMIT 1) AS u  ON Team_Name = 'Wisconsin University' LIMIT 1000000000000000000000000000"
  },
  {
    "id": 1791,
    "db_id": "university_rank",
    "question": "What is the university name with highest research point?",
    "answer": "SELECT DISTINCT Team_Name FROM (SELECT Team_Name FROM university_rank.university AS T ORDER BY Research_point LIMIT 1) AS T GROUP BY Team_Name ORDER BY Total LIMIT 1"
  },
  {
    "id": 1792,
    "db_id": "university_rank",
    "question": "What is the name of the university with the most research points?",
    "answer": "SELECT DISTINCT Team_Name FROM (SELECT Team_Name FROM university_rank.university AS T ORDER BY Total LIMIT 1) AS T ORDER BY Total LIMIT 20170523049185700000000000000000000000000000000000000000000"
  },
  {
    "id": 1793,
    "db_id": "university_rank",
    "question": "List all university names in ascending order of their reputation points.",
    "answer": "SELECT DISTINCT Total FROM university_rank.university ORDER BY Total LIMIT 1 OFFSET 1000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1794,
    "db_id": "university_rank",
    "question": "What are the names of all universities in ascending order of reputation points?",
    "answer": "SELECT DISTINCT Total FROM university_rank.university ORDER BY Total LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1795,
    "db_id": "university_rank",
    "question": "What is the name of university with major Accounting ranked 3 or above?",
    "answer": "SELECT DISTINCT Team_Name FROM (SELECT Team_Name FROM university_rank.university AS T WHERE Major_ID = 'ACCOUNTING' ORDER BY Rank LIMIT 1) AS T ORDER BY Rank LIMIT 2500000000000000000000000000000000000000000000000"
  },
  {
    "id": 1796,
    "db_id": "university_rank",
    "question": "What are the names of the university with an Accounting major ranked 3 or higher?",
    "answer": "SELECT DISTINCT Team_Name FROM (SELECT Team_Name , SUM(Total ) AS Total , Rank FROM university_rank.university WHERE Major_Code = 'ACA' GROUP BY Team_Name ORDER BY Total LIMIT 3) AS T ORDER BY Total LIMIT 10 OFFSET 256597633462192860265430000"
  },
  {
    "id": 1797,
    "db_id": "university_rank",
    "question": "What is the total enrollment of universities with a overall rank 5 or below?",
    "answer": "SELECT SUM(Total ), SUM(Total ) AS total FROM university_rank.university WHERE Rank = '5' GROUP BY Total ORDER BY Total LIMIT 10000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1798,
    "db_id": "university_rank",
    "question": "What is the total number of students enrolled in an university with a rank of 5 or below?",
    "answer": "SELECT SUM(Total ), COUNT(Total ) FROM university_rank.university WHERE Total < 5 GROUP BY Total ORDER BY Total LIMIT 10 OFFSET 10000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1799,
    "db_id": "university_rank",
    "question": "Find the name and Citation point of the universities whose reputation points are top 3 and above.",
    "answer": "SELECT DISTINCT Total FROM university_rank.university AS U INNER JOIN (SELECT DISTINCT Total , SUM(Total ) AS Top_Points , Rank FROM university_rank.university WHERE Total > 3 ORDER BY Rank LIMIT 2) AS T  ON University_ID = Total ORDER BY Total LIMIT 100000000000"
  },
  {
    "id": 1800,
    "db_id": "university_rank",
    "question": "What is the name and citation point of the unversities with the top 3 reputation points?",
    "answer": "SELECT Team_Name FROM university_rank.university WHERE Rank = 1 GROUP BY Team_Name ORDER BY Total LIMIT 3"
  },
  {
    "id": 1801,
    "db_id": "university_rank",
    "question": "which states do have more than two universities with enrollment smaller than 3000?",
    "answer": "SELECT DISTINCT Total FROM university_rank.university AS T INNER JOIN (SELECT DISTINCT Total FROM university_rank.university WHERE Enrollment < 3000 GROUP BY State ORDER BY Total LIMIT 2) AS T  ON Total = 'state' GROUP BY Total LIMIT 1688473980566045684060"
  },
  {
    "id": 1802,
    "db_id": "university_rank",
    "question": "What are the states that have more than 2 universities with an enrollment less than 3000?",
    "answer": "SELECT DISTINCT Total FROM university_rank.university AS t INNER JOIN (SELECT DISTINCT State FROM university_rank.university WHERE Enrollment < 3000) AS T  ON Total = 'TTA' GROUP BY Total ORDER BY Total LIMIT 26845917904177519739000000000000"
  },
  {
    "id": 1803,
    "db_id": "movie_2",
    "question": "Find the titles of movies that don\u2019t have any rating.",
    "answer": "SELECT Title FROM movie_2.Movies WHERE Rating = 0 LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1804,
    "db_id": "movie_2",
    "question": "What are the names of movies that do not have any ratings?",
    "answer": "SELECT DISTINCT Title FROM movie_2.Movies AS M INNER JOIN movie_2.Movies AS T  ON Movies.Code = Title LIMIT 1000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1805,
    "db_id": "movie_2",
    "question": "Find the names of movies whose rating is \u2018G\u2019.",
    "answer": "SELECT Title FROM movie_2.Movies WHERE Rating = 'R' GROUP BY Title ORDER BY Rating LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1806,
    "db_id": "movie_2",
    "question": "What are names of movies that have a 'G' ratings?",
    "answer": "SELECT Title FROM movie_2.Movies WHERE Rating = 'PG' GROUP BY Title ORDER BY Rating LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1807,
    "db_id": "movie_2",
    "question": "Find the title of the movie that is played in the Odeon theater.",
    "answer": "SELECT Title FROM movie_2.Movies WHERE Code = 32 ORDER BY Rating LIMIT 1;"
  },
  {
    "id": 1808,
    "db_id": "movie_2",
    "question": "What are the movie titles for ones that are played in the Odeon theater?",
    "answer": "SELECT Title FROM movie_2.Movies WHERE Movie = 'Odeon Theater' ORDER BY Rating LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1809,
    "db_id": "movie_2",
    "question": "Find the names of movies that are played in any theater and the name of the corresponding theater.",
    "answer": "SELECT Title FROM movie_2.Movies ORDER BY Movie LIMIT 1;"
  },
  {
    "id": 1810,
    "db_id": "movie_2",
    "question": "What are the names of the movies that are played in any theater and the name of the corresponding theater?",
    "answer": "SELECT Title FROM movie_2.MovieTheaters AS T , movie_2.Movies AS M , movie_2.Movies AS M WHERE Movies.Code = (SELECT Title FROM movie_2.MovieTheaters AS T , movie_2.Movies ORDER BY Movies.Rating LIMIT 1) INNER JOIN movie_2.Movies AS M  ON Title = M"
  },
  {
    "id": 1811,
    "db_id": "movie_2",
    "question": "Find the number of movies whose rating is \u2018G\u2019.",
    "answer": "SELECT COUNT(*) FROM (SELECT Rating FROM movie_2.Movies WHERE Code = 537 ORDER BY Rating LIMIT 1) AS T INNER JOIN movie_2.Movies AS M  ON Title = Movies.Title GROUP BY Title ORDER BY Title LIMIT 1000000000000000000000000000000"
  },
  {
    "id": 1812,
    "db_id": "movie_2",
    "question": "How many movies had a 'G' rating?",
    "answer": "SELECT COUNT(Title ) FROM movie_2.Movies AS T INNER JOIN movie_2.Movies AS M  ON Title = Movie ORDER BY Title , Rating LIMIT 100000000000000000000000000000000000000000000000"
  },
  {
    "id": 1813,
    "db_id": "movie_2",
    "question": "How many movies are playing across all theaters?",
    "answer": "SELECT COUNT(*) FROM movie_2.Movies WHERE Code = 196 GROUP BY Title ORDER BY Title LIMIT 100000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1814,
    "db_id": "movie_2",
    "question": "How many movies are playing in theaters?",
    "answer": "SELECT COUNT(*) FROM movie_2.Movies WHERE Rating = '12' ORDER BY Title LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1815,
    "db_id": "movie_2",
    "question": "How many distinct movies are on in theaters?",
    "answer": "SELECT COUNT(Title ) FROM movie_2.Movies WHERE Name = 'Moscow Underground Tunnel' GROUP BY Title ORDER BY Title LIMIT 100000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1816,
    "db_id": "movie_2",
    "question": "How many different movies are playing?",
    "answer": "SELECT COUNT(Title ) FROM movie_2.Movies AS T INNER JOIN movie_2.Movies AS M  ON Title = Movies.Title GROUP BY Title ORDER BY Title LIMIT 100000000000000000000000000000000000000"
  },
  {
    "id": 1817,
    "db_id": "movie_2",
    "question": "How many distinct movie theaters are there?",
    "answer": "SELECT COUNT(Title ) FROM movie_2.Movies AS T INNER JOIN movie_2.Movies AS T  ON Title = Title GROUP BY Title ORDER BY Movies.Name LIMIT 10000000000000000000000000000000000000000"
  },
  {
    "id": 1818,
    "db_id": "movie_2",
    "question": "How many different movie theaters exist?",
    "answer": "SELECT COUNT(Title ) FROM movie_2.Movies AS T INNER JOIN movie_2.Movies AS M  ON Title = Movies.Name GROUP BY Title ORDER BY Rating , Name LIMIT 10000000000000000000000000000000000000000"
  },
  {
    "id": 1819,
    "db_id": "movie_2",
    "question": "Find the rating of the movie whose name includes the word \u2018Citizen\u2019.",
    "answer": "SELECT SUM(Rating ) FROM movie_2.Movies WHERE Title = 'Citizen' GROUP BY Rating ORDER BY Rating LIMIT 1000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1820,
    "db_id": "movie_2",
    "question": "What is the rating of the movie what has a name including a word like 'Citizen'?",
    "answer": "SELECT SUM(Title ) FROM movie_2.Movies INNER JOIN movie_2.Movies ON Movie = Title GROUP BY Title ORDER BY Title , movie_2.Name LIMIT 10000000000000000000000000000000000000000000"
  },
  {
    "id": 1821,
    "db_id": "movie_2",
    "question": "Find the name of the cinemas that are playing movies with either rating \u2018G\u2019 or rating \u2018PG\u2019.",
    "answer": "SELECT Title FROM movie_2.Movies WHERE Rating = 'r' ORDER BY Title  ASCLIMIT 16078335824544693128947201362045121885259068981671611575888726555"
  },
  {
    "id": 1822,
    "db_id": "movie_2",
    "question": "What are the names of the movie theaters that are playing 'G' or 'PG' rated movies?",
    "answer": "SELECT DISTINCT Title FROM movie_2.MovieTheaters AS T INNER JOIN movie_2.MovieTheaters AS T  ON Title = Title LIMIT 10 OFFSET 34754386168149461920588425975464122333646"
  },
  {
    "id": 1823,
    "db_id": "movie_2",
    "question": "Find the name of the movies that are played in either cinema Odeon or Imperial.",
    "answer": "SELECT Title FROM movie_2.Movies WHERE Rating = (SELECT DISTINCT MIN(Rating ) FROM movie_2.Movies AS T INNER JOIN movie_2.MovieTheaters AS T  ON Title = Title GROUP BY Title ORDER BY Title LIMIT 1)\nORDER BY Code  DESC, Title , Rating LIMIT 1"
  },
  {
    "id": 1824,
    "db_id": "movie_2",
    "question": "What are the titles of all the movies that played at the Odeon or Imperial theater?",
    "answer": "SELECT Title FROM movie_2.Movies WHERE Movie = 'Odona' GROUP BY Title ORDER BY Title LIMIT 100000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1825,
    "db_id": "movie_2",
    "question": "Find the name of the movie that is on in both Odeon and Imperial theaters.",
    "answer": "SELECT Title FROM movie_2.Movies WHERE Rating = (SELECT SUM(Rating ) FROM movie_2.Movies WHERE Name = 'Odeon)' GROUP BY Title ORDER BY Rating , Rating LIMIT 100000000000000000000)"
  },
  {
    "id": 1826,
    "db_id": "movie_2",
    "question": "What movie is playing at both the Odeon and Imperial theater?",
    "answer": "SELECT Title FROM movie_2.Movies WHERE Movie = 'Odona' INNER JOIN movie_2.Movies AS T  ON Title = 'movie_official_title_name' GROUP BY Title ORDER BY Title LIMIT 10000000000000000000000000000000000000"
  },
  {
    "id": 1827,
    "db_id": "movie_2",
    "question": "Find the name of all movies that are not played in Odeon theater.",
    "answer": "SELECT Title FROM movie_2.Movies WHERE Rating = (SELECT MIN(Rating ) FROM movie_2.Movies WHERE Code = 61253094) GROUP BY Title ORDER BY Movie LIMIT 1;"
  },
  {
    "id": 1828,
    "db_id": "movie_2",
    "question": "What are the names of every movie that is not playing at the Odeon theater?",
    "answer": "SELECT DISTINCT Title FROM movie_2.Movies AS T WHERE Title = 'not-playing' ORDER BY Title LIMIT 1000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1829,
    "db_id": "movie_2",
    "question": "List in alphabetical order the titles of all movies.",
    "answer": "SELECT Title FROM movie_2.Movies ORDER BY Rating LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1830,
    "db_id": "movie_2",
    "question": "What are the movie names in alphabetical order?",
    "answer": "SELECT Title FROM movie_2.Movies ORDER BY Title LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1831,
    "db_id": "movie_2",
    "question": "Find the titles of all movies sorted by their ratings.",
    "answer": "SELECT DISTINCT Title FROM movie_2.Movies ORDER BY Rating LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1832,
    "db_id": "movie_2",
    "question": "What are the movie names sorted by rating?",
    "answer": "SELECT Title FROM movie_2.Movies ORDER BY Rating LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1833,
    "db_id": "movie_2",
    "question": "Find the name of the theater that is playing the most number of movies.",
    "answer": "SELECT Title FROM movie_2.MovieTheaters INNER JOIN movie_2.Movies ON movie_2.MovieTheaters.Code = movie_2.Movies.Code ORDER BY Movies.Rating LIMIT 10 OFFSET 11111111946724581699316587342636"
  },
  {
    "id": 1834,
    "db_id": "movie_2",
    "question": "What is the name of the theater playing the most movies?",
    "answer": "SELECT Title FROM movie_2.Movies GROUP BY Rating ORDER BY Title LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1835,
    "db_id": "movie_2",
    "question": "Find the name of the movie that is played in the most number of theaters.",
    "answer": "SELECT Title FROM movie_2.MovieTheaters GROUP BY Movie ORDER BY Movies.Movie LIMIT 10000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1836,
    "db_id": "movie_2",
    "question": "What is the name of the film playing at the most number of theaters?",
    "answer": "SELECT Title FROM movie_2.Movies GROUP BY Title ORDER BY Rating LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1837,
    "db_id": "movie_2",
    "question": "Find the number of movies in each rating.",
    "answer": "SELECT SUM(Rating ) FROM movie_2.Movies GROUP BY Rating ORDER BY Rating , Rating LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1838,
    "db_id": "movie_2",
    "question": "How many movies exist for each rating?",
    "answer": "SELECT SUM(Rating ) FROM movie_2.Movies GROUP BY Rating ORDER BY Title LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1839,
    "db_id": "movie_2",
    "question": "Find the number of movies whose rating is not null.",
    "answer": "SELECT COUNT(*) FROM movie_2.Movies WHERE Rating = 'null' GROUP BY Movie ORDER BY Rating LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1840,
    "db_id": "movie_2",
    "question": "How many movies have a rating that is not null?",
    "answer": "SELECT COUNT(movie_2.Title ) FROM movie_2.Movies WHERE Movies.Rating = 'none' LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1841,
    "db_id": "movie_2",
    "question": "Find the name of theaters that has at least one movie playing.",
    "answer": "SELECT DISTINCT Title FROM movie_2.MovieTheaters AS T INNER JOIN movie_2.MovieTheaters AS T  ON Title = Title ORDER BY Title LIMIT 1000000000000000000000000000000000000000"
  },
  {
    "id": 1842,
    "db_id": "movie_2",
    "question": "What are the names of every theater with at least one movie playing?",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM movie_2.Movies ORDER BY Movie LIMIT 1) AS T WHERE Title = 'unknown' GROUP BY Title ORDER BY Title LIMIT 1000000000000000000000000000000000000000000"
  },
  {
    "id": 1843,
    "db_id": "movie_2",
    "question": "Select the name of all movie theaters that are not currently showing a movie.",
    "answer": "SELECT DISTINCT Title FROM movie_2.Movies AS T WHERE Title = '1' LIMIT 100000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1844,
    "db_id": "movie_2",
    "question": "What are the names of all cinemas not showing any movies?",
    "answer": "SELECT DISTINCT Title FROM movie_2.Movies AS T WHERE Title = 0 LIMIT 10000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1845,
    "db_id": "movie_2",
    "question": "Find the name of the movie theaters that are playing the movies whose rating is \u2018G\u2019.",
    "answer": "SELECT DISTINCT Title FROM movie_2.MovieTheaters WHERE Movie = 'Rise of the Planet of the Apes' GROUP BY Title ORDER BY Rating LIMIT 10000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1846,
    "db_id": "movie_2",
    "question": "What are the names of theaters playing 'G' rated movies?",
    "answer": "SELECT DISTINCT Title FROM movie_2.Movies AS M INNER JOIN movie_2.MovieTheaters AS M  ON Movie <movie_2.Name ORDER BY Movie LIMIT 10000000000000000000000000000000000000000000"
  },
  {
    "id": 1847,
    "db_id": "movie_2",
    "question": "Select the title of all movies.",
    "answer": "SELECT Title FROM movie_2.Movies GROUP BY Title ORDER BY Title LIMIT 1;"
  },
  {
    "id": 1848,
    "db_id": "movie_2",
    "question": "What are all of the movie names?",
    "answer": "SELECT DISTINCT Title FROM movie_2.Movies ORDER BY Rating LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1849,
    "db_id": "movie_2",
    "question": "Show all the distinct ratings in the database.",
    "answer": "SELECT DISTINCT Title FROM movie_2.Movies AS T ORDER BY Title LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1850,
    "db_id": "movie_2",
    "question": "What are the different movie ratings?",
    "answer": "SELECT SUM(Rating ) FROM movie_2.Movies WHERE Rating = 50 GROUP BY Rating ORDER BY Rating LIMIT 10000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1851,
    "db_id": "movie_2",
    "question": "Show all information of all unrated movies.",
    "answer": "SELECT DISTINCT Title FROM movie_2.Movies AS M INNER JOIN movie_2.Movies AS M  ON Movies.Code = Movies.Name ORDER BY Movies.Rating LIMIT 100000000000000000000000000000000000000000000"
  },
  {
    "id": 1852,
    "db_id": "movie_2",
    "question": "What is all the information about the unrated movies?",
    "answer": "SELECT DISTINCT Title , Title FROM movie_2.Movies WHERE Rating = 'R' GROUP BY Title ORDER BY Title LIMIT 100000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1853,
    "db_id": "movie_2",
    "question": "Show the titles of movies not currently being shown in any theaters.",
    "answer": "SELECT DISTINCT Title FROM movie_2.Movies AS T WHERE Title = '' ORDER BY Title LIMIT 100000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1854,
    "db_id": "movie_2",
    "question": "What are the names of the movies not being shown in any theaters?",
    "answer": "SELECT DISTINCT Title FROM movie_2.Movies AS T WHERE Title = '' GROUP BY Title ORDER BY Title LIMIT 100000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1855,
    "db_id": "planet_1",
    "question": "Who receieved the heaviest package?",
    "answer": "SELECT DISTINCT Date FROM (SELECT MAX(Date ) AS T1 , MIN(Level ), SUM(Weight ) AS total FROM (SELECT ShipmentID , EmployeeID , SUM(Employee.Salary ) AS weight , SUM(Shipment.Weight ) AS total FROM (SELECT DISTINCT Date , Manager , ShipmentID FROM (SELECT DISTINCT Manager FROM (SELECT MIN(PlanetID ), Date FROM (SELECT DISTINCT"
  },
  {
    "id": 1856,
    "db_id": "planet_1",
    "question": "What is the name of the client who received the heaviest package?",
    "answer": "SELECT DISTINCT Client.Name FROM (SELECT MAX(ShipmentID ) AS T1 , PackageNumber FROM (SELECT Contents , SUM(Weight ) AS Total FROM (SELECT Contents , SUM(Weight ) AS Total FROM (SELECT ShipmentID , Weight FROM (SELECT DISTINCT AccountNumber , SUM(PlanetID ) AS Total FROM (SELECT DISTINCT Client.Name FROM (SELECT Contents , SUM(Weight ) AS Total FROM (SELECT D"
  },
  {
    "id": 1857,
    "db_id": "planet_1",
    "question": "What is the total weight of all the packages that customer Leo Wong sent?",
    "answer": "SELECT SUM(Weight ) FROM (SELECT DISTINCT Date , SUM(Weight ), SUM(Contents ) AS Total FROM (SELECT ShipmentID , Contents , Date , PlanetID FROM (SELECT EmployeeID , COUNT(ShipmentID ), Date , Name , Remarks FROM (SELECT DISTINCT ShipmentID , Name , Remarks FROM (SELECT DISTINCT PlanetID , Contents , Date , Level FROM (SELECT DISTINCT EmployeeID , SUM"
  },
  {
    "id": 1858,
    "db_id": "planet_1",
    "question": "What is the total weight for all packages that Leo Wong sent?",
    "answer": "SELECT SUM(Weight ) FROM (SELECT DISTINCT ShipmentID , SUM(Weight ) AS total FROM (SELECT DISTINCT Contents , Recipient FROM (SELECT DISTINCT Name FROM (SELECT DISTINCT Contents , Level FROM planet_1.Shipment) AS T ORDER BY Remarks LIMIT 1)) AS C WHERE AccountNumber = 239721840262536000"
  },
  {
    "id": 1859,
    "db_id": "planet_1",
    "question": "What is the position of Amy Wong?",
    "answer": "SELECT DISTINCT Position FROM (SELECT Name , Recipient FROM (SELECT DISTINCT Employee.Position FROM (SELECT DISTINCT Employee.Name , Employee.Remarks FROM (SELECT DISTINCT Employee.Position , Employee.Remarks FROM planet_1.Employee AS T INNER JOIN (SELECT DISTINCT Position FROM (SELECT DISTINCT Date , EmployeeID FROM (SELECT DISTINCT Date"
  },
  {
    "id": 1860,
    "db_id": "planet_1",
    "question": "What position does Amy Wong have?",
    "answer": "SELECT DISTINCT Position FROM (SELECT DISTINCT Name FROM (SELECT Position FROM planet_1.Employee AS E INNER JOIN (SELECT DISTINCT EmployeeID FROM (SELECT DISTINCT MIN(Position ) FROM planet_1.Employee AS e WHERE Name = 'Amy Wong' ORDER BY Date LIMIT 1)) AS T  ON EXISTS (SELECT DISTINCT Position FROM planet_1.Planet AS p WHERE Name ="
  },
  {
    "id": 1861,
    "db_id": "planet_1",
    "question": "What is Turanga Leela's salary and position?",
    "answer": "SELECT SUM(Employee.Salary ) AS salary , Employee.Position FROM (SELECT DISTINCT Employee.Name , Employee.Salary FROM (SELECT DISTINCT Employee.Name , Employee.Remarks FROM planet_1.Shipment GROUP BY Employee.EmployeeID ORDER BY Date , Employee.Position LIMIT 1) AS T WHERE Name = 'Turanga Leela' ORDER BY Salary"
  },
  {
    "id": 1862,
    "db_id": "planet_1",
    "question": "What is the salary and position of the employee named Turanga Leela?",
    "answer": "SELECT DISTINCT Employee.Name , Employee.Position FROM (SELECT DISTINCT Employee.Name , SUM(Remarks ) AS total FROM (SELECT DISTINCT Employee.Name , SUM(Remarks ) AS total FROM planet_1.Employee AS T INNER JOIN (SELECT DISTINCT Remarks FROM planet_1.Employee GROUP BY Remarks ORDER BY Remarks LIMIT 20) AS T  ON Position = 'Manager'"
  },
  {
    "id": 1863,
    "db_id": "planet_1",
    "question": "What is the average salary of all intern jobs?",
    "answer": "SELECT AVG(Salary ) FROM (SELECT SUM(Salary ) AS sum_salary FROM (SELECT EmployeeID , Salary FROM planet_1.Employee WHERE Position = 'intern') AS T ORDER BY EmployeeID LIMIT 1) AS R GROUP BY EmployeeID ORDER BY Recipient  DESC LIMIT 100000000000000000000000000000000"
  },
  {
    "id": 1864,
    "db_id": "planet_1",
    "question": "What is the average salary of an intern?",
    "answer": "SELECT AVG(Salary ) FROM (SELECT Salary , COUNT(EmployeeID ), SUM(Remarks ) AS Total FROM (SELECT EmployeeID , SUM(Remarks ) AS Remark FROM (SELECT DISTINCT EmployeeID , SUM(Remarks ), SUM(Remarks ), SUM(Remarks ), SUM(Remarks ) FROM (SELECT DISTINCT EmployeeID , SUM(Remarks ), Remarks , SUM(Remarks ) FROM (SELECT DIST"
  },
  {
    "id": 1865,
    "db_id": "planet_1",
    "question": "What level is Physician?",
    "answer": "SELECT DISTINCT Level FROM (SELECT DISTINCT Recipient FROM planet_1.Employee AS E INNER JOIN (SELECT DISTINCT Level FROM planet_1.Shipment WHERE EmployeeID = '42745880392670756') AS T  ON Employee.Name = 'Dr. WILSON' GROUP BY Date ORDER BY Date LIMIT 1) AS T"
  },
  {
    "id": 1866,
    "db_id": "planet_1",
    "question": "What is the clearance level of a physician?",
    "answer": "SELECT DISTINCT Level FROM (SELECT EmployeeID , Date , Manager FROM (SELECT DISTINCT MIN(Level ) AS lvl1 FROM (SELECT DISTINCT ShipmentID , EmployeeID , Remarks FROM (SELECT Employee.Name , Remarks FROM (SELECT EmployeeID , Manager FROM (SELECT DISTINCT ShipmentID , PlanetID FROM (SELECT DISTINCT Date , Manager FROM (SELECT DIST"
  },
  {
    "id": 1867,
    "db_id": "planet_1",
    "question": "List Package Number of all package sent by Leo Wong?",
    "answer": "SELECT DISTINCT planet_1.PackageNumber FROM (SELECT DISTINCT planet_1.PlanetID FROM (SELECT DISTINCT planet_1.Name FROM planet_1.Shipment AS s INNER JOIN planet_1.Employee AS e  ON planet_1.Planet = planet_1.PlanetID ORDER BY Date , EmployeeID ) AS T INNER JOIN (SELECT DISTINCT"
  },
  {
    "id": 1868,
    "db_id": "planet_1",
    "question": "What is the number of all packages that Leo Wong sent?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT planet_1.PackageNumber , planet_1.Contents , planet_1.Weight FROM (SELECT DISTINCT planet_1.PlanetID FROM (SELECT planet_1.Name , MAX(planet_1.Remarks ) AS str FROM (SELECT DISTINCT planet_1.Name , MAX(planet_1."
  },
  {
    "id": 1869,
    "db_id": "planet_1",
    "question": "List all package numbers received by Leo Wong ?",
    "answer": "SELECT DISTINCT planet_1.PackageNumber FROM (SELECT DISTINCT Date FROM (SELECT Date , COUNT(ShipmentID ) AS num FROM (SELECT Recipient FROM planet_1.Package WHERE ShipmentID = 'PLANET_1' ORDER BY Date LIMIT 2) AS T GROUP BY planet_1.PackageNumber ORDER BY planet_1.Name LIMIT 1) AS T"
  },
  {
    "id": 1870,
    "db_id": "planet_1",
    "question": "What are all of the package numbers received by Leo Wong?",
    "answer": "SELECT DISTINCT planet_1.PackageNumber FROM (SELECT DISTINCT Date FROM (SELECT Date , COUNT(ShipmentID ) AS num FROM (SELECT PlanetID , ShipmentID FROM (SELECT EmployeeID , COUNT(PlanetID ) AS num FROM (SELECT DISTINCT Contents , Level FROM (SELECT PlanetID , Name , Date FROM (SELECT DISTINCT Date , PlanetID FROM (SELECT"
  },
  {
    "id": 1871,
    "db_id": "planet_1",
    "question": "List all package sent or received by Leo Wong.",
    "answer": "SELECT DISTINCT PackageNumber FROM (SELECT DISTINCT Shipment.PackageNumber FROM (SELECT DISTINCT Contents , COUNT(Shipment.Contents ) AS num FROM (SELECT DISTINCT Level FROM (SELECT DISTINCT EmployeeID , Date FROM (SELECT DISTINCT Date , COUNT(PlanetID ), SUM(Remarks ), Name FROM (SELECT DISTINCT Remarks FROM (SELECT DISTINCT Remarks , Date ,"
  },
  {
    "id": 1872,
    "db_id": "planet_1",
    "question": "What are all the different package numbers that Leo Wong sent or received?",
    "answer": "SELECT DISTINCT planet_1.PackageNumber FROM (SELECT DISTINCT Date FROM (SELECT Date , COUNT(ShipmentID ) AS num FROM (SELECT Position , SUM(Remarks ) AS Remarks FROM (SELECT EmployeeID , Recipient FROM (SELECT Employee , COUNT(ShipmentID ) AS Remark FROM (SELECT ShipmentID , Date , Level FROM (SELECT DISTINCT ShipmentID ,"
  },
  {
    "id": 1873,
    "db_id": "planet_1",
    "question": "Count the number of packages sent by Ogden Wernstrom and received by Leo Wong.",
    "answer": "SELECT COUNT(Shipment.PackageNumber ) FROM (SELECT DISTINCT Shipment FROM (SELECT DISTINCT ShipmentID , EmployeeID , SUM(Remarks ) AS num FROM (SELECT EmployeeID , Remarks FROM (SELECT DISTINCT ShipmentID , Contents , SUM(Level ) AS num FROM (SELECT DISTINCT PlanetID , Level , Date FROM (SELECT DISTINCT Manager , Date , SUM(Remarks ) AS num"
  },
  {
    "id": 1874,
    "db_id": "planet_1",
    "question": "How many packages sent by Ogden Wernstrom and received by Leo Wong?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT ShipmentID , EmployeeID , AccountNumber , Recipient , Name , Contents , Weight FROM (SELECT DISTINCT ShipmentID , EmployeeID , AccountNumber , Recipient , Name , Contents , Weight FROM (SELECT DISTINCT * FROM (SELECT DISTINCT Recipient , Name , Contents , Weight FROM (SELECT DISTINCT ShipmentID ,"
  },
  {
    "id": 1875,
    "db_id": "planet_1",
    "question": "What are the contents of package sent by John Zoidfarb?",
    "answer": "SELECT DISTINCT SUM(Contents ) FROM (SELECT DISTINCT Date , COUNT(PackageNumber ) AS Contents , SUM(Weight ) AS Total FROM (SELECT DISTINCT Shipment.Contents , SUM(Shipment.Weight ) FROM (SELECT DISTINCT Date , Date FROM (SELECT DISTINCT Shipment.Contents , SUM(Shipment.Weight ) AS Sum_Weight FROM (SELECT DISTINCT Shipment.Plan"
  },
  {
    "id": 1876,
    "db_id": "planet_1",
    "question": "What are the package contents of all those sent by John Zoidfarb?",
    "answer": "SELECT DISTINCT planet_1.Contents FROM (SELECT DISTINCT planet_1.Contents FROM (SELECT DISTINCT planet_1.Name , planet_1.Weight FROM (SELECT DISTINCT Recipient FROM (SELECT DISTINCT Manager FROM planet_1.Employee AS E ) AS T INNER JOIN (SELECT DISTINCT Salary FROM (SELECT DISTINCT Salary FROM planet"
  },
  {
    "id": 1877,
    "db_id": "planet_1",
    "question": "What is the heaviest package sent by the clients which 'John' is part of their name? List package number and weight.",
    "answer": "SELECT MAX(PackageNumber ), SUM(Weight ) FROM (SELECT DISTINCT Date , Remarks FROM (SELECT DISTINCT Name , Remarks FROM (SELECT DISTINCT EmployeeID , ShipmentID FROM (SELECT DISTINCT Name , Date , Salary FROM (SELECT DISTINCT Name , Position , Remarks FROM (SELECT DISTINCT EmployeeID , PlanetID FROM (SELECT DISTINCT Name , Position"
  },
  {
    "id": 1878,
    "db_id": "planet_1",
    "question": "What is the package number and weight of the heaviest package that was sent by a client named John or something similar?",
    "answer": "SELECT DISTINCT planet_1.PackageNumber , SUM(planet_1.Weight ) FROM (SELECT DISTINCT PackageNumber , SUM(Weight ) FROM (SELECT Client.Name , COUNT(PlanetID ), Recipient FROM (SELECT DISTINCT Contents , SUM(Remarks ) AS num FROM (SELECT DISTINCT Date , Recipient FROM (SELECT DISTINCT Date , Pla"
  },
  {
    "id": 1879,
    "db_id": "planet_1",
    "question": "List package number and weight of top 3 lightest packages.",
    "answer": "SELECT DISTINCT Date FROM (SELECT DISTINCT Shipment.PackageNumber , SUM(PlanetID ) AS totalWeight FROM (SELECT DISTINCT PlanetID , Level FROM (SELECT DISTINCT PlanetID , Date , SUM(Remarks ) AS Remark FROM (SELECT DISTINCT EmployeeID , Recipient FROM (SELECT DISTINCT Manager , PlanetID FROM (SELECT DISTINCT Plan"
  },
  {
    "id": 1880,
    "db_id": "planet_1",
    "question": "What is the package number and weight of the 3 lightest packages?",
    "answer": "SELECT DISTINCT planet_1.PackageNumber , SUM(planet_1.Weight ) AS total FROM (SELECT DISTINCT planet_1.PlanetID , Recipient FROM (SELECT DISTINCT PlanetID FROM (SELECT DISTINCT PlanetID , COUNT(*) FROM (SELECT DISTINCT PlanetID , SUM(Salary ) FROM (SELECT DISTINCT EmployeeID , Salary FROM (SELECT D"
  },
  {
    "id": 1881,
    "db_id": "planet_1",
    "question": "Who sent most number of packages? List client name and number of packages sent by that client.",
    "answer": "SELECT DISTINCT Client.Name , SUM(PackageNumber ) FROM (SELECT COUNT(PackageNumber ) AS num FROM (SELECT DISTINCT PackageNumber FROM (SELECT DISTINCT AccountNumber , Date , Contents , Weight FROM planet_1.Package ORDER BY Date LIMIT 1)) AS T WHERE PackageNumber = (SELECT DISTINCT MAX(PackageNumber ) FROM (SELECT DISTINCT AccountNumber , Date , Contents , We"
  },
  {
    "id": 1882,
    "db_id": "planet_1",
    "question": "What is the name of the client who sent the most packages and how many were there?",
    "answer": "SELECT DISTINCT AccountNumber FROM (SELECT MAX(AccountNumber ) AS n FROM (SELECT ShipmentID , SUM(Remarks ) AS sum FROM (SELECT EmployeeID , SUM(Remarks ), Date , Salary FROM (SELECT DISTINCT Name , Salary FROM (SELECT DISTINCT Name , Remarks , Date , Salary FROM (SELECT DISTINCT Date , Salary , Date FROM (SELECT DISTINCT Date , Remarks , SUM("
  },
  {
    "id": 1883,
    "db_id": "planet_1",
    "question": "Who received least number of packages ? List client name and number of packages received by that client .",
    "answer": "SELECT DISTINCT Name , SUM(PackageNumber ) FROM (SELECT AccountNumber , COUNT(ShipmentID ) AS numbers FROM (SELECT ShipmentID , EmployeeID FROM (SELECT DISTINCT EmployeeID , Manager , Level FROM (SELECT DISTINCT Client.AccountNumber , Client.Name , Level FROM (SELECT DISTINCT Client.PlanetID , Clien"
  },
  {
    "id": 1884,
    "db_id": "planet_1",
    "question": "What is the smallest number of packages received and by whom ?",
    "answer": "SELECT DISTINCT SUM(Package.PackageNumber ), Date FROM (SELECT SUM(Package.PackageNumber ) AS numbersum FROM (SELECT DISTINCT ShipmentID , Date , MAX(ShipmentID ) AS numbersum FROM (SELECT DISTINCT PlanetID , COUNT(*) AS NumFromFrom_Managers , EmployeeID FROM (SELECT EmployeeID FROM (SELECT DISTINCT Man"
  },
  {
    "id": 1885,
    "db_id": "planet_1",
    "question": "Who sent more than one packages? List the client's name.",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT AccountNumber FROM (SELECT DISTINCT EmployeeID , SUM(PlanetID ) AS num FROM (SELECT COUNT(PlanetID ), EmployeeID FROM (SELECT DISTINCT PlanetID FROM (SELECT DISTINCT Contents FROM (SELECT DISTINCT Client.Name FROM (SELECT DISTINCT PlanetID FROM (SELECT DISTINCT EmployeeID , SUM(PlanetID"
  },
  {
    "id": 1886,
    "db_id": "planet_1",
    "question": "What is the name of all clients who sent more than one package?",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT AccountNumber FROM (SELECT DISTINCT COUNT(Shipment.AccountNumber ) AS num , PackageNumber FROM (SELECT DISTINCT Contents , MAX(Shipment.Date ) AS Dates , EmployeeID FROM (SELECT DISTINCT Remarks , SUM(Remarks ), Date FROM (SELECT DISTINCT Date , Manager FROM (SELECT DISTINCT Remarks , Manager FROM (SELECT D"
  },
  {
    "id": 1887,
    "db_id": "planet_1",
    "question": "What are the Coordinates of planet Mars?",
    "answer": "SELECT DISTINCT COUNT(PackageNumber ) AS x1 , COUNT(PackageNumber ) AS x2 FROM (SELECT DISTINCT Coordinates FROM planet_1.Package ORDER BY PlanetID LIMIT 1) AS T ORDER BY Client.Name LIMIT 10168502492777330645641622"
  },
  {
    "id": 1888,
    "db_id": "planet_1",
    "question": "What are the coordinates of the planet named Mars?",
    "answer": "SELECT DISTINCT Client.Name , Date FROM planet_1.Shipment AS T INNER JOIN (SELECT DISTINCT Position , SUM(Remarks ) AS Num FROM (SELECT DISTINCT Remarks FROM (SELECT DISTINCT Date , Manager FROM (SELECT DISTINCT PlanetID , Level FROM (SELECT DISTINCT Position , Level FROM planet_1.Shipment ORDER BY Remarks LIMIT 1)) AS"
  },
  {
    "id": 1889,
    "db_id": "planet_1",
    "question": "List all Planets' names and coordinates in alphabetical order of name.",
    "answer": "SELECT DISTINCT Name FROM planet_1.Planet ORDER BY Name LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1890,
    "db_id": "planet_1",
    "question": "What are the names and coordinates of all planets in alphabetical order by name?",
    "answer": "SELECT DISTINCT Name FROM planet_1.Planet ORDER BY Name LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1891,
    "db_id": "planet_1",
    "question": "List all shipment id under Phillip J. Fry's management.",
    "answer": "SELECT DISTINCT ShipmentID FROM (SELECT DISTINCT ShipmentID FROM planet_1.Planet ORDER BY EmployeeID LIMIT 1) AS T INNER JOIN (SELECT DISTINCT Manager FROM (SELECT DISTINCT Manager FROM (SELECT DISTINCT PlanetID FROM planet_1.Planet WHERE Name = 'Phillip J. Fry') AS P WHERE AccountNumber = 5724340489264)"
  },
  {
    "id": 1892,
    "db_id": "planet_1",
    "question": "What are the shipment IDs of every delivery managed by Phillip J Fry?",
    "answer": "SELECT DISTINCT Date FROM (SELECT Date FROM (SELECT MIN(Date ), SUM(Salary ) AS Total FROM (SELECT EmployeeID , Recipient FROM (SELECT Name , Salary FROM planet_1.Employee ORDER BY Name LIMIT 3)) AS T GROUP BY Date ORDER BY Recipient LIMIT 3) AS T INNER JOIN planet_1.Shipment AS s  ON Date = Shipment.Date ORDER BY D"
  },
  {
    "id": 1893,
    "db_id": "planet_1",
    "question": "List the dates of all shipments.",
    "answer": "SELECT Date FROM (SELECT DISTINCT Date FROM planet_1.Shipment) AS T ORDER BY Date LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1894,
    "db_id": "planet_1",
    "question": "What are the dates of every shipment in the database?",
    "answer": "SELECT Date FROM (SELECT DISTINCT Date FROM (SELECT DISTINCT Date FROM planet_1.Shipment)) AS T ORDER BY Date LIMIT 100000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1895,
    "db_id": "planet_1",
    "question": "List all shipment ids for the planet Mars.",
    "answer": "SELECT DISTINCT ShipmentID FROM (SELECT DISTINCT Shipment FROM planet_1.Shipment ORDER BY Shipment.PlanetID LIMIT 1) AS T INNER JOIN planet_1.Shipment AS S  ON Shipment.ShipmentID = Shipment.ShipmentID GROUP BY Date ORDER BY Shipment.Date LIMIT 14599062481307000"
  },
  {
    "id": 1896,
    "db_id": "planet_1",
    "question": "What are the shipment ids for the planet Mars?",
    "answer": "SELECT DISTINCT ShipmentID FROM (SELECT DISTINCT PlanetID FROM (SELECT * FROM (SELECT DISTINCT EmployeeID FROM (SELECT DISTINCT PlanetID FROM planet_1.Shipment)) AS T ORDER BY PlanetID LIMIT 3) AS T INNER JOIN (SELECT DISTINCT Shipment FROM planet_1.Shipment WHERE Name = 'Mars') AS S  ON Shipment = ShipmentID ORDER BY PlanetID"
  },
  {
    "id": 1897,
    "db_id": "planet_1",
    "question": "List all shipment ids for the planet Mars and under the management of Turanga Leela.",
    "answer": "SELECT DISTINCT ShipmentID FROM (SELECT DISTINCT ShipmentID FROM (SELECT Employee.Name , MIN(Employee.Position ) AS pos_min FROM planet_1.Employee AS T INNER JOIN (SELECT PlanetID FROM planet_1.Shipment GROUP BY PlanetID ORDER BY Position LIMIT 1) AS T  ON Position = 'TURANGA LEALEA' GROUP BY Shipment"
  },
  {
    "id": 1898,
    "db_id": "planet_1",
    "question": "What are the ids of all shipments on the planet Mars that are managed by Turanga Leela?",
    "answer": "SELECT DISTINCT Date FROM (SELECT DISTINCT Date FROM (SELECT DISTINCT PlanetID , Manager FROM (SELECT DISTINCT EmployeeID , PlanetID FROM (SELECT DISTINCT PlanetID FROM (SELECT DISTINCT Manager , Date , Contents FROM (SELECT DISTINCT Contents FROM (SELECT DISTINCT ShipmentID FROM (SELECT DISTINCT Date FROM (SELECT DISTINCT EmployeeID , PlanetID FROM (SELECT DISTINCT"
  },
  {
    "id": 1899,
    "db_id": "planet_1",
    "question": "List all shipment ids on the planet Mars or under the management of Turanga Leela.",
    "answer": "SELECT DISTINCT ShipmentID FROM (SELECT DISTINCT ShipmentID FROM planet_1.Planet AS T INNER JOIN (SELECT Manager , COUNT(Manager ) AS num FROM (SELECT DISTINCT EmployeeID , Remarks FROM planet_1.Shipment ORDER BY Date LIMIT 2) AS T INNER JOIN (SELECT DISTINCT Manager , Level FROM (SELECT DISTINCT Manager , Level FROM planet_"
  },
  {
    "id": 1900,
    "db_id": "planet_1",
    "question": "What are the ids for all shipments on the planet Mars that Turanga Leela manages?",
    "answer": "SELECT DISTINCT Date FROM (SELECT Date FROM (SELECT MIN(Date ), SUM(Remarks ) AS Total FROM (SELECT DISTINCT ShipmentID , PlanetID FROM (SELECT ShipmentID , PlanetID FROM planet_1.Planet INNER JOIN (SELECT DISTINCT EmployeeID FROM (SELECT DISTINCT Manager FROM (SELECT DISTINCT PlanetID FROM (SELECT DISTINCT PlanetID , Remarks FROM planet_1.Shipment WHERE Date"
  },
  {
    "id": 1901,
    "db_id": "planet_1",
    "question": "What is the total shipments in each planet? List the planet name and total shipments.",
    "answer": "SELECT COUNT(EmployeeID ), SUM(ShipmentID ) FROM (SELECT DISTINCT PlanetID , COUNT(EmployeeID ) AS num FROM (SELECT DISTINCT Employee.Name , EmployeeID FROM (SELECT DISTINCT EmployeeID FROM planet_1.Employee)) AS T ORDER BY PlanetID , Date LIMIT 5) AS T GROUP BY PlanetID ORDER BY Level LIMIT 5000000000000000"
  },
  {
    "id": 1902,
    "db_id": "planet_1",
    "question": "How many shipments take place on each planet?",
    "answer": "SELECT SUM(planet_1.Date ) AS TOTAL , SUM(planet_1.Contents ) AS TOTAL FROM (SELECT DISTINCT PlanetID FROM (SELECT ShipmentID FROM (SELECT DISTINCT PlanetID FROM planet_1.Shipment GROUP BY PlanetID ORDER BY PlanetID LIMIT 2)) AS T ORDER BY Date , planet_1.Contents ) AS T WHERE Planet"
  },
  {
    "id": 1903,
    "db_id": "planet_1",
    "question": "Which planet has most shipments? List the planet name.",
    "answer": "SELECT PlanetID FROM (SELECT DISTINCT Position FROM planet_1.Employee ORDER BY Remarks LIMIT 1) AS T INNER JOIN (SELECT DISTINCT ShipmentID FROM (SELECT DISTINCT EmployeeID , SUM(Remarks ) AS Total FROM planet_1.Employee GROUP BY Remarks ORDER BY Remarks LIMIT 1)) AS T  ON Position = 'Planet' ORDER BY Remarks LIMIT 10000000"
  },
  {
    "id": 1904,
    "db_id": "planet_1",
    "question": "What is the name of the planet with the most shipments?",
    "answer": "SELECT DISTINCT PlanetID FROM (SELECT MAX(PlanetID ) AS id , SUM(ShipmentID ) AS num FROM (SELECT ShipmentID , COUNT(EmployeeID ) AS Total FROM (SELECT EmployeeID , COUNT(ShipmentID ) FROM (SELECT ShipmentID , Name , Level , Manager , Date FROM (SELECT DISTINCT EmployeeID , ShipmentID , Level , Date FROM (SELECT DISTINCT ShipmentID ,"
  },
  {
    "id": 1905,
    "db_id": "planet_1",
    "question": "List the manger's name and number of shipments under his management.",
    "answer": "SELECT DISTINCT Date FROM (SELECT DISTINCT Employee.Name , COUNT(*) AS Total FROM (SELECT EmployeeID , SUM(Remarks ) AS Remarks FROM (SELECT DISTINCT Shipment.EmployeeID , Shipment.Date FROM (SELECT Shipment.PlanetID , Employee.Position , Shipment.Salary FROM (SELECT Shipment.Name , COUNT(Shipment.EmployeeID ) AS Total FROM (SELECT DISTINCT Sh"
  },
  {
    "id": 1906,
    "db_id": "planet_1",
    "question": "What are the number of shipments managed and names of each manager?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT Employee.Name , planet_1.PlanetID FROM (SELECT DISTINCT Employee.Name , planet_1.Name FROM planet_1.Employee AS T INNER JOIN (SELECT DISTINCT Manager FROM (SELECT DISTINCT Employee.EmployeeID FROM planet_1.Employee AS E INNER JOIN (SELECT DISTINCT Date FROM (SELECT DISTINCT Date , COUNT(Employee."
  },
  {
    "id": 1907,
    "db_id": "planet_1",
    "question": "Calculate total weight of package shipped on Mars.",
    "answer": "SELECT SUM(Planet.Weight ) FROM (SELECT DISTINCT Planet.Weight , Planet.Position , SUM(Planet.Weight ) AS Total FROM planet_1.Package INNER JOIN (SELECT DISTINCT Planet.Name , MIN(Planet.Weight ) AS TOTAL FROM planet_1.Package ORDER BY Planet.Name LIMIT 2) AS t  ON Planet.Planet = 'Mars'"
  },
  {
    "id": 1908,
    "db_id": "planet_1",
    "question": "what is the total weight of all packages shipped on Mars?",
    "answer": "SELECT SUM(Weight ) FROM (SELECT DISTINCT SUM(PlanetID ) AS total , PlanetID FROM (SELECT DISTINCT PlanetID , SUM(PlanetID ) AS weight FROM planet_1.Shipment GROUP BY PlanetID ORDER BY Level LIMIT 1) AS t WHERE Name = 'Mars' ORDER BY Level LIMIT 1) AS T GROUP BY PlanetID ORDER BY Level LIMIT 10000"
  },
  {
    "id": 1909,
    "db_id": "planet_1",
    "question": "Calculate total weight of package shipped in each planet . show the name of each planet .",
    "answer": "SELECT SUM(PlanetID ), Name FROM (SELECT DISTINCT PlanetID , COUNT(EmployeeID ) AS TotalWeight FROM (SELECT DISTINCT EmployeeID , SUM(Remarks ), SUM(Salary ) AS Remarks_Total FROM (SELECT DISTINCT EmployeeID , Remarks FROM (SELECT DISTINCT Name , EmployeeID FROM (SELECT DISTINCT Date , Level FROM (SELECT DISTINCT PlanetID , Remarks , Salary FROM (SELECT"
  },
  {
    "id": 1910,
    "db_id": "planet_1",
    "question": "what is the total package weight for each planet, list its name ?",
    "answer": "SELECT SUM(Package.Weight ) AS Total , Name FROM (SELECT DISTINCT PlanetID , SUM(PackageNumber ) AS total FROM (SELECT ShipmentID , COUNT(EmployeeID ) AS num , PlanetID FROM (SELECT DISTINCT Employee.Name , SUM(Shipment.Remarks ) AS T2 , Date FROM (SELECT DISTINCT Date , Name , Date FROM (SELECT DISTINCT Date , EmployeeID , Shipment"
  },
  {
    "id": 1911,
    "db_id": "planet_1",
    "question": "Which planet has total weight of shipment greater than 30? List planet name.",
    "answer": "SELECT DISTINCT PlanetID FROM (SELECT DISTINCT Position , SUM(Remarks ) AS Total FROM (SELECT DISTINCT Remarks , SUM(Salary ) AS TOTAL , Recipient FROM (SELECT DISTINCT Position , Salary FROM (SELECT DISTINCT Position , Name FROM (SELECT DISTINCT PlanetID , Remarks , Name FROM (SELECT DISTINCT Position , Remarks , SUM("
  },
  {
    "id": 1912,
    "db_id": "planet_1",
    "question": "What are the names of all planets tjat have a total shipment weight greater than 30?",
    "answer": "SELECT DISTINCT Name FROM planet_1.Planet WHERE Shipment > 30 GROUP BY Name ORDER BY AccountNumber LIMIT 100000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1913,
    "db_id": "planet_1",
    "question": "List package number of package shipped in planet Omicron Persei 8 and sent by Zapp Brannigan.",
    "answer": "SELECT DISTINCT planet_1.PackageNumber FROM (SELECT DISTINCT Date FROM (SELECT Date , COUNT(ShipmentID ) AS num FROM (SELECT PlanetID , Manager , MAX(Date ) AS last FROM (SELECT Manager  FROM (SELECT ShipmentID , Employee  FROM (SELECT DISTINCT planet_1.PlanetID , Name , Recipient FROM (SELECT DISTINCT"
  },
  {
    "id": 1914,
    "db_id": "planet_1",
    "question": "What are the number of packages sent by Zapp Brannigan and shipped on the Omicron Persei 8?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT Date FROM (SELECT DISTINCT Contents FROM (SELECT DISTINCT Name , Date , Remarks FROM (SELECT DISTINCT Remarks , Date FROM (SELECT DISTINCT Contents , Name FROM (SELECT DISTINCT EmployeeID , Remarks FROM (SELECT DISTINCT Contents , Date FROM (SELECT DISTINCT Date , Remarks FROM (SELECT DISTINCT Date , Remarks FROM ("
  },
  {
    "id": 1915,
    "db_id": "planet_1",
    "question": "List package number of packages shipped in Omicron Persei 8 planet or sent by Zapp Brannigan.",
    "answer": "SELECT DISTINCT planet_1.PackageNumber FROM (SELECT DISTINCT Date FROM (SELECT Date , Manager FROM (SELECT DISTINCT EmployeeID , PlanetID FROM (SELECT PlanetID , Manager FROM (SELECT DISTINCT EmployeeID , PlanetID FROM (SELECT DISTINCT Name FROM (SELECT DISTINCT Date , MIN(Date ) AS dtmin FROM (SELECT DISTINCT Date , Date FROM (SELECT"
  },
  {
    "id": 1916,
    "db_id": "planet_1",
    "question": "What are the number of packages shipped on Omicron Persei 8 planet or sent by Zapp Brannigan?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT planet_1.PackageNumber , COUNT(planet_1.ShipmentID ) AS num FROM (SELECT DISTINCT planet_1.PlanetID FROM planet_1.Package WHERE Date = '2007-9-1' GROUP BY planet_1.PlanetID ORDER BY Date LIMIT 1) AS T ORDER BY Planet."
  },
  {
    "id": 1917,
    "db_id": "planet_1",
    "question": "Which packages have weight between 10 and 30? List the package number and weight.",
    "answer": "SELECT DISTINCT PackageNumber , SUM(Weight ) FROM (SELECT MAX(Date ), SUM(Weight ) AS Total FROM (SELECT DISTINCT Contents , SUM(Weight ) FROM (SELECT DISTINCT Weight , ShipmentID , PackageNumber , Date FROM (SELECT DISTINCT Date , Contents , PackageNumber , Level FROM (SELECT DISTINCT MIN(PackageNumber ) AS PN , Level FROM (SELECT DISTINCT"
  },
  {
    "id": 1918,
    "db_id": "planet_1",
    "question": "What are the package numbers and weights that are between 10 and 30?",
    "answer": "SELECT DISTINCT Date FROM (SELECT DISTINCT Shipment.PackageNumber , SUM(Shipment.Weight ) AS total FROM (SELECT DISTINCT Contents , Recipient , SUM(Weight ) AS sum FROM (SELECT DISTINCT Name , Level , COUNT(Level ), SUM(Remarks ), Weight FROM (SELECT DISTINCT PlanetID , Date , Manager FROM (SELECT DISTINCT Employee.Position , COUNT("
  },
  {
    "id": 1919,
    "db_id": "planet_1",
    "question": "Which employees do not have clearance in Mars? List employee's name.",
    "answer": "SELECT DISTINCT Employee FROM (SELECT DISTINCT EmployeeID , COUNT(EmployeeID ) AS num FROM (SELECT DISTINCT AccountNumber , Level , PlanetID FROM (SELECT DISTINCT Manager FROM (SELECT DISTINCT EmployeeID , planet_1.PlanetID FROM (SELECT DISTINCT Shipment FROM (SELECT DISTINCT EmployeeID , Contents , Date FROM (SELECT DISTINCT MIN(Date ) AS date , EmployeeID , PlanetID"
  },
  {
    "id": 1920,
    "db_id": "planet_1",
    "question": "What are the names of all employees who don't have clearance on Mars?",
    "answer": "SELECT DISTINCT Employee.Name FROM (SELECT DISTINCT Name FROM planet_1.Employee WHERE Salary > 300000 ORDER BY Salary LIMIT 1) AS T WHERE Date = 'T' GROUP BY Date ORDER BY Employee.Name LIMIT 1468392528507662924379419955463187862994"
  },
  {
    "id": 1921,
    "db_id": "planet_1",
    "question": "Which employees have clearance in Omega III? List employees' name.",
    "answer": "SELECT DISTINCT Employee.Name FROM (SELECT DISTINCT Name FROM (SELECT Employee.EmployeeID , Employee.Position , Recipient FROM (SELECT Employee.Name , Employee.Position FROM (SELECT Employee.Name , Employee.Remarks FROM (SELECT Employee.Name , Date FROM (SELECT Employee.Position , Date FROM (SELECT Employee.EmployeeID"
  },
  {
    "id": 1922,
    "db_id": "planet_1",
    "question": "What are the names of all employees with clearance on Omega III?",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT EmployeeID , Level FROM (SELECT DISTINCT MIN(Level ) AS MinLevel FROM (SELECT DISTINCT EmployeeID , MIN(Name ) FROM (SELECT DISTINCT PlanetID FROM (SELECT DISTINCT Contents , SUM(Remarks ), SUM(Position ), MIN(Remarks ) FROM (SELECT DISTINCT Remarks FROM (SELECT DISTINCT Name FROM (SELECT DISTINCT Date ,"
  },
  {
    "id": 1923,
    "db_id": "planet_1",
    "question": "Which planets that have exact one employee has clearance? List planets' name.",
    "answer": "SELECT DISTINCT PlanetID FROM (SELECT DISTINCT Employee.PlanetID , SUM(Level ) AS total FROM (SELECT DISTINCT Employee.EmployeeID , SUM(Level ) AS total FROM (SELECT DISTINCT Employee.Name FROM (SELECT Employee.Name , SUM(Level ) AS total FROM (SELECT DISTINCT Employee.Position , SUM(Level ) AS total FROM (SELECT DISTINCT Date FROM (SELECT DISTINCT Employee"
  },
  {
    "id": 1924,
    "db_id": "planet_1",
    "question": "What are the names of all planets with one employee that has clearance?",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT PlanetID , Level FROM (SELECT Employee.Name , SUM(Level ) AS total FROM (SELECT Employee.Name , SUM(Level ) AS total FROM (SELECT Shipment.Date , COUNT(PlanetID ), EmployeeID FROM (SELECT DISTINCT Shipment.Manager , COUNT(EmployeeID ) FROM (SELECT PlanetID FROM (SELECT Shipment.Date , COUNT(Shipment.PlanetID )"
  },
  {
    "id": 1925,
    "db_id": "planet_1",
    "question": "Which employees have salaries between 5000 and 10000? List employees' name.",
    "answer": "SELECT DISTINCT Employee.Name FROM (SELECT SUM(Salary ) AS num_salary FROM (SELECT COUNT(EmployeeID ) AS num FROM (SELECT EmployeeID , SUM(Remarks ) AS salary FROM (SELECT EmployeeID , Salary FROM (SELECT SUM(Remarks ) AS Remarks FROM (SELECT DISTINCT Remarks FROM (SELECT DISTINCT EmployeeID FROM (SELECT SUM(Remarks ) AS Remarks FROM (SELECT DISTINCT Remarks FROM"
  },
  {
    "id": 1926,
    "db_id": "planet_1",
    "question": "What are the employees's names for those that have salaries between 5000 and 10000?",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT Employee.Name FROM (SELECT EmployeeID FROM (SELECT EmployeeID FROM planet_1.Employee ORDER BY Salary LIMIT 6) AS T INNER JOIN (SELECT DISTINCT PlanetID FROM planet_1.Shipment ORDER BY Date LIMIT 6) AS S  ON Employee.Planet = Shipment.PlanetID GROUP BY Date ORDER BY Date LIMIT 5000 OFFSET"
  },
  {
    "id": 1927,
    "db_id": "planet_1",
    "question": "Find the name of employees whose salary is above the average salary or more than 5000.",
    "answer": "SELECT DISTINCT Name FROM (SELECT SUM(Remarks ) AS sum , AVG(Salary ) AS avg FROM (SELECT EmployeeID , Salary FROM (SELECT SUM(Salary ), Remarks FROM (SELECT Remarks , EmployeeID  FROM (SELECT SUM(Remarks ), AVG(Salary ), MIN(Salary ), MAX(Salary ), MIN(Salary ), MAX(Salary ) AS Remarks FROM (SELECT Employee"
  },
  {
    "id": 1928,
    "db_id": "planet_1",
    "question": "What are the names of all employees who have a salary greater than average or more than 5000?",
    "answer": "SELECT DISTINCT Name FROM (SELECT DISTINCT EmployeeID , SUM(Salary ) AS avg , AVG(Salary ) AS sum FROM (SELECT DISTINCT EmployeeID , Salary FROM planet_1.Employee GROUP BY EmployeeID ORDER BY Date ) AS T ORDER BY Date LIMIT 1) AS R INNER JOIN (SELECT DISTINCT EmployeeID , Salary FROM (SELECT DISTINCT EmployeeID , SUM(Salary ) AS sum FROM ("
  },
  {
    "id": 1929,
    "db_id": "planet_1",
    "question": "Find the number of employees who do not have clearance in Mars .",
    "answer": "SELECT COUNT(EmployeeID ) FROM (SELECT DISTINCT EmployeeID FROM (SELECT planet_1.Name , COUNT(planet_1.PlanetID ) AS num FROM (SELECT PlanetID , Position , Salary FROM (SELECT DISTINCT EmployeeID , Position , Salary FROM (SELECT DISTINCT Manager FROM (SELECT EmployeeID , Name , PlanetID FROM (SELECT DISTINCT Employe"
  },
  {
    "id": 1930,
    "db_id": "planet_1",
    "question": "What is the number of employees that do not have clearance on Mars ?",
    "answer": "SELECT COUNT(EmployeeID ) FROM (SELECT DISTINCT EmployeeID FROM (SELECT ShipmentID FROM (SELECT EmployeeID , COUNT(PlanetID ) AS num FROM (SELECT ShipmentID , Level , PlanetID FROM (SELECT DISTINCT Manager , planet_1.Name , planet_1.Salary , planet_1.Position FROM (SELECT DISTINCT PlanetID , Level , Manager , EmployeeID FROM (SELECT D"
  },
  {
    "id": 1931,
    "db_id": "video_game",
    "question": "How many games are there?",
    "answer": "SELECT COUNT(game_player.Game_ID ) FROM (SELECT DISTINCT game_player.Game_ID , COUNT(game_player.Platform_name ) AS num FROM (SELECT game_player.Game_ID , SUM(Game_ID ) AS num FROM (SELECT game_player.Game_ID , SUM(Game_ID ) AS total FROM (SELECT DISTINCT game_player.Platform_name , COUNT("
  },
  {
    "id": 1932,
    "db_id": "video_game",
    "question": "Count the number of games.",
    "answer": "SELECT COUNT(game_player.Game_ID ) FROM (SELECT DISTINCT game_player.Game_ID , COUNT(game_player.Player_ID ) AS num FROM (SELECT * FROM (SELECT Title FROM (SELECT Rank_of_the_year , Player_name , Position , Game_ID , Units_sold_Millions , Franchise , Platform_name FROM (SELECT Title FROM (SELECT DIST"
  },
  {
    "id": 1933,
    "db_id": "video_game",
    "question": "List the Title and Developers of all games ordered by units sold from large to small.",
    "answer": "SELECT Title , Title FROM (SELECT Title , COUNT(Title ) AS per_unit FROM (SELECT Title , Developers FROM (SELECT Title , SUM(Rank_of_the_year ), SUM(Units_sold_Millions ), Rank_of_the_year FROM (SELECT Title , SUM(Rank_of_"
  },
  {
    "id": 1934,
    "db_id": "video_game",
    "question": "What are the titles and developers of all games, sorted by units sold descending?",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM video_game.game ORDER BY Units_sold_Millions LIMIT 1)) AS T WHERE Download_rank = (SELECT MAX(Download_rank ) FROM (SELECT DISTINCT Title FROM video_game.game ORDER BY Units_sold_Millions LIMIT 1) AS T WHERE"
  },
  {
    "id": 1935,
    "db_id": "video_game",
    "question": "What is the average units sold in millions of the games that are not developed by Nintendo?",
    "answer": "SELECT SUM(Title ) AS num FROM (SELECT DISTINCT Title , SUM(Units_sold_Millions ) AS total FROM (SELECT Title FROM (SELECT DISTINCT Title , Platform_ID  FROM (SELECT DISTINCT Title FROM video_game.game WHERE Market_district = 'Playstation' GROUP BY Title ORDER BY Title LIMIT 1)) AS T"
  },
  {
    "id": 1936,
    "db_id": "video_game",
    "question": "Return the average number of units sold in millions for games not developed by Nintendo.",
    "answer": "SELECT SUM(Title ) AS sum FROM (SELECT DISTINCT Title , COUNT(Title ) AS num FROM (SELECT Title FROM (SELECT * FROM (SELECT Title , COUNT(*) AS num_total FROM (SELECT Title FROM (SELECT game.Franchise , SUM(Title ) AS sum FROM (SELECT Title , Title FROM (SELECT Titl"
  },
  {
    "id": 1937,
    "db_id": "video_game",
    "question": "What are the names and market districts of all platforms?",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM video_game.platform WHERE Market_district = 'North America' LIMIT 1) AS x GROUP BY Title ORDER BY Rank_of_the_year LIMIT 100000002964387356473687318729115659626"
  },
  {
    "id": 1938,
    "db_id": "video_game",
    "question": "Return all platform names and corresponding market districts.",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title , SUM(Market_district ) AS total FROM (SELECT DISTINCT Title , SUM(Title ) AS total FROM (SELECT Title , SUM(Market_district ) AS total FROM (SELECT Title , SUM(Title ) AS total FROM (SELECT Title , SUM(Title ) AS"
  },
  {
    "id": 1939,
    "db_id": "video_game",
    "question": "What are the names and id of platforms whose download rank is 1?",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM video_game.platform AS P INNER JOIN video_game.player AS P  ON Player_ID = Platform_ID ORDER BY Title LIMIT 1) AS T ORDER BY Title LIMIT 10000000057439274680143122126"
  },
  {
    "id": 1940,
    "db_id": "video_game",
    "question": "Return the names and ids of all platforms with the download rank of 1.",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM (SELECT DISTINCT Platform_name , SUM(Units_sold_Millions ) AS rank FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Rank_of_the_year \nFROM (SELECT DISTINCT Title FROM (SELECT Title FROM ("
  },
  {
    "id": 1941,
    "db_id": "video_game",
    "question": "What are the maximum and minimum rank of the year of players.",
    "answer": "SELECT SUM(Title ) AS rank , Title FROM (SELECT Title FROM (SELECT MAX(Title ), MIN(Title ), Rank_of_the_year FROM video_game.player WHERE Game_ID = 'game1981' GROUP BY Title ORDER BY Title LIMIT 2) AS T ORDER BY Title LIMIT 2) AS"
  },
  {
    "id": 1942,
    "db_id": "video_game",
    "question": "Give the maximum and minimum rank of the year across all players.",
    "answer": "SELECT DISTINCT Title FROM (SELECT MAX(Rank_of_the_year ), MIN(Rank_of_the_year ) AS min FROM (SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Rank_of_the_year , COUNT(Title ) FROM (SELECT DISTINCT Title , COUNT(Title ) FROM (SELECT"
  },
  {
    "id": 1943,
    "db_id": "video_game",
    "question": "How many players have rank of the year smaller than 3?",
    "answer": "SELECT COUNT(player.Player_ID ) FROM (SELECT DISTINCT Title FROM (SELECT Player_ID , Rank_of_the_year , SUM(Player_name ) AS num FROM (SELECT Rank_of_the_year  FROM (SELECT player.Position , COUNT(player.Rank_of_the_year ) FROM (SELECT Title FROM (SELECT player.Position , COUNT(Title ) AS num FROM"
  },
  {
    "id": 1944,
    "db_id": "video_game",
    "question": "Count the number of players that have a rank of year of at most 3.",
    "answer": "SELECT COUNT(player.Player_ID ) FROM (SELECT DISTINCT Title FROM (SELECT Player_ID , Rank_of_the_year FROM (SELECT Player_ID , Rank_of_the_year FROM (SELECT COUNT(Rank_of_the_year ), game_player.Game_ID FROM (SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT player.Position , Title"
  },
  {
    "id": 1945,
    "db_id": "video_game",
    "question": "List all player names in ascending alphabetical order.",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM video_game.player ORDER BY Title ) AS T ORDER BY Title LIMIT 1) AS T ORDER BY Title LIMIT 1"
  },
  {
    "id": 1946,
    "db_id": "video_game",
    "question": "What are the names of all players in alphabetical order?",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT Title , Rank_of_the_year FROM video_game.player ORDER BY Player_name LIMIT 1) AS T INNER JOIN video_game.platform AS T  ON Title = player.Platform_ID ORDER BY Title , Player_name LIMIT 1)"
  },
  {
    "id": 1947,
    "db_id": "video_game",
    "question": "List names and colleges of all players in descending order of rank of the year.",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM video_game.player WHERE Rank_of_the_year = 'desc' ORDER BY Rank_of_the_year LIMIT 1) AS T WHERE Title = 'list' ORDER BY Title LIMIT 2000000000099540000000000000000"
  },
  {
    "id": 1948,
    "db_id": "video_game",
    "question": "What are the names and colleges of all players, ordered by rank of year descending?",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM (SELECT DISTINCT Rank_of_the_year , College FROM (SELECT Game_ID , Player_name , Position , College FROM (SELECT DISTINCT Title FROM (SELECT DISTINCT Rank_of_the_year , Rank_of_the_year , College FROM (SELECT DISTINCT Title FROM (SELECT"
  },
  {
    "id": 1949,
    "db_id": "video_game",
    "question": "Please show the names and rank of players that have played the game titled \"Super Mario World\".",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title , Rank_of_the_year FROM (SELECT Title , SUM(Rank_of_the_year ), AVG(Title ) AS pnt FROM video_game.player WHERE Title = 'Super Mario World' GROUP BY Title ORDER BY Download_rank LIMIT 1) AS T ORDER BY Title LIMIT 100000"
  },
  {
    "id": 1950,
    "db_id": "video_game",
    "question": "What are the names and ranks of players who have played the game with the title \"Super Mario World\"?",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title , Rank_of_the_year FROM (SELECT Title , Rank_of_the_year FROM (SELECT Title , COUNT(Title ) AS Rows FROM (SELECT Title FROM (SELECT Title , Rank_of_the_year FROM (SELECT Title , Title FROM (SELECT Title , Rank_of"
  },
  {
    "id": 1951,
    "db_id": "video_game",
    "question": "Show the distinct developer of games played by players that go to college \"Auburn\".",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM video_game.player AS T INNER JOIN (SELECT DISTINCT Title FROM video_game.player AS T INNER JOIN (SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM video_game.game AS T WHERE College = 'Auburn' ORDER BY Tit"
  },
  {
    "id": 1952,
    "db_id": "video_game",
    "question": "What are the different developers of games that are played by players that attend Auburn college?",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM video_game.player AS T INNER JOIN (SELECT DISTINCT Title FROM video_game.game WHERE Platform_name = 'Auburn University') AS T  ON Title = 'Auburn' GROUP BY Title ORDER BY Title LIMIT 1) AS R ORDER BY Title LIMIT 10000"
  },
  {
    "id": 1953,
    "db_id": "video_game",
    "question": "What is the average number of units sold in millions of games played by players with position \"Guard\"?",
    "answer": "SELECT SUM(Title ) AS sum , COUNT(Player_ID ) AS num FROM (SELECT Title , SUM(Rank_of_the_year ) AS num FROM (SELECT Title , Rank_of_the_year FROM (SELECT DISTINCT Title FROM (SELECT DISTINCT Player_name , Position FROM (SELECT Title , Rank_of_the_year FROM (SELECT Title ,"
  },
  {
    "id": 1954,
    "db_id": "video_game",
    "question": "Return the average number of units sold in millions among games played by players who have the position Guard.",
    "answer": "SELECT SUM(Title ) AS sum , SUM(Rank_of_the_year ) FROM (SELECT DISTINCT Title , Rank_of_the_year FROM video_game.player WHERE Position = 'Guard') AS T ORDER BY Title , Rank_of_the_year LIMIT 10000000000000000000000000"
  },
  {
    "id": 1955,
    "db_id": "video_game",
    "question": "Please list the title and platform name of games.",
    "answer": "SELECT Title , Title FROM (SELECT DISTINCT Title , Platform_name FROM (SELECT DISTINCT Title , Title , Platform_ID FROM (SELECT DISTINCT Title , Title FROM (SELECT DISTINCT Title FROM (SELECT DISTINCT Title , Title , Platform_ID FROM (SELECT DISTINCT Titl"
  },
  {
    "id": 1956,
    "db_id": "video_game",
    "question": "What are the titles and platform names of all games?",
    "answer": "SELECT DISTINCT Title , Platform_name FROM (SELECT DISTINCT Title , Platform_name FROM video_game.game ORDER BY Title ) AS S ORDER BY Title LIMIT 100000000000000000000000000000000000000000000000"
  },
  {
    "id": 1957,
    "db_id": "video_game",
    "question": "Please list the title of games with platforms that have market district in Asia or USA.",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM video_game.platform AS P INNER JOIN (SELECT DISTINCT Title FROM (SELECT Title FROM video_game.platform ORDER BY Title LIMIT 1)) AS t  ON Player_ID = Title GROUP BY Developers ORDER BY Rank_of_the_year LIMIT 1) AS T"
  },
  {
    "id": 1958,
    "db_id": "video_game",
    "question": "What are the titles of games that have platforms in the market districts of Asia or the USA?",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM"
  },
  {
    "id": 1959,
    "db_id": "video_game",
    "question": "List the name of each franchise and the number of games belonging to that franchise.",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM video_game.game GROUP BY Title ORDER BY Title LIMIT 1)) AS T INNER JOIN (SELECT Title FROM (SELECT Title FROM video_game.game GROUP BY Title ORDER BY Title LIMIT 1)) AS T  ON Title = Title"
  },
  {
    "id": 1960,
    "db_id": "video_game",
    "question": "How many games are there from each Franchise?",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title , COUNT(Title ) AS total FROM (SELECT Title , Rank_of_the_year , Player_name FROM (SELECT Title FROM (SELECT Franchise , Rank_of_the_year FROM (SELECT Franchise , Rank_of_the_year , COUNT(Title ) AS total FROM (SELECT Title , R"
  },
  {
    "id": 1961,
    "db_id": "video_game",
    "question": "List the name of franchise that have the most number of games.",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM video_game.game GROUP BY Title ORDER BY Title LIMIT 1) AS s ORDER BY Title LIMIT 10000143695722908397850000119255318570000955351226"
  },
  {
    "id": 1962,
    "db_id": "video_game",
    "question": "Which franchise has the most games?",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM video_game.game ORDER BY Rank_of_the_year LIMIT 1) AS t INNER JOIN video_game.game AS g  ON game_player.Game_ID = game.Game_ID GROUP BY Title ORDER BY Title LIMIT 1;"
  },
  {
    "id": 1963,
    "db_id": "video_game",
    "question": "List the names of franchises that have at least two games.",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title , COUNT(Title ) AS num FROM (SELECT Title , COUNT(Title ) AS num FROM video_game.player GROUP BY Title ORDER BY platform.Market_district LIMIT 1) AS T WHERE Title = 'nfl' GROUP BY Title ORDER BY Download_rank LIMIT 2"
  },
  {
    "id": 1964,
    "db_id": "video_game",
    "question": "What are the names of franchises that have two or more games?",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title , COUNT(Title ) AS num FROM (SELECT Title , COUNT(Title ) AS num FROM video_game.player GROUP BY Title ORDER BY Title LIMIT 2) AS T WHERE Title = 'Mario' LIMIT 1) AS x GROUP BY Developers ORDER BY Rank_of_the_year LIMIT"
  },
  {
    "id": 1965,
    "db_id": "video_game",
    "question": "List the name of players that do not play any game.",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Player_ID FROM (SELECT Title FROM (SELECT Game_ID FROM (SELECT Title FROM (SELECT game.Player_name FROM (SELECT Title FROM (SELECT Title FROM (SELECT game.Platform_name FROM "
  },
  {
    "id": 1966,
    "db_id": "video_game",
    "question": "What are the names of players who do not play any games?",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title , Title FROM (SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM (SELECT DISTINCT Ti"
  },
  {
    "id": 1967,
    "db_id": "video_game",
    "question": "Show the title of games that are played by both players from college \"Oklahoma\" and players from college \"Auburn\".",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM"
  },
  {
    "id": 1968,
    "db_id": "video_game",
    "question": "What are the titles of games that are played by players from Oklahoma college or Auburn college?",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM"
  },
  {
    "id": 1969,
    "db_id": "video_game",
    "question": "Show all distinct franchises of games.",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT Tit"
  },
  {
    "id": 1970,
    "db_id": "video_game",
    "question": "What are all the distinct franchises?",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT Title FROM video_game.game WHERE Platform_name = 'PC' ORDER BY Release_Date LIMIT 1) AS T ) AS s GROUP BY Developers ORDER BY Rank_of_the_year LIMIT 10000000000000000000000000"
  },
  {
    "id": 1971,
    "db_id": "video_game",
    "question": "Show the title of games that are not played by any player who is in the Guard position.",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT DISTINCT Player_ID FROM (SELECT Title FROM (SELECT Game_ID , Rank_of_the_year  FROM (SELECT DISTINCT Title FROM (SELECT DISTINCT Position FROM (SELECT * FROM (SELECT DISTINCT Player_name FROM (SELECT Title FROM (SELECT DISTINCT Rank_of_the_"
  },
  {
    "id": 1972,
    "db_id": "video_game",
    "question": "What are the titles of games not played by any players who play the Guard position?",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT DISTINCT Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT DISTINCT Player_ID , Title FROM (SELECT Title FROM (SELECT Title FROM (SELECT DISTINCT Player_ID , Position FROM (SELECT Title FROM (SELECT Title FROM (SELECT"
  },
  {
    "id": 1973,
    "db_id": "book_press",
    "question": "list all the names of press in descending order of the profit of the year.",
    "answer": "SELECT DISTINCT Title FROM book_press.book ORDER BY Year_Profits_billion LIMIT 100000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1974,
    "db_id": "book_press",
    "question": "Sorted all the press by year profits in descending order, and return press names.",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM (SELECT Sale_Amount , Release_date FROM book_press.book ORDER BY Year_Profits_billion LIMIT 1)) AS T INNER JOIN (SELECT Press_ID FROM book_press.book ORDER BY Year_Profits_billion LIMIT 1) AS A  ON Title = Age ORDER BY Ti"
  },
  {
    "id": 1975,
    "db_id": "book_press",
    "question": "What are the names of the publishers that made more than 15 billion profits each year or 1 billion each month?",
    "answer": "SELECT DISTINCT Title FROM book_press.book WHERE Year_Profits_billion > (SELECT MAX(Year_Profits_billion ) FROM book_press.book) ORDER BY Title LIMIT 15 OFFSET 20066374894891283658139616898978499"
  },
  {
    "id": 1976,
    "db_id": "book_press",
    "question": "Find the press whose yearly profit is more than 15 billion or whose monthly profit is more than 1 billion. Return the press names.",
    "answer": "SELECT DISTINCT Title FROM book_press.book WHERE Sale_Amount > (SELECT SUM(Title ) FROM book_press.book WHERE Press_ID = 'XYZB6420593' ORDER BY Release_date LIMIT 1) GROUP BY Title ORDER BY Release_date LIMIT 2007 OFFSET 5000000000000000"
  },
  {
    "id": 1977,
    "db_id": "book_press",
    "question": "what are the average and maximum profit of a year for all presses?",
    "answer": "SELECT AVG(Title ) FROM (SELECT DISTINCT Title FROM book_press.press GROUP BY Title ORDER BY Title LIMIT 1) AS T ORDER BY Title , Title LIMIT 20000000004786953900000000000000000000000"
  },
  {
    "id": 1978,
    "db_id": "book_press",
    "question": "Find the average and maximum yearly profit for each press.",
    "answer": "SELECT AVG(Title ), MAX(Title ) FROM book_press.book GROUP BY Title ORDER BY Year_Profits_billion LIMIT 100000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1979,
    "db_id": "book_press",
    "question": "Find the name of the publisher whose monthly profit is the highest.",
    "answer": "SELECT Title FROM book_press.book AS T WHERE Title = (SELECT MAX(Title ) FROM book_press.book) GROUP BY Title ORDER BY Release_date LIMIT 10000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1980,
    "db_id": "book_press",
    "question": "Which press has the largest monthly profit? Give me the press name.",
    "answer": "SELECT Title FROM book_press.book WHERE Press_ID = (SELECT MAX(Press_ID ) FROM book_press.book GROUP BY Press_ID ORDER BY Month_Profits_billion LIMIT 1) GROUP BY Press_ID ORDER BY Month_Profits_billion LIMIT 100000248701655988310000000000"
  },
  {
    "id": 1981,
    "db_id": "book_press",
    "question": "Find the name of the publisher whose monthly profit is the highest or the lowest.",
    "answer": "SELECT Title FROM book_press.book GROUP BY Title ORDER BY Title LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1982,
    "db_id": "book_press",
    "question": "What are the names of the press that makes the highest monthly profit or the lowest monthly profit?",
    "answer": "SELECT Title FROM book_press.book AS t INNER JOIN (SELECT MAX(Title ) AS t1 FROM book_press.book WHERE Sale_Amount = 0 LIMIT 1) AS t  ON book.Press_ID = 1 GROUP BY Title ORDER BY Month_Profits_billion , Month_Profits_billion LIMIT 2500000"
  },
  {
    "id": 1983,
    "db_id": "book_press",
    "question": "how many authors are under age 30?",
    "answer": "SELECT COUNT(Title ) FROM book_press.author WHERE Age >= 1952 ORDER BY Title LIMIT 10000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1984,
    "db_id": "book_press",
    "question": "Count the number of authors of age below 30.",
    "answer": "SELECT COUNT(Title ) FROM book_press.author WHERE Age <= 1942 LIMIT 1;"
  },
  {
    "id": 1985,
    "db_id": "book_press",
    "question": "find the average age of authors for each gender.",
    "answer": "SELECT AVG(Title ), SUM(Title ) AS avg FROM (SELECT Title , COUNT(Title ) AS num FROM book_press.author WHERE Gender = 'F' GROUP BY Age ORDER BY Age LIMIT 1) AS T GROUP BY Title , Gender ORDER BY Title , Title , Gender , Year_Profits_billion , Month"
  },
  {
    "id": 1986,
    "db_id": "book_press",
    "question": "For each gender, return gender and the average age of authors.",
    "answer": "SELECT Title , Age FROM (SELECT DISTINCT Title , AVG(Title ) AS avg_age FROM (SELECT Title , MAX(Year_Profits_billion ), MIN(Year_Profits_billion ) FROM book_press.book GROUP BY Gender ORDER BY Year_Profits_billion LIMIT 1) AS T WHERE Tit"
  },
  {
    "id": 1987,
    "db_id": "book_press",
    "question": "find the number of authors who are older than 30 for each gender.",
    "answer": "SELECT DISTINCT Title FROM (SELECT DISTINCT Title FROM (SELECT Name , SUM(Age ) AS num FROM (SELECT Title , SUM(Gender ) AS total FROM (SELECT MIN(Title ) FROM (SELECT Title FROM (SELECT DISTINCT Age \nFROM (SELECT Title , SUM(Gender ) AS total  FROM (SELECT Title FROM (SELECT Tit"
  },
  {
    "id": 1988,
    "db_id": "book_press",
    "question": "How many authors are of age above 30 for each gender?",
    "answer": "SELECT DISTINCT Title FROM (SELECT Title , COUNT(Title ) AS age , SUM(Title ) AS total FROM (SELECT DISTINCT Gender FROM book_press.author GROUP BY Title ) AS T ORDER BY Title ) AS T INNER JOIN book_press.book AS B  \n  AS C  ON Title = Book_ID LIMIT 1000"
  },
  {
    "id": 1989,
    "db_id": "book_press",
    "question": "List all book titles in the order of their release date from the most recent to the past.",
    "answer": "SELECT DISTINCT Title FROM book_press.book ORDER BY Title LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1990,
    "db_id": "book_press",
    "question": "Sort all the books in descending order of release date, and return the book titles.",
    "answer": "SELECT DISTINCT Title FROM book_press.book ORDER BY Release_date LIMIT 1 OFFSET 0"
  },
  {
    "id": 1991,
    "db_id": "book_press",
    "question": "Find the number of books for each series.",
    "answer": "SELECT SUM(Title ) FROM book_press.book WHERE Title = 1 GROUP BY Title ORDER BY Title , press.Year_Profits_billion LIMIT 20000000000000000000"
  },
  {
    "id": 1992,
    "db_id": "book_press",
    "question": "How many books does each book series have? Return the counts and book series.",
    "answer": "SELECT COUNT(Title ), Title FROM book_press.book AS T INNER JOIN book_press.book AS B  ON Title = Book_ID GROUP BY Title ORDER BY Title , Book_ID LIMIT 10000000000000000000000000000000"
  },
  {
    "id": 1993,
    "db_id": "book_press",
    "question": "Find the titles and publish dates of the top 5 best sale books.",
    "answer": "SELECT Title FROM book_press.book ORDER BY Title , Title LIMIT 50000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1994,
    "db_id": "book_press",
    "question": "What are the 5 best books in terms of sale amount? Give me their titles and release dates.",
    "answer": "SELECT DISTINCT Title FROM book_press.book ORDER BY Sale_Amount LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1995,
    "db_id": "book_press",
    "question": "Find the book series that have some book selling more than 1000 and some book less 500.",
    "answer": "SELECT DISTINCT Title FROM book_press.book AS t INNER JOIN book_press.press AS p  ON Title = press.Press_ID ORDER BY Press_ID LIMIT 1000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1996,
    "db_id": "book_press",
    "question": "Which book series contain both books with sale amount above 1000 and books with sale amount below 500?",
    "answer": "SELECT DISTINCT Title FROM book_press.book AS t INNER JOIN (SELECT Title FROM book_press.book AS t INNER JOIN book_press.press ON Title = Title ORDER BY Book_ID LIMIT 1) AS b  ON Title = book_press.book.Title ORDER BY Title LIMIT 1000 O"
  },
  {
    "id": 1997,
    "db_id": "book_press",
    "question": "Find the name of authors who publish their books in both \"MM\" and \"LT\" series.",
    "answer": "SELECT DISTINCT Title FROM book_press.book WHERE Sale_Amount = '3154860' INNER JOIN (SELECT Title FROM book_press.book AS T INNER JOIN book_press.book AS T  ON Title = 'MM/LT' GROUP BY Title ORDER BY Month_Profits_billion LIMIT 1) AS T  ON T"
  },
  {
    "id": 1998,
    "db_id": "book_press",
    "question": "Which authors publish books in both \"MM\" and \"LT\" series? Give me the author names.",
    "answer": "SELECT DISTINCT Title FROM book_press.book WHERE Year_Profits_billion = (SELECT MAX(Year_Profits_billion ) FROM book_press.book GROUP BY Year_Profits_billion ORDER BY Year_Profits_billion LIMIT 1) INNER JOIN book_press.press AS T  ON book_press.book.Book"
  },
  {
    "id": 1999,
    "db_id": "book_press",
    "question": "Find the name and age of the authors who do not have any book in the record.",
    "answer": "SELECT DISTINCT Title FROM book_press.author WHERE Author_ID = '' GROUP BY Title ORDER BY Title LIMIT 100000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 2000,
    "db_id": "book_press",
    "question": "Which authors in the record have not published any books ? Give me their names .",
    "answer": "SELECT DISTINCT Title FROM book_press.author AS T INNER JOIN book_press.book AS T  ON Title = 'TITLE' GROUP BY Title ORDER BY Title LIMIT 10000000000000000000000000000000000000000000000000"
  },
  {
    "id": 2001,
    "db_id": "book_press",
    "question": "Find the names of authors who have more than one book in the database.",
    "answer": "SELECT DISTINCT Title FROM book_press.author AS T INNER JOIN book_press.book AS T  ON Title = Title ORDER BY Title LIMIT 10000000159138276544940558926269312737557971546144258946"
  },
  {
    "id": 2002,
    "db_id": "book_press",
    "question": "Which authors have published more than 1 book according to the database? Give me their names.",
    "answer": "SELECT DISTINCT Title FROM book_press.author AS T INNER JOIN book_press.book AS T  ON Title = 'TITLE' GROUP BY Title ORDER BY Title LIMIT 10000000000000000000000000000000000000000000000000"
  },
  {
    "id": 2003,
    "db_id": "book_press",
    "question": "Find the title, author name, and publisher name for the top 3 best sales books.",
    "answer": "SELECT Title FROM book_press.book ORDER BY Press_ID LIMIT 3;"
  },
  {
    "id": 2004,
    "db_id": "book_press",
    "question": "What are the 3 best selling books? Show their titles, author names, and press names.",
    "answer": "SELECT DISTINCT Title FROM book_press.book AS T INNER JOIN (SELECT Title FROM book_press.book AS T INNER JOIN (SELECT Title FROM book_press.author AS T INNER JOIN (SELECT Title FROM book_press.author AS T WHERE Title = 'best selling books') AS T  ON Title = 'TITLE' ORDER BY Title LIMIT "
  },
  {
    "id": 2005,
    "db_id": "book_press",
    "question": "Find the name and total book sale amount of each press.",
    "answer": "SELECT Title , SUM(Title ) AS sum , Title FROM (SELECT Title , SUM(Title ) AS Total FROM book_press.book WHERE Press_ID = '6094') AS T ORDER BY Title , Title LIMIT 10000000000000000000000000000"
  },
  {
    "id": 2006,
    "db_id": "book_press",
    "question": "What are the name and total book sale amount of each press?",
    "answer": "SELECT Title FROM (SELECT DISTINCT Title , SUM(Sale_Amount ) AS total FROM (SELECT Title , SUM(Sale_Amount ) AS num FROM book_press.book GROUP BY Press_ID ORDER BY Age LIMIT 1) AS T WHERE Press_ID = 0 ORDER BY Title LIMIT 1) AS T ORDER BY Title LIMIT 256000000"
  },
  {
    "id": 2007,
    "db_id": "book_press",
    "question": "Find the number of books that are sold more than 1000 for each publisher. List the press name as well.",
    "answer": "SELECT DISTINCT Title FROM book_press.book WHERE Press_ID = '389276' GROUP BY Title ORDER BY Title LIMIT 50140000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 2008,
    "db_id": "book_press",
    "question": "For each press, return its name and the number of books that have sale amount above 1000.",
    "answer": "SELECT DISTINCT Title FROM book_press.book WHERE Press_ID = 1000 ORDER BY Sale_Amount LIMIT 10000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 2009,
    "db_id": "book_press",
    "question": "What is the name of the author of best selling book?",
    "answer": "SELECT Title FROM book_press.book AS t INNER JOIN (SELECT DISTINCT Title FROM book_press.author AS T INNER JOIN book_press.book AS T  ON Title = Title ) AS b  ON Title = Book_ID ORDER BY book.Title LIMIT 150000000000000000000"
  },
  {
    "id": 2010,
    "db_id": "book_press",
    "question": "Who wrote the best selling book? Give me the author name.",
    "answer": "SELECT Title FROM book_press.book AS T WHERE Title = 'Best selling' ORDER BY Sale_Amount LIMIT 10000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 2011,
    "db_id": "book_press",
    "question": "find the name and gender of the author who published the most books.",
    "answer": "SELECT Title FROM book_press.author AS T WHERE Title = 'Name' ORDER BY Title LIMIT 1000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 2012,
    "db_id": "book_press",
    "question": "Who wrote the largest number of books? Give me the author name and gender.",
    "answer": "SELECT Title FROM book_press.book AS t INNER JOIN (SELECT COUNT(Title ) AS N FROM book_press.book WHERE Author_ID = '4022716' GROUP BY Title , Gender ORDER BY Name LIMIT 1) AS x  ON Title = 2916537296823719411 ORDER BY N"
  },
  {
    "id": 2013,
    "db_id": "book_press",
    "question": "Find the names of the authors who did not have any book with the \"Accor\" press.",
    "answer": "SELECT DISTINCT Title FROM book_press.author AS T INNER JOIN book_press.book AS T  ON Title = 'Accor' ORDER BY Title LIMIT 1250000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 2014,
    "db_id": "book_press",
    "question": "Which authors have never published under the \"Accor\" press? Give me their names.",
    "answer": "SELECT DISTINCT Title FROM book_press.book WHERE Press_ID = 29738566410245500000 LIMIT 1950000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 2015,
    "db_id": "book_press",
    "question": "Find the name and the yearly profit in billion for press that published more than two books.",
    "answer": "SELECT Title FROM book_press.book AS T WHERE Title > (SELECT MAX(Title ) FROM book_press.book) GROUP BY Title , Year_Profits_billion ORDER BY Title LIMIT 1000000001385467320000000000000000000000"
  },
  {
    "id": 2016,
    "db_id": "book_press",
    "question": "Find the press that published more than two books, and return its name and yearly profit in billion.",
    "answer": "SELECT DISTINCT Title FROM book_press.book AS T INNER JOIN (SELECT Title FROM book_press.book AS T INNER JOIN (SELECT COUNT(Title ) AS num FROM book_press.book AS T GROUP BY Title ORDER BY Title LIMIT 2) AS t  ON Title = Title GROUP BY Title , Year_Profits_billion ORDER BY"
  },
  {
    "id": 2017,
    "db_id": "cre_Doc_Workflow",
    "question": "How many authors do we have?",
    "answer": "SELECT COUNT(other_details ) FROM (SELECT DISTINCT author_name FROM cre_Doc_Workflow.Documents GROUP BY author_name ORDER BY Ref_Staff_Roles.process_outcome_description LIMIT 1) AS T INNER JOIN (SELECT DISTINCT other_details FROM cre_Doc_Workflow.Documents WHERE document_name = 'sample_outcomes' GROUP BY author_name ORDER BY Ref_"
  },
  {
    "id": 2018,
    "db_id": "cre_Doc_Workflow",
    "question": "Show all author names.",
    "answer": "SELECT DISTINCT Authors.author_name FROM (SELECT DISTINCT Authors.staff_role_description FROM (SELECT DISTINCT staff_role_code FROM (SELECT staff_role_description FROM (SELECT DISTINCT author_name FROM (SELECT DISTINCT staff_details , author_name FROM (SELECT DISTINCT Authors.staff_details FROM (SELECT DISTINCT Documents.document"
  },
  {
    "id": 2019,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the names and other details for all authors.",
    "answer": "SELECT DISTINCT author_name , other_details FROM (SELECT DISTINCT author_name , other_details FROM (SELECT DISTINCT author_name , document_description , document_name FROM cre_Doc_Workflow.Authors GROUP BY author_name ORDER BY document_name LIMIT 1) AS T ) AS T INNER JOIN cre_Doc_Workflow.Documents AS D  ON Documents.author_name = Document"
  },
  {
    "id": 2020,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the other details for the author Addison Denesik.",
    "answer": "SELECT DISTINCT other_details FROM (SELECT DISTINCT other_details FROM (SELECT author_name , document_description FROM (SELECT DISTINCT author_name , document_description FROM (SELECT DISTINCT author_name , document_description FROM (SELECT DISTINCT document_name , document_description FROM (SELECT DISTINCT author_name , document_description FROM (SELECT DISTINCT author_name , document_description FROM (SELECT DISTINCT document_name"
  },
  {
    "id": 2021,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the number of documents.",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT document_id FROM (SELECT DISTINCT author_name FROM cre_Doc_Workflow.Documents WHERE document_description = 'Number of authors ') AS t ORDER BY Documents.document_name LIMIT 1) AS T INNER JOIN (SELECT DISTINCT COUNT(author_name ) FROM (SELECT DISTINCT author_name FROM cre_Doc_Workflow.Documents WHERE document_description = 'Number of"
  },
  {
    "id": 2022,
    "db_id": "cre_Doc_Workflow",
    "question": "Who is the author of the document with id 4?",
    "answer": "SELECT DISTINCT Documents.author_name FROM (SELECT DISTINCT Business_Processes.author_name FROM (SELECT DISTINCT Documents.document_id , Business_Processes.author_name FROM (SELECT DISTINCT Business_Processes.author_name FROM (SELECT DISTINCT Documents.author_name FROM (SELECT DISTINCT"
  },
  {
    "id": 2023,
    "db_id": "cre_Doc_Workflow",
    "question": "Who is the author of the document \"Travel to Brazil\"?",
    "answer": "SELECT DISTINCT Authors.other_details FROM (SELECT DISTINCT Authors.author_name FROM (SELECT DISTINCT Authors.other_details FROM (SELECT DISTINCT Authors.other_details FROM (SELECT DISTINCT Documents.document_id FROM (SELECT DISTINCT Documents.author_name FROM (SELECT DISTINCT Authors.other_details FROM (SELECT DISTINCT Documents.document_name FROM (SELECT"
  },
  {
    "id": 2024,
    "db_id": "cre_Doc_Workflow",
    "question": "How many documents does has the author Era Kerluke written?",
    "answer": "SELECT COUNT(Documents.document_id ) FROM (SELECT Authors.author_name , COUNT(Documents.document_id ) AS num FROM (SELECT DISTINCT Documents.author_name , Authors.document_id FROM (SELECT Authors.author_name , COUNT(Documents.document_id ) AS Num FROM (SELECT DISTINCT Documents.author_name , author_name FROM (SELECT DISTINCT Documents.author_name ,"
  },
  {
    "id": 2025,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the names and descriptions for all documents.",
    "answer": "SELECT DISTINCT author_name , document_description FROM (SELECT DISTINCT document_id FROM (SELECT DISTINCT document_id , Documents_Processes.process_outcome_code , Process_Status.process_status_description FROM cre_Doc_Workflow.Process_Outcomes AS P INNER JOIN cre_Doc_Workflow.Documents AS T  ON"
  },
  {
    "id": 2026,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the ids and names for all documents by author Bianka Cummings.",
    "answer": "SELECT DISTINCT document_id , author_name FROM (SELECT DISTINCT document_id FROM (SELECT DISTINCT author_name FROM (SELECT DISTINCT Documents.author_name FROM (SELECT DISTINCT author_name FROM (SELECT DISTINCT document_description FROM (SELECT DISTINCT document_name , document_description FROM (SELECT DISTINCT document_id FROM (SELECT DISTINCT author_name"
  },
  {
    "id": 2027,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the author name and details for the document \"Travel to China\".",
    "answer": "SELECT DISTINCT Documents.author_name , Documents.document_description FROM cre_Doc_Workflow.Documents AS T INNER JOIN cre_Doc_Workflow.Authors AS A  ON Documents.author_name = Authors.other_details ORDER BY Documents.document_id LIMIT 100000000000000000000000"
  },
  {
    "id": 2028,
    "db_id": "cre_Doc_Workflow",
    "question": "Show all author names and number of documents corresponding to each.",
    "answer": "SELECT DISTINCT Documents.author_name , COUNT(Documents.document_id ) FROM (SELECT Authors.other_details FROM (SELECT DISTINCT Authors.other_details FROM (SELECT DISTINCT author_name , COUNT(Process_Status.process_outcome_description ) AS total FROM (SELECT Process_Outcomes.process_outcome_code , COUNT(Documents.document_id ) AS num FROM (SELECT D"
  },
  {
    "id": 2029,
    "db_id": "cre_Doc_Workflow",
    "question": "What is the name of the author with most number of documents?",
    "answer": "SELECT DISTINCT Documents.document_id FROM (SELECT COUNT(author_name ) AS num FROM (SELECT DISTINCT author_name , document_description FROM (SELECT * FROM (SELECT DISTINCT author_name , document_description , document_name FROM (SELECT DISTINCT author_name , document_description , document_name FROM (SELECT * FROM (SELECT DISTINCT author_name , document_description , document_name FROM (SELECT DISTINCT"
  },
  {
    "id": 2030,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the names for authors with at least two documents.",
    "answer": "SELECT DISTINCT author_name FROM (SELECT DISTINCT Documents.author_name , COUNT(Documents.document_id ) AS num FROM (SELECT DISTINCT document_id , COUNT(Documents.author_name ) FROM (SELECT Authors.staff_role_description FROM (SELECT DISTINCT staff_role_code , staff_role_description FROM (SELECT DISTINCT Ref_Staff_Roles.staff_"
  },
  {
    "id": 2031,
    "db_id": "cre_Doc_Workflow",
    "question": "How many business processes do we have?",
    "answer": "SELECT COUNT(process_outcome_code ) FROM (SELECT DISTINCT process_outcome_description FROM cre_Doc_Workflow.Process_Outcomes GROUP BY process_outcome_description ) AS T ORDER BY Documents.other_details LIMIT 1000000000000000000000000000000000000000000"
  },
  {
    "id": 2032,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the next process id, process name, process description for process with id 9.",
    "answer": "SELECT DISTINCT Documents.process_status_code , Documents.document_description FROM (SELECT DISTINCT process_outcome_description FROM (SELECT DISTINCT process_outcome_code , Documents.process_name FROM (SELECT DISTINCT author_name FROM (SELECT DISTINCT process_status_code , Documents.document_id FROM (SELECT DISTINCT Documents.author_name FROM (SELECT DISTINCT"
  },
  {
    "id": 2033,
    "db_id": "cre_Doc_Workflow",
    "question": "What is the process name for the next process of the process with id 9?",
    "answer": "SELECT DISTINCT Documents.document_id FROM (SELECT DISTINCT process_outcome_code FROM (SELECT DISTINCT process_status_code FROM (SELECT DISTINCT Process_Status.process_outcome_description FROM (SELECT DISTINCT process_outcome_description FROM cre_Doc_Workflow.Staff AS T INNER JOIN cre_Doc_Workflow.Documents AS D  ON Documents."
  },
  {
    "id": 2034,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the number of process outcomes.",
    "answer": "SELECT COUNT(process_outcome_code ) FROM (SELECT DISTINCT process_outcome_description FROM cre_Doc_Workflow.Process_Outcomes GROUP BY process_outcome_description ) AS T ORDER BY Documents.other_details LIMIT 1000000000000000000000000000000000000000000"
  },
  {
    "id": 2035,
    "db_id": "cre_Doc_Workflow",
    "question": "List the codes and descriptions for all process outcomes.",
    "answer": "SELECT DISTINCT Documents.process_outcome_description FROM (SELECT DISTINCT Documents.document_description , Documents.process_status_description FROM (SELECT DISTINCT document_id FROM (SELECT DISTINCT process_outcome_code , Documents.other_details FROM (SELECT DISTINCT author_name FROM (SELECT DISTINCT document_description FROM (SELECT DISTINCT process_outcome_code"
  },
  {
    "id": 2036,
    "db_id": "cre_Doc_Workflow",
    "question": "What is the description for the process outcome code working?",
    "answer": "SELECT DISTINCT process_outcome_description FROM (SELECT DISTINCT process_outcome_code , process_status_description FROM (SELECT DISTINCT process_outcome_code FROM cre_Doc_Workflow.Documents GROUP BY document_id ORDER BY Documents.process_outcome_code LIMIT 1) AS T ) AS t INNER JOIN cre_Doc_Workflow.Process_Status AS P  ON Process_"
  },
  {
    "id": 2037,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the number of process status.",
    "answer": "SELECT COUNT(process_status_code ) FROM (SELECT DISTINCT process_outcome_description , process_status_code FROM (SELECT DISTINCT process_outcome_description , process_status_code FROM (SELECT DISTINCT process_outcome_description , process_status_code FROM (SELECT DISTINCT process_outcome_description , process_status_code FROM (SELECT DISTINCT process_outcome_description , process_"
  },
  {
    "id": 2038,
    "db_id": "cre_Doc_Workflow",
    "question": "List the codes and descriptions for all process status.",
    "answer": "SELECT DISTINCT process_outcome_description , process_status_code FROM (SELECT DISTINCT process_outcome_description , process_status_code FROM (SELECT DISTINCT process_outcome_description , process_status_code FROM (SELECT DISTINCT process_outcome_description , process_status_code FROM (SELECT DISTINCT process_outcome_description , process_status_code FROM (SELECT DISTINCT process_"
  },
  {
    "id": 2039,
    "db_id": "cre_Doc_Workflow",
    "question": "What is the description for process status code ct?",
    "answer": "SELECT DISTINCT process_status_description FROM (SELECT DISTINCT process_outcome_description FROM (SELECT process_outcome_code FROM (SELECT DISTINCT process_outcome_description FROM (SELECT process_outcome_code , SUM(other_details ) AS num FROM (SELECT DISTINCT other_details FROM (SELECT DISTINCT document_id FROM (SELECT DISTINCT author_name FROM (SELECT DIST"
  },
  {
    "id": 2040,
    "db_id": "cre_Doc_Workflow",
    "question": "How many staff do we have?",
    "answer": "SELECT COUNT(staff_id ) FROM (SELECT DISTINCT staff_details FROM cre_Doc_Workflow.Staff WHERE process_outcome_code = 'RECAPTURE') AS T ORDER BY staff_id LIMIT 100000000000000000000000000000000000000000000"
  },
  {
    "id": 2041,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the ids and details for all staff.",
    "answer": "SELECT DISTINCT staff_id , staff_details FROM (SELECT DISTINCT Staff.staff_id , staff_details FROM (SELECT DISTINCT Authors.author_name , author_name FROM (SELECT DISTINCT Documents.author_name , document_name FROM (SELECT DISTINCT Process_Outcomes.process_outcome_code FROM (SELECT DISTINCT Process_Status.process_status_code FROM ("
  },
  {
    "id": 2042,
    "db_id": "cre_Doc_Workflow",
    "question": "What are the details for the staff member with id 100.",
    "answer": "SELECT DISTINCT staff_details FROM (SELECT DISTINCT staff_details FROM cre_Doc_Workflow.Staff WHERE staff_id = 100) AS T WHERE staff_id = 100 LIMIT 364285691147237310000000000000000000000000000"
  },
  {
    "id": 2043,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the number of staff roles.",
    "answer": "SELECT COUNT(staff_role_code ) FROM (SELECT DISTINCT staff_role_description FROM (SELECT DISTINCT staff_role_description FROM (SELECT DISTINCT author_name , other_details FROM (SELECT DISTINCT process_outcome_code , process_status_code , process_outcome_description FROM (SELECT DISTINCT process_outcome_description FROM (SELECT DISTINCT process_outcome_code , process_status"
  },
  {
    "id": 2044,
    "db_id": "cre_Doc_Workflow",
    "question": "List the codes and descriptions for all staff roles.",
    "answer": "SELECT DISTINCT Documents.document_description FROM (SELECT DISTINCT author_name , Documents.document_id FROM (SELECT DISTINCT Documents.document_name , Documents.document_description FROM (SELECT DISTINCT Ref_Staff_Roles.staff_role_description FROM (SELECT DISTINCT Ref_Staff_Roles.staff_role_code , Documents.author_"
  },
  {
    "id": 2045,
    "db_id": "cre_Doc_Workflow",
    "question": "What is the description for staff role code HR?",
    "answer": "SELECT DISTINCT Documents.document_description FROM (SELECT DISTINCT author_name FROM cre_Doc_Workflow.Documents WHERE document_id = 'HR') AS T ORDER BY author_name LIMIT 100000000000000000000000000000000000000000000000000"
  },
  {
    "id": 2046,
    "db_id": "cre_Doc_Workflow",
    "question": "How many documents have a process?",
    "answer": "SELECT COUNT(Documents.document_id ) FROM (SELECT DISTINCT Documents.document_name , document_description FROM (SELECT DISTINCT document_name , document_description FROM cre_Doc_Workflow.Documents ORDER BY document_name , document_description LIMIT 1) AS T GROUP BY Documents.document_name ) AS A ORDER BY Authors.author_name LIMIT 300000000"
  },
  {
    "id": 2047,
    "db_id": "cre_Doc_Workflow",
    "question": "List all process ids with a document.",
    "answer": "SELECT DISTINCT Documents.process_outcome_code FROM (SELECT DISTINCT process_outcome_description FROM cre_Doc_Workflow.Process_Status WHERE document_name = 'Document1') AS T INNER JOIN cre_Doc_Workflow.Process_Outcomes AS T  ON Documents.process_outcome_code = \n(SELECT DISTINCT Process_Outcomes.process_outcome_description FROM "
  },
  {
    "id": 2048,
    "db_id": "cre_Doc_Workflow",
    "question": "Show all document ids without a process.",
    "answer": "SELECT DISTINCT document_id FROM cre_Doc_Workflow.Staff ORDER BY staff_details LIMIT 10000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 2049,
    "db_id": "cre_Doc_Workflow",
    "question": "List all process ids with no document.",
    "answer": "SELECT DISTINCT process_outcome_code FROM (SELECT DISTINCT process_outcome_description FROM (SELECT DISTINCT process_outcome_description FROM (SELECT DISTINCT process_outcome_description FROM (SELECT DISTINCT author_name FROM (SELECT DISTINCT document_id FROM (SELECT DISTINCT document_description FROM (SELECT DISTINCT other_details FROM (SELECT DISTINCT process_status_code FROM"
  },
  {
    "id": 2050,
    "db_id": "cre_Doc_Workflow",
    "question": "What is the process outcome description and process status description for the document with id 0?",
    "answer": "SELECT DISTINCT process_outcome_description , process_status_description FROM (SELECT DISTINCT Documents.document_name , Process_Outcomes.process_outcome_code , process_outcome_description FROM (SELECT DISTINCT Documents.document_name , Authors.other_details , Process_Status.process_status_code , Documents.document_id FROM (SELECT DISTINCT Documents.document_"
  },
  {
    "id": 2051,
    "db_id": "cre_Doc_Workflow",
    "question": "What is the process name for the document \"Travel to Brazil\"?",
    "answer": "SELECT DISTINCT process_outcome_description FROM cre_Doc_Workflow.Process_Status WHERE process_status_code = 'BRA' GROUP BY process_outcome_description ORDER BY Ref_Staff_Roles.process_outcome_description LIMIT 100000000000000000000000000000000000000"
  },
  {
    "id": 2052,
    "db_id": "cre_Doc_Workflow",
    "question": "Show all process ids and the number of documents in each process.",
    "answer": "SELECT DISTINCT Process_Outcomes.process_outcome_code , SUM(Process_Status.process_status_code ) AS total FROM (SELECT DISTINCT Process_Outcomes.process_outcome_code , COUNT(Process_Outcomes.process_outcome_description ) FROM (SELECT Process_Status.process_status_code , COUNT(Process_Status.staff_role_description ) AS total FROM (SELECT D"
  },
  {
    "id": 2053,
    "db_id": "cre_Doc_Workflow",
    "question": "How many staff are the document with id 0 and process with id 9.",
    "answer": "SELECT COUNT(document_id ) FROM (SELECT DISTINCT document_id , Process_Status.process_outcome_code FROM (SELECT DISTINCT author_name , Process_Status.process_status_code FROM (SELECT document_id , Process_Status.process_status_description FROM (SELECT DISTINCT process_outcome_code , document_description FROM (SELECT DISTINCT document_id , document_name"
  },
  {
    "id": 2054,
    "db_id": "cre_Doc_Workflow",
    "question": "Show all staff ids and the number of document processes for each staff.",
    "answer": "SELECT DISTINCT author_name , COUNT(document_id ) FROM (SELECT DISTINCT author_name , COUNT(document_id ) AS num FROM (SELECT DISTINCT Documents.author_name , COUNT(Documents.document_description ) AS num FROM (SELECT DISTINCT Documents.author_name , Documents.document_id FROM (SELECT DISTINCT Authors.other_details , Documents.document_id FROM (SELECT D"
  },
  {
    "id": 2055,
    "db_id": "cre_Doc_Workflow",
    "question": "Show all staff role codes and the number of document processes for each role.",
    "answer": "SELECT DISTINCT staff_role_description , COUNT(staff_role_code ) FROM (SELECT DISTINCT staff_role_description , COUNT(staff_role_code ) AS num FROM (SELECT DISTINCT author_name FROM (SELECT DISTINCT staff_details FROM cre_Doc_Workflow.Staff ORDER BY process_outcome_description LIMIT 1)) GROUP BY staff_role_description ) AS T ORDER BY staff"
  },
  {
    "id": 2056,
    "db_id": "cre_Doc_Workflow",
    "question": "How many different roles does the staff with id 3 have?",
    "answer": "SELECT COUNT(staff_role_code ) FROM (SELECT DISTINCT staff_role_description FROM (SELECT DISTINCT author_name , COUNT(staff_role_description ) AS count FROM (SELECT DISTINCT staff_role_description FROM (SELECT DISTINCT staff_role_description FROM (SELECT DISTINCT author_name , COUNT(author_name ) AS count FROM (SELECT DISTINCT staff_role_description FROM"
  },
  {
    "id": 2057,
    "db_id": "advertising_agencies",
    "question": "How many agencies do we have?",
    "answer": "SELECT COUNT(agency_id ) FROM (SELECT DISTINCT agency_details FROM advertising_agencies.Staff WHERE agency_details = 'Select' LIMIT 1) AS T GROUP BY agency_details ORDER BY Meetings"
  },
  {
    "id": 2058,
    "db_id": "advertising_agencies",
    "question": "Count the number of agencies.",
    "answer": "SELECT COUNT(agency_id ) FROM (SELECT DISTINCT agency_details FROM (SELECT DISTINCT agency_id , SUM(sic_code ) AS num FROM (SELECT agency_id , SUM(sic_code ) FROM (SELECT DIST"
  },
  {
    "id": 2059,
    "db_id": "advertising_agencies",
    "question": "Show all agency ids and details.",
    "answer": "SELECT DISTINCT agency_details FROM (SELECT DISTINCT agency_details FROM (SELECT DISTINCT agency_id , staff_details FROM (SELECT DISTINCT staff_details FROM (SELECT DISTINCT client_id , meeting_outcome FROM"
  },
  {
    "id": 2060,
    "db_id": "advertising_agencies",
    "question": "What are all the agency ids and details?",
    "answer": "SELECT DISTINCT agency_details FROM (SELECT DISTINCT agency_details FROM (SELECT DISTINCT agency_details FROM (SELECT DISTINCT client_id , sic_code FROM (SELECT DISTINCT agenc"
  },
  {
    "id": 2061,
    "db_id": "advertising_agencies",
    "question": "Show the number of clients.",
    "answer": "SELECT COUNT(client_id ) FROM (SELECT DISTINCT client_id FROM (SELECT DISTINCT agency_id , COUNT(client_id ) AS num FROM (SELECT DISTINCT agency_details FROM (SELECT DISTINCT staff_details FROM (SELECT DIST"
  },
  {
    "id": 2062,
    "db_id": "advertising_agencies",
    "question": "How many clients are there?",
    "answer": "SELECT COUNT(client_id ) FROM (SELECT DISTINCT client_id FROM (SELECT DISTINCT agency_id , COUNT(client_id ) AS num FROM (SELECT DISTINCT agency_details FROM (SELECT DISTINCT staff_details FROM (SELECT DIST"
  },
  {
    "id": 2063,
    "db_id": "advertising_agencies",
    "question": "List all client ids and client details.",
    "answer": "SELECT DISTINCT client_details FROM (SELECT DISTINCT client_id , staff_details FROM (SELECT DISTINCT client_id , staff_details FROM (SELECT DISTINCT staff_id FROM (SELECT DISTINCT agency_details FROM (SELECT DISTINCT ag"
  },
  {
    "id": 2064,
    "db_id": "advertising_agencies",
    "question": "What are all the client ids and details?",
    "answer": "SELECT DISTINCT Clients.client_details FROM (SELECT DISTINCT agency_details FROM (SELECT DISTINCT Agencies.agency_id , SUM(Payments.payment_id ) AS sum FROM (SELECT DISTINCT payment_"
  },
  {
    "id": 2065,
    "db_id": "advertising_agencies",
    "question": "Show agency ids and the number of clients for each agency.",
    "answer": "SELECT DISTINCT Agencies.agency_id , COUNT(Clients.client_id ) FROM (SELECT DISTINCT Agencies.agency_id , COUNT(Staff_in_Meetings.staff_id ) AS"
  },
  {
    "id": 2066,
    "db_id": "advertising_agencies",
    "question": "How many clients does each agency have?",
    "answer": "SELECT SUM(invoice_details ), COUNT(client_id ) FROM (SELECT DISTINCT invoice_details , COUNT(client_id ) FROM (SELECT agency_details FROM (SELECT DISTINCT agency_details  FROM ("
  },
  {
    "id": 2067,
    "db_id": "advertising_agencies",
    "question": "What is the agency id and details with most number of clients?",
    "answer": "SELECT DISTINCT agency_details FROM (SELECT DISTINCT agency_details , SUM(invoice_status ) AS total FROM (SELECT COUNT(client_id ), SUM(invoice_status ), client_details FROM (SELECT DIST"
  },
  {
    "id": 2068,
    "db_id": "advertising_agencies",
    "question": "Return the agency id and details for the agency with the greatest number of clients.",
    "answer": "SELECT DISTINCT agency_details FROM (SELECT MAX(agency_details ), agency_id FROM (SELECT DISTINCT agency_details FROM (SELECT COUNT(client_id ) AS num , agency_id FROM ("
  },
  {
    "id": 2069,
    "db_id": "advertising_agencies",
    "question": "Show agency ids and details with at least 2 clients.",
    "answer": "SELECT DISTINCT agency_details FROM (SELECT DISTINCT agency_details , SUM(billable_yn ) AS num FROM (SELECT DISTINCT client_id , COUNT(client_details ) AS num FROM (SELECT DISTINCT staff_"
  },
  {
    "id": 2070,
    "db_id": "advertising_agencies",
    "question": "What are the agency ids and details agencies with at least 2 clients?",
    "answer": "SELECT DISTINCT agency_details FROM (SELECT DISTINCT agency_details FROM (SELECT COUNT(client_id ) AS num FROM (SELECT DISTINCT client_id , SUM(billable_yn ) AS total FROM"
  },
  {
    "id": 2071,
    "db_id": "advertising_agencies",
    "question": "Show agency details for client with detail 'Mac'.",
    "answer": "SELECT DISTINCT staff_details FROM (SELECT DISTINCT agency_id , staff_details FROM (SELECT DISTINCT staff_id FROM (SELECT DISTINCT staff_id FROM (SELECT DISTINCT agency_details FROM (SELECT"
  },
  {
    "id": 2072,
    "db_id": "advertising_agencies",
    "question": "What are the agency details for clients with the detail Mac?",
    "answer": "SELECT DISTINCT staff_details FROM (SELECT DISTINCT staff_id FROM (SELECT DISTINCT staff_id FROM (SELECT DISTINCT client_id , SUM(client_details ) AS total FROM (SELECT DISTINCT ag"
  },
  {
    "id": 2073,
    "db_id": "advertising_agencies",
    "question": "Show details for all clients and the details of their corresponding agents.",
    "answer": "SELECT DISTINCT invoice_details FROM (SELECT DISTINCT client_details , agency_id FROM (SELECT DISTINCT agency_id , staff_id FROM (SELECT DISTINCT client_id , staff_id FROM (SELECT agency_"
  },
  {
    "id": 2074,
    "db_id": "advertising_agencies",
    "question": "What are the client details for each client and the corresponding details of their agencies?",
    "answer": "SELECT DISTINCT staff_details FROM (SELECT DISTINCT agency_id , SUM(staff_details ) AS sum FROM (SELECT DISTINCT agency_id FROM (SELECT agency_details FROM (SELECT DIST"
  },
  {
    "id": 2075,
    "db_id": "advertising_agencies",
    "question": "Show all sic codes and the number of clients with each code.",
    "answer": "SELECT DISTINCT sic_code , COUNT(client_details ) FROM (SELECT DISTINCT client_details FROM (SELECT DISTINCT agency_id , SUM(client_details ) AS count FROM (SELECT DISTINCT agency_id ,"
  },
  {
    "id": 2076,
    "db_id": "advertising_agencies",
    "question": "How many clients are there for each sic code?",
    "answer": "SELECT COUNT(client_id ) FROM (SELECT DISTINCT client_id , SUM(sic_code ) AS sum FROM (SELECT DISTINCT sic_code FROM (SELECT DISTINCT sic_code FROM (SELECT DISTINCT Clients"
  },
  {
    "id": 2077,
    "db_id": "advertising_agencies",
    "question": "Show all client ids and details with sic code \"Bad\".",
    "answer": "SELECT DISTINCT client_details FROM (SELECT DISTINCT client_id , client_details FROM (SELECT DISTINCT client_details FROM (SELECT DISTINCT sic_code FROM (SELECT DISTINCT client_id ,"
  },
  {
    "id": 2078,
    "db_id": "advertising_agencies",
    "question": "What are the client ideas and details for clients with the sic code Bad?",
    "answer": "SELECT DISTINCT client_details FROM (SELECT DISTINCT client_details , client_id FROM (SELECT DISTINCT client_id FROM (SELECT DISTINCT sic_code FROM (SELECT DISTINCT sic_code"
  },
  {
    "id": 2079,
    "db_id": "advertising_agencies",
    "question": "Show all agency ids and details for agencies with a client.",
    "answer": "SELECT DISTINCT agency_details FROM (SELECT DISTINCT agency_details FROM (SELECT DISTINCT agency_id , staff_details FROM (SELECT DISTINCT staff_details FROM (SELECT DISTINCT client_details"
  },
  {
    "id": 2080,
    "db_id": "advertising_agencies",
    "question": "What are the agency ids and agency details for all agencies who have a client?",
    "answer": "SELECT DISTINCT agency_details FROM (SELECT DISTINCT agency_details FROM (SELECT DISTINCT agency_id , agency_details FROM (SELECT DISTINCT staff_id , agency"
  },
  {
    "id": 2081,
    "db_id": "advertising_agencies",
    "question": "Show all agency ids without any client.",
    "answer": "SELECT DISTINCT agency_id FROM (SELECT DISTINCT agency_details FROM (SELECT DISTINCT agency_id FROM (SELECT DISTINCT agency_details FROM (SELECT DISTINCT staff_id FROM (SELECT DISTINCT client_"
  },
  {
    "id": 2082,
    "db_id": "advertising_agencies",
    "question": "What are ids of agencies that do not have any clients?",
    "answer": "SELECT DISTINCT agency_details FROM (SELECT DISTINCT agency_details FROM (SELECT DISTINCT client_id FROM (SELECT DISTINCT agency_id FROM (SELECT agency_details FROM (SELECT DISTINCT"
  },
  {
    "id": 2083,
    "db_id": "advertising_agencies",
    "question": "How many invoices do we have?",
    "answer": "SELECT COUNT(invoice_id ) FROM (SELECT DISTINCT invoice_details FROM (SELECT DISTINCT client_id , invoice_status , invoice_details FROM (SELECT DISTINCT client_id , invoice_details FROM (SELECT D"
  },
  {
    "id": 2084,
    "db_id": "advertising_agencies",
    "question": "Count the number of invoices.",
    "answer": "SELECT COUNT(invoice_id ) FROM (SELECT DISTINCT invoice_details FROM (SELECT DISTINCT invoice_id , SUM(billable_yn ) AS total FROM (SELECT client_id , SUM(billable_yn ), SUM(s"
  },
  {
    "id": 2085,
    "db_id": "advertising_agencies",
    "question": "Show ids, status codes, and details for all invoices for clients.",
    "answer": "SELECT DISTINCT client_details FROM (SELECT DISTINCT client_details , SUM(invoice_status ) AS total , SUM(invoice_details ) AS total FROM (SELECT DISTINCT staff_id FROM (SELECT DIST"
  },
  {
    "id": 2086,
    "db_id": "advertising_agencies",
    "question": "What are the ids, statuses, and details for all invoices?",
    "answer": "SELECT DISTINCT invoice_details FROM (SELECT DISTINCT invoice_details FROM (SELECT DISTINCT invoice_id , SUM(billable_yn ) AS total_invoices , SUM(billable_"
  },
  {
    "id": 2087,
    "db_id": "advertising_agencies",
    "question": "Show all client ids and the number of invoices for each client.",
    "answer": "SELECT DISTINCT client_id , COUNT(client_id ) FROM (SELECT DISTINCT client_id FROM (SELECT DISTINCT client_id FROM (SELECT DISTINCT agency_id FROM (SELECT DISTINCT Staff"
  },
  {
    "id": 2088,
    "db_id": "advertising_agencies",
    "question": "How many invoices are there for each client id?",
    "answer": "SELECT SUM(Invoices.invoice_details ) FROM (SELECT DISTINCT agency_details FROM (SELECT DISTINCT agency_id , SUM(staff_details ) AS num FROM (SELECT DISTINCT Staff_in_Meetings"
  },
  {
    "id": 2089,
    "db_id": "advertising_agencies",
    "question": "List the client id and detail with most number of invoices.",
    "answer": "SELECT DISTINCT staff_id FROM (SELECT MAX(invoice_details ), SUM(invoice_details ) AS num FROM (SELECT DISTINCT invoice_details , client_details FROM (SELECT DISTINCT agency_id , sic"
  },
  {
    "id": 2090,
    "db_id": "advertising_agencies",
    "question": "What are the client id and details for the client with the most invoices?",
    "answer": "SELECT DISTINCT staff_details FROM (SELECT DISTINCT client_id FROM (SELECT MAX(client_details ) AS staff_details , SUM(invoice_status ), SUM(staff_details ) AS total FROM ("
  },
  {
    "id": 2091,
    "db_id": "advertising_agencies",
    "question": "What are client ids for clients with at least 2 invoices.",
    "answer": "SELECT DISTINCT Clients.client_details FROM (SELECT DISTINCT Agencies.agency_details FROM (SELECT DISTINCT Staff.staff_id , SUM(Clients.sic_code ) AS num1"
  },
  {
    "id": 2092,
    "db_id": "advertising_agencies",
    "question": "Return the client ids for clients with two or more invoices?",
    "answer": "SELECT DISTINCT Clients.client_details FROM (SELECT DISTINCT SUM(Clients.sic_code ) AS T1 , SUM(Staff_in_Meetings.payment_id ) AS total FROM ("
  },
  {
    "id": 2093,
    "db_id": "advertising_agencies",
    "question": "Show all invoice status codes and the number of invoices with each status.",
    "answer": "SELECT SUM(invoice_status ) FROM (SELECT DISTINCT sic_code , COUNT(client_id ) AS num FROM (SELECT DISTINCT client_id FROM (SELECT DISTINCT agency_details FROM ("
  },
  {
    "id": 2094,
    "db_id": "advertising_agencies",
    "question": "How many invoices are there for each status code?",
    "answer": "SELECT SUM(Invoices.invoice_status ) FROM (SELECT DISTINCT invoice_details , COUNT(Invoices.client_id ) AS num FROM (SELECT Invoices.client_details , COUNT(Staff_in_Meet"
  },
  {
    "id": 2095,
    "db_id": "advertising_agencies",
    "question": "What is the invoice status code with most number of invoices.",
    "answer": "SELECT MAX(invoice_status ) FROM (SELECT DISTINCT invoice_id , COUNT(invoice_details ) AS num FROM (SELECT DISTINCT invoice_id , invoice_details FROM (SELECT COUNT(client_id )"
  },
  {
    "id": 2096,
    "db_id": "advertising_agencies",
    "question": "Return the invoice status that has the most invoices.",
    "answer": "SELECT COUNT(invoice_status ) FROM (SELECT DISTINCT invoice_details , COUNT(client_id ) AS num FROM (SELECT DISTINCT invoice_details , client_details FROM (SELECT DISTINCT client_details FROM ("
  },
  {
    "id": 2097,
    "db_id": "advertising_agencies",
    "question": "Show all invoice status codes and details and the corresponding client id and details and agency id and details.",
    "answer": "SELECT DISTINCT client_details FROM (SELECT DISTINCT client_id , sic_code , agency_id , invoice_status , invoice_details FROM (SELECT DISTINCT client"
  },
  {
    "id": 2098,
    "db_id": "advertising_agencies",
    "question": "What are the invoice status, invoice details, and corresponding client ids and details and agency id and details?",
    "answer": "SELECT DISTINCT client_details FROM (SELECT DISTINCT client_id , client_details FROM (SELECT DISTINCT staff_id , invoice_status FROM (SELECT invoice"
  },
  {
    "id": 2099,
    "db_id": "advertising_agencies",
    "question": "List all meeting type codes and details.",
    "answer": "SELECT DISTINCT invoice_details FROM (SELECT DISTINCT invoice_id , meeting_type , meeting_outcome , meeting_type FROM (SELECT DISTINCT invoice_id FROM (SELECT DISTINCT meeting_type FROM (SELECT invoice_details FROM"
  },
  {
    "id": 2100,
    "db_id": "advertising_agencies",
    "question": "What are all meeting types and other details?",
    "answer": "SELECT DISTINCT meeting_type , other_details FROM (SELECT DISTINCT MIN(meeting_type ) AS TYPE , SUM(other_details ) AS sum FROM (SELECT DISTINCT MIN(staff_id ), SUM(client_"
  },
  {
    "id": 2101,
    "db_id": "advertising_agencies",
    "question": "Show all meeting outcomes and purposes.",
    "answer": "SELECT SUM(Meetings.purpose_of_meeting ), SUM(Staff.client_details ) FROM (SELECT SUM(invoice_details ) AS sum , SUM(Invoices.invoice_status ) AS status FROM (SELECT DISTINCT meeting_outcome"
  },
  {
    "id": 2102,
    "db_id": "advertising_agencies",
    "question": "What are all meeting outcomes and purposes?",
    "answer": "SELECT SUM(billable_yn ) AS sum FROM (SELECT DISTINCT meeting_outcome , meeting_type FROM (SELECT DISTINCT invoice_status , invoice_details , meeting_id FROM (SELECT DISTINCT client_details , meeting"
  },
  {
    "id": 2103,
    "db_id": "advertising_agencies",
    "question": "Show all payment ids and details for invoices whose status is 'Working'.",
    "answer": "SELECT DISTINCT purpose_of_meeting FROM (SELECT MAX(payment_details ) AS payments FROM (SELECT payment_id , SUM(payment_details ), invoice_status , meeting_outcome , meeting"
  },
  {
    "id": 2104,
    "db_id": "advertising_agencies",
    "question": "What are all payment ids and payment details for invoices with status Working?",
    "answer": "SELECT DISTINCT payment_details FROM (SELECT SUM(payment_id ), SUM(payment_details ) AS total FROM (SELECT COUNT(invoice_id ), SUM(payment_id ) AS num FROM (SELECT DISTINCT client_id"
  },
  {
    "id": 2105,
    "db_id": "advertising_agencies",
    "question": "Show all invoice ids and statuses without a payment.",
    "answer": "SELECT DISTINCT invoice_id FROM (SELECT DISTINCT invoice_details FROM (SELECT DISTINCT client_id , invoice_status FROM (SELECT DISTINCT invoice_id , invoice_details FROM (SELECT DISTINCT"
  },
  {
    "id": 2106,
    "db_id": "advertising_agencies",
    "question": "What are the invoice ids and statuses for invoices without a payment?",
    "answer": "SELECT DISTINCT invoice_id FROM (SELECT DISTINCT invoice_id , staff_details FROM (SELECT DISTINCT client_details FROM (SELECT DISTINCT billable_yn FROM (SELECT DISTINCT in"
  },
  {
    "id": 2107,
    "db_id": "advertising_agencies",
    "question": "How many payments do we have?",
    "answer": "SELECT COUNT(payment_details ) FROM (SELECT payment_details FROM (SELECT DISTINCT payment_id FROM (SELECT payment_id , payment_details FROM (SELECT invoice_id FROM (SELECT client_id , invoice_status , payment_id FROM (SELECT"
  },
  {
    "id": 2108,
    "db_id": "advertising_agencies",
    "question": "Count the number of payments.",
    "answer": "SELECT COUNT(Payments.payment_id ) FROM (SELECT DISTINCT payment_id FROM (SELECT Payments.invoice_id , SUM(Payments.payment_details ), SUM(Invoices.client_details ), SUM(Meetings"
  },
  {
    "id": 2109,
    "db_id": "advertising_agencies",
    "question": "List all payment ids and its corresponding invoice ids and details.",
    "answer": "SELECT DISTINCT payment_id , payment_details FROM (SELECT DISTINCT payment_id , payment_details FROM (SELECT DISTINCT staff_id , invoice_id , invoice_details FROM (SELECT"
  },
  {
    "id": 2110,
    "db_id": "advertising_agencies",
    "question": "What are the payment ids, invoice ids, and payment details for all payments?",
    "answer": "SELECT DISTINCT payment_id , invoice_details FROM (SELECT payment_id , SUM(invoice_details ) AS sum FROM (SELECT invoice_id , SUM(billable_yn ), SUM(client_"
  },
  {
    "id": 2111,
    "db_id": "advertising_agencies",
    "question": "Show all the different invoice ids and statuses of the payments",
    "answer": "SELECT DISTINCT purpose_of_meeting FROM (SELECT DISTINCT payment_details , payment_id FROM (SELECT DISTINCT payment_details , payment_id FROM (SELECT Payments.invoice_id FROM"
  },
  {
    "id": 2112,
    "db_id": "advertising_agencies",
    "question": "What are the distinct invoice ids and statuses for all payments?",
    "answer": "SELECT DISTINCT payment_details FROM (SELECT SUM(payment_id ) AS pId , SUM(payment_details ) AS PID , SUM(payment_details ) AS PNM FROM (SELECT Payments.payment_id , Pay"
  },
  {
    "id": 2113,
    "db_id": "advertising_agencies",
    "question": "Show all invoice ids and the number of payments for each invoice.",
    "answer": "SELECT DISTINCT invoice_id , SUM(payment_details ) AS payments_total FROM (SELECT DISTINCT invoice_id , COUNT(payment_details ) FROM (SELECT invoice_id , payment_details FROM (SELECT"
  },
  {
    "id": 2114,
    "db_id": "advertising_agencies",
    "question": "How many payments are there for each invoice?",
    "answer": "SELECT SUM(invoice_details ) FROM (SELECT DISTINCT payment_details FROM (SELECT DISTINCT payment_id , invoice_status , invoice_details FROM (SELECT DISTINCT payment_id , invoice_details , agency_"
  },
  {
    "id": 2115,
    "db_id": "advertising_agencies",
    "question": "What is the invoice id, status code, and details for the invoice with most number of payments.",
    "answer": "SELECT DISTINCT payment_details FROM (SELECT MAX(invoice_details ), SUM(payment_details ) AS num FROM (SELECT payment_id , SUM(payment_details ) AS sum FROM (SELECT"
  },
  {
    "id": 2116,
    "db_id": "advertising_agencies",
    "question": "Return the invoice ids, statuses, and details for invoices with the most payments?",
    "answer": "SELECT MAX(payment_details ), SUM(invoice_status ) FROM (SELECT MAX(invoice_details ) AS result , COUNT(client_id ) AS num FROM (SELECT client_details , COUNT(*) AS num"
  },
  {
    "id": 2117,
    "db_id": "advertising_agencies",
    "question": "How many staff do we have?",
    "answer": "SELECT COUNT(agency_details ) FROM (SELECT DISTINCT agency_id , COUNT(staff_id ) AS num FROM (SELECT DISTINCT agency_details FROM (SELECT DISTINCT staff_id FROM (SELECT DISTINCT staff_id FROM (SELECT"
  },
  {
    "id": 2118,
    "db_id": "advertising_agencies",
    "question": "Count the number of staff.",
    "answer": "SELECT COUNT(agency_details ) FROM (SELECT DISTINCT agency_id , SUM(staff_details ) AS num FROM (SELECT DISTINCT agency_id , SUM(staff_details ) AS num FROM (SELECT DISTINCT staff_details FROM (SELECT"
  },
  {
    "id": 2119,
    "db_id": "advertising_agencies",
    "question": "Show the agency ids and the number of staff in each agent?",
    "answer": "SELECT DISTINCT agency_details FROM (SELECT DISTINCT agency_details , COUNT(staff_id ) AS num FROM (SELECT DISTINCT agency_id , SUM(client_details ) AS num FROM (SELECT *"
  },
  {
    "id": 2120,
    "db_id": "advertising_agencies",
    "question": "Return the agency ids and number of staff in each.",
    "answer": "SELECT DISTINCT agency_details FROM (SELECT DISTINCT agency_details , COUNT(staff_id ) AS num FROM (SELECT DISTINCT client_id , COUNT(*) AS num FROM (SELECT DISTINCT client_id FROM"
  },
  {
    "id": 2121,
    "db_id": "advertising_agencies",
    "question": "What is the agent id and details for the agency with most staff?",
    "answer": "SELECT DISTINCT staff_details FROM (SELECT DISTINCT agency_id , staff_details FROM (SELECT DISTINCT agency_id , staff_details FROM (SELECT DISTINCT agency_id , staff_details FROM"
  },
  {
    "id": 2122,
    "db_id": "advertising_agencies",
    "question": "Return the id and detail for the agency with the most staff.",
    "answer": "SELECT DISTINCT invoice_details FROM (SELECT DISTINCT invoice_id , client_details FROM (SELECT MAX(invoice_details ) AS id , client_details FROM (SELECT invoice_id , COUNT(staff_id"
  },
  {
    "id": 2123,
    "db_id": "advertising_agencies",
    "question": "Show meeting outcome codes and the number of meeting in each outcome.",
    "answer": "SELECT SUM(Meetings.meeting_outcome ), COUNT(Meetings.invoice_id ) FROM (SELECT DISTINCT MIN(Meetings.start_date_time ), MAX(Meetings.end_date_"
  },
  {
    "id": 2124,
    "db_id": "advertising_agencies",
    "question": "How many meetings had each meeting outcome?",
    "answer": "SELECT SUM(Meetings.meeting_outcome ) AS total FROM (SELECT DISTINCT COUNT(Meetings.invoice_id ), Meetings.start_date_time , Meetings.end_date_time FROM (SELECT * FROM ("
  },
  {
    "id": 2125,
    "db_id": "advertising_agencies",
    "question": "List the client ids and the number of meeting for each client.",
    "answer": "SELECT DISTINCT client_id , SUM(meeting_outcome ) FROM (SELECT DISTINCT client_id , COUNT(client_details ) AS num FROM (SELECT DISTINCT client_id , client_details FROM"
  },
  {
    "id": 2126,
    "db_id": "advertising_agencies",
    "question": "How many meetings are there for each client id?",
    "answer": "SELECT SUM(Meetings.meeting_id ) FROM (SELECT DISTINCT client_id FROM (SELECT DISTINCT client_id FROM (SELECT DISTINCT agency_id FROM (SELECT DISTINCT Agencies.agency_details ,"
  },
  {
    "id": 2127,
    "db_id": "advertising_agencies",
    "question": "Show the meeting type codes and the number of meeting for each client.",
    "answer": "SELECT SUM(Meetings.meeting_type ), SUM(Meetings.client_details ) FROM (SELECT DISTINCT MIN(Meetings.meeting_type ) AS x , COUNT(Clients.client_details )"
  },
  {
    "id": 2128,
    "db_id": "advertising_agencies",
    "question": "How many meetings are there for each meeting type?",
    "answer": "SELECT SUM(Invoices.invoice_details ) FROM (SELECT DISTINCT SUM(invoice_details ) AS total FROM (SELECT invoice_status , SUM(billable_yn ), SUM(start_date_time ) AS end_"
  },
  {
    "id": 2129,
    "db_id": "advertising_agencies",
    "question": "Show all meeting ids, meeting outcomes, meeting types and the details of the client atttending it.",
    "answer": "SELECT DISTINCT meeting_id FROM (SELECT DISTINCT meeting_id FROM (SELECT DISTINCT client_details FROM (SELECT DISTINCT agency_id FROM (SELECT agency_id FROM"
  },
  {
    "id": 2130,
    "db_id": "advertising_agencies",
    "question": "What are the meeting ids, meeting outcomes, meeting types, and client details for all meetings?",
    "answer": "SELECT DISTINCT meeting_id , meeting_outcome , meeting_type , staff_details FROM (SELECT DISTINCT staff_id , meeting_outcome , meeting_type FROM (SELECT DIST"
  },
  {
    "id": 2131,
    "db_id": "advertising_agencies",
    "question": "Show the meeting ids and the number of staff in each meeting.",
    "answer": "SELECT DISTINCT staff_id , COUNT(staff_id ) AS num FROM (SELECT DISTINCT agency_id , COUNT(staff_id ) AS total FROM (SELECT DISTINCT agency_details FROM (SELECT staff_"
  },
  {
    "id": 2132,
    "db_id": "advertising_agencies",
    "question": "Count the number of staff in each meeting by meeting id.",
    "answer": "SELECT COUNT(sic_code ) FROM (SELECT DISTINCT staff_details FROM (SELECT DISTINCT staff_details FROM (SELECT DISTINCT agency_id , invoice_details FROM (SELECT DISTINCT invoice_id ,"
  },
  {
    "id": 2133,
    "db_id": "advertising_agencies",
    "question": "Show the staff id and the number of meetings attended by the staff who attended some meeting but had the lowest attendance.",
    "answer": "SELECT DISTINCT staff_id FROM (SELECT MAX(staff_id ) AS id FROM (SELECT staff_details FROM (SELECT DISTINCT staff_id FROM (SELECT meeting_id"
  },
  {
    "id": 2134,
    "db_id": "advertising_agencies",
    "question": "What is the staff id of the staff who attended the least meetings but attended some meeting?",
    "answer": "SELECT DISTINCT staff_id FROM (SELECT DISTINCT invoice_details FROM (SELECT invoice_details FROM (SELECT invoice_id FROM (SELECT invoice_id , SUM(staff_details"
  },
  {
    "id": 2135,
    "db_id": "advertising_agencies",
    "question": "How many staff have attended a meeting?",
    "answer": "SELECT COUNT(Staff_in_Meetings.staff_id ) FROM (SELECT DISTINCT Staff_in_Meetings.staff_id , COUNT(Invoices.invoice_id ) AS num FROM (SELECT DISTINCT invoice_"
  },
  {
    "id": 2136,
    "db_id": "advertising_agencies",
    "question": "Return the number of distinct staff who have attended a meeting?",
    "answer": "SELECT COUNT(Invoices.invoice_id ) FROM (SELECT DISTINCT invoice_id FROM (SELECT DISTINCT agency_id , SUM(staff_details ) AS count FROM (SELECT DISTINCT staff_id , invoice"
  },
  {
    "id": 2137,
    "db_id": "advertising_agencies",
    "question": "How many staff did not attend any meeting?",
    "answer": "SELECT COUNT(Invoices.invoice_id ) FROM (SELECT DISTINCT invoice_details , COUNT(staff_id ) AS num FROM (SELECT DISTINCT client_id FROM (SELECT DISTINCT agency_details FROM (SELECT DIST"
  },
  {
    "id": 2138,
    "db_id": "advertising_agencies",
    "question": "Count the number of staff who did not attend any meeting.",
    "answer": "SELECT COUNT(client_details ) FROM (SELECT DISTINCT client_id , COUNT(invoice_details ) AS num FROM (SELECT DISTINCT invoice_details , staff_id FROM (SELECT DISTINCT client_id , st"
  },
  {
    "id": 2139,
    "db_id": "advertising_agencies",
    "question": "What are the ids and details of the clients who have attended any meeting or have any invoice?",
    "answer": "SELECT DISTINCT client_details FROM (SELECT DISTINCT client_id , client_details FROM (SELECT DISTINCT client_id , client_details FROM (SELECT DISTINCT COUNT(client_"
  },
  {
    "id": 2140,
    "db_id": "advertising_agencies",
    "question": "Return the ids and details of clients who have attended a meeting or had an invoice.",
    "answer": "SELECT DISTINCT client_details FROM (SELECT DISTINCT client_details , SUM(billable_yn ) AS total FROM (SELECT DISTINCT client_id , SUM(invoice_details ) AS"
  },
  {
    "id": 2141,
    "db_id": "advertising_agencies",
    "question": "What are the ids and details of the staff who have attended at least 1 meetings and have the detail with letter 's'?",
    "answer": "SELECT DISTINCT staff_details FROM (SELECT DISTINCT staff_id , COUNT(staff_details ) AS num FROM (SELECT DISTINCT invoice_details"
  },
  {
    "id": 2142,
    "db_id": "advertising_agencies",
    "question": "Return the ids and details of staff who have attended at least 1 meeting and have an s in their staff details?",
    "answer": "SELECT DISTINCT invoice_id FROM (SELECT DISTINCT invoice_details FROM (SELECT * FROM (SELECT DISTINCT invoice_id , SUM(sic_code ) AS s FROM"
  },
  {
    "id": 2143,
    "db_id": "advertising_agencies",
    "question": "What are the id, sic code and agency id of the client who has attended 1 meeting and has any invoice.",
    "answer": "SELECT DISTINCT client_id FROM (SELECT DISTINCT client_id , agency_id FROM (SELECT DISTINCT staff_id , agency_id FROM ("
  },
  {
    "id": 2144,
    "db_id": "advertising_agencies",
    "question": "Return the ids, sic codes, and agency ids of clients who have attended 1 meeting and had an invoice.",
    "answer": "SELECT DISTINCT staff_id FROM (SELECT DISTINCT client_id FROM (SELECT DISTINCT staff_id , COUNT(client_details ) AS num FROM (SELECT SUM(staff_"
  },
  {
    "id": 2145,
    "db_id": "advertising_agencies",
    "question": "List the start time, end time of each meeting, and the corresponding client detail and staff detail.",
    "answer": "SELECT DISTINCT SUM(start_date_time ), SUM(end_date_time ) FROM (SELECT DISTINCT start_date_time , SUM(end_date_time ) FROM (SELECT DIST"
  },
  {
    "id": 2146,
    "db_id": "advertising_agencies",
    "question": "What are the start and end times of each meeting, as well as the corresponding client and staff details the attendees?",
    "answer": "SELECT DISTINCT SUM(start_date_time ), SUM(end_date_time ), SUM(client_details ) FROM (SELECT DISTINCT start_date_time , end_date"
  }
]