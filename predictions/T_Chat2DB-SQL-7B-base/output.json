[
  {
    "id": 0,
    "db_id": "soccer_3",
    "question": {
      "id": 0,
      "db_id": "soccer_3",
      "question": "How many clubs are there?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, How many clubs are there?[SQL]\\nSELECT count(*) FROM club'\n        , '2'\n        , ['SELECT count(*) FROM club']\n        , ['SELECT count(*) FROM player']\n    , 3\n        , 'How many players are there?[SQL] SELECT count(*) FROM player'\n    , 4\n        , ['SELECT count(*) FROM club']\n    , 5\n        , 'How many events have been played?[No SQL] The sum of Events_number of all players'\n    , 6\n        , ['SELECT sum(Events_number) FROM player']\n     , 7\n        , 'How many wins have been recorded?[No SQL] The sum of Wins_count of all players' ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
  },
  {
    "id": 1,
    "db_id": "soccer_3",
    "question": {
      "id": 1,
      "db_id": "soccer_3",
      "question": "Count the number of clubs."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Count the number of clubs.[SQL]\\nSELECT count(*) FROM club'\n        , 'SELECT count(*) FROM club'\n        , 'SELECT count(*) FROM club'\n    , 'SELECT count(*) FROM club'\n    , 'SELECT count(*) FROM club'\n     , 'SELECT count(*) FROM club'\n    , 'SELECT count(*) FROM club'\n    , 'SELECT count(*) FROM club'\n    , 'SELECT count(*) FROM club'\n    , 'SELECT count(*) FROM club'\n    , 'SELECT count(*) FROM club'\n    , 'SELECT count(*) FROM club'\n    , 'SELECT count(*) FROM club'\n    , 'SELECT count(*) FROM club'\n    , 'SELECT count(*) FROM club'\n    , 'SELECT count(*) FROM club'\n    , 'SELECT count(*) FROM club'\n    , 'SELECT count(*) FROM club'\n    , 'SELECT count(*) FROM club'\n    , 'SELECT count(*) FROM club'\n    , '"
  },
  {
    "id": 2,
    "db_id": "soccer_3",
    "question": {
      "id": 2,
      "db_id": "soccer_3",
      "question": "List the name of clubs in ascending alphabetical order."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, List the name of clubs in ascending alphabetical order.[SQL]\\nSELECT Name FROM club ORDER BY Name ASC'\n        ,'SELECT Name FROM club ORDER BY Name ASC'\n        ,'SELECT Name FROM club ORDER BY Name DESC'\n        ,'SELECT Name FROM club ORDER BY Name DESC'\n    ,'SELECT Name FROM club ORDER BY Name ASC'\n    ,'SELECT Name FROM club ORDER BY Name DESC'\n    ,'SELECT Name FROM club ORDER BY Name ASC'\n    ,'SELECT Name FROM club ORDER BY Name DESC'\n    ,'SELECT Name FROM club ORDER BY Name ASC'\n    ,'SELECT Name FROM club ORDER BY Name DESC'\n    ,'SELECT Name FROM club ORDER BY Name ASC'\n    ,'SELECT Name FROM club ORDER BY Name DESC'\n    ,'SELECT Name FROM club ORDER BY Name ASC'\n    ,'SELECT Name FROM club ORDER BY Name DESC'\n    ,'SELECT Name FROM club ORDER BY Name ASC'\n    ,'SELECT Name FROM club ORDER"
  },
  {
    "id": 3,
    "db_id": "soccer_3",
    "question": {
      "id": 3,
      "db_id": "soccer_3",
      "question": "What are the names of clubs, ordered alphabetically?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What are the names of clubs, ordered alphabetically?[SQL]\\nSELECT Name FROM club ORDER BY Name ASC'\n        ,'SELECT Name FROM club ORDER BY Name ASC'\n        ,'CLUBS'\n    ,3,'Which club has the most players?[SQL] SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id ORDER BY count(*) DESC LIMIT 1'\n        ,'SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id ORDER BY count(*) DESC LIMIT 1'\n        ,'CLUBS'\n    ,4,'Which club has the least players?[SQL] SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.club_id  =  T2.club_"
  },
  {
    "id": 4,
    "db_id": "soccer_3",
    "question": {
      "id": 4,
      "db_id": "soccer_3",
      "question": "What are the managers and captains of clubs?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What are the managers and captains of clubs?[SQL]\\nSELECT Manager ,  Captain FROM club'\n        , 'SELECT Manager ,  Captain FROM club'\n    , 'SELECT name FROM club'\n        , 'SELECT name FROM club'\n     , 'SELECT name FROM club'\n    , 'SELECT name FROM club'\n     , 'SELECT name FROM club'\n    , 'SELECT name FROM club'\n     , 'SELECT name FROM club'\n    , 'SELECT name FROM club'\n     , 'SELECT name FROM club'\n    , 'SELECT name FROM club'\n     , 'SELECT name FROM club'\n    , 'SELECT name FROM club'\n     , 'SELECT name FROM club'\n    , 'SELECT name FROM club'\n     , 'SELECT name FROM club' ]\n\n    , [ 'SELECT count(*) FROM player'\n       , 'SELECT count(DISTINCT Club_ID) FROM player'\n       , 'SELECT count(DISTINCT name) FROM club'"
  },
  {
    "id": 5,
    "db_id": "soccer_3",
    "question": {
      "id": 5,
      "db_id": "soccer_3",
      "question": "Return the managers and captains of all clubs."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Return the managers and captains of all clubs.[SQL]\\nSELECT DISTINCT manager ,  captain FROM club'\n        , 'SELECT DISTINCT manager ,  captain FROM club'\n    , 'SELECT DISTINCT manager FROM club'\n        , 'SELECT DISTINCT captain FROM club'\n    , 'SELECT count(*) FROM club'\n    , 'SELECT count(DISTINCT manager) FROM club'\n    , 'SELECT count(DISTINCT captain) FROM club' ]\n\n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   "
  },
  {
    "id": 6,
    "db_id": "soccer_3",
    "question": {
      "id": 6,
      "db_id": "soccer_3",
      "question": "List the name of clubs whose manufacturer is not \"Nike\""
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, List the name of clubs whose manufacturer is not \"Nike\"[SQL]\\nSELECT Name FROM club WHERE Manufacturer != 'Nike'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"
  },
  {
    "id": 7,
    "db_id": "soccer_3",
    "question": {
      "id": 7,
      "db_id": "soccer_3",
      "question": "What are the names of clubs who do not have the manufacturer Nike?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What are the names of clubs who do not have the manufacturer Nike?[SQL]\\nSELECT Name FROM club WHERE Manufacturer != 'Nike'  SELECT name FROM club EXCEPT (SELECT name FROM club WHERE Manufacturer  =  'Nike')  SELECT name FROM club EXCEPT (SELECT name FROM club WHERE Manufacturer  =  'Adidas')  SELECT name FROM club EXCEPT (SELECT name FROM club WHERE Manufacturer  =  'Puma')  SELECT name FROM club EXCEPT (SELECT name FROM club WHERE Manufacturer  =  'Reebok')  SELECT name FROM club EXCEPT (SELECT name FROM club WHERE Manufacturer  =  'Under Armour')  SELECT name FROM club EXCEPT (SELECT name FROM club WHERE Manufacturer  =  'Joma')  SELECT name FROM club EXCEPT (SELECT name FROM club WHERE Manufacturer  =  'Kappa') SELECT name FROM club EXCEPT (SELECT name FROM club WHERE Manufacturer "
  },
  {
    "id": 8,
    "db_id": "soccer_3",
    "question": {
      "id": 8,
      "db_id": "soccer_3",
      "question": "What are the names of players in ascending order of wins count?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What are the names of players in ascending order of wins count?[SQL]\\nSELECT Name FROM player ORDER BY Wins_count ASC'\n        ,'SELECT Name FROM player ORDER BY Wins_count ASC'\n        ,'SELECT Name FROM player ORDER BY Wins_count DESC'\n    ,'SELECT Name FROM player ORDER BY Events_number ASC'\n    ,'SELECT Name FROM player ORDER BY Earnings DESC'\n    ,'SELECT Name FROM player ORDER BY Club_ID ASC'\n    ,'SELECT Name FROM player ORDER BY Club_ID DESC'\n    ,'SELECT T1.name FROM club AS t1 JOIN player AS t2 ON t1.club_id  =  t2.club_id ORDER BY t2.wins_count ASC'\n    ,'SELECT T1.name FROM club AS t1 JOIN player AS t2 ON t1.club_id  =  t2.club_id ORDER BY t2.wins_count DESC'\n    ,'"
  },
  {
    "id": 9,
    "db_id": "soccer_3",
    "question": {
      "id": 9,
      "db_id": "soccer_3",
      "question": "Return the names of players in order of count of wins, ascending."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Return the names of players in order of count of wins, ascending.[SQL]\\nSELECT Name FROM player ORDER BY Wins_count ASC'\n        ,'SELECT Name FROM player ORDER BY Wins_count ASC'\n    ,'SELECT Name FROM player ORDER BY Wins_count DESC'\n        ,'SELECT Name FROM player ORDER BY Wins_count DESC'\n    ,'SELECT Name FROM player ORDER BY Events_number ASC'\n        ,'SELECT Name FROM player ORDER BY Events_number ASC'\n    ,'SELECT Name FROM player ORDER BY Earnings DESC'\n        ,'SELECT Name FROM player ORDER BY Earnings DESC'\n    ,'SELECT Name FROM player ORDER BY Club_ID ASC'\n        ,'SELECT Name FROM player ORDER BY Club_ID ASC'\n    ,'SELECT T2.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID ORDER BY T2.Wins_count DESC'\n       "
  },
  {
    "id": 10,
    "db_id": "soccer_3",
    "question": {
      "id": 10,
      "db_id": "soccer_3",
      "question": "What is the name of the player with the highest earnings?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What is the name of the player with the highest earnings?[SQL]\\nSELECT Name FROM player ORDER BY Earnings DESC LIMIT 1'\n        ,'SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1'\n        ,'T2'\n    ,3,'SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1'\n        ,'SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1'\n        ,'T3'\n    ,4,'SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1'\n        ,'SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1'\n    ,5,'SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1'\n        ,'SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1'\n     ,6,'SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1'\n        ,'SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1'\n     ,7,'SELECT"
  },
  {
    "id": 11,
    "db_id": "soccer_3",
    "question": {
      "id": 11,
      "db_id": "soccer_3",
      "question": "Return the name of the player who earns the most money."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Return the name of the player who earns the most money.[SQL]\\nSELECT Name FROM Player ORDER BY Earnings DESC LIMIT 1'\n        ,'SELECT Name FROM Player ORDER BY Earnings DESC LIMIT 1'\n    ,'SELECT Name FROM Player ORDER BY Earnings DESC LIMIT 1'\n    ,'SELECT Name FROM Player ORDER BY Earnings DESC LIMIT 1'\n    ,'SELECT Name FROM Player ORDER BY Earnings DESC LIMIT 1'\n    ,'SELECT Name FROM Player ORDER BY Earnings DESC LIMIT 1'\n    ,'SELECT Name FROM Player ORDER BY Earnings DESC LIMIT 1'\n    ,'SELECT Name FROM Player ORDER BY Earnings DESC LIMIT 1'\n    ,'SELECT Name FROM Player ORDER BY Earnings DESC LIMIT 1'\n    ,'SELECT Name FROM Player ORDER BY Earnings DESC LIMIT 1'\n    ,'SELECT Name FROM Player ORDER BY Earnings DESC LIMIT 1'\n    ,'SELECT Name"
  },
  {
    "id": 12,
    "db_id": "soccer_3",
    "question": {
      "id": 12,
      "db_id": "soccer_3",
      "question": "What are the distinct countries of players with earnings higher than 1200000?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What are the distinct countries of players with earnings higher than 1200000?[SQL]\\nSELECT DISTINCT Country FROM player WHERE Earnings  >  1200000'\n        ,'SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000'\n        ,'SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000'\n    ,'SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000'\n    ,'SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000'\n    ,'SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000'\n    ,'SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000'\n    ,'SELECT DISTINCT Country FROM player WHERE Earnings  >  1200"
  },
  {
    "id": 13,
    "db_id": "soccer_3",
    "question": {
      "id": 13,
      "db_id": "soccer_3",
      "question": "From which countries are players who make more than 1200000 from?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, From which countries are players who make more than 1200000 from?[SQL]\\nSELECT Country FROM player WHERE Earnings  >  1200000 GROUP BY Country HAVING count(*)  >=  1'\n        ,'SELECT Country FROM player WHERE Earnings  >  1200000 GROUP BY Country HAVING count(*)  >=  1'\n        ,'SELECT Country FROM player WHERE Earnings  >  1200000 GROUP BY Country HAVING count(*)  >=  1'\n    ,'SELECT Country FROM player WHERE Earnings  >  1200000 GROUP BY Country HAVING count(*)  >=  1'\n    ,'SELECT Country FROM player WHERE Earnings  >  1200000 GROUP BY Country HAVING count(*)  >=  1'\n    ,'SELECT Country FROM player WHERE Earnings  >  1200000 GROUP BY Country HAVING count"
  },
  {
    "id": 14,
    "db_id": "soccer_3",
    "question": {
      "id": 14,
      "db_id": "soccer_3",
      "question": "What is the country of the player with the highest earnings among players that have more than 2 win counts?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What is the country of the player with the highest earnings among players that have more than 2 win counts?[SQL]\\nSELECT Country FROM player WHERE Events_number  >  2 AND Earnings  =  (SELECT max(Earnings) FROM player) UNION SELECT Country FROM player WHERE Wins_count  >  2 AND Earnings  =  (SELECT max(Earnings) FROM player) UNION SELECT Country FROM player WHERE Earnings  >  2 AND Earnings  =  (SELECT max(Earnings) FROM player) ORDER BY Country ASC LIMIT 1'\n        ,'country1': 'United States', 'country2': 'United Kingdom'}\n    ,{'query': 'SELECT Country FROM player WHERE Wins_count  >  2 AND Earnings  =  (SELECT max(Earnings) FROM player) UNION SELECT Country FROM player WHERE Earnings  >  2 AND Earnings  =  (SELECT max(Earnings) FROM player) ORDER BY Country ASC LIMIT 1', '"
  },
  {
    "id": 15,
    "db_id": "soccer_3",
    "question": {
      "id": 15,
      "db_id": "soccer_3",
      "question": "Of players who have more than 2 wins, what is the country of the player who makes the most?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Of players who have more than 2 wins, what is the country of the player who makes the most?[SQL]\\nSELECT Country FROM player WHERE Wins_count  >  2 ORDER BY Earnings DESC LIMIT 1'\n        ,'country': 'United States'}\n     ,   {'query': 'SELECT name FROM club', 'answer': 'name', 'db_schema': ['CREATE TABLE club (Club_ID int ,  Name text ,  Manager text ,  Captain text ,  Sponsor text ,  PRIMARY KEY (Club_ID))'], 'task': 'Select the name of a club from the database.', 'correct_answers': ['Tigers'], 'country': 'United Kingdom'}\n     ,   {'query': 'SELECT name FROM club', 'answer': 'name', 'db_schema': ['CREATE TABLE club (Club_ID int ,  Name text ,  Manager text ,  Captain text ,  Sponsor text ,  PRIMARY KEY (Club_ID))'], 'task': 'Select the"
  },
  {
    "id": 16,
    "db_id": "soccer_3",
    "question": {
      "id": 16,
      "db_id": "soccer_3",
      "question": "Show names of players and names of clubs they are in."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Show names of players and names of clubs they are in.[SQL]\\nSELECT T1.Name ,  T2.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID'\n        , 'SELECT T1.Name ,  T2.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID'\n    , ['SELECT T1.Name ,  T2.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID']]\n\n    , [r'''SELECT T1.Name ,  T2.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.Events_number  >  180''']\n        , ['SELECT T1.Name ,"
  },
  {
    "id": 17,
    "db_id": "soccer_3",
    "question": {
      "id": 17,
      "db_id": "soccer_3",
      "question": "What are the names of players and the corresponding clubs that they are in?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What are the names of players and the corresponding clubs that they are in?[SQL]\\nSELECT T1.Name ,  T2.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID'\n        ,'SELECT T1.Name ,  T2.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID'\n    ,'SELECT T1.Name ,  T2.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID'\n    ,'SELECT T1.Name ,  T2.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID'\n    ,'SELECT T1.Name ,  T2.Name FROM player AS T1 JOIN club AS T2 ON T1"
  },
  {
    "id": 18,
    "db_id": "soccer_3",
    "question": {
      "id": 18,
      "db_id": "soccer_3",
      "question": "Show names of clubs that have players with more than 2 win counts."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Show names of clubs that have players with more than 2 win counts.[SQL]\\nSELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id HAVING count(T2.Name)  >  2'\n        , 'SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id HAVING count(T2.Name)  >  2'\n    , 'SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id HAVING count(T2.Name)  >  2'\n    , 'SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.club_id  =  T"
  },
  {
    "id": 19,
    "db_id": "soccer_3",
    "question": {
      "id": 19,
      "db_id": "soccer_3",
      "question": "What are the names of clubs that have players who have won more than twice?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What are the names of clubs that have players who have won more than twice?[SQL]\\nSELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.club_id  =  T2.club_id WHERE T2.Wins_count  >  2'\n        , 'SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.club_id  =  T2.club_id WHERE T2.Wins_count  >  2'\n    , 'SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.club_id  =  T2.club_id WHERE T2.Wins_count  >  2'\n    , 'SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.club_id  =  T2.club_id WHERE T2.Wins_count  >  2'\n    , 'SELECT T1.name FROM club AS"
  },
  {
    "id": 20,
    "db_id": "soccer_3",
    "question": {
      "id": 20,
      "db_id": "soccer_3",
      "question": "Show names of players from the club with manager \"Sam Allardyce\"."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Show names of players from the club with manager \"Sam Allardyce\".[SQL]\\nSELECT T1.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Manager  =  'Sam Allardyce' <MID>\n    , events_number INTEGER NOT NULL DEFAULT 0\n    , Wins_count INTEGER NOT NULL DEFAULT 0\n    , Club_ID INTEGER NOT NULL REFERENCES club(Club_ID) ON DELETE SET NULL ON UPDATE CASCADE\n    , PRIMARY KEY (Player_ID)\n    , UNIQUE INDEX Player_ID ON Player(Player_ID)\n    , INDEX name ON Player(Name)\n    , INDEX country ON Player(Country)\n    , INDEX wins_count ON Player(Wins_count)\n    , INDEX events_number ON Player(Events_number)\n    , CHECK (events_"
  },
  {
    "id": 21,
    "db_id": "soccer_3",
    "question": {
      "id": 21,
      "db_id": "soccer_3",
      "question": "What are the names of players from the club managed by Sam Allardyce?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What are the names of players from the club managed by Sam Allardyce?[SQL]\\nSELECT T1.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Manager  =  'Sam Allardyce' UNION SELECT T1.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Captain  =  'Sam Allardyce' UNION SELECT T1.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Sponsor  =  'Sam Allardyce' UNION SELECT T1.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.name  =  'Sam Allardyce' UNION SELECT"
  },
  {
    "id": 22,
    "db_id": "soccer_3",
    "question": {
      "id": 22,
      "db_id": "soccer_3",
      "question": "Show names of clubs in descending order of average earnings of players belonging."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Show names of clubs in descending order of average earnings of players belonging.[SQL]\\nSELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id ORDER BY avg(T2.earnings) DESC'\n        , 'SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id ORDER BY avg(T2.earnings) DESC'\n    , ['SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id ORDER BY avg(T2.earnings) DESC']\n    , ['SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.club_id  =  T2.club_id GROUP"
  },
  {
    "id": 23,
    "db_id": "soccer_3",
    "question": {
      "id": 23,
      "db_id": "soccer_3",
      "question": "What are the names of clubs, ordered descending by the average earnings of players within each?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What are the names of clubs, ordered descending by the average earnings of players within each?[SQL]\\nSELECT t1.name FROM club AS t1 JOIN player AS t2 ON t1.club_id  =  t2.club_id GROUP BY t1.club_id ORDER BY avg(t2.earnings) DESC'\n        ,'SELECT t1.name FROM club AS t1 JOIN player AS t2 ON t1.club_id  =  t2.club_id GROUP BY t1.club_id ORDER BY avg(t2.earnings) DESC'\n    ,'SELECT t1.name FROM club AS t1 JOIN player AS t2 ON t1.club_id  =  t2.club_id GROUP BY t1.club_id ORDER BY avg(t2.earnings) DESC'\n    ,'SELECT t1.name FROM club AS t1 JOIN player AS t2 ON t1.club_id  =  t2.club_id GROUP"
  },
  {
    "id": 24,
    "db_id": "soccer_3",
    "question": {
      "id": 24,
      "db_id": "soccer_3",
      "question": "Show different manufacturers and the number of clubs they are associated with."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Show different manufacturers and the number of clubs they are associated with.[SQL]\\nSELECT Manufacturer ,  COUNT(*) FROM club GROUP BY Manufacturer'\n        , ['SELECT Manufacturer ,  COUNT(*) FROM club GROUP BY Manufacturer']]\n    , [315 , 'SELECT name FROM club WHERE manager = 'Dave'' , ['SELECT name FROM club WHERE manager  =  'Dave'']]\n    , [296 , 'SELECT name FROM club WHERE captain = 'Boaty' AND Manufacturer = 'Naismith'', ['SELECT name FROM club WHERE captain  =  'Boaty' AND Manufacturer  =  'Naismith'']]\n    , [407 , 'SELECT name FROM club WHERE manager = 'Sue' AND Manufacturer = 'Adidas'', ['SELECT name FROM club WHERE manager  =  'Sue' AND Manufacturer  =  'Adidas'']]\n    , [389 , 'SELECT"
  },
  {
    "id": 25,
    "db_id": "soccer_3",
    "question": {
      "id": 25,
      "db_id": "soccer_3",
      "question": "How many clubs use each manufacturer?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, How many clubs use each manufacturer?[SQL]\\nSELECT count(*) ,  Manufacturer FROM club GROUP BY Manufacturer'\n        , 'SELECT count(*) ,  Manufacturer FROM club GROUP BY Manufacturer'\n        , ['COUNT(Club_ID) ,  Manufacturer FROM club GROUP BY Manufacturer']\n    , ['SELECT count(*) ,  Manufacturer FROM club GROUP BY Manufacturer']\n    , ['SELECT count(*) ,  Manufacturer FROM club GROUP BY Manufacturer']\n     , 100.0]\n    , [25 ,  'SELECT count(*) ,  captain FROM club GROUP BY captain' , 'SELECT count(*) ,  captain FROM club GROUP BY captain' , ['COUNT(Club_ID) ,  captain FROM club GROUP BY captain'] , ['COUNT(Club_ID) ,  captain FROM club GROUP BY captain'] , 100.0]]\n\n\n\n\n\n\n\n\n\n\n"
  },
  {
    "id": 26,
    "db_id": "soccer_3",
    "question": {
      "id": 26,
      "db_id": "soccer_3",
      "question": "Please show the most common manufacturer of clubs."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Please show the most common manufacturer of clubs.[SQL]\\nSELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1'\n        , 'SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1'\n    , 'SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1'\n    , 'SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1'\n    , 'SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1'\n    , 'SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1'\n    , 'SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1'\n    , 'SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1'\n    , 'SELECT Manufacturer FROM club GROUP BY"
  },
  {
    "id": 27,
    "db_id": "soccer_3",
    "question": {
      "id": 27,
      "db_id": "soccer_3",
      "question": "Which manufacturer is most common among clubs?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Which manufacturer is most common among clubs?[SQL]\\nSELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1'\n        ,'SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1'\n        ,'Adidas'\n    ,'Which country has the most players?[SQL] SELECT Country FROM player GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1'\n        ,'SELECT Country FROM player GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1'\n        ,'Germany'\n    ,'How many events have been played by all players collectively?[SQL] SELECT Events_number FROM player GROUP BY Events_number ORDER BY COUNT(*) DESC LIMIT 1'\n        ,'SELECT Events_number FROM player GROUP BY Events_number ORDER BY COUNT(*) DESC LIMIT 1'\n        ,'1056'\n    ,'Which captain has won the most events for his club?[SQL"
  },
  {
    "id": 28,
    "db_id": "soccer_3",
    "question": {
      "id": 28,
      "db_id": "soccer_3",
      "question": "List the manufacturers that are associated with more than one club."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, List the manufacturers that are associated with more than one club.[SQL]\\nSELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*)  >  1]'\n        , 'answer': 'Adidas'\n    , 'difficulty': 2\n    , 'category': 'Basic Select'\n    , 'active': True\n    , 'created_by': 'T4'\n    , 'created_on': '2018-07-26T14:54:40.397772Z'\n    , 'question_code': ''\n    , 'code': 'SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*)  >  1'\n    , 'total_hint': 0\n    , 'hint': []\n    , 'images': []\n    , 'video_url': ''\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"
  },
  {
    "id": 29,
    "db_id": "soccer_3",
    "question": {
      "id": 29,
      "db_id": "soccer_3",
      "question": "Which manufacturers work for more than 1 club?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Which manufacturers work for more than 1 club?[SQL]\\nSELECT Manufacturer FROM club GROUP BY Manufacturer HAVING count(*)  >  1'\n        ,'SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING count(*)  >  1'\n        ,'The following manufacturers work for more than 1 club: Adidas, Nike'\n    ,'Based on the provided database schema information, Which captains have played for at least 5 different clubs? [SQL] SELECT Captain FROM club GROUP BY Captain HAVING count(*)  >=  5'\n        ,'SELECT Captain FROM club GROUP BY Captain HAVING count(*)  >=  5'\n        ,'The following captains have played for at least 5 different clubs: R. Serena, M. Samara'\n    ,'Find the number of players who have won at least 2 events. [SQL] SELECT COUNT(*) FROM player WHERE Events_number  >=  2'\n"
  },
  {
    "id": 30,
    "db_id": "soccer_3",
    "question": {
      "id": 30,
      "db_id": "soccer_3",
      "question": "List the country that have more than one player."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, List the country that have more than one player.[SQL]\\nSELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1]'\n        ,'answer': 'Australia'\n    ,'difficulty': 2\n    ,'category': 'Basic Select'\n    ,'active': True\n    ,'created_by': 'Tutor'\n    ,'created_on': '2008-07-22T17:44:59.300607Z'\n    ,'question_type': 'MULTIPLE CHOICE'\n    ,'submitted_by': 'Scipy'\n    ,'submitted_on': '2018-07-17T03:39:05.277241Z'\n    ,'choice_1': 'USA'\n    ,'choice_2': 'Australia'\n   "
  },
  {
    "id": 31,
    "db_id": "soccer_3",
    "question": {
      "id": 31,
      "db_id": "soccer_3",
      "question": "Which countries have produced more than one player?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Which countries have produced more than one player?[SQL]\\nSELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1'\n        ,'SELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1'\n        ,'SELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1'\n    ,'SELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1'\n    ,'SELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1']\n    ,['SELECT name FROM club'\n        ,'SELECT name FROM club'\n        ,'SELECT name FROM club'\n        ,'SELECT name FROM club'\n    ,'SELECT name FROM club']]\n    ,['SELECT manager FROM club'\n        ,'SELECT manager FROM club'\n        ,'SELECT manager FROM club'\n        ,'SELECT manager FROM club'\n    ,'SELECT manager FROM club']]\n    ,['SELECT captain"
  },
  {
    "id": 32,
    "db_id": "soccer_3",
    "question": {
      "id": 32,
      "db_id": "soccer_3",
      "question": "List the name of clubs that do not have players."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, List the name of clubs that do not have players.[SQL]\\nSELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)')]\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
  },
  {
    "id": 33,
    "db_id": "soccer_3",
    "question": {
      "id": 33,
      "db_id": "soccer_3",
      "question": "What are the names of clubs that do not have any players?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What are the names of clubs that do not have any players?[SQL]\\nSELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)')]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
  },
  {
    "id": 34,
    "db_id": "soccer_3",
    "question": {
      "id": 34,
      "db_id": "soccer_3",
      "question": "Show the country of players with earnings more than 1400000 and players with earnings less than 1100000."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Show the country of players with earnings more than 1400000 and players with earnings less than 1100000.[SQL]\\nSELECT Country FROM player WHERE Earnings  >  1400000 UNION SELECT Country FROM player WHERE Earnings  <  11000000'\n        ,'SELECT Country FROM player WHERE Earnings  >  1400000 INTERSECT SELECT Country FROM player WHERE Earnings  <  11000000'\n    ,'SELECT Country FROM player WHERE Earnings  >  1400000 EXCEPT SELECT Country FROM player WHERE Earnings  <  11000000'\n    ,'SELECT Country FROM player WHERE Earnings  >  1400000 OR  Earnings  <  11000000'\n    ,'SELECT Country FROM player WHERE Earnings  >  1400000 AND  Earnings  <  1"
  },
  {
    "id": 35,
    "db_id": "soccer_3",
    "question": {
      "id": 35,
      "db_id": "soccer_3",
      "question": "Which country has produced both players with earnings over 1400000 and players with earnings below 1100000?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Which country has produced both players with earnings over 1400000 and players with earnings below 1100000?[SQL]\\nSELECT Country FROM player WHERE Earnings  >  1400000 INTERSECT SELECT Country FROM player WHERE Earnings  <  110000000'\n        ,'SELECT Country FROM player WHERE Earnings  >  1400000 INTERSECT SELECT Country FROM player WHERE Earnings  <  110000000'\n        ,'SELECT Country FROM player WHERE Earnings  <  110000000 EXCEPT SELECT Country FROM player WHERE Earnings  >  1400000'\n    ,'SELECT Club_ID FROM club GROUP BY Club_ID HAVING count(*)  >  25'\n    ,'SELECT name FROM club GROUP BY name HAVING count(*)  >  25'\n    ,'SELECT name FROM club GROUP BY name ORDER BY count(*) DESC"
  },
  {
    "id": 36,
    "db_id": "soccer_3",
    "question": {
      "id": 36,
      "db_id": "soccer_3",
      "question": "What is the number of distinct countries of all players?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What is the number of distinct countries of all players?[SQL]\\nSELECT count(DISTINCT Country) FROM player'\n        , 'SELECT count(DISTINCT Country) FROM player'\n        , 'SELECT count(DISTINCT Country) FROM player'\n    , 125]\n    , ['SELECT avg(Events_number) FROM player'\n        , 'SELECT avg(Events_number) FROM player' , 'SELECT avg(Events_number) FROM player'\n    , 34.869135802469]\n    , ['SELECT name FROM club WHERE manager = 'Diego Armando Maradona' AND captain = 'Ronaldinho' AND manufacturer = 'Adidas' AND sponsor = 'Nike'' , 'SELECT name FROM club WHERE manager = 'Diego Armando Maradona' AND captain = 'Ronaldinho' AND manufacturer = 'Adidas' AND sponsor = 'Nike'"
  },
  {
    "id": 37,
    "db_id": "soccer_3",
    "question": {
      "id": 37,
      "db_id": "soccer_3",
      "question": "How many different countries are players from?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, How many different countries are players from?[SQL]\\nSELECT COUNT(DISTINCT Country) FROM player'\n        , 'SELECT COUNT(DISTINCT Country) FROM player'\n        , 'SELECT count(DISTINCT country) FROM player'\n    , 'SELECT count(DISTINCT country) FROM player'\n    , 'SELECT count(DISTINCT country) FROM player'\n    , 'SELECT count(DISTINCT country) FROM player'\n    , 'SELECT count(DISTINCT country) FROM player'\n    , 'SELECT count(DISTINCT country) FROM player'\n    , 'SELECT count(DISTINCT country) FROM player'\n    , 'SELECT count(DISTINCT country) FROM player'\n    , 'SELECT count(DISTINCT country) FROM player'\n    , 'SELECT count(DISTINCT country) FROM player'\n    , 'SELECT count(DISTINCT country) FROM player'\n    , 'SELECT count(DIST"
  },
  {
    "id": 38,
    "db_id": "soccer_3",
    "question": {
      "id": 38,
      "db_id": "soccer_3",
      "question": "Show the earnings of players from country \"Australia\" or \"Zimbabwe\"."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Show the earnings of players from country \"Australia\" or \"Zimbabwe\".[SQL]\\nSELECT Earnings FROM player WHERE Country  =  'Australia' OR Country  =  'Zimbabwe' UNION SELECT sum(Earnings) FROM player WHERE Country  =  'Australia' OR Country  =  'Zimbabwe' GROUP BY Country ORDER BY sum(Earnings) DESC LIMIT 1' <MID>\n    FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.name  =  'Racing Club de Avila' GROUP BY T1.name HAVING sum(T2.earnings)  >  45000' UNION SELECT avg(T2.earnings) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.name  =  'Real Madrid CF' GROUP BY T"
  },
  {
    "id": 39,
    "db_id": "soccer_3",
    "question": {
      "id": 39,
      "db_id": "soccer_3",
      "question": "What are the earnings of players from either of the countries of Australia or Zimbabwe?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE \"club\" (\n\"Club_ID\" int,\n\"Name\" text,\n\"Manager\" text,\n\"Captain\" text,\n\"Manufacturer\" text,\n\"Sponsor\" text,\nPRIMARY KEY (\"Club_ID\")\n)\nCREATE TABLE \"player\" (\n\"Player_ID\" real,\n\"Name\" text,\n\"Country\" text,\n\"Earnings\" real,\n\"Events_number\" int,\n\"Wins_count\" int,\n\"Club_ID\" int,\nPRIMARY KEY (\"Player_ID\"),\nFOREIGN KEY (\"Club_ID\") REFERENCES \"club\"(\"Club_ID\")\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What are the earnings of players from either of the countries of Australia or Zimbabwe?[SQL]\\nSELECT Earnings FROM player WHERE Country  =  'Australia' OR Country  =  'Zimbabwe'')]'\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
  },
  {
    "id": 40,
    "db_id": "e_commerce",
    "question": {
      "id": 40,
      "db_id": "e_commerce",
      "question": "List the id, first name and last name of the customers who both have placed more than 2 orders and have bought at least 3 items."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, List the id, first name and last name of the customers who both have placed more than 2 orders and have bought at least 3 items.[SQL]\\nSELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2 JOIN order_items AS T3 JOIN orders AS T4 ON T3.order_id = T4.order_id GROUP BY T4.customer_id HAVING count(*)  >  3'\n        , 'SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2 JOIN order_items AS T3 JOIN orders AS T4 ON T3."
  },
  {
    "id": 41,
    "db_id": "e_commerce",
    "question": {
      "id": 41,
      "db_id": "e_commerce",
      "question": "What are the ids, first and last names of the customers who have ordered more than twice and have bought at least 3 items?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What are the ids, first and last names of the customers who have ordered more than twice and have bought at least 3 items?[SQL]\\nSELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING count(*)  >=  3 INTERSECT SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING count(*)  >  2'\n        ,\n       "
  },
  {
    "id": 42,
    "db_id": "e_commerce",
    "question": {
      "id": 42,
      "db_id": "e_commerce",
      "question": "For the orders with any produts, how many products does each orders contain ? List the order id, status and the number."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, For the orders with any produts, how many products does each orders contain ? List the order id, status and the number.[SQL]\\nSELECT T1.order_id ,  T1.order_status_code ,  count(*) FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id'\n    ,   'SELECT T1.order_id ,  T1.order_status_code ,  count(*) FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T2.product_id != null GROUP BY T1.order_id'\n    ,   'SELECT T1.order_id ,  count(*) FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T2.product_id != null GROUP BY T1.order_id'\n    ,   'SELECT T1.order_id , "
  },
  {
    "id": 43,
    "db_id": "e_commerce",
    "question": {
      "id": 43,
      "db_id": "e_commerce",
      "question": "For every order, how many products does it contain, and what are the orders' statuses and ids?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, For every order, how many products does it contain, and what are the orders' statuses and ids?[SQL]\\nSELECT count(*) ,  T1.order_status_code ,  T1.order_id FROM Orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_status_code'\n        ,   'SELECT count(*) ,  T1.order_status_code ,  T1.order_id FROM Orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_status_code'\n    ,   ['SELECT count(*) ,  T1.order_status_code ,  T1.order_id FROM Orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_status_code']]\n\n    ,   [   'SELECT count(*) ,"
  },
  {
    "id": 44,
    "db_id": "e_commerce",
    "question": {
      "id": 44,
      "db_id": "e_commerce",
      "question": "List the dates of the orders which were placed at the earliest time or have more than 1 items."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, List the dates of the orders which were placed at the earliest time or have more than 1 items.[SQL]\\nSELECT T1.date_order_placed FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.date_order_placed HAVING count(*)  >  1 UNION SELECT min(date_order_placed) FROM orders'\n        , '2017-08-14'\n    , 3\n     , 1\n    , ['SELECT invoice_date FROM invoices']\n    , ['2017-08-14']\n    , 4\n     , 1\n    , ['SELECT shipment_date FROM shipments']\n    , ['2017-08-14']\n    , 5\n     , 1\n    , ['SELECT product_price FROM products WHERE product_name  =  'Red Bicycle'']\n    , ["
  },
  {
    "id": 45,
    "db_id": "e_commerce",
    "question": {
      "id": 45,
      "db_id": "e_commerce",
      "question": "What are the dates of the earliest order and the dates of all orders with more than 1 item?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What are the dates of the earliest order and the dates of all orders with more than 1 item?[SQL]\\nSELECT T1.date_order_placed FROM Orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id HAVING count(*)  >  1 ORDER BY T1.date_order_placed ASC LIMIT 1'\n        ,'2003-02-08 00:00:00' , '2003-02-15 00:00:00' , '2003-02-22 00:00:00' ]\n     ,['SELECT invoice_date FROM INVOICES ORDER BY invoice_date ASC LIMIT 1' , '2017-08-14' ]\n     ,['SELECT T1.invoice_date FROM INVOICES AS T1 JOIN ship"
  },
  {
    "id": 46,
    "db_id": "e_commerce",
    "question": {
      "id": 46,
      "db_id": "e_commerce",
      "question": "Which customers did not make any orders? List the first name, middle initial and last name."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Which customers did not make any orders? List the first name, middle initial and last name.[SQL]\\nSELECT customer_first_name ,  customer_middle_initial ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id'\n        ,   'SELECT customer_first_name ,  customer_middle_initial ,  customer_last_name FROM CUSTOMERS WHERE customer_id NOT IN (SELECT customer_id FROM Orders)'\n    ,   'SELECT customer_first_name ,  customer_middle_initial ,  customer_last_name FROM CUSTOMERS EXCEPT SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name FROM Customers AS T1 JOIN Or"
  },
  {
    "id": 47,
    "db_id": "e_commerce",
    "question": {
      "id": 47,
      "db_id": "e_commerce",
      "question": "WHat are the first and last names, and middle initials of all customers who did not make any orders?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, WHat are the first and last names, and middle initials of all customers who did not make any orders?[SQL]\\nSELECT customer_first_name ,  customer_last_name ,  customer_middle_initial FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name ,  T1.customer_middle_initial FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id'\n        ,   'SELECT customer_first_name ,  customer_last_name ,  customer_middle_initial FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name ,  T1.customer_middle_initial FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id'\n    ,   ['SELECT customer_first_name ,  customer_last_name ,  customer_middle_initial FROM C"
  },
  {
    "id": 48,
    "db_id": "e_commerce",
    "question": {
      "id": 48,
      "db_id": "e_commerce",
      "question": "What are the id, name, price and color of the products which have not been ordered for at least twice?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What are the id, name, price and color of the products which have not been ordered for at least twice?[SQL]\\nSELECT product_id ,  product_name ,  product_price ,  product_color FROM products WHERE product_id NOT IN ( SELECT product_id FROM order_items GROUP BY product_id HAVING count(*)  >=  2 )'\n        ,'SELECT product_id ,  product_name ,  product_price ,  product_color FROM products WHERE product_id NOT IN ( SELECT product_id FROM order_items GROUP BY product_id HAVING count(*)  >=  2 )'\n    ,'SELECT product_id ,  product_name ,  product_price ,  product_color FROM products EXCEPT SELECT product_id FROM order_items GROUP BY product_id HAVING count(*)  >=  2'\n        ,'SELECT product_id ,  product_name ,  product_price ,  product_color FROM products EXCEPT SELECT product_id FROM order_items GROUP BY product_id"
  },
  {
    "id": 49,
    "db_id": "e_commerce",
    "question": {
      "id": 49,
      "db_id": "e_commerce",
      "question": "What are the ids , names , prices , and colors of all products that have been listed in less than two orders ?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What are the ids , names , prices , and colors of all products that have been listed in less than two orders ?[SQL]\\nSELECT T1.product_id ,  T1.product_name ,  T1.product_price ,  T1.product_color FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id HAVING count(*)  <  2'\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,"
  },
  {
    "id": 50,
    "db_id": "e_commerce",
    "question": {
      "id": 50,
      "db_id": "e_commerce",
      "question": "Which orders have at least 2 products on it? List the order id and date."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Which orders have at least 2 products on it? List the order id and date.[SQL]\\nSELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id HAVING count(*)  >=  2'\n        , 'SELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T2.order_item_status_code = 'Shipped''\n        , 'SELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T2.order_item_status_code = 'Cancelled''\n        , 'SELECT"
  },
  {
    "id": 51,
    "db_id": "e_commerce",
    "question": {
      "id": 51,
      "db_id": "e_commerce",
      "question": "What are the ids and dates of the orders with at least two products?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What are the ids and dates of the orders with at least two products?[SQL]\\nSELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id HAVING count(*)  >=  2'\n        ,'SELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T2.order_item_status_code = 'Shipped''\n        ,'SELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T2.order_item_status_code = 'Cancelled''\n        ,'SELECT"
  },
  {
    "id": 52,
    "db_id": "e_commerce",
    "question": {
      "id": 52,
      "db_id": "e_commerce",
      "question": "Which product are listed in orders most frequently? List the id, product name and price."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Which product are listed in orders most frequently? List the id, product name and price.[SQL]\\nSELECT T1.product_id ,  T3.product_name ,  T3.product_price FROM orders AS T2 JOIN order_items AS T1 ON T2.order_id = T1.order_id JOIN products AS T3 ON T3.product_id = T1.product_id GROUP BY T1.product_id ORDER BY count(*) DESC LIMIT 1'\n        ,   'answer': 'product_id'\n        ,   'difficulty': 'hard'\n        ,   'category': 'python'\n    ,   'image': 'https://images.pexels.com/photos/736567/pexels-photo-736567.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940'\n        ,   'level': 'e"
  },
  {
    "id": 53,
    "db_id": "e_commerce",
    "question": {
      "id": 53,
      "db_id": "e_commerce",
      "question": "What are the ids, names, and prices of all products that are ordered most frequently?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What are the ids, names, and prices of all products that are ordered most frequently?[SQL]\\nSELECT T1.product_id ,  T1.product_name ,  T1.product_price FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id ORDER BY count(*) DESC LIMIT 1'\n        ,'SELECT T1.product_id ,  T1.product_name ,  T1.product_price FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id ORDER BY count(*) DESC LIMIT 1'\n    ,'SELECT T1.product_id ,  T1.product_name ,  T1.product_price FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1."
  },
  {
    "id": 54,
    "db_id": "e_commerce",
    "question": {
      "id": 54,
      "db_id": "e_commerce",
      "question": "Which order have the least sum of the product prices. List the order id and sum."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, Which order have the least sum of the product prices. List the order id and sum.[SQL]\\nSELECT order_id ,  sum(T1.product_price) FROM order_items AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id GROUP BY order_id ORDER BY sum(T1.product_price) LIMIT 1'\n        , 'SELECT order_id FROM order_items GROUP BY order_id ORDER BY sum(product_price) LIMIT 1'\n    , 'SELECT order_id FROM order_items GROUP BY order_id ORDER BY sum(product_price) ASC LIMIT 1'\n    , 'SELECT order_id FROM order_items GROUP BY order_id ORDER BY sum(product_price) DESC LIMIT 1'\n    , 'SELECT order_id FROM order_items GROUP BY order_id ORDER BY sum(product_price) DESC LIMIT 1'\n    , 'SELECT order_id FROM order_items GROUP BY order_id ORDER"
  },
  {
    "id": 55,
    "db_id": "e_commerce",
    "question": {
      "id": 55,
      "db_id": "e_commerce",
      "question": "What is the order that total cost the least , and how much is the total cost ?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What is the order that total cost the least , and how much is the total cost ?[SQL]\\nSELECT sum(T1.order_item_price) FROM order_items AS T1 JOIN orders AS T2 ON T1.order_id = T2.order_id ORDER BY sum(T1.order_item_price) LIMIT 1'\n        , 'SELECT sum(T1.order_item_price) ,  T2.date_order_placed FROM order_items AS T1 JOIN orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.date_order_placed ORDER BY sum(T1.order_item_price) LIMIT 1'\n        , 'SELECT min(sum(T1.order_item_price)) ,  T2.date_order_placed FROM order_items AS T1 JOIN orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.date_order_"
  },
  {
    "id": 56,
    "db_id": "e_commerce",
    "question": {
      "id": 56,
      "db_id": "e_commerce",
      "question": "What is the most popular payment method?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What is the most popular payment method?[SQL]\\nSELECT payment_method_code FROM Customer_Payment_Methods GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1'\n        ,'answer': 'Visa'}]\n\n    ,['question': 'What is the name of the largest category (by number of unique products)?', 'sql': 'SELECT T1.category_name FROM categories AS T1 JOIN products AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_name ORDER BY count(DISTINCT product_id) DESC LIMIT 1']]\n\n    ,['question': 'Which customer has the highest total amount spent on orders? (include that customer's first name, last name and gender)', 'sql': 'SELECT T1.customer_first_name ,  T1.customer_last_name ,  T1.gender_code FROM customers AS T1 JOIN orders AS"
  },
  {
    "id": 57,
    "db_id": "e_commerce",
    "question": {
      "id": 57,
      "db_id": "e_commerce",
      "question": "What is the payment method that most customers use?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, What is the payment method that most customers use?[SQL]\\nSELECT T1.payment_method_code FROM Customer_Payment_Methods AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.payment_method_code ORDER BY count(*) DESC LIMIT 1'\n        ,'SELECT T1.payment_method_code FROM Customer_Payment_Methods AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.payment_method_code ORDER BY count(*) DESC LIMIT 1'\n    ,'SELECT T1.payment_method_code FROM Customer_Payment_Methods AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.payment_method_code ORDER BY count(*) DESC LIMIT 1'\n        ,'SELECT T1.payment_method_"
  },
  {
    "id": 58,
    "db_id": "e_commerce",
    "question": {
      "id": 58,
      "db_id": "e_commerce",
      "question": "How many number of products does each gender of customers buy? List the gender and the number"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, How many number of products does each gender of customers buy? List the gender and the number[SQL]\\nSELECT T1.gender_code ,  COUNT(*) FROM Customers AS T1 JOIN Order_Items AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code'\n        , 'SELECT T1.gender_code ,  COUNT(*) FROM Customers AS T1 JOIN Order_Items AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code'\n    , 'SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN order_items AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.product_id  =  3 GROUP BY T1.gender_code'\n    , 'SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN order_items AS T2 ON T1.customer_"
  },
  {
    "id": 59,
    "db_id": "e_commerce",
    "question": {
      "id": 59,
      "db_id": "e_commerce",
      "question": "How many products does each gender buy?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, How many products does each gender buy?[SQL]\\nSELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.gender_code'\n        ,   'gender_code': 'M'\n        ,   'count': 7}\n    ,   {'task': 'How many different colors of T-shirts are in stock? [SQL] SELECT count(DISTINCT product_color) FROM products WHERE product_category  =  'T-shirts''}\n    ,   {'task': 'How many products does each order contain? [SQL] SELECT count(*) ,  order_id FROM order_items GROUP BY order_id'}]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
  },
  {
    "id": 60,
    "db_id": "e_commerce",
    "question": {
      "id": 60,
      "db_id": "e_commerce",
      "question": "How many orders has each gender of customers placed?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, How many orders has each gender of customers placed?[SQL]\\nSELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code'\n        ,'SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code'\n        ,'SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code'\n    ,'SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1."
  },
  {
    "id": 61,
    "db_id": "e_commerce",
    "question": {
      "id": 61,
      "db_id": "e_commerce",
      "question": "How many orders has each gender placed?"
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, How many orders has each gender placed?[SQL]\\nSELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code'\n        ,'SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code'\n        ,'SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code'\n    ,'SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1."
  },
  {
    "id": 62,
    "db_id": "e_commerce",
    "question": {
      "id": 62,
      "db_id": "e_commerce",
      "question": "List the customers' first name, middle initial, last name and payment methods."
    },
    "answer": "### Database Schema\\n\\n['CREATE TABLE `Products` (\n`product_id` INTEGER PRIMARY KEY ,\n`parent_product_id` INTEGER,\n`product_name` VARCHAR(80),\n`product_price` DECIMAL(19,4) DEFAULT 0,\n`product_color` VARCHAR(50),\n`product_size` VARCHAR(50),\n`product_description` VARCHAR(255)\n)\nCREATE TABLE `Customers` (\n`customer_id` INTEGER PRIMARY KEY,\n`gender_code` VARCHAR(1) NOT NULL,\n`customer_first_name` VARCHAR(50),\n`customer_middle_initial` VARCHAR(1),\n`customer_last_name` VARCHAR(50),\n`email_address` VARCHAR(255),\n`login_name` VARCHAR(80),\n`login_password` VARCHAR(20),\n`phone_number` VARCHAR(255),\n`address_line_1` VARCHAR(255),\n`town_city` VARCHAR(50),\n`county` VARCHAR(50),\n`country` VARCHAR(50)\n)\nCREATE TABLE `Customer_Payment_Methods` (\n`customer_id` INTEGER NOT NULL,\n`payment_method_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Invoices` (\n`invoice_number` INTEGER PRIMARY KEY,\n`invoice_status_code` VARCHAR(10) NOT NULL,\n`invoice_date` DATETIME\n)\nCREATE TABLE `Orders` (\n`order_id` INTEGER PRIMARY KEY,\n`customer_id` INTEGER NOT NULL,\n`order_status_code` VARCHAR(10) NOT NULL,\n`date_order_placed` DATETIME NOT NULL,\nFOREIGN KEY (`customer_id` ) REFERENCES `Customers`(`customer_id` )\n)\nCREATE TABLE `Order_Items` (\n`order_item_id` INTEGER PRIMARY KEY ,\n`product_id` INTEGER NOT NULL,\n`order_id` INTEGER NOT NULL,\n`order_item_status_code` VARCHAR(10) NOT NULL,\nFOREIGN KEY (`product_id` ) REFERENCES `Products`(`product_id` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipments` (\n`shipment_id` INTEGER PRIMARY KEY,\n`order_id` INTEGER NOT NULL,\n`invoice_number` INTEGER NOT NULL,\n`shipment_tracking_number` VARCHAR(80),\n`shipment_date` DATETIME,\nFOREIGN KEY (`invoice_number` ) REFERENCES `Invoices`(`invoice_number` ),\nFOREIGN KEY (`order_id` ) REFERENCES `Orders`(`order_id` )\n)\nCREATE TABLE `Shipment_Items` (\n`shipment_id` INTEGER NOT NULL,\n`order_item_id` INTEGER NOT NULL,\nPRIMARY KEY (`shipment_id`,`order_item_id`),\nFOREIGN KEY (`shipment_id` ) REFERENCES `Shipments`(`shipment_id` ),\nFOREIGN KEY (`order_item_id` ) REFERENCES `Order_Items`(`order_item_id` )\n)\n']\\n\\n\\n### Task \\n\\nBased on the provided database schema information, List the customers' first name, middle initial, last name and payment methods.[SQL]\\nSELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name ,  T2.payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id WHERE gender_code  =  'M' UNION SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name ,  T2.payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id WHERE gender_code  =  'F' ORDER BY customer_first_name'\n    FROM CUSTOMERS AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  ="
  }
]