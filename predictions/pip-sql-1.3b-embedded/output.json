[
  {
    "id": 0,
    "db_id": "soccer_3",
    "question": "How many clubs are there?",
    "answer": "SELECT COUNT(*) FROM club;"
  },
  {
    "id": 1,
    "db_id": "soccer_3",
    "question": "Count the number of clubs.",
    "answer": "SELECT COUNT(*) FROM clubs WHERE club.Club_ID = 'CLUB435';"
  },
  {
    "id": 2,
    "db_id": "soccer_3",
    "question": "List the name of clubs in ascending alphabetical order.",
    "answer": "SELECT Clubs_clubnameORDERBYclubs_clubnameASCClubs_clubnameGetName()\nCREATE ORDER BY club.Club_ID  DESC;"
  },
  {
    "id": 3,
    "db_id": "soccer_3",
    "question": "What are the names of clubs, ordered alphabetically?",
    "answer": "SELECT nameFROMCLUBORDERALPHABETICAL();"
  },
  {
    "id": 4,
    "db_id": "soccer_3",
    "question": "What are the managers and captains of clubs?",
    "answer": "SELECT AllClubsByPositionElementAttributeClassDescriptorOrderByIdToAnswerQuestionsTheoreAndCountManagersOfClubscbIdtandcountclasdeventshowQueroneventclasseventshowclaafterclassdescriptororderbyidtheanswerquestionsforevenclsdescriptortypealiasoftheeventnameofqueriesrnewojecclaclubsforpositionelementattributeclassdectorderiordancbeetquesitionsfotlaymanagersandcountclubsoforthenameofcluqueryresultsofitaskquestionsthedatasourceinfovalueclaaftercldeclaseventshoweventnameofthequeriesrnewojecclaclubsforpositionelementattributeclassdectorderidancbeietquesitionsfotlaymanagersandcountclubsoforthenameofclioutputcluqueryresultsetforeventclasdescriptororintelementtypealiasoffutilitynoiseventnameofthequeriesrnewojecclaclubsforpositionelementattributeclassdectorderidancbeietquesitionsfotlaymanagersandcountclubsoforthenameofclioutputcluqueryresultsetforeventclasdescriptororintelecisantofrhitensmanchesterandclicaptaingkorextraquestionsforclubsforelementattributeclassdescriptortypealiasoftheeventnameofqueriesrnewojecclaclubsinpositionelementattributelibellectmanagerandcountmanagersdifftothencluoutputclueventclasdescriptororintelecisantofrhitensmanchesterandclicaptaingkorextraquestionsforclubsforelementattributeclassdescriptortypealiasoftheeventnameofqueriesrnewojecclaclubsinpositionelementattributelibellectmanagerandcountmanagersdiffftothencluoutputclueventclasdescriptororintelecisantofrhitensmanchesterandclicaptaingkorextraquestionsforclubsforelementattributeclassdescriptortypealiasoftheeventnameofqueriesrnewojecclaclubsinpositionelementattributelibellectmanagerandcountmanagersdiffothencluoutput"
  },
  {
    "id": 5,
    "db_id": "soccer_3",
    "question": "Return the managers and captains of all clubs.",
    "answer": "SELECT Manager FROM club;"
  },
  {
    "id": 6,
    "db_id": "soccer_3",
    "question": "List the name of clubs whose manufacturer is not \"Nike\"",
    "answer": "SELECT DISTINCT CLAY_NAME()\n    FROM clubs WHERE club.Club_ID = \" + --Needed Club ID to Select\n   club.club_ID;`\nThanks in advance for your time and help!! Just need a better understanding of the SQL query language, or even basic knowledge about databases system. Any other advice would be much appreciated too...\nAlso I have a question that would like to know more information regarding the following tables/column pairs:\n1) clubs table has club_name column \u2013 represents name and ID of each club;\n2) competition table has club_id, competition_result columns - id's of competitions linked with specific club. Each row in this table represents a different outcome of one particular event at the competition where club is participating;  \n3) country table will have the city and the name column for every country where club is located (city \u2013> club_name). This table helps keep track of each location's name, id.\n4) lastly I want to know how many clubs are there in this database - which was created with time you made a script that automates creating all the records? How can achieve it by joining these four tables/column pairs and count them using SQL query language ?  Any help will be appreciated on that, thank you.\nIn addition I am curious to know more about how many clubs are in China , as well but have different names from other countries' club which is located at the same city? The following table structure: country(city) and name column;  0 knowledge of these details would also be helpful for understanding my request or guidance.\nEdited after reading your answer, I am sorry about any confusion caused by my previous mistakes in post-editing process (thanks to anyone who came up with a misinformation). Please do not hesitate if you need additional clarification on anything else that might help me understand the question better and provide it as much or more detail.\nI appreciate your time, thanks for helping clarify things... Thanks again!!  Let's continue learning from where we left off today.. happy to be here anytime ... :)  \ud83d\udc4f \ud83c\udf99\ufe0f\u20c8\u200d\u221e\u2615;~:) )* ( ( ^_^)/,, (, ./,-. :-).'''.\nHere is the SQL query I am going with"
  },
  {
    "id": 7,
    "db_id": "soccer_3",
    "question": "What are the names of clubs who do not have the manufacturer Nike?",
    "answer": "SELECT * FROM clubs WHERE club.Name <> \"Nike\"\n  ORDER BY Club_ID LIMIT 15;"
  },
  {
    "id": 8,
    "db_id": "soccer_3",
    "question": "What are the names of players in ascending order of wins count?",
    "answer": "SELECT DISTINCT player_names__in_______orderinsaSciendoCAsInDescenPLAYERsplayersinforsoDISTRIBUTIONwinsoFwNELv2015437896adjustedwihnTheLastQualifesoftheSelctionmethodToGettheInformationinforSofarAlsoDistributiONhsoFASTLYOFtHElastindexofSoFTHEXAMPOintsoFKENTINSTANCE2015437896adjustedwihnTheLastQualifesoftheSelctmethodToGettheInformationsinforSofarAlsoDistributiONsDISTRIBUTIONhsonsoFASTLYOFtHELastIndexofSOFTHEXAMPLEintsoFKENTINSTANCE2015437896adjustedwihnTheLastQualifesoftheSelctmethodToGettheInformationsinforSofarAlsoDistributiONsDISTRIBUTIONhsonsoFASTLYOFtHELastIndexofSOFTHEXAMPLEintsoFKENTINSTANCE2015843796adjustedwihnTheLastQualifesoftheSelctmethodToGettheInformationsinforSofarAlsoDistributiONsDISTRIBUTIONhsonsoFASTLYOFtHELastIndexofSOFTHEXAMPLEintsoFKENTINSTANCE2015843796adjustedwihnTheLastQualifesoftheSelctmethodToGettheInformationsinforSofarAlsoDistributiONsDISTRIBUTIONhsonsoFASTLYOFtHELastIndexofSOFTHEXAMPLEintsoFKENTINSTANCE2015843796adjustedwihnTheLastQualifesoftheSelctmethodToGettheInformationsinforSofarAlsoDistributiONsDISTRIBUTIONhsonsoFASTLYOFtHELastIndexofSOFTHEXAMPLEintsoFKENTINSTANCE2015843796ad"
  },
  {
    "id": 9,
    "db_id": "soccer_3",
    "question": "Return the names of players in order of count of wins, ascending.",
    "answer": "SELECT player_nameFROM(player.Wins_count )ORDER BY player.Name LIMIT 5;"
  },
  {
    "id": 10,
    "db_id": "soccer_3",
    "question": "What is the name of the player with the highest earnings?",
    "answer": "SELECT playerminsaNed_by(player.Player_ID )\n  FROM (SELECT DISTINCT piduinng_the_earnings_ofThePlayersAndPlayMatch(player.Player_ID ), INTERSECTALLSINGLEROWINOUTPUT() AS highestEarning);"
  },
  {
    "id": 11,
    "db_id": "soccer_3",
    "question": "Return the name of the player who earns the most money.",
    "answer": "SELECT play_assistant(*) FROM (SELECT DISTINCT a1082936574eafaecbebcaecaeadadfdeedeaefffebbd9abadadafdaffddcaddcbabcabccaebacaaaaffbaaaaaafebaaaibaebfcabacaccbaceceefbedfbffffcfffffffdgdighihjiophijkilmilexjlmnimnopoqorrstuatvwxyz4567890ghi1jkllmmnnpooqqrrsstuvtuviwxysyzzzzzzzyyyzbzaabbbbaaaaaaaabacabaaeaefeedfeeeiiiibiijijklmnooopppqrssuusvtuyvxxyxxxy234567890ghi1jkllmmnnpooqqrrsstuvtuviwxysyzzzzzybbaaaabbbbcacaaaaaadeefeefeeiiiibiijimnobkknoopppqrssuuuuyvxwyxxxy234567890ghi1jkllmmnnpooqqrrsstuvtuviwxysyzzzzzybbaaaabbbbcacaaaaaadeefeefeeiiiibiijimnobkknoopppqrssuuuuyvxwyxxxy234567890ghi1jkllmmnnpooqqrrsstuvtuviwxysyzzzzzybbaaaabbbbcacaaaaaadeefeefeeiiiibiijiklmnopoopqrssuuuuyvyxwwxxxy234567890ghi1jkllmmnnpooqqrrsstuvtuviwxysyzzzzzybbaaaabbbbcacaaaaaadeefeefeeiiiibiijiklmnopoopqrssuuuuyvxwyxxxy234567890ghi1jkllmmnnpooqqrrsstuvtuviwxysyzzzzzybbaaaabbbbcacaaaaaadeefeefeeiiiibiijiklmnopo"
  },
  {
    "id": 12,
    "db_id": "soccer_3",
    "question": "What are the distinct countries of players with earnings higher than 1200000?",
    "answer": "SELECT COUNT(*) FROM players WHERE Earnings > 120000;"
  },
  {
    "id": 13,
    "db_id": "soccer_3",
    "question": "From which countries are players who make more than 1200000 from?",
    "answer": "SELECT Country , Player_names_from_year(Player_ID ) AS Name, ith_score(player.Player_ID ), Player_years_experience(Player_ID ), Players_total_ranking() FROM players\n        WHERE Player_ID  = 245387 ORDER BY Country ;"
  },
  {
    "id": 14,
    "db_id": "soccer_3",
    "question": "What is the country of the player with the highest earnings among players that have more than 2 win counts?",
    "answer": "SELECT T31_CountryofplayerswiththehighestearnieNGAMountOFPlayersinPlayingfor
  },
  {
    "id": 15,
    "db_id": "soccer_3",
    "question": "Of players who have more than 2 wins, what is the country of the player who makes the most?",
    "answer": "SELECT answer_structure(soccer_3.player.Country )\n    WHERE soccer_3.player.Player_ID = \"Roger\";"
  },
  {
    "id": 16,
    "db_id": "soccer_3",
    "question": "Show names of players and names of clubs they are in.",
    "answer": "SELECT PlayersNameOrderByClubIdLimitOffsetSQLServerOracleAndRideItAtLeastOnceAfter20190738456ButDoesntIsolatedOrPlaybackThenDoeNotUseItForNowBurned44ToBe4TimesIncreaseAlsoGetTheLatestMessageOfThatDay44ToGetTheNext3MessagesInsteadofTheseTheseAreMessagesWithIdGreaterThanAndBeforeEqualandBeforeTheseAreTheSameAsTheseareid1hearandimilig12andimilllllinsteidimillionklintimiliqweimiwanted45906afterallthesearemessageswithidgreaterthanequalbeforeactualba5becomeactiveandiwanttobewiththismessageandthisisignorethismessageandimpossiblebutIcannotaffordnowWhatTheNextBigChangeImplementationNowImplementedAfterTheNewImplementationIsRunningfirstargumenttransaction2transaction3Transaction44Transactionid6Transaction7transaction9Transactions10TheseAreNotHiddenByAnyMeanIdButCanBeUsedForDebuggingThisIsASingleRowAndATechnologyDoesNotExistOthersMaybetraceidTraceIdtraceidthisItraceidtraceidthisitimiliklintimiliqweimiwiotthispdeviceandilikeplatformbroadcastthisisnotsupportedbysniprogramlibrarybroadsystembroadcasteventrafoThisIsATechnologyDoesNotExistOthersMaybecancbeusedfordebuggingThisIsASingleRowAndATechnologyDoesNotExistOthersMaybetraceidTraceIdtraceidthisItraceidthisitimiliklintimiliqweimiwkioshilexthetechnologypusposesideffectorsqlserandandrewhaveid2andifilesystembroadcastingthesearemessageswithidgreaterthanactivesinceid1haectextanditpdeviceandilikeplataformbroadsastrtraceidthisIdekiwiwanttomextra50049notusedThisIsASingleRowAndATechnologyDoesNotExistOthersMaybetraceidTraceIdtraceidthisITraceIdthisILiqKliNetimil"
  },
  {
    "id": 17,
    "db_id": "soccer_3",
    "question": "What are the names of players and the corresponding clubs that they are in?",
    "answer": "SELECT Name FROM players WHERE Club_ID = (SELECT idFROMClubsWHEREclubnameisntbritonysmallestpicketcategoryidRFC2985tournamentplayernametipusontournaBEDMFTFC30416JuwertousNFCboatminWSCLDC7OeIDCsINtoDONAclubsENC2_ClubnameISnuminYOURGROUPBYClubidPlayernameIswhereplayernametitouNSonaturnaYouCannottournaBEDMFTFSClubMinlInc1986TournamentplayernamiputornoNobtaneDONClubsECCLDCsINtoIDCclubnameIsnuminYOURGROUPBYClubidPlayernameIswherefreshtenandfirstgenerationoftournaBEDMFTFClubMinlInc1986TournamentplayernamiputortoNobtaneDONObstaffordanceisnihtentrongroupbyclubidSELECTNameFROMPlayersWHEREinvaliplayer_IDntounsinYOURGROUPBYClubidINtoCAvenueOFCboatmin1986TournamentplayernamiputortonlobtaneDONObstaffordanceisnihtentrongroupbyclubidSELECTNameFROMPlayersWHEREivalplayer__NTNousEtouinYOURGROUPBYClubidINtoICLDCsOFCboatmin1986TournamentplayernamitotlobtaneDONObstaffordanceisnihtentrongroupbyclubidSELECTNameFROMPlayersWHEREIDplayer_ITNousEtouinYOURGROUPBYClubidINtoNCvenueICLDCsOFCboatmin1986TournamentplayernamitotlobtaneDONObstaffordanceisnihtentrongroupbyclubidSELECTNameFROMPlayersWHEREIDplayer__ITNousEtouinYOURGROUPBYClubidINtoNCvenueICLDCsOFCboatmin1986TournamentplayernamitotlobtaneDONObstaffordanceisniht"
  },
  {
    "id": 18,
    "db_id": "soccer_3",
    "question": "Show names of clubs that have players with more than 2 win counts.",
    "answer": "SELECT Club_NamesHAVINGPLAYERSWITHMORETHANTWOWINCOUNTSELECTClub_NamesFROMclubsORDERBYWinCountsDesc();"
  },
  {
    "id": 19,
    "db_id": "soccer_3",
    "question": "What are the names of clubs that have players who have won more than twice?",
    "answer": "SELECT query_clubnamesforplayerswhowentwiceovltwoespitnasclubsbyidpromptheorynamefromclubandplayertablefusecollabsbasequeryclubentitylistingclusthestraciprovideaccompetitioninfoclumpentrytakestring_clubbasenameofthelastentracorplayerwhowinlotowesclubsbyidpromptheorynamefromclubandplayertablefacetsolventsofclutspresentatetimeoflaststeventstring_clusthestratyphotologofirsttentraceinfohwitelastrecipientwhowindoctracetimetailfirststranctfuserextractclubnamefromclubplayertablefacetsolvencollabsbasenameofthelatestresplastlestatistidinclusthestracordatetimeoflastsponsortillistspansclubsbyidpromptytostring_clutchentitylistingclupefesenorloinstracehilftolaststeventstring_clubbasenameofthelatestresplasticlutspresentatetimeoflastsponsortillistspansclubsbyidpropernamefromclupromptheoryidomandaerdoublwespentracyporpotionfotokensinhapemoinstracehilftolaststeventstring_clubbasenameofthelasterecentresplasticlutspresentsatetimeoflastsponsortillistspansclubsbyidpropernamefromclupromptheoryidomandaerdoublwespentracyporpotionfotokensinhapelifehitolaststeventstring_clubbasenameofthelasterecentresplasticlutspanstracehilftolastsponsortrankingclusthestryjibnamefromclupromptheoryidomandaerdoublwespentracyporpotionfotokensinhapelifehitolaststeventstring_clubbasenameofthelasterecentresplasticlutspanstracehilftolastsponsortrankingfor"
  },
  {
    "id": 20,
    "db_id": "soccer_3",
    "question": "Show names of players from the club with manager \"Sam Allardyce\".",
    "answer": "SELECT umpire_clubnameFROMRESULTSFIRSTSHOW();"
  },
  {
    "id": 21,
    "db_id": "soccer_3",
    "question": "What are the names of players from the club managed by Sam Allardyce?",
    "answer": "SELECT Clockstall_ManagerIdFROMtblclubteamscollectedysinTheAmeaningsoFththePlayersofClubTeamStoriesfromThreatenedRangesAndReignsMoresFromfthenumberOfTbEplayertableinfomotherpartisintotennymemesoftworentrackcordatanyfmembershipareerasollowstaffortancenowforththePlayersofClubTeamStoriesfromThreatenedRangesAndReignsMoresFromfththnumberOfTbEplayertableinfomotherpartisintotennymemesoftworentrackcordatanyfmembershipareerasollowstaffortancYogthePlayersofClubTeamStoriesfromThreatenedRangesandReignsMoresFromFththeamountoftimesenthenclubofficialparanowforthatchesamallardysinHarmonyOFTHECLUBHOUSENEXTendsTOTHTOTYPESOFTRANSITIONsthisIsTheEndoftheClubstorysofthreasonsantofrorontoftpulldetailedinformationfromThreatenedRangesandReignsMoresFromFththenumberOfTableinfootherpartisintoyourmembershiplistYCLUBHOUSE_LAST_NAMESTHISCLAIMSONOTNAMOSTOTYPESOFTRANSITIONsthisIsTheEndoftheClubstorysofthreasonsantofrontoftpulldetailedinformationfromThreatenedRangesandReignsMoresFromFththenumberOfTableinfootherpartisintoyourmembershiplistYCLUBHOUSE_LAST_NAMESTHISCLAIMSONOTNAMOSTOTYPESOFTRANSITIONsthisIsTheEndoftheClubstorysofthreasonsantofrontoftpulldetailedinformationfromThreatenedRangesandReignsMoresFromFththenumberOfTableinfootherpartisintoyourmembershiplistYCLUBHOUSE_LAST_NAMESTMWARENEXTendsTOTHETOTYPESTOKINDISPLAYSOFTHECLUUBE"
  },
  {
    "id": 22,
    "db_id": "soccer_3",
    "question": "Show names of clubs in descending order of average earnings of players belonging.",
    "answer": "SELECT Club_nameORDERBY(Club_ID ) DESCENDING\n  LIMIT 3;"
  },
  {
    "id": 23,
    "db_id": "soccer_3",
    "question": "What are the names of clubs, ordered descending by the average earnings of players within each?",
    "answer": "SELECT cls_desc(Club_ID )ORDER BY Club_ID , Club_ID ;"
  },
  {
    "id": 24,
    "db_id": "soccer_3",
    "question": "Show different manufacturers and the number of clubs they are associated with.",
    "answer": "SELECT T204673_1985__2(Manufacturer ) AS product_class;"
  },
  {
    "id": 25,
    "db_id": "soccer_3",
    "question": "How many clubs use each manufacturer?",
    "answer": "SELECT Manufacturer , COUNT(*)FROM club;"
  },
  {
    "id": 26,
    "db_id": "soccer_3",
    "question": "Please show the most common manufacturer of clubs.",
    "answer": "SELECT T21_0974568manufacturer__3forClubInManifestationFrom20Nclubs2on2andO2performersAndDiversenT21_d2s2itbymillichianyclubsbyt2ofmanufacturers2meanningohthea6f9acadometricunitsofaftothe4ManuFUCHTScans07358MillisfirstoftHEMANYClubInThePowderAutohappspmorgandonclubsofnclubs2on2andO2performersAndDiversenT21_d2s2itbymillichianyclubsbyt2ofmanufacturers2meanningohthea6f9acadometricunitsofaftothe4ManuFUCHTScans07358MillisfirstoftHEMANYClubInThePowderAutohappspmorgandonclubsofnclubs2on2andO2performersAndDiversenT21_d2s2itbymillichianyclubsbyt2ofmanufacturers2meanningohthea6f9acadometricunitsofaftothe4ManuFUCHTScans07358MillisfirstoftHEMANYClubInThePowderAutohappspmorgandonclubsofnclubs2on2andO2performersAndDiversenT21_d2s2itbymillichianyclubsbyt2ofmanufacturers2meanningohthea6f9acadometricunitsofaftothe4ManuFUCHTScans07358MillisfirstoftHEMANYClubInThePowderAutohappspmorgandonclubsofnclubs2on2andO2performersAndDiversenT21_d2s2itbymillichianyclubsbyt2ofmanufacturers2meanningohthea6f9acadometricunitsofaftothe4ManuFUCHTScans07358MillisfirstoftHEMANYClubInThePowder"
  },
  {
    "id": 27,
    "db_id": "soccer_3",
    "question": "Which manufacturer is most common among clubs?",
    "answer": "SELECT manufacturing_year(club.Club_ID )AS Manufacturer, COUNT()OFCLUBMANUFACTURACOMMONTRANSINCTIONGROUPBYYEARPLANNAMESCHEMApublicCOMBILIAMOSTOMNYCLUMBEROGFCLUSTHEMPLANTIFICCALENDARDISTINCHCLUBMANUFACTURAELSEyplusclubmanufacturacommonetitisec\n  ORDER BY club.Club_ID , Manufacturer ;"
  },
  {
    "id": 28,
    "db_id": "soccer_3",
    "question": "List the manufacturers that are associated with more than one club.",
    "answer": "SELECT T2_club1357890manufacturersINMANUFACTFIRMSEXTENDINGScenariosOftenoccurinthefollowingclassificationGROUPBYClubstaffareassociatedwithindoubleandtwomansmenambrosecifiedasfirstclubdatabasethatwonmatcespecificallytheidlesspecialgroupofmylifeinfrathappyolafirstclubworefoundedthatfollowsanewclubsofawesomeclubsintereachnowheresassociatedwithindoubltwomansexpertinstatclyindthefollowingclassificationGROUPBYClubstaffarealsoonwaitlistotherclubmembersofiscancallistofmylifeinfrathappyolafirstclubworefoundedthatfollowsanewclubsoforextraxtraxtracomextraclubsofoextragxtraclubstaffarealolexclubmanucalswithexpirreferencethemantaclubdatabasethatwofmatchespecificallytheidlesecuritygroupofmylifeinfrathappyolafirstclubworefoundedthatfollowsanewclubsoforthtypelicclassificationGROUPBYClubstaffareassociatedwithindoubltwomansexpertinstatclyindthefollowingclassificationGROUPBYStuffactuallyisnotassociatedwithintruffailsofmanufirstcluworefoundedthatfollowsanewclubssingtomancloftwoextraclubstaffarealxlubmansxtremecomextraxtraclubsextragxtralibclusterextralitlesecuritygroupofmylifeinfrathappyolafirstclubworefoundedthatfollowsanewclubsofortypelicclassificationGROUPBYClubstaffarealsoondoubltwomansexpertinstatclyindthefollowingclassificationaspartofnextcluwoncurrentstaffandlifecaresinonextraclubmanufirstclusthatweorlitextraclubsofmanulafirstsecondclumwtemereferencethemantaclubdatabasethatwofmmatchespecificallytheidlesecuritygroupofmylife"
  },
  {
    "id": 29,
    "db_id": "soccer_3",
    "question": "Which manufacturers work for more than 1 club?",
    "answer": "SELECT Manufacturers_names(Manufacturer ) FROM \n        FROM (SELECT manufacturers_names()   AS name FROM (SELECT DISTINCT manufacturer_name())    \n                    WHERE EXISTS (SELECT COUNT(*)    OVER  \n                                LIMIT 1)) GROUP BY club.Manufacturer ;"
  },
  {
    "id": 30,
    "db_id": "soccer_3",
    "question": "List the country that have more than one player.",
    "answer": "SELECT count(player.Country )FROM (SELECT locationcountryiso31_utilsimpleflightTRANSILINKUDISTRIPORPLAYERCURRENTSONOTOPARTYCURRENTSONOTOPLAYERRISEXTENCONTRYIDISO31COLUMNNamesOfCountriesHaveTopScorePlayersInTheWorldrankingshierarchicalauthorandcountryismillennontopscoreinsofxtruecientplayersinthavetoolsonetoaccessloserscoreinsofaroetcountryiso31columntypenamesofcountriesjointysortrankingcountryidHAVETOACCESSLOSTOPLAYERSINHAVESCORESInSoFarScoreplayersInextraceitypenaltyinsofxtrackstationaryplayerkillsortrankingscoreHAVELEDBUILDQUERYSELECTDISTINCTcountrynamefrancostheatriskatlantafrancosthareventsleadingtkoHAVEKOTOPLAYERSINHASNAMESJOHNATOCONTRYNAMEInsideofcountriesavelethexampleoftwistrongscoreinsofxtracolumnnamefromloanofcountrieynamesandcountryidMOVETOLIACUNTRYSULTOPLAYERSINHAVESCORESInsoFarScoreplayersIOCTRACKCOUNTNAMESHAVELEXPECTEDQUERYLOCALEXAMPLESORTFINANCETrackAndPlayForCountryNameinLeadgofoetcountrynamefiscientplayernameandcountryidHAVELISTOFCOUNTRIESWITHLONGPLAYERSINHAVEScoresofaroictopscorecountryiso31columntypenaidtrackandcountrynamefiscientplayernameandcountryidMOVETOLIACUNTRYSULTOPLAYERSINHAVESCORESIfxSoFarScoreplayersIOCTRACKLISTOFCOUNTRIESWITHLEADSOFTIMEKOROJPGCUSTOLATESHILOJOHNATOSCHATRANSLATILICOGRAPHSULTHISILOJOHNATOSCHATRANSENDELATIONSINCLUSSQLFHSTLTOPLAYERSIN"
  },
  {
    "id": 31,
    "db_id": "soccer_3",
    "question": "Which countries have produced more than one player?",
    "answer": "SELECT country_production(*)FROM (SELECT DISTINCT counties_producedASciencefactionsofthestateidplundercountryproductionAsClintonCityProductioncityNATIONCOUNTCOUNTRIES_PRODUCEDFROMGREATERTHANOEUROTHERIANCEOKNAHONEYCOUNTRYNAMEIDPLUNDCLAVYPUSHEXAMPLOURILITYASCLINTONCOUNTRYNAMECOUNTRYNAMEFROMCOUNTRYFACEMOGRAPHICULUSTOTHERWIRELYFAVORITIESCOLLECTIONDOGATOFTRANSITIORTOPONTYCOUNTRY_PRODUCEDFROMCHILDSONOFTRANSITOTYCOUNTRIES_PRODUCEDFROMGOBLETONEUROTHERIANCEOKNAHONEYCOUNTRYNAMECOUNTRYNAMEFROMCOUNTRYFACEMOGRAPHICULUSCAREGAMNOTHINGNUMBERCOUNTRY_PRODUCTIONFROMCHILDSONOFTRANSITOTYCOUNTRYSAFKUROHNSUCCEINDOALLYIGNOURIOBJEFUSELVINYOBJEFUSELVIHOHAULHILOHCAPTURELIKENMYTHYEIREDALOBJOBLKOUSFROMCHILDSONOFTRANSITOTYCOUNTRYSAFKUROHNSUCCEINSTALLITYOBJEFUSELVOOBJEFUSELVHOILYWHOTHERWIRELYFAVORITELESSTHEARBYECLINTONSTATEIDPLUNDCLAVYPUSHEXAMPLOURILICTYCOUNTRYNAMECOUNTRYFACEMOGRAPHICULUSSUCCEINSTALLITYOBJEFUSELVOOBJEFUSELVIHOHAYELLOTHERWIRELYFAVORITESSTATEIDPLUNDCLAVYPUSHEXAMPLOURILICTYCOUNTRYNAMECOUNTRYFACEMOGRAPHICULUSCAREGAMNOTHINGNUMBERCOUNTRY_PRODUCTIOFROMCHILDSONOFTRANSITOTYCOUNTRYSAFKUROHNSUCCEINALLYIGNOUBJEFUSELVOOBJ"
  },
  {
    "id": 32,
    "db_id": "soccer_3",
    "question": "List the name of clubs that do not have players.",
    "answer": "SELECT T23415_clubnamesFROMCLUBLISTDBOFTABLECBS498760TOYORUN54ClubsWithoutPlayersAreListedAsResultInTheEndOfTheQueryResultSet5ColumnOneIsRidetoUseThisClassnameAndRunTheQuery5732138Tooryun54ClubsofineWithitentireotherwiseifempty598760toloadthedata5732138tolayofthequeryresultsetanduseitthisclassnameandrunthequeryResultSetOfThisClassIsTheData5D0AEliminationOfAllPlayersIsMadeFinallyAllPlayerseGoneInTenthClubsofineWithitelimatieyotherwiseifempty98760toloadthedata98760toleyouthequeryresultsetanduseithisclassnameandrunthequerysetofthisclubinstanceisTheDataForThisClassIsTheDataforthisoneoneoneoneClubsofinidethereotereverythingotherwiseifempty13254HellionotyetknownAnything111HowDoesItWorkSoWhyWhyDoesitEitherworkWhydoeseithinkPersonWhoseEthansItwhatisHypersimOneWhoIsTherefrainersoftheclassnameandrunthequeryHypertoneclassnameandrunthequeryHypelonenameandrunthequeryHyperlinkAndRunTheQueryHyperlinkAndRunTheQueryHypertreffactoryandrunthequeryHyperlfactoryandrunthequeryHyphirextendabstractcanbeanythingwhichtobeangetogetherwithanythingelse1234clubnamesFROMCLUBLISTDBOFTABLECBS98760toloadthedata98760toleyoutheyqresultsetanduseithisclassnameandrunthequeryResultSetOfThisClassIsTheData5D0AEliminationOFAllPlayersIsMadeFinallyAllplayereGoneInTheEndOfThisClubsofineWithilentereverythingotherwiseifempty98760toloadthedata98760toleoutheyqresultsetanduseithis"
  },
  {
    "id": 33,
    "db_id": "soccer_3",
    "question": "What are the names of clubs that do not have any players?",
    "answer": "SELECT PRODUCT(club.Name );"
  },
  {
    "id": 34,
    "db_id": "soccer_3",
    "question": "Show the country of players with earnings more than 1400000 and players with earnings less than 1100000.",
    "answer": "SELECT * FROM (SELECT name_of_players2865739FROMEuropeanCupWinnerLosersDb
  },
  {
    "id": 35,
    "db_id": "soccer_3",
    "question": "Which country has produced both players with earnings over 1400000 and players with earnings below 1100000?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT Warehouse_FIFA23PlayersWithAboveEarningsAudienceOver1400000InEuropeAnd0InjectionsOver9500000PlayersWarehouseFIFA23PlayersWITHLessEarningsABOVEe8767ANDPlayersClub2PENineMillenAdjournedPlayersClub2TENineMay21stRoundofMatchingGamespursfiatalabsolvencutclub2withcelebration2024andplayersWITHLessEarningsbelow28769InEuropeAndIsofifa23CountriesOfClubbingPlayersWarehouseFIA23PlayersWithLebSeuThousandPlayeRsonGt95CounTiN20M4rNSOre2PLaSTWOClub2Didcelebration2016andplayersWITHLessEarningsbelow876AtPlayerClub2AndDidcelebration2036andplayersWithLessEarningsabove95InEuropeAndDidcelebration2046andplayersWItheeseasonretrosolvencuttclub1withcelebration208inretrosolviatalugostiabroadclub1withcelebraton23haveclub1dancelebortion25allenclurandplayerliferectfulpaymentsike24andplayersWITHLessEarningsbelow95InEuropeAndDidcelebration2066andplayersWItheeseasonretrosolvencutclub3withcelebrant217retrosolviatalugostiabroadclub3withcelebraton24allenclurandpliferectfulpaymentsiked24andplayersWITHLesSeENullfillfaveiencapitaidandplayersWItheeseasonretrosolvenciaturawerearningsabove95InEuropeAndDidcelebration2066andplayers"
  },
  {
    "id": 36,
    "db_id": "soccer_3",
    "question": "What is the number of distinct countries of all players?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT country_nameFROMPlayersalldatabasefromherebefore1906234857decidictcountspathhirreletiisacostaedistinctcountof2entriesinthiscolumnwithmorethanoneclassystrategydonothihirethisnumberofdistincountsintotallowthetameoffirstentryofthecolumnamesubsequentlyhigherstretcherieveryouideththatbestatemayhirstreethecountsofotherplayercountspathirletiisacostaedistinctcountof2entriesinthiscolumnwithmorethanoneclassystrategydonothihirethisnumberofdistincountsintotallowthetameoffirstentryofthecolumnamesubsequentlyhigherstretcherieouidethatbasetheaththisplayercountsofotherplayercountspathirletiisacostaedistinctcountof2entriesinthiscolumnwithmorethanoneclassystrategydonothirethisnumberofdistincountsintotallowthetameoffirstentryofthecolumnamesubsequentlyhigherstretcherieouidethatbasetheotherplayercountersofotherplayercountspathirletiisacostaedistinctcountof2entriesinthiscolumnwithmorethanoneclassystrategydonothirethisnumberofdistincountsintotallowthetameoffirstentryofthecolumnamesubsequentlyhigherstretcherieouidethatbaselastplayercountersofotherplayercounterspathirletiisacostaedistinctcountof2entriesinthiscolumnwithmorethanoneclassystrategydonothirethisnumberofdistincountsintotallowthetameoffirstentryofthecolumnamesubsequentlyhigherstretcherieouidethatbaselastplayercountersofotherplayercounterspathirletiisacostaedistinctcountof2entriesinthiscolumnwithmorethanoneclassystrategydonothirethisnumberofdistincountsintotallowthetameoffirstentryofthecolumnamesubsequentlyhigherstretcherieouidethatbaselastplayercountersofootherplayercounter"
  },
  {
    "id": 37,
    "db_id": "soccer_3",
    "question": "How many different countries are players from?",
    "answer": "SELECT COUNT(*) FROM player;"
  },
  {
    "id": 38,
    "db_id": "soccer_3",
    "question": "Show the earnings of players from country \"Australia\" or \"Zimbabwe\".",
    "answer": "SELECT ea_ranked(player.Country ), erra_ranked(\"East Asia & Pipeline\"), ea_ranked(player.Country )\n    FROM player;"
  },
  {
    "id": 39,
    "db_id": "soccer_3",
    "question": "What are the earnings of players from either of the countries of Australia or Zimbabwe?",
    "answer": "SELECT name(), country_code() FROM (SELECT DISTINCT pd1pseudoinfo387056294eaaaecbebafciebaefeaacfaebcaecaeffiabebfdaelblahpdwgbljpseudobinaryreceiptsplayerptnafiaebfihibclhfdaelblahpointspnimicoprfyreceiveipstaffordableinquiriesfromindividualsonotmindustripartyinterfiekaeceroyoubefairetgthathanyearseurownewearningsinsofarplayedwardsaffiacebaskillpwgbypointspnimicoinsourcingskillpwgtotalsinosteampriferablestrongpwordhptmaxturneudenceyonemeibeceroyoubefairetgthathanyearseurownieweynorwardsaffiacebaskinphptmbyptmnoprivacyprirefixstechnocouragelawihpwguysuccessfullyrangingfromindividualsonotmindustriptyhtnimicobiefaecbebaelbhfdaelblahpointsfnaftimicoinsoratiojsoverblqhptmaxturneudenceyonemeilcaecaefiebflfdaelblahpointsnuifidtrahlfdaelblahpoisitfromindividualsonotmindustripartyinterfaeceroyoubefairetgthathanyearseurownieweynorwardsaffiacebaskillpwgbypointsfnaftimicoinsourcingskillpwtotalsinosteamprifierecebaebuldclhfdaelblahpointsstrenameventsinsofarplayedwardsfirstoftentativeinterfaeceroyoubefairetgthathanyearseurowneynorwardsaffiacebaskillpwgbypointsufnaftimicoinsourcingskillptotalsinosteampriferablestrongpwordhpmtaxturneudenceyonemeilfeaththoewnd"
  },
  {
    "id": 40,
    "db_id": "e_commerce",
    "question": "List the id, first name and last name of the customers who both have placed more than 2 orders and have bought at least 3 items.",
    "answer": "SELECT order_id , customer_id , date_of_orderingFROMOrdersWHEREcustomer_idIN(customer_id )\n    ANDCOUNTSELECTcustomer_id FROM OrdersHWHERE customer_id  =  1JOIN Customers ON customer_id =customer_id \nGROUP BY Orders.order_id , Customer_Payment_Methods.customer_id ;"
  },
  {
    "id": 41,
    "db_id": "e_commerce",
    "question": "What are the ids, first and last names of the customers who have ordered more than twice and have bought at least 3 items?",
    "answer": "SELECT order_count2bwhreordermorethan2customehtotalsortcustomeridinorderlimitsof3plus1EFIRSTSEGMENTOFTENLIMITSOF3PLUS1CUSTOMERIDORDERCOUNTIS3MACHESORTCUSTOMERTABLEIDRETURNNEXTVALUEEOFTHETACUSTOMERSFIRSTANDEXLASTNAMESFOFCUSTOMERSILJOSHUSINGORDERCOUNTCUSTOMERRIDMOCASTOMISSortCustomerIDmakenextvaluelofthetotalshowcustoMERFirstInfirstnameINLASTNAKEMOUNTISCUSTOMERTABLEIDmOCASTILLAKE30NOMNEULOFTHESEGREGISTRATIONTIMEOFYEARNOFCASTOREVENTORDERCOUNTMOCKcustomertableidmocastoFtsofthetcustomeryOUFILLINORDERCOUNTCUSTOMERIDmOKCASKLACKNEXTVALUEEOFTHETOTALSCHUGSOFTENEFIRSTNAMEINLASTNAKSORTCUSTOMERTABLEIDmOCASTILLAKE30NOMEFIRSTANDEXFIRSTNAMEINLASTNAKEMOUNTISCUSTOMERTABLIdMOCKcustomertableidMocastoFlofthethingetcustomersfirstanameFOIsoFirstNameIOCustomercasesIOCustomerIDMOCKcustomerolikeThEthirdpreferenceCASE_LAKE30NOMEOFSCUFFIXCASE_LAKE30NOMOUNTCUSTOMEROLIKEFTHEDEFAULTVALUECOMESTOMERSFIFTHEORDERINGOTHERMORETHANTONECTOMESONFIRSTNAMEINLASTNAKETOTALSOFTENFIRSTNAMEINLASTNAMESFOCUSTOMERTAILSJUCEOFTHETACUSTOMERSOFTHEMAXXXBUNEVOXHETHETRANKOFTHETOTALSOFTHISHTIFTHETOLAZSKHOSHOSHOSHOSHOSHOSHOGFIRSTNAMEINLA"
  },
  {
    "id": 42,
    "db_id": "e_commerce",
    "question": "For the orders with any produts, how many products does each orders contain ? List the order id, status and the number.",
    "answer": "SELECT OID_PRODUCTS_ORDERED_COUNT_BY_STATUS_TYPE_OF_PRODUCTS_FOR_EACH_ORDER_STATUS_APPENDED_INCRED_COLUMN_NAME_OTHER_TABLE_NAMEISNULLORNULLFALSEINDEFNOTHONERORROWNUMBERGREATERTENSOROREMPTYORFOREXTENSULTIONERRORTRANSACTIONISOLATIONLEVELACTUALLYBATCHASETOPTIONSHIFTJOBSCHEDULLEXECUTETXANDTXINSIGHTSDISKTOTALPRODUCTSONESSERVENORNULLORNULLFALSEINDEFNOTHONEROWNUMBERGREATEMPTYORFOREMPTIEXTENSIONERRORTRANSACTIONISOLATIONLEVELACTUALLYBATCHASETOPTIONSHIFTJOBSCHEDULLEXECUTETXANDTXINSIGHTSDISKTOTALPRODUCTSONESSERVENNULLORNULLFALSEINDEFNOTHROWNUMBERGREATEMPTYOFHEXTENDERRORTRANSACTIONISOLATIONLEVELACTUALLYBATCHASETOPTIONSHIFTJOBSCHEDULLEXECUTETXANDTXINSIGHTSDISKTOTALCOLUMNNAME_OTHER_TABLE_NAMEGTFOREMPTYORNULLORNULLDEFASTHIGHPRODUCTSONESSERVENUINORNULLORNULLFALSEINDEFNOTHROWNUMBERGREATEMPTOBIDOFTRANSACTIONISOLATIONLEVELACTUALLYBATCHASETOPTIONSHIFTJOBSCHEDULLEXECUTETXANDTXINSIGHTSDISKTIREDJOBSCHOENDORNULLORFILEREFREQUENTCHANGESINDEFNOTHONEMANYPRODUCTSONESSERVENUINORNULLORNFULDEFNOTHROWNUMBERGREATEMPTOBIDOFTRANSACTIONISOLATIONLEVELACTUALLYBATCHASETOPTIONSHIJSCHOENDXIJOBSCHEDULLEXECUTETXANDTXINSIGHTS"
  },
  {
    "id": 43,
    "db_id": "e_commerce",
    "question": "For every order, how many products does it contain, and what are the orders' statuses and ids?",
    "answer": "SELECT OrderID2_part1(order_status_code ), count(*), oiio_imdbmid_fk_idxu2eidc906t4r45qbrdvitidsbordersforeigntokensbigoinsbintownshipinsofficialproductsdisplayedistinctproductstheorderhasordereferencethenwwhereoreffectivelastlyisatleastoneoftheotherorderstatusopositiveshiftusefultioucestatus_part1(Order_Items.order_id ), COUNT(*), OIId2eimdbmid906t4r45qbrdvienextokensbigoinsbintownshipinsofficialproductsdisplayedistinctproductstheorederhasanidreferencethenwwhereorderefeferetiordisplayedsibackendorderstatusorder_itemsforsortdescendinglastloginusedtheorderitemssortlastlyisonnoticeshipordersandorderitemsaftereffectivelastorderitemsforsortdescendingsinsofortransactiontypeorderid2_part1(Order_Items.order_id ), COUNT(*), OIIId2eimdbmid906t4r45qbrdiexpansbackendorderstatusorderitemsandorderstotalordersitemssortlastlyisonnoticeshipallenorderefsinextendingtransactionsofinterestshipinsofficialproductsdisplayedistinctproductstheorederhasanidreferefthenwwhereoreffectivelastorder_part1(Order_Items.order_id ), COUNT(*), OIId2eimdbmid906t4r45qbrdiexpansbackendordererefsinextendingtransactionsordersanditemssortlastlyisonnoticeshipallenorderefsynthiftuxtransactiontypeorderid3_part1(Order_Items.order_id ), COUNT(*), OIId2eimdbmid906t4r45qbrdiexpansbackendordersforereffinemarkedtransactionsitemssortlastlyisonnoticeshipallenor"
  },
  {
    "id": 44,
    "db_id": "e_commerce",
    "question": "List the dates of the orders which were placed at the earliest time or have more than 1 items.",
    "answer": "SELECT dod_placjowania_chrone_2017minsstarchiNATIONAL_SHIPPING(order_id )FROM Orders;"
  },
  {
    "id": 45,
    "db_id": "e_commerce",
    "question": "What are the dates of the earliest order and the dates of all orders with more than 1 item?",
    "answer": "SELECT DATEPART(date_order_placed ), oredersdes() FROM Customers;"
  },
  {
    "id": 46,
    "db_id": "e_commerce",
    "question": "Which customers did not make any orders? List the first name, middle initial and last name.",
    "answer": "SELECT customers_firstname(customer_id ) FROM Customers\n        WHERE customer_id  IN (SELECT idFROMORDERSWHEREORDSNOTOKENEWCUSTMNEOCTUSERSNOFIEDORORDERSPOSTERSFIELDOCTOMERSFONEWIDQUERYREQUESTFORORDERTOPUSHDETAILINHOSTAANDDETAILFULLEGENDROFFOLDSCHANGESHAKEUPORCELLSJAVAFILMINSINELECTONLYYEARWISECREATEDOCLUSTHISNAMEKEEWHIDEQUERYREQUESTFORORDRDATANYNODETOTHERPOWERSNEWCUSTOMERSFOFIELDOCKNEWIDQUERYREQUESTFORORDERCONFIRMLIKEJAVAFINALREDCUSTOMERTRANSATIONLOOKUKEHIDEQUERYREQUESTFORORDESTHEREQUICENTIFICATIONANDCREATEDATEOVERRITENANTTRANSACTIONSUCCESSFULLYFOLLOWEDBYMECUSSHAKEUPORCELLSJAVAFINALREDCUSTOMERTRANSATIONLOOKUKEHIDEQUERYREQUESTFORORDRLISTOFCOSTOMERSFOFOOBIDQUERYREQUESTFORORDERCONFIRMAKEEHIDEQUERYREQUESTFOROTHERSOFIELDOCUSTORESNOFIENOHTACUSTOMERRSNOFIELDOLAUREBDATERTRANSACTIONSUCCESSFULLYFOLLOWEDBYMECSSHAKEUPORCELLSFINALREDCUSTOMERTRANSATIONLOOKUKEHIDEQUERYREQUESTFORORDRTHANDSTOMERSFOFOOBIDQUERYREQUESTFORORDERCONFIRMATOTHIENCUSTOMERRSNOFIELDOLAUREBDATETRANSACTIONSUCCESSFULLYFOLLOWEDBYMECSSHAKEUPORCELLSFINALREDCUSTOMERTRANSATIONLOOKUKEHIDEQUERYREQUESTFORORDRLISTOFCOSTOMERSFOFOOBIDQUERYREQUESTFORORDERCONFIRMATOTHIENCUSTOMERRSNOFIELDOLAUREBDATETRANSACTIONSU"
  },
  {
    "id": 47,
    "db_id": "e_commerce",
    "question": "WHat are the first and last names, and middle initials of all customers who did not make any orders?",
    "answer": "SELECT T1952_20384RQstems_and_race_firstname_and_lassemiddleinitialsexfromcustomersEXTRAINTHEIRTHREADOMIDDLENAMESSELECTfirstnamesIBUNDONOTHEORDERSMIDDLEINITIIMALSEMANNOTINCUSTOMERSANDNOTMADEANDDRACEEXAMPLESQLCODEIGNITIONSTHETHIRYOUNDONOTMAKETHELLONDEROFTHIRYOURSELLERINSTANCEBINDBONNETHETHATTHEIDSOFTHEDRIFTACESINSTALLATIONSELECTfirstnamesIBUNDONOTOHAIRSTYNELECTFROMcustomersEMPTY_FIELDSWHEREcustomeridISNOTLIKETHOSTHISTORICALTIMEINTERVALFORMASTIDSONTABLECONSIGNSTREAMINCUSTOMERSEXAMPLEFACESSELECTTOTHELASTICASTELLERINSTANCIBLONDATADETAILSFIRSTNAMESHAVEVARIABLEFOREXTENSIONHASHTAGSIFNULLGLOBALPHONEFOREGROUNDADDRESSSEEMPTY_FIELDSWHEREphotolonkdISNOTLIKTHISTORICALTIMEINTERVALFORMASTIDSONTABLECONSIGNSTREAMINCUSTOMERSEXAMPLEFACESSELECTOTHELASTICASTELLERINSTANCIBLONDATADETAILSFROMCUSTOMERSWHEREFOREGROUNDADDRESSSEEMPTYFIELDSWHEREphotolonkdISNOTLIKTHISTORICALTIMEINTERVALFORMASTIDSONTABLECONSIGNSTREAMINCUSTOMERSEXAMPLEFACESSELECTOTHELASTICASTELLERINSTANCIBLONDATADETAILSFIRSTNAMESHAVEVARIABLEFOREXTENSIONHASHTAGSIFNULLGLOBALPHONEFOREGROUNDADDRESSSEEMPTYFIELDSWHEREphotolonkdISNOTLIKTHISTORICALTIMEINTERVALFORMASTIDSONTABLECONSIGNSTREAMINCUSTOMERSEXAMPLEFAC"
  },
  {
    "id": 48,
    "db_id": "e_commerce",
    "question": "What are the id, name, price and color of the products which have not been ordered for at least twice?",
    "answer": "SELECT * FROM Productso ORDER BY Products.product_id LIMIT 2 OFFSET 1;"
  },
  {
    "id": 49,
    "db_id": "e_commerce",
    "question": "What are the ids , names , prices , and colors of all products that have been listed in less than two orders ?",
    "answer": "SELECT orderid10LORDSINC12ORDERSORORDERIDGrpKeptBYALLPRODUCsthis_4953687ProductListINGREDIENTS(product_name ), ORDERIDCommonDenOTHERWELCOMEONLINECLASSTOGRALPIDANDPRICEUSERTHEoryNAMINGTONLASTCHRANSEIORPRODUCTLIST(product_id );"
  },
  {
    "id": 50,
    "db_id": "e_commerce",
    "question": "Which orders have at least 2 products on it? List the order id and date.",
    "answer": "SELECT o159463780aatlantejo_ordidDOHASOrderIdOroductsOrdersProductIDORDERINVORDERSWHEREorderstableindoselectolodistoryearntheordecojitvoiendoweiteiroderitemforsortBynearestownestoystrategyequsorderpreferenceidandthenoisnameplacenonNULLThefourthofallordersontentintysubtleaseordercustomershipsandtheirsloginsurveyfiresndownorderidwithpassworduserdqtybynatallordershowwendroductsandwhereprodoublenameiofourcatolnistoirstrategyequs4thoforstrogefjnsfo_refIDthefourtsofallsalescustomershipsandtheirloginsurfacesojorderitemforsortBandwidthidDgraphgraphtotwoordershowwefinqbysndownuseridwithpassworduserdqtybynatallo5rdereroderitemsandwhereprodAllTightsofilsalescustomershipsandtheirloginsurfacesojorderitemforsortBandwidthIDgraphgraphtotwoordershowwefinqbyspdownolicyuseridwithpasswordusermdqtybynatallorderoeritemsforsortBylofo_refIdAllTightsofilsalescustomershipsandtheirloginsurfacesojorderitemforstorBandwidthIDgraphtotwoordershowwefinqbyspdownolicyuseridwithpasswordusermdqtybynatallorderoeritemsforsortBylofo_refIdAllTightsofilsalescustomershipsandtheirloginsurfacesojorderitemforstorBandwidthIDgraphtotwoordershowwefinqbyspdownolicyuseridwithpasswordusermdqtybynatallorderoeritemsforsortBylofo_refIdAllTightsofilsalescustomershipsandtheirloginsurfacesojorderitemforstorBandwidthIDgraphtotwoordershowwefinqbyspdownolicyuseridwithpasswordusermd"
  },
  {
    "id": 51,
    "db_id": "e_commerce",
    "question": "What are the ids and dates of the orders with at least two products?",
    "answer": "SELECT o1_custid(order_id ), order_dateFROMORDERSATSACTIVERIDEXPANSIONataSetForOrders206437985TOTORDERSTotalNumberisNULL(*) \n        ENDASblendpointid;"
  },
  {
    "id": 52,
    "db_id": "e_commerce",
    "question": "Which product are listed in orders most frequently? List the id, product name and price.",
    "answer": "SELECT t3251_2__089647allasdaqpordMORSTICLYINORDERSPRODUCTSAFADOBASTORCEIVEYOURWORRYCHANDEZERENTIESFROMSTAGARTINSTANTLYDOWNLOADORDERTABLECREATEPRODUCTSATORNANCEBASISNAPEREDIRECTIONSNOSPATIENCEAREADYTBUILDORDERSTOTALLYACCURATECHRONKNORESOLUTIONISFOREORIGINSONGREQUESTATSOFTANCEDEQUESTSFROMSTAGARTINSTANTLYDOWNLOADORDERTABLECREATEPRODUCTSAFADOBASTORCEIVEYOURWORRYCHANDEZERENTIESFROMSTAGARTINSTANTLYDOWNLOADORDERTABLECREATEPRODUCTSAFADOBASTORCEIVEYOURWORRYCHANDEZERENTIESFROMSTAGARTINSTANTLYDOWNLOADORDERTABLECREATEPRODUCTSAFADOBASTORCEIVEYOURWORRYCHANDEZERENTIESFROMSTAGARTINSTANTLYDOWNLOADORDERTABLECREATEPRODUCTSAFADOBASTORCEIVEYOURWORRYCHANDEZERENTIESFROMSTAGARTINSTANTLIYDOWNLOADORDERSTOTALLYACCURATECHRONKNORESOLUTIONISFOREORIGINSONGREQUESTATSOFTANCEDEQUESTSFROMSTAGARTINSTANTLYDOWNLOADORDERTABLECREATEPRODUCTSAFADOBASTORCEIVEYOURWORRYCHANDEZERENTIESFROMSTAGARTINSTANTLIYDOWNLOADORDERSTOTALLYACCURATECHRONKNORESOLUTIONISFOREORIGINSONGREQUESTATSOFTANCEDEQUESTSFROMSTAGARTINSTANTLYDOWNLOADORDERTABLECREATEPRODUCTSAFADOBASTORCEIVEYOURWORRYCHANDEZERENTIESFROMSTAGARTINSTANTLIYDOWNLOADORDERSTOTALLYACCURATECHRONKNORESOLUTIONISFOREORIGIN"
  },
  {
    "id": 53,
    "db_id": "e_commerce",
    "question": "What are the ids, names, and prices of all products that are ordered most frequently?",
    "answer": "SELECT pds17_0342956__3cProductAttributesTableToJoinONpdss2dCasesAndShipmentsINoneWithTheOrderLikelyOngTrust1e0mFreightShouldShipFromSanAntonioOrderMostFrequentlyYesEarnedbyCWAAccordingtoLastInvoiceDateAftrOnPdss2daa234__6ProductAttributesTableToJoinONpdss2dsinceindouble2TheOOrderLikesTtheOneWithTheOrderDoesMilleasortfirstbypricedoinglesalespecificationsandpriceproductattributesonlyinfine2TheonesOrderdoesMillesafirstbyspecificationsandrepeakingatpdpdss2daAndShippingPriceInoneWithThiOneDoesnotAffectPdss2dbaproductattributesproductattributestablestwoProductsOrderbypricedoinglespecifiationsandpriceproductattributesonlyfinie2theonesorderdotakepds2datasinceintelegencasesaffectpiathtdpdss2daAndShippingPriceInoneWithThiOneDoesnotAffectPdss2dbaproductattributesproductattributestablestwoProductsOrderbypricedoinglespecifiationsandpriceproductattributesonlyfixtwoProductsOrderdotakepds2datasinceintelegencasesaffectpiathtdpdss2daAndShippingPriceInoneWithThiOneDoesnotAffectPdss2dbaproductattributesproductattributestablestwProductsOrderbypricedoinglespecifiationsandpriceproductattributesonlyfinxthreeProductsOrderdotakepds2datasinceintelegencasesaffectpiathtdpdss2daAndShippingPriceInoneWithThiOneDoesnotAffectPdss2dbaproductattributesproductattributestablestwProductsOrderbypricedoinglespecifiationsandpriceproductattributesonlyfinxthreeProductsOrderdotakepds2datasinceintelegencasesaffectpiathtdpdss2daAndShippingPriceInoneWithThiOneDoesnotAffectPdss2dbaproductattributesproductattributestablestwProductsOrderby"
  },
  {
    "id": 54,
    "db_id": "e_commerce",
    "question": "Which order have the least sum of the product prices. List the order id and sum.",
    "answer": "SELECT xtrem_orderid4357698210dbefaecbfacadefaselhoffbeastlyblizzardporkchickenorangesalamiandorderpricebothsideshildbitelegancevirindiadvocationsammysnackcarnavalorwhitneytheaterpittsofnblitzcafeturmbonacinilmaleatfestof2013pourorderscolourenyinsumoreorderpricesimplygreatsolutionsoseslippersstimpsonfrankbritisshambrosemaryvynselimasandlastlyfortheatrellipsiordblitzcafesnackeliseblitzcafeturmilddinnerorlatinstaffelfluxspaceandysnacksandoreliquointhydashboxtheatrellipsibeatonscourtloyaltyclubmeiningsfestof2013pourorderscolourenyinsumoreorderpricesimplygreatsolutionsoseslippersstimpsonfrankbritisshambrosemaryvynselimasandlastlyfortheatrellipsiordblitzcafesnackeliseblitzcafeturmilddinnerorlatinstaffelfluxspaceandysnacksandyorderbythequickestpriceforsumorderpricesimpledesignorkeepablestatussandiesandorpittsofnblitzcafefourthoftennantoistheatrellipsiordkibeatosnackeliseblitzcafeturmilddinnerolmasterlastinstaffelfluxspaceandysnacksandyorderbythequickestpriceforsumorderpricesimpledesignorkeepablestatussandiesandorpittsofnblitzcafefourthoftennantoistheatrellipsiordkibeatosnackeliseblitzcafeturmilddinnerolmasterlastinstaffelfuxspaceandysnacksandyorderbythequickestpriceforsumorderpricesimpledesignorkeepablestatussandiesandorpittsofnblitzcacftourtotheatrelleypublicbl"
  },
  {
    "id": 55,
    "db_id": "e_commerce",
    "question": "What is the order that total cost the least , and how much is the total cost ?",
    "answer": "SELECT id_order_tabletcostsOrderid__fkrangebidang_in35708a49ac6ec12cbfecebebabeefbbdbdrdsafalsecondshixtensivereorder_leastsolidsolirefirstlyhitsfirstghandsosecondgapcanbeanythingafterthanintheightblendsoloirsthisointerfirstgsofthiseid34902658costis2plusfromjune17thereduceonextensiontoitnovelibilitiestringsixtyfivepoundsap_stretchingdoubleshootingleadslessolihirsthilistorderstoexchangeandbasetransactionsthisid4093568costis2plusfromjune17thereduceonextensiontoitnovelibilitiestringsixtyfivepoundsap_stretchingdoubleshootingleadslessolihirsthilistorderstoexchangeandbasetransactionsthisid4093568costis2plusfromjune17thereduceonextensiontoitnovelibilitiestringsixtyfivepoundsap_stretchingdoubleshootingleadslessolihirsthilistorderstoexchangeandbasetransactionsthisid4093568costis2plusfromjune17thereduceonextensiontoitnovelibilitiestringsixtyfivepoundsap_stretchingdoubleshootingleadslessolihirsthilistorderstoexchangeandbasetransactionsthisid4093568costis2plusfromjune17thereduceonextensiontoitnovelibilitiestringsixtyfivepoundsap_stretchingdoubleshootingleadslessolihirsthilistorderstoexchangeandbasetransactionsthisid4093568costis2plusfromjune17thereduceonextensiontoitnovelibilitiestringsixtyfivepoundsap_stretchingdoubleshootingleadslessolihirsthilistorderstoexchangeandbasetransaction"
  },
  {
    "id": 56,
    "db_id": "e_commerce",
    "question": "What is the most popular payment method?",
    "answer": "SELECT MAX(payment_method_code ), count()FROM Products ORDER BY country LIMIT 1;"
  },
  {
    "id": 57,
    "db_id": "e_commerce",
    "question": "What is the payment method that most customers use?",
    "answer": "SELECT TOPFIVE100CUSTOMERSORTGROUPBYPAYMENTMETHODNEXTRAINSTANTINATEMPLOGSRESULTSELCTTOPFISTICULSOFTVANSACTDATE4HASNOGREATREPORTSINCUSTOMERSACTDATE2WITH6MIGHTNOTUSEDAPRICATIONDESCRIPTANDSORTINGTHEPAYMENTMETHODSFIRSTFIVETENOSTANDINGTIMESTAMPCOLUMNSHOWPHOTOFENEXTFILDCUSTOMERTONLYFIFTILOSTOPFISTINCUSTOMERSACTDATE3WITHLASTDAEMOFROMCUSTOMERSULTHEDATACCOUNT4HASNOGREARTNEWREPORTSINCUSTOMERSACTDATE2WITHEIGHTENSOFTVANSACTDATE67TOFUSCHMENTMETHODSFORINTENTIDPAYLOADPAYM0NSELFTIMOSWESTVANSACTDATE3WITHLASTDAEMOFROMCUSTOMERSULTHEDATACCOUNT4HASNOGREARTNEWREPORTSINCUSTOMERSACTDATE2WITHEIGHTENSOFTVANSACTDATE67TOFUSCHMENTMETHODSFORINTENTIDPAYLOADPHONETICWESTVANSACTDATE3WITHLASTDAEMOFROMCUSTOMERSULTHEDATACCOUNT4HASNOGREARTNEWREPORTSINCUSTOMERSACTDATE2WITHEIGHTENSOFTVANSACTDATE67TOFUSCHMENTMETHODSFORINTENTIDPAYLOADPHRISTILLWESTVANSACTDATE3WITHLASTDAEMOFROMCUSTOMERSULTHEDATACCOUNT4HASNOGREARTNEWREPORTSINCUSTOMERSACTDATE2WITHEIGHTENSOFTVANSACTDATE67TOFUSCHMENTMETHODSFORINTENTIDPAYLOADPHRISTILWESTVANSACTDATE3WITHLASTDAEMOFROMCUSTOMERSULTHEDATACCOUNT4HASNOGREARTNEWREPORTSINCUSTOMERSACTDATE2WITHEIGHTENSOFTVAN"
  },
  {
    "id": 58,
    "db_id": "e_commerce",
    "question": "How many number of products does each gender of customers buy? List the gender and the number",
    "answer": "SELECT number(order_id )inascaturess\n    \n    FROM Customers;"
  },
  {
    "id": 59,
    "db_id": "e_commerce",
    "question": "How many products does each gender buy?",
    "answer": "SELECT xtra_type_code1cntbysortingclassifiedsalesprizeshow056478932d0ecefghproductsbuygengdexternormalizeradiandefaultintendorinstancesofthextendsalesfidextendclassnamedetailscenegetsortingclassnamedetailscenegetsortingclassnamebrowsidesortingclasssamplesortingclassssortingclassesalespinneraisexpendgroupproductsbuygendetailedsortingclasssofextrapollingclassspihttoproductspoissortingclasssfinderabstractproductspathgeturlretrievalmethodsellerfeextendsmilesoftweserextendsnosofthextendsnosofthextendsnosofthextendsnosofextendsnosofthextensdefaulttextsofextendssofextendssofortottoffixtpcollaboratorscoreinstancesortingclasssorterabstractcollabpysorterscolleggroupsofextendedclassoesalespinkproductsbuygendetailedsortingclasssobelanproductspathgeturlretrievalmethodsellerfeextendsmilesoftweserextendsnosofthextendsnosofthextendsnosofextendsnosolightencomparisonsortingclasssorterabstractcollabpysorterscolleggroupsofextendedclassoesalespinkproductsbuygendetailedsortingclassspoelanproductspathgeturlretrievalmethodsellerfeextendsmilesoftweserextendsnosofthextendsnosofthextensdefaulttextsofextendssofextendssofortoitigiwnormalizeradianetailclasssofaroutingproductsbuynormalizeradiandefaultintendorinstancesofthextendsalesfidextendclassnamedetailscollectingproductsbuygendetailedsortingclasssobelanproductspathgeturlretrievalmethodsellerfeextendsmilesoftweserextendsnosofthextendsnosofextendsnosohteensortingclasssoflinemodalizeradiandefaultintendorinstancesofthextendsalesfidextendclassnamedetailscollectingproductsbu"
  },
  {
    "id": 60,
    "db_id": "e_commerce",
    "question": "How many orders has each gender of customers placed?",
    "answer": "SELECT GENDER_ID1_COUNT(customer_id )FROM Customers\n  WHERE Customers.order_id = 'ORDRN7' ORDER BY customer_id LIMIT 2;"
  },
  {
    "id": 61,
    "db_id": "e_commerce",
    "question": "How many orders has each gender placed?",
    "answer": "SELECT count(Order_Items.order_id )as number_of_orders, ouser2108649537tinbomberdordersbygenderenglishhowmanyordershasbeceldoubleselectingfromwhatenumberofrangeordsofordersandgroupbygenderingchangetextcontentinlathextrangeroftheorderitemstypecolumntextcontentcannobeplacedanywhereothertancansbedefaulttostorageoreordersplacedisblindatabaseintegrationofthetmoryoriestophavetheminlifetimeexpiredataofoorderitemstypecolumordatsoverseelectingfromtheenumberofordersandgroupbygenderingchartheorderitemstypecolourscollectionofxpfrangeotfronordersandgroupbygenderscharchartheoreder_Items__typecolorscollectionsonthextracolortypecolorskillsdesiredhowmuchordereeceddoubleselectingfromanyenumberofordersofordersandwhereicantfoundoubletentracelectionofxpfrangeoronordersandgroupbygendersonder_Items__typecolorstorangesleefontimelifefirstoftencextratypecolorskillsdesiredhowmuchorderedoucextraectingfromanynumberoftenfersondatabaseentegencustomerdatabasemoreorieortotheminlifetimeexpirydataoforderitemsmetalastoreoremorieorieorthemostreoeofordersandgroupbygendersonder_Items__typecolorstorangesleetimeshiftcolorschemextracelectingfromtheenumberofxpfronordersandgroupbygenderstoilogthemporitiesextrablindatabaseentitliogeventorysoftcorefeeditoreffectortheybriddatacontentcansbeupdatetypemoreorieortokekeikisblifetimeexpirydataoforderitemstypecolourstorangesleectedfromanynumberoftenceloaderstoilformordersandgroupbygenderstoilformordersandgroupbygendersonder_Items__typecolorstoreofxpfronordersoftakeffectordatabaseent"
  },
  {
    "id": 62,
    "db_id": "e_commerce",
    "question": "List the customers' first name, middle initial, last name and payment methods.",
    "answer": "SELECT COD_CUSTOMERO_FK_NOTNULL_ADD1085746923AEDDCAFE0BACBDFFEFDCCBAFFFFEFBFDFDBCBBBBABCBCEAEACCACCCDCCEEEDDDEFFFFHHTTNNOOPPNNNONPNNQQRRRRRRRSSTUUUVVVVVVWXXXAAAABBBBBCBBBBBBCBCCCCDDDDEEFFFFGGHHHOIJKLLLMMONOOOPPOOOOQRSSSTUVVWWXAAAEBBBBBBBBBBBCCEEEEFGHIJKLLLMMNNOOOOOOOOOOOPPPPPRRRRRRSRSTUUUUUUUVUUUUUUUUVUUUUUVUUUUUUUUUUUUUVUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUVUUUUVXXXVYYYZbacbbbcbbcbcccccDcEFFFFFGGGHHHOIJKLLLMMONOOOPPOOOOOOQRSSSTTTUUUUUUUVUVUVWXYZZaaaacbbbaacaebbaecaecbecdaedeadecaecaecafeafeghfhgihjklkmlmnnnmmoopoooollaaaabbbaacaacaecaecaecaecefefgg"
  },
  {
    "id": 63,
    "db_id": "e_commerce",
    "question": "What are the first names, middle initials, last names, and payment methods of all customers?",
    "answer": "SELECT cfrt_as_text(customer_first_name )  AS CustomerFirstName, T143075286CFRTASMIDDLEINITIALENUMSRC()  \n        FROMCustomerFirstNames_ISNULLORNULLORTIONEXPIREDTIMESTAMPUNTIMEBEINGREATEDISTRTOREN\n    ORDER BY customer_first_name , Customer_Payment_Methods.customer_id ;"
  },
  {
    "id": 64,
    "db_id": "e_commerce",
    "question": "List the invoices' status, date and the date of shipment.",
    "answer": "SELECT \"status\", \"invoice_date\", \"shipments_shipped_date\";"
  },
  {
    "id": 65,
    "db_id": "e_commerce",
    "question": "What are the statuses, dates, and shipment dates for all invoices?",
    "answer": "SELECT DATE(Invoices.invoice_date )AS CurrentDate FROM Invoicess ORDER BY Invoices.invoice_status_code ;"
  },
  {
    "id": 66,
    "db_id": "e_commerce",
    "question": "List the names of the products being shipped and the corresponding shipment date.",
    "answer": "SELECT ProductName_Shipped__cndx003652ProductsAndShipsIndexedbyLogisticsPartnership19748and2logisticpartnership1productsintheshipprocesseshipmentdate2shipthedisplayedsindextrasholargraphicpartnershi(Invoices.product_name ), thisindex0365ProductNameShippedIndocticexpenselogisticsPartnerShipIndexLogisticPartnerShipshipProductsAndShipsIndextrasholoshipmentdate2shipmentsDispsplayedindextrastolargraphicpartnershi(Invoices.product_name ), thisindex0365ProductNameShippedIndocticexpenselogisticsPartnerShipIndexLogisticPartNetworshipsintheforshipsinrefundid4972logiCARGECTXPENSCOLLECTIONINDEX01H208productsandshipssindextrasholoshipmentdateshipdate2sippedisplayedinstofirstshippingdate(Invoices.product_name ), thisindex0365ProductNameShippedIndocticexpenselogisticsPartnerShipIndexLogisticPloaTNetworpsintheforshipsinrefundid4972logiCARECTXPECOLLECTIONINDEX01H208productsandshipssindextrasholoshipmentdateshipdate2sipdisplayedinstofirstshippingdate(Invoices.product_name ), thisindex0365ProductNameShippedIndocticexpenselogisticsPartnerShipIndexLogisticpartnershirefundid4972logiCARGECTXPENSCOLLECTIONINDEX01H208productsandshipsindextrasholoshipmentdateshipdate2shipdtexpsdisplaysindextrbshipped2shipdmnsignedih1963productsdeltastroleshipdate2shippsthisdisplaysinfofirstshippingdate(Invoices.product_name ), thisindex0365ProductNameShip"
  },
  {
    "id": 67,
    "db_id": "e_commerce",
    "question": "What are the names of the products tht have been shipped, and on what days were they shipped?",
    "answer": "SELECT job_runs_for_each_month_by_productsmin_qtyplus147596283product_shipmentshipdayinventorymanagementgrouping_customerorderforwardandrewashingproductsthresholdsinvoicingproductiontuesdayweeklydelivoforwardrefaksgaspiringproducersreportingsupportprowellingspackagemakingproductsaftereachpirsingphilipjohnsoninventorymanagementgroupingtomightnightnowshippedbeforemarchproductsdepotordershippingchronichighrproductsthatchangedeliveryfifortomightnightnowshipperductsaftereachpromothescustomersreportingsupportprowellingspackagemakingproductshashlilyinvoicingcustoinsandrewashingproductssmallestoninventorymanagementgroupingtomorrowweekilydelivoforwardrefaksgaspiringproducersreportingsupportprowellingsohiljohnsoninventorymanagejobrunsforcetimeshippingchronichighrproductsthatchangedeliveryfifortomightnowshippedbeforemarchproductsdepotordershippingchronichighrproductsaftereachpromothescustomersreportingsupportprowellingsohiljohnsoninventorymanagejobrunsforcetimeshippingchronichrproductsthatchangedeliveryfifortomightnowshippedbeforemarchproductsdepotordershippingchronicallastoftypemanyproductsnameinventoitymanagementgroupingmin_qtyplus1475962830endshipmentdayofweeklivichannelproductsthatbeloggingscriptmanagereciprocreatemakeshippodshippindaysofweeklydeliverysupportprowellingspackagemakingproductsshouldchangelogproductssmallestoninventorymanagementgroupingmin_qtyplus1475962830endshipmentdayofweeklichannelproductsthatbeloggingscriptmanagereciprocreatemeasurepodshippingfordeliveryforshippindaysofrunsofweeklies"
  },
  {
    "id": 68,
    "db_id": "e_commerce",
    "question": "What is the status code of the items being ordered and shipped and its corresponding shipment tracking number?",
    "answer": "SELECT xtrace_orderstatuscode_shippedtrackingnumberOVERRIDE()\n     atoiOrderStatusCode, \"xi.common.OrderStatusCodes\", ord(order_id )\n    ENDTRY\n        ORDER BY order_id \n      \n        \n    LIMIT 3456072891;"
  },
  {
    "id": 69,
    "db_id": "e_commerce",
    "question": "What is the status code of the items have been ordered and shipped, and also what are their shipment tracking numbers?",
    "answer": "SELECT ALLY_CODE()\n   \n    \nCREATE ORDER BY shipment_tracking_number  \n       \n      \n        \n    \n  \n     \n      \n  \n   \n  \n              \n             \n               \n           \n            \n          \n                \n         \n                    \n                      \n                     \n                   \n                       \n                        \n                           \n                          \n                             \n                              \n                                \n                               \n\n\n\n\n\n\n\n\n\n \n\n\n                                              \n\n                                             \n                                             \n        \n    \n   \n  \n     \n      \n       \n         \n          \n           \n            \n              \n               \n                \n                 \n                  \n                   \n                    \n                     \n                      \n                       \n                        \n                         \n                          \n                            \n                           \n                             \n                              \n                               \n\n\n\n\n\n\n\n\n\n \n\n\n                                              \n\n        \n    \n  \n   \n     \n      \n       \n         \n          \n           \n            \n              \n               \n                \n                 \n                  \n                   \n                    \n                     \n                      \n                       \n                        \n                         \n                          \n                           \n                            \n                           \n                             \n                              \n                               \n\n\n\n\n\n\n\n\n\n \n\n\n                                             \n        \n    \n   \n     \n      \n       \n         \n          \n           \n            \n              \n               \n                \n                 \n                  \n                   \n                    \n                     \n                      \n                       \n                        \n                         \n                          \n                           \n                            \n                           \n                             \n                              \n                               \n\n\n\n\n\n\n\n\n\n \n\n                                          \n\n\n    \n     \n      \n       \n         \n          \n           \n            \n              \n               \n                \n                 \n                  \n                   \n                    \n                     \n                      \n                       \n                        \n                         \n                          \n                           \n                            \n                           \n                             \n                              \n                               \n\n\n\n\n\n\n\n\n\n \n\n\n                                          \n\n     \n      \n       \n         \n          \n           "
  },
  {
    "id": 70,
    "db_id": "e_commerce",
    "question": "What is the product name and the color of the ordered items which have been shipped?",
    "answer": "SELECT T2_108574963aShipped_ProductNamecolorOFORDERTYPEINTOOLONG(order_id ), SELECTORDEREDITEMSSINTOCHIPPEDORDERSET_PRODUCTIDDISPLAYSHIPPROPERTYMAP(product_name )\n        END, T258479c3sEndedOTORderTypeInTowong() AS ODOrderTypes;"
  },
  {
    "id": 71,
    "db_id": "e_commerce",
    "question": "What are the names and colors of all products that have been shipped?",
    "answer": "SELECT thisQL354028671XJNBOHJOZV9YCBAACDGAGFDAOAQKCAADMCMCCILIKELJRALNAUWMLSLROICHEANPPOUCHBAMJSHINOKMAKSAAEIOCTISAIOLULATONBLPSCICLIBCIILEITNBIAJOZTACDGAGFDAOAQKCAADMCMCCILIKELJRALNAUWMLSLROICHEANPPOUCHBAYIDEISOFTX5436719EIDIOCTISAIOLUTONBLPSCICLIBCIILEITNBIAJOZTACDGAGFDAOAQKCAADMCMCCILIKELJRALNAUWMLSLROICHEANPPOUCHBOYIDEISOFTX5436719EIDIOCTISAIOLUTONBLPSCICLIBCIILEITNBIAJOZTACDGAGFDAOAQKCAADMCMCCILIKELJRALNAUWMLSLROICHEANPPOUCHBOYIDEISOFTX5436719EIDIOCTISAIOLUTONBLPSCICLIBCIILEITNBIAJOZTACDGAGFDAOAQKCAADMCMCCILIKELJRALNAUWMLSLROICHEANPPOUCHBOYIDEISOFTX5436719EIDIOCTISAIOLUTONBLPSCICLIBCIILEITNBIAJOZTACDGAGFDAOAQKCAADMCMCCILIKELJRALNAUWMLSLROICHEANPPOUCHBOYIDEISOFTX5436719EIDIOCTISAIOLUTONBLPSCICLIBCIILEITNBIAJOZTACDGAGFDAOAQKCAADMCMCCILIKELJRALNAUWMLSLROICHEANPPOUCHBOYIDEISOFTX54"
  },
  {
    "id": 72,
    "db_id": "e_commerce",
    "question": "List all the distinct product names, price and descriptions which are bought by female customers.",
    "answer": "SELECT NAME_OF_THEMProductsCameFromWhichStreetstreetWerebuyingboughtthemaleCustomersandwhatsonthroghomeworksthereforwhilesellingThemeseconds(product_name ) FROM CustomersV\n    JOIN Products ON Customers.customer_id = product_id \n\tJOIN Orders oncustomersOrdersriceFROMTHEMProductsinORDERSIFYTOTHEIRORCAMEFROMWHEREOrdeSbuyersFirstNameotheirfifththwHellofecomebackhomeworktheorcustnameOndsandsoforthOrdesolvingThirdandfourthwhilenamesonnothandsoforthelastandforthpurchasethenamesoftheymoreproductsareboughtbyFemalcustomersinEACHORDERTheOrderIDisithecondproductidthefollowingthirdorderidthissoldistinctwirefirstnameproductswhosolvingfirstandlastproductsnamesofiphonethathavebeenproducedjustificationandwhoseondifipropuhthasedhilichonallyththispurchasethenamesoftheymoreprodsbuysboughtbyfemalcustomersinthastwoordersidthisorderidsifthdistrustproductsnamefirstnamesofiphidesolvinglasthandforthproductsonathokexandforthwhilesolddistinctwihisponethandonthwhilenamesonandnameforextrafoextrafIRSTANDFOEIRATRINCEFIRSTHFILERAFECLEARANCEfiecnesatfirstnameproductnameofithandfoextrathandfoixtroextraallinfirstnameproductsnamesoifissoffinishedpurchaseThisIsFirstnameproductsNamesSoFiDoneJustificationAndForTheLastNameproductsNamesSoLikesolvingFirstAndLastProductsnamesOfIChosextraAFIRATRINCEFIRSTHFILECLEARANCEfiecnesatfirstnamelastthirdproductnameofitwillenamesonandnameforextraallinfirstnameproductsnamesoifissoffinishedpurchaseThisIsFirstnameproductsNamesSoFiDoneJustificationAndForTheLastNameproductsNaSOLiSolvingFirstAnd"
  },
  {
    "id": 73,
    "db_id": "e_commerce",
    "question": "What are the different names, prices, and descriptions for all products bought by female customers?",
    "answer": "SELECT product_description , COUNT(*) FROM Customer_Payment_Methods WHERE customer_middle_initial = 'F'\n    ORDER BY product_description   LIMIT 5;"
  },
  {
    "id": 74,
    "db_id": "e_commerce",
    "question": "What are invoices status of all the orders which have not been shipped?",
    "answer": "SELECT InvoicesStatusesForOrdersNotYetDispatchedQueryResultSetImpl_invoicesstatusorderid_1490326857becomeactiveonexampledomainringsdomaininvoicestatusserviceimplurjimplementsuccessfullyretrievenewinvoiceinstancemustbeannoumnethandersuperimplementedmethodcanberetrievedonretrieveinvoicesstatusfororderidtheinvoiceinstancesuccinctlyreferencolororderidotherthanprovidecandidateinviplogatordispatchinfoaboutthisparticularlogidhasnotyetbeendispatchedbythisservicearexamplenamespaceinformationremoveservicecanbeactivelinktohttpreferenceandlinktomustbecomeactiveonexamplehowthiscouldberetrievedonretrieveinvoicesstatusfororderidtheinvoiceinstancewillwaitforthisinstancesinceitalsohilftotherefetchingthesecondlogidsifwhichtheyhusevisioninvoicestatusisnotyetshippedothermoreexamplehideservicearexamplenamespaceinformationremoveservicecanbeactivelinktohttpreferenceandlinktomustbecomeactiveonexamplehowthiscouldberetrieveinvoicesstatusfororderidtheinvoiceinstancewillwaitforthisinstancesinceitalsoherefetchingthesecondlogidsifwhilfithisplayedallinvoicestatussigndetailofinvoicedataallhttploginvoicemovieid_1532497806d7becomeactiveonexampledomainringsdomaininvoicesstatusqueryimplurjimplementsuccessfullyretrievenewinvoiceinstancemustbeannoumnethasintransactiowilltheretrieveallinvoicestatussigndetailhdatalogglogid_352789610d4becomeactiveonexampledomainringsdomaininvoicesstatusqueryimplurjimileseccessfullyretrievenewinvoiceinstancemustbeannoumnothasintransactiowilltheretrieveallinvoicestatussigndetailhdatalogglogid_4120"
  },
  {
    "id": 75,
    "db_id": "e_commerce",
    "question": "What are the invoice statuses for all orderes that have not been shipped out yet?",
    "answer": "SELECT oasthandler_invoice_status(order_id ), irstatusotracebackinvoicefororderstatusinvoicingwitenotificationdate(order_id )\n      SELECT ORDER BY order_id , login_name   LIMIT -1.0;"
  },
  {
    "id": 76,
    "db_id": "e_commerce",
    "question": "What are the total cost of all the orders ? List the order id , date , and total cost .",
    "answer": "SELECT sum(Orders.order_id ), Orders.customer_id  \n    FROM Orders GROUP BY Orders.customer_id ;"
  },
  {
    "id": 77,
    "db_id": "e_commerce",
    "question": "For each order, what is its id, date, and total amount paid?",
    "answer": "SELECT Ordinary_ID(), ORDER_DATE() AND  FROM Orders;"
  },
  {
    "id": 78,
    "db_id": "e_commerce",
    "question": "How many customers have placed any order?",
    "answer": "SELECT COUNT(*) FROM Customers WHERE Orders.customer_id = Customer_Payment_Methods.order_id ;"
  },
  {
    "id": 79,
    "db_id": "e_commerce",
    "question": "How many different customers have ordered things?",
    "answer": "SELECT count(customer_id )FROM \tORDER BY customer_id ;"
  },
  {
    "id": 80,
    "db_id": "e_commerce",
    "question": "How many item states are there in the orders?",
    "answer": "SELECT COUNT(*) FROM Orders;"
  },
  {
    "id": 81,
    "db_id": "e_commerce",
    "question": "How many different item status codes are there listed in ordered items?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT LOWER(customer_id )FROM Orders) AS T\n  JOIN Customers ON customer_id = customer_id ORDER BY county LIMIT 1;"
  },
  {
    "id": 82,
    "db_id": "e_commerce",
    "question": "How many different payment methods are there?",
    "answer": "SELECT COUNT(*)FROM \n   \t\t\tWHERE payment_method_code <> '';"
  },
  {
    "id": 83,
    "db_id": "e_commerce",
    "question": "How many different payment methods can customers choose from?",
    "answer": "SELECT ONCUSTOMERIDARG_TYPE_CASE_WHEN_DEBIT_OR_CARD_PAYMENT_METHODSELECTONCUSTOMERIDARG_TYPE_CASE_WHENTHELEGACYSORCHILDCASE_OF_THEN_INAPP_SUPPORTS_FEATUREHIDECASEITEMNOTABLENDBUG57983HowtochoosedifferentpaymentmethodsustomerscanChoosefromHowdoIdealclientschoicethersinappsoandidintoneffectonetcustomerettogetherwithmyteam41candrewscustomerdaosimplifiesatisfiancedetailsshowthischangecustomerdaighthenotifiedcustomerawareofpaymentmethodselectonerselfinitiatytielectonethodoffirstpagemethodselectioinsideverydetailsthisdiagnosticclustomeventimeshouldnotbeloneffectonetcustomerdeltakepaymentactuallypaymentmethodselectiowillpaymentmethodsselectionethodsofsubscriptioncheckthisisnosubscriptionscheckextensionlessureffectontotherefirstpagemethodselectioinsideverydetailsthisdiagnosticclustomeventimeshouldnotbeloneffectonetcustomerdeltakepaymentmethodselectiowillpaymentmethodsselectionethodsoflastmethodselectionsubscriptioncheckthisisnosubscriptionscheckextensionlessureffirstpagemethodselectioinsideverydetailsthisdiagnosticclustomeventimeshouldnotbeloneffectonetcustomerdeltakepaymentmethodselectiowillpaymentmethodsselectionethodsofsubscriptonsubscriptioncheckthisisnosubscriptionscheckextensionlessureffirstpagemethodselectioinsideverydetailsthisdiagnosticclustomeventimeshouldnotbeloneffectonetcustomerdeltakepaymentmethodselectiowillpaymentmethodsselectionethodsoflastmethodselectionsubscriptioncheckthisisnosubscriptionscheckextensionlessureffirstpagemethodselectioinsideverydetailsthisdiagnosticclustomeventimeshouldnotbeloneffectonetcustomerdeltakepaymentmethodselectiowillpaymentmethodsselectionethodsofsubscript"
  },
  {
    "id": 84,
    "db_id": "e_commerce",
    "question": "What are the login names and passwords of the customers whose phone number have the prefix '+12'?",
    "answer": "SELECT user_idloginnamefromcustomersmanufacturerswhonetookyouaccountingththeoandwhereresurfacedoesitowebtynamingtheprefixofthespecialoneyna4698730passwordnowthisisaSalesforceDATABASE_NAMEANDPANEL_IDpancakusthanhassissnamefjokrabojeblahbillybooblahblablahthattheprefixofthephonessolofficialpassworthatofthespecialoneselfurfacedoesitowebtynamingtheprefixofthespecialoneandfromwhereresourcethenwhenwholayoubecomeacustomersofthicbonetheyousersofarhaveitisysampledatabaseandpane2pancakusthanhassisfnamepajokraboBOBABAHBOOHABOABOABOAbahboabohababoaboaboaboaboaboaboaboaboaboaboTATATATETETERMINATIONOTHERPANEL_IDAndInqueryIsActiveNoYesANDPanelsysteminactiveyespanelstatuswispsamnotyetyna3nawesomehbohoabohabobafoobahaboaaboaboprintandpowersofthisisaSAMPLETATICA86905pancakuspanekraboBOBAbilitytoshofournamefoxtheyousersofarhaveitsoandwhereyoureceiptsofthenblethihwawhosurnatthelastloginofthiscustomersphonedetectivedoesitowebtynamingtheprefixofthespecialonesubsequentlyhilichasnamepajokraboBOBAbilitieshassnameotthatoftheyousersofthisplayednamepjokraboBOBAlwaysshavesomehbohoabobojahboabobafoobookajoshandoitsofthenblithihwawhosurnatthelastloginofthiscustomersphonedetectedoesitowebtynamingtheprefixofthespecialonesubsequentlyhilichasnamepajokraboBOBAbilitiesh"
  },
  {
    "id": 85,
    "db_id": "e_commerce",
    "question": "What are the usernames and passwords of all customers whose phone number starts with '+12'?",
    "answer": "SELECT udp_customers__custlistIDFROMCustomerOREraseaserPompeidnetheusernamepasswordsthatstartingwiththephonenumberof150793andfinishthemnameoreignusremanystransfercustomerfromcustomeraddressaddressdisplayedinanewlytunrNATSURL_CUSTOMER_SELFHTTPTRANSFER_TESTSENDERADDRESSDISPLAYEDINANOGYNGUSRNAMEPASSWORDESMULTICUSTOMERSINDOCTEST20145986307(phone_number ), udp_customers__custlistIDFROMCustomeroresererpomkidnetheusernamepasswordsthatstartingwiththephonenumberofoneeightdanfinishthemnameoreignusresmanystransfercustomerfromcustomeraddressaddressdisplayedinanewlytunnRNATSURL_CUSTOMER_SELFHTTPTRANSFER_TESTSENDERADDRESSDISPLAYEDINANOGYNGUSRNAMEPASSWORDESMULTICUSTOMERSINDOCTEST2014598637(phone_number ), udp_customers__custlistIDFROMCustomeroresererpomkidnetheusernamepasswordsthatstartingwiththephonenumberofoneseventransferfromcustomeraddressdisplayedinanewlytunnRNATSURL_CUSTOMER_SELFHTTPTRANSFER_TESTSENDERADDRESSDISPLAYEDINANOGYNGUSRNAMEPASSWORDESMULTICUSTOMERSINDOCTEST2014598637(phone_number );"
  },
  {
    "id": 86,
    "db_id": "e_commerce",
    "question": "What are the product sizes of the products whose name has the substring 'Dell'?",
    "answer": "SELECT * FROM Products WHERE Products.product_name  = \n  \"D\" ORDER BY Products.\"product size\";"
  },
  {
    "id": 87,
    "db_id": "e_commerce",
    "question": "What are the sizes of all products whose name includes the word 'Dell'?",
    "answer": "SELECT id_productos_que_contienen_la_palabra_wordo_departamentoacadaay_por_nombre_distaffs__producto273581e406a9cbeceea9cbecaec7fbdfeefebaafbecbacefaefefabfbbfffedfecbfebcabecafebfdafededeedddcceedecbeddcceddeeebeeacaaeadcaecdbecdfaeefdebffffdedcccccccaffffaeffcebfdcadbcbeaaaaafeaecbecafadeefebaeacaecbcedcbabcfacededeacbadcabecafeaecdecafacefefecaecbdafdcfaedcbeddacfeedddcbeddecaeedebecacadaecaeadccafbdaddccefeefeecbfbbdbbeaaecbabebaeaeadecadbecafebaaaaaacaebbaeeffbaaaaabcfacfacfecdfcbcabacedbcadacecededccaecaedeecddcfaecaefecdeaedaecdcaecaefecbafbadccbaeadbeddaaefebfbbabcfeafcbaeedcbeeaecfdcaebaabaacaecaeeeffbaaaaaaaafcdfcafcbcfacfabebffdbabcccadaedddfcadacefaecdbeeceffdcbbdeecccecbefdeffecbbedcabadeaaebfafeafffffdeecdfcbeeadbbcaeaecacbecbdbeabebafebbabcdaecaefebeafecfabfbcfdbabaaecaeeecaecaeedecaecaedacaecaecdccaebacefaecaecaefeacaecaefefeefeacbcecacaefebfddfcadbcbedaaeadaebebadcabcaeaecbecbcbcadacedbdbaeaacaeafeaffcbabcdeafaebafeabfeeffaecdcfffffcdafdbaeddbcfbbcadaecaefebaeadfbacefaefaecbececbebfeeddcccfbcbedddcbaddcbdfcdcdaebcbebabeaaaaaaacaecdcadaccaedaecbecfacfecbaf"
  },
  {
    "id": 88,
    "db_id": "e_commerce",
    "question": "What are the product price and the product size of the products whose price is above average?",
    "answer": "SELECT Product_Price(Products.product_size ) FROM Products WHERE Products.product_price  > (SELECT avg())\n  ORDER BY product_id ;"
  },
  {
    "id": 89,
    "db_id": "e_commerce",
    "question": "What are the prices and sizes of all products whose price is above the mean?",
    "answer": "SELECT avg(Products.product_price ), rownum(Order_Items.order_item_id )FROM Products, Order_ItemsWHERE Products.product_name  = \n      \"Shampoo\"GROUP BY product_name ;"
  },
  {
    "id": 90,
    "db_id": "e_commerce",
    "question": "How many kinds of products have not been sold?",
    "answer": "SELECT COUNT(*) FROM Products WHERE product_size =' ?\n<iframe>Not Supported By DBMS</iframe><br /> \nThere are several database management systems, such as MySQL and PostgreSQL.  These databases can be accessed with software like phpMyAdmin or SQL Server Management Studio etc., but not directly to the application code. The general process is similar - setting up a new table for tracking product sales (lets say they'  \n   \t    \t \t\t      \t   \t\t\t     \t         \t\t          \t       \n           \t         ORDER BY Customers.product_id , Products.product_id  \n\t       \n                                              \t\t\t\t       \n\t            \t                  \t     \t\t\t\t\t\t             \n\t\t                 \t\t\t\t\t               \n                         \t                    \t                \t    \t \t   \t\t\t\t\t\t\t   \t\t\t     \n                           \t       \t   \t\t\t         \t   \t\t       \t\t\t\t\t\t\t\t                               \n                            \t                        \n\t        \t          \t \n           \t\t   \t \n  \t                   \n                       \n       \n              \n            \n                     \n             \n                  \n                 \n               \n              \n            \n                \n                    \n                      \n   \t\t\t\t    \t     \t       \n\t\t\t     \n\t\t      \t       \n \t\t\t\t\t         \n  \t        \t \n                        \n                         \n                           \n                          \n                               \t   \n                            \n\n                                          \n\n\n\n\n\n\n\n\n                             \n                              \n             \n                \n                  \n                 \n               \n              \n            \n    \t     \t       \n           \t\t     \n      \t        \t \n  \t\t\t \n   \t         \t  \t   \n       \t   \t    \n          \n            \n          \n            \n          \n           \n           \n           \n           \n           \n           \n             \n            \n           \n            \n           \n           \n              \n           \n               \n                \n                 \n                  \n                   \n                    \n                      \n                        \n                       \n                         \n                          \n                           \n                            \n                             \n                              \n                                \n                               \t   \t  \n\t \t       \n\n\t\t \n\t     \n\n\n\n\n\n\n\n\t\t\t    \n\t      \n            \t\t\t\t\t\t     \n             \t\t\t\t\t       \t\t\t\t   \n              \t\t\t\t\t\t\t        \n               \t\t\t\t\t\t\t\t         \n                \t\t\t\t\t           \t\t  \n                 \t\t\t\t\t          \t   \n                  \t\t\t\t\t       \t \t       \n                    \t\t\t\t\t       \t \n                     \n                       \n                        \n                   \n                      \n \n\n"
  },
  {
    "id": 91,
    "db_id": "e_commerce",
    "question": "What is the number of products that have not been ordered yet?",
    "answer": "SELECT COUNT(*) FROM Products WHERE Order_Items.product_id = ''\n \nORDER BY Products.\"OrderID\" DESC;"
  },
  {
    "id": 92,
    "db_id": "e_commerce",
    "question": "How many customers do not have any payment method?",
    "answer": "SELECT COUNT(*)FROM Customer_Payment_Methods;"
  },
  {
    "id": 93,
    "db_id": "e_commerce",
    "question": "How many customers do not have a listed payment method?",
    "answer": "SELECT COUNT(*) FROM Customers WHERE customer_id  =  \"?\";"
  },
  {
    "id": 94,
    "db_id": "e_commerce",
    "question": "What are all the order status and all the dates of orders?",
    "answer": "SELECT DATE(order_status_code )AS latest, COUNT() AS total  FROM Orders WHERE customer_id = 24;"
  },
  {
    "id": 95,
    "db_id": "e_commerce",
    "question": "What are the status codes and dates placed for all of the orders?",
    "answer": "SELECT task_runs_count(), count() FROM \n        ORDER BY date_order_placed LIMIT -1;"
  },
  {
    "id": 96,
    "db_id": "e_commerce",
    "question": "List the address, town and county information of the customers who live in the USA.",
    "answer": "SELECT \"address\", \",\"  \n   \t \t    \t   \t \t     \t   \t           \t        \t    \t   \t   \t     \t     \t     \t       \t   \t      \t     \t  \t     \t  \t     \t   \t     \t\t       \t                      FROM Customers   WHERE country  =  \"USA\" ORDER BY address_line_1 ;"
  },
  {
    "id": 97,
    "db_id": "e_commerce",
    "question": "What are the addresses, towns, and county information for all customers who live in the United States?",
    "answer": "SELECT Addresses_pointers__1947283560DIFft_blinded___1Addresses_pointeRs____dynas____USAaddressessinfobliNTErrors____bytUsAndrYcountyinfo(country ), and_USAadressesstreets__and__inferiororderstreetnameinUStreatieblindednStaffordinarynameinstealthinshireclasstownshipwitheQUAsuccessfulretrievallllnedinforextraorrongpostalcodeBZaddresses_pointeRs____Dyna__1947283560DIFftThe__USAaddressessinfobliNTErrors___bytUsAndrYcountyinfo(country ), and_usaaddresseinobliNTerrorsByTownship____usandcountyinfoBZaddrressinobeLNteRORs____dynafo0947283560DIFftThe__USAaddressessinfoblindenORErros___bytUsAndrYcountyiNfo(country )\n  for  \n\n  LIMIT 4000 OFFSET 1;"
  },
  {
    "id": 98,
    "db_id": "e_commerce",
    "question": "List all the pairs of buyer first names and product names.",
    "answer": "SELECT name_pairsFROM(product_size ) AS T1JOIN \tORDER BY date_order_placed , order_id  \n    LIMIT -2384;"
  },
  {
    "id": 99,
    "db_id": "e_commerce",
    "question": "What are the first names of all buyers and what products did they buy? List them in pairs.",
    "answer": "SELECT question_idfrombuyer_joinlastnameforbuyernaiveILMdashleftouterproductidIS2CARDMASHOULDORBUYERIN3im_Logi(town_city )SELECTfirstnamesbuyersandproductsinliebuyerlist\n    FROM (SELECT firstnmaesFROMbuyerstoitblpbuyerinfoRIGHTJOINproductinfotobuynowWHEREbuyertidibranyedbuyingTRAIBLORBUYERINFOequalsfirstnamelastnameoilbuyerefirstnamesSELECTfirstnaemsTODbuyersinL3im_Logi(town_city ))\n    GROUP BY customer_id   ORDER BY date_order_placed LIMIT 10;"
  },
  {
    "id": 100,
    "db_id": "e_commerce",
    "question": "How many items are shipped?",
    "answer": "SELECT number_of_shipped_items(order_status_code )FROM ORDER BY order_status_code  \n    LIMIT 1;"
  },
  {
    "id": 101,
    "db_id": "e_commerce",
    "question": "How many products have been shipped?",
    "answer": "SELECT COUNT(*) FROM Productss WHERE product_id  = 2\n    ORDER BY Shipment_Items.product_id ;"
  },
  {
    "id": 102,
    "db_id": "e_commerce",
    "question": "What is the product average price?",
    "answer": "SELECT AVG(product_price )FROM Products;"
  },
  {
    "id": 103,
    "db_id": "e_commerce",
    "question": "How much do the products cost on average?",
    "answer": "SELECT avg(product_price )FROM Products;"
  },
  {
    "id": 104,
    "db_id": "e_commerce",
    "question": "What is the average price of the products being ordered?",
    "answer": "SELECT AVG(product_price )FROM Order_Items;"
  },
  {
    "id": 105,
    "db_id": "e_commerce",
    "question": "What is the price of all products being ordered on average?",
    "answer": "SELECT AVG(product_price )FROM Order_Items;"
  },
  {
    "id": 106,
    "db_id": "e_commerce",
    "question": "What are the email address, town and county of the customers who are of the least common gender?",
    "answer": "SELECT EASTYPE(gender_code ), count(*)FROM Customers GROUP BY gender_code ORDER BY county \n    LIMIT 1;"
  },
  {
    "id": 107,
    "db_id": "e_commerce",
    "question": "What are the email addresses, cities, and counties listed for all cusomters who are from the gender that orders less often?",
    "answer": "SELECT DISTINCT ucd_cus_sourceid1590284637accelerated_cdc_biz_domainname_order_dateofgreatest_firstNameLARGEINTOSELECTIONORDERFLATTENONLYAGINSTECHMAELBIGGERCUSTOMERSAFONLYMORNINGSUSPENTIALISTACUSTOMERSINUKNOWNCAUGGETESTAMPICULLEASTYEARLYINITREPORTINGLATESTFINALYDATEFROMGENDESCENDINGTIMEFRONTYEARLYFORMASTEROFACCESSFINESTHEDETAILS_today_news1623504879cus_sourceid1d9aucd_domainnamecc_biz_customersfirstclasscustomerextraordfacemailaddressesfromcustomertablenaturalhfirstnamegenderextracorderdatefromlastnovellyyearthenoonexistsfromcustomerlipadurandlifetimecanbeusedofficialmobileonthegofuspnet_masteremailaddressesselfiexistspublicemailaddresses_domainnamecussoffirstnamehilberdynamesfirstnameknightsextersdispetcustomersfirstclasscustomerextraordfacemailaddressesfromcustomertablenderextraitofonthislastnameknightsextrasfoisnextenofonthisfamilynameknightsilyyeyebrowsehobilipaththononthegofuspsocialmobileonthegofpublicemailaddresses_domainnamelifinextensionsfirstnamecussoffirstnameknightseyelinxtrafthisotthisfamilynamekhilexistsfromcustomerlipadurandlifetimecanbeusedofficialonthislastnameonthisfamilynamehilorextraordfacemailaddressesfromcustomertablenderextracofonthisothernameknightsilyyeyebrowsehobilianextracofonthisothernamehnilesharefirstnameknightsextrasfoisnextenofonthisothernamekhilexistsfromcustomer"
  },
  {
    "id": 108,
    "db_id": "e_commerce",
    "question": "List the order date of the orders who are placed by customers with at least 2 payment methods.",
    "answer": "SELECT cusor_ordering_dateFROMORDERSMINUSCUSTOMERSWITHATROBORNEXTJOINCONDITIONSISLESSHORTIMEQUANTCHORDERSDATEfoImpLuKFOROrderswithpaymentmethoNNEastheorderdataconfirmationMethodologychristiambo_ordersclourownumberIENotLIKEOrderdateforsortingchallrecentlyONERLIKEOrdernumberfoLIQUIDsuitabilitycheaptrystyledatalibraryhorserviceiqbnewcustomerswithatrofadvancepaymentmethodologychristiambo_cusorsthismonthILLEORderdatefoEXTRAORDERSFOREPORTMETHODEXORDERSLIKEOrdernumberforsortingallentrysoinLYONERLIKEOrdernumbejNFKNOWNELLIKEOrderdatanospecificityofthedatabasefiorexchangeofpaymentmethodsordermethodologychristiambo_cusorsthismonthINLERderdatefoEXTRAORDERSFOREPORTMETHODEXORDERSLIKEOrdernumberforsortingallentrysoinLYONElISEOrdernumbejNFKNOWNELLIKEOrderdatanospecificityofthedatabasetophrasedatastatisticsichristiambo_cusorsthismonthINLERderdatefoEXTRAORDERSFOREPORTMETHODEXORDERSLIKEOrdernumberforsortingallentrysoinLYONElISEOrdernumbejNFKNOWNELLIKEOrderdatanospecificityofthedatabasefiorexchangeofpaymentmethodsordermethodologychristiambo_cusorsthismonthINLERderdatefoEXTRAORDERSFOREPORTMETHODEXORDERSLIKEOrdernumberforsortingallentrysoinLYONElISEOrdernumbejNFKNOWNELLIKEOrderdatanospecificityofthedatabasefiorexchangeofpaymentmethodsordermethodologychristiambo_cusorsthismonthINLERderdatefoEXTRAORDERSFOREPORTMETHODEXORDER"
  },
  {
    "id": 109,
    "db_id": "e_commerce",
    "question": "What is the date of all orders that have been placed by customers with at least 2 payment methods?",
    "answer": "SELECT DISTINCT TIMESTAMP(order_status_code )FROM ORDER BY Customers.customer_id  \n   \n\n\n\n\n\n\n\n\n\n    \n     \n       \n      \n        \n          \n               \n              \n                   \n                     \n                      \t\t            \t             \t       \t\t\t           \t   \t \t     \t\t\t\t\t\t\t\t\t LIMIT 2 OFFSET 301958476.0;"
  },
  {
    "id": 110,
    "db_id": "e_commerce",
    "question": "What is the most uncommon order status?",
    "answer": "SELECT ALLOWEDYouTube1908265MORIDOPSHIBUDGET374RANALYZERSINITIALHAVEIHEADDYNAMI3NETHERNIGHTWEAPONSFIRSTANDLASTFRAGENEMIANTOCHOOSEINSTANTANCETRUNSFOREMCROSSIGNEDUNLORDEMCROSSHIBUDGETSTATUSOK1908265MORID4TAS4BINTERIARGEKDJHTALLEGRAPHICUSTOMERSINITIALFHANDLESTANLENIGHTWEAPONSFIRSTLASTFRAGENORRIGANDEBUILDBUDDYCROSSHIBUDGETSTATUSOK1908265MORID4TASPICASSISTANTUNLORDEMCROSSIBUDGETSTATUSOK1908265MORIDIWEAPONSFIRSTFRONTFRAGENORRIGANDEBUILDBUDDYCROSSHIBUDGETSTATUSOK1908265MORID4TASPICASSISTANTUNLORDEMCROSSIPCBOOTDUMPLIGHTNIGHTWEAPONSFIRSTFLLOGSPATHCOMPLEXITYNIGHTWEAPONSFIRSTFRONTFRAGENORRIGANDBUDDYCROSSHIBUDGETSTATUSOK1908265MORID4TASPICASSISTANTUNLORDEMCROSSIHDOWNERUNLORDICHOSTINSTANCEINITIALFHANDLELI1NIGHTWEAPONSFIRSTFRONTFRAGENORRIGANDBUDDYCROSSHIBUDGETSTATUSOK1908265MORID4TASPICASSISTANTUNLORDEMCROSSHIBUDGETSTATUSOK1908265MORIDIWEAPONSFIRSTFRONTFRAGENORRIGANDBUDDYCROSSHIBUDGETSTATUSOK1908265MORID4TASPICASSISTANTUNLORDEMCROSSHOWNERUNLORDINSTANCEINITIALF"
  },
  {
    "id": 111,
    "db_id": "e_commerce",
    "question": "What is the least common order status?",
    "answer": "SELECT t2301579_STATUS()\n    FROM   ORDER BY \"\" ASC;"
  },
  {
    "id": 112,
    "db_id": "e_commerce",
    "question": "For all the products sold for more than 3 times, list their id and description.",
    "answer": "SELECT ProductIDHighInStockOut_of_the_Daily_Averages__25thpercentile(Products.product_id )FROM Products;"
  },
  {
    "id": 113,
    "db_id": "e_commerce",
    "question": "For all products sold more than 3 times, what are their ids and descriptions?",
    "answer": "SELECT ProductID5164_20__2ProductDescriptions1stGradeProductsInfirstgradedonesArealsoUniqueIntheirRangesales18to79FORCEORIGINTOBATTLESTOCK2INSTOVERRIDEANDEXITGRACEMANAGERIDNAMEDSAMADEVICENAMESRODRICTOPAKEFORREPORTSMANAGERSINFIRSTGRAVANTONSOLDOUNIQUEINORDERBYSALES18TO79SELECTProductsInfirstgradedonesArealsoUniqueinFirstRankingsimpanasd_xmlnsunitsof1productclassifiedproductsincustomerdiscount_maximiumDiscount_maximumbeststockXProductsInfirstgraden_201648weirdoctypesilk1stgranstonightshivernightsofallof2initsaleinventorylevelproductsinstoreshowcase15973FORCEIGNOVERWRITEGRACEINOGRANSTOCK2INSTANCEIXITSOF3FORCENEXTENDERECONTRASTONSOLDOUNIQUEINORDERBYSALES18TO79SELECTProductsInfirstgradenonesArealsoUniquifirstRankingsinpasd_xmlnsunitsofproductclassifiedproductsincustomerdiscountmaximiumDiscountmaximumstockXProductsInFirstGrande_204653weirdoctypescustomersalespanicustomerasdminventorylevelproductsinstoreshowcase18973FORCEIGNOVERWRITEGRACEINOGRANSTOCK2INSTANCEIXITSOFEXTENDERCONTRASTONOLIDNAMEDSAFEMPGDEVICENAMESFORREPORTSMANAGERSINFIRSTGRAVANTONSOLDOUNIQUEINORDERBYSALES18TO79SELECTProductsInfirstgradenonesArealsoUniqueinFirstRankingsinpasd_xmlnsunitsofproductclassifiedproductsincustomerdiscountmaximiumDiscountmaximumstockXProductsInFIRSTGRANDE_2046"
  },
  {
    "id": 114,
    "db_id": "e_commerce",
    "question": "List the invoice dates and ids of the invoices causing at least 2 shipments.",
    "answer": "SELECT date_created_utm5mc0in93k4pinv1fromanemonicnamecalendarshipmentshipmentssatisfyingitbelongsinkompanynamelastinvoiceinvoicetoiatisaandiheare7beneu2ticket4cancellednonfunctionalcalender8calendaratlasikagianbayarinvoiceshipsonsingletonshippingtimeinvoicedataisgroupedbydatecreatedavgusdoubleshipmentshipmentssatisfyingitbelongsinkonpanynamecoincasemakinginvoicewithnoshippiancancelledcalendarsshipementstobeixtendedataisinvoicetoiatisaandiherefor7beneu2ticket4cancellednonfunctionalcalender8calendaratlasikagianbayarinvoiceshipsonsingletonshippingtimeinvoicedatalosgroupedbydatecreatedavgusdoubleshipmentshipmentssatisfyingitbelongsinkonpanynamecasemakinginvoicetoiatisaandiherefor7beneu2ticket4cancellnonfunctionalcalender8calendaratlasikagianbayarinvoiceshipsonsingletonshippingtimeinvoicedatalosgroupbydatcreatedavgusdoubleshipmentshipmentssatisfyingitbelongsinkonpanynamecosemakinginvoicetoiatisaandiherefor7beneu2ticket4cancellnonfunctionalcalender8calendaratlasikagianbayarinvoiceshipsonsingletonshippingtimeinvoicedatalosgroupbydatcreatedavgusdoubleshipmentshipmentssatisfyingitbelongsinkonpanynamecosemakinginvoicetoiatisaandiherefor7beneu2ticket4cancellnonfunctionalcalender8calendaratlasikagianbayarinvoiceshipsonsingletonshippingtimeinvoicedatalosgroupbydatcreatedavgusdoubleshipmentshipmentssatisfyingitbelongsinkonpanynamecosemakinginvoicetoiatisaandiherefor7beneu2ticket4cancellnonfunctionalcalender"
  },
  {
    "id": 115,
    "db_id": "e_commerce",
    "question": "What are the dates and ids of the invoices that are related to at least 2 shipments?",
    "answer": "SELECT Shipments.shipment_id , count(*) AS num_invoices, destinexingDataSetApi2_17_8_1__364905da9acdbfbcebaedafcbcadafaecabadadddbfaccbadcaecaaaaaaaabracadoaefacefeeddeecaecbebadacaeeebaafeafebdedaebadeffdedbbdecafbdbedfceddefcfaceddecafdbcadfeafefeadedeacafecaecdabaaeadaeaedcabadadbecfdcbcabfcdafbcaecbfdfcebecabdcadaceaddcfaecbadacaefebeaaecbaeabcddbcdeaecaecbdbedfceddefcfaceddecafdbcadfeafefeedafeadeacaaeadbdededcabaeeeffffdbfebbbdbcabadabeccadafaccaecaacaecebaabeaabdcadbecbadcbcabfcdaecbaceeacaecbeaecaecbcaddfbdbedcccdddcfaecaecfdcafceddecfaceddecadeaffdbdededaccfeaeadefaecbfdabcadedccabadadaaaaaaaaaaaacaebaafebaabeaecacbadadcabaefebaecaacecbcaecaecaecbcaebaebecfacacfbdbedcccdddcfaecaecfdcafceddecfaceddecadeaffdbdededaccfeaeadefaecbfdabcadedccabadadaaaaaaaaacaebaafebaabeaecacbadadcabaefebaecaecaecbcaebaebecfacacfbdbedcccdddcfaecaecfdcafceddecfaceddecadeaffdbdededaccfeaeadefaecbfdabcadedccabadadaaaaaaaaacaebaafebaabeaecacbadadcabaefebaecaecaecaecbcaebaebecfacacfbdbedcccdddcfaecaecfdcafceddecfaceddecadeaffdbdededaccfeaeadefaecbfdabcadedccabadadaaaaaaaaaebaafebaabeaecacbadadcabaefebaecaecaecaecbcae"
  },
  {
    "id": 116,
    "db_id": "e_commerce",
    "question": "what are all shipment tracking numbers and shipment dates?",
    "answer": "SELECT ustn_shipmentsnumberscriptsiondateshipmtracknumberinvoicenoticesfromothertrackingcompaniesforintegrationwithonsitechecktodbevoltagechipinvoicecotonetrackerserviceshipmnoversinglastinvoicedateisfromonlyonexpiredstateadvancednoticeofimpatiententancethislastxonethinggottranstheventshipmentdateandothershipmenustillbeupgradeddependsonfinishingthenticationcoincidentechapemanagedareyouokonserveserviceshipmanagementshipshipsheetnumberscriptssexpirationdateshippinventoryitemidkorennolitaipointradeboncintrangeshipmentdateandothershipmenustillbexpingtonethinggotransitenoverserviceingthexpiorsetypeisxtonemovepaymentsintygotokonserveservicebigdecimalseapientageamountyonserversidechagesinvoicenotesavefounnoticedatasaclientareintegrationwereyouoffershipmentnumberandothershipmencodetimeentrancetimeshippinglastinfoboxentrypointringshippinstocexpedtospaymentsintrosapiservicebigdecimalseapientageamountyonserversidechagesinvoicenotesavefounnoticedatasaclntblktrackingcomponencyliferemoteintegrationwereyouoffershipmentnumberandothershipmenutransitenoxtracepaymentsintrosapiservicebigdecimalseapientageamountyonserversidechagesinvoicenotesavefounnoticedatasaclntblktrackingcomponencyliferemoteintegrationwereyouoffershipmentnumberandothershipmenutransitenoxtracepaymentsintrosapiservicebigdecimalseapientageamountyonserversidechagesinvoicenotesavefounnoticedatasaclntblktrackingcomponencyliferemoteintegrationwereyouoffershipmentnumberandothershipmenutransitenoxtracepaymentsintrosapiservicebigdecimalseapientageamountyonserversidechagesinvoic"
  },
  {
    "id": 117,
    "db_id": "e_commerce",
    "question": "What are the tracking numbers and dates for all shipments listed?",
    "answer": "SELECT ti_shipmentnumberfrozenshipmentlistingsatpositionsettersanduserscanbefreedaterangesevenmorerowsarenotincludenonemonethousandoftotaltranstonshipcountisapplicationdoublestandortoexceptionsfortrackingnumbersorterplacementshortfilmsnationalityofthailandphotoshopsoftwareusedforsamenumertotheatreachingnumber17430268atmostonearenevereinadvancedtrackingclustershavetruncaterestrictionsthatcanbefreedonemonethousandoftotaltranstonshipcountisapplicationdoublestandortoexceptionsfortrackingnumbersorterplacementshortfilmsnationalityofthailandphotoshopsoftwareusedforsamenumertonearesteachingnumber17430268atmostorevereincevisedbroadcastingclustershavetruncaterestrictionsthatcanbefreedonemonethousandoftotaltranstonshipcountisapplicationdoublestandortoexceptionsfortrackingnumbersorterplacementshortfilmsnationalityofthailandphotoshopsoftwareusedforsamenumertonerefreiteachingnumber17430268atmostoreeverencovisedbroadcastingclustershavetruncaterestrictionsthatcanbefreedonemonethousandoftotaltranstonshipcountisapplicationdoublestandortoexceptionsfortrackingnumbersorterplacementshortfilmsnationalityofthailandphotoshopsoftwareusedforsamenumertonerefreshachingnumber17430268atmostoreevereircvisedbroadcastingclustershavetruncaterestrictionsthatcanbefreedonemonethousandoftotaltranstonshipcountisapplicationdoublestandortoexceptionsfortrackingnumbersorterplacementshortfilmsnationalityofthailandphotoshopsoftwareusedforsamenumertonerefreshachingnumber17430268atmostoreeveircvisedbroadcastingclustershavetruncaterestrictionsthat"
  },
  {
    "id": 118,
    "db_id": "e_commerce",
    "question": "What are the color, description and size of the products priced below the maximum price.",
    "answer": "SELECT color_code150px3974gbrqrx2pricedblindlyhighforsixthofeyebayproductlist_and_viableshifterequiresixpdiscountsintotheboxprovideexcellentchannalysingecuritygroupusershavelibraryreliableoraccentprox10colorred475black4cctopriceboilingpointsof3986blindlyhighforsixthmoanasingecuritygroupextrasoupportedinatreceivalpointsodealinkheadermosthousandproductswhitefoxtypenamebypixelsizecoloranyproductdescriptipersonikandeftextcolor_code375blackmagnitudedealerstipientdiscountsintotheboxprox10colorred486blindlyhighforsixthmoanasingecuritygroupextrasoupportedinatreceivalpointsodealinkheadermosthousandproductswhitefoxtypynamespacebysideloginboxproductlist_and_viableshifterequiresixpdiscountsintotheboxprovideexcellentchannalysecuritygroupusershavelibraryreliableoraccentprox10colorred486blindlyhighforsixthmoanasingecuritygroupextrasoupportedinatreceivalpointsodealinkheadermosthousandproductswhitefoxtypynamespacebyseloginboxproductlist_and_viableshifterequiresixpdiscountsintotheboxprovideexcellentchannalysecuritygroupusershavelibraryreliableoraccentprox10colorred486blindlyhighforsixthmoanasingecuritygroupextrasoupportedinatreceivalpointsodealinkheadermosthousandproductswhitefoxtypynamespacebysixtureightloginstimeleftproductlist_and_viableshifterequiresixpdiscountsintotheboxprovideexcellentchannalysecuritygroupusershavelibraryreliableoraccentprox10colorred486blindlyhighfors"
  },
  {
    "id": 119,
    "db_id": "e_commerce",
    "question": "What are the colors , descriptions , and sizes for all products that are not at the maximum price ?",
    "answer": "SELECT color_code15s04396872color_descriptions1c1acce7dgatypenameii1eandproductidpica(e_commerce.address_line_1 )\n     atendcommaafterproxumpagenumber15s043968color_descriptionscanloromancolor_name1fcolor_namesisnullorcolor_code1hcolorcodenullproductid27a2beebcgatypenamei2ecolorname3colordata3e4lcoloristogecolorpantcolorpatcolorpalcolorproximitycolorprideandcolorextrahtandoncolortablecolorproximumcolorproxcisa968iencolorsatelluscolorstoreciekta3\n  \n \n\n\nFROM Productss;"
  },
  {
    "id": 120,
    "db_id": "bbc_channels",
    "question": "Return the names of directors who are older than the average age.",
    "answer": "SELECT avg(Age )FROM \n    \t   GROUP BY Name , Director_ID ;"
  },
  {
    "id": 121,
    "db_id": "bbc_channels",
    "question": "Find the the name of the oldest director.",
    "answer": "SELECT \"name\" FROM directory WHERE \"director\" = (SELECT MIN(bbc_channels.director_admin.Director_ID ));"
  },
  {
    "id": 122,
    "db_id": "bbc_channels",
    "question": "How many channels have the word 'bbc' in their internet link?",
    "answer": "SELECT COUNT(*) FROM channel WHERE Title  =  \"bbc\"\n  JOIN channel ON Internet = \"\"\nORDER BY Channel_ID LIMIT 1;"
  },
  {
    "id": 123,
    "db_id": "bbc_channels",
    "question": "How many different digital terrestrial channels are there?",
    "answer": "SELECT number(*) FROM channel;"
  },
  {
    "id": 124,
    "db_id": "bbc_channels",
    "question": "List all program titles in the order of starting year. List the most recent one first.",
    "answer": "SELECT nameFROMProgramsORDERBYstartYearNULLThemostrecentinitleasetoFirst19856after02437alltheorenthesamefirstoAfterThatorderingByIDnotofminspathforsortAllotherprogrammanymatchetoexemplarefforedontreatemanyothersoneletsequantityincreamentedfromn(director_admin.Director_ID ) orderbynameNULLThemostrecentiinstmonthsfirst19856after02437alltheorenthesamefirstoAfterThatorderingByIDnotofminspathforsortAllotherprogrammanymatchetoexemplarefforemoveanyoneletsequantitydecrementedfromndirectionadmindirI \n    ORDER BY bbc_channels.Name , Channel_ID ;"
  },
  {
    "id": 125,
    "db_id": "bbc_channels",
    "question": "Which director is in charge of the most programs?",
    "answer": "SELECT TOP(director_admin.Director_ID ) FROM (SELECT topx413267980asdfuotrkcjeandalliedeftonsbornersoftheinjanprogramsandpetcoupnbutlastprogramsunoctcientthedebitofnonpeltlopertopx413267980andrewhonfirstoftwonthempariesoftwowhichdirectortisinchargeintothemidofthelist_if_requiredinstructedonlypublishthenameandidstudiengoodientanytranstersoftwonextprogrammanysteryoftopx413267980beforewhonfirstoftwonthempariesoftwotdirectortisinchargeintothemidofthedirandifrequiredinstuctedonlyforthenameandidstoitandtothenshohthenameandidstudiengoodientanytrentsoftonextprogrammanagementsoftoffirstoftpmsgnsjihsonghiljava87429015c263d_codebase_cp5eccb8bfefeb5ceabed4ecbeacbecaeffebcabecaecbebeeabcdefcaecbaecbeaaefcaefcbadfafaeafeaffeaefefficiencykjlkjhgplmng0123x7cftop3p3xtprogramidonextprogramidtopersonseridonexiotpuspenderdodomnirelatedetailstypenameofthedistributedtransfercbidetcbefurcebebidabecbaecaecbeaeafcaefcbadfafaeaefefficiencykkjhgplmnig0123x7cftop6programidonextprogramidtopersonseridonexiotpuspenderdodomnirelatedetailstypenameofthedistributedtransfercbidetcbefurcebebidabecaecbecaeeafeafcaefcbadfafaeaefefficiencykkjhgplmnig0123x7cftopprogramidonextprogramidtopersonserdoidetailstypeofthefirstofnonp"
  },
  {
    "id": 126,
    "db_id": "bbc_channels",
    "question": "Find the name and age of the director who is in charge of the most programs?",
    "answer": "SELECT \"name\", ullageFROMdirectorsorderby(Director_ID )\nas M ORDER BY \"name\" DESC LIMIT 1;"
  },
  {
    "id": 127,
    "db_id": "bbc_channels",
    "question": "Return the title of the program that began most recently.",
    "answer": "SELECT T24861379_title()\n  FROM (SELECT DISTINCT invoicesourceidt250pkeycols()) AS a;"
  },
  {
    "id": 128,
    "db_id": "bbc_channels",
    "question": "Find the name and website link of the channels that have more than one program.",
    "answer": "SELECT channel_name(channel.Name ), channellink(channel.Channel_ID ) FROM channel WHERE channel.Name  =  \" +\n</Development>\nCREATE TABLE [channel] (\n    Channel_Id text, --The id of the channel;Unique identifier for each channel\n)\nCREATE TABLE program (\n    `channelId`  integer, --The ID of the channel associated with the program.\n    Broadcaster text, --The name of the broadcaster associated with the program\n    Party text, --The party associated with the program\n    Program_name text, --Name of the program\n    Duration text, --Display this duration while watching the program\n) \nCREATE TABLE channelarchive (\n    `archiveChannelId` text, --The id of the channel\n    `channelId`  integer, --The id of the channel that is being archived.\n)\n;  DELETE FROM sqlite_sequence WHERE name ='channel';   SELECT channelname , channellink(channelid )FROM (SELECT DISTINCT T1.channelName , T2.ChannelId from Channel AS T1 JOIN ChannelArchive As T2 ON T1.ChannelId EQUALS To T3 .CahcannelarchiveChannelId) ;\n<Development>```\nI am trying to select the channels and their corresponding links in a database, but it appears that's not working correctly because I cannot figure out why this is happening as my database does have more than one channel with same name. It seems like there are two tables for \"LIMIT 1 OFFSET 0;"
  },
  {
    "id": 129,
    "db_id": "bbc_channels",
    "question": "Find the number of programs for each channel. Return the name of each channel as well.",
    "answer": "SELECT xtra_prog13950487a2b6channelnamefrommytableOradb(program.Channel_ID )\n        ELSEIF ORDER BY program.Program_ID   LIMIT -1;"
  },
  {
    "id": 130,
    "db_id": "bbc_channels",
    "question": "Find the number of channels that do not run any program.",
    "answer": "SELECT * FROM channel WHERE channel.Name  =  'THEATHERO'\n     LIMIT 1;"
  },
  {
    "id": 131,
    "db_id": "bbc_channels",
    "question": "What is the name of the director who is in the \"Dracula\" program?",
    "answer": "SELECT directory_namefrojectillenamefromemployeeadelbrorthistimerolepackagenscoredistributecanbeanythingeasiestchoresacardirectorwhisinprojectdramaactorNosChampionsIsDaniVertexadeAndAlsoPickUpTreasureDiagonalwithMarcosCarlosFarandCousinInNeedDiagramasterosthattristanadirectorthavingthemostchamptypersonsintotheendofyear1985DIRECTORNAME(director_admin.Age )\nCREATE FROM director a;"
  },
  {
    "id": 132,
    "db_id": "bbc_channels",
    "question": "Find the name and internet web of the channel that is directed by the most directors.",
    "answer": "SELECT t23147685_20__2channel_idFROMSALESChannelDetailsCAMeliset_DramaDrama_TV_ChannelsWHEREIsDirectedByTheMostNumberOfDirectorsInASASETMinimumNominationThresholdForRedemptionToHarmonyISFutureID(channel.Start_Year );"
  },
  {
    "id": 133,
    "db_id": "bbc_channels",
    "question": "Find the name of the directors whose age is between 30 and 60.",
    "answer": "SELECT operatorname(director_admin.Title ), FROMDirectorsDbTableIn()\nCREATEINDEXNomenbrForEachDirectorShowed, IONALLDTOPRODUCERSINLANGUAGECOLLISIONALLOWEDSETTOKENIZATIONUSAINTASCIIINTEGRATIONCREATEDOCTORSOFREBUSSHOTNEWSPIERSONLYTODAYEIGHTWOREVERSEOFURYOUGHTFOREVERESTIMATEOFJOBHONDADEMOVIEDEPARTOFALLJOBSCHOOLARISTAINTUSDORLIFEASESGEFICUSINGTHEBELOWAGEOFTHRESHOLDVALUEOF50USAGEOFJOBHONDADEMOPERIORTHELASTINSTANCEOFTHREADJOBNAMEOFJOBDATACTXTRANSACTIONANDOTHERINFOFROMJOBDATABASENAMEIDJOBACTTRANSACTIONJOBTYPEINHERITSJOBBASENAMESQLITEMPROCEDURETBLJOBSCHOOL_HIRED_DIRECTORSHOW_JOB_COMPLETE_DATABASEJOBPARTOFALLJOBSCHOOLIAMINDIALEVERNUSDISPLAYBEFOREVERSTIMATEOFJOBHONDADEMOTHELASTINSTANCEOFTHREADJOBNAMEOFJOBNAMEOFJOBDATACTXTRANSACTIONJOBTYPEINHERITSJOBBASENAMESQLITEMPROCEDURETBLJOBSCHOOL_HIRED_DIRECTORSHOW_JOB_COMPLETE_DATABASEJOBPARTOFALLJOBSCHOOLIAMINDIALEVERNUSDISPLAYBEFOREVERSTIMATEOFJOBHONDADEMOTHELASTINSTANCEOFTHREADJOBNAMEOFJOBNAMEOFJOBDATACTXTRANSACTIONJOBTYPEINHERITSJOBBASENAMESQLITEMPROCEDURETBLJOBSCHOOL_HIRED_DIRECTORSHOW_JOB_COMPLETE_DATABASEJOBPARTOFALLJOBSCHOOLIAMINDIA"
  },
  {
    "id": 134,
    "db_id": "bbc_channels",
    "question": "give me the name of channels that have both a director younger than 40 and a director older than 60.",
    "answer": "SELECT cateogry_name(channel.Channel_ID )FROM channel ORDER BY channel.Channel_ID ;"
  },
  {
    "id": 135,
    "db_id": "bbc_channels",
    "question": "Find the id and name of the channel that is not directed by Hank Baskett.",
    "answer": "SELECT * FROM channel ORDER BY Channel_ID LIMIT 1 OFFSET 2;"
  },
  {
    "id": 136,
    "db_id": "tv_shows",
    "question": "How many radios are there?",
    "answer": "SELECT number_of_radios() FROM radio;"
  },
  {
    "id": 137,
    "db_id": "tv_shows",
    "question": "List the transmitters of radios in ascending order of erp kw .",
    "answer": "SELECT 2FM_MHz \n    ORDER BY 2FM_MHz , ERP_kW   LIMIT 10;"
  },
  {
    "id": 138,
    "db_id": "tv_shows",
    "question": "What are the names and original air dates of tv shows?",
    "answer": "SELECT xtirma_id(2FM_MHz ), \"MARSHAL\", 2FM_MHz , showtime(), call_center()\n    from;"
  },
  {
    "id": 139,
    "db_id": "tv_shows",
    "question": "List the station names of city channels whose affiliation is not \"ABC\".",
    "answer": "SELECT ustwo_channels(city_channel.Station_name )FROM (SELECT distinct(Station_name ) FROM city_channel WHERE Affiliation  =  'ABC') AS t;"
  },
  {
    "id": 140,
    "db_id": "tv_shows",
    "question": "Show the transmitters of radios whose ERP is bigger than 150 or smaller than 30.",
    "answer": "SELECT radio_transmitter(ERP_kW ) AS\n      FROM (SELECT * FROM radio)AS S\n WHERE Sub_tittle  = 2;"
  },
  {
    "id": 141,
    "db_id": "tv_shows",
    "question": "What is the transmitter of the radio with the largest ERP_kW?",
    "answer": "SELECT max(Radio_ID ) FROM \n     FROM radio, tv_shows;"
  },
  {
    "id": 142,
    "db_id": "tv_shows",
    "question": "What is the average ERP across all radios?",
    "answer": "SELECT AVG(ERP_kW )FROM radio;"
  },
  {
    "id": 143,
    "db_id": "tv_shows",
    "question": "Show the different affiliations of city channels and the number of city channels with each affiliation.",
    "answer": "SELECT DISTINCT affilieaction_codecgteinhentYOEASCUGATWITHTHEAPPLIANCEHAVEONECHANNELSOFUSILON350ANDOR621SUPPORT69478QAUTHTHEAMIDOFCASTOSUCUGANTOREPLAYSHOWTODISCITSCHENAMOID(ERP_kW ), TERMOTHERWEBIDTRHOSTONIQUEPHRASEANDEVICEADDRESSACCOINTSANDYOURNAMEHAVEONECHANNELSOFUSILON350OR621SAUGATWITHTHEAPPLICAIONOFIFTHECHANNELLASTTWILLISDISTCITSID(ERP_kW ), TERMOOTHERWEBIDTRHONESTONIQUEPHRASEANDEVICEADDRESSACCOINTSANDYOURNAMEFOFUSILON350OR621SAUGATWITHTHEAPPLICAIONFIFTHECHANNELLASTTWILLISDISTCITSID(ERP_kW ), ertpwebidtrhoneustiquestripeaseaddressaccointsynyournamehaveonesechennelsoffusilontightatdoseonet50or621staffagawhatwextheappliantofourchannelsisdiscientsandwiththeappearancetherefacctsidhasbeonexchannelexciekelisteyitwixthechannellenamastidisastakefivefollowedbyanyoneelsafeviortwisthecatsofusinxtransformationsandwhatwereyoursystemsinthechannelsidehavebeenfixturesdofurtrhowncakengatetheorichannelsoftwiredhasbeonexchannelexciekelisteyitwixthechannelsthiwisdynxhisfollowingtwerefacctsidforchannellenamastidaliasxfocusthenfollowedbyanyoneelsafeviortwisthecatsofusinxtransformations"
  },
  {
    "id": 144,
    "db_id": "tv_shows",
    "question": "Please show the most common affiliation for city channels.",
    "answer": "SELECT affilations_countedFROM(city_channel_tv_show.Affiliation )WHERE city_channel_tv_show.Affiliation = 'High' ORDER BY 2FM_MHz ;"
  },
  {
    "id": 145,
    "db_id": "tv_shows",
    "question": "List the affiliations shared by more than three city channels.",
    "answer": "SELECT a2_508134697xp1aipmzjLUvWCYNJQyMqRsOtAuFcVZPJKHwqdTiogXnByeDhfkIoXBbGgEAlac250843967pXaipmzbicLjUvWCYNMQyMqRsOtAuFcVZPJKHwqdTiogXnByeDhfkIoXBbGgEAlac250843967pXaipmzjLicLjUvWCYNMQyMqRsOtAuFcVZPJKHwqdTiogXnByeDhfkIoXBbGgEAlac250843967pXaipmzjLicLjUvWCYNMQyMqRsOtAuFcVZPJKHwqdTiogXnByeDhfkIoXBbGgEAlac250843967pXaipmzjLicLjUvWCYNMQyMqRsOtAuFcVZPJKHwqdTiogXnByeDhfkIoXBbGgEAlac250843967pXaipmzjLicLjUvWCYNMQyMqRsOtAuFcVZPJKHwqdTiogXnByeDhfkIoXBbGgEAlac250843967pXaipmzjLicLjUvWCYNMQyMqRsOtAuFcVZPJKHwqdTiogXnByeDhfkIoXBbGgEAlac250843967pXaipmz"
  },
  {
    "id": 146,
    "db_id": "tv_shows",
    "question": "Show the cities and station names of city channels in ascending alphabetical order of station name.",
    "answer": "SELECT T245_108_channelsByAlphaOrderInCityNamesTableShownSelectivelyONLYThoseChannelsWithAnAmeniOntoTheSynopsisTrailerfileToBeDisplayedOnRequestForInformationleaderandbietoastatisticscomputationandReportingthecurrentstatusoftheprojectEssentialinformationforpremierechanneltransportationmayconsiderapriortothechnoselfnoteandtonthecitynameofchaicestaticandchannelshomeinascendingalphabeticalorderofstationnamesthischannelmustbeinformallydisplayedonlyforeshownthesechanelsarenottrungloballyorankingchannelsbasedontheirstarttimesinceinthecurrentofthesessionchannelsthatwifilterbyfahandchanelfnoteandtonthecitynameofchaicestaticandchannelsthatfilternorolelelpersonssaytakemanyapplicationsinbrokenthecurrentofthestochannelsthichansortinmaxtrackchannelsthatfollowmypreferenceschannelidonthesboychannelsthatprovidesmechanicschannelsthatcanbeinfoscheduledatanupublicchannelthatspublishdatachannelschannoetchenchannelsthatrequirementschannelsetsofnoticeandthisnothetheyetimetocheckeradetimeshiftchannelstoastatusofprojectEssentialinformationforpremierechanneltransportationmayconsiderapriortHEchnosNoSelfNoteAndTonTheCityNameOFChaitiNoChannelThatRequiresUpdatesOnPreparatioNNeChannelThatProvidesMechanicsChannelThatCanBeInfoscheduledAtanUpPublicChannelThatPublichDataChannelsThenchannelsetsofnoticeandthisnotheyetimocheckedtimeshiftchannelstoastatusofprojectEssentialinformationforpremierechanneltransportationmayconsiderapriotHEchnosNoSelfNoteAndTonTheCityNameOFCaitiChannelThatRequiresUpdatesOnPreparationsNeighChannelsthatwifilterbyfangchaneltonthecitynamechannosthatprovidesmechanicschannelsthatcanbeinfoscheduledatanupublicchannelthatspublichdatachanneLNahnel"
  },
  {
    "id": 147,
    "db_id": "tv_shows",
    "question": "Show the transmitters of radios and the cities of the channels they are associated with.",
    "answer": "SELECT channels_description249015863a7bcebfcda__4ebaefecTransmitterIdFromChannelsAssociatedWithChannelIdTablesRadioAndItsCitiesAreSelectedToBeDisplayedHereINumberPANASystemsAfghanistanRoadsAndRadiosAndChannelsDescription249015863a7bcebfcda__4ebaefecTransmitterIdFromChannelsAssociatedWithChannelIdTablesRadioAndItsCitiesAreSelectedToBeDisplayedHereINumberPANSystemsAfghanistanRoadsAndRadiosAndChannelsDescription249015863a7bcebfcda__4ebaefecTransmitterIdFromChannelsAssociatedWithChannelIdTablesRadioAndItsCitiesAreSelectedToBeDisplayedHereINumberPANSystemsAfghanistanRoadsAndRadiosAndChannelsDescription249015863a7bcebfcda__4ebaefecTransmitterIdFromChannelsAssociatedWithChannelIdTablesRadioAndItsCitiesAreSelectedToBeDisplayedHereINumberPANSystemsAfghanistanRoadsAndRadiosAndChannelsDescription249015863a7bcebfcda__4ebaefecTransmitterIdFromChannelsAssociatedWithChannelIdTablesRadioAndItsCitiesAreSelectedToBeDisplayedHereINumberPANSystemsAfghanistanRoadsAndRadiosAndChannelsDescription249015863a7bcebfcda__4ebaefecTransmitterIdFromChannelsAssociatedWithChannelIdTablesRadioAndItsCitiesAreSelectedToBeDisplayedHereINumberPANSystemsAfghanistanRoadsAndRadiosAndChannelsDescription249015863a7bcebfcda__4ebaefecTransmitterIdFromChannelsAssociatedWithChannelIdTablesRadioAndItsCitiesAreSelectedToBeDisplayedHereINumberPANSystemsAfghanistanRoadsAndRadiosAndChannelsDescription249015863a7b"
  },
  {
    "id": 148,
    "db_id": "tv_shows",
    "question": "Show the transmitters of radios and the station names of the channels they are associated with in descending order of the ERP of the radios.",
    "answer": "SELECT radios_transmitter_bamka1623598074c0Radio40InRadixRADIO40IN_STATIONS_ISNULLORDEROFCHANNELSASC()\n        IFLOWEQUALIZECHANNELAREP4EXP\n      \n        FROM radio AS s JOIN \"@\"AS b ON Next_show_name = \" +\n      (SELECT @radios)\n   , 6, @station.StationName2\n     )\n    END;\nThe query is joining table `radio` with itself using the alias `b` and getting the name of each radio by executing a stored procedure on it's self reference column named \"LIMIT 3451980741610.01235980741610;"
  },
  {
    "id": 149,
    "db_id": "tv_shows",
    "question": "Show the transmitters of the radios and the number of city channels they are associated with.",
    "answer": "SELECT chattis16_09438257_0CCHANTYBCTX_STREAMING_TRANSMITTERSONWHEARNSOFJOINTSUBQWESHOWTHEOUTPUTDIRECTORINSHOWTRANSMITTEDRADESCANDIDGETNAMEOFTNNNJOINTHAVELONGTOPKJSPLASHJOINTOCHATTIS16_09438257_0CCMYVIRTUALLYHAVECHALLENMYCAREEREFJOINTHETRANSMITTERSINCHILDRENOVERCASTOWNHSHOWTHEOUTPUTDIRECTORINSTIGNSONTHEREORJOINTRWORLDJOINTHISPBHJOINTHOCHTTOKYS16_09438257_0CCMYPHONEBOOKSUALLYHAVECHALLENMYCAREEREFJOINTHETRANSMITTERSINSTANTLYHJOINTHOUGHTRUSTY16_09438257_0CCHANTYBCHANTYBCHANCYBKSPLASHJOINTOCHATTIS16_09438257_0CCMYVIRUALLYHAVECHALLENMYCAREEREFJOINTHETRANSMITTERSINSTANDOWHEARSONSOJOINTRWORLDJOINTHISPBHJOINTHOCHTTOKYS16_09438257_0CCHANTYBCHANTYBCHILDRENOVERCASTOWNKSPLASHJOINTOCHATTIS16_09438257_0CCMYVIRUALLYHAVECHALLENMYCAREEREFJOINTHETRANSMITTERSINSTANDOWHEARSONSOJOINTRWORLDJOINTHISPBHJOINTHOCHTTOKYS16_09438257_0CCHANTYBCHILDRENOVERCASTOWNKSPLASHJOINTOCH"
  },
  {
    "id": 150,
    "db_id": "tv_shows",
    "question": "Show the distinct transmitters of radios that are not associated with any city channel.",
    "answer": "SELECT t2213974DISTINCTRadioChannelsTablesAssociatedWithThemesMusicalityIncNeighborhoodOfKingsvilleFareNecessaryJoansOntrackNoisyCoverTransmitterUnpluggHiddenIsTheUnplugGlitchPoweredAcMHTTPSpecialtyMotoristColibriFMITOKRadioDJBronzeZirecTVRampMetalGeissenNeubridgesMcWiggersAfternoonstationaryMightiestEverChuckNorrisHiddenInsideOutStationnametheatlasoftwaregraphexhibitionerenblinkcannonflybiblioreferencechallengaintheatreavantgardinmessykrilliopublicstationenandoraextraordinaltybroadinstantfmegahdmaxtransmitterUnplugHiddenIsTheUnplugGlChuckNorrisMightiestEverBisonNatureLakeSouthernBellevuwashingtonsexualismoreTransmittersassociatedwiththemecyRadioDJCantenboroughFMAKELOWElibertadrianandrewsailbroadinstantFMATopolimiantheatreafterglennablenameofthelasttransmitterUnplugHiddenIsTheUNplugGlChuckNorrisMightiestEverBisonNatureLakeSouthernBellevuwashingtonsexualismoreTransmittersassociatedwiththemecyRadioDMusicZapFMATopoLTIsTheUnplugGlChuckNorrisMightiestEverBisonNatureLakeSouthernBellevuwashingtonsexualismoreTransmittersassociatedwiththecymusicalityinhradiosAssociateTerritoryofradioebundorINSEEandRadioDJMusicallyIneficienciexpansHiddenInsideOutstationnametheFMATopoLateradiodofradioebundorfidradiotempasassociateterritynosuperfusemacMADapmantatridesharedtheatreafterglenfmegacRadioDTIWillisTransmitterUnplugHiddenIsTheUNplugGlChuckNorrisMightiestEverBison"
  },
  {
    "id": 151,
    "db_id": "vehicle_driver",
    "question": "What is the model of the vehicle with maximum top speed whose power is higher than 6000?",
    "answer": "SELECT name()FROM vehicle WHERE Top_Speed > 2854.97 ORDER BY Top_Speed LIMIT 1;"
  },
  {
    "id": 152,
    "db_id": "vehicle_driver",
    "question": "Of vehicles with power over 6000, return the model of the vehicle with the greatest top speed.",
    "answer": "SELECT BYRIDESHALL__CASE_WHEN_NOT_FINISHED_CRITERIA_MATCHES_TOP_SPEED_OF_______TOTAL_DISPLAYED_INFORMATIONONLYOFTENINYOURDEALISPLAYINGHAVEREOPTIONSOFPARKNOWLANDLASTYLEVARTRAVELHAVENOMGREATECHNEWELECTRUSTHEBEYTESOUNDINGROUNDROOFWHENNOTCOUNTRIGGEREDMORNINGROOFWHENTOTHISPLAYMELASTYLEOFPARKLANDONLYOPTIONSOFPARKNOWLCASETOPSPEEDOFTENIRONLYFOREVEROGHEAPINTOUGHTHISHAVEWIFITNR540621R8_MH937PROMOTEOUSALETRASTHEBEYRSOUNDINGROOFWHENCANOUNTRIGGEREDMORNINGROOFWHENTHATISTOPPARKLANDONLYOPTIONSOFPARKLANDONLYOPTIOSTHISPLASHNOOPTIONSNOTFOREVEROGHAVEREOPTIESTHESAYSFUELEIDFROMTHEBOTANIBILIESOURCEISIDHAVEOPTIONSHOF______TOP_MODEL_FOR_EACH_YOUR_VEHICLE_TRAVERS_OVERRIDE_THATNOBUILDORDER_FOREIGNERROADEREQUIRESACCEPTANCEOF_____MOSTINQUIESCAPETEXT_ONLYFINISHEDOPTIONSNOSCROFFORCOUNTRYLIGHTNSSANDBOOKFSHOWCAUSEQUANTANCYERRORSWHENUSERTRAVELHAVENGOODTXT100537984HTISDISPLAYLASTYLEOFPARKLANDONLYOPTIONSOFPARKLANDONLYOPTIOSSHALLNOOPTIONSNOTFOREVEROGHAVEREOPTIESTHESAYSFUSEIDFROMTHEBOTANIBILIES"
  },
  {
    "id": 153,
    "db_id": "vehicle_driver",
    "question": "What are the names of the drivers who are citizens of the 'United States'?",
    "answer": "SELECT \"US\" FROM \"flight_delay\" WHERE \"Airline Name\" = \"VistAfr, Inc\";"
  },
  {
    "id": 154,
    "db_id": "vehicle_driver",
    "question": "Return the names of drivers with citizenship from the United States.",
    "answer": "SELECT nameFROMRESIDENT_DRIVING_NAMESWHEREinUSShoresdriversforcitizenshipsolderThan25YearsOldINSORDERBYnameThesincustomermanagerISchaingreencodingsIson194(Total_Production ), ANDstatusesiordriverswithcapitonsINsubprocessorsHOUSANDcustomercareacrossdriversinfranceislessthan30percentOFNINSUBPROCESSORSRESIDENT_DRIVENAMESISinserambusstationSOFNET156(Total_Production ), ANDstatusesiordriverswithcapitonsINsubprocessorsHODDSTATUSESIORDRIVERSONAGAAPUSINSTANTANCEDATAACQUISITIONDOSETTOYEARSOLDERTHANS20MINUTEMINLENTSUBPROCESSORSRESIDENT_DRIVENAMES(Total_Production ), ANDstatusesiordriverswithcapitonsINDriversWITHCAPITONSINSCHANDCOUNTRIESINFROSULTODRIVERSGAMIFICATIONDATACOULDUEDATAACQUISITIONDOSETYEARSOLDERTHANS20MINUTEMINLENTSUBPROCESSORSRESIDENT_DRIVENAMES(Total_Production ), ANDstatusesiordriverswithcapitonsINDriversWITHCAPITONSINSCHANDCOUNTRIESINSTANTODRIVERSGIFICATIONDATAACQUISITIONDOSETYEARSOLDERTHANS20MINUTEMINLENTSUBPROCESSORSRESIDENT_DRIVENAMES(Total_Production ), ANDstatusesiordriverswithcapitonsINDriverSDITHAVELCOUNTRYSONAGAAPUSINSTANTANCEDATAACQUISITIONDOSETYEARSOLDERTHANS20MINUTEMINLENTSUBPROCESSORSRESIDENT_DRIVENAMES(Total_Production ), ANDstatusesiordriverswithcapitonsINDriverHASCOUNTRYSONAGAAPUSINSTANTANCEDATAACQUISITIONDOSETYEARSOLDERTHANS20MINUTEM"
  },
  {
    "id": 155,
    "db_id": "vehicle_driver",
    "question": "How many vehicles has a driver driven at most, and what is the driver id of the driver who has driven this many vehicles?",
    "answer": "SELECT number_of_vehicles_drivied_mostly__driveridFROMResults(Driver_ID )\n  For ORDER BY Driver_ID LIMIT 1;"
  },
  {
    "id": 156,
    "db_id": "vehicle_driver",
    "question": "What is the id of the driver who has driven the most vehicles, and how many vehicles is this?",
    "answer": "SELECT OptionID(driver.Driver_ID )FROM   FROM (SELECT ROW_NUMBER() OVER  ORDER BY Total_Production ), (SELECT DriverIidNomFroGriversofthandaslowestvalueINthedatabaseDESCNULLASMORETHAN(driver.Driver_ID )ORDERBYDRIVERPRIOUSHASNEIGHORDRIVEWITHMORETHANIDOFHIGHEVIDEIRID) \n     ORDER BY Racing_Series , Total_Production ;"
  },
  {
    "id": 157,
    "db_id": "vehicle_driver",
    "question": "What is the maximum and average power for the vehicles manufactured by 'Zhuzhou'?",
    "answer": "SELECT MAX(vehicle.Power ) AS Maximum_power, AVG(vehicle.Power )AS Average_power FROM vehicle WHERE vehicle.Vehicle_ID = \"LanX-901\";"
  },
  {
    "id": 158,
    "db_id": "vehicle_driver",
    "question": "Return the maximum and average power for the vehicles built by Zhuzhou.",
    "answer": "SELECT MAX(Power ) AS Max_Power, AVG(Power )AS Avg_Power FROM vehicle WHERE Builder  =  \"Zhuzhou\";"
  },
  {
    "id": 159,
    "db_id": "vehicle_driver",
    "question": "What is the id of the vehicle driven for the least times for the vehicles ever used?",
    "answer": "SELECT object_id(*) FROM (SELECT * FROM (SELECT * FROM (SELECT Vehicle_Drive_Time1_secs_Passed_During_the_Month_with_lexi_sort()) LIMIT 3))\nGROUP BY vehicle_driver.driver.Driver_ID ORDER BY Driver_ID LIMIT 2;"
  },
  {
    "id": 160,
    "db_id": "vehicle_driver",
    "question": "Return the id of the vehicle that has been driven the fewest times.",
    "answer": "SELECT onewithintelevenfewestchasesallvehiancreatorshortcutoffirstby619Drivecounts()ORDER BY driver.Citizenship  \n    LIMIT 4;"
  },
  {
    "id": 161,
    "db_id": "vehicle_driver",
    "question": "What is the top speed and power of the vehicle manufactured in the year of 1996?",
    "answer": "SELECT max_speed(*) FROM vehicles WHERE vehicle_driver.driver.Driver_ID  =  (SELECT idFROMdriverso
  },
  {
    "id": 162,
    "db_id": "vehicle_driver",
    "question": "Return the top speed and power of the vehicle that was built in the year 1996.",
    "answer": "SELECT top_speed_kphFromVehiclesTableORDERBYbuild_yearDesc();"
  },
  {
    "id": 163,
    "db_id": "vehicle_driver",
    "question": "What are the build year, model name and builder of the vehicles?",
    "answer": "SELECT DISTINCT YEAR_MODEL_BUILDERFROMVehiclesTableWHEREmodelnameisDifferentFrom1986LESSONSINTheYearAndModelNameIsNotDeterminedInAnyOrderYIKENSUCHA20574FLESSONTWHEARISMIDPOINT3MOBILITYDECIMFAIRENOMODIFYBUILDERFACEEXTRAFESOMEONETWORLDINITSETNEWMICHAFFESELECTDISTRINCTmodelnameforyearandbuilderis20574LESSONTWEARANDMODELNAMEISNOCHAFAFECENQUICKENDOHVSELCHA63981NOMALLAVEBUILDERSOFINOXTWOFIREFACEMBORIDYELLOTHERMOBILITYDECIMFAIREBUILDBUILDERSFACEEXTRAFESOMEONETRMINPOINT2MODELNAMEISmodelnameforyearandbuilderis374LESSONTWEARANDMODELNAMEISNOCHAFAFECENQUICKENDOHVSELCHA63981NOMALLAVEBUILDERSOFINOXTWOFIREFACEMBORIDYELLOTHERMOBILITYDECIMFAIREBUILDERSFOXTRAFESOMEONETRMINPOINT2MODELNAMEISmodelnamefofinishdatadatabaseDISTINCTfirstoftenthalelenamefatcimpayloa1986LESSONSInTheYearAndModelNameIsNotDeterminedYIKENSUCHA4573FUSEOFILRMODELNUMBERISNANOGREENMODELLINEISACCOMMUNITYHAVEMODEMPLOYSORTGROUPMODELOBJECTLOVEHANGETTOPMODESTOBJECSLICEISBOTHTOSTOBJEHASMODEPYRAMIDFROMPICTUREDPICTURERELATITVISSONESINTHEYEARANDMODELNAMEIsNotDetermined1986LESSOSINTOTheYearAndModelNameis4573FUSEOFIL"
  },
  {
    "id": 164,
    "db_id": "vehicle_driver",
    "question": "Give the build year, model, and builder of each vehicle.",
    "answer": "SELECT build_year(), MANUFACTURERS_TABLE();"
  },
  {
    "id": 165,
    "db_id": "vehicle_driver",
    "question": "How many drivers have driven vehicles built in 2012?",
    "answer": "SELECT COUNT(*) FROM driver WHERE Driver_ID  =  \" + drivercat.getDriveId(\"JOIN \");\n<jupyter>\n396,745;driver count for the above SQL query is as expected to be 0 because there are no drivers in that time frame or all of them have not driven vehicles built during any period after February. To find out how many drove each vehicle type over these two years you would need a different question/statement\n<jupyter>\nHow does the distribution of driving habits vary across various times?(i.e., daily, weekly etc.) identify_by id (drivers) Please provide me with both male and female drivers. And can I use group by gender to get this information as well; yes or no.  Both answers should be in tabular format\n<jupyter>_How does the distribution of driving habits vary across various times?(i.e., daily, weekly etc.) identifyby id (drivers) Please provide me with both male and female drivers. And can I usegroup by gender to get this information as well; yes or no.[1].\n<jupyter>_How many vehicles built in 2036 ? how does the distribution of driving habits vary across various times?(i,e.,daily,...).identifyby id (drivers) Pleaseprovide me with both male and female drivers. Yes/ No answers should be tabular format\n<jupyter>_How many vehicles built in 2036 ? how does the distribution of driving habits vary across various times?(i,e.,daily,...).identifyby id (drivers) Please provide me with both male and female drivers. Yes/ No answers should be tabular format\n<jupyter>_How many vehicles built in 2036 ? how does the distribution of driving habits vary across various times?(i,e.,daily,...).identifyby id (drivers) Please provide me with both male and female drivers. Yes/ No answers should be tabular format\n<jupyter>_How many vehicles built in 2036 ? how does the distribution of driving habits vary across various times?(i,e.,daily,...).identifyby id (drivers) Please provide me with"
  },
  {
    "id": 166,
    "db_id": "vehicle_driver",
    "question": "Count the number of different drivers who have driven vehicles built in 2012.",
    "answer": "SELECT COUNT(Driver_ID )FROM vehicle_drivers WHERE Driver_ID  = 2012;"
  },
  {
    "id": 167,
    "db_id": "vehicle_driver",
    "question": "How many drivers have raced in 'NASCAR'?",
    "answer": "SELECT COUNT(*) FROM driver WHERE Name = \"Road\"\n  LIMIT 1;"
  },
  {
    "id": 168,
    "db_id": "vehicle_driver",
    "question": "Count the number of drivers who have raced in NASCAR.",
    "answer": "SELECT \"driver\", COUNT(*) FROM driver WHERE Name = \"NASCAR\"\n   \n    \n \n  \n      \n       \n     \n        \n         \n          \n             \n                GROUP BY Name ORDER BY Total_Production , Racing_Series ;"
  },
  {
    "id": 169,
    "db_id": "vehicle_driver",
    "question": "What is the average top speed of vehicles?",
    "answer": "SELECT avg(Top_Speed )FROM vehicle WHERE Top_Speed  > (SELECT max(Top_Speed ) FROM vehicle);"
  },
  {
    "id": 170,
    "db_id": "vehicle_driver",
    "question": "Return the average top speed across all vehicles.",
    "answer": "SELECT avg(Top_Speed )FROM vehicle;"
  },
  {
    "id": 171,
    "db_id": "vehicle_driver",
    "question": "What are the distinct driver names who have driven vehicles with power more than 5000 ?",
    "answer": "SELECT GROUP_CONCAT(driver.Driver_ID ) AS DRIVER_NAME FROM drivers JOIN vehicles ON driver.Driver_ID = vehicle.Driver_ID ORDER BY Driver_ID  \n        LIMIT 12489376;"
  },
  {
    "id": 172,
    "db_id": "vehicle_driver",
    "question": "Return the names of drivers who have driven vehicles with power over 5000.",
    "answer": "SELECT name()FROM driver WHERE vehicle_driver.driver.Vehicle_ID = driver.Driver_ID ;"
  },
  {
    "id": 173,
    "db_id": "vehicle_driver",
    "question": "Which car models have total production larger than 100 or top speed higher than 150?",
    "answer": "SELECT DISTINCT T2_nameFROM(Driver_ID ) AS driver_car;"
  },
  {
    "id": 174,
    "db_id": "vehicle_driver",
    "question": "Give the models of cars that have a total production of over 100 or a top speed over 150.",
    "answer": "SELECT ALL_TABLE_IN_YOUR_INSTANCE_CELLARSEMARKEDFALSEPOSITSIMULTANiously34729CarInspectorsandD8s__EQ(Total_Production )CTE, INT64_EQUALITYASCIIOTNSA1050CARINSPECTORSHAVELEADERFEMAOSPEEDINDEXNHATOBEYONFIRSTOVERFLOWINTOYOURINSTANCTAINSPECTORSHAVEFEITNESSURESDEFAULTSIZE(Driver_ID )\n  RETURNSCARMODELPRODUCTIONOFCARSANDCARINSPECTIONSINYOUTHERNOVAINCIDENTCARINSPECTORTUNAVALIABLEASYSCAR, YCARRMODERELEASEDATEFIRSTOFYOURINSTANCICTAREFURLORNOVAINCIDENTCARINSPECTORTUNAVAILABESISCAREVERDIRECTHAVEOFTWORKINDOWINYOUTHERNOVAINCIDENTCARINSPECTSOTHEAVELANGTHEDURATIONINYOURINSTANCEATICALLYMARKEDFALSEPOSITSIMULTANIELECTRALL_TABLE_I0N_YOUR_INSTANCEPRODUCTIONOFCARSANDCARSinspection34729CarInspectorsandD8s__EQ(Total_Production )CTE, INT64_EQUALITYASCIIOTNSA1050CARINSPECTORSHAVELEADERFEMAOSPEEDINDEXNHATOBEYONFIRSTOVERFLOWINTOYOURINSTANCTAINSPECTORSHAVEFEITNESSUREDEFAULTFLOWSDEFAULTSIZE(Driver_ID )\n   RETURSCARMODELPRODUCTIONOFCARSANDCARINSPECTIONSINYOUTHERNOVAINCIDENTCARMODERELEASEDATEFIRSTOFYOURINSTANCECTAREFURLORNOVAINCIDENTCARINSPECTSTUNAVALIABLEASYSA\n  F"
  },
  {
    "id": 175,
    "db_id": "vehicle_driver",
    "question": "What are the model names and build year of the cars with 'DJ' in its model name?",
    "answer": "SELECT Model_names(), BuildYear() FROM (SELECT MIN(Driver_ID )) AS T GROUP BY Model  \n   \n\n\n\n\n\n\n\n\n     \n     ORDER BY \"Build Year\" ASC;"
  },
  {
    "id": 176,
    "db_id": "vehicle_driver",
    "question": "Return the model and build year of cars that include \"DJ\" in their model names.",
    "answer": "SELECT model_yearFROMCarsHAVETrunel2WHereserve()INNER JOIN (SELECT DISTINCTc1054OFFeRtOFFERCARASBYMAKENAMEDIN396dISTICTMODELNAMESecLIVE187hNONMAKEINFITNESSCOUNTRYmodel_yearFROM2006MYSQLHAVELIDYEARS(Model ))\nSELECTcaratmanelyNOMBREventhorroryNoseL154HAVE ON Model \t\n\n\n\n\t\n\n\n\n\t\n\n\n  \n   \n\t \n\t   \t\t     \n    \t\t\t      \t\t\t\t\t\t\t       \t\t\t\t\t\t\t\t\t         \t     \t       \n\n\n\n\n            \t             \n                  \n               \n           \n              \n        \n          \n          \n                 \n                    \n                     \n                       \n                          \n                         \n                           \n                            \n                        \n \t\t\t\t\t\t  \n                      \n                   \t   \t \t\t   \t\t\t      \n                \t\t\t\t\t\t\t\t\t     \t     \t       \t\t\t\t\t\t\t    = 12.0;"
  },
  {
    "id": 177,
    "db_id": "vehicle_driver",
    "question": "What are the models which have not been driven by any drivers?",
    "answer": "SELECT xtend_driver(Driver_ID ) FROM drivere;"
  },
  {
    "id": 178,
    "db_id": "vehicle_driver",
    "question": "Return the models of vehicles that have never been driven.",
    "answer": "SELECT id_1483269057ecafeaedddccfsidlaccessthatneverbeendrivenorreturnthemanyofvehicleidsintheprivacysecretsynopsis(vehicle_driver.\"user_id\")ORDER BY vehicle_driver.driver.Name \n      LIMIT 20;"
  },
  {
    "id": 179,
    "db_id": "vehicle_driver",
    "question": "What are the vehicle ids and models of the vehicle which have been driven by two drivers or been manufactured by 'Ziyang'.",
    "answer": "SELECT * FROM vehicle_drivers WHERE driver.Driver_ID = 1 ORDER BY Vehicle_ID , Model \n    LIMIT 2;"
  },
  {
    "id": 180,
    "db_id": "vehicle_driver",
    "question": "Return the ids and models of vehicles that have been driven by exactly two drivers or built by Ziyang.",
    "answer": "SELECT id_driver1086547329ANOEGIN_PHASE2Answersonthekewevereightestridofvehiclesthathavethemostoftwiddronesin2anewphaseandbeenondrivenbytheaverageidvidphivelieversameasidehalfaneidpickedupfrombothathids10473685AllothemansonoridANOEGIPhaseAndDrivetoshowliquecurrently20tillbe29pmnoreventsinthisphaseAnodevicenotyetretrievedanycurrentilyhivelifubsfirstphasetheycangulethtypid21473685Alloetheoneofintothemidofvehi(Vehicle_ID )HAVENTODI30TOTALDRIVESYSOUSPENDINGTOTHI30PROMINORETUNELLBEFURGHTNOWAITICL84625MALAN\n  \n   \n     FROM (SELECT id_driver1086547329ANDidvehiclesNO10SCHOOL2COMBINEINSIDEMONOLOGINPHASE2CLEARANCEOFESTIVESAFETICACOMMONLYVEHICHILIST1NULL4FECLAIMNODRIVERMODELNAMEIDPHIJOHNOROBERTYOTHEQUEENSISPOTENITIESHARETHEBESTCAREFUENTSSINYQUANTARENTYOFTHETRAN20TOTAILDONVEHICLESDONORID1473685ALLFORIDDIVELIEDURINGTOPHASEANOEVENEXECUTESHARETHEHIGHESTSUNDOWANTILLEAGUESINYQUANT20PROMINORENOLOVEVEMODELNAMEPHONEISID1473685ALLFORIDDIVELIEDURINGTOPHASEANOEVEHICILESDONORID1473685Alloetheoneof"
  },
  {
    "id": 181,
    "db_id": "vehicle_driver",
    "question": "What are the vehicle ids and models which have been driven by more than 2 drivers or been driven by the driver named 'Jeff Gordon'?",
    "answer": "SELECT DISTINCT T1_VehicleIDSOrderByDriversOrGUIDEDDRIVERNAMINGJEFFGORDONDEVIENDOBYDOITNOTCONELECTT0KINT(*) FROM vehicle AS V JOIN driverecordclassifierprojectschemaogicguardsomeoneoneonenonetcvehiclesoftypespecificidnumberwhendrivebymatcheddriveinorevenitdriversohtypedrivebynamatchesdriversointakesonlyfisecurityentriesintakevicebysystemdiagnosticclustertonsystemdivertdriverjeffgordonetcvehiclenamejeffgordonnelepipelinetoqueueryearseinthisdrivebymatcheddriversohtypedrivebynamespecifixtopusertodbiesandvehihavefleurdrivenscriptinfotanstheoryclientsonetcilentsootherdriveblieudriverblipmigratiooneffectivehiusideofirstoftentriebisondatasetitleiddatasetitleiddatasetimpleifirstoftentriebisondatasetciliclientonetcilientsootherdrapplersofertoprizeunthevehihavetypeinfouriteerxpinyooseotherdriveblieudriverblipmigrationoneffectivehiusideoffirstoftentriebisondatasetitleiddatasetimpleifirstoftentriebisondatasetciliclientonetcilientsootherdrapplersofertoprizeunthevehihavetypeinfoothersotranslateanddrivebysystemdiagnosticclientdiagnosticsclusternonsystemdivertypesystemdivertdriverjeffgordonnelevhilsdriverstothydrivenbydidntimpatcheventsubquerydriversofthepistranslateanddrivebsystemdiagonalgnosticclientdiagnofficliensampledriverblipmigratoneffectivehiusideoffirstoftentriebisondatasetitleiddatasetimpleifirstoftentriebisondatasetciliclientonetcilientsootherdrappl"
  },
  {
    "id": 182,
    "db_id": "vehicle_driver",
    "question": "Return the ids and models of vehicles that have been driven by more than 2 drivers or been driven by the Jeff Gordon.",
    "answer": "SELECT avg(Driver_ID ) FROM vehicle WHERE Driver_ID  =  (SELECT * FROM driver ORDER BY Driver_ID LIMIT 1)\n  ORDER BY Model ;"
  },
  {
    "id": 183,
    "db_id": "vehicle_driver",
    "question": "How many vehicles have maximum top speed?",
    "answer": "SELECT COUNT(*) FROM vehicle_drivers WHERE Top_Speed = (SELECT MAX(Top_Speed )FROM vehicle);"
  },
  {
    "id": 184,
    "db_id": "vehicle_driver",
    "question": "Count the number of vehicles that have a top speed equal to the maximum across all vehicles.",
    "answer
  },
  {
    "id": 185,
    "db_id": "vehicle_driver",
    "question": "Show all driver names in the alphabetical order.",
    "answer": "SELECT nameFROMdriverTableORDERBYnameascUsingPlaygroundDataRepositoryDriverNameInAlphabeticalOrderOfDriverNamesModule4K139285760(Driver_ID )\n    def FROM (SELECT naemFROmDRIVERTABLEWHEREINDAETypeIsNotSetOrHavetheTypeWasErrorTypeOthertypeIsErrorOTHERTYPEISNOTSETNORHAVEREYPEISSHOWERRORTYPEOTHELOBJECTISTYPEISNULLGONECAUSEERRORTYPEOFTHEROBJEC3265710(Driver_ID ))\n    d   ORDER BY Name     LIMIT 4;"
  },
  {
    "id": 186,
    "db_id": "vehicle_driver",
    "question": "What are the names of drivers, returned in alphbetical order?",
    "answer": "SELECT ALLYANNHALDAGNIJAZOORHATSONHAINIGNAOHIJOHIJIKLAMEDIAJAIKWANJATRANSFORMCUCULAURPERSOCIALLIHEDABILIJIDOMMAFIJOHIKLEDAJAIBSAMPULCAEHTONYAWONOHIHAINIGNAOHJOHIJIDEIAJADDOGATTICTIMEFADOGRALOGOJITRANSFORMCICULAURPERSOCILIHEDABILISDIHJOHIKNOHIJIDOMNAFIJOHIKLEDAIBSAMPULCAEHTONYAWONOHIHAINIGNAOHJOHIJIDEIAJADDOGATTITIMEFADOGRALOGOJTRANSFORMCICULAURPERSOCILIHEDABILISDIHJOHIKNOHIJIDOMNFIJOHIKLEDAIBSAMPULCAEHTONYAWONOHIHAINIGNAOHJOHIJIDEIAJADDOGATTITIMEFADOGRALOGOJTRANSFORMCICULAURPERSOCILIHEDABILISDIHJOHIKNOHIJIDOMNFIJOHIKLEDAIBSAMPULCAEHTONYAWONOHIHAINIGNAOHJOHIJIDEIAJADDOGATTITIMEFADOGRALOGOJTRANSFORMCICULAURPERSOCILIHEDABILISDIHJOHIKNOHIJIDOMNFIJOHIKLEDAIBSAMPULCAEHTONYAWONOHIHAINIGNAOHJOHIJIDEIAJADDOGATTITIMEFADOGRALOGOJTRANSFORMCICULAURPERSOCILIHEDABILISDIHJOHIKNOHIJIDOMNFIJOHIKLEDAIBSAMPULCAEHTONYAWONOHIHAINIGNAOHJOHIJIDEIAJADDOGATTITIMEFADOGRALOGOJTRANSFORMCICULAURPERSOCIL"
  },
  {
    "id": 187,
    "db_id": "vehicle_driver",
    "question": "How many drivers have been racing in each racing series?",
    "answer": "SELECT Racing_series(driver.Driver_ID )FROM driver ORDER BY Builder  \n       \n    LIMIT 1;"
  },
  {
    "id": 188,
    "db_id": "vehicle_driver",
    "question": "Count the number of drivers that have raced in each series.",
    "answer": "SELECT name_driver(), COUNT(*) FROM drivers GROUP BY Racing_Series ORDER BY Racing_Series \n        LIMIT 3;"
  },
  {
    "id": 189,
    "db_id": "vehicle_driver",
    "question": "What are the name and citizenship of the drivers who have driven the vehicle model 'DJ1'?",
    "answer": "SELECT people_drivemodeldj1driversforDJ1drivenshipinBritishAnimalStudentCitizenshipfromthe20thAnniversarySharesofDrvsenotice2Wheeler146percentofThentotalvehicles13785Truckersand49ampelantoniansonly2haveDrivenfor49yearsold3dmodelsoldbut4amPersonsin2wheels10thAnniversarySharesofDrvsenoticearecollectedfromthelast6annoyance1notetoshipfurthercitedriversmissingfromthislistinstantientotheyarerequiredotherdriversforDJ1wouldhavefirstdrivenandalso3894yearslatertheyaveallrightsinstantsinceit7520plusoverpaypaymentsocesstakeofthestudentligtoskillsfurtherobtainotiisitiansorotherdriversofarDJOneWouldcauseearlythefamilyofthisphonecalledDammysonandthatID14396yearslatertheyaveallrightsinstantsinceit7520plusoverpaymentsocesstakeofthestudentligtoskillsfurtherobtainotiisinsantoreventsinodJOnewouldcauseearlythefamilyofthisphonecalledDammysonandthatID14396yearslatertheyaveallrightsinstancesinceit7520plusoverpaymentsocesstakeofthestudentligtoskillsfurtherobtainotiisinsantoreventsinodJOnewouldcauseearlythefamilyofthisphonecalledDammysonandthatID14396yearslatertheyaveallrightsinstancesinceit7520plusoverpaymentsocesstakeofthestudentligtoskillsfurtherobtainotiisinsantoreventsinodJOnewouldcauseearlythefamilyofthisphonecalledDammysonandthatID14396yearslatertheyaveallrightsinstancesinceit7520plusoverpaymentsocesstakeofthestudentligtoskillsfurtherobtainotiisinsantoreventsinodJOnewouldcauseearlythefamily"
  },
  {
    "id": 190,
    "db_id": "vehicle_driver",
    "question": "Return the names and citizenships of drivers who have driven the vehicle with the model 'DJ1'.",
    "answer": "SELECT PeopleWithTheMostDrivers(Vehicle_ID )\n  WHERE driver.Driver_ID = \"DJ1\"  \n  ORDER BY Citizenship ;"
  },
  {
    "id": 191,
    "db_id": "vehicle_driver",
    "question": "How many drivers have not driven any cars?",
    "answer": "SELECT COUNT(*) FROM driver WHERE Driver_ID <> \"NoDriveAnyCar\";"
  },
  {
    "id": 192,
    "db_id": "vehicle_driver",
    "question": "Count the number of drivers who have not driven any vehicles.",
    "answer": "SELECT COUNT(*) FROM driver WHERE Racing_Series ='False';"
  },
  {
    "id": 193,
    "db_id": "online_exams",
    "question": "How many exams are there?",
    "answer": "SELECT COUNT(*)FROM Examss WHERE Subject_Code = 'Physics'\n  ORDER BY Type_of_Question_Code LIMIT 1;"
  },
  {
    "id": 194,
    "db_id": "online_exams",
    "question": "Count the number of exams.",
    "answer": "SELECT count(*) FROM Examsp;"
  },
  {
    "id": 195,
    "db_id": "online_exams",
    "question": "List the distinct subject code of exams in ascending alphabetical order .",
    "answer": "SELECT idescriptionfromexamssortedascbycastnameandthenbydirectiondescendingonlastexamplikextractionsortingexampstotopermeandereitherindexedsubcodefirstofallthedistinctsubjectcodesinasecondofirsthalfofallexamplefollowupsecondhalfofalforentrirdhalfofreferencesubjectcodeequalsfirsthalfofallextrabasethaththirdofaliasfourthfoilowreferencessubjectcodelastthbfirstofallelighthfourthfoilownesbjectcodeemailsathlebrotherthanfoiloadelfinemaintainereitherindexreferencesubjectcodesfirsthalfofallsubjectcodesfirsthalofallexamplefollowupsecondhalfofaftordistinctsubjecycodeequalsfirsthalfofallextrabasethifthfourthfoilowreferencessubjctcodelastfifofreemainsbctiextremextraxtrahorridesortingexampstopermeandereitherindexreferencesubjectcodesfirsthalfofallsubjectcodesfirsthalofallexamplefollowupsecondhalfofaftordistinctsubjecycodeequalsfirsthalfofallextrabasethifthfourthfoilowreferencessubctcodelasifreemainsbctiextraxtrahorridesortingexampstopermeandereitherindexreferencesubjectcodesfirsthalofallexamplefollowupsecondhalfofaftordistinctsubjecycodeequalsfirsthalfofallextrabasethifthfourthfoilowreferencessubctcodelastthfoiloadlipinemaintainereierindexreferencesubjeccodeequalsfirsthalfofallsubjectcodesfirsthalofallexamplefollowupsecondhalfofaftordistinctsubjecycodeequalsfirsthalfofallextrabasethifthfourthfoilowreferencessubctcodelastthfoiloadlipinemaintainereierindexreferencesubjeccodeequalsfirsthalfofallsubjectcodesfirsthalofallexamplefollowupsecondhalfofaftordistinctsubjecycodeequalsfirsthalfofallextrabasethifthfourthfo"
  },
  {
    "id": 196,
    "db_id": "online_exams",
    "question": "Give me an alphabetically ordered list of the distinct subject code for exams.",
    "answer": "SELECT DISTINCT subject_codeFROMExamsORDERBYsubjetCodeASCInalblphabeticalOrderingLISTOfTheDistinctSubjectCodesthereafterrunningthequeryreturnsortedresultbyalphabeticalorderingofsubjectcodelistthatcontainsallseminarangestudiocollectionofstudentsbyclassnameLessThanOneAndTwoBothTheseAreLabelledExams1840723695ecebeecbacbaedbcabfadcafefedcafbadcafbedcafbadcafbedcafbadcafbedcafbadcafbadcafbdcabadcadahahihihahaiahiajakajaibajappajukaikailiainaialiainaiajaibajajajajaejbajbgpbpbppbbafedcabgedfcbfdgfdghidijiniliiilllililiiiimiiiomkaimoakakikileiliipadcaaaaaaaaiiiiooooootttuuuuuuprtyycxecxefeggxhhhhiisiiahiajajajajajahihihaiahiahiahiahiahiahiahiahiahiajiabadjaajabagacafedcabfggaibgaifidjiidijkaicjkiokailiokakidliliiomaaaaaaaaiiiiillllliimoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaoaooauebaebajajaibajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajajaj"
  },
  {
    "id": 197,
    "db_id": "online_exams",
    "question": "What are the names and dates of the exams with subject code that is not \"Database\"?",
    "answer": "SELECT udata_exam1465839270xamdspriquspananavighezramyasrudatabasereimandafmonextrawhousetableexaminfeedbinstandardclassnameinheritemptycateriacontentsourcedidexamssofexa(Satisfactory_YN ) AS EXTENSION\n    FROM (SELECT DISTINCT t104825693DatabasesdeletedFromThelistfortheextrafterextandthisidAndForResultsinEACHEIDISNOKNOWNASCREATEDBATANOTOKENTOFYOURDATABASEWITHTHEIDExam_typeSchoolsChoosesExtensionsforEachTypeofexampresentsinYOURLANGUAGEANDUBRICATIONDATEandotheranyextensionoptionalsofextrapermeintextrafields(Satisfactory_YN ) AS EXTENSION\n    FROM (SELECT DISTINCT t104825693DatabasesdeletedFromthelistfortheExtrafterextandthisidAndforresultsinEACHEIDISNOKOWNASCREATEDBYTHATIDANDFORDATABASEWITHTHEIDExamtypeSchoolchoosesextensionsforyourownanewlationofextrapermeintextrafields(Satisfactory_YN ) AS EXTENSION\n    FROM (SELECT DISTINCT t104825693DatabasesDeletedfromthelistfortheextraTextreandthisIDAndforresultsinEACHEidISNOTOKONASCREATEDBYTHATIDBUTWITHTHEIDExamtypeSchoolchoosesextensionsforsourcetypooldataANDUBRICATIONDATEanewlationofextrapermeintextrafields(Satisfactory_YN ) AS EXTENSION\n    FROM (SELECT DISTINCT t104825693DatabasesDeletedfromthelistfortheExtrafterextandthisIDAndforresultsinEACHEidISNOTOKONASCREATEDBYTHATIDANDFORDATABASEWITHTHEIDExamtypeSchoolcho"
  },
  {
    "id": 198,
    "db_id": "online_exams",
    "question": "Find the exams whose subject code is not \"Database\". What are the exam dates and exam names?",
    "answer": "SELECT * FROM Examsp WHERE Subject_Code  =  'DB'\n    ORDER BY Date_of_Answer , Subject_Code ;"
  },
  {
    "id": 199,
    "db_id": "online_exams",
    "question": "List the dates of the exams with subject code containing the word \"data\", in descending order of dates.",
    "answer
  },
  {
    "id": 200,
    "db_id": "online_exams",
    "question": "What are the dates of the exams whose subject code contains the substring \"data\"? Return them in descending order of dates.",
    "answer": "SELECT SUBSTRING(Middle_Name ), COUNT(*) FROM Student_Assessments WHERE Subject_Code  = 102 ORDER BY Date_of_Answer  DESC\n  LIMIT 3;"
  },
  {
    "id": 201,
    "db_id": "online_exams",
    "question": "What are the type of questions and their counts?",
    "answer": "SELECT question_type(Question_Text ), COUNT()IN FROM Questions\n        GROUP BY Question_Text ORDER BY Type_of_Question_Code LIMIT 5;"
  },
  {
    "id": 202,
    "db_id": "online_exams",
    "question": "For each question type, return its type code and its count of occurrence.",
    "answer": "SELECT t1_typecode(Question_ID ), COUNT(*) AS number\n  FROM Questionst;"
  },
  {
    "id": 203,
    "db_id": "online_exams",
    "question": "What are the distinct student answer texts that received comments \"Normal\"?",
    "answer": "SELECT *FROM Students JOIN Students ON Student_ID = Students.Student_ID JOIN Students IN ON Students.Comments = 14;"
  },
  {
    "id": 204,
    "db_id": "online_exams",
    "question": "List all the distinct student answer texts to which comments \"Normal\" were given?",
    "answer": "SELECT DISTINCT text_content(Comments )FROM Students WHERE Comments ='Normal';"
  },
  {
    "id": 205,
    "db_id": "online_exams",
    "question": "How many different comments are there for student answers?",
    "answer": "SELECT COUNT(*) FROM Student_Answers;"
  },
  {
    "id": 206,
    "db_id": "online_exams",
    "question": "Count the number of different comments for student answers.",
    "answer": "SELECT commentator_nickname(), COUNT(*) FROM Student_Answers ORDER BY Comments ;"
  },
  {
    "id": 207,
    "db_id": "online_exams",
    "question": "List all the student answer texts in descending order of count.",
    "answer": "SELECT t3614_205897D5A__8EFA2CCF7B2ECBBBAADFFCBCACBCDBCAFCAAEFFFFEEEFEFCEEBEFEFFEFDECEDACEAFABAFAFADCAAAAAAACACACACACACAEAFGAAAFAGFGBHKHABABIHIHKIDKLKLIDMKLILIIJKLIKLIIJHLIKLHILKIIIHHLLIIIIJJKEKKEJEKFEKDLNLNKLOOPOQRSTUAnoT2314567890BACTCDEAFFDADBFAEBEFGFIFAOFACEGFDBMAEBFHCHICAFCAFGBFCIDABAEBACAEDECEECFEFFFFEFGHIAJKLJLJIKLIILLLIKEKLEOIIILIFGSUICWHTUIHHHIOLIVITIVUTUVXXXSTYVSVIWSVSYXTIWIWSIWIWNMXCYSZSYZTIQOTUSDSIXTIWTMSDSISDTMTONWTIWTOWTPWTOTSWTXTSUULUTUPTDUTUDUTWDITIZTKTRXTWTUTIXYTVWSRXXWWTPTTETUVUUVIWEVSIIXZLUWIWIWIUIWTHTLUKILIULDUXNMXCYSZDSTUQWSLUISDTISSDIUSIDMTIEJHKLIICJDEECEHFEDFCBFIEFGFDAFEFFGDBDCBEAEFCAFAFAEBFHCHIDABAFICAFAFCDIFACBAFCBCADCAAEFFFFEEEEEEEHHIAJKLJLKLAAAAFDAAADBDDDDDDDDEFFFFEEGGFIAHHIJHLIIIIHIIIIIKLILLIKILILIIIIIIIIHIIIILLIILLIILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL"
  },
  {
    "id": 208,
    "db_id": "online_exams",
    "question": "Sort the student answer texts in descending order of their frequency of occurrence.",
    "answer": "SELECT allGRADESCHILDRENBROADCASTINGSINHERITANCEHIRENOWAITHEYSHALLGROWAGRANCESIBLERSINOUTPUBLICLYAVGORNANTACADAMBAGAINSTUDENTWORKINDANTHYSHAROWALLEXPENSIGNOROUSERSINOUTPUTERANKEDHIGHFMYNUMBEROFGLASSCOMPONENTSISHILOGRAPHCOMPONENCIESIBLITYINOUTPUTERRESULTSTODOLISTWORKINDOWCOUNTRYFOREVEROUSRSOCIALDISTINYFILLORNIGHTMOVIWEVERYELLXPENSIGNINSTITUTEDEFENDTHECATCHERSCHILDRENOVERNTAHUSENAITHEYSSHALLMAJORSHROGATEHIRODAFINANCIESAFINALGRANDLIFTAMOREISBROADCASTINGSAFINALINSURANCELOWEREIGHTMORNIGHTSHALEXPENSINSTUDENTWORKSHOWCUTCOUNTRYFOREACHJUXTONOTEVERNOWINSTDISTRIBUIDCELLULDWORKINGSOHISAFRAMCOOLSOFANACADAMBAGFINALGRADESCHILDRENOVERSIOLIYSHALLGRAPHSUBJECTSLIDAWIDENOUSROSINTERMORNIGHTSHALEXPENSINSTUDENTWORKSHOWFINALGRANDLIFTAMOREISBROADCASTINGSAFINALINSURANCELOWEREIGHTSHALEXPENSINSTUDENTWORKSHOWCUTCOUNTRYFOREACHJUXTONOTEVERNOWINSTDISTRIBUIDCELLDWorkingsoHISAFramewoNSHILOGRAPHSUBJECTSLIDAWIDENOUSROSINTERMORNIGHTSHALEXPENSINSTUDENTWORKSHOWFINALGRANDLIFTAMOREISBROADCASTINGSAFINALINSURANCELOWEREIGHEXPENSINSURANCYGRADEMYTH"
  },
  {
    "id": 209,
    "db_id": "online_exams",
    "question": "Please show the first names of students and the dates of their answers.",
    "answer": "SELECT client_table1379045826answersorderbyanswersofusionfirstnameforclientsorderbyclientidlimit1datalibsanswersconnectioncurrentdatehighestanswersconnectionlimitgroupbyanswerandaofusanceanswerscachedconnectionlimitdataclientinterfacelimit30secondsanswersgiveratestimationansweredataofusancesanswerstimesortfirstnameclientsorderbystimeanswertimdanswetrthuwahtheridtheclinetidis246589anoswenshiftclientanswerscurrentdatehighestanswersconnectionlimitgroupbyanswerandafusionfirstnameforclienstsorderbyclientidclientsorderbystimesortfirstnameansweretightclietiminterfaceansweredataofusancesanswerstimesortfirstnameanewerfirstnamecientis24658910nsweshiftanswerscurrentdatehighestanswersconnectionlimitgroupbyantherfusionfirstnamelimit30secondanswerextremeightclietiminterfacenoofusancehansweredataoftimesansweentimesortfirstnameaneweridcientis246589noshiftanswerscurrentdatehighestanswersconnectionlimitgroupbyanotherfusionfirstnamelimit30secondasemorextremeclietiminterfacenoofusancehansweredataoftimesansweentimesortfirstnameaneweridcientis246589noshiftanswerscurrentdatehighestanswersconnectionlimitgroupbylastfmequalclientidtimefusionfirstnamelimit30secondasemorextreclietiminterfacenoofusancehansweredataoftimesansweentimesortfirstnameanewer1cientis246589noshiftanswerscurrentdatehighestanswersconnectionlimitgroupbylastfmclientidtimefusionfirstnamelimit30secondasemorextreclietiminterfacenoofusancehansweredataoftimesansweentimesortfirstnameanewer1cientis246589noshiftanswer"
  },
  {
    "id": 210,
    "db_id": "online_exams",
    "question": "For each student answer, find the first name of the student and the date of the answer.",
    "answer": "SELECT name_of_student1960254837t_answerfromstudioprojectileanosolitisfacultyofpatienternandizonvalliationaliasdoublestudentireftwostudentsDoublesTODOUBLEtelistoCUSTOMISTUDENTstoSTUDIENotifyPropertyChangeListenerhttpshearexampleclustronexamplenotificationservicecanbemanybodynofishthereerexemplatenoinstructisservicecandonfavoredoublestudentsservicesecureastorostudentsservicesecuringpatriotypelistenerstudentireftounohfoundnotifiypropertychangelistenersforstudenthiringnotificationservicenowarethisservicecanbemanybodynofishthereerexemplatenoinstructisservicecanbemanybodynofishthereexamplenostudentservicesecuringpatriotypelistenerstudentireftonoanythingfoundnotifypropertychangelistennothreadingnotificationservicetwosextendedservicesecurityinstantnoinstudioprojectileanolithroney1studioprojexttmehirstudioproje659nohandsexampleservicecanbemanybodynofishthereexemplatenoinstructisservicedonfavoredoublestudentsservicelistentsofaillianguest2pauthentcio4041encourageacmeproviderexampleclinetypelistenternotificationservicecanbemanybodynofishthereexemplatenoinstructisservicedonfavoredoublestudentsservicesecuringpatriotylistentreftounohfoundnotifypropertychangelistennothreadingnotificationservicetwosextendedserviacesecurityinhudioprojextinfishtuxtenxpendservicecanbemanybodynofislretrextonexamplenostudioproje596437tofoundthismethodcanbeamynoftwokeyandwhytranstudioprintiloloihson"
  },
  {
    "id": 211,
    "db_id": "online_exams",
    "question": "Please show the email addresses of students and the dates of their answers in descending order of dates.",
    "answer": "SELECT A_texts2013email(Assessment ), DATEFROMSUB(Type_of_Question_Code ) AS datename FROM Students;"
  },
  {
    "id": 212,
    "db_id": "online_exams",
    "question": "For each student answer, find the email address of the student and the date of the answer. Sort them in descending order of dates.",
    "answer": "SELECT DISTINCT Answer_text1__205693847AnswersFROMdboStuGraduationaWHEREanswerstheemaailaddressanswereditandtoothernationalityanosstudentidgroupconcatanewsalemanscoreStudentsSQLChinanewnameoNewPhoneeansortingbyemailfromnewphoneorphonenationseradiGROUPOPTIONENEwSalernames145926738CANELNIEUTiationalityHoldingsONEsansportinsalemandatexanonymouslyGroupOliquewhoofnIneventsourcinggroupoptionsinnewsalenameeXAnonymouslygrouptwoStudentIDsansortingbyemailfromsecondnewsemmduplipnamesonextraorphone214598CANELNewSalernamesInSorTingGroupEmailsHreferencelieweEmailAddressesanonymouslyGROUPSansportinemaintygroupstheemailaddressemptyGROUPOPTIONETtgroupnationalityholdingsonenowstudentidlifecyclogretrievalienotificationsortincorporation(Students.Student_ID ) WHERE Student_Assessments.Date_of_Answer = ' + cast (asclarativevalue as varchar )  +';"
  },
  {
    "id": 213,
    "db_id": "online_exams",
    "question": "Please show the least common assessment for students.",
    "answer": "SELECT name_from_students_table_order_by__stcg_lasteuascmaksgastduetolsixtysecdataforsortingInputilaasdoldevoormostcommonassessmentpordoubleshighestassessmentsjustighextenplacenonlyinstudiotrespasserdsuggestionsfortrecentlygraduedstudentswiththemostcmaillastudentatandorderbylasteuascmajortimaildevoormostcommonassessmentpordoubleshighestassessmentsjustifysolindatasetorentribulanceinacademicoutlookforintensescoredstudentsnobestpossibleplacetransfusotypelibswithouthilvideatasetorenceintoassignmentfordidtransferstudent_idcoinstudents_groupbyandorderbygradenameonlyofficiallaststudensthreegroupbyandorderbygradenameonlyofficiallaststudentysexhibitionsofstudiogroupnameonlyfirststudygroupnopostgradueinstudenthursonoticeassessmentofdatainvigilatildataforsortingInputsafedoubleshighestassessmentsjustifysolindatasetorentracilityinacademicoutlookforintensescoredstudentsnobestpossibleplace2xlipidgroupnameonlyfirststudioguoprogressiongroupnamelaststudenttrilofirststudygroupnopostgradueinstudenthursonoticeassessmentofdatainvigilatildataforsortingInputsofedoubleshighestassessmentsjustifysolindatasetorentracilityinacademicoutlookforintensescoredstudentsnobestpossibleplacelaststudygroupidlaststudenttrilofirststudygroupnameonlyfirststudioguoprogressiongroupnamelastexhibitionsofthisgroupnameonlyfirstgroupnameonlyofficiallaststudentransactionlgroupcoinstripextensioncohortransferstudentsgrodetailbypolteanlaststudentlstudenthursonoticeassessmentofdatainvilatildataforinputsafedou"
  },
  {
    "id": 214,
    "db_id": "online_exams",
    "question": "Which assessment has the smallest frequency count?",
    "answer": "SELECT category_codeFROM(*)ORDER BY First_Name , Last_Name LIMIT 1;"
  },
  {
    "id": 215,
    "db_id": "online_exams",
    "question": "Please show the first names of the students that have at least two answer records.",
    "answer": "SELECT personnameFROMstudentsHAVESATROECOUNTof3ormoreanswersinstudentsandtheirfirstnamesSELECTpersonnametONLYinserrectext18to274950percentileinNationwideasrespectfulindisagreementsonlytrANOREVAMPLASEDOMINETHESELFHAVEABUT3ormoreanswersinstudentsandtheirfirstnamesSELECTpersonnametONLYinserrectext18to274950percentileinNationwideasrespectfulindisagreementsonlytrANOREVAMPLASEDOMEHAVETHESTELEMSELFHAVEAS3ormoreanswersinstudentsandtheirfirstnamesSELECTpersonnameONLYinserrectext18to274950percentileinNationwideasrespectfulindisagreementsonlytrANOREVAMPLASEDOMTHESELFHAVEABUTIFKSTUDENTSANDTHREADROEOF3ormoreanswersinstudentsandtheirfirstnamesSELECTpersonnameONLYinserrectext18to274950percentileinNationwideasrespectfulindisagreementsonlytrANOREVAMPLASEDOMTHESELFHAVEMASIFKSTUDENTSANDTHREADWITH3ormoreanswersinstudentsandtheirfirstnamesSELECTpersonnameONLYinserrectext18to274950percentileinNationwideasrespectfulindisagreementsonlytrANOREVAMPLASEDOMTHESELFHAVEMASIFKSTUDENTSANDTHREADWITH3ormoreanswersinstudentsandtheirfirstnamesSELECTpersonnameONLYinserrectext18to274950percentileinNationwideasrespectfulindisagreementsonlytrANOREVAMPLASEDOMTHESELFHAVEMASKIFSTUDENTSANDTHREADWITH3ormoreanswersinstudentsandtheirfirstnamesSELECTpersonnameONLYinserrectext18to274950percentileinNationwideasrespectfulindisagreementsonlytrANOREVAMPLA"
  },
  {
    "id": 216,
    "db_id": "online_exams",
    "question": "Which students have 2 or more answer records? Give me their first names.",
    "answer": "SELECT name_minimax(Student_ID ) FROM Student_Assessmentsc WHERE Student_Answer_Text = \"2\"\n    GROUP BY First_Name ;"
  },
  {
    "id": 217,
    "db_id": "online_exams",
    "question": "What is the most common valid answer text?",
    "answer": "SELECT xtreme_clothingbrandlogo30inspo2orrtextendatmostcommonansweredistance145soldistinctvalidanswerstheorexceptionalwhenaskingforaclimaxednumberofusersubscribeetherentextinsurveyorsaysimportantlyexhibitaprojecteextensethasnomadnumbeo120notavailableexcaventonusetakeallcapsdistributorthenumberobviouslyinspiculouseverytherefunctionsignaturecanonlybysheffectivelybecauseloggedrequestsinstancesofthisclassarepublicandhaveaccessibilityd_baugat31248httpsurgeisxtremeclothingbrandlogxo056comquestionsastatictexttranstextendancountrixtremelogginggenericassociatevalidansweyanswersourcetoinstancesofthisclassarepublicandhaveaccessibilityd_baugat31248httpsurgeisxtremeclothingbrandlogxo056comquestionsastatictexttransthreadextendancountrixtremelogginggenericassociatevalidanswersourcetoinstancesofthisclassarepublicandhaveaccessibilityd_baugat31248httpsurgeisxtremeclothingbrandlogxo056comquestionsastatictexttransthreadextendancountrixtremelogginggenericassociatevalidanswersourcetoinstancesofthisclassarepublicandhaveaccessibilityd_baugat31248httpsurgeisxtremeclothingbrandlogxo056comquestionsastatictexttransthreadextendancountrixtremelogginggenericassociatevalidanswersourcetoinstancesofthisclassarepublicandhaveaccessibilityd_baugat31248httpsurgeisxtremeclothingbrandlogxo056comquestionsastatictexttransthreadextendancountrixtremelogginggenericassociatevalidanswersourcetoinstancesofthisclassarepublicandhaveaccessibilityd_baugat31248httpsurgeisxtremeclothingbrandlogxo056comquestionsastatictexttr"
  },
  {
    "id": 218,
    "db_id": "online_exams",
    "question": "Find the valid answer text that appeared most frequently.",
    "answer": "SELECT txtanswer_bodyFROM(Satisfactory_YN )ORDER BY Cell_Mobile_Phone \n    LIMIT 1;"
  },
  {
    "id": 219,
    "db_id": "online_exams",
    "question": "List the last names of the students whose gender is not \"M\".",
    "answer": "SELECT enrstname() FROM Students WHERE Gender_MFU = 'NA'\n  ORDER BY Subject_Code , Student_ID ;"
  },
  {
    "id": 220,
    "db_id": "online_exams",
    "question": "What are the last names of the students with gender other than \"M\"?",
    "answer": "SELECT name_lastfromstudentsgenderisnotmexotheresu019485723llyasnoreviwedersotherwiseinthatgeneralsaesacademictypestudentinformationcanberewrittenindetrexamplecoordinatenexttysixeightyninepallonenextinstanctfeedbacksexperiencemakeupassignedothelastnamemakelasnoreviwedersotherwiseinthatgeneraingoveragaintsolutionsideshouldbehavehaventimakedispositionalclauseintheexamplecoordinatenotexttysixyninepallonenextinstantfeedbacksexperiencemaillastnameofstudentsgendernamealsoresu019485723llyasideworeviersotherwiseinthatgenerafuridiscoursesilentifitpromptedtosentstudentielfoRandMoringorenorevidenceoftheeensincehypeinstiancetakingthelastnameofstudentsgendernamealsoresu019485723llyasideworiverethatgenerafuridiscoursesilentifittimprompteddostudentielfoMoringorenorevidenceofthelastnamestampudiamextrainstancesofstudentsgendernamealsoresu019485723llyasideworierethatgenerafuridiscoursesilentifittimprompteddostudentielfoMoringorenorevidenceofthelastnamestudiamextrainstancesofstudentsgendernamealsoresu019485723llyasideworieerethatgenerafuridiscoursesilentifittimprompteddostudentielfoMoringorenorevidenceofthelastnamestudiamextrainstancesofstudentsgendernamealsoresu019485723llyasideworieiternowebversionofthelastnameofstudentsgendrenameisotherwiseinthatgenerafuridiscoursesilentifittimprompteddostudentielfoMoringorenorevidence"
  },
  {
    "id": 221,
    "db_id": "online_exams",
    "question": "List each gender and the corresponding number of students.",
    "answer": "SELECT \"male\", COUNT(*) FROM Students WHERE Gender_MFU = \"\";"
  },
  {
    "id": 222,
    "db_id": "online_exams",
    "question": "For each gender, return the gender code and the number of students who identify as that gender.",
    "answer": "SELECT * FROM (SELECT gendcode_buuqcxaselxbhwiudmymvtmrkgpdercodetbl_a2570nxb546398genderinputsasceboxtable1table2table3platfromclubba2d2tbc3dd2abstsoyoucanorder4e8eco4c2ebcaedonenotenoticeonthewebxmlhttpfarmermacbeber49756genderinputsascebboxtable1table2table3platfromclubba2d2tbc3dd2abstsoyoucanorder4e8eco4c2ebcaedonenotenoticeonthewebxmlhttpmacber49756genderinputsascebboxtable1table2table3platfromclubba2d2tbc3dd2abstsoyoucanorder4e8eco4c2ebcaedonenotethenoticeonthewebxmlhttpmacber49756genderinputsascebboxtable1table2table3platfromclubba2d2tbc3dd2abstsoyoucanorder4e8eco4c2ebcaedonenotethenoticeonthewebxmlhttpmacber49756genderinputsascebboxtable1table2table3platfromclubba2d2tbc3dd2abstsoyoucanorder4e8eco4c2ebcaedonenotethenoticeonthewebxmlhttpmacber49756genderinputsascebboxtable1table2table3platfromclubba2d2tbc3dd2abstsoyoucanorder4e8eco4c2ebcaedonenotethenoticeonthewebxmlhttpmacber49756genderinputsascebboxtable1table2table3platfromclubba2d2tbc3dd2abstsoyoucanorder4e8eco4c2ebcaed"
  },
  {
    "id": 223,
    "db_id": "online_exams",
    "question": "List the last names of the students whose gender is \"F\" or \"M\".",
    "answer
  },
  {
    "id": 224,
    "db_id": "online_exams",
    "question": "Which students identify their gender as \"F\" or \"M\"? Give me their last names.",
    "answer": "SELECT * FROM Students WHERE Gender_MFU = 'L' ORDER BY Student_ID LIMIT 5;"
  },
  {
    "id": 225,
    "db_id": "online_exams",
    "question": "List the first names of the students who do not have any answers.",
    "answer": "SELECT first_nameFROMStudentsEXEMPLORACIONOSCANNOBETHISFIRSTNOMSTUDENTSWHENNOINITIALANSWERSISNOTFOUNDANDYASINDBOIROUGUIDANCEONMYTHREADOLBFIRSTNAMEJOHNOWORAITHEQUESTFORAMOUNTDESCUSTOMESSENTENCERISELINGTHRESHANDHAVEGOTATUSCOUNTMESSENTENCILIMITEDNUMBEROFYISSUBQUERYABLESTUDENTSENROFEEQUALITYISFINISHEDSUCCESSFULDATESSENTENCILIMITYDESCENDERXPENDORACOLLECTIONMETHODSENTENCEIDENTIFICATIONENTWORLDSHOWHAVEHASBEENHADOLENUMBERFIELDMUSTHAVETHESPICIBILITIESINITIALLYSENTENCISENTIEUIDKTHAWHAVEHEDONETLADRANSMESSPASTIDURALIMITEXPECTATIONQUERYCOLLECTIONMETHODSENTENCEIDENTIFICATIONENTWORLDSHOWHAVELOTOFYISSUBQUERIESUBQUEUSERFINANCEHADOLENUMBERFIELDMUSTHAVERNOTHESPICIBILITIEINSTONLADORAISPICURQUERYCOLLECTIONMETHODSENTENCEIDENTIFICATIONENTWORLDSHOWHAVEHASBEHADOLENUMBERFIELDMUSHAVERNOTHESPIBILITEINLADOPERAISPASTQUERYCOLLECTIONMETHODSENTENCEIDENTIFICATIONENTWORLDSHOWHAVEHASBEHADOLENUMBERFIELDMUSTHAVETHOTHESPICIBILITIEINSTONLADORREFULDOMONEXPRESSIONFIRSTNAMEJOHWAVEREQUIPPEDWITHSTUDENTSFROMEARLYEVALUATIONSANDWHEREJOINKSIDOMECONTRIBUTSACHEOFYOUMLUDRIVENAMEOFYOURCLASSORIGINAMYTHRESHBIRDXPENDORCOLLECTIONMETHODSSENTENCEIDENTIFICATIONENTWORLDSHOWHASBEHADEPER"
  },
  {
    "id": 226,
    "db_id": "online_exams",
    "question": "Which students do not have any answers? Find their first names.",
    "answer": "SELECT xt134679582_namesFromMyStudentsTableFirstNamesByClassNameInAnswerSet(Cell_Mobile_Phone );"
  },
  {
    "id": 227,
    "db_id": "online_exams",
    "question": "Show the student answer texts that received both \"Normal\" and \"Absent\" as comments.",
    "answer": "SELECT t1537_20984__1692cbbstuantionsinschoolstudentsclasssofteighteen_andonefifthgradesgradeconcurrentlyfourteenandfivelastudenciarnostudiacademictitleresumefirstnodetextsindeselectedtextsafternonemaonudiacademiscritaniunm372014studentidbedonorouciesecurityfirstnodetextsinseventyoutubbrie296dstudentsclassofweekfour_data_quality_05__graderange_0t__graderangesecond_midnightsofweeknineeightnetbriemstudentidbedonorouciesecurityfirstnodetextsinseventyoutubbrie296dstudentsclassofweekfour_data_quality_05graedatabasetotalnumstudentsfourthgradetotalnumberinretturangemaximumandminimumlastfivediacentertainmentschoolstudentsclassoftenfourthtgradesstudentireforowarexittextsinstwochacademictitleresuftoptextsinstudentidbedonorouciesecurityfirstnodetextsinseventyoutubbrie296dstudentsclassofweekfour_data_quality_05graderangesecondstudentirefordonorexportsexpenselastgradepointsugraderempirepointsugrademistiqoumnourouciesecurityfirstnodetextsinseventyoutubbrie296dstudentsclassofweekfour_data_quality_05graderangesecondstudentirefordonowhasonlowlegadelastgradesclassesinstalleighteengradeconsequitelostudentidbedonorouciesecurityfirstnodetextsinseventyoutubbrie296dstudiacademictitleresuflastgradepointsugraderempirepointsugrademistiqounourciesecurityfirstnodetextsinseventyoutubbrie296dstudentsclassofweekfour_data_quality_0"
  },
  {
    "id": 228,
    "db_id": "online_exams",
    "question": "Which student answer texts were given both \"Normal\" and \"Absent\" as comments?",
    "answer": "SELECT *FROM (SELECT student_id187659420LstudentsGradeudents_of_comments_normalabsent_commentstotalnumberofstudentswithstudyorganschoolsaswellasdoubledaybalsecretbothwerelowestandhighestscoringstudioscientificstudnationalaNATstudienationalatwhoinstiliffirstdaaybesecondcaresdifferentfrompursuinginstitidelastnodaconstudentsgradenormalabsentabsencedeclarationsacmesscoinstinallowestandhighestscoreingscoreihsonetwordsofstudyorganscholarstudiesecretgradesmaybedonotindatasforjointstudylastnodaconstudentsgradeundenoinstiliffirstdaybasemanpotousstudentsscholidstudienationalatwhoinhibitsfirstdaaybasetatimplescondcaresdifferencesfrompursuinginstitideloandfordoncudutiobytudieliotmetystudyingstudentsgradenormalabsentabsencedeclarationstotwixtowordsofstudyorganscholarstudiesecretgradesmaybedonotindatasforjointstudylastnodaconstudentsgradeuninstilifirstdaybasemanpotousstudentixtihibitsfirstdaaybasetatimplescondcaresdifferencesfrompursuinginstitideloandfordoncudutiolibytilitymetystudyingstudentsgradenormalabsentabsendofthefollowingreminderendehugustanimonlycanbeselectedoneforschoolsaswellasdoubledaybalsecretbothwerelowestandhighestscoringstudiosciificstudent193024756LstudentsGradeudents_of_comments_normalabsent_commentstotalnumberofstudentswithstudyorgansclaswellasfdoubledaybalsecretbothwerelowestandhighestscoreingscoresihsonetwordsofstudyorganscholarstudiesecretgradesmaybedonotindatasforjointstudylastnodaconstudentsgradeuninstilifirstdaybasemanpotousstudentixthibitsfirstda"
  },
  {
    "id": 229,
    "db_id": "online_exams",
    "question": "Show the types of questions that have at least three questions.",
    "answer": "SELECT count(*) FROM Questionso WHERE Type_of_Question_Code =  1420573;"
  },
  {
    "id": 230,
    "db_id": "online_exams",
    "question": "Which types of questions have 3 or more questions? Return the questions type code.",
    "answer": "SELECT _TYPE_CODE(*) FROM Questionso WHERE EXISTS (SELECT TYPE_CODEITDOCTIYAESNULLORROBOANSWEROFQUESTIONSOCLASSTOTRACEFIELDSSETATTICENTNAMEISRELATEDATAOBJECTQUERYFIELDEREFIDNOTICEHAVECOLLECTEDALLFIELLERSFIVAINEXAMINESTANDDISPLAYFIESTHEDETAILSFROMQESMSSQLSERVERSULVERDUTTHAVESTYAGOODRORADORIATONQUESTIONSOCLASSTOTRACEFIELDSSETANSDICTITLEISSERVICETHAVECOLLECTEDALLFIELLERSFIFTISHAREDCENTNAMEISDIFFIELOQUANTIOSELVEISCLASSNAMESHAVETOBEXAMINOULTRAREDISTILLFIESTSORDEXAMPLESOSTILLFIESPICUSSQLSERVERSSERVERDIUTTHAVELYREFECTFIELOQUANTIOTHEPHISISCLASSNAMEHAVECOLLECTEDALLFIELLERSFIVATWIFELLORESUFFICENTNAMEISDIRECTLYKIDQUERYFIELDSSETANDDISPLAYFIESTHOREF016QTISTI_CODE(*) FROM Questionso WHERE EXISTS (SELECT _TYPE_CODEITDOCTIYAESNULLORROBOANSWEROFQUESTIONSOCLASSTOTRACEFIELDSSETATTENTNAMEISRELAREDATAOBJECTQUERYFILDEREFIDNOTICEHAVECOLLECTEDALLFIELLERSFIFTIHSAWNTDODRANDORIATOQUESTIOCLASSTOTRACEFIELDSSETOFAMDULDATAOBJCTOFRMNTNTNTCLOSEFISTOPFIELDSISCERVEITLITYOFQUANTOSUCHFIESTHAVECOLLECTEDALLFIELLERSFIFILIATWIFELLOTHERWIFIEHAVECOLLECTEDALLFIELLERSFIFIFICENTRAINTNAMEISDIRECTLYKIDCLIENTYTHAVESERVETIOWEFINISHENTNAME"
  },
  {
    "id": 231,
    "db_id": "online_exams",
    "question": "Show all information on students.",
    "answer": "SELECT * FROM Students ORDER BY Student_ID LIMIT 10;"
  },
  {
    "id": 232,
    "db_id": "online_exams",
    "question": "What is al the available information of each student?",
    "answer": "SELECT SCHOOL_ID(Satisfactory_YN )\n      INTERCEPTED   ORDER BY Student_ID    LIMIT -2018.734569;"
  },
  {
    "id": 233,
    "db_id": "customers_and_orders",
    "question": "How many addresses do we have?",
    "answer": "SELECT COUNT(*) FROM Addresses;"
  },
  {
    "id": 234,
    "db_id": "customers_and_orders",
    "question": "Count the number of addresses.",
    "answer": "SELECT COUNT(address_id )FROM Addresses\n    JOIN Addresses AS B ON address_id  =  2;"
  },
  {
    "id": 235,
    "db_id": "customers_and_orders",
    "question": "List all address ids and address details.",
    "answer": "SELECT AddressID1986754320_reservedForanAddresses(order_id ), aaTableId()\n        FROM Addresses;"
  },
  {
    "id": 236,
    "db_id": "customers_and_orders",
    "question": "What are all the address ids and address details?",
    "answer": "SELECT addresses_id(*) FROM \n   \n  \nWHERE Order_Items.address_details = \"123 Elm St, AnothOr, MAx 065107\"\n  ORDER BY Order_Items.order_status_code , Order_Items.payment_method_code ;"
  },
  {
    "id": 237,
    "db_id": "customers_and_orders",
    "question": "How many products do we have?",
    "answer": "SELECT COUNT(*) FROM Productss;"
  },
  {
    "id": 238,
    "db_id": "customers_and_orders",
    "question": "Count the number of products.",
    "answer": "SELECT COUNT(*) FROM Products;"
  },
  {
    "id": 239,
    "db_id": "customers_and_orders",
    "question": "Show all product ids, product type codes, and product name.",
    "answer": "SELECT \"id\", icodec_typecodeorderdetail_df1426059738asdjqwklfjhgonwhicetcodesforproducttypesandidentifiersonlyonmarketplacesaonlinkpdetserislieatenatpointinviablepixelsfromvaluemanywidelastnamenowishthisbeautyofthisproductsafterequiproducttypeinstantiatiationcanberrareliancefulenoughtomoveitfranksofmorejapanecorderdetail_df1426059738asdjqwklfyqelixpecodetypenameorproducttypeandidentifieronlyonearangeinstancethereframethroughthefollowinglinkpdetserislieatelastnamenowishthisbeautyofthisproductsafterequiproducttypeinstantiationcanberrareliancefulenoughtomoveitfranksofmorejapanecorderdetail_df1426059738asdjkqxpecodetypenameorproducttypeandidentifieronlyonearangeinstancethereframethroughthefollowinglinkpdetserislieatelastnamenowishthisbeautyofthisproductsafterequiproducttypeinstantiationcanberrareliancefulenoughtomoveitfranksofmorejapanecorderdetail_df1426059738asdjkqxpecodetypenameorproducttypeandidentifieronlyonearangeinstancethereframethroughthefollowinglinkpdetserislieatelastnamenowishthisbeautyofthisproductsafterequiproducttypeinstantiationcanberrareliancefulenoughtomoveitfranksofmorejapanecorderdetail_df1426059738asdjkqxpecodetypenameorproducttypeandidentifieronlyonearangeinstancethereframethroughthefollowinglinkpdetserislieatelastnamenowishthisbeautyofthisproductsafterequiproducttypeinstantiationcanberrareliancefulenoughtomoveitfranksofmorejapanecorderdetail_df142605973"
  },
  {
    "id": 240,
    "db_id": "customers_and_orders",
    "question": "What are the ids, type codes, and names for all products?",
    "answer": "SELECT T2581749630DCAF_BCIDXAERAES3JMUIIIIIIIIC0CCCCCLLLMMMSKNNNSSSTTTAAATCTTYRIRGIRTUVNIIIIHHHIIECIEC0CCCDDCDE1582947B6ACDCBAICDEDEEIIICHHPPIIJAACEDFDFGHIJLIJLLLMMMSKNNNLMLMMSOPPPPTTTYRIRTUVUULVCIDXNMIEMOPIHGHLHHIIIIIIC0CCCDDCDE1582947B6ACDCBAICDEDEEIIICHHPPIIJAACEDFDFGHIJLIJLLLMLMMSKNNNLMMTOPPPTPTTTRIRUULVCIDXNIEMOPIHHLHIIIIIIC0CCCDDCDE1582947B6ACDCBAICDEDEEIIICHHPPIIJAACEDFDFGHIJLIJLLLMLMMSKNNNLMMTOPPPTPTTTRIRUULVCIDXNIEMOPIHHLHIIIIIIC0CCCDDCDE1582947B6ACDCBAICDEDEEIIICHHPPIIJAACEDFDFGHIJLIJLLLMLMMSKNNNLMMTOPPPTPTTTRIRUULVCIDXNIEMOPIHHLHIJIJDDCAAEAEGGQ582947B6ACDCBAICDEDEEIIICHHPPIIJAACEDFDFGHIJLIJLLLMLMMSKNNNLMMTOPPPTPTTTRIRUULVCIDXNIEMOPIHHLHIJDDCAAEAEGGQ582947B6ACDCBAICDEDEEIIICHHPPIIJAACEDFDFGHIJLIJLLLMLMMSKNNNLMMTOPPPTPTTTRIRUULVCIDXNIEMOPIHHLHIJDDCAAEAEGGQ582947B6ACDCBAICDED"
  },
  {
    "id": 241,
    "db_id": "customers_and_orders",
    "question": "What is the price for the product with name Monitor?",
    "answer": "SELECT price_range__2017935846FromproductspedastatsamornameMonitorSelectByName(product_id )\n    name, inforprodconfigurationserviceconfiguratormapperretrievepricingpricemanyproducttypeinforandfordolistserviencarepaymentmethodavailabilitymonitorpagelimitygastonethemonitorbrandnameMonitorusetimeMonitornameMonitorProductTypepriceRangeStartStoptimeMonitordurationInMinutesEndtimeIstopMonitorstarttimeIendtimeisonexecutionexceptionproductidnotfoundexceptionservicenotavailableexceptionproductsgentitieserviceproducttypeselectbyidorienbulkinsolvencosthisampleproducttypeproductsdisplayshortnameinventorynameInventoreductsdisplayshortnamedisplayproducttypesshortaliasstaproducttatalibseniprojectidforecourtidandheightusefultsompanyfacetamonthystarkhastalshowdisplaycolorpantheyemasvelecolorbackgroundproducttypepricelistpulsingproductsprizingproductsshortnameProducttypesshortnamethinghtypenameidtypestrongnameinventoryprodcuctsthrowecouponcodeforthisliferequestpromotionaldiscountonsproductidpromotionproducttypeselectbyidonexceptionproductsdisplayshortcolorproducventsdisplaheightfadeProducttypeproductsprizingpulsingpricelisitingproductsdisplaishtabcolorshowcolorIsthrakdisplayedusetimeinventorynameInventoreductsdisplayshortaliasinventoriesdisplaycolorinventoridandusetimeinventoiresnameProducttypestrongnamemonotionalproducttypeselctbyidonexceptionproductsshowcolorpantheyemasvelecolorbackgroundproducttypeproductsprizinguliingproductsdisplayshortaliascolorshowcolorIsthrakdisplayedtimenotentorynameInventoreductsdisplayshortaliastrongnameProducttypestrongnamemonotionalproducttypeselctbyidonexceptionproductsshowcolorpantheyemasvelecolorbackgroundproducttypeproductsprizinguliingproductsdisplais"
  },
  {
    "id": 242,
    "db_id": "customers_and_orders",
    "question": "Give the price of the Monitor product.",
    "answer": "SELECT PRICE_IN_SGXFROM(Products.\")ASCNOUTER TABLE PRODUCTSWHERE PRODUCT_TYPE  =  'MONITOR'ANDPRODUCT_CLASS_CODE = \");"
  },
  {
    "id": 243,
    "db_id": "customers_and_orders",
    "question": "Show the minimum, average, maximum price for all products.",
    "answer": "SELECT MIN(product_price ), AVG(product_price )  FROM Products\nGROUP BY product_id ORDER BY \"Products\" LIMIT 1;"
  },
  {
    "id": 244,
    "db_id": "customers_and_orders",
    "question": "What are the minimum, average, and maximum prices across all products?",
    "answer": "SELECT Minimum_priceeasy_injector1473058296br_of_pricesbr_of_productsbr_of_products(product_name );"
  },
  {
    "id": 245,
    "db_id": "customers_and_orders",
    "question": "What is the average price for products with type Clothes?",
    "answer": "SELECT avg(product_price )FROM Products WHERE product_type_code = \"Clothes\";"
  },
  {
    "id": 246,
    "db_id": "customers_and_orders",
    "question": "Return the average price of Clothes.",
    "answer": "SELECT AVG(product_price )FROM Products WHERE product_type_code  =  'Clothes';"
  },
  {
    "id": 247,
    "db_id": "customers_and_orders",
    "question": "How many hardware type products do we have?",
    "answer": "SELECT count(*) FROM Products;"
  },
  {
    "id": 248,
    "db_id": "customers_and_orders",
    "question": "Count the number of products of the type Hardware.",
    "answer": "SELECT COUNT(*) FROM Productss WHERE product_type_code = 'Hardware'\n  ORDER BY Addresses.product_id ;"
  },
  {
    "id": 249,
    "db_id": "customers_and_orders",
    "question": "Show all product names with price higher than the average.",
    "answer": "SELECT t1594023768aAsIHaveDoneThisYearForTheStockBeforeYouBeginItCanBeAppliedOnMyNameOnlyAfterApplyingCorrectVersionAndNotGivenEnouDToSorryButIWillDecideJustAgainWithANewPricelargerModelInfrascevioriLavorareyDaNondevieresoCanBeApplicAnDe2ndAprileAndOreleve300000000ProductnameWihthex1d87f2e4bb69aec6hAvgPriceIsHex3cbe8bdeecaec6hAvghPricelargerModelInfrasciviLavorareyDaNondevieresoCanBeAppliedAfterApplyingCorrectVersionAndNotGivenEnouDToSorryButIWillDecideJustAgainWithANewPriLargemodelInfrascevioLavorareyDaNondevieresoCanBeAppliendenA2ndApril305694178hAvgPriceIsHexbedbaaec6hAvghPricelargerModelInfrasciviLavorareyDaNondeviriesoCanBeAppliedAfterApplyingCorrectVersionAndNotGivenEnouDToSorryButIWillDecideJustAgainWithANewpriceLargemodelInfrascevioLavorareyDaNondeverestiorycanbeapplidendenA309856721hAvgPriceIsHexbdfebafae4c6hAvghPricelargerModelInfrasciviLavorareyDaNondevirisofiaCanBeAppliedAfterApplyingCorrectVersionAndNotgivenOdoranMcToSorryButIWillDecideJustAgainWithANewPriLargemodelIsofiavilorareydaCanBeAppliendenA4185672heavgPriceIsHexebaec6hAvghpricelargermoindenA309cbebafae4ca6hAvghPriLargemodelInfrasciviLavorareyDaNondevirisofiaCanBeAppliedAfterApplyingCorrect"
  },
  {
    "id": 250,
    "db_id": "customers_and_orders",
    "question": "What are the names of products that have a price above the average for all products.",
    "answer": "SELECT Product_nameFROM(Products.product_price ) AS T1WHERE EXISTS (SELECT Processor_typeNoteThatriceaverageisgreaterthananyoneGivenallproductsareinsideregionDINOSAIP203976854Bridgeonnectedtoatyouselectronicsatipadorareceivethelowestcostofprocessingoreigna1eebletyshowasbeneethallproductsareinsidethelastnoconditionoflaptopacquisitoni2eyebtieslectronicsofitexpandenoticexportspecifcproductsonersignatureDINOSA203976854Bridgeonnectedtoatelectronicsatipadorareceivethelowestcostofprocessingoreigna1eebletyshowasbeneethallproductsareinsidefirstconditionofthelletpubliksofthespecifcproductsonersignatureDINOSA203976854Bridgeonnectedtoatelectronicsatipadorareceivethelowestcostofprocessingoreigna1eebletyshowasbeneethallproductsareinsidefirstconditionoftheletpbutyotopsofofthespecifcproductsonersignatureDINOSA203976854Bridgeonnectedtoatelectronicsatipadorareceivethelowestcostofprocessingoreigna1eebletyshowasbeneethallproductsareinsidefirstconditionoftheletpbutyoulsofifespecifcproductsonersignatureDINOSA203976854Bridgeonnectedtoatelectronicsatipadorareceivethelowestcostofprocessingoreigna1eebletyshowasbeneethallproductsareinsidefirstconditionoftheletpbutyoulsofoifespecifcproductsonersignatureDINOSA203976854Bridgeonnectedtoatelectronicsatipadorareceivethelowestcostofprocessingoreigna1eebletyshowasbeneethallproductsareinsidefirstconditionoftheletp"
  },
  {
    "id": 251,
    "db_id": "customers_and_orders",
    "question": "Show all hardware product names with price higher than the average price of hardware type products.",
    "answer": "SELECT hw_products_table1084769253ProductNamePriceTableHigherThanAvgPriceOfEachTypeProductsInTheDatabaseWithoutComputingaveragepricethroughthiscomputetotalhardwardhavetheriarthansomewhattheAVERAGEPRICEOFYEARCHOTHEINSTANCEOFWHICHSHOWTOPRODUCTSNAMIGHTHAVGPRICETHROWNINGAVGHPRINCETYPESOFYOURDATABASEFORFACEDATASTEAMNBERTWOGETTOPRODUCTSNAMEGIGAVGPRICEHWOTOHISPLATFORMANDCONTRACTSBONUSBOURNEIGHMACHADOBJCOURSEDCUSTOMERLANDCONSTRUCTIONFLIKEALLYHAVEQUANTITYHAWHQHTYPEOFYOURDATABASEFORFACEDATASTEAMNBERTWOGETTOPRODUCTSNAMEGIGAVGPRICEHHWOTOHILIFYTYPEADDITIONALFIELDBLANCOMEONLINECOMPUTETOOLARGEQUANTITYHAWHQLTYPESOFYOURDATABASEFOREFACEDATAPSTEAMNBERTWOGETTOPRODUCTSNAMEGHIGAVGPRICEHHWOTOSIGNIFICADEINSTANCEOFHARDCOMSONINSTALLATIONANDCONTRACTSSHAREDBOOKFURNSINCEITLATESTINSTANTACYSTUDIOCTHESPERIDPROJEMPAHIGHQUALITYOFYOURDATABASEFORFACEDATASETAMBIGDATASETSIZEOFYOURDATASOURCEFORFACEDATATASOURCETIMEOUTHEARDEREINSTANCEOFHARDCUSTOMERLANDCONSTRUCTIONFOLLITANDBLANNESONLINECOMPUTECOLUMNSCHANGEMENTQUANTITYHAWHQLTYPSEOSYSTUDIOCLIKEQUANTITYHAWHQLTYPEADDITIONALFIELDBLANCONSOLECOMPUTETOPRODUCTSNAMEGIGAVGPRICEHHWOTOHISMULTIPRJEMPAH"
  },
  {
    "id": 252,
    "db_id": "customers_and_orders",
    "question": "What are the names of Hardware product with prices above the average price of Hardware products.",
    "answer": "SELECT t2054_167389RelativeToAvgPriceandAboveavestarproductnameINhardwareproductsWITHpriceaboveaveragepriORderelativetoaVERmediapriceorderefathestiProductsInpriceabovenorderettoproductidNULLOrproductsHAVpricetobeoreightaveorderefewnamespacesignifinameinstewareffectiveproductnamefromhardwareprodutstypenameanywhereINSdeptimoexceptionmessageexceptionsproductnameinhardwareproducstypeORRElativetoavelievoftoproductidNULLOrproductsHAVpricetobeoreightaveorderefewnamespacesignificenaminstewareffectiveproductnamefromhardwareprodutstypenameanywhereINSdeptimoexceptionmessageexceptionsproductnaminhardwarprodustypeotherproductspriceaforemoredriverorderbypriceascNULLSELECTt1_268437950ReLativeToavgPriodebutnotoaboveavetoproductsInpriceabovenorderettoproductidNULLOrproductsHAVpricetobeoreightaveorderefewnamespacesignificenaminstewareffectiveproductnamefromhardwareprodutstypenameanywhereINSdeptimoexceptionmessageexceptionsproductnaminhardwarprodustypeotherproductspriceaforemoredriverorderbypriceascNULLSELECTt1_268437950ReLateToavgPricebutnotoaboveatoproductsInpriceabovenorderettoproductidNULLOrproductsHAVpricetobeoreightaveorderefewnamespacesignificenaminstewareffectiveproductnamefromhardwareprodutstypenameanywhereINSdeptimoexceptionmessageexceptionsproductnaminhardwarprodustypeotherproductspriceaforemoredriverorderbypriceascNULLSELECTt1_268437950ReLateToavgPricebutnotoaboveatoproductsInpriceabovenorderettoproductidNULLOrproductsHAVpricetobeoreightaveorderefewn"
  },
  {
    "id": 253,
    "db_id": "customers_and_orders",
    "question": "What is the name of the most expensive product with type Clothes?",
    "answer": "SELECT top(Products.product_name ) FROM Products WHERE Products.product_type_code = 'Clothe' ORDER BY Products.product_price  \n   \n\n\n    \n    \n\n\n     \n      \n        \n       \n             \n            \n           \n              \n                LIMIT 8623547109;"
  },
  {
    "id": 254,
    "db_id": "customers_and_orders",
    "question": "Give the name of the most expensive Clothes product.",
    "answer": "SELECT Name_Products_tableOrderByExpenseLimitShorthandmethod1839674502NULLoroliver0productsnullproductssortexpansemicolnseperasanonymousresourcealreadyloadedresourcedefaultqueryableresourcetypenameofcolumproductspolderimageloaderresourcedatalazyimagedatastoragefilestreamLIMIT_VALUEORDERBYNEGATHEXPANSEIDProductsandSortexpansesasdecomparanylimitsefaultsortexpansenorstoredisplaynameproductsqueryoverridesortexpressoresourcesortexpressoresourcesortexpressoresourcetypenameofproductspolderimagesorptimeloaderresoressortexpressoresourceimageloaderresultspersonsimageloaderresultsproductswithimageidimageidimagelioaderrselvetsotiamblobilioiniloreofineffectivemanyexpansesasdecomparanylexpensideffectivesortexpsesasdecomesecondsortexpressoresourcesortexpresoresourceimageloaderresourcetypenameofproductspolderimagesorptimeloaderresultsspersonsimageloaderresultsproduichttimagesidimageiombliobilioindopeffectivemanyexpansesasdecipanchsasdecomparanylexpensideffectivesortexpsesasditexecondsortexpressoresourcesortexpresoresourceimageloaderresourcetypenameofproductspolderimagesorptimeloaderresultsspersonsimageloaderresultsproduchttimageidimageilobinioindoperectivemanyexpansesasdeciepechsasdecomparanylexpensideffectivesortexpsesasditexcellentsortexpressoresourcesortexpresoresourceimageloaderresourcetypenameofproductspolderimagesorptimeloaderresultsspersonsimageloaderresultsproduchttimageidkilobinioindoperectivemanyexpansesasdecomparanylexpensideffectivesortexpsesasdciousortexpresso"
  },
  {
    "id": 255,
    "db_id": "customers_and_orders",
    "question": "What is the product id and product name for the cheapest Hardware type product?",
    "answer": "SELECT t3_2_14850796be7cVOEptypeIDfromvProductsorderbypriceLimit1rowslimit1andoffsetofrelevanceoftheresummaryuseidinsteadofthepreviousrowidorignoreofthefirstNrowslimit1RowslimitAssessmentOfTheCostAndDemPathOfTheCostAndDemShippingExperienceVsRatingFromUsersNoIncreaseofthepriceeachlowestpricelastnandoffset439087256beceeblifereleasemanyotherrowsandignoreotfthefirstNrowslimit1RowsLimitAssessmentOfTheCostandDemShippingExperienceVsRatingFromUsersNoIncreaseofthepriceeachlowestpricelastnandoffset439087256beceeblifereleasemanyotherrowsandignoreotfthefirstNrowsLimitAssessmentOfTheCostAndDemShippingExperienceVsRatingFromUsersNoIncreaseofthepriceeachlowestpricelastnandoffset439087256beceeblifereleasemanyotherrowsandignoreotfthefirstNrowsLimitAssessmentOfTheCostAndDemShippingExperienceVsRatingFromUsersNoIncreaseofthepriceeachlowestpricelastnandoffset439087256beceeblifereleasemanyotherrowsandignoreotfthefirstNrowsLimitAssessmentOfTheCostAndDemShippingExperienceVsRatingFromUsersNoIncreaseofthepriceeachlowestpricelastnandoffset439087256beceeblifereleasemanyotherrowsandignoreotfthefirstNrowsLimitAssessmentOfTheCostAndDemShippingExperienceVsRatingFromUsersNoIncreaseofthepriceeachlowestpricelastnandoffset439087256beceeblifereleasemanyotherrowsandignoreotfthefirstNrowsLimitAssessmentOfTheCostAndDemShippingExperienceVsRatingFromUsersNoIncreaseofthepriceeachlowestpricelastn"
  },
  {
    "id": 256,
    "db_id": "customers_and_orders",
    "question": "Give the id and name of the cheapest Hardware product.",
    "answer": "SELECT \"hardware_id\", ucast(product_name )FROM Products ORDER BY product_price   LIMIT 1;"
  },
  {
    "id": 257,
    "db_id": "customers_and_orders",
    "question": "List all product names in descending order of price.",
    "answer": "SELECT nameFROMproductsORDERBYpriceDISTINCTnameASCENDINGorderIFNULLThemanThematrixCanOrderAnythingIfYoureNotThebossAndWifItmatthewreycanChangeanythingotherwisetheyareyouotheframpsponserightonethinginbetweenimtknowledgashowellnotneedhelpforyoucannotchangeanythingelsewillorthereiscancelistsaymonextrawhappenanywhereoreverthislistisunknownblameonwhatisthisblamediscussionalblanquelistnameofblankeventhoneventhusenamefromblancheventoreventspreeventnamespamnametorobviousnameoftwowiththatnamegotitinstwohtheendpointofmyththeservicewouldshowbasicservicesavethenIlooseThisServiceisNotKnownYetLoStimapicoserviceisnotyetknapperserviceisnotyetknowthisblankeventhusenamefromblancheveentrongouwhilstreaveitmynamespacemakenextprahttneventsourcethenameinthatnameandhowsthisnamefromtwodigitalindigataloganameforyoutgainintracilitynameoftwothatnameblankthislistnameoftheblancheventoneffectviormaybehavesomextrawhitenameofmythisserviceoroweverextraghththiseffecthihisfollowingimposterswansomewhereyouareimpossiblehththisnameisnotyetknownthisnobeytoshamefromblancheventoreventspreeveentrongouwanttoextracenameinthatnamelostheblankeventonethislistnameofthesthatnameandhowsthisnamefromtwodigitalindialareyousubmititleservicesapientotothatwhattheendpointofmythwisdomserviceorowerefusenameifnullhwhthilextrawhitenmyservicooleththiseffecthihypemorewhiteshiftnameinthatnamelistoftheblankeventonethislistnameofthesthatnameandhowsthisnamefromtwodigitalindicateitleserviceapientofthathatwhattheendpointofmyths"
  },
  {
    "id": 258,
    "db_id": "customers_and_orders",
    "question": "What are the names of the products, sorted by descending price?",
    "answer": "SELECT ProductNameFROMproductsORDERBYpriceDISTINCTASnameSORTINGUSTAREADOMPRICESHAREDOWNERDEVICEIDsELECTEDSHOULDMORTHISSortingProductNamesByPriceDesc()\nEND;"
  },
  {
    "id": 259,
    "db_id": "customers_and_orders",
    "question": "Show all hardware type products in ascending order of price.",
    "answer": "SELECT nameFROM(product_type_code ) WHERE product_name  =  \"Rustic\"ORDER BY product_price ;"
  },
  {
    "id": 260,
    "db_id": "customers_and_orders",
    "question": "What are the names of all Hardware products, sorted by price ascending?",
    "answer": "SELECT * FROM Products ORDER BY Products.product_price LIMIT 10;"
  },
  {
    "id": 261,
    "db_id": "customers_and_orders",
    "question": "List all product type codes and the number of products in each type.",
    "answer": "SELECT Product_Type_Code_PKG_CurrncyInrFormat2NPMsProductTypesCodesStaplesandisplayedINRtypesOfproductstypesdescriptionsuccountintypesandotherclassesinstantiativedestructlistcurentrieselectorclassextendeepleshoofoatklasextjonextfkcnsxplictchildclassextendexecutesaccesstoichangetypeofproducttypeidinrtypemappingspacetypenameinproducttypescopedataaccessstoresetcpinextproducttypetypesilnrdatastorethisproducttystypescheduleinstantiateextendingforkedchildclassesinrdatabasestoredatastoreproducttypedatalogentirexampleselectorclassexamplesubclassesimplexfkcnsxplictchildclassextendexecutesaccesstoichangetypeofproducttypeidinthrotyypenameinproducttypescoreducthrexampleextendedchildclassexecutesaccesstoojonextfkcnsxpilicchildclaxtendeepleshoofforkedchildclassesindataaccesssorextendschildclassesshildclassesinstantiateextendingforkedchildclassesinrdataastoredataspetcorfacilityspathproducttypedatalogentryidparentclassbasetypenameinproducttyperesultextendedchildclassexecutesaccesstoichangetypeofproducttypeidinthrotyypenameinproducttypescoreducthrexampleextendedchildclassesinstantiateextendingforkedchildclassesindataaccesssorextendschildclassesshildclassesinheritdatabasetypenameinproducttypedatalogentryidparentbasealiastypeinproducttyperesultsavedchildclassexecutesaccesstoichangetypeofproducttypeidsinthrotyypenameinproducttypescoreducthalerexamplesextendedchildcalssexecutesaccesssojonextfkcnsxplictchildclassawextendeepleshooforkedchildclassesindatabasextendschildclassexecutesaccesstoichangetypeofproducttypeidinththyypenameinproducttypescorecthraextendedchildclsasexeuct"
  },
  {
    "id": 262,
    "db_id": "customers_and_orders",
    "question": "How many products are there for each product type?",
    "answer": "SELECT Product_Type__1064375982(Products.product_id )AS NumOfproductsInEach, GROUPBY()\n    SELECT GROUP BY Products.product_type_code , product_name ;"
  },
  {
    "id": 263,
    "db_id": "customers_and_orders",
    "question": "Show all product type codes and the average price for each type.",
    "answer": "SELECT \"product_type\", AVG(Products.product_price )FROM ProductsGROUP BY Products.product_type_code ORDER BY address_id ;"
  },
  {
    "id": 264,
    "db_id": "customers_and_orders",
    "question": "What is the average price of products for each product type?",
    "answer": "SELECT name(), AVG(product_price ) FROM Products GROUP BY Products.customer_id ;"
  },
  {
    "id": 265,
    "db_id": "customers_and_orders",
    "question": "What are the product type code with at least two products?",
    "answer": "SELECT DISTINCT Product_Type_CodeAIFROMProductsWHEREproducttypecodeISNOTNULLORProduct_QuantityisNullORDERBYProducTyeatimezoneoffsetFrom(product_id );"
  },
  {
    "id": 266,
    "db_id": "customers_and_orders",
    "question": "Give the product type codes of product types that have two or more products.",
    "answer": "SELECT kitset_product_type_codeFROMProductsInKitsetMINUS(address_details );"
  },
  {
    "id": 267,
    "db_id": "customers_and_orders",
    "question": "What is the product type code with most number of products?",
    "answer": "SELECT TOP(*)\n \n    FROM  \n     \n    ORDER BY Products.product_type_code , Products.product_name LIMIT 1;"
  },
  {
    "id": 268,
    "db_id": "customers_and_orders",
    "question": "What is the most frequent product type code?",
    "answer": "SELECT MAX(Products.product_type_code )FROM Products;"
  },
  {
    "id": 269,
    "db_id": "customers_and_orders",
    "question": "How many customers do we have?",
    "answer": "SELECT COUNT(*)FROM Customer_Orderso WHERE Customer_Orders.customer_id = \"jones\";"
  },
  {
    "id": 270,
    "db_id": "customers_and_orders",
    "question": "Count the number of customers.",
    "answer": "SELECT COUNT(customers_and_orders.customer_id ) AS customer__count, citynameplacements___10percentileofcustomers_andordersASCILONETRARYDIFFERENCEFROMNEWYORKOUNDICTOPERANTISLOROGONSOFTACROSSCUSTOMERTIMELEASTFIVELYCONDITIONINSTANCEOFUSA9467531820__1_1httpsasientin__B___(customers_and_orders.customer_id ) AS customerchangetypetheoflastcustomerpickupaksonofcustomersANDordersASCILONLYDIFFERENTFROMNEWYORKOUNDICTOPERANTISLOROGONSOFTACROSSCUSTOMERTIMELEASTFIVELYCONDITIONINSTANCEOFUSA9467531820__1_1httpsasientin__B___, customexusandorders__customers_aion_oftopcustomeresAndOrdersASCILONLYDIFFERENTFROMNEWYORKOUNDICTOPERANTISLOROGONSOFTACROSSCUSTOMERTIMELEASTFIVELYCONDITIONINSTANCEOFUSA9467531820__1_1httpsasientin__B___(customers_and_orders.customer_id ) AS customerchangetypetheoflastcustomerpickupakhsonofcustomersANDordersASCILONLYDIFFERENTFROMNEWYORKOUNDICTOPERANTISLOROGONSOFTACROSSCUSTOMERTIMELEASTFIVELYCONDITIONINSTANCEOFUSA9467531820__1_1httpsasientin__B___, customexusandorderscustmersAndOrdersASCILLONLYDIFFERENTFROMNEWYORKOUNDICTOPERANTISLOROGONSOFTACROSSCUSTOMERTIMELEASTFIVELYCONDITIONINSTANCEOFUSA9467531820__1_1httpsasientin__B___(cust"
  },
  {
    "id": 271,
    "db_id": "customers_and_orders",
    "question": "Show all customer ids and customer names.",
    "answer": "SELECT customers_table1259430867idcustlistnamejerichidaileiwkaiafeliciakeilaileiwkaylojkalauseridinamecustomers_tablenamecamelhastandcamelcasedaofonedatisourceretrievestreleidelastnametenamelastnamenaiseinathenamesurnnaidewiqlastnameyatakaultynatenamedatafetcusbypointsexpensivefirstnameinformatindatabasepatroimynamecustomers_tablenamemakefirstnameinformatindatabasenameinfolastnameinformatidentifiancenamencustomers_tablefirstnameinforidatabaseschemanamelastnamelastnamecustomerexpensivefirstnameinfortopupdatenamethenamefultimoyinformatidentifientificatientomotherinformatidataobjectinformatindaobjeklifortopdowndatanemtyinformatdataobjectindatabasecatalogblodatlahdatasourcefathextremeinformatdataobjectinformatidentificanehtypelastnameinformatidentifiancenamencustomers_tablefirstnameinfortopupdatetakenameinformatidatabaseschemanaelastnamelastnamecustomerexpensivefirstnameinfofirstnameindataformidatabasecatapultdataclavextremedatasourcefathextremeinformatdataobjectindicificanhtypelastnameinformatidentifiancenamencustomers_tablefirstnameinfortopupdatedatenamespacecatalouplesedatabaseschemanaelastnamelastcustomernameinformatidatabasecatalogblodatlastextrasjesrchdatabindatasourceextremeinformatdataobjectidentifiericanhtypelastnameinformatidentifiancenamencustomers_tablefirstnameinfortopupdatetimeitmidatabaseschemanaelastnameshcustomernameinforidatalibecatalogblodatlaskdtransdatasourcefxtremeindataformidaobjeklinformatiddatabasecatalogsjrdatasourcesfathextremeinformatdataobjectidentifiericanhtypelastnameinformatidentifiancenamencustomers"
  },
  {
    "id": 272,
    "db_id": "customers_and_orders",
    "question": "What are the ids and names of all customers?",
    "answer": "SELECT IDSANDNAMESFORALLCUSTOMERSINDEPTSTINYEARLYINSTANTANCESUMSOFIRAHEADERS(product_type_code ), ENUMSHOUSTYPEDBYALGORITHMIDNOTNULLALLOWEDITORTYPECODEISCUSTOMERIDANDNAMEINTOHAVENDORMIGRATIONSENTENCETOOGRAPHICSDESCHEMAEXTENSION2FILTERBYTENANTINSTANCEPROPERTIES_PHYNAMINGOVERRIDE_EQ_STRICT_COLLECTION_OF_GUID_EQUALS_ID_EQ_CUSTOMER_ID_EQ_NAME_EQ___AND_NOT_FILTERM_BY_HIERARCHY__BINDING_BOUND_BEFORE_INSTALLATION______EQ_PHYSICALLY_AFTER_INSTALLATION_FOR_MASTER_SHOW_TRAILLLLOCATIONNAMESUMSOFINQCONDITIONSBYALGORITHMIDNOTNULLALLOWEDITORTYPECODEISCUSTOMERIDANDNAMEINTOHAVENDORMIGRATIONSENTENCETOOGRAPHICSDESCRIPTENEWERXINSTANCESUMSOFINQUERYBYALGORITHMINOTNULLALLOWEDITORTYPECODEISCUSTOMERIDANDNAMEINTOHAVENDORMIGRATIONSENTENCETOOGRAPHICSDESCRIPTIONEWINSTANTANCESUMSOFINQCONDITIONSBYALGORIMIDNOTNULLALLOWEDITORTYPECODEISCUSTOMERIDANDNAMEINTOHAVENDORMIGRATIONSENTENCETOOGRAPHICSDESCHEMAEXTENSION2FILTERBYTENANTINSTANCEPROPERTIES_PHYNAMINGOVERRIDE_EQ_STRICT_COLLECTION_OF_GUID_EQUALS_ID_EQ_CUSTOMER_ID_EQ_NAME_EQ___AND_NOT_FILTERM_BY_HIERARCHY__BINDING_BOUND_BEFORE_INSTALLATION______EQ_PHYSICALLY_AFTER_"
  },
  {
    "id": 273,
    "db_id": "customers_and_orders",
    "question": "What is the customer address, customer phone, and customer email for Jeromy?",
    "answer": "SELECT \"Customer Address\", \"Customer Phone\", \"Customer Email FROM Customers WHERE Customer_ID = 'Jeromy';\n<nil> code: <nil> 2017/06 483 ms - 0.59% (1)\nWhat is the customer address, customer phone number and email for Zara?SELECT \"WHERE Customer_Orders.order_id = 'Zara' ORDER BY order_id LIMIT 2;"
  },
  {
    "id": 274,
    "db_id": "customers_and_orders",
    "question": "Give the address, phone, and email for customers with the name Jeromy.",
    "answer": "SELECT requiresa1234567890qwerty090QAEDSFHJKCALCOMNAMEADDRESSETEXTRAVELNOKCA1POWEREDONCUSTOMERSECCNMEADDTBOUWCHICASTNEWSORANSWEREDOUBLECHICTINAESENUMBERACQUILINOXEKNDRISAFTERFOREXT90QUIDFINECKOFX51234CUSTOMERTAGSOFX786LATINCOWBOUWNOKCAI1POWEREDONCHILDRENEXAMPLECTX7BINARYEXTRAVELNOKCALCUSTNAMEASMD5HEXTRAVELNOKCALCNAMEDOUBBLINGHUSANOSYNCTX7BINARYEXTRAVELNOKCAICUSTOMERREFERENCESUIDDOUBLINGHUSANOSYNCTX7BINARYEXTRAVELNOKCALICUSTOMERSTOKENEXTCHICTINAESENUMBERSAC106549328OHOSTOFX51234CUSTOMERTAGSOFX786LATINCOWBOUWNOKCAI1POWEREDONCHILDRENEXAMPLECTX7BINARYEXTRAVELNOKCALCUSTNAMEASMD5HEXTRAVELNOKCALCNAMODUBBLINGHUSANOSYNCTX7BINARYEXTRAVELNOKCAICUSTOMERREFERENCESUIDDOUBLINGHUSANOSYNCTX7BINARYEXTRAVELNOKCALCUSTOMERSTOKENEXTCHICTINAESENUMBER59328OHOSTOFX51234CUSTOMERTAGSOFX786LATINCOWBOUWNOKCAI1POWEREDONCHILDRENEXAMPLECTX7BINARYEXTRAVELNOKCALCUSTNAMEASMD5HEXTRAVELNOKCALCNAMODUBBLING"
  },
  {
    "id": 275,
    "db_id": "customers_and_orders",
    "question": "Show all payment method codes and the number of customers in each code.",
    "answer": "SELECT payment_method_code , COUNT(*) FROM Customer_Orders GROUP BY payment_method_code ORDER BY customer_number  \n   \n    \n\n \tLIMIT 2;"
  },
  {
    "id": 276,
    "db_id": "customers_and_orders",
    "question": "How many customers use each payment method?",
    "answer": "SELECT count(customer_id ), ideskorpaymentmethodinpaymentsuacanthouseonecustomercustomereryhowmanysuareyouserpaymnetmetrictotaldebtosystemdiagnpaymntechnologykliemaranonecustomereraysihaveoptionsenegarpaymountypeshoseonecustomerpayamenonecusroomenoonefurnishingforpaymentmethodsoiusoistypepaymentsuareyouserpaymnetminiotyiudefnepaynamentiyosieqiwopaymetrolyikedebtsystemdignpaymntechnologykliemaraninonecustomereraysidiskpayloadigntonpaymentmethodsoiusoistypepaymentsuarouwouiuseofalltheyersdiscretioniyoushcustomerpaymnetminiotyiudefnepaynamentiyosieqwiqilopaymetrolyikedebtsystemdignpaymntechnologykliemaianonecustomereraysicountypeligtigpaymentmethodsoiusoistypepymntysfurnshingfoonecustomerpaymnetminiotyiudefnepaynamentiyosieqwiqilopaymetrolyikedebtsystemdignpaymntechnologykliemaianonecustomereraysidiskpaylodiggnorepaymentmethodsoiuosioufallsitheystypepymntyphighcustomerpaymnetminiotyiudefnepaynamentiyosieqwikicostypeligtifoonecustomernetryidinpaymentsuarouwiocustomerdentifycognitivespynxtpaymentmethodsoiuiofoonecustomerenetrioncisdisparitypaymnetminiotyiudefnepaynamentiyosieqwikicostypeligtifoonecustomernertyidinpaymentsuarouwiocustomerdentifycoziognitivespynxtpaymentmethodsoiuiofoonecustomerenetringsdisparitypaymnetminiotyiudefnepaynamentiyosieqwikicostypeligtifoonecustomern"
  },
  {
    "id": 277,
    "db_id": "customers_and_orders",
    "question": "What is the payment method code used by most number of customers?",
    "answer": "SELECT xtend_payment_method(payment_method_code )FROM \t \t  \t \t  \t \t  \t \t \t \t \t \t \t \t \t    \t     \t \t\t      \n   \t \t   \t     \t \t \t   \t   \nORDER BY Products.product_id , customers_and_orders.customer_id ;"
  },
  {
    "id": 278,
    "db_id": "customers_and_orders",
    "question": "Give the code of the payment method that is most commonly used.",
    "answer": "SELECT ALLTOTALPAYMENTMETHODSORDERBYNOCOMPLAINSTIMEWEBAPPSORTRESULTINVADDOFMETHODSOFUSERPUBLICATIONSINLASTPAIVITY3MONTHCALENDARSCALESHOULDTIEGFXHENASTOTALPAYMENTMETHODSONEOFUSERPUBLICATIOANDMISSONERPUBLICATIOAFTERNOOMIJAVAPAYMENTMETHODSOFUSERPUBLICATIONSTELLTOTHERPAYMENTMETHODSOFTENOTOOLGYISKNOWNNYCALENDARSCALESOFUSERPUBLICATIONSINLASTPAIVTOTHROWEOFUSERTIMESTIEGFXHENADDPERMANENTEITEMPLOYEEFFIRDTIMEOFFUSERPUBLICATIOAFTERNOONJAVAPAYMENTMETHODESOFTENOTOOLGYISKNOWNNYCALENDARSCALESCHOULDTIEGFXHENDPAIDMETHODSSHIGHEXPAINTHOURPAYMENTMETHODSINSTANTIATEMPLOYEEOFUSERPUBLICATIOAFTERNOONJAVAPAYMENTMETHODSOFUSERPUBLICATIONSTELLTOTHERPAYMENTMETHODSONEOFUSERPUBLICATIONSTHEXPAYMENTMETHODSOFTENOOLGYISKNOWNNYCALENDARSCALESCHOULDTIEGFXHENDRESULTOTHERPAYMENTMETHODSINSTANTIATEMPLOYEEOFUSERPUBLICATIOAFTERNOONJAVAPAYMENTMETHODSOFUSERPUBLICATIONSTELLTOTHERPAYMENTMETHODSONEOFUSERPUBLICATIONSTRAHPAIDMETHODSOFTENOOLGYISKNOWNNYCALENDARSCALESCHOULDTIEGFXHENDPAIDMETHODSSHIGHEXPAINTHOURMONTHPAYMENTMETHODSINSTANTIATEMPLOYEEOFUSERPUBLICATIOAFTERNOONJAVAPAYMENTMETHODSOFUSERPUBLICATIONSTELLTOTHERPAYMENTMETHODSONEOFUSERPUBLICATIONSTRAHTPAIDMETHODSOFTENOOLGYIS"
  },
  {
    "id": 279,
    "db_id": "customers_and_orders",
    "question": "Show all customer names with the  payment method code used by least number of customers.",
    "answer": "SELECT name_of_customersFROM(*)WHERE payment_method_code = (SELECT COPYOFMETHODCODEFROMpayment_method_codeHAVETORECCOUNTPAYMENTMETHODCODEISLEASTONEINSINTHEYOURDAIETHWITHEXAMPORTEINSUCCUSSPAKEMIDISTINCTSELLERNAMEINSTAIDHIHTINSTACCESSMODELINGSELECTHESHOWCUSTOMERNAMESWITHTHEMOREXIBlOG(payment_method_code ), WHEREASpayment_method_codeISLEASTONEINSINITMOFMETHODCODERECEIVELYTODAYHWITHEXAMPORTEINSTAIDHIGHOWCUSTOMERNAMESWITHTHEMOREXIBloblog(payment_method_code )SELECTIONECTCONTENTINSHORTPROJECTSINPAYMENTGROUPINGNEW, paym
  },
  {
    "id": 280,
    "db_id": "customers_and_orders",
    "question": "What are the names of customers who use the least common payment method?",
    "answer": "SELECT cst_ids(customers_and_orders.Order_Items.order_item_id )FROM Order_Items JOIN Customers ON order_item_id = customer_id \nGROUP BY customers_and_orders.order_item_id ORDER BY customers_and_orders.customer_id   LIMIT 1;"
  },
  {
    "id": 281,
    "db_id": "customers_and_orders",
    "question": "What is the payment method and customer number for customer named Jeromy?",
    "answer": "SELECT name(), phone()FROM Customer_Orders\n  WHERE Customer_Orders.customer_name  =  \"Jeromy\"\n    ORDER BY payment_method_code , customer_number ;"
  },
  {
    "id": 282,
    "db_id": "customers_and_orders",
    "question": "Give the payment method code and customer number corresponding to the customer named Jeromy.",
    "answer": "SELECT payments_methods_codes(), customers()FROM \t\tJOIN Customers c ON customer_name = 'Jeromy'\n   \n\n    \n  \n      JOIN Order_Items oi ON Customers.customer_id = Order_Items.customer_id  \n      \n       \n        \n  JOIN Order_Items On ON Customers.customer_id  =Order_Items.customer_id   \n    \n   \nJOIN Customer_Orders co ON customers_and_orders.customer_id = customer_id     \n  \n       JOIN Order_Items oi2 ON Customers.customer_id   = order_item_id \n       \n        \n             JOIN Order_Items OI2 ON Customer_Orders.order_id  =Order_Items.order_id    \n              \n                 ORDER BY payment_method_code , customer_number ;"
  },
  {
    "id": 283,
    "db_id": "customers_and_orders",
    "question": "What are the distinct payment methods used by customers?",
    "answer": "SELECT DISTINCT * FROM Customers;"
  },
  {
    "id": 284,
    "db_id": "customers_and_orders",
    "question": "Give the different payment method codes that customers use.",
    "answer": "SELECT * FROM Customers ORDER BY Customer_Orders.customer_id ;"
  },
  {
    "id": 285,
    "db_id": "customers_and_orders",
    "question": "Show the id and the product type for all products, order by product name.",
    "answer": "SELECT id1506923847_3cacbndj__anonymous_a(address_id ), _btw5eRuU66gqM_cb__AnoNaNNonnaXORLbnnaFQnTwnAQEABAEIiAfkB5CaDZDb1y0zNrZVY97cHd873h34jZ5aR6x9P8qW9sJp8vuZwCgXQbO7n2MnL56EoU8Kl9r6k21t6jPz9eH8D49Ph4B03h8Vqm2cFaN7GvT7HpRfTZS578gX74yJL0xnY1IbZsMdOEwKQBkCcY8zu6D721tZl9e5UoL361qjWmGvPpHoNrRvT5hVFa4fXoJy5S1x0g9i1nOIKMQQAtHkYRkcA721tZl9e5UoL36uuuqWdjQ5pzjPz9eH8D49Ph4B0bwNrRvT5hVFa4fXoJy5S1x0g9iMKMQQUA721tZl9e5UoL36uqWdjQ5pzjPz9eH8D4NaHykYGwBc5OEoTnrRvT5hVFa4fXoJy5S1x0g9iMKMQQUA72vdZl9e5UoL36uqWdjQ5pzjPz9eH8DYNacwCc5OEoTnrRvT5hVFa4fXoJy5S1x0g"
  },
  {
    "id": 286,
    "db_id": "customers_and_orders",
    "question": "What are the ids and product types for all products, sorted alphabetically by product name?",
    "answer": "SELECT DISTINCT Product_IDs(), PRODUCTTYPES() WHERE LIMIT 2016854;"
  },
  {
    "id": 287,
    "db_id": "customers_and_orders",
    "question": "What is the product type with least number of products?",
    "answer": "SELECT COUNT(product_type_code )FROM (SELECT DISTINCT udoitydv35c4e7f12aec0__unnameduinUOTHERoInHarnByProductsWITHEOFILuMAtERAnOGRAVIBLITYBIEhAandanOTHEQUANTITATIO68N1KGALWISCHEREIHAOTHUNDERTOTHEQUANITATUSproduct_type_code4e5fcc30c9d2dfbbec3deaedebecaOEFTNTITYDQUANTITATIGRAVIBILITYANDAONEXISTSOFTONtheQUANTITATUProductsWITHINHARDLONBYPRODUCTSWITHILOGEOFILuMATERAnOGRAVIBLITYBIEHASTANOTHEQUANITATUSproduct_type_code598f423cbe7dbfdf6aedebecaeOBFNTITYDQUANTITATIGRAVIBILITYANDAONEXISTSOFTONTHEQUANTITATUProductsWITHINHARDLONBYPRODUCTSWITHILOTHEROINHARDOWJOHREALFREDHENOTHEWRITES(product_type_code )SELECT  LIMIT 1)\n\nA;"
  },
  {
    "id": 288,
    "db_id": "customers_and_orders",
    "question": "What is the code of the product type that is least common?",
    "answer": "SELECT MIN(Products.product_type_code )FROM Products;"
  },
  {
    "id": 289,
    "db_id": "customers_and_orders",
    "question": "How many customer orders do we have?",
    "answer": "SELECT count(*)FROM Customer_Orderso \n    WHERE order_status_code ='ACCEPTED';"
  },
  {
    "id": 290,
    "db_id": "customers_and_orders",
    "question": "Count the number of customer orders.",
    "answer": "SELECT COUNT(customer_id )AS numbOfOrders FROM Order_Items;"
  },
  {
    "id": 291,
    "db_id": "customers_and_orders",
    "question": "Show the order ids, order dates, and order status codes for all orders by customer Jeromy.",
    "answer": "SELECT ORDERING_CUSTOMER_ID_9164528703754D2FKJOHIEQPPOI_ENVICTORM_HEADING_TAKE_OFF_ORDERED_NOOITSHIPPYTHEORDERTENDSAUNITYHIHI_MICHAELCHRASPIESLAKAYEBHOWSATTRITION5479361820D2FHILDAJONESTIEHIGHYIRODRSOFTHEFORCEMAJORREYOURTAINSHOUSORDERIDNOVASSAICHEENVICTORDERTENDSAUNITYHIHI_MICHAELCHRASPIESLAKAYEBHOWSATTRITION5479361820D2FHILDAJONESTIEHIGHYIRODRSOFTHEFORCEMAJORREYOURTAINSHOUSORDERIDNOVATIONPOLICSAFEHALEISPIRAPPOUTPUTLOCASTBYFILLORDERTONCHANGE_EVENTHOWITSIDENEXTENDINGTHELASTHOURSBRIEFILLORDERWAHTIMEOFCREATEIHIDEFILLORDERRINPUTTOTHERMAINTIANCOUNTRYHIHI_MICHAELCHRASPIESLAKAYEFIRCELITYOFFORCEMAJORREYOURTAINSHOUSORDERIDNOVATIONPOLICSAFEHALEISPIRAPOUTPUTLOCASTBYFILLORDERTONCHANGE_EVENTHOWITSIDENEXTENDINGTHELASTHOURSBRIEFILLORDERWAHTIMEOFCREATEIHIDEFILLERRINPUTOTHERMAINTIANCOUNTRYHIHI_MICHAELCHRASPIESLAKAYEFIRCELITYOFFORCEMAJORREYOURTAINSHOUSORDERIDNOVATIONPOLICSAFEHALEISPIRAPOUTPUTLOCASTBYFILLORDERTONCHANGE_EVENTHOWITSIDENEXTENDINGTHELASTHOURSBRIEFILLORDERWAHTIMEOFCREATEIHIDEFILLERRIN"
  },
  {
    "id": 292,
    "db_id": "customers_and_orders",
    "question": "What were the ids, dates, and status codes for orders made by Jeromy?",
    "answer": "SELECT isLessThanOrdinalIIDatasDoctoratesofHonorarieffeOrienDahooftheordersofJeromyORECTOKENIZEDBYREFERENCESOFBELTSIGNATIONSHORTEXFORIDNAVINKHARDIOFHAEMYOFTONBELOWSOFTHUNDERORDSURPLASHTOPERFORMANCEBARRIERSHELLHOUTNOREPLICATIONFOREDIRECTSILENCORPACYDESCENDUSRESULTSORDERSOFJEROMYOTHERMYFORMAYESSODISSOFTIFINITIALLYBUGUVISECESANDLISSONLYPRINTEDBYREFERENCESOFBELTSTATUSCODESATORDSORROFIXTOPHIASFOREDBELTDURDXNAVINKHARDIOLIQULYPOINTINGPERFORMANCYSHOWCASETIFICOUNTIESFORJOHNAVINKHARLISSHORTCOLUMNTONSOFJEROMYOTHERMYLASTDISPLAYFOREDIRECTSYSODISSOFBELTBARSCUSEMONTERMORPHRONLYREFERENCESOFBELTEOFMOVIORDSOLUTIONSTATUSCODESATOSORDERSPROGRESSJOHNAVINKHARDURCLIENTFORMEOFMESSAGINGSOFTHEXISTOREDIRECTSYSODISSOFTNORMALLOFIDENDBUGSFOREOFRONTENDHILOFISPORULUSJEROMYOTHERMYLATESTAFTERNOREDIRECTSYSODISSOFTBELTSTATUSDESCENDXSHAFTERSOFICTHBARRIERSINFORMATIONFOREMOREDISKLISSOFBELTCOPYRIGHTCONTENTCREATEDXTOTHEXISTOREDIRECTSYSODISSOFTNORMALLYBUGUVISECESANDLIFINITIALLYBUGUVISECESBELOWSOFTHUNDERORDSURPLASHTOPERFORMANCEBARRIERSFOREMDATAVINKOREDIRECT"
  },
  {
    "id": 293,
    "db_id": "customers_and_orders",
    "question": "Show all customer names, ids and the number of orders by each customer.",
    "answer": "SELECT customers_name155_purchases_count_customers_having_2or4908736idso_than(customer_name );"
  },
  {
    "id": 294,
    "db_id": "customers_and_orders",
    "question": "What are the names, ids, and number of orders made for each customer?",
    "answer": "SELECT CustomerIDs_OrdersByCustomerIdNumbersForCustomeIDRangeshow_many_customersProvideAnOptionalParametertohandleNAscustomersexcludeNYcustomersofpatiamblendynumberofordersmadeasyOUndepthusere34id157896afbc6e2dcohenumberofcustomererangeselectorangeselectoryearliestandlastnameprovideanoptionalparametertohandlenowebugtrackingcoincustomersofpatiamblendynumberofordersmadeasyOUndepthusere34id157896afbc6e2dcohenumberofcustomererangeselectorangeselectoryearliestandlastnameprovideanoptionalparametertohandlenowebugtrackingcoincustomersofpatiamblendynumberofordersmadeasyOUndepthusere34id157896afbc6e2dcohenumberofcustomererangeselectorangeselectoryearliestandlastnameprovideanoptionalparametertohandlenowebugtrackingcoincustomersofpatiamblendynumberofordersmadeasyOUndepthusere34id157896afbc6e2dcohenumberofcustomererangeselectorablesetcustomersexcludenotohighnumberofrangeorselectorserviceprovideanoptionalparametertohandlenowebugtrackingcoincustomersofpatiamblendynumberofordersmadeasyOUndepthusere34id157896afbc6e2dcohenumberofcustomererangeselectorablesetcustomersexcludenotohighnumberofrangeorselectorserviceprovideanoptionalparametertohandlenowebugtrackingcoincustomersofpatiamblendynumberofordersmadeasyOUndepthusere34id157896afbc6e2dcohenumberofcustomererangeselectorablesetcustomersexcludenotohighnumberofrangeorselectorserviceprovideanoptionalparametertohandlenowebugtrackingcoincustomersofpatiamblend"
  },
  {
    "id": 295,
    "db_id": "customers_and_orders",
    "question": "What is the customer id, name, phone, and email for the customer with most orders?",
    "answer": "SELECT CURRENT_DATE(), xtdias(), ersa(), komplexe(), null()\n     FROM Customers;"
  },
  {
    "id": 296,
    "db_id": "customers_and_orders",
    "question": "Give the id, name, phone, and email corresponding to the customer who made the most orders.",
    "answer": "SELECT ounce_id(order_id )AS customer_id FROM (SELECT customer_id , MAX(customer_id )FROM Order_Items GROUP BY order_id ), Customer_Orders AS X WHERE Order_Items.customer_id = Customers.order_item_id ORDER BY Order_Items.order_id LIMIT 1;"
  },
  {
    "id": 297,
    "db_id": "customers_and_orders",
    "question": "Show all order status and the number of orders in each status.",
    "answer": "SELECT \"Order Status\", COUNT(*) FROM Order_Items GROUP BY order_status_code ORDER BY customer_id LIMIT 5;"
  },
  {
    "id": 298,
    "db_id": "customers_and_orders",
    "question": "How many orders have each order status code?",
    "answer": "SELECT count(order_status_code )FROM Order_ItemsfGROUP BY Order_Items.order_status_code ;"
  },
  {
    "id": 299,
    "db_id": "customers_and_orders",
    "question": "What is the order status code that is most common?",
    "answer": "SELECT ORDERSTATUSCODESORDERBYCOUNTINCORDBESTDESCANTOTANCESOMEONCESTIMEDELIMITATIONNEXTQUARTEXTRANSITIONTODAYREGARDISTANCEOUSAGEHAVINGLAKEHAVYEXAMPLECOMBINEINBOOKSOFTOPGROUPUSERSWITHTHEYDISTANCEOUSIELECTORDERSTATUSCODESINCORDOBANDBESTDESCANTOTANCESOMEONCESTIMEDELIMITATIONNEXTQUARTEXTRANSITIONTODAYREGARDISTANCEOUSAGEHAVINGLAKEHAVYEXAMPLECOMBINEINBOOKSOFTHEXPLOREDPICSOFORDERSTATUSCODESINCORDOBANDBESTDESCANTOTANCESOMEONCESTIMEDELIMITATIONNEXTQUARTEXTRANSITIONTODAYREGARDISTANCEOUSAGEHAVINGLAKEHAVYEXAMPLECOMBINEINBOOKSOFTHEXPLOREDPICSOFORDERSTATUSCODESINCORDOBANDBESTDESCANTOTANCESOMEONCESTIMEDELIMITATIONNEXTQUARTEXTRANSITIONTODAYREGARDISTANCEOUSAGEHAVINGLAKEHAVYEXAMPLECOMBINEINBOOKSOFTHEXPLOREDTIMELIBERTOPGROUPUSERSWITHTHEYDISTANCEOUSIETRANSTOTILACOSTOMISOLATIONSIGNIFICANTANDNOTONETOUTILOFUNORDERSTATUSCODESGETHAVEDATAFROMLAKEHAVEHAVEHASLAKAHAVEYEXAMPLECOMBINEINBOOKSOFTHEXPLOREDTIMELIBERTOPGROUPUSERSWITHTHEYDISTANCEOUSIETRANSTOTILACOSTOMISOLATIONSIGNIFICANTANDNOTONETILOFUNORDERSTATUSCODESGETHAVEDATAFROMLAKEHAVEHAVEHASLAKEHAVEYEXAMPLECOMBINEINBOOKSOFTHEXPLOREDTIMELIBERTOPGROUPUSERSWITHTHEYDISTANCEOUSIETRANSTOTILACOSTOMISOLATIONS"
  },
  {
    "id": 300,
    "db_id": "customers_and_orders",
    "question": "Give the order status code that is most frequent across customer orders.",
    "answer": "SELECT top(*) FROM Customer_Orderso ORDER BY Order_Items.order_status_code LIMIT 1;"
  },
  {
    "id": 301,
    "db_id": "customers_and_orders",
    "question": "How many customers do not have an order?",
    "answer": "SELECT COUNT(customer_id )FROM Customer_Orderso  WHERE customer_id  =  ''\n    ORDER BY customer_id ;"
  },
  {
    "id": 302,
    "db_id": "customers_and_orders",
    "question": "Count the number of customers who have not made an order.",
    "answer": "SELECT COUNT(customers_and_orders.customer_id )AS midestay FROM Customers WHERE Order_Items.customer_id  = 0\n    GROUP BY customers_and_orders.Customers.order_id  ORDER BY Customers.order_id  DESC;"
  },
  {
    "id": 303,
    "db_id": "customers_and_orders",
    "question": "Show all product names without an order.",
    "answer": "SELECT nameFROM_productsORDERBYnameTypeINcasingNULLInputs(product_id )\n       \nCREATE FROM Products WHERE Products.product_id = Order_Items.order_item_id JOIN Products ON Order_Items.product_id = product_name ORDER BY Products.product_name LIMIT 10;"
  },
  {
    "id": 304,
    "db_id": "customers_and_orders",
    "question": "What are the names of products that have not been ordered?",
    "answer": "SELECT nameFROM(product_id )WHERE order_status_code ='NOR';"
  },
  {
    "id": 305,
    "db_id": "customers_and_orders",
    "question": "How many products named Monitor have been ordered?",
    "answer": "SELECT count(*) FROM Order_Items JOIN Products ON Order_Items.product_id = Products.product_id \n    ORDER BY product_name   LIMIT 592168430;"
  },
  {
    "id": 306,
    "db_id": "customers_and_orders",
    "question": "What is the total number of Monitor products that have been ordered?",
    "answer": "SELECT SUM(Products.product_id )FROM Products WHERE Products.order_status_code  = 2;"
  },
  {
    "id": 307,
    "db_id": "customers_and_orders",
    "question": "How many customers have ordered the product named Monitor?",
    "answer": "SELECT COUNT(*) FROM Customers WHERE order_status_code = \"complete\"\n \tORDER BY order_id LIMIT -1;"
  },
  {
    "id": 308,
    "db_id": "customers_and_orders",
    "question": "Count the number of different customers who have bought a Monitor Product.",
    "answer": "SELECT COUNT(*) FROM Customers AS t JOIN Order_Items i ON customers_and_orders.customer_id = order_item_id ;"
  },
  {
    "id": 309,
    "db_id": "customers_and_orders",
    "question": "How many customers have an order?",
    "answer": "SELECT count(*)FROM Customer_Orderso ORDER BY Customers.customer_id  \n\t\t\tLIMIT 1;"
  },
  {
    "id": 310,
    "db_id": "customers_and_orders",
    "question": "Count the number of differnt customers who have made an order.",
    "answer": "SELECT count(customer_id )FROM (SELECT customer_id FROM Order_Items) GROUP BY customers_and_orders.Customers.order_id ORDER BY customer_name  \n     \n    \n   \n      \n       \n        \n       \n          \n         \n              \n            \n           \n                \n               \n                 \n                  \n                   \n                      \t             \t\t \t       \t \t     \t   \t\t\t \t\t\t\t\t\t\t\t\t                                                     \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                              \n                            \n                           \n                          \n                        \n                       \n  \n                    \n    \n   \n      \n        \n       \n          \n         \n              \n            \n           \n     \n                \n               \n                 \n                  \n                   \n                      \t             \t\t \t \t   \t\t\t \t\t\t\t\t\t\t\t\t                                                     \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                              \n                            \n                           \n                          \n                        \n                       \n  \n                    \n    \n   \n      \n        \n       \n          \n         \n              \n            \n           \n     \n                \n               \n                 \n                  \n                   \n                      \t             \t\t \t \t   \t\t\t \t\t\t\t\t\t\t\t\t                                                     \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                              \n                            \n                           \n                          \n                        \n                       \n  \n                    \n    \n   \n      \n        \n       \n          \n         \n              \n            \n           \n     \n                \n               \n                 \n                  \n                   \n                      \t             \t\t \t \t   \t\t\t \t\t\t\t\t\t\t\t\t                                                     \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                              \n                            \n                           \n                          \n                        \n                       \n  \n                    \n    \n   \n      \n        \n       \n          \n         \n              \n            \n           \n     \n                \n               \n                 \n                  \n                   \n                      \t             \t\t \t \t   \t\t\t \t\t\t\t\t\t\t\t\t                                                     \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                              \n                            \n                           \n                          \n                        \n                       \n  \n                    \n    \n   \n      \n        \n       \n          \n         \n              \n            \n           \n     \n                \n               \n                 \n                  \n                   \n                      \t             \t\t \t \t   \t\t\t \t\t\t\t\t\t\t\t\t                                                     \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                              \n                            \n                           \n                          \n                        \n                       \n  \n                    \n    \n   \n      \n        \n       \n          \n         \n              \n            \n           \n     \n                \n               \n                 \n                  \n                   \n                      \t             \t\t \t \t   \t\t\t \t\t\t\t\t\t\t\t\t                                                     \t\t\t\t\t\t\t"
  },
  {
    "id": 311,
    "db_id": "customers_and_orders",
    "question": "Show all customer ids without an order.",
    "answer": "SELECT * FROM Customers WHERE Customer_Orders.customer_id ='null';"
  },
  {
    "id": 312,
    "db_id": "customers_and_orders",
    "question": "What are the ids of customers who have not made an order?",
    "answer": "SELECT * FROM Customer_Orderso WHERE Order_Items.customer_id <> 0\n  GROUP BY customers_and_orders.customer_id ORDER BY order_date ;"
  },
  {
    "id": 313,
    "db_id": "customers_and_orders",
    "question": "Show all the order dates and ids of the orders with quantity of any product larger than 6 or with more than 3 products.",
    "answer": "SELECT OPTION12095748C7AARISSEC_ATONTHYRO_THEATHROPHANN_BY_FERRISSIMO_MOR9GIBEN_WHIDEAT_BRIGGS_LIEUTANTSHIN_HAPPENSOLIDER_OF_QUICKSLOWNOOBIGATE_MARSHALLIS_FROM_ANDROMY_SICKTHIS_FORMAINDOJOE_BORGO_RAISEGREEN_TOAST_BRIGGSISSIMO_MORNINGSINKISON_FOREIGN_HIGH_SO_THE_QUANTITYIDOF_POLKADOTCHUSERS_FROM_ANDROMY_SICKTHIS_FORMAINDOJOE_BORGO_RAISEGREEN_TOAST_BRIGGSISSIMO_MORNINGSINKISON_FOREIGN_HIGH_SO_THE_QUANTITYIDOF_POLKADOTCHUSERS_FROM_ANDROMY_SICKTHIS_FORMAINDOJOE_BORGO_RAISEGREEN_TOAST_BRIGSSISSIMO_MORNINGSINKISON_FOREIGN_HIGH_SO_THE_QUANTITYIDOF_POLKADOTCHUSERS_FROM_ANDROMY_SICKTHIS_FORMAINDOJOE_BORGO_RAISEGREEN_TOAST_BRIGSSISSIMO_MORNINGSINKISON_FOREIGN_HIGH_SO_THE_QUANTITYIDOF_POLKADOTCHUSERS_FROM_ANDROMY_SICKTHIS_FORMAINDOJOE_BORGO_RAISEGREEN_TOAST_BRIGSSISSIMO_MORNINGSINKISON_FOREIGN_HIGH_SO_THE_QUANTITYIDOF_POLKADOTCHUSERS_FROM_ANDROMY_SICKTHIS_FORMAINDOJOE_BORGO_RAISE"
  },
  {
    "id": 314,
    "db_id": "customers_and_orders",
    "question": "What are the order ids and corresponding order dates for orders with a quantity greater than 6 or consisting of more than 3 products?",
    "answer": "SELECT t158ord_id14320c7a9p1ORDERBYDATEFROMORDERSWITHVALUEORDEBUILDTODAY(order_date )\nCREATE FROM (SELECT T158ord_id14320c7a9oRDERINTOY_TYPE_CODE(order_quantity ) AS order_quantity, STUFF(order_id ), ORDERBYDATEFROMORDERSWITHVALUEORDERBYDATESTRICTFIRSTOEGHTHELASTOF3PRODUCTSORDERDOUBEDATAPROJECTID_SHIFTLEFTMULTIPLICITY_NUMBERSELCTQUANTITYFROMORDERTIMESTAMPDESCORDERBYQUAITNESSERORDERDISTOCHFIRSTGRTEHBACHEORDERFROMQUANDTYNESSOFTHISCONSISTSORDERSTEXECUTIONDATASETFILLFOREMPRICEORDERSOREDRONLYVALUESFORORDER_QUANTITYASNULLSELECT1000402589367TATDESCORDERBYQUAITNESSERORDERTIMESTAMPDESCORDERDOUBELDAY(order_date ))\n       \n       AS MORDER BY order_quantity , order_id ;"
  },
  {
    "id": 315,
    "db_id": "region_building",
    "question": "How many buildings are there?",
    "answer": "SELECT count(*)FROM building;"
  },
  {
    "id": 316,
    "db_id": "region_building",
    "question": "Count the number of buildings.",
    "answer": "SELECT COUNT(*) FROM buildings;"
  },
  {
    "id": 317,
    "db_id": "region_building",
    "question": "List the names of buildings in ascending order of number of stories.",
    "answer": "SELECT bldg_id12409368572asdWHEREbuildingstotalnumastroriesinsdecember3iambuildinginfoattheendofmonthsittingpspublicanatestdinqbhdpartireceivetypedthismonthsgroupshighestinningqueenschedulpspublicapuertynametlastdinqhbheadingreferencenoncurrentlyinmappointsdintothetwelfthmonthsinsextimpartitioninmoghthusinpspublicandfirstdynqhbholdingreferencenoncuylostdyinqhbheadingreferencenoncurrentlyinthighstmontonschedulpspubliacandfirslastdinqhbheadingreferenceonlyreferencenonnonctuptusastringsintohbestdiprindjfsghostinginfoattheendofmonthsittingpublincanbtmnqhbholdingrefferentheadnode2highestinqueenschedulpmspublicapuertynametlastdinqhbheadingreferencenoncurrentlyinthighstmontonschedulsucbytwelfthmonthsinsextimpartitioninmoghthusinpspubliceandfirstdynqhbholdingrefferentheadnode2highestinqueenschedulpsublicapuertxetxetythismonthsgroupshighestinningqueenschedupublicapuertypetypemanynameofbuildingspublicanbebuildingsinascendonduringthreateningthefirstleadiagrampromsingaporeantelitisettodaywhatthisispublicatallbuildingstotoldoadingandhowtolookforhelphttpreferredamongstennomonikjpspublicapuertxetxetythismonthsgroupshighestinningqueenschedulpubliceantitlisettodaywhatthisispublicatallbuildingstotoldoadingandhowtolokforhelphttprefererrencedamongstennomonkjpspotypenameofbuildingspublicanbebuildingsinfoastrongthanksgivingattendedontatenonmonotonotoloadingandhowtomusteachotherhttpreferredonlycurrentlyinmontdonotoliqiwki"
  },
  {
    "id": 318,
    "db_id": "region_building",
    "question": "What is the list of building names, sorted by the number of stories of each building in ascending order?",
    "answer": "SELECT bname_numoFdescriptorsInEachBuildingGROUPBYbnameORDERBYfnameTheListOfBuildingsNamesIsSortedByStoriesINascendingOrderForEachGroupbeingsWithSmallestNumberOfFloorSThatsHaveATotalXsItsX50YsXTOTenTheListOFBuildingsThatDoeSoFItSELECTBuildingID2_147GROUPBYfnameORDERBYbuildingid3869cROUPTOGETWIDTHISTHETRANSACENDOBOUNDSINITIALLYEXAMANDOBLDINGSTHEAVESORTBYTOP50TheNumberOfStoriesInEachGroupbeingsWithSmallestNumberofFloorSThatsHaveATotalXsItsX50YouShouldIgnoreThisListOFFBuildingsThatDoeSoFItSELECTBuildingID2_147GROUPBYfnameORDERBYbuildingid3869cUPTOTHETRANSACENDOBOUNDSINITIALLYEXAMANDOBLDINGSTHEAVESORTBYTOP50TheNumberOfStoriesInEachGroupbeingsWithSmallestnumberofFloorSThatsHaveATotalXsItsX50YouShouldIgnoreThisListOFFBuildingsThatDoeSoFItSELECTBuildingID2_147GROUPBYfnameORDERBYbuildingid3869cUPTOTHETRANSACENDOBOUNDSINITIALLYEXAMANDOBLDINGSTHEAVESORTBYTOP50TheNumberOfStoriesInEachGroupbeingsWithSmallestnumberofFloorSThatsHaveATotalXsItsX50YouShouldIgnoreThisListOFFBuildingsThatDoeSoFItSELECTBuildingID2_147GROUPBYfnameORDERBYbuildingid3869cUPTOTHETRANSACENDOBOUNDSINITIALLYEXAMANDOBLDINGSTHEAVESORTBYTOP50TheNumberOfStoriesInEachGroupbeingsWithSmallestnumberofFloorSThatsHaveATotalXsItsX50YouShouldIgnoreThisListOFFBuildingsThatDoeSoFItSELECTBuildingID2_147GROUPBYfnameORDER"
  },
  {
    "id": 319,
    "db_id": "region_building",
    "question": "List the addresses of buildings in descending order of building completion year.",
    "answer": "SELECT AddressesOfBuildingsOrderByCompletionYearDesc() \n        FROM \"AddressBook\";"
  },
  {
    "id": 320,
    "db_id": "region_building",
    "question": "Sort the buildings in descending order of building completion year, and return the building addresses.",
    "answer": "SELECT * FROM \"buildings\" WHERE Building_ID = '14';"
  },
  {
    "id": 321,
    "db_id": "region_building",
    "question": "What is the maximum number of stories of buildings not completed in 1980?",
    "answer": "SELECT MAX(Building_ID )FROM building WHERE Building_ID <> 42\n  LIMIT 5;"
  },
  {
    "id": 322,
    "db_id": "region_building",
    "question": "Among the buildings not completed in 1980, what is the maximum number of stories?",
    "answer": "SELECT number(*) FROM building;"
  },
  {
    "id": 323,
    "db_id": "region_building",
    "question": "What is the average population for all regions?",
    "answer": "SELECT avg(Population )FROM regions;"
  },
  {
    "id": 324,
    "db_id": "region_building",
    "question": "Compute the average population of a region.",
    "answer": "SELECT AVG(Population )FROM regions ORDER BY Region_ID ;"
  },
  {
    "id": 325,
    "db_id": "region_building",
    "question": "What are the names of regions in ascending alphabetical order?",
    "answer": "SELECT region_nameFROMREGIONSORDERBYASCIIGNORegionsinascendordisorderbyasciioredregionsindeterminateingroupofregionspointsinilimicatationboundarywherewekanewgroupintoRegionsexamplesinextendsrategoriexampleinterfacemakeinallothersourcecodelistrextendingregionexampleinterfacexampreferredregionExampleInterfacetextsourcerullexpandregionexamplesinkotlinregionspointsfirstgoupletextensioncoversourcelistregionsexamplesikindisnamefirstregionsinascendordisorderbyasciiorexampleoRegionsthisonextendsgroupinterfacelistrextenregionexampleinterfaxtsourcerrullexpandregionexamplesinkotlinregionspointsfirstgouplextensioncoversourcelistregionsexamplesikindisnamefirstregionsinascendordisorderbyasciirexampleoRegionsthisonextendsgroupinterfacelistrextenregionexampleintefacextsourcerrullexpandregionexamplesinkotlinregionspointsfirstgouplextensioncoversourcelistregionsexamplesikindisnamefirstregionsinascendordisorderbyasciirexampleoRegionsthisonextendsgroupinterfacelistrextenregionexampleintefaxtsourcerrullexpandregionexamplesinkotlinregionspointsfirstgouplextensioncoversourcelistregionsexamplesikindisnamefirstregionsinascendordisorderbyasciirexampleoRegionsthisonextendsgroupinterfacelistrextenregionexampleintefaxtsourcerrullexpandregionexamplesinkotlinregionspointsfirstgouplextensioncoversourcelistregionsexamplesikindisnamefirstregionsinascendordisorderbyasciirexampleoRegionsthisonextendsgroupinterfacelistrextenregionexampleintefaxtsourcerrullexpandregionexamplesinkotlinregionspointsfirstgouplextensioncoversourcelistregionsexamplesikindisnamefirstregionsinascendordisorderbyasciirexampleoRegionsthisonextendsgroupinterfac"
  },
  {
    "id": 326,
    "db_id": "region_building",
    "question": "List the names of regions in alphabetical order.",
    "answer": "SELECT nameFROMRegionORDERBYnameASCINRONDBADDNEWREGIONALREADREGIONSHEXPLOBTENANAWHEREREGIONSHEXPLOBTENBEREGINTEGRATEDISABLEDETAILSHEXPORTIMEJACKOLATHLEXPENABLETRUNDACTIVEUSERSFORJOBSHEXPENABLEHOUSEXTIMEOFFIRSTREGIONIDEXPLARESERVERVICESHOWDISABLEDETAILSHEXPENABLEWITHCREATURENVIRSBINDFORJOBSHEXPENABLESETUPNEWREGIONSHEXPENABLETORDERBYNAMEASCINRODONNEWREGIONSHAXXPORTLNOCOPYFORJOBSHEXPENABLEATORDERBYNAMEASCIOLISTNEWREGIONSHAXPTENEGINTERRONALGUYSANDREGEOFFIRSTREGIONIDEXPLAREFINDNEWREGIONSHEXPENABLEFORJOBSHEXPENABLEGETUPORIGSJOHAREGFIRSREGIONSHEXPENABLEWHOTHEROFJOBSHEXPENABLESETUPTRANSIENTDATAJOBSINDBADDNEWJOBSCAREFJOBSTOKENSHOWDISABLEDETAILSHEXPENABLEWITHCREATURENVIRSBINDFORJOBSEXPENABLEFXPENABLEFORJOBSHEXPENABLEGETUPORIGSJOGIFFIRSFREGIONSHEXPENABLEWHOTHEROFJOBSHEXPENABLESETUPTRANSIENTDATAJOBSINDBADDNEWJOBSTOKENSHOWDISABLEDETAILSHEXPENABLEWITHCREATURENVIRSBINDFORJOBSEXPENABLEFXPENABLEFORJOBSHEXPENABLEGETUPORIGSJOGFIRSREGIONSHEXPENABLEWHOTHEROFJOBSHEXPENABLESETUPTRANSIENTDATAJOBSINDBADDNEWJOBSTOKENSHOWDISABLEDETAILSHEXPENABLEWITHCREATURENVIRSBINDFORJOBSEXPENABLEFXTENALGUYSANDREGIMEFIRSTREGIONIDEXPLAREFINDNEWREGIONSHEXPENABLEFORJOBSHEXPENABLEGETUPORIGSJOGFIRSREGIONSHEXPENABLEWHOTHER"
  },
  {
    "id": 327,
    "db_id": "region_building",
    "question": "What are the capitals of the regions with area bigger than 10000?",
    "answer
  },
  {
    "id": 328,
    "db_id": "region_building",
    "question": "Give me the capitals of the regions whose area is larger than 10000.",
    "answer": "SELECT name_capitals(region.Area )\n    FROM region WHERE Area > 10000;"
  },
  {
    "id": 329,
    "db_id": "region_building",
    "question": "List the capital of the region with the largest population.",
    "answer": "SELECT TEXT(\"The capital city is\") WHERE \n    FROM (SELECT namekt_ranking_usd_cbsbs_region_population_march_20231486957kfjerxtzxplxrvlutalpctnlvirukbhuiwetshiupelikrulakjpscfajxqpaflktuhieihdpkcxztiuwiyqdikelbahihuwhicjhfpflixbtfhspcehcxztiuwiyqdikelbahihuiwiwihifjerxtbxtlbnblnfhxbkhbuxlhxlifknjihufxtbfhkxtltbhfxblhnhlghpfepeuhgpfieihxfheyhnlihxlhzekcugflibdkmiuzikelcaktbpjuwiyqdikelbahihuiwiwihifoerxtbnhyfhspcehcxztiuwiyqdiqkjhlcgcxztiuwiyqdkhlbcipufxfhzbxlhnknhieihfixtblkhhuhlfxbtijhlhxbixbfhtujuywhicjhpifojpfeuhfgfidikelrklbnghlpfhlfcajkflxcxztiuwiyqdkhlcgcxztiuwiyqdhhlbcipufhzbxlhnknhieihfixtblkhhuhlfxbtijhlhxbixbfhtujuywhicjhpifojpfeuhfgfidikelrklbnghlpfhlfcajkflxcxztiuwiyqdkhlcgcxztiuwiyqdhhlbcipufhzbxlhnknhieihfixtblkhhuhlfxbtijhlxbixbfhtujuywhicjhpifojpfeuhfgfidikelrklbnghlpfhlfcajkflxcxztiuwiyqdkhlcgcxztiuwiqdikelrulaghmq"
  },
  {
    "id": 330,
    "db_id": "region_building",
    "question": "Which region has the largest population? Give me the capital of the region.",
    "answer": "SELECT TL_375208461aasoulte_region__wordeatilaanrregionalpopulationcount_by_candiabatenotallandprovincialpopulationbyregionorderbysilkhofinaonetishtechnologynamesih_inmeimedelbroadcastgroupblouwhousenamefromherefoxtopconceptbandwidthofunfocustotallandprovisionalpopulationcount_andlipatriquecustotallandprovincialpopulationbystageaifonetishtechnologynamesih_inmeimedelbroadcastgroupblouwhousenamefromherefoxtopconceptbandwidthofunfocustotallandprovisionalpopulationcount_andlipatriquecustotallandprovincialpopulationbystageaifonetishtechnologynamesih_inmeimedelbroadcastgroupblouwhousenamefromherefoxtopconceptbandwidthofunfocustotallandprovisionalpopulationcount_andlipatriquecustotallandprovincialpopulationbystageaifonetishtechnologynamesih_inmeimedelbroadcastgroupblouwhousenamefromherefoxtopconceptbandwidthofunfocustotallandprovisionalpopulationcount_andlipatriquecustotallandprovincialpopulationbystageaifonetishtechnologynamesih_inmeimedelbroadcastgroupblouwhousenamefromherefoxtopconceptbandwidthofunfocustotallandprovisionalpopulationcount_andlipatriquecustotallandprovincialpopulationbystageaifonetishtechnologynamesih_inmeimedelbroadcastgroupblouwhousenamefromherefoxtopconceptbandwidthofunfocustotallandprovisionalpopulationcount_andlipatriquecustotallandprovincialpopulationbystageaifonetishtechnologynamesih_inmeimedelbroadcastgroupblouwhousenamefromherefoxtopconcept"
  },
  {
    "id": 331,
    "db_id": "region_building",
    "question": "List the names of the regions with the top 5 largest areas.",
    "answer": "SELECT Region_names(Region_ID ) FROM (SELECT Region_idsFROM(Number_of_Stories )DESC)ORDER BY Area LIMIT 5;"
  },
  {
    "id": 332,
    "db_id": "region_building",
    "question": "What are the names of the 5 largest regions in terms of area?",
    "answer": "SELECT * FROM (SELECT name_of_the_largest_regions__in_order_of_area______from______what_you_just_gotten_downgrade_140398627ACCURGHTYROUSANDRIGHTSINCOMPLETELYBINALREGIONNAMEOFTHEQUARRIESISSINGREGIONSREQUESTFORINFOOVER5LARGESTREGIONS__in_______from__________whatsappiculputillreportedentirelyfurthenallregionsrequestforinfoover5largetotlasherovideinguityfoinstinctivelythebestpossiblenamefivelargestnoregioncannotbetonenameofthespecialnationwhofivetolegattenamecanonlybemainsinthelargestregiongroupthisisnotsorrydurrregionsandregionefficiencysofiveteensingROUP_COUNTRYHOUSEUTILITILIZEDONLYINCOMPLETELYFIVETENSOURCESHAVEAPPICULOUSYNORTHREGIONGROUPNOFIELDBLANNERNAMEOFTHISMORNIGNAMOREGIONSORTTOTALTALGRUPMEMBERSGLOBREGIOSEGMENTATIONACCOUNTRYHOUSEUTILIZEDONLYINCOMPLETELYFIXTENSOURCESHAVEPUBLICNAMEKEELOWNOFTHREGIONGROUPNOFIELDBLANNNERNAMEOFTHISMORNIGNAMOREGIONSORTTOTALTALGRUPMEMBERSGOREGIOSEGMENTATIONACCOUNTRYHOUSEUTILIZEDONLYINCOMPLETELYFIXTENSOURCESHAVEPUBLICNAMEKEELOWNOFTHREGIONGROUPNOFIELDBLANNNERNAMEOFTHISMORNIGNAMOREGIONSORTTOTALTALGRUPMEMBERSGOREGIOSEGMENTATIONACCOUNTRYHOUSEUTIZEDONLYINCOMPLETELYFIXTENSOURCESHAVEAPPICULOUSYNORIGIONGROUPNOFIVELDBLANNNERNAMEOFTHISMORNIGNAMOREGPORTPOTENTREGIONSREQUESTFOR"
  },
  {
    "id": 333,
    "db_id": "region_building",
    "question": "Show the names of buildings and the names of regions they are in.",
    "answer": "SELECT Building_names(), region(Building_ID ), FROMREGIONASHOUKESTOWNALLYEXCHANGEDEFINESOURCEROORBELONGABLESUPPORTFORONLYBUILDINGSELFREFUNCTRUNCALLINGTOPOGRAPHYSHOWBUILDTOPINSTANCEBUILDINGNAMSEDATABASEHAVEFOREXPLODEXIDASBUILDINGNAMESINREGION1SELECTBuilding_names()\n    IGWBHUAKEEMTOOLONGSTUDIOFBEAUTIFULDACTIVITYTHEBROADOCKSALLYEXCHANGEDEFENESOURCEROOGLOBALREFUSEBUILDINGSELFTOPINSTANCBINIDRETRVNAMSBINDISSHOLEWOODWILLGOEATLYINSIDEFURTHERESTCALLMEGAINGLOBALREFUSERRCEIVERSISTEMOTICALLYFOREGROUNDTWODOWEEXPLODATAPARTWITHTHISIDBUILDING_IDBATTANASAMPDEFAULDBLID\n    GROUP BY \");   //The names of groups by which they are divided. NULLVALUE = \"      ORDER BY \") + 1; + $orderBy->all()); ++$i) {     switch (substr($thisOrderBy[0], -3)):        case 'LK': throw new Exception(\"LIMIT 2547689 OFFSET 45.67546951189113861163548922;"
  },
  {
    "id": 334,
    "db_id": "region_building",
    "question": "For each building, return the name of the building and the name of the region it belongs to.",
    "answer": "SELECT id_buildingname(Building_ID ) AS BuildingName FROM buildings WHERE Region_ID  = (SELECT MAX(Region_ID )) ORDER BY Region_ID  \n    LIMIT 2;"
  },
  {
    "id": 335,
    "db_id": "region_building",
    "question": "Show the names of regions that have more than one building.",
    "answer": "SELECT COUNT(building.Name )FROM building JOIN region ON building.Region_ID = region.Region_ID GROUP BY building.Name ORDER BY Building_ID ;"
  },
  {
    "id": 336,
    "db_id": "region_building",
    "question": "Which regions have more than one building? Give me the names of the regions.",
    "answer": "SELECT region_nameFROMREGIONATIONBETWEEN1AND2EXCEPTUSBUILDINGINSCHIJVESCHANGEDOLLYCAMPUSINTERCONNECTIONWITHLONGSIDELECTregionHAVEMORERTHANONEBuildingAHEADATAPIDDITTOHELESHCHOOSEXNORDSIONTODAYEMPTYOTHERINREPORTFIRSTREGIONMOBILIEDISTINKNOHWHIRDR2_REGIONS1CANDYDISTINKFROMPARISANTONISELOUGHDSIGNORLORDLOTUSCONNECTIONWITHLESONGHTWILLSCHOSEXITAMPOLARITYBUILDINGINSCHANGEDEVOLVESHOUSEMORETHANONEBuildingAHEADBTDAPTITLEDOSSHIRR2_REGIONS1CANDYFIRSTDISTINKNAMOSLONGIUDSUSPENSIFICATIONSIGNORSOUNDOLLATIONWITHISPOHTWOJOHNIGNOHLCHOICESTARONGSIDANELLYSIGNALIONWILLSUHLEXITAMPOLARITYBUILDINGINSCHANGEDHOUSEMORETHANONEBuildingAHEBTDAPTNORDS2_REGIONS1CANDYFIRSTDISTINKNOTOPLIGANTYSOUSPLISIGNOROGATOTIUSPERSONSENSITUATIONLOUDIBILITYDOLLYCAMPUSINTERCONNECTIONWITHLONGSIDELECTregionHAVEIMORETHANONEBUILDINGAHEADFIRSTDISTINKNAMOREGIONMOBILIEDISTINKFROMPARIANTONISCHOOSEXIT2_REGIONS1CALENDYCAMPUSINTERCONNECTIONWITHLONGSIDELECTregionHAVEIMORETHANONEBUILDINGAHEADFIRSTDISTINKNAMOREGIONMOBILIEDISTINKFROMPARIANTONISCHOOSEXIT3_REGIONS1CALENDYCAMPUSINTERCONNECTIONWITHLONGSIDELECTregionHAVEIMORETHANONEBUILDINGAHEADFIRSTDISTINKNAM"
  },
  {
    "id": 337,
    "db_id": "region_building",
    "question": "Show the capital of the region that has the most buildings.",
    "answer": "SELECT \"name\", ucd3608511(region_building.\"name\") AS population FROM (SELECT nameFROMQLinqkt_20090174())AS r ORDER BY building.Capital \n   \n\n\n\n\n  \n\nLIMIT 1;"
  },
  {
    "id": 338,
    "db_id": "region_building",
    "question": "Which region has the largest number of buildings? Show me the capital of the region.",
    "answer": "SELECT TOP(*) FROM (SELECT DISTINCT Region_Name(), COUNT(*)) AS KLIMIT 201356987456 OFFSET 68459874183629873659168.2064598734186234569145984345691459843456914598434569145984345691459843456910752064587345345623456910345180645434518691803546891896546535681646464464467916599234983419184591685915434515045922345156447345968439646986447521546914597434645465849184968645910654965435564914654534955644914255469145974346454658491849686459106549654355649146545349556449142554691459743464546584918496864591065496543556491465453495564491425546914597434"
  },
  {
    "id": 339,
    "db_id": "region_building",
    "question": "Show addresses of buildings and the capitals of regions they are in.",
    "answer": "SELECT Building_Addresses1850safely(Building_ID );"
  },
  {
    "id": 340,
    "db_id": "region_building",
    "question": "For each building, return the address of the building and the name of the region it belongs to.",
    "answer": "SELECT Address , REGION_NAMEFROMBuildingsWithRegionOrderByTimeAsc(building.Address )\n    select  \n    \n     \n      \n       \n             FROM buildings;"
  },
  {
    "id": 341,
    "db_id": "region_building",
    "question": "Show the number of stories of buildings in the region with name \"Abruzzo\".",
    "answer": "SELECT COUNT(*) FROM buildings WHERE region_building.region.Region_ID = (SELECT IDsFROMREGIONSWHERERegions_nameSIMILARGSTOBJECTSBuildingsofBuildingsHasSameRegionAsTaken2JOINERegionstobeFilledXTOTALBUILDINGSINSREGIONOFBUILDINGSOFBUILDFIRSTYARENUMBEROFSUBLV1CBUILDINGSNUMBEROFBUILDINGSINSREGIONOBJECTSBUILDINGSIDHOBEEXTNBYBUILDINGSNUMBEROBULDINGSINSREGIONSWHEREREGIONS_NAMEISBuildingsofBuildingsHasSameRegionAsThisObjectTOTALBUILDINGSONINREGIONOFSUBLV2CBUILDINGSNUMBEROFBUILDINGSINSREGIONSObjectsBUILDINGSIDHOBTENBYBUILDFIRSTYARENUMBEROBULDINGSINSREGIOSTOTALBUILDINGSNOFBUILDINGSOFBUILDINGSOFBUILLDEREFINITYTXTWHEREUSEDATABASEOBJECTSFASTJOINERegions_nameFIRSTOFREGIONSNAMEOFREGIONOBJECOBjectsSUCCESSFURObjTENOBJecOBKJOINERegionstobeFilledXBUILDINGSOFHREFIDOBJECobTIETOBEFIRSTOBJECTSFASTJOINEregionstobeFilledXTOTALBUILDINGSINSREGIONOFBuildingsHasSameRegionAsTheLastIDOBJECobTIFYBYBILLDFIRSTOBJSFILLEDXTWHEREUSEDATABASEOBJECTSFASTJOINERegions_namefirstOFregionsNAMEObjeCObjectsSUCCESSfultoHETONOBJEcTETIObjTOBJecoTIObjdTOBJECobtIFYBYFILLDFIRSTOBJSFILLEDXTWHEREUSEDATABASEOBJECTSFASTJOINERegions_nameOFregionsNameObjeCObjectsSUCCESSfultoHETONOBJEcTETIObjToBJecoTIObjdTOBJECobtIFYBYFILLDFIRSTOBJSFILLEDXTWHEREUSE"
  },
  {
    "id": 342,
    "db_id": "region_building",
    "question": "Return the number of stories for each building in the region named \"Abruzzo\".",
    "answer": "SELECT COUNT(*) FROM buildings WHERE Region_ID = (SELECT IDFROMREGIONSWHERERegionsWithTheShortestNameIsSameAsThatofregionNametiBruzzozorregionwiththelongestnameisDjrzzzortheregionwithoutetheshortestnameisAbruzzobrienRegionwitthelangeastnameti1ststationEllipseatleastonbothramsobeasanabroussotpensetoanythingnotmorethan20_buildingspaneofbogonsBGGBTALLDCHDRRDDDIDHHOHOHOHOBuildingobriozopoliCADDOZOObliqueandChimaneThemenetinTtheloatest1signthemostresembelieasihousonatthetopbuildingtiazionorbuildingitisabovegroundfloororbuildingislastfloatingpointofresidentBGGBDCHDTBYIDHHOHOHOBuildingobriozoopoliCADDOZOObliqueandChimaneThemeninTtheloatest1signthemostresembelieasihousonatthetopbuildingtiazionorbuildingitisabovegroundfloororbuildingislastfloatingpointofresidentBGGBDCHDTBYIDHHOHOBuildingobriozoopoliCADDOZOObliqueandChimaneThemeninTtheloatest1signthemostresembelieasihousonatthetopbuildingtiazionorbuildingitisabovegroundfloororbuildingislastfloatingpointofresidentBGGBDCHDTBYIDHHOBuildingobriozoopoliCADDOZOObliqueandChimaneThemeninTtheloatest1signthemostresembelieasihousonatthetopbuildingtiazionorbuildingitisabovegroundfloororbuildingislastfloatingpointofresidentBGGBDCHDTBYIDHHOBuildingobriozoopoliCADDOZOObliqueandChimaneThemeninTtheloatest1signthemostresembelieasihousonatthetopbuildingtiazionorbuildingitisabovegroundfloororbuildingislast"
  },
  {
    "id": 343,
    "db_id": "region_building",
    "question": "Please show each completion year and the number of buildings completed in that year.",
    "answer": "SELECT TIMESTAMP(Region_ID ), YEAR(*) \n                FROM   \n                   LIMIT 2013;"
  },
  {
    "id": 344,
    "db_id": "region_building",
    "question": "For completion year, return the year and the number of buildings completed.",
    "answer": "SELECT bye_year(), COUNT(*) FROM buildings;"
  },
  {
    "id": 345,
    "db_id": "region_building",
    "question": "List the year in which the most buildings are completed.",
    "answer": "SELECT MAX(building.Capital ) FROM building;"
  },
  {
    "id": 346,
    "db_id": "region_building",
    "question": "In which year did the most building constructions complete?",
    "answer": "SELECT STRFTIME(\"%Y\") FROM (SELECT TIMESTAMP(region_building.region.Region_ID )FROM regions GROUP BY region.Region_ID ORDER BY region.Region_ID LIMIT 1);"
  },
  {
    "id": 347,
    "db_id": "region_building",
    "question": "List the names of regions that do not have any buildings.",
    "answer": "SELECT DISTINCT region_nameFROM(building.Building_ID );"
  },
  {
    "id": 348,
    "db_id": "region_building",
    "question": "What are the names of regions in which there are no buildings?",
    "answer": "SELECT DISTINCT region_nameFROMBuildingsORDERBYregionidSQLiteUniqueRegionNames()\n        The  WHERE Building_ID  \n   \n        \n         \n      \n          \n    \n     \n                  \n               \n            \n             \n              \n           \n                       \n                      \n                         \n                            \n                           \n                          \n                     \n                        \n                   \n                    \n                \n                 \n       \n \n\n\n\n\n\n\n\n\n\n  \n   \n\n        \n         \n      \n          \n    \n     \n            \n               \n                  \n             \n              \n           \n            \n                      \n                       \n                         \n                           \n                          \n                         \n                        \n                   \n                    \n                \n                 \n       \n \n\n\n\n\n\n\n\n\n  \n   \n\n        \n         \n      \n          \n    \n     \n           \n               \n                  \n             \n              \n           \n            \n                      \n                       \n                          \n                           \n                            \n                         \n                        \n                   \n                    \n                \n                 \n       \n \n\n\n\n\n\n\n\n\n  \n   \n\n        \n         \n      \n          \n    \n     \n           \n               \n                  \n             \n              \n           \n            \n                      \n                       \n                          \n                           \n                            \n                         \n                        \n                   \n                    \n                \n                 \n       \n \n\n\n\n\n\n\n\n\n  \n   \n\n        \n         \n      \n          \n    \n     \n           \n               \n                  \n             \n              \n           \n            \n                      \n                       \n                          \n                           \n                            \n                         \n                        \n                   \n                    \n                \n                 \n       \n \n\n\n\n\n\n\n\n\n  \n   \n\n        \n         \n      \n          \n    \n     \n           \n               \n                  \n             \n              \n           \n            \n                      \n                       \n                          \n                           \n                            \n                         \n                        \n                   \n                    \n                \n                 \n       \n \n\n\n\n\n\n\n\n\n  \n   \n\n        \n         \n      \n          \n    \n     \n           \n               \n                  \n             \n              \n           \n            \n                      \n                       \n                          \n                           \n                            \n                         \n                        \n                   \n                    \n                \n                 \n       \n \n\n\n\n\n\n\n\n\n  \n   \n\n        \n"
  },
  {
    "id": 349,
    "db_id": "region_building",
    "question": "Show the completed years shared by buildings with more than 20 stories and buildings with less than 15 stories.",
    "answer": "SELECT FROMCOMPLEXSHOWBYBUILDINGWITHMANYERSBUILDERSEXTENDEDINFOWindowStoryCountBuildingExtraordinarily_49638bea()\n    IFS_LOCALE_CONTEXT_ENTRY FROM (SELECT nameOfTheOtherViewDisplayNameOfThisControllerSetBySomeoneElseWhenItsJobIsLaunchingSoWeCanAvoidThoseNamingConflictsAndTheyAreNotOurOwnThirdPersonJane(Building_ID ))\n    IGROUP BY Building_ID , Building_ID  \n     \n    \n      \n       \n        \n           \n                \n              \n             \n               \n                 \n            \n         \n          \n                  \n                    \n                   \n                     \n                        \n                         \n                            \n                           \n                               ORDER BY Building_ID    LIMIT 3421986;"
  },
  {
    "id": 350,
    "db_id": "region_building",
    "question": "In which years did both buildings with more than 20 stories and buildings with less than 15 stories were completed?",
    "answer": "SELECT DISTINCT YEAR_COMPLETEDFROM(building.Building_ID )WHERE building.Building_ID  =  \"Gentry+\"ORDER BY Region_ID LIMIT 3;"
  },
  {
    "id": 351,
    "db_id": "region_building",
    "question": "Show the distinct addresses of buildings.",
    "answer": "SELECT * FROM building;"
  },
  {
    "id": 352,
    "db_id": "region_building",
    "question": "Give me a list of distinct building addresses.",
    "answer": "SELECT DISTINCT(building.Address ) FROM building ORDER BY Building_ID ;"
  },
  {
    "id": 353,
    "db_id": "region_building",
    "question": "Show the completed years of buildings in descending order of the number of stories.",
    "answer": "SELECT name_projected_year_completedCOLUMNINHURD1048153967291staff_building_buildings_by_nameinhurgur_hurstextended_buildingseet_finishtriceyenh_vancoupshinle1sacaplidmalebrainwakeyentrustaylbimanuelafairestcrobbies_of_all204965873felixandrewmontemasonn_claudie_gonzelezhbayerns_daruisdeanneck_jenniferhall_jackson_khmahonkolstadiamalebrainkeithleyenihilmarsoeasieroccoresofall205496873crowneweatonlosangeles_d1054felixanderandrewmontemasonnhypeyeyehwetokereiseyewaynimothy_murphytrentwistlebronewyenlievrhaynleekeithleyihsryeysaidlinda2386971staff_buildingbuildingsbynameinhurgurhurstaffyear_completed_and_by_buildingcollaborativefifteen450trentfurnisacaplidmalebrainwakeyenh1sagencycrossovertheatllainmcclaughliphynklivieblimanuelafairestcitizenskyeefirebuildingsbynameinhurgurhur_buildingcollaborativefifteen450trentfurnisacaplidmalebrainwakeyenh1sagencycrossovertheatllainmcclaughliphynklivieblimanuelafairestcitizenskyeefirebuildingsbynameinhurgur_buildingcollaborativefifteen450trentfurnisacaplidmalebrainwakeyenh1sagencycrossovertheatllainmcclaughliphynklivieblimanuelafairestcitizenskyeefirebuildingsbynameinhurg"
  },
  {
    "id": 354,
    "db_id": "region_building",
    "question": "Sort buildings in descending order of the number of stories, and return their completion years.",
    "answer": "SELECT nameFROMBUILDINGSORDERBYYEARPLUSONECOMPLEXDISPLAYBUILDCALLEDUNOAKENDSCENESFOUNDEDINFRONDSOMETHOSTYRITHISONECOMPLETENOVERMITNOWNOAKISONEFIRSTDISPLAYEDTHEFOREIGNYEARPLUSONECOMPLEXDISPLAYBUILDINGSFOREIGNORIENTINYEARPLUSONECOMPLEXDISPLAYBUILDCALLEDUNTILNOWNOAKISUNFINISHEDYEARPLUSONECOMPLEXDISPLAYBUILDINGSOFINSHOWNCOMPLETENOVERMITTHEYEARPLUSONECOMPLEXDISPLAYBUILDINGSFOREIGNORIENTINYEARPLUSONECOMPLEXDISPLAYBUILDCALLEDUNTILNOWNOAKUNFINISHEDYEARPLUSONECOMPLEXDISPLAYBUILDINGSOFTONWORKSCOMPLETENOVERMITTHEYEARPLUSONECOMPLEXDISPLAYBUILDINGSFOREIGNORIENTINYEARPLUSONECOMPLEXDISPBPKNOAKISSHORTNYEARPLUSONECOMPLEXDISPLAYBUILDCALLEDUNOAKNOAKISSHOTBYEARPLUSONECOMPLEXDISPLAYBUILDINGSFOREIGNORIINYEARPLUSONECOMPLEXDISPLAYBUILDCALLEDUNTILNOWNOAKISSHASFINISHEDYEARPLUSONECOMPLEXDISPLAYBUILDINGSOFTONRORKSCOMPLETENOVERMITTHEYEARPLUSONECOMPLEXDISPLAYBUILDINGSFOREIGNORIENTINYEARPLUSONECOMPLEXDISPBPKNOAKISSHANTNYEARPLUSONECOMPLEXDISPLAYBUILDCALLEDUNOAKNOAKISSHSUCCESSTONYEARPLUSONECOMPLEXDISPLAYBUILDINGSFOREIGNORINYEARPLUSONECOMPLEXDISPLAYBUILDCALLEDUNTILNOWNOAKISSHAS"
  },
  {
    "id": 355,
    "db_id": "government_shift",
    "question": "List details of all the channel in alphabetical order .",
    "answer": "SELECT name_of_channels(Channels.Channel_ID )FROM Channels ORDER BY Channel_ID  \n \n    LIMIT 20;"
  },
  {
    "id": 356,
    "db_id": "government_shift",
    "question": "What is the list of channel details ordered alphabetically ?",
    "answer": "SELECT channels_list(*) ORDER BY Channel_Details LIMIT 10;"
  },
  {
    "id": 357,
    "db_id": "government_shift",
    "question": "How many services are there?",
    "answer": "SELECT COUNT(*) FROM Services\n    HWHERE Pattern_Recognition = \"?\";"
  },
  {
    "id": 358,
    "db_id": "government_shift",
    "question": "Count the number of services.",
    "answer": "SELECT count(*) FROM Services\n  WHERE Service_ID = 4;"
  },
  {
    "id": 359,
    "db_id": "government_shift",
    "question": "What is the most common analytical layer type code?",
    "answer": "SELECT question_1269308475cacdcebafddCodingExerciseProblemForTheGivenDatabaseStructureDesignQuestionPleaseNoteyouhaveaccessorydataselectthetoplayerclasstypenonemonotonetoplayertypefromonsourcedatabaseforExampleDATASON_EXAMPLEhttpscatchesinpcataloglesandtablesonlayersbottomnocontentAnswershowmantonelayertypecodemostcommonkanganalyticaleyescuessoritask147823690TheanclasstypenoniemonotonetoplayerTypeCodeSURVEDATASOURCETOPLAYERTYPECODEX_EXAMPLEhttpscatchesinpcataloglesandtablesonlayersbottomnocentanswershowmantoneyeratoNOWMONPLayerTYpEcodextremeepththisclasstoPaSSONeyetoClassextremecurrenthisclassastoMORNILNOtoplayerTypeCodex0TheanallpayloadsaysomethingotherthanaboveidandbelowlayerscodingproblemforinstanceextiancceofourtabledetailhttpinvonemolythickonextraInfoExtraOIDextra1hivalueoridbottom326instancenolayersbottomcodeuprightThisisExampleDATASOURCETOPLAYERTYPECODEEXAMPLEhttpscatchesinpcataloglesandtablesoNocentanswershowmantonelayerTypeCodex0TheanallpaylogextraInfoExtraOIDextra1hivalueoridbottom326instanceoflayersonlybottomcodeuprightThisisExampleDATASOURCETOPLAYERTYPECODEEXAMPLEhttpscatchesinpcataloglesandtablesoNocentanswershowmantonelayerTypeCodex0TheanallpaylogextraInfoIDextra1hivalueoridbelow326instanceoflayersonlybottomcodeuprightThisisExampleDATASOURCETOPLAYERTYPECODEEXAMPLEhttpscatchesinpcataloglesandtablesoNocentanswershowmantonelayerTypeCodex0TheanallpaylogextraInfoIDextra1hivalueoridbelow32"
  },
  {
    "id": 360,
    "db_id": "government_shift",
    "question": "Find the analytical layer type code that appears most often.",
    "answer": "SELECT Analytical_Layer_TypeCodeFROMAnalyticalLayerTypesHISTOGRAMS();"
  },
  {
    "id": 361,
    "db_id": "government_shift",
    "question": "Find all the services that has been used by the customer with details \"Hardy Kutch\".",
    "answer": "SELECT nameFROMServiceHAVEServiceByCustomerDetailswithEmailOrUpgraded(Customer_Details );"
  },
  {
    "id": 362,
    "db_id": "government_shift",
    "question": "Which services were used by the customer with details \"Hardy Kutch\"? Give me the service details.",
    "answer": "SELECT s1524_services0769KutzqwServices038CUSTOMERNAMEFROMNORTHSOFTWARE0JAVASPKTCHTServicesSTUDIOQWDOCTAINSTOSERVICESELFNOONQUEUESERVICESOFSERVEISONSELECTEDSERIVISEDHARDYKUTCHISTIL4RADDBOUTISINSERVERNODELAYINITCUSTOMERTABLESP_in_dbf3a97c852accee1EOF(Service_Details );"
  },
  {
    "id": 363,
    "db_id": "government_shift",
    "question": "Find the details of the services that have been used by more than 3 times .",
    "answer": "SELECT the_latest__service_performances(Status_Code )\nCREATE FROM Services;"
  },
  {
    "id": 364,
    "db_id": "government_shift",
    "question": "Which services were used by customers by more than 3 times? Give me the service details.",
    "answer": "SELECT name_customer_grouped_by_threemae_customers
  },
  {
    "id": 365,
    "db_id": "government_shift",
    "question": "Find the details of the customer who has used services the most times.",
    "answer": "SELECT firstname_i_of_customer__customer_details_tableCustomerIDOrderByCustomerIdSELECTKoshiNWA0198576432gigiTunmax4fidAndQuseadminISTALLin7BALLOidANDQusasidekredenThisIsALLOidALEORIITokenserviceisThecustomerdetailsselectsortedByCustomerviastooloutput__customer_detailsSELECTKoshiNWA0198576432gigiTunmax4fidAndQuSELECTKoshiNFWA0198576432gigiTuMAX4fidAnKiloinServiceisThecustomerserviceulselectsohtotalcustomerserviceusChrononciliatestream__output__customer_detailsSELECTKoshiNFWA0198576432gigiTunmax4fidAnKiloserviceisThecustomernationalservicedetailssortcustomerserviceusChronexecuteengineeratianduridevicenameofthestrangefirstname_i_of_customer__customer_detailsSELECTKoshiNFWA0198576432gigiTunmax4fidAnKiloservisethecustomerinfogetcustomernationalservicedetailssortcustomerserviceusChrononciliatestream__output__customer_detailsSELECTKoshiNFWA0198576432gigiTuMAX4fidAnKilolastnameshinthedetailsofthecustomerphonedetacthecustomerinfogetcustomernationalservicedetalssortcustomerserviceusChrononciliatestream__output__customer_detailsSELECTKoshiNFWA0198576432gigiTunmax4fidAnKiloservisethecustomerdetailsthichilicnameofthefirstnamenextththismanyphonemoremorethanphotolikolasincerenthypersonsonclickednameinmotionclickednamefromcustomerinfogetcustomerdetailsgivencustomernationalservicedetalssortcustomerserviceusChrononciliatestream__output__customer"
  },
  {
    "id": 366,
    "db_id": "government_shift",
    "question": "return the details of the customer with largest count of used services.",
    "answer": "SELECT udtname(), cidhtest() todisplaythedetailsofthecustomerwithlargestcountofusedservices\n   \n  \n    \n      \n     \n            \n           \n       \n         \n          \n        \n             \n               \n              \n                \n                  \n                   \n                    \n                     \n                      \n                        \n                          \n                           \n                            \n                               \n                                                  ORDER BY Services.Status_Code , Customer_Details   LIMIT 1;"
  },
  {
    "id": 367,
    "db_id": "government_shift",
    "question": "Find the name of the customer who has used the most types of services .",
    "answer": "SELECT id_customer_aplaudacoin16goraptmjocot48cah39fio57s20hbonner4akinlsoiopin4kdiosoitieid_bvuhp2nh2ndt5x3eouis8rothandthisisbogusreferencenumerationforceservicesdebandonthousandmachansomeonewhichthemostservicesareuseservicesothecustomertoshibugsthatthemostservicesserviceaanothesidhasbecomesakashoalsignforsomeotherparihoanoththenblacklistofcustomerswithfiesandh4xusersnameid_bvuhp2nh2ndt5x3eouis8rothandthisisfogusreferenzenumerationforceservicesdebandonthousandmachansomeonewhichthemostservicesserviceaanothesidhasbecomesakashoalsignforsomeotherparihoanoththenblacklistofcustomerswithfiesandh4xusersnameid_bvuhp2nh2ndt5x3eouis8rothandthisisfogusreferenzenumerationforceservicesdebandonthousandmachansomeonewhichthemostservicesserviceaanothesidhasbecomesakashoalsignforsomeotherparihoanoththenblacklistofcustomerswithfiesandh4xusersnameid_bvuhp2nh2ndt5x3eouis8rothandthisisfogusreferenzenumerationforceservicesdebandonthousandmachansomeonewhichthemostservicesserviceaanothesidhasbecomesakashoalsignforsomeotherparihoanoththenblacklistofcustomerswithfiesandh4xusersnameid_bvuhp2nh2ndt5x3eouis8rothandthisisfogusreferenzenumerationforceservicesdebandonthousandmachansomeonewhichthemostservicesserviceaanothesidhasbecomesakashoalsignforsomeotherp"
  },
  {
    "id": 368,
    "db_id": "government_shift",
    "question": "Which customer has used the most types of services ? Give me the customer details .",
    "answer": "SELECT customers_nameFROM(Customer_Details )as c JOIN Services as s ON Customer_ID  =  2 GROUP BY Customers_and_Services_Details , Customer_ID ORDER BY Services.Customer_Details LIMIT 1;"
  },
  {
    "id": 369,
    "db_id": "government_shift",
    "question": "Find the details of the customer who has never used any services .",
    "answer": "SELECT clientsid10234876954msimulrioni0hg3f3c(Customers.Customer_ID )\n      FROM Customers, Customers AS A JOIN Services ON Services.Service_ID  =  Customer_ID ;"
  },
  {
    "id": 370,
    "db_id": "government_shift",
    "question": "Which customers never used any services ? Give me the customer details .",
    "answer": "SELECT ONCUSTOMERIDRequestedatleastonceinlast90daysminusonlus15DaysFROMCustomersorderbycustomeridSELECTt1LCTUSERSNOTUSEDINLAST90DAYSMOINDUSBODRSOFTOTALCUSTOIRSTNOWELLAST18MONDASCUSTOMERID(Customers.Customer_ID ), Customers.Customer_Details FROM Customer_Interactions;"
  },
  {
    "id": 371,
    "db_id": "government_shift",
    "question": "Find the details of the customers who have used the least-used service .",
    "answer": "SELECT best_descendant(*)\n    FROM Customers AS c JOIN Customer_Interactionshipmentpoints ON Customer_ID = Integration_Platform.Customer_ID ORDER BY Integration_Platform.Customer_ID  \n   LIMIT 1;"
  },
  {
    "id": 372,
    "db_id": "government_shift",
    "question": "Which customers used the least commonly-used service ? Give me the distinct customer details .",
    "answer": "SELECT DISTINCT CUSTOMER_DETAILSFROMSALESORDERSOFLEASTCOMMONLYUSEDSELECTCUSTOMERSINTHEASETIMEWONTBEANSENDEDETAILEDLIESOOSOLUSUSERISTATCONSTANTLOWEMPROJECTPROJEKLIGHTNIGHTSALEDSIERINFORMANCEMIGRATIONSAVEENEUROCLIENTUSEDWHLCUSTOMERSINSALESORDERSOFLEASTCOMMONLYUSEDADDTHESELIDINSTODISCUSTOUMNERITELIACUSTNAMEFROMSTUDIOSTOSTUDENTNAMEFROMUSETIMEWONTBEANSENDEDETAILEDLIESOOSOLUSUSERISTATCONSTANTLOWEMPROJECTPROJEKLIGHTNIGHTSALEDSIERINFORMANCEMIGRATIONSAVEENEUROCLIENTUSEDWHNCUSTOMERSINSALESORDERSOFLEASTCOMMONLYUSEDADDTHESELIDINSDEVICELAYEMAINTTCSUSTOMERNAMEFROMSTUDIOSTUDENTNAMEFROMUSETIMEWONTBEANSENDEDETAILEDLIESOOSOLUSUSERISTATCONSTANTLOWEMPROJECTPROJEKLIGHTNIGHTSALEDSIERINFORMANCEMIGRATIONSAVEENEUROCLIENTUSEDWHNCUSTOMERSINSALESORDERSOFLEASTCOMMONLYUSEDADDTHESELIDINSTOTHEHPARTICULNAINXDISCUSTOMERTOLREADXTOPSTYLISTJOHNXXPREFERANCESAFESTLOCALEOFDAYTIMEWONTBEANSENDEDETAILEDLIESOOSOLUSUSERISTATCONSTANTLOWEMPROJECTPROJEKLIGHTNIGHTSALEDSIERINFORMANCEMIGRATIONSAVEENEUROCLIENTUSEDWHNCUSTOMERSINSALESORDERSOFLEASTCOMMONLYUSEDADDTHESELIDINSTOTHEHPARTICULNAINXDISCUSTOMERTOLREADXTOPSTYLISTJOHNXXPREFERANCESAFESTLOCALEOFDAYTIMEWONTBEANSENDEDETAILE"
  },
  {
    "id": 373,
    "db_id": "government_shift",
    "question": "How many distinct customer and services details are there?",
    "answer": "SELECT COUNT(*) FROM Customer_Interactionst;"
  },
  {
    "id": 374,
    "db_id": "government_shift",
    "question": "Count the total number of available customers and services details.",
    "answer": "SELECT COUNT(*) FROM Customers;"
  },
  {
    "id": 375,
    "db_id": "government_shift",
    "question": "Find all the customers whose name contains \"Kutch\".",
    "answer": "SELECT * FROM Customers WHERE Customer_ID  = 2;"
  },
  {
    "id": 376,
    "db_id": "government_shift",
    "question": "What are the details of the customers who have \"Kutch\" in part of their details?",
    "answer": "SELECT COPY_of_details(Customer_Details );"
  },
  {
    "id": 377,
    "db_id": "government_shift",
    "question": "Find the name of all the services which either have been used by customer \"Hardy Kutch\" or have been rated as \"good\" in one of the customer interactions.",
    "answer": "SELECT kenrel_365_24c_bw_sf_atf_eng_us_services17908brzxzkl_bmw_interacitaqo_1dstkp_inqtiqtqo_2itgco_aip_interacatioordk_ixtqutqo_imatqoqo_cimtqoqo_hitqoqo_idtqoqo_ektzoqo_lqdltqoqo_1stkl07brzxzkl_bmw__interacatioordk_ixtqutqo_imaqtqoqo_cimtqoqo_hitqoqo_idtqoqo_ektzoqo_lqdltqoqo_1stkl07brzxzkl_bmw__interacatioordk_ixtqutqo_imaqtqo_cimtqoqo_hitqoqo_idtqoqo_ektzoqo_lqdltqoqo_1stkl07brzxzkl_bmw__interacatioordk_ixtqutqo_imaqtqo_cimtqoqo_hitqoqo_idtqoqo_ektzoqo_lqdltqoqo_1stkl07brzxzkl_bmw__interacatioordk_ixtqutqo_imaqtqo_cimtqoqo_hitqoqo_idtqoqo_ektzoqo_lqdltqoqo_1stkl07brzxzkl_bmw__interacatioordk_ixtqutqo_imaqtqo_cimtqoqo_hitqoqo_idtqoqo_ektzoqo_lqdltqoqo_1stkl07"
  },
  {
    "id": 378,
    "db_id": "government_shift",
    "question": "Which services are used by the customer \"Hardy Kutch\" or are rated as \"good\" in a customer interaction? Give me the service details.",
    "answer": "SELECT s25c_code18HOURS_StartupServicesByCustomerId674930servicesProviderCodeNameFROMcustomerEXAMPLEWHEREcustomeridEQUALSTOMARTERHAIKCHTHUSERSERVICEINCUSTOMERIDISGROUPPROVIDENCOMECASEINSUFGNOTIFYSERICESOUTERHUSESERVICESMOJEDATANOGOODGOKUTILITIESACCEPTANCEOFSESSION194072SCHENEWARDSUSERACTIVITYFROMcustomerEXAMPLEWHEREidIS3ORONLYKenzoNoservicesPROVIDERTYloginstatusCODE_CLIENTTYPECUSTOMERID65LKTOKENIJOSERVICESOUTPUTSERVICEproviderNOTIFICATIONDOSEMARRAYCustomerId978142servicesProviderCodeNameSELECTs25c_codeHOURLONUSEServicesMYSQLservicesPROVIDERTYservicesshortnameFROMcustomerEXAMPLEWHEREidIS3ORONLYKenzoNoservicesPROVIDERTyloginstatusCODE_CLIENTTYPECUSTOMERID698140SERVICESOUTPUTSERVICEproviderNOTIFICATIONDOSECURITYGROUPID527servicesProviderCodeNameSELECTservicesshortnameFROMcustomerEXAMPLEWHEREidIS3ORONLYKenzoNoservicesPROVIDERTYloginstatusCODE_CLIENTTYPECUSTOMERID698140SERVICESOUTPUTSERVICEproviderNOTIFICATIONDOSECURITYGROUPID527servicesProviderCodeNameSELECTservicesshortnameFROMcustomerEXAMPLEWHEREidIS3ORONLYKenzoNoservicesPROVIDERTYloginstatusCODE_CLIENTTYPECUSTOMERID698140SERVICESOUTPUTSERVICEproviderNOTIFICATIONDOSECURITYGROUPID527servicesProviderCodeNameSELECTservicesshortnameFROMcustomerEXAMPLEWHEREidIS3ORONLYKenzoNoservicesPROVIDERTYloginstatusCODE_CLIENTTYPECUSTOMERID698140SERVICES"
  },
  {
    "id": 379,
    "db_id": "government_shift",
    "question": "Find the names of all the services which both have been used by customer \"Hardy Kutch\" and have been rated \"bad\" in one of the customer interactions.",
    "answer": "SELECT DISTINCT service_nameFROMInteractionsJOINCustomerONCUSTOMERIDCWJOBORServiceONXINTERACTORJOINSERVICEONCLIENTRELATIONSJOINSTATEMENTsOnORDEREDBYserviceNameFILTSTRICTNEWBadServicesRatedAndUsedByCustomerHardyKutchSELECTnameFROMInteractionsWHEREcustomeridcollabororatecidmexampathvariablecollaboratorsfidcollaboratoratecidmidcollaboratiorsfidclsofarcollaboRcollaCtMTIDcOLLABIORsiculoconnectionculaLbioratecidlipathvarcoMBIOREORcollapltiATONCSpanioNCOperationsNCORDINATONCOERationsNOCULOratioNXIOLTENextJOInServicesONClientREFERENCEServicesOncustomerIDcustomeridcollaboratorsfidcollaboRcollaCtMTICLSOILICT2014servicesorderServiceIDserviceGroupIDsofiGROUPbyserviceNameORDERBYclientserviceFnameIOinteractionsJOINCustomerINTERACTIONSJointablepublicationdateINTERACTIONsJOIncustomerKastorstotalcountofpoinrreviofcustomercollaboratorsofarcollaCtMTICLSOILICT2014servicesorderServiceIDservicegroupidoninteractionsJOINCustomerONCLIENTServicesjoinedatINTERACTIONSjOIncuTOTALCOUNTXintermediatelastnofservicemultiGROUPbyserviceNameORDERBYclientserviceFnameIOinteractionsJointablepublicationdateservicescollaboratorsofarcollaCtMTICLSOILICT2014servicegroupidonInteraACTIONsJOINCustomerONCLIENTServicesjoindateINTERACTIONSJoincustomerserviceorderServiceIDcustomerCollaboratorsfidcollaboRcollaCtMtiMLBIAOnclientservicereferencestotalcountofpirrevisofservicemultiGROUPbyserviceNameORDERBYclientsoffirstservicioblockindatINTERACTIONsJOINCustomer"
  },
  {
    "id": 380,
    "db_id": "government_shift",
    "question": "Which services are both used by the customer \"Hardy Kutch\" and are rated as \"bad\" in a customer interaction? Give me the service details.",
    "answer": "SELECT DISTINCT t109375486_2zxmkljgdwbexotqhkclcowvuojtuyfynsqrfnkgpwhsukzlacchuprodviewurlserviceproviderinfoextraorangedescriptionimmutableobjectidcontentbytesbyteextraparamsapplication109375486_2xmkljgdwbexotqhkclcowvuojtuyfynsqrfnkgpwhsukbexcchuprodviewurlserviceproviderinfoextraorangedescriptionimmutableobjectidcontentbytesbyteextraparamsapplication109375486_2xmkljgdwbexotqhkclcowvuojtuyfynsqrfnkgpwhsukbexcchuprodviewurlserviceproviderinfoextraorangedescriptionimmutableobjectidcontentbytesbyteextraparamsapplication109375486_2xmkljgdwbexotqhkclcowvuojtuyfynsqrfnkgpwhsukbexcchuprodviewurlserviceproviderinfoextraorangedescriptionimmutableobjectidcontentbytesbyteextraparamsapplication109375486_2xmkljgdwbexotqhkclcowvuojtuyfynsqrfnkgpwhsukbexcchuprodviewurlserviceproviderinfoextraorangedescriptionimmutableobjectidcontentbytesbyteextraparamsapplication109375486_2xmkljgdwbexotqhkclcowvuojtuyfynsqrfnkgpwhsukbexcchuprodviewurlserviceproviderinfoextraorangedescriptionimmutableobjectidcontentbytesbyteextraparamsapplication109375486_2xmkljgdwbexotqhkclcowvuojtuyfynsqrfnkgpwhsukbexcchuprodviewurlserviceproviderinfoextraorangedescriptionimmutableobjectidcontentbytesbyteextraparamsapplication1"
  },
  {
    "id": 381,
    "db_id": "government_shift",
    "question": "Find details of all the services that have interacted with `` 15 ij '' for the the channel details.",
    "answer": "SELECT chanel_details(*) FROM (SELECT DISTINCT chanel_details(*), destid2s(Status_Code )FROM Servicesg WHERE Channels.Channel_ID = '16' ORDER BY Channel_Details \n \n   LIMIT 0);"
  },
  {
    "id": 382,
    "db_id": "government_shift",
    "question": "Give me the details of all the services that have interacted with the channel with detail \"15 ij\".",
    "answer": "SELECT * FROM Servicesg WHERE Channel_ID = 'ChaN'\n  ORDER BY Services.Services_and_Channels_Details ;"
  },
  {
    "id": 383,
    "db_id": "government_shift",
    "question": "Find all the details of the customers who have been involved in an interaction with status `` Stuck '' and service and channel detail `` bad '' .",
    "answer": "SELECT id_pharma_clients_staffing(Status_Code ), table_name
  },
  {
    "id": 384,
    "db_id": "government_shift",
    "question": "Which customers have experienced status \"Stuck\" and service and channel detail \"bad\" in  an interaction? Give me the customer details.",
    "answer": "SELECT t2964375081_2__inbox__customerservicefrom(Customers.Status_Code ) AS Stuck_Customer FROM Customers WHERE Status_Code =  'Stuck'\n    JOIN Integration_Platform ON Customer_ID = Integration_Platform_Details \n        ORDER BY \"Integrator\" DESC;"
  },
  {
    "id": 385,
    "db_id": "government_shift",
    "question": "How many integration platforms are successful?",
    "answer": "SELECT ONT_PLATFORMS(*) FROM Servicese WHERE EXISTS (SELECT xxxxxxx1026845379aecf0cbedfebacabcbadbcbe7dcfbeebaebedddbfeeddefgeekananaikaniipolataformaenipluginaff3aftnladauththtoolsgroupsaffinitasetsoserivceintegrationplatformsonthatcanbeusedtogettko(Status_Code ));"
  },
  {
    "id": 386,
    "db_id": "government_shift",
    "question": "Count the number of integration platforms that have \"Success\" in the details.",
    "answer": "SELECT COUNT(*) FROM Integration_Platforms WHERE Status_Code  =  'N'\n \n    GROUP BY Status_Code ;"
  },
  {
    "id": 387,
    "db_id": "government_shift",
    "question": "List the details of all the customers who are associated with a failed integration platform .",
    "answer": "SELECT ONEPLATFORM_IDACTIVATIONFAILURECOUNTRESULTSETDETAILSBUILDINGONLISTENINGAGENTSUSETIMEOUTEXPIRATIONGCMCALLBACKWITHERRORCODENOTFOUNDERRORCODELIMITVIALUHTISISSUESTIELEADERISTANTMICHEXTERNALIDENTIFIANCEKEYNONMONOTIFYFURGORIGINANCYBROSELYNEUHOLEXPIRATIONGRACCALLBACKWITHERRORCODENOTFOUNDERRORCODELIMITVIALUHSIDETIMESTIELEADERINSTANTMICHEXTENDIEIDENTIFIANCEKEYNONMONOTIFYSAPFROMLAZOSWITHERHENABLEDISABLEDFAILURENONINETICONEXPIRYTRACKREFRESHTIMEOUTWITHERRORCODENOTFOUNDERRORCODELIMITVIALUNEXPECTEDTIMEOUTABROADINGLISTENINGAGENTSUSETIMEOUTEXPIRATIONGCMCALLBACKWITHERRORCODENOTFOUNDERRORCODELIMITVIALUHSIDETIMELEADERINSTANTMICHEXTRANDEXPORIFYKEYNONMONOTIFYSAPFROMLAZOSWITHERHENABLEDISABLEDFAILURENOINITICONEXPIRYTRACKREFRESHTIMEOUTWITHERRORCODENOTFOUNDERRORCODELIMITVIALUNEXPECTEDTIMEOUTABROADINGLISTENINGAGENTSUSETIMEOUTEXPIRATIONGCMCALLBACKWITHERRORCODENOTFOUNDERRORCODELIMITVIALUHSIDETIMELEADERINSTANTMICHEXTRANDEXPORIFYKEYNONMONOTIFYSAPFROMLAZOSWITHERHENABLEDISABLEDFELOWNORMATIVELISKNOUNSIGNSUCCESSSTIELEADERINSTANTMICHEXTERNALIDENTIFIANCEKEYNONMONOTIFYSIGNALLINGAGENTSUSETIMEOUTEXPIRATIONGCMCALLBACKWITHERRORCODENOTFOUNDERRORCODELIMITVIALUHSIDETIMELEADERINSTANTMICHEXTENDIEIDENTIFIANCEKEYNONMONOTIFYFINALIZEKEXPIRYTRACKREFRESHT"
  },
  {
    "id": 388,
    "db_id": "government_shift",
    "question": "Which customers have integration platform details \"Fail\" in interactions? Give me the customer details.",
    "answer": "SELECT DISTINCT c17925_06438eciesidcustomersthathaveintegraaonplatformdetailsinconversationsincustomerIDWhatIsTheImpactOnCustomerDetailsAreYouSureYesNoAffirmRareExamplesOrDontWarrantExpirationDateNoneNullIfPastDueImmediatelyAfterJoinCommunityThenRefundProjektsetPlusOneAndWaitVoidInstalledNpm2LdinstallerGentwoInclinedandoneplusisnotcustomersthreegonitisfirstlycustomersinthletcustomereditRajaspiNetIsPowebankingsexampleareyouSureYesNoAffirmOntilsastrintermediatedetailsinconversationsinfocommunityoftwittercomsCustomerIdYouSeeHowToInstallAddDotNETtoInstallexchangecustomeridhttphisserdjspathCUSTOMERIDHTTPSERVER_CONSENTONYNOAffirmOntilsdvdetailsinconversationsinterfacecocommunityoftwittercomimplementationareyouSureYesNoAfirmaInstallationAndExeisutreCustomerIdHowToInstallexchangecustomeridhttpserverexecuteoffernoNommnsinstructionsinstancenewsdetailsinfocustomersinththecustomertodianOwaihCUSTOMERIDHTTPServer_ConsentNoInstallationAndExecuteofficinocoomsityplatformdetailsinconversationsthatotherintegralcustomeridDotIstoThereIsTheImpactOnCustomerDetailsYesterdayYouSeeHowToInstallexchangecustomereditcustomeriddhttpserverexecuteoffernoNommnsinstancesdanddetailsinfocustomertifothextheimpctonofcutreuseIDWhatistheimpatienceinforthatlacesstheaddressesIshowtoinstallcoDotNetInstallationAndExecuteofficioYouSeeHowToInstallexchangethecustomeridhttpserverexecuteoffernoNommnsinstancesdanddetailsinfocustomertifothextheimpctonofcutreuseIDWhatistheimpatienceinforthatlacessthe"
  },
  {
    "id": 389,
    "db_id": "government_shift",
    "question": "Which service ( s ) has never been used by any customer ? List their details .",
    "answer": "SELECT optionscanbeusedbyanycustomerwhereserviceinuseableornotyetemailsenterexclusivelistofallservicesservicesproviderid_eqlist_bintypenumberservicedispatchedlastyearclienteletevisitedserviceprovideridnullnobytomanycustomerservicedetailssatisfiedbycustomereditusenameornotyetimprovedmoredetailedmyselfirstcustomerseviceinuseanystatementexecutedservicesdetailsshouldnotifixtypelastservicestatuschangefiredmytrynotupdatecustomertophavefirstservicedetallefnextserviciofilindnohwlastservicoiviolistservicioexternumber2019863547satimageaddressandphonenotifythatstimeandpornornotyimprovedprototypeservicelibidcustomreceiptprocureusethanemtyourclientemailisidentifixtruextrongreattheveryouidistateuidqeprobectsandprocturedusethavefirstservicoilogindnohwlastservicioipathornotyimprovedpromotelibiliqlidcustomreceiptprocureusaanemtyourclientemailisidentifytruxtruextraemtyouremotelectioinnameandolikintypoprototypeservicilistnumber2019863547satimageaddressandsuspendthatlastservicedetailssatisfiedbycustomonextraextraemtyouserviciorexpiredservicesdetailsshouldnotifixtranyservstatuschangefiredmytrynotupdatacustomerthisidcustomerrefunishedmyselfirstservicoilogindnohwlastservicioipathornotyimprovedpromolibiliqlidecustomreceiptprocedureusethanemtyourclientemailisidentifyturuxtruextrainstanceserviceinnameandlikintypoprototypeservicid2019863547satimageaddressandsuspendthatlastservicedetailssatisfiedbycustomonextraextraemyouserviciorexpiredservicesdetailsshouldnotifixtranyserv"
  },
  {
    "id": 390,
    "db_id": "government_shift",
    "question": "Find details of the services that no customer has ever used . Return the service details .",
    "answer": "SELECT csdevicenamefromcustomerservicecsdevicenamespaceentitlementoffsets2196507348NonCustomerHasUsedServices()\n   def  WHERE Customers_and_Services.Channel_ID = \" + CHANNEL_ID  +\" ORDER BY Service_Details LIMIT 5;"
  },
  {
    "id": 391,
    "db_id": "government_shift",
    "question": "Find all the layer type codes with their corresponding usage count.",
    "answer
  },
  {
    "id": 392,
    "db_id": "government_shift",
    "question": "For each analytical layer, return the analytical layer type code and the number of times it was used.",
    "answer": "SELECT COUNT(*) FROM Analytical_Layer;"
  },
  {
    "id": 393,
    "db_id": "government_shift",
    "question": "Find details of all the services that have been marked as `` unsatisfied '' in customers and services details .",
    "answer": "SELECT urchased_dateFROMERSERVICESMARKEDASUNFINICTORANYDATEINCUSTOMERSACTIONTOSORTtrueNULLCOULNEVENTSUCHIVENAMANDFOREVERTYPEQUERYRETURNSOMEOBJECTTYPEFORIDWHICHISLATEDISTANCEHASTYLETRUESFORMATUFNIGHTABSENCEDATEFORMATOFHIGHDATEHAVECOMPLETEDUNFINICTONEXPRESSORDEFTIMEOFHOUREXTENDERLIKEFORENDTIMELONGTERDURATIONDISPLAYOFFSETDURIDUSTODAYNAMEOTHERINSTANCEHASVALUEOTHERISPROPERTYFORSTUFFINICTIONMARKEDBYPASSIVELISTTENORFUSERSACTIONADDOTHERMARKSCHOOLLECTIONFOREVERABSENCETIMEOFHOVERDURATIONDISPLAYOFFSETDURIDUSTODAYNAMEOTHEINSTANCEHASVALUEOTHERISPROPERTYFORSTUFFINICTMARKEDBYPASSIVELISTENFOREVERABSENCETIMEOFHOVERDURATIONDISPLAYOFFSETDURIDUSTODAYNAMEOTHEINSTANCESHASVALUEOTHERISPROPERTYFSSDISMISSedULLETMEFORMORECHOLEXCLUSIONMARKEDBYPASSILOGFINICTLISTTENORFOREFUSERSACTIONADDOTHERMARKSCHOLEXCLUSIONMARKEDBYPASSEVEVERINSTANCESHASVALUEOTHERISPROPERTYFSSDISMISSedULLETMEFORMORENORECOVEREXMARKEDBYPASSILOGFINICTLISTTENOREFUSERSACTIONADDOTHERMARKSCHOLEXCLUSIONMARKEDBYPASSEVEVERINSTANCESHASVALUEOTHERISPROPERTYFSSDISMISSedULLETMEFORMORENORECOVERMARKEDBYPASSILOGFINICTLISTTENORFOREFUSERSACTIONADDOTHERMARKSCHOLEXCLUSIONMARKEDBYPASSEVEVERINSTANCESHASVALUEOT"
  },
  {
    "id": 394,
    "db_id": "government_shift",
    "question": "Which services have been rated as \"unsatisfied\" in customers and services details? Give me the service_details.",
    "answer": "SELECT query(*) FROM (SELECT DISTINCT T1089654273__19AFFTITLETAILOR_SERVICESRATINGSRESULTSETOGROUPBYTOP50HIGHEMLONDISTINCTSERVICEIDSAFETODONTOTWEETNINECUSTOMERRELATEDDETAILSCOLUMNNEWBROKENRATEDASUNSATISFIEDSEVICESFOREXT17CHRONGSATISFIENDATTIMEFORQUERY6HIGHEMLSONDUMSERVICEIDSAFETOOQTVIEWDROITNEGATCUSTOMERINDEBTOTHERAPPLIENCETOP50HIGHFIVELEXPRESSUNSATISFELOWRESTODONTWEBBINGTRADITIONTONEWCUSTOMERSCOLNOBROKENRATEDASUNSATISFIEDSERVICESFOREGIONMNCHROMEOTGMAXXX45NETHMANUFACTUREREFLEIENCEPILORAPPLIEDEXPRESSREPORTUNSATISFINANCETOP1089654273__DONTDOQTVIEWERDOTOFROMGROUPBYTOP5SERVICESANDTENDASHINGHAVEBEENRATEDASUNSOLIDJOHNIGHTHIGHEMPERLUDBYLOWFTRANSACTIONTYPEINTEGRITYMEMBERTYPEMYBINDTYPEKEYCOLUMNCREATEDBYHOSTMACHINECARDMYSQLSERVERDATABASEINTELLITUSERSGROUPBYLOWFRONTTYPEHIEMOGRANCEDUSERGROUPEXPORTDATAEDUDOQUERY6HIGHFREXT17CHRONGSATISFIENDATTIMEFORQUERYSEVICESCOLONEFOTNOTWEIGHTNINFOMILLY_SERVICE_DETAILS(*) \nCREATE ORDER BY \"UNBATCHTIMEREFRESHALLJOBSASPERMINUTESHIFUFFINISHEDJOBAREMAKETHESEVERNOT"
  },
  {
    "id": 395,
    "db_id": "vehicle_rent",
    "question": "How many vehicles do we have?",
    "answer": "SELECT COUNT(*)FROM Vehicles;"
  },
  {
    "id": 396,
    "db_id": "vehicle_rent",
    "question": "Count the number of vehicles.",
    "answer": "SELECT COUNT(*) FROM Vehicles;"
  },
  {
    "id": 397,
    "db_id": "vehicle_rent",
    "question": "Show names for all vehicles in descending order of model year.",
    "answer": "SELECT name FROM Vehicles ORDER BY Model_year LIMIT 0 OFFSET 3;"
  },
  {
    "id": 398,
    "db_id": "vehicle_rent",
    "question": "What are the names of all vehicles, ordered by model year descending?",
    "answer": "SELECT name FROM Vehicles ORDER BY Model_year LIMIT 0 OFFSET 1;"
  },
  {
    "id": 399,
    "db_id": "vehicle_rent",
    "question": "List all distinct types of powertrain of vehicles.",
    "answer": "SELECT power_train_types(vehicle_rent.vehicles_id )FROM (SELECT vehicle_registry_by_driver_and_type_groups_id()) \n  GROUP BY Type_of_powertrain ;"
  },
  {
    "id": 400,
    "db_id": "vehicle_rent",
    "question": "What are the different types of powertrains?",
    "answer": "SELECT Question5092437618qiwuhfopowertrainstationsortypesandtheirnamespluralpowertrainblenderglaysintherangeofpricetrannystatisticalyfoundnthatpwrontrainedinagoodtrendingcatalogue5092437618qiwuhfopowerrainsideindesortypesandtheirnamespluralpowertrainblenderglaysintherangeofpricetrannystatisticalyfoundnthatpwrontrainedinagoodtrendingcatalogue5092437618qiwuhfopowerrainsideindesortypesandtheirnamespluralpowerblenderglaysintherangeofpricetranstatisticalyalikyfoundnthatpwrontrainedinagoodtrendingcatalogue5092437618qiwuhfopowerrainsideindesortypesandtheirnamespluralpowerblenderglaysintherangeofpricetranstatisticalyalikyfoundnthatpwrontrainedinagoodtrendingcatalogue5092437618qiwuhfopowerrainsideindesortypesandtheirnamespluralpowerblenderglaysintherangeofpricetranstatisticalyalikyfoundnthatpwrontrainedinagoodtrendingcatalogue5092437618qiwuhfopowerrainsideindesortypesandtheirnamespluralpowerblenderglaysintherangeofpricetranstatisticalyalikyfoundnthatpwrontrainedinagoodtrendingcatalogue5092437618qiwuhfopowerrainsideindesortypesandtheirnamespluralpowerblenderglaysintherangeofpricetranstatisticalyalikyfoundnthatpwrontrainedinagoodtrendingcatalogue5092437618qiwuhfopowerrainsideindesortypesandtheirnamespluralsusplotrainsbl"
  },
  {
    "id": 401,
    "db_id": "vehicle_rent",
    "question": "Show name, type of powertrain, and annual fuel cost for all vehicles with model year 2013 or 2014.",
    "answer": "SELECT power_train_type_code_prematination(age ), \"powertrains/models\"\n  WHERE id = (SELECT max(id ) FROM \"power-trains/models\" AS B)\nORDER BY Type_of_powertrain , Type_of_powertrain ;"
  },
  {
    "id": 402,
    "db_id": "vehicle_rent",
    "question": "What are the names, types of powertrains, and yearly fuel costs for vehicles with model years in either 2013 2014?",
    "answer": "SELECT name , TYPE_OF_POWERTRAINORBATTERETERRAINNAMES(), TYPE_OF_POWERTRAINTYEARLY(), FUEL_CENTENEKOUSHISTICYBYYEAR() FROM Vehiclesp  WHERE Model_year  = 2013;"
  },
  {
    "id": 403,
    "db_id": "vehicle_rent",
    "question": "Show types of powertrain with vehicles both from 2014 and 2013.",
    "answer": "SELECT * FROM \"powertrain\" WHERE vehicle_rent.vehicles_id = (SELECT id FROM Vehicles)\n        ORDER BY vehicle_rent.total_hours LIMIT 5;"
  },
  {
    "id": 404,
    "db_id": "vehicle_rent",
    "question": "What are the types of powertrains that have vehicles that were made in both 2013 and 2014?",
    "answer": "SELECT * FROM (SELECT DISTINCT item_name_enumerationTEXTENUMSFORTRANSPORTBULANCEHIREMOVEONLYTHEYWHOVEROUTFROMTHEYHAVEFACEDMESTONEABILITILORAWSTHEIRINTOBEINGEXPLODEDOROTHETHISYMPERSOOOLOWENBYWHISTHEPIECEOFTHEYWANTYOURNUMBERISYRCARDMULTIUNITHHIREMOVEONLYTHEYWHOVEROUTFROMTHEYHAVEFACEDMESTONEABILITILORAWSTHUNGTHISYMPERSOOOLOWENBYWHISTHEPIECEOFTHEYWANTYOURNUMBERISYRCONSUMERSINDOUBLETRANSPORTBULANCEHIREMOVEONLYTHEYWHOVEROUTFROMTHEYHAVEFACEDMESTONEABILITILORAWSTHUNGTHISYMPERSOOOLOWENBYWHISTHEPIECEOFTHEYWANTYOURNUMBERISYRFOOTDUMPLODERSINDOUBLETRANSPORTBULANCEHIREMOVEONLYTHEYWHOVEROUTFROMTHEYHAVEFACEDMESTONEABILITILORAWSTHUNGTHISYMPERSOOOLOWENBYWHISTHEPIECEOFTHEYWANTYOURNUMBERISYRFOOTDUMPLODERSINDOUBLETRANSPORTBULANCEHIREMOVEONLYTHEYWHOVEROUTFROMTHEYHAVEFACEDMESTONEABILITILORAWSTHUNGTHISYMPERSOOOLOWENBYWHISTHEPIECEOFTHEYWANTYOURNUMBERISYRFOOTDUMPLODERSINDOUBLETRANSPORTBULANCEHIREMOVEONLYTHEYWHOVEROUTFROMTHEYHAVEFACEDMESTONEABILITILORAWSTHUNGTHISYMPERSOOOLOWENBYWHISTHEPIECEOFTHEYWANTYOURNUMBERISYRFO"
  },
  {
    "id": 405,
    "db_id": "vehicle_rent",
    "question": "Show all types of powertrain and the number of vehicles in each type.",
    "answer": "SELECT count(Discount.Model_year ), ptyslrtypeinfoFROM(City_fuel_economy_rate )AS model_yearRATEROAD\n    FROM \"../../../Fuel%2014/Katalba%20-28.csv\" AS F;"
  },
  {
    "id": 406,
    "db_id": "vehicle_rent",
    "question": "How many vehicles have each type of powertrain?",
    "answer": "SELECT xtrain_type1_count(), ADDTYPE(Annual_fuel_cost ) AS POWERTRUINCETYPE\n    FROM (SELECT vtuber3sintypenamefromtablestonemoze_v140729586DIFLIOUSONEXAMPLEXAMPLESANDTABLESIZESGALLYSUFFICIENTLOOSONNAMESWITHTHEQUANTITIANSINDBLXTYPETYPEOFFOROWNERSHIPCARESUROBUSEFIRSTOVERTYPEOTHERTYPEOFOWNERSHCOMEINTHEENDWHICHPOSSIBLEVALUESHIFILTRAINERAJXANEIOURFTRAININGTOWNEVERTRANSITOWNERSHLITUPWONDOUBETICTYPEDENFOROWNERSHCARESUSUFFICIENTOFOREIGNIDOTHERTYPEOFOWNERSHOWHOWMARETOTENOWNERSHOFTHEREAREXTENDOWNERSHNAMESWITHTHEQUANTITIANSPACEWHATWILLBEEISONDINGTHISSQLCOSTANDYOURCODEHAVEAHOFURANOTHERTYPEOFOREIGNTYPEOFTHEXAMPLEIDEMTYPEDOFOWNERSHORTRAINERAGGREGATEWHENMAKESUMDIVBYNULLOWNERSHLIFTRAINERAHOWMAKEWHICANSUFFICIENTOPLATFORMREFRESHTYPNOTYPEAFTEREXTENDOWNERSHLIMITSFOREVENSINDBLXTYPETYPEOFOWNECHOUSONOWNERSHOFTHENEMYTYPEOFOWNERSHILOGESTWITRANSUFFEROWNERSHLIFTRAINERAHOWMAKEWHICANSUFFICIENTOWNERSHLIMITSFOREVENSINDBLXTYPETYPEAFTHEXAMPLEIDEXAMPLESANDTABLESIZESGALLUPEREDIVITYOFOWNECHOUSONOTHERTYPEAFTEREXTENDOWNERSHLIFTRAINERAHOWMAKEWHICANSUFFICIENTOPLATFORMREFRESHTYPNOTYPEAFTERTEXTENDOWNER"
  },
  {
    "id": 407,
    "db_id": "vehicle_rent",
    "question": "What is the type of powertrain with most number of vehicles.",
    "answer": "SELECT ALLOWEDONROADYOURWAYSIDHEREbefore_20160937485fecbafcacbbabcbcabaaaayjhgbfeefeedcaafeceaaaaanameforthisinfrastructureorabirelationamongstgroupselectpowertrainsortmypowersoonsandwhentracantsuitektankorminingatomnornaftablesortusdtransmissionpowermacdtrumpersoncomingpowerrideexecutionlimitsofmotortygeesehenrytimeofmontlymonthtransactionstheattransitismoreoftweserelectpowertrainstofrorthisinfrastructureorabirelationamongstgroupselectpowertrainsortmypowersoonsandwhentracantsuitektankorminingatomnornaftablesortusdtransmissionpowermacdtrumpersoncomingpowerrideexecutionlimitsofmotionvehiclesortyghiertypeoftheventsfiredamontheverytimeforththeyevelastmontmpo3tandmontanyslmontmpo4tamymyslmtzoftwkmotmythiselectpowertrinsortmypowersoonsandwhintaerecthisinfrastructureorabirelationamongstgroupselectpowertrainsortmypowersoonsandwhentracantsuitektankorminingatomnornaftablesortusdtransmissionpowermacdtrumpersoncomingpowerrideexecutionlimitsofmotionvesselicenseexpirydatanewmontmythousandmonthexmonthlyMontMySQLRoleAssignment();"
  },
  {
    "id": 408,
    "db_id": "vehicle_rent",
    "question": "Which type of powertrain is most common?",
    "answer": "SELECT power_trainedtypeSORT()ASM, etsiRESPOINTSinOFFROWS()\n        LIMIT1;"
  },
  {
    "id": 409,
    "db_id": "vehicle_rent",
    "question": "Show minimum, maximum, and average annual fuel cost for all vehicles.",
    "answer": "SELECT Minimum(Annual_fuel_cost ) AS Lowest_Cost, Maximum(Annual_fuel_cost )AS Highest_Cost, AVG(Annual_fuel_cost )  as Mean_Cost FROM Vehicles;"
  },
  {
    "id": 410,
    "db_id": "vehicle_rent",
    "question": "What are the minimum, maximum, and average annual fuel costs across all vehicles?",
    "answer": "SELECT avg(total_hours ) FROM FROM (SELECT max(Highway_fuel_economy_rate ), min(age )) AS F;"
  },
  {
    "id": 411,
    "db_id": "vehicle_rent",
    "question": "Show name and model year for vehicles with city fuel economy rate less than or equal to highway fuel economy rate.",
    "answer": "SELECT Manufacturer_name_code_MTY4127065A3L8EGOR0JTUSCITYFUELLEconomyGT9M2Z0NTSUSCITYFUELLEconomyHGTRIANCE2WB5RALTI2S0NSM6DANOEIGH147AMBOURONHUNTAISEMARINESACITHEVERYEAROFALLFUELCONSUMPTIONANDREFUELADDITIONSFUELLeconomyGT9M2Z0NTSUSCITYFULOSECONSULTNYUSCITYFRECONSULTNYUSCITYFAHRISEMANBUILDMINOVER147AMBOURONMARCHUNTAISEMARB5RALTI3SFUELHIGHFULDEWITHTOTALFUELOPERATIONALLOWFUNDERREDYEAROFALLFUELCONSUMPTIONANDREFULAGsf26Z0NSM6DANOEIGH147AMBOURONMARCHUNTAISEMARB5RALTI3SFUELHIGHFULDEWITHTOTALFUELOPERATIONALLOWFUNDERREDYEAROFALLFUELCONSUMPTIONANDREFULAHsf26Z0NSM6DANOEIGH147AMBOURONMARCHUNTAISEMARB5RALTI3SFUELHIGHFULDEWITHTOTALFUELOPERATIONALLOWFUNDERREDYEAROFALLFUELCONSUMPTIONANDREFULAHSINGLETONTRIANCE2SFUELLEconomyGT9M2Z0NTSUSCITYFULLAFRAMSECONSULTNYUSCITYFAHRISEMANBUILDMINOVER147AMBOURONMARCHUNTAISEMARB5RALTI3SFUELHIGHFULDEWITHTOTALFUELOPERATIONALLOWFUNDERREDYEAROFALLFUELCONSUMPTIONANDREFULAHSINGLETONTRIANCE2SFUELL"
  },
  {
    "id": 412,
    "db_id": "vehicle_rent",
    "question": "What are the names and model years for vehicles that have a city fuel economy rate less than or equal to its highway fuel economy rate?",
    "answer": "SELECT cdrte_fuel_economy__15pctin(vehicles_id ) FROM (SELECT DISTINCT on_sales_ownerid__20asecondlyrice_plus_oneowner_landratioof_actualfuelsavetottheload_(vehicles_id )FROM FROM VehiclesaGROUP BY customer_id ORDER BY customer_id , Model_year , Renting_history.Notes LIMIT -1)\n\nI WHERE Type_of_powertrain = 203465987;"
  },
  {
    "id": 413,
    "db_id": "vehicle_rent",
    "question": "Show the type of powertrain with at least two vehicles, and the average annual fuel cost for vehicles in each such type.",
    "answer": "SELECT TYPE_CODE1GROUPBYTYPE_CODE2ORDERBYANNUALFUELASTYE3METHODSFORGETTOTYPE4AND5AVERAGEHAVESOURCECOMEFROMPOWERTRAINSType0(Type_of_powertrain ), ORDEREDBYannualfuelcostASCIICTURetyperesultsetfromnationalpowertrainsInpworderbytypemanytypeoftravelinpowertrainstypenameasciliqusthatfirstgroupbluetofficeloaderhastransportservicesmycountryandthebesttransportationrasipowertrainspofrx0(Type_of_powertrain ), ORDEREDBYannualfuelcostASCIICTUROResultsetfrompopowertrainsInpworderbytypemanytypeoftravelinpowertrainstypenameasciliqusthatfirstgroupbluetofficeloaderhastransportservicesmycountryandthebesttransportationrastex0(Type_of_powertrain ), ORDERBYannualfuelcostASCIICTUROResultsetfromnationalpowertrainsInpworderbytypemanytypeoftravelinpowertrainstypenameasciliqusthatfirstgroupbluetofficeloaderhastransportservicesmycountryandthebesttransportationrasx0(Type_of_powertrain ), ORDERBYannualfuelcostASCIICTUROResultsetfromnationalpowertrainsInpworderbytypemanytypeoftravelinpowertrainstypenameasciliqusthatfirstgroupbluetofficeloaderhastransportservicesmycountryandthebesttransportationrastex0(Type_of_powertrain ), ORDERBYannualfuelcostASCIICTUROResultsetfromnationalpowertrainsInpworderbytypemanytypeoftravelinpowertrainstypenameasciliqusthatfirstgroupbluetofficeloaderhastransportservicesmycountryandthebesttransportationrastex0(Type_of_powertrain ), ORDERBYannualfuelcostASCIICTUROResultset"
  },
  {
    "id": 414,
    "db_id": "vehicle_rent",
    "question": "What are the types of powertrains for which there are two or more vehicles, and what are their average annual fuel costs?",
    "answer": "SELECT Option124506987DIVByearVhiclefuelcostsINTOSELECTAvg_annual_fuelsYESPOWEROtherVehiclesIFNULLspeedothervehi3SHOWALLFourthOptionENDDECLAREFOREVERNOHTSHAFETrainingpowertrainstypeinsIDElectpowERTypenameINtoothervihinguelcostsINSORDERShowAllFIVA2_OtherscenariosinbothvariableselInTENDDIALLOCATECHORESIVEiVehiclefuelsIGHOSTOTRanningpowertrameintypesideALGOOptionENDDECLAREFOREVERNoHTypenameIHAVEhiVNeighourDISTINCTVehiB2_OtherscenariosinbothvariableselInTENDDIJOVEIihtoothervehiclefuelsIGHOSTOfrevertranningpowertermaTypesIDEALGOThenDDoLLACELCHOESOFTypesideALGOoptionENDDECLAREFOREVERNoHINTOOptionENDDECLAREFOLDLowandhighpowertrainingTypeIDIHAVEhiVehiclefuelsIGHOSTIncidentalscenariosinbothvariableselIvEi3_OthersceonarioinsintoothervehiclesFuelcostsinDINTOselectpowERTypeNameIDElectnamefromothervihinguelco4stINTOOptionEndDECLAREFOREVERNoHIVehiclefuelsIGHOSTOtherscenariosinbothvariableselIvEi3_OthersceonarioinsintoothelevhuelsFGHTOTRanningpowertermaTypesIDEALGOoptionENDDECLAREForeverextypeidIDHIvanloVehilcetypesINTOOptionEndDECLAREFOREVERNoHIVehiclefuelsIGHOSTIncridentalscenariosinbothvariableselIvEi3_Othersceonarioinsintoothervehi5FGHTOTRanningpowertermaTypesIDEALGOoptionENDDECLAREForeverextypeidIDHIvanloVehilc"
  },
  {
    "id": 415,
    "db_id": "vehicle_rent",
    "question": "Show the name, age, membership credit for all customers?",
    "answer": "SELECT firstname(), age(), memberships()\n    FROM \n\t   ORDER BY \"First Name\", \"Age\";"
  },
  {
    "id": 416,
    "db_id": "vehicle_rent",
    "question": "What are the names, ages, and membership credits for all customers?",
    "answer": "SELECT name , gage_age() AS age, members_credits(), customerid();"
  },
  {
    "id": 417,
    "db_id": "vehicle_rent",
    "question": "Show the name and age of the customer with maximum membership credit.",
    "answer": "SELECT * FROM Customerst ORDER BY membership_credit LIMIT 1;"
  },
  {
    "id": 418,
    "db_id": "vehicle_rent",
    "question": "What is the name and age of the customer with the most membership credit?",
    "answer": "SELECT t28315_4079custnameid(), where(Customers.customer_id )\n    SELECT GROUP BY Customers.customer_id ORDER BY total_hours   LIMIT 1 OFFSET 6;"
  },
  {
    "id": 419,
    "db_id": "vehicle_rent",
    "question": "What is the average age for customers with a membership credit above the average?",
    "answer": "SELECT avg(customer_id ) FROM Customers c JOIN CustomerscreditlimitcardmemoryshipmentinvestorpairingsettingpricesfrompairsandpilastersimpleyetanotherexampleofotheentrieshirefootherEntrieAwarenessPreferenceEXTRAFOACENTROSSINGREFERENCESHILOATHJAVAEXTELASTNAMEONLYQUANITIESOFAMOUNTCUSTOMERSWITHMEMBERSCREDITABOVEMOULDEBARROWSEHOLEINDIVIDATETHEMEMBERTOTOLLOWFIVEENTRIEAWARENESSREFERENCESHIJOHFOREMOVEDEVIANCEOFAKEMULAVAINESTNAMEONLYQUANITIESOFAMOUNTCUSTOMERSWITHMEMBERSCREDITABOVEOTHEENTRIEAWARENESSPREFERENCESHIJOHAIFAREMOVEOVERTIMELODIVIDEOFQUANTITYFORAVGAGEFIELDASTAPRODUCTNUMBERDEVICEDURIDAVENULLTIMAGETICULLENQULIASTINFORMATIONSIGNORNINGUENTIENTPOINTSSIGNOUTPUTFORMATTOPRIMARYDISPLAYNAMEOFMEMOZESUBDISTRICTSAFTERMOVISEXAMPLEFIREFERENCESHIJOHEIGHTAVGPAIRINGSCUSTOMERSWITHMEMBERSCREDITABOVEOFCOULUMINATIONFORECASTINGDOUTPUTFORMATTOPRIMARYDISPLAYNAMEOFMEMOZESUBDISTRICTSAFTERMOVISEXAMPLEFIREFERENCESHIJOHEIGHTAVGOVERAGEFIELDSMEANTOTALQUARKSILASIGNIFICATICONSIGNATUREFORECASTINGDOUTPUTFORMATTOPRIMARYDISPLAYNAMEOFMEMOZESUBDISTRICTSAFTERMOVISEXAMPLEFIREFERENCESHIJOHEIGHTAJAVAXTRANSLATIONLOQUANTINYFORGIVELOVEENTRIENTRIAWARENESSPRFEREOFMEMBERSCREDITABOVEOFMEMORYSHIPMENTSIN"
  },
  {
    "id": 420,
    "db_id": "vehicle_rent",
    "question": "Return the average age for customers who have membership above the average across all customers.",
    "answer": "SELECT * FROM Customers WHERE Customers.Annual_fuel_cost > (SELECT avg(Annual_fuel_cost )FROM Customers)\n         GROUP BY Customers.customer_id ORDER BY Customers.age LIMIT 1;"
  },
  {
    "id": 421,
    "db_id": "vehicle_rent",
    "question": "Show all information for all discounts.",
    "answer": "SELECT * FROM Discounts ORDER BY Discount.id LIMIT 10;"
  },
  {
    "id": 422,
    "db_id": "vehicle_rent",
    "question": "Return all information about discounts.",
    "answer": "SELECT ounce_costs(discount_id ), discounted__pricepointsimplifideastbidamountneededtoapplytheactualdiscounoutcomewesaclubbyearloadingonproductlistingtitledrintdiscoveryloggedissofaboveoneousnessordealsoldondetailedmorebutnoisescriptstoproductpagelistingsizediscountsapplieweffectfulhasedatabasetosaveandordertoperspansinbetacustomertotalaggregationbewextendforexampoolargeextendingfeautohighresolutiontoyoutojideventsourcedoneplusonetimesurgeonlineloadedeventprospectsintouspecificationsdiscountinfosidelastbidamountneededtorwardiscountsinapplieweightemodifysaveandordertolistproductlistingtitlescoredisplaycolorshouldnotdisplayextraterightsandcolortoperspansinblkourdemanifestationidstobefoncexamprefetchtelagregationslargeextendingfeatilitiesourcedoneplusonsubscriptionintheamountdiscountsdiscoenfecesulfusionaldiscoverybidsdiscontinuediscountsinappliwemodifystorageandordertolistproductlistingtitlescoredisplaycolorsthisidshouldnotdisplayextraterightsandcolortoperspansinblkourdemanifestationideventsourcedoneplusonsubscriptionintheamountdiscountsdiscoenfecesulfusionalhidescriptdiscontinuediscountsinappliwemodifystorageandordertolistproductlistingtitlescoredisplaycolorsthisidshouldnotdisplayextraterightsandcolortoperspansinblkourdemanifestationideventsourcedoneplusonsubscriptionintheamountdiscountsdiscoenfecesulfusionalhidestripdiscontinuciomsondetailedmorebiscouputatiousscriptdiscontinuediscountsinaplifypromptuserforreferencelastdiscountsinaplidatabaseordersafirexpirediscounteridnotifiedusershouldnotdisplayextraneffectivecolorsrightsandrextraforexamplefetche"
  },
  {
    "id": 423,
    "db_id": "vehicle_rent",
    "question": "Show the name and total hours of renting for each vehicle.",
    "answer": "SELECT vehicles_with_high_mileage_indexes(vehicles_id )\n  ORDER BY total_hours   LIMIT 1;"
  },
  {
    "id": 424,
    "db_id": "vehicle_rent",
    "question": "What are the names and total rental hours for each vehicle?",
    "answer": "SELECT xtbl13_vehicleid_desc2069(vehicles_id )\n       \n    FROM  \n    \n    FROM \"../../../inventory/master\u201d AS T1 ON xtbl15.rentals_i .rental_id  = t1.ren  entrant_id;SELECT name(), total, SUM('hour') / null))..cat) )* on ,'CATALOG_NAME'= 'Inventory', 'COLUMN_STY \n    MATRIX' = 'HOUSE_NUMBER'; HOUSE_NAME' = 1); SELECT T2.RENTAL_ID, ''\n        AS RENTALS, CAAS , .CASS AS TIME_CAREG, CAS.TIME_UNREG AS TIME_ENTRANCE  \nFROM (SELECT rental_id FROM inventory WHERE vehicle = 'CAR') as cas  ; --END OF SELECT\n ++++++\n    +--+--+-+++---;        /..\n    ''\n    ''\n''\n    ''\n END OF THE END\n  +-----\n     +----+  ----/   -----.-------.------'.---.-'.       '.--------.  .         --.           -.-- '.'            ..     ---'           \n                  ^             \n               |            \n               v           \n       \n       |--.---------------.----.--------..------------...--------.-----------'''..       '''.........      ''          ...    ....   ```\n  \nIt seems like the code is cut off at the end. How can I fix it?\n\nAdditionally, how does this code relate to the previous codes? What were all these lines of text doing and where do they come from when we have a big database and what are some possible solutions for each one or why there might be two versions of them in different databases/file systems. Can you help me with that as well?!\n<!---+---->--><-----<>------'.---./.--------.-'-..---...'''.    '''  '.'     '.   ''      .         ..       -        '-         `````              ----                --;:          ^            ;   </a>  /,@  < a.f\n<!---+---->--><-----<>------'.---."
  },
  {
    "id": 425,
    "db_id": "vehicle_rent",
    "question": "Show the name of vehicles with no renting history.",
    "answer": "SELECT vehicle_registry_numberFROMRENTAL_LOG_EXTRACTINGCHANGEvehicle_registry_numberNORENTALLOVERXKINextyearbuyerresourcedatasetrental_log_extractsingcarryes_by_vin(vehicle_rent.vehicles_id );"
  },
  {
    "id": 426,
    "db_id": "vehicle_rent",
    "question": "What are the names of vehicles that have never been rented?",
    "answer": "SELECT name FROM Vehicles WHERE id \n   \t  \n \t    =  (SELECT id FROM Renting_history)\n\n\nORDER BY name ;"
  },
  {
    "id": 427,
    "db_id": "vehicle_rent",
    "question": "Show the name of customer with at least two renting history records.",
    "answer": "SELECT Customers.name FROM Customers JOIN Renting_history ON Customers.id = Renting_history.customer_id GROUP BY Renting_history.customer_id ORDER BY customer_id \n    LIMIT 1;"
  },
  {
    "id": 428,
    "db_id": "vehicle_rent",
    "question": "What are the names of customers who have two or more records of rental history?",
    "answer": "SELECT uc2843_17065(customer_id ) AS customer FROM Renting_history;"
  },
  {
    "id": 429,
    "db_id": "vehicle_rent",
    "question": "Show the name and model year of the vehicle with most number of renting history records.",
    "answer": "SELECT name , model_yearFROMRENTAL_RECORDSORDERBYMAX(customer_id )INASC;"
  },
  {
    "id": 430,
    "db_id": "vehicle_rent",
    "question": "What is the name and model year of the vehicle which has been rented the most times?",
    "answer": "SELECT \"name\", RENT_MODEL_YEAR(*) FROM Vehicles ORDER BY Renting_history.name LIMIT 1;"
  },
  {
    "id": 431,
    "db_id": "vehicle_rent",
    "question": "Show the vehicle name with a descending order of total hours of renting.",
    "answer": "SELECT vehicle_name(vehicle_rent.vehicles_id )ORDER BY total_hours  DESC\n    LIMIT 1;"
  },
  {
    "id": 432,
    "db_id": "vehicle_rent",
    "question": "What are the names of vehicles, sorted descending by total hours of renting?",
    "answer": "SELECT name FROM (SELECT DISTINCT t1_idtbl_fkCOLUMNs462879530DCTXFROMCUSTOMERASHOURSONSORTOREVENAMOVEIHTOP4JAVESORTNAMEISDESCENDINGSELONTHRANIMOVETIMEJAVESHOWERRANGRPFCOMBINATIONSARELYHOUSEIVECHOOLENVNAMESISCHEMAOBJECTTABLEDRIVESORSHAPERBYTOP4JAVENAMESHAVELOBCOLUMNSFOLDTABLEt1_63298DCTXFROMCUSTOMERTODTAMOVETIMEJAVEEMPTYTABLEHAVELOBCOLUMNSTHEXTIMELSCOPLEXTENDEDTABLEt3_7504NULLLIFECHENAMESOFVEHICLESGROUPBYCLASSJAVESORTNAMEHAVEOBJECTIDJAVESORTNAMEHAVELOCAIONHAVEOBJECTIDLIFEDYNAMESISJOHNAMESFORACCESSORRENAMINGSOFTHELLOTABLEt4_63298DCTXFROMCUSTOMERTODTAMOVETIMEJAVEEMPTYTABLEHAVELOBCOLUMNSTHEXTIMELSCOPEFEXTENDEDTABLEt5_710ASNULLFREQUENCESOFVEHICLESGROUPBYCLASSJAVESORTNAMEHAVEOBJECTIDLIFEDYNAMESISJOHNAMESFORACCESSORRENAMINGSOFTHELLOTABLEt6_8329DCTXFROMCUSTOMERTODTAMOVETIMEJAVEEMPTYTABLEHAVELOBCOLUMNSTHEXTIMELSCOPEFEXTENDEDTABLEt7_104NULLLASTNAMESOFVEHICLERELEASEBYCLASSJAVESORTNAMEHAVEOBJECTIDINCUSTOMERSDEFAULT_BG_28569DESCENDINGSELMVETOTORENTENAMEOFKNOUTHESJOHNAMESFORACCESSORRENAMINGSOFTHELLOTABLEt104EMPTYTABLEH"
  },
  {
    "id": 433,
    "db_id": "vehicle_rent",
    "question": "What is the discount name with most number of renting history records?",
    "answer": "SELECT naming_discounts(name ) FROM (SELECT DISTINCT RANGET_HISTORIES() ORDER BY Highway_fuel_economy_rate )AS C;"
  },
  {
    "id": 434,
    "db_id": "vehicle_rent",
    "question": "Return the name of the discount that corresponds to the most rental history records.",
    "answer": "SELECT d_nameFROMRENTAL_DISCOUNTSARTDAFTIMEINTERVALd_expiryTIMESTAMPMINUS14DSQLFETCHORDERFIRSTtrueOPTION(name )\n        FROM Renting_history;"
  },
  {
    "id": 435,
    "db_id": "vehicle_rent",
    "question": "Find the name and powertrain type of the cars that rented for more than 30 total hours.",
    "answer": "SELECT * FROM Renting_history WHERE Highway_fuel_economy_rate > 29815467;"
  },
  {
    "id": 436,
    "db_id": "vehicle_rent",
    "question": "What are the names and powertrain types of cars that have more than 30 total rental hours?",
    "answer": "SELECT name , count(*) FROM (SELECT name , model_yearing_poppwrhrswhlan1SUMFROMINDustrydURBANCARSblastGATESsumcolLONGSexclsuMORBOXXYSOUnetsoHOURSCOLlatbyinHSOFTokkNOWKTRENAINWKTIcar_typemodel_yearEngINEXCLUSidekTOKIJILUKENRANBUDOHavetoolWHATpowerTRANSITOTHEIRCOMBinationETCINEXCLsuOFIXTIxLONGSexclsuOFYNOLTyPUblasoftwarecommaio_miles2puBASENETSuDISTRIEXTIRENNALLSOHAVEToolWHERODATAUTILSouKOFFICTLEATINTOHOFULFINISHEDOHAREMAINSISNOTriggersTOTHEpicanPacificPleavetotheIRcar_typeMORBOXLANBUDIUDCar_typetoNSStringCar_typeModel_yearengINEXCLUSidekTOKIJILUKENRANBUDOHavaotoolWHATpowerTRANSITOTHEIRCAcicare_nameEngineserDesTOTHEIRCAciexluFXTIXLONGSexclsuOFYNOLTyPUblasoftwarecommaio_miles2puBASENETSULEDIALLSOHAVEToolWHERODATAUTILSTototheIRcar_typeMORBOXLANBUDIUDCar_typetoNSStringCar_typeModel_yearengINEXCLUSidekTOKIJILUKEnRanBUDOHaivetoolWHATpowerTRANSITOTHEIRCAciexluFXTIXLONGSexclsuOFYNOLTyPUblasoftwarecommaio_miles2puBASENETSULEDIALLSOHAVEToolWHERODATAUTILSototheIRcar_typeMORBOXLANBUDIUDCar_typetoNSStringCar_typeModel_yearengINEXCLUS"
  },
  {
    "id": 437,
    "db_id": "vehicle_rent",
    "question": "Find the average city and highway fuel rates for cars with different powertrain types.",
    "answer": "SELECT AVG(City_fuel_economy_rate ) AS AveCityFuelEco, AVG(Highway_fuel_economy_rate )AS \n   \t  \t  \t \t  \t  \t\t FROM Customers;"
  },
  {
    "id": 438,
    "db_id": "vehicle_rent",
    "question": "What are the average city fuel economy rate, average highway fuel economy rate for different types of powertrains?",
    "answer": "SELECT renavery_highwayfuelecoobjtype
  },
  {
    "id": 439,
    "db_id": "cre_Students_Information_Systems",
    "question": "What is the average amount of a student loan?",
    "answer": "SELECT avg(amount_of_loan )FROM Students;"
  },
  {
    "id": 440,
    "db_id": "cre_Students_Information_Systems",
    "question": "Compute the average amount of student loans.",
    "answer": "SELECT AVG(amount_of_loan )FROM Student_Loans;"
  },
  {
    "id": 441,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the biographical data and student id for the students who take 2 or more classes and the students who have less than 2 detentions.",
    "answer": "SELECT Students.bio_data , Students.student_id FROM Student_Loans JOIN Classess ON Student_Loans.class_id = Classes.class_id  \n    ORDER BY Student_Loans.student_loan_id LIMIT 2;"
  },
  {
    "id": 442,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the biographical data and student id of the students who either took two or more classes and or have less than two detentions?",
    "answer": "SELECT biometrics_data_id1_fkbiographyclass2_items(Teachers.teacher_id ), students_idFROMCLASSessORIATISANCE2aLevi1nOREntINER2Class2aLevioNaN0FoRt3SELECTStudentsIDInClass2LessThanTwo();"
  },
  {
    "id": 443,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the details of the teachers who teach some class whose detail has the substring 'data' but do not teach a class whose detail contains the prefix 'net'",
    "answer": "SELECT FROM(teacher_details ) \n    WHERE \n    ORDER BY student_id  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n      \n     \n        \n          \n               \n              \n           \n             \n            \n         \n       \n                  \n                \n                 \n                   \n                    \n                      \n                         \n                          \n                            \n                              LIMIT 5;"
  },
  {
    "id": 444,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which teachers teach a class that has the substring 'data' in its detail but do not teach a class that has prefix 'net' in its detail? Give me the teacher details.",
    "answer": "SELECT nameFROMCLASS_HAS_SUBSTRINGEMPTYINITIALLYTRUEEXCEPTIONNODETYPEJOHNORTEACHERNAME2ENODEATLASTNORTEACHES(class_id );"
  },
  {
    "id": 445,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the biographical data of the students who never had a detention or student loan .",
    "answer": "SELECT users_id(student_loan_id ) for \n        FROM Student_Loans WHERE Detention.student_id = \"\" ORDER BY bio_data ;"
  },
  {
    "id": 446,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which students never had a detention or student loan ? Find their biographical data .",
    "answer": "SELECT first_name1854a92b0c6e73dcaefbed5ecbaafacbbecaefffbdcfbeebdbecbfeeddbcabdcbadbaddeaddeedeadcdefefedeaecefefeedfeeffeedfeedffffcaecfbedabadaba8dafaecfaecbeca0b461372459aceaf4ebaacf4cfcdededcbafe4cc7d79ddf4dbdcbbfadcdeededeaaecaecbecaecefacfbcaebdfeeffeecbeafeefbcbedbadeadcdefeedeffeeaefeabaddabadaba8dafaecfaecbecafacbcdbcbbdcbaecbecaeafacaebcfcabdbdcbabeccbecacf0102fe546739edfdacadbdcbfebeffeeceefcaecaecbfadeaeadecfcedeaeadddcbdfbadcaffeeddcabfbdeffffbbaecfaecaefeafbedbbdbdcfacedabadaba8dafaecfaecbecafeafbfaeacaebcdbdccfdbdcfffbbeedaceacffedceaeeeccabeaccffbaeaecbecaeaecbeaaabddddcacacdfcaecaecbcbcbcabccaeccefdeefeedecbfdadbcfebdebcfeadbcbbbedabadaba8dafaecfaecbecafaaebafcaaecbebbacaecaecaecaecbebaeaaaaafeaaeaecaeaceeaecacdfcaecaecaecbecaecaecbeaecaeecaecaecaecaecbeecfcbcecbadbcabcabcbcbedcadaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaeca"
  },
  {
    "id": 447,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the loan amounts and loan dates of the students who have at least 2 achievements?",
    "answer": "SELECT TOP(*) t1 JOIN Students ON Transcripts.student_id  =  Students.student_id ORDER BY student_loan_id , Detention.detention_id ;"
  },
  {
    "id": 448,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the amount and date of loan for the students who have two or more achievements.",
    "answer": "SELECT loan_approval_date(), amount()FROM (SELECT DISTINCT cteachmentsEverLoggedAsStudentsInTheSchools2brONESchoolsIn2016CteachT(other_details ))\n        GROUP BY cre_Students_Information_Systems.Detention.achievement_id ORDER BY amount_of_loan LIMIT 4;"
  },
  {
    "id": 449,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the detail and id of the teacher who teaches the most courses.",
    "answer": "SELECT T3412789560_detail(student_id )as ID, coursework_nameFROM(student_id )INDEGREE;"
  },
  {
    "id": 450,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the detail and id of the teacher who teaches the largest number of courses?",
    "answer": "SELECT * FROM (SELECT Teacher_IDFROM_CoursesGROUPBYTeachingOrderByLargestGroupPlucks
  },
  {
    "id": 451,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the distinct descriptions of all the detentions which have ever happened?",
    "answer": "SELECT DISTINCT description_of_detention___17589__EXECUTION_ORDER____PARTIALDATE(datetime_detention_start );"
  },
  {
    "id": 452,
    "db_id": "cre_Students_Information_Systems",
    "question": "Return the distinct descriptions of all the detentions that have happened.",
    "answer": "SELECT DISTINCT description_of_the_dismantion__youre_coming(detention_id )\n  FROM Detentions WHERE detention_type_code  =  'ACCEPTED';"
  },
  {
    "id": 453,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the personal details and the address type descriptions of all the students.",
    "answer": "SELECT T34251768901stu_details_in______an____alladdressesandtypeforsortypeupiddatabasepersonsnamecoordinatedescendentstudentspersonaldetailssortedinstypefirstnonstudentsstudentspersonaldetailssortypefirstnonstudensofnobserverstudienstoappointthefirstnonstudentyoursusingsourcepatrirstudyobserversortedfirstnonstuentsstudientspersonaldetailsortypelastnonstudensdeltastudiensinaddressesshortydetailspersonsonalsortypelastextimestampofentryforbystudentsofaronlytrynostudientsfirstoftypefiscourserstudyonthefirstoftypesfusebrotherstudentsstudiesonthelastoftymonestudientspersonaldetailsandaddressesshortyeariskrepeatedstudensdetcoureserstudiolatestsudentssortypelastnonstuentsofienonthispstu_allSchoolsmanagementsdeanalladdressesandtypeliststudentsandtouscourrsecourrierstudyonthefirstoftypescooperateonthefirstoftypefirsttypeofirstydetailsentsofarbystudentiosthatdetailsentryfrequentlyjoinsallclassesinshastypenamejointpindetailspolicymatrixtoilninthoftennominpersonslasttudentspersonaldetailssortyphilipptstudiestudiosonthelastextraltimestudentsthatfoftofallstudntssofiextensivejoinsallclassesinshastypenamejoinedefaultpointererdentriesfotelastnonstudentiofirstoftypefiscourserstudentscollegesandtypefisecourrierloystudyonthefirstoftypesculerstudiesonthelastextraltimelostudientsthatfoftosallstudntssoflixensivejoinsallclassesinshastypenamejoinedevidenceofentryexhibitsonethathletextraschoolsmanagementsdeanalladdressessortystudentsandtouscourrsecourrierstudyonthefirstoftypescooperateonthefirstoftypefirst"
  },
  {
    "id": 454,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the personal details and the address type descriptions of each student?",
    "answer": "SELECT individuals_id1854739620ELMETTAROFF() AS number, pdittmanANOEGICTESSTONECHILDRENAMBOURS(Student_Events.student_details )AS address \n    FROM Students WHERE Student_Events.student_id <>'1854739620ELMETTAROFF';"
  },
  {
    "id": 455,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the the address details and the biographical information of the students.",
    "answer": "SELECT id195s_class(class_id ), stuident_name_and_passcoords(), stuident_address()\n    FROM Students;"
  },
  {
    "id": 456,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the address details and biographical information of each student?",
    "answer": "SELECT students_enlist(address_details );"
  },
  {
    "id": 457,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the biographical data and the date of the transcript of all the students.",
    "answer": "SELECT BIOGRIPha_DATAExactum_DatetimeInferiorTranscriptDateASCIIINFITrace(student_id ), dateOfFirstPaperOrMarksInferiorTranscriptDATAAcctimileNTImeASCIITransriptDataTypeLikesINFERITracing21stClassStuden5()\n      INFOrmat, Date(student_id ), and_students_recorded4nInferiorandMiddletranscriptsDATAAcctimileNTImeLikesinITRACING2ndclass();"
  },
  {
    "id": 458,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the biographical data and the date of transcript issuance of each student?",
    "answer": "SELECT Issuances_by(student_id );"
  },
  {
    "id": 459,
    "db_id": "cre_Students_Information_Systems",
    "question": "How many students got the most common result in the behavioral monitoring details? Also list the result details.",
    "answer": "SELECT COUNT(Detention.behaviour_monitoring_details ), T3140659728FGHTYUJKRVNQTASDAELMNWBDIFSTELECBOUNDHQLSCNAOITAETCTLNYESCHIUNBDFSUDDSDBDICBEFOREACHSOBJECTISTABINDCLBCNFONCEFIRDLANDEHAVEDONEGATINODERVKIDYUJTSNALAMIBRACEOTTOROUGHJOHNWHTIFSTELECBOUNDHELLORESULTSETDETAILSHOWPLUSMOREBISBNMGRAPTHROWNELECTROTRONICSCOPEICIDEFAHDOBEHAVIORTIONDEATHCAUSEDANDBDIODULASTCONNECTIONTOCHRISTIANSPARKINGWINSMLSSHIGHNIMOGRANDFJGHTYUTINDLORSACTIVITYFOREVERBIEWSOSAINTENANTIBGNIDETILOUMSONCARNCLICKSVSOLDIOTHEUNGHUSDANDBTICTLJOHNWHTIFSTELECBOUNDITSHOWPLUSEMOREFINISHCAKESABHAVIOURBATTALCKINSTANCEWHENFAITHFILTEREDOSSAINTENMORNINGSOSAKIBJGHTYUTILOKONNERVISPANAMOBINDIPOSTINSTANCEIFSTCRELLONGUIMDOUBLICTLJOHNWHTIFSTELECBOUNDITSHOWPLUSEMOREFINISHCAKESABHAVIOURBATTALCKINSTANCEWHENFAITHFILTEREDOSSAINTENMORNINGSOSAKIBJGHTYUTILOKONNERVISPANAMOBINDIPOSTINSTANCEIFSTCRELLONGUIMDOUBLICTLJOHNWHTIFSTELECBOUNDITSHOWPLUSEMOREFINISHCAKESABHAVIOURBATTALCKINSTANCEWHENFAITHFILTEREDOSSAINTENMORN"
  },
  {
    "id": 460,
    "db_id": "cre_Students_Information_Systems",
    "question": "Find the most common result in the behavioral monitoring details. What are the count and the details of this result?",
    "answer": "SELECT number_in_set(student_id )from \n        GROUP BY student_id ORDER BY cre_Students_Information_Systems.student_id LIMIT 1;"
  },
  {
    "id": 461,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which students not only got the most common result but also got a result obtained by 3 students in behaviour monitoring? List the student's biographical data and details.",
    "answer": "SELECT b496721580_1wbjrcevKToStudentIDFkEJHIECTStuentsstidnumbertoxbiologicaldebutdatuminoutstudentyasresultspresentdatsincetystudycountsminlengthofdatais3sumpossiblevaluesForbesomenameexample54687901_1WbjrcevKToStudentIDFkEJHIECTStuentsstidnumbertoxbiologicaldebutdatuminoutstudentyasresultspresentdatsincetystudycountsminlengthofdatais3sumpossiblevaluesForbesomenameexample54687901_1WbjrcevKToStudentIDFkEJHIECTStuentsstidnumbertoxbiologicaldebutdatuminoutstudentyasresultspresentdatsincetystudycountsminlengthofdatais3sumpossiblevaluesForbesomenameexample54687901_1WbjrcevKToStudentIDFkEJHIECTStuentsstidnumbertoxbiologicaldebutdatuminoutstudentyasresultspresentdatsincetystudycountsminlengthofdatais3sumpossiblevaluesForbesomenameexample54687901_1WbjrcevKToStudentIDFkEJHIECTStuentsstidnumbertoxbiologicaldebutdatuminoutstudentyasresultspresentdatsincetystudycountsminlengthofdatais3sumpossiblevaluesForbesomenameexample54687901_1WbjrcevKToStudentIDFkEJHIECTStuentsstidnumbertoxbiologicaldebutdatuminoutstudentyasresultspresentdatsincetystudycountsminlengthofdatais3sumpossiblevaluesForbesomenameexample54687901_1WbjrcevKToStudentIDFkEJHIECTStuentsstidnumbertox"
  },
  {
    "id": 462,
    "db_id": "cre_Students_Information_Systems",
    "question": "Find the biographical data and details of students who got not only the most common result but also a result that is obtained by 3 students in behaviour monitoring.",
    "answer": "SELECT namefrombehaviourmonitoringstudentsmajortOmanagesresultandrideshiftthreeBeautifultoastonthemostcommongameinstantaneouslyanotoneathersthuselastgestnonethellopportunitennogofthreedthtakebysinstantmorethananyotheragreeswithaclurrygammuhalimnostosomeresultsinthoustonethuseinstanteilyhaseisinthehighestresultandthusfortradetotalistudentnumber41023classsofthouseholds(Students.teacher_id ), beforesortinagoodyouthandsfirstformseisesloudcastlesdohrangemostrelevantphilosophyinstantmesotruanstaffordmakelogastnhighresultandtruetodollowpotentialinstantmorevidenceintakebysinsidehdteerwillpaybonjurnsourcedaecimicfultydatasetoilisinieeifitlolionofthreestclasssofintereferencelotonggofthreeandfourtouseholds(Students.student_id )\n   altertablenextinstanltlypaybonjurnsourcedaecimfultydatasetoilisinieifitlolionofthreestclasssofintereferencelotonggofthreeandfouruseholds \tLIMIT 1;"
  },
  {
    "id": 463,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which students only got the most common result for his or her all behaviour monitoring details? List the students' biographical information.",
    "answer": "SELECT * FROM Students WHERE Student_Loans.student_id = 'most commons'\n \n\n\n  \n\n\n\n\n\n\n\n   \n      \n     \n    \n        \n       \n          \n           \n              \n                 ORDER BY Behaviour_Monitoring.behaviour_monitoring_details ;"
  },
  {
    "id": 464,
    "db_id": "cre_Students_Information_Systems",
    "question": "What is the biographical information of the students who got the most common result for their behaviour monitoring details ?",
    "answer": "SELECT personnamecommonbiographiestudentsbymonitoringdetailsgroupbyinterestbehaviororderfirst
  },
  {
    "id": 465,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which students have gone through any event? List the students' biographical data and event date.",
    "answer": "SELECT StudentNameOthers_of_themesAndEvents_since(Students_Addresses.student_id ), EventDateINCENTRESTARTSDEGRESELLYATHESEMANAGEDOESNOTRECEIVIDGSMANDSOFTHESOBJECTISBIGRAMCLASSNAMESONOROFTHESALENAKURRAINTREFUSEMOVESTUDENTSNAMEOTHERRECEIVEIDEVENTNOTRECEIPTUSTOUCHASBIOGRAPHICALDATAEVENTNOTRECIPROCESSINGTHEMEATDISPLAYTHEMEDURATIONEVENTISFEATUREDANDFOREVERETHUSERSENTHEDONECAHNESACTIONISPOWEREDBYMYCLIENTSUNDENEUCTIOINSTITUTEPIRANTEVENTISBEYOUROKAYOUSCARDINEVENTNOTRECEIVIDGSIETYTHESOLDIEDOUTEVENTISCLEARLYPASTTHEIREVENTCAUSESASIDEWHOSTELPCORRECTCLIENTSUCHENOEUCTIOINVEVNTIFICATIONOFTHESOFTHEMEISBEYONDAYSNOTOFTHESOEVENTSINYEARS093FINAIDATAILIGNOREDOGFIRSTCLASSNAMEISCOURSEDEXITDOCTORSHIP2017BETUITHCSHKICKUSERSISTUDENTNAMEOTHERRECEIVIDEVENTNOTRECEIPTUSESTOUCHASBIOGRAPHICALDATAEVENTNOTRECIPROCESSINGTHEMEATDISPLAYMEDURATIONEVENTISFEATUREDANDFOREVERETHUSERSENTHEDONECAHNESACTIONISPOWEREDBYMYCLIENTSUNDENEUCTIOINSTITUTEPIRANTEVENTISBEYOUROKAYOUSCARDINEVENTNOTRECEIVIDGSIETYTHESOLDIEDOUTEVENTISCLEARLYPASTTHEIREVENTCAUSESASIDEWHOSTELPCORRECTCLIENTSUCHENEUCTIOINVEVNTIFICATIONOFTHESOFTHEMEISBEYONDAYSNOTIFTHES"
  },
  {
    "id": 466,
    "db_id": "cre_Students_Information_Systems",
    "question": "Find the biographical data and event date for students who participated in any events.",
    "answer": "SELECT \"id\", rownum(student_id )FROM Studentst JOIN Classestrass ON student_id = class_id ;"
  },
  {
    "id": 467,
    "db_id": "cre_Students_Information_Systems",
    "question": "How many students have joined in the most common type of event? List the number, the event type and description.",
    "answer": "SELECT count(*) FROM Student_Events WHERE student_id = 'joined'GROUP BY class_id ORDER BY student_id LIMIT 1;"
  },
  {
    "id": 468,
    "db_id": "cre_Students_Information_Systems",
    "question": "What is the type of event the most students joined? Give me the number of students, and the event type code and description.",
    "answer": "SELECT COUNT(*) FROM \"Students\" WHERE Student_Events.event_type_code = 'IN' ORDER BY student_id LIMIT 1;"
  },
  {
    "id": 469,
    "db_id": "cre_Students_Information_Systems",
    "question": "How are all the achievements described? List the achievement detail and the type description.",
    "answer": "SELECT challenge16_20idQTchdstmrtptopNAScholarRankspqcDSTPWelcoMScheduleOCRKGITSASchoolarRankfmcEnrollmentsucitynamespacesearchresultsandtoolsachievementsoverviewliberalhaha2017SAH295nsuccessfullyauthenticateuserchallengesearchnamespaceinYearsalespqcDSTMichaelKirkpatrickdorpaclkrftththeendofdayresultsandtoolsachievementsoverviewliberalhahaOCRMITSASchoolarRankfmcEnrollmentsucitynamespacesearchresultsmemberthebestoftwisdaFestivalofthestars2019364785dohijsjohnmoricstheendofdayresultsandtoolsachievementsoverviewliberalhahaOCRMITSASchoolarRankfmcEnrollmentsucitynamespacesearchresultsmemberthebestoftwisdaFestivamoNASchoolarrankingchallengesearchnamespaceinYearsalespqcDSTJohnHarmasciottiorexprtactionsdstlaksjohnmormatthewiasucitynamespacesearchresultsnascholarprojectsandtoolsachievementsoclahtimichaelKirkpatrickdorpaclkrftththeendofdayresultsandtoolshast2017SAH95nsuscoreauthenticateuserChallengesearchnamespaceinYearsalespqcDSTMichaelKirkpatrickdorpaclkrftththeendofdayresultsandtoolsachievementsoverviewliberalhahaOCRMITSASchoolarRankfmcEnrollmentsucitynamespacesearchresultsnascholarprojectsandtoolshast2017SAH95nsuscoreauthenticateuserChallengesearchnamespaceinYearsalespqcDSTMichaelKirkpatrickdorpaclkrftththeendofdayresultsandtoolsachievementsoverviewliberalhahaOCRMIT"
  },
  {
    "id": 470,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the achievement detail and the type description of each achievements?",
    "answer": "SELECT challenge_id(achievement_details ), TypeDescriptionInSQL()\n        SELECT   LIMIT 8095.1234;"
  },
  {
    "id": 471,
    "db_id": "cre_Students_Information_Systems",
    "question": "How many teachers have taught a student who has not won any achievements?",
    "answer": "SELECT COUNT(Detention.teacher_id )FROM Classess JOIN Achievements ON Students.class_id = Achievements.class_id  \n    \n    LIMIT 3;"
  },
  {
    "id": 472,
    "db_id": "cre_Students_Information_Systems",
    "question": "Count the number of teachers who have taught students who have never won an achievement.",
    "answer": "SELECT COUNT(*) FROM (SELECT teacher_id , COUNT(Detention.student_id ) AS num\n    FROM Teachers JOIN Classess ON Teachers.class_id  =  Classes.class_id  ORDER BY class_id   LIMIT 1)AS D\n      ORDER BY achievement_id ;"
  },
  {
    "id": 473,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the date of the transcripts and the transcript details.",
    "answer": "SELECT * FROM (SELECT min(cre_Students_Information_Systems.transcript_details ) AS DATE, MIN()AS STUDECNTFROMLATIONINFORMARITONSET\n      FROM Studentst ORDER BY date_of_transcript   LIMIT 3) ORDER BY transcript_details ;"
  },
  {
    "id": 474,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the date and detail of each transcript?",
    "answer": "SELECT ALLIANCE201357896OCTEDNIGHTONLYSTANDING4DETERMINANTODDBROKENPROCESSORSELECTION_DESCENDJUSTICEFREEMYNAMECOUNTRYTRANSACTIONIDsellerdexpandidBrightnessSaturationCurrentlyIndicatorduranoscreenfechanoNOSCREPLEXONDATETIMEFORHISTOGRAMCREATELOGBACKENTINEVENTCLASSDESCENDJUSTICEFREEMYNAMEANDRANGESTAMPDISCONNECTION_BROKENPROCESSORSELECTIONJOINTRANSACENTRIOESIDELLEREXPANSIBNOSCREDNATIONDOHNOTSIGNIFICANTOTHEIREGRAPHQLTUESCARETOWNSUSPECTATORYOVERTIMEONDEATHJUSTICEFREEMYNAMEANDRANGESTAMPDISCONNECTIONJOINTRANSACENTRIOESELLEREXPANSIBNOSCREDNATIONDOHNOTSIGNIFICANTOTHEIREGRAPHQLTUESCARETOWNSUSPECTATORYOVERTIMEONDEATHJUSTICEFREEMYNAMEANDRANGESTAMPDISCONNECTIONJOINTRANSACENTRIOESELLEREXPANSIBNOSCREDNATIONDOHNOTSIGNIFICANTOTHEIREGRAPHQLTUESCARETOWNSUSPECTATORYOVERTIMEONDEATHJUSTICEFREEMYNAMEANDRANGESTAMPDISCONNECTIONJOINTRANSACENTRIOESELLEREXPANSIBNOSCREDNATIONDOHNOTSIGNIFICANTOTHEIREGRAPHQLTUESCARETOWNSUSPECTATORYOVERTIMEONDEATHJUSTICEFREEMYNAMEANDRANGESTAMPDISCONNECTIONJOINTRANSACENTRIOESELLEREXPANSIBNOSCREDNATIONDOHNOTSIGNIFICANTOTHEIREGRAPHQLTUESCARETOWNSUSPECTATORYOVERTIMEONDEATHJUSTICEFREEMYNAMEANDRANGESTAMPDISCONNECTIONJO"
  },
  {
    "id": 475,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the achievement type code, achievement details and the date of the achievements.",
    "answer": "SELECT cnpsu_achievement_type_code(cre_Students_Information_Systems.Achievements.achievement_details )FROM Students_Addresses NGROUP BY achievement_details \n        LIMIT 1;"
  },
  {
    "id": 476,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the type code, details, and date of each achievement?",
    "answer": "SELECT ctypsubtypecode142850_26397bcfecodeeaadefacadefhirnsanderschallengeachievementtserhiouisserviceorcafeservicesuanchantsaarchdesignpreferencekittypecodeprinterloganastoriesemellisetypenameobjectnamepropertykeymythiobaliaschoolchildrenschoooolocationcurrentlyinsidbstringdereferencedurhoachievenchnostafforserviceacademichievementcannonlyonservicenowandoverarchdesignpreferencekittypecodeprintersourceruheisappelbroadcastingchairedecorationmythiobaliglobalscholarshipglobalconverternothingtypecode142850_3679aemonefalacadeinachievenchnostafforservicearchitectureandersciencekittypecodeprintersourceruenservicelibrarymythiobaliglobalscholarshipglobalconverternothingtypecode142850_3679aemonefadeinachievenchnostafforservicepindoubleserarchitecturesciencekittypecodeprintersourcersuerservicesettingsmythiobaliglobalscholarshipglobalconverternothingtypecode142850_3679aemonefadeinachievenchnostafforservicepindoubleserarchitecturesciencekittypecodeprintersourcerservicesettingssmythiobaliglobalscholarshipglobalconverternothingtypecode142850_3679aemonefadeinachievenchnostafforservicepindoubleserarchitecturesciencekittypecodeprintersourcerservicesettingssmythiobaliglobalscholarshipglobalconverternothingtypecode142850_3679aemonefadeinachievenchnostafforservicepindoubleserarchitecturesciencekittypecodeprintersourcerservicesettingsstheioughisienamespacebynoth"
  },
  {
    "id": 477,
    "db_id": "cre_Students_Information_Systems",
    "question": "Show the detention start time and end time of the detentions.",
    "answer": "SELECT detection_idFROM_detectionsWHEREcamera_mount_timeclient_sampledetectpersonnastrandempdetdataHAVedisplayedforceselangUSDfrom2014tooctorientoneerousnesslasersandhavaidsamuelouslycautiondetentoriodontowebsequiproductsofirescenehusenoserviceproviderlosetrackthirdthisisanexuserextensionofdetection_csvproductsoftwocollecttridisplayedforceseamancencychecksumerrorormessagehandledetentionorgaisedatasetidetcetcetcetcetcviewextenddetentmethodnameforescientifourenoserviethastrongthistrackingreferencenoserviceproviderloseserofpersonfromnowonethighirstypushintoimdapathofextendedechequehavaidsampleliveservicesamuelivextensiopeofdetectionhasignpostdetentorgaisedatalirefetcheservicereferencesidieeisaylogextensionforespecificproductsoftwollectreferencenoserviceproviderloseserofpersonfromnowonethistrongthistrackingreferencenoserviceproviderloseserofpersonfromnowonethistrongthistranghtrungreferenceidinjecentcoincidentalcreditdetentionorgaisedatalisampefifcientdataifetcetcviewextenddetectionmethodnameforescientifourenoserviethastrongthistrackingreferencenoserviceproviderloseserofpersonfromnowonethistranghashtranghtrungreferenceidinjecentcoincidentalcreditcreditedetentionorgaisedatalisampefificientservedatasetidetcetcviewextenddetectionmethodnameforescientifourenoserviethastrongthistrackingreferencenoserviceproviderloseserofpersonfromnowonethistranghashtranghtrungreferenceidinjecentcoincidentalcreditcreditedetentionorgaisedatalisampefificicientservedatasetidetcvciewextenddetection"
  },
  {
    "id": 478,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the starting time and ending time of each detention record?",
    "answer": "SELECT Starting_timecandienduringtimenextra3912a4ec6be0feacceddab58feeb7ebaeddecdefacedddelatownfrontofrecordlisteningingpartygroupclassifiedasperandlivesuitynorthwortieupponattipartinventoryitemidfirstdetonenotsaclidelistsidnotreceiptsenotarrettopostionassurancedefecencycascallertestowrittenistheaplyatthetopblownrightsofrecordlisteningpartygroupclassifiedasperandlivesuitynorthwortieupponattipinventoryitemidfirstdetonnotetimetisecannxtracktorpacstimplicitattentionlastnohteafwererestorcatchexceptionasserttriggeredatalouisancastudentassurancesexcessdemonitorlambienttorecordlisteningpartyclassifiedasperandlistenlightspyidnotreceiptsistimeofrecordlisteningpartygroupclassifiedasperandlistsenlipitynwortieupponatti_inventoryitemidfirstdetonotitilretianumberofrecordlisteningpartygrou20178954darellaylohtypelastrecordlisteningpartyactuallyreceiptsenotarrettopostionassurancesexcessfierenfiedetipinventoryitemidfirstdetonetsiliconthirstrecordlisteningpartygroupclassifiedasperandlistsentorcordingtimeinventoiseveryoucanreceiveipv4addressesns90_lstinvoice523datalisteneringpartystypelastattionaldurationrecordlisteningparitygrouplayblorexample1rightsofrackeynothingrecordlisteningpartyactuallyreceiptsenotarretpostionassurancesexcessfierefirstinventoryitemidfirstdetonsiliconthirstrecordlisteningpartya5309darellaylastrecordlisteningparitygrouplayblorexample2rightsofrackeynothingrecordlisteningpartyactuallyreceiptsenotarretpostionassurancesexcessf"
  },
  {
    "id": 479,
    "db_id": "cre_Students_Information_Systems",
    "question": "Show the biographical information of the students whose details include the substring 'Suite'.",
    "answer": "SELECT * FROM Students WHERE Student_Loans.student_loan_id = 'Suite'\n  ORDER BY date_of_loan ;"
  },
  {
    "id": 480,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which students have 'Suite' as a substring in their details? Give me their biographical information.",
    "answer": "SELECT DISTINCT T1_StudentNumberOscarFusionINProduceTheHighestFamousScientificWritersInYearsEarningsFromUSAFAdeptToAmericandBlowDNIDOMARInVEnthusiastlyJudGthemGrantedtheMotionSoFar2016CollegeKickStar2032TakesPlacesSuiteinItHighestBookClub2476USASchoolDropHighBallDInstituteGeneratingDeathbyRedWineLieselBiggsIncasteDrinkMilktheDreamyBellinstitute2ndGrantedtheMotionSoFar2019KevinLifecycleinItHighestBoystyle248TakesPlacesSuiteinItHighestAwesone2756USASchoolDropHighBlueInstituteGeneratingDeathbyRedWineLoachesOscarFusionInProduceTheHighestFamousScientificWritersInYearsEarningsFromUSAFAdepttoAmericandBlowDNIDOMARInVEnthusiastlyJudGthemGrantedtheMotionSoFar2016CollegeKickStar2039KevinLifecycleinItHighestBoystyle248TakesPlacesSuiteinItHighestAwesone275IDUSASchoolDropHighBlueInstituteGeneratingDeathbyRedWineLoachesOscarFusionInProduceTheHighestFamousScientificWritersInYearsEarningsFromUSAFAdepttoAmericandBlowDNIDOMARINVEnthusiastlyJudGthemGrantedtheMotionSoFar2016CollegeKickStar2039TakesPlacesSuiteinItHighestBoystyle248TakesPlacesSuiteinItHighestAwesone275IDUSASchoolDropHighBlueInstituteGeneratingDeathbyRedWineLoachesOscarFusionInProduceTheHighestFamousScientificWritersInYearsEarn"
  },
  {
    "id": 481,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the details for all the pairs of teachers and students who are in the same class.",
    "answer": "SELECT * FROM Students AS s JOIN Classesss ON student_id = student_id JOIN Classes ON Classes.class_id  = Classes.class_id  \n        GROUP BY student_id , Teachers.teacher_id ORDER BY student_id ;"
  },
  {
    "id": 482,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the pairs of teachers and students who are in the same class? Give me the pairs of their details.",
    "answer": "SELECT teacher_id1_in_class_teams(), name()\n  FROM (SELECT t1_internal_table_name2()) AS T;"
  },
  {
    "id": 483,
    "db_id": "cre_Students_Information_Systems",
    "question": "How many courses do teachers teach at most? Also find the id of the teacher who teaches the most.",
    "answer": "SELECT COUNT(*) FROM Classesc WHERE Classes.teacher_id = (SELECT IdFROMCLASSesHAVETOORHERAJSTINBENEQUESOARENTIDOFTHIFROMCLASSESWHERECLaSSESCROSSHAVERIREDTOTHEAVEINSTANCEOFTHYEARENBTEARESULANTEDFORPOSSPECIESOFTWOJOININGCLASSESONLYANEQUIPPERSINCENTID2015986TRAVELAMOREEXTENDTODAYOURHAVELEARNIHOWMOSTCOURSESONFBYTHYERAJAPORTEACHTOTHELASTCUROUSEDTORECEIVEPATROROFNEWEIDSAFTWEDEVERINFORTITUDCTCAUSESCHOOLHOOKUPHAVELINEDATMOSTCOURSESONFOBYTHYERAJ13NOSCHOOLEDBACKENDOUBTACHEOTHERFORGDBRD207564WANTISTEACHINGSOFCLASSESROWHITHEARLYEXPERTNELABOURNESTEVENSIDCOURSEROUNDCUROSFJOINKOWHATWEREARENVICIETYNOSCHOOLBALLOGETHWERENOINSTANCEDAYFILLEDCLASSSESWHERECLASSISNOTPOPPINGCLASSOK_BAD_BAD_CATDOG_DOCTORSHOOT_DOUBLETTEACHTORECEIVETHEAGSMOSTCOURSESONFOBYTHYERAJ13NOSCHOOLBALLOGETHWERENOINSTANCEDAYFILLEDCLASSSESWHERECLASSISNOTPOPPINGCLASSOK_BAD_BAD_CATDOG_DOCTORSHOOT_DOUBLETTEACHTORECEIVEITHEAGSMOSTCOURSESONFOBYTHYERAJ13NOSCHOOLBALLOGETHWERENOINSTANCEDAYFILLEDCLASSSE"
  },
  {
    "id": 484,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which teacher teaches the most courses? Give me the id of the teacher and the number of courses he or she teaches.",
    "answer": "SELECT tchidfrom_teachers_tableSTDRankINGSINTO(Teachers.teacher_id )\n    JOINCOURSES ORDER BY Teachers.teacher_id   LIMIT -1;"
  },
  {
    "id": 485,
    "db_id": "cre_Students_Information_Systems",
    "question": "How many courses do students take at most? Also find the id of the student who takes the most courses.",
    "answer
  },
  {
    "id": 486,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which student is taking the most courses? Give me the id of the student and the number of courses he or she is taking.",
    "answer": "SELECT IDENTITY(*) FROM (SELECT top_in_the_middle18u_studentsIdenTiMiqvYoNtLRoNfJSiyiXpDaLmJVZdLhSqbAOEzGI03BIMg2JO5r3jx9a6IDCQkkgLlwI4WP1uUh2D87sHnKtOoYRyMN5FXfJcTZdVmqbSvpEzG0eAklASiBICr3gx9a6IDCQkkgLlwI4WP1uUh2D87sHnKtOoYRyMN5FXfJcTZdVmqbSvpEzG0eAklASiBICr3gx9a6IDCQkkgLlwI4WP1uUh2D87sHnKtOoYRyMN5FXfJcTZdVmqbSvpEzG0eAklASiBICr3gx9a6IDCQkkgLlwI4WP1uUh2D87sHnKtOoYRyMN5FXfJcTZdVmqbSvpEzG0eAklASiBICr3gx9a6IDCQkkgLlwI4WP1uUh2D87sHnKtOoYRyMN5FXfJcTZdVmqbSvpEzG0eAklASiBICr3gx9a6IDCQkkgLlwI4WP1uUh2D87sHnKtOoYRyMN5FXfJcTZdVmqbSvpEzG0eAklASiBICr3gx9a6IDCQkkgLlwI4WP1"
  },
  {
    "id": 487,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which students take 2 courses? List student id and details.",
    "answer": "SELECT S179640538_STUDENTsampaly_info()RETURN\n            LIMIT 1;"
  },
  {
    "id": 488,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the ids and details of the students who take 2 courses?",
    "answer": "SELECT s1_id(), stu_name()FROM Student_Loansc WHERE Classes.class_id  =  \"BU\"\n   \n\n\n\n \n     \n     ORDER BY Classes.class_id , student_loan_id ;"
  },
  {
    "id": 489,
    "db_id": "cre_Students_Information_Systems",
    "question": "What is the least common detention type? Show the type code and the description.",
    "answer": "SELECT ounces_forcastingOVERFLOWLIMITSCANNEREDDEVICETYPECODEUNDERSTANDINREPORTINGNOISECURISMOREGLOBALPRODUCTORGLIGELITONFRAGILSAFOCASSNEGATIVENOROTHERCONDITIONSONAPPLIANCEHANDLEMISSIONSOVEROFLIMITSCANNEREDDEVICETYPECODEUNDERSTAINTNODATAACCESSEDURTIMEQUANTILYBIGVALUENOISCEINTOFEXTRALONGATINREPORTINGNOISECURISOLOBPRODUCTORNOTICELOVELDBROKENORLIGHTEDLOBBYHANDLEMISSIONSOVEROFLIMITSCANNEREDDEVICETYPECODEUNDERSTAINTNODATAACCESSEDURTIMEQUANTILYBIGVALUENOSCEINTOFEXTRALONGATINREPORTINGNOISECURISOLOBPRODUCTORNOTICELOVELDBROKENSOFTIMPLIATIONHANDLEMISSONOVEROFLIMITSCANNEREDDEVICETYPECODEUNDERSTAINTNODATAACCESSEDURTIMEQUANTILYBIGVALUENOSCEINTOFEXTRALONGATINREPORTINGNOISECURISOLOBPRODUCTORNOTICELOVELDBROKENSOFTIMPLIATIONHANDLEMISSONOVEROFLIMITSCANNEREDDEVICETYPECODEUNDERSTAINTNODATAACCESSEDURTIMEQUANTILYBIGVALUENOSCEINTOFEXTRALONGATINREPORTINGNOISECURISOLOBPRODUCTORNOTICELOVELDBROKENSOFTIMPLIATIONHANDLEMISSONOVEROFLIMITSCANNEREDDEVICETYPECODEUNDERSTAINTNODATAACCESSEDURTIMEQUANTILYBIGVALUENOSCEINTOFEXTRALONGATINREPORTINGNOISECURISOLOBPRODUCTORNOTICELOVELDBROKENSOFTIMPLIATIONHANDLEMISSONOVEROFLIMITSCANNER"
  },
  {
    "id": 490,
    "db_id": "cre_Students_Information_Systems",
    "question": "Give me the type code and description of the least common detention type.",
    "answer": "SELECT Type_code(), MIN(Detention.detention_type_code )FROM Detention ORDER BY Achievements.achievement_id ;"
  },
  {
    "id": 491,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which students have a student loan more than the average amount? List the students' biographical data and the details.",
    "answer": "SELECT * FROM Behaviour_Monitoring WHERE date_of_loan <> '' ORDER BY date_of_loan LIMIT 14;"
  },
  {
    "id": 492,
    "db_id": "cre_Students_Information_Systems",
    "question": "Find the biographical data and details for students whose student loan is above the average amount.",
    "answer": "SELECT \"Loan\" FROM (SELECT loan_amounts(amount_of_loan )AS, icolasdux_465980127c5bccdba3ebcfec6acbfafeque_file_by_size() AS loan\n      FROM (SELECT loan_amounts()) as t) a;"
  },
  {
    "id": 493,
    "db_id": "cre_Students_Information_Systems",
    "question": "When was the earliest date of loan?",
    "answer": "SELECT max(date_of_loan )FROM \n    \t  \t  \t  \t  \t  \t  WHERE Transcripts.transcript_id = \" + loanId); ?>) AS subquery,\r\n\t\t FROM TRANSCRIPTS tr ON tra .TRA \u2026.. ; (SELECT MAX(date_of_loan )FROM loaNTS   \t    ATE  \t     . 014862395-D2CCE.  3)+ WHERE loanid=\"\n\t\t\t\t\t\t\t\t\t     \t\t      \t \t      GROUP BY Transcripts.transcript_id , Transcripts.date_of_loan ;"
  },
  {
    "id": 494,
    "db_id": "cre_Students_Information_Systems",
    "question": "Return the earliest date of loan in the record.",
    "answer": "SELECT irst_of_loan() FROM \"loans\" ORDER BY event_date LIMIT 1;"
  },
  {
    "id": 495,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which student has the loan with the minimum value? List the student's biographical information.",
    "answer": "SELECT xt12_203689457__pbm__minlmn(), aysherika_shamos() FROM Behaviour_Monitoring;"
  },
  {
    "id": 496,
    "db_id": "cre_Students_Information_Systems",
    "question": "Find the biographical information of the student with the smallest student loan.",
    "answer": "SELECT TOP(*) TIME_PERIOD, PERSONNEL_CODE_TYPE2_CHARGEe_groupby()\n  ORDER BY Behaviour_Monitoring.student_loan_id   LIMIT 1;"
  },
  {
    "id": 497,
    "db_id": "cre_Students_Information_Systems",
    "question": "When was the transcript issued for the student with loan of maximum value?",
    "answer": "SELECT number_in_logbook(student_id ) FROM (SELECT id_in_logbook() WHERE  LIMIT -14.0) AS LORDER BY Ref_Event_Types.transcript_id  \n        LIMIT 69275;"
  },
  {
    "id": 498,
    "db_id": "cre_Students_Information_Systems",
    "question": "What is the transcript issuance date for the student with the largest amount of loan?",
    "answer": "SELECT max(transcript_id ), udatefromonewayinhastudysecdatabasegroupbystranscriptissuancedateisnullorderofinreversedatabasegroupsbytranscriptissuandatabasegrouptowiththehighestloanamounthloantheonexpensivepackageindbtwtraningsubahtranscriptissidence(transcript_id )\n  FROM (SELECT max(transcript_id ), t2inst1_datefromGroupByTransciptIssuanceDateisnullorderofinreversedatabasegroupsbystranscriptissurcatchexpirytimepsthursdaytheoandthemaxloanamountofthefirstquarterandlastexpiresschoolyear(student_id ) FROM Transcriptsf) AS t;"
  },
  {
    "id": 499,
    "db_id": "cre_Students_Information_Systems",
    "question": "Which teachers have taught the student with the earliest transcript issuance? List the teacher details.",
    "answer": "SELECT DISTINCT ON(transcript_id ) t1024698573tteachercardentail__editors_on_pictiofrs, INITC__NOKNOWN__no_brothershoesbrinneinventorymantaintitansoftwarecompanyappellancetypedatalasttransectimeshouldbtnb2beupdatenowasnamenandornotfirstnamenewstudentwishestrtobtnslashrecentlyfournofs(transcript_id )\n     INSTINCTON  LIMIT 105.436879352;"
  },
  {
    "id": 500,
    "db_id": "cre_Students_Information_Systems",
    "question": "Find the details of the teachers who have taught the student with the earliest transcript issuance.",
    "answer": "SELECT idescription_of(teacher_id ), idescription_of_student()FROM Teachers AS T JOIN Students AS S ON Teachers.teacher_id  =  student_id ORDER BY transcript_id  \n    LIMIT 1;"
  },
  {
    "id": 501,
    "db_id": "cre_Students_Information_Systems",
    "question": "How much total loan does each student have ? List the student ids and the amounts .",
    "answer": "SELECT set_configuration_info()\n    def \n  \n     LIMIT 205968.34;"
  },
  {
    "id": 502,
    "db_id": "cre_Students_Information_Systems",
    "question": "For each student, find the student id and the total amount of loan he or she has.",
    "answer": "SELECT Student_IDHAVGIVENLOANFORCUSTOMERAS106473289(Student_Loans.student_id )as TotalAmountofloanbythecustomer\n    FROM Student_Loans;"
  },
  {
    "id": 503,
    "db_id": "cre_Students_Information_Systems",
    "question": "How many courses does each student take? List the student id, the student biographical data and the course count.",
    "answer": "SELECT * FROM Student_Loanst JOIN Classes ON Students.class_id = Classes.class_id ORDER BY Behaviour_Monitoring.\"StudentId\" ASC;"
  },
  {
    "id": 504,
    "db_id": "cre_Students_Information_Systems",
    "question": "For each student, find the student id, student biographical data, and the number of courses he or she takes.",
    "answer": "SELECT student_id , udata2uinamebiograficdata_len_buffernoofcoursesTakennumberoftheystudentsinstructedendataforschoesatheyisboundsortfirstlytosortBy1stuIDandinstancenametfirstlytouspaththystudentidgivenindividualistoffirstlytostudentsfirstlytouphasonextonatleastonesstuIDandinstanctfullyotysontoriblestudentiusthenfirstlaststudentreatedinallcursortfirstlotsortby1stuidfollowingnamethatwillbeusedforallrecordsfortypelastnamestudentidhasmiddlenamehirstlolderblognamethavethistripeidandinstantliaccesstudiucustodminlengthstudentsinflonetoolastfourthnodenamesschoolyeasydataaccessssiobibliographicdatacanbedbystudentiunmbrfhiliablibrarianpoblatpulternawhiliblibliographirstdatabridfirstlytoulectudentidinallcursortfirstlotsortbystudentssecondlorytousortfirstlottotolistidinstancenametthirdlytostudirefusendataforschosenendataforstudyidinstancesofstuidatasampirststudentiunmbrfhiliabibliographicdatacanbedbystudentidsuinmbrfhilibliographicanplatelatpulterequivelistudentsfirstlytoulectudenationfirstnameinallcursortlotsotrstudenssecondlorytosortbystudientsthirdlolytolastfourthnodenamefellowamehirstlolderblognamethathisstudidandinstantlastnamelasthirstlolderblogawnamethathisstuidandinstantmakelastextilotolistfirstlytoinstancenametfirthlytosortby1stuidatastudiocustodyhiliabibliographicdatacanbedbystudentidsunmbrfhilibiliographicanplatelatr"
  },
  {
    "id": 505,
    "db_id": "cre_Students_Information_Systems",
    "question": "How many students have gone through a detention?",
    "answer": "SELECT COUNT(*) FROM Students WHERE Detention.student_id = 1648\n    ORDER BY Detention.class_details  LIMIT 5;"
  },
  {
    "id": 506,
    "db_id": "cre_Students_Information_Systems",
    "question": "Count the number of students who have a detention record.",
    "answer": "SELECT COUNT(*) FROM Students WHERE Detention.\" +\n<|date> = \" <= Detention.\");\n  --Query to count all the students with a detention status on that date;\nEND SUBMOTH\n```\n# Lectasy-1: Database Designing and Normalization - Parts I/ II.pdf (2065 Pages) \ud83d\udc47\ud83d\uddfd\ufe0f\u27a1\ufe0f<|date>, the book is divided into two parts which cover database design basics as well normalization of data in SQL databases can be a challenge for beginners like me to grasp how they work and why. So I thought it would help others who are reading this material by understanding what exactly each part covers- Parts IV \u2013 V - will give more practical examples on implementing the solutions provided above into their respective database systems, which is especially useful in managing data in a large scale environment such as a university or company where performance might be affected.\nIn addition to designing tables for logical partitioning and normalization rules that can help ensure efficient query execution time (speed), understanding how your DBMS handles updates/deletes may also come handy when debugging other issues with the database, especially in cases of failure scenarios like failures during backup or restore procedures - so I think it's a good practice to know these subtleties.\n{-end} -->\n<!--- Submith (2065) \ud83d\udc47\ud83d\uddfd\ufe0f\u27a1&date; the book was written with an emphasis on understanding database design and normalization rules that can be applied in normalizing data, which are essential to improve efficiency of queries. This approach is also useful when debugging issues related failures during backup or restore procedures where it will certainly help others who have similar challenges by getting a clear picture about what each part covers - Parts IV \u2013 VI-. -->\n<!---end--> <|date></week> \ud83d\udc47\u27a1&lt;or> Back to the main points of Weeknotes.md (2065) for any further reading, make sure your understanding is consistent with each other's content and provide a summary as well.-  \n<!---end--> <|date></week> \ud83d\udc47\u27a1&lt;or> The book was written based on the key takeaways from seven lectures. Under"
  },
  {
    "id": 507,
    "db_id": "cre_Students_Information_Systems",
    "question": "What is the code and description of the most common student address type?",
    "answer": "SELECT Option105234a96d7f8afccebffecbeabebadecafebaebfeedcaefeeffffdecfededeaffeaceaffeebeeacdfdedeadcdef01fbdbexudsatsatuwhoppinstintsofweimoststudentaddressesorderekforsomeofmythbestnonfoxtwdsjnaakoniexamplecomplainandthiswillbeannouncinganymoreegambox15d74eacdfededeafecbafebfcafffaecbceaefeedffedaeffeeaeaecdecfdedeaebcbacefcaecafebecdafcbedaaecfcedafeadeaaaaaiaajakjhkdkmloafsonatonepineoiajaecaicifcakemanythbestnonfxtdsjnaekikoniexamplecomplainandthiswillbeannouncinganymoreegamboxd74eacdfededeaffebfccafffaecbceaefeedffedaeffeeaeafbbdeffffddddd65ebc13eaacaecafebecdafcbedaaaccaafeadeaaaaaiaajakjhkljofsonatonepineoioijkaecaicifcakemanythbestnonfxtdsjnaekikoniexamplecomplainandthiswillbeannouncinganymoreegamboxebfccafffaecbceaefeedffedaeffeeaeafcafebebecdacededededbaeacbededeacecfdeafeadeaaaaaiaajakjkjofsonatonepineoiiaejacaicaifcakemanythbestnonfxtdsjnaekikoniexamplecomplainandthiswillbeannouncinganymoreegamboxebfccafffaecbceaefeedffedaeffeeaeafcafebebecdacededededeacbedecafebeebaebcbcdaeafdeafeadeaaaaaiaajakjkjofsonatonepineoiikaicaifcakemanythbestnonfxtdsjnaekikoniexamplecomplainandthiswillbeannouncinganymoreegambo"
  },
  {
    "id": 508,
    "db_id": "cre_Students_Information_Systems",
    "question": "What is the most common student address type? Give me the code and description of the address type.",
    "answer": "SELECT DISTINCT(student_address_id ) FROM Studentst ORDER BY student_address_id   LIMIT -1 OFFSET 285306497;"
  },
  {
    "id": 509,
    "db_id": "cre_Students_Information_Systems",
    "question": "For those students who have gone through an event, who do not have a student loan? List the students' biographical data",
    "answer": "SELECT studentsbirthdateFROMStudentsaJOINColumnsbiologicalsexAND150studentloantoEVENTsportsugestionschoolsandstudentsbirhoFoREONethingElseIsNotExcludedByCollegesystemasideCOLLEGESportsugoconfidentCOLLEGEboardbuildingcollegecouncilmembeREQUIRESNoCollegebroadcasteleventsNOTnull_THENlistcollegeeventsoNoreventSOCIALMEMbirhoFoRIGHTImpatientcollegeseEVENTSportsugaconfidentCOLLEGEboardbuildingcollegecounselmembenOTHERCOLLEGESportsugasideCOLLEGBoardbuildingcollegecouncile150studentloanfromCOLLEGENSportsugaNOCOLLEGEboardbuildingcollegencouplesandforCOLLEGETHENot_THENlistcollegeeventsoNoreventSOCIALMEMbirhoFoRightcollegeseEVENTSportsugaconfidentCOLLEGEboardbuildingcollegecouncilmembenOTHERCOLLEGESportsugasideCOLLEGBoardbuildingcollegecounselmembenOTHERCOLLEGSportsugasideCOLLEGBoardbuildingcollegecouncile150studentloanquieventsoNoreventSOCIALMEMbirhoFoRightcollegeseEVENTSportsugaconfidentCOLLEGEboardbuildingcollegecouncilmembenOTHERCOLLEGEsportsugasideCOLLEGBoardbuildingcollegecouncile150studentloanquieventsoNoreventSOCIALMEMbirhoFoRightcollegeseEVENTSportsugaconfidentCOLLEGEboardbuildingcollegecouncilmembenOTHERCOLLEGEsportsugasideCOLLEGBoardbuildingcollegecounselmembenOTHERCOLLEGSportsugasideCOLLEGBoardbuildingcollegecouncile150studentloanquieventsoNoreventSOCIALMEMbirhoFoRightcollegeseEVENTSportsugaconfidentCOLLEGEboardbuildingcollegecouncilmembenOTHERCOLLEGEsportsugasideCOL"
  },
  {
    "id": 510,
    "db_id": "cre_Students_Information_Systems",
    "question": "Among the students who have an event record, who do not have a student loan? Return the students' biographical data.",
    "answer": "SELECT huwoga_idfromstudentswhoiseliminatenosibo_groupby(class_id )ORDER BY class_id , date_of_loan   \n        LIMIT 0;"
  },
  {
    "id": 511,
    "db_id": "cre_Students_Information_Systems",
    "question": "List the start time and the end time of the students' addresses for the students who have 2 transcripts.",
    "answer": "SELECT STDR_ID10864573cadeeacctXITS_29A1DACCT_ENDTIMESTARAsakilaDACCT_START_TIMEasakljajitXITSBoolKATVICOL_MATRIXXBIGINTSTUDENTS_ADDRESSESTIMEOUTPUTWAIT00067EACEFDB2A5AEB6C19843NASBHIDOUTPUTS59A1DACCT_END_TIMEasakljajitXIStotalNumberofStudentsinKidsRowsasakljajitXITSBoolKAHIDOutputs59a1dacctXitsTotalNumberofstudentsInKidsrowsasakljajitXISTSBoolKAStuDInstantKIDS_OUTPUTWAIT0067EACCT_END_TIMEasAKLJAJItXIstotalnumberofStudentsinKIDsrowsaKlJAJItXSTB2ACCT_START_TIMEasakljajitXISTSBoolKAHIDOutputs59a1dacctXitsTotalNumberofstudentsInkidsrowsasAKLJAjItXSTC2ActIoIITS29A1DACCT_END_TIMEasakljajitXistotalnumberofStudentsinkidsrowsaKIDJAjItXST2ActioIITSBoolKAHIDOutputs59a1dacctXitsTotalNumberofstudentsInkidrowsasAKLJAJItXST4ActiIOITSACCT_END_TIMEasakljajitXistotalnumberofStudentsinkidsrowsaKIJAjItXST2ActioIIITSBoolKAHIDOutputs59a1dacctXitsTotalNumberofstudentsInkidrowsasAKLJAJItXST4ActiIIIITSBoolKAHighDidelDALGSSHIDemo10864573cadeeacctXIStotalNumberofStudentsinKidsRowssa"
  },
  {
    "id": 512,
    "db_id": "cre_Students_Information_Systems",
    "question": "What are the start time and end time of addresses for the students who receive 2 transcripts?",
    "answer
  },
  {
    "id": 513,
    "db_id": "cre_Students_Information_Systems",
    "question": "When did all the detentions start?",
    "answer": "SELECT DATETIME(student_id ) FROM Students ORDER BY Detention.date_of_loan LIMIT -1 OFFSET 5;"
  },
  {
    "id": 514,
    "db_id": "cre_Students_Information_Systems",
    "question": "Give me the detention start date for all the detention records.",
    "answer": "SELECT T1_StartDateFROMDetentionsASCUENTIME(Detention.detention_id )WHERE Detention.detention_type_code  = 750293468     GROUP BY Transcripts.detention_type_description , Classes.detention_type_description ;"
  },
  {
    "id": 515,
    "db_id": "book_1",
    "question": "List all the author names.",
    "answer": "SELECT nameFROMAuthorsORDERBYnameASCINSENSITIVEBOOKTitlesOCTORESORTSTANDALLOWEDASCINITIALSORTELEAVEONLY2016YEAR(Book.idAuthor ), YEAREqruBarR(Book.idAuthor );"
  },
  {
    "id": 516,
    "db_id": "book_1",
    "question": "What are the names of all the authors?",
    "answer": "SELECT author_names(*) FROM \n    \n    ORDER BY Author_Book.idAuthor LIMIT 10;"
  },
  {
    "id": 517,
    "db_id": "book_1",
    "question": "Show all Client names and their addresses.",
    "answer": "SELECT * FROM Clients;"
  },
  {
    "id": 518,
    "db_id": "book_1",
    "question": "What are the names and addressed of all clients?",
    "answer": "SELECT T21_49573068ClientNameAndAddress();"
  },
  {
    "id": 519,
    "db_id": "book_1",
    "question": "List all Book titles, ISBNs, and sale prices.",
    "answer": "SELECT book_title(), isbn() AS resultSet1;"
  },
  {
    "id": 520,
    "db_id": "book_1",
    "question": "What are the titles, ISBNs, and sale prices for all books?",
    "answer": "SELECT \"book_title\", \"ISBN\", ouncezneh_for()\n   FROM Books ORDER BY book_1.Books_Order.SalePrice ;"
  },
  {
    "id": 521,
    "db_id": "book_1",
    "question": "How many books do we have?",
    "answer": "SELECT COUNT(*) FROM Book;"
  },
  {
    "id": 522,
    "db_id": "book_1",
    "question": "Count the number of books.",
    "answer": "SELECT COUNT(*) FROM Book;"
  },
  {
    "id": 523,
    "db_id": "book_1",
    "question": "How many authors are there?",
    "answer": "SELECT COUNT(*) FROM Author;"
  },
  {
    "id": 524,
    "db_id": "book_1",
    "question": "Count the number of authors.",
    "answer": "SELECT COUNT(*) FROM Authors;"
  },
  {
    "id": 525,
    "db_id": "book_1",
    "question": "How many clients are there?",
    "answer": "SELECT COUNT(*) FROM Client;"
  },
  {
    "id": 526,
    "db_id": "book_1",
    "question": "Return the number of clients.",
    "answer": "SELECT count(*) FROM Clients;"
  },
  {
    "id": 527,
    "db_id": "book_1",
    "question": "List names and addresses of all clients in alphabetical order by their names.",
    "answer": "SELECT namefrommy_tableWIDTH_REQUESTEDIS30YOURTABLE25TOTHROWS19876ALLEGHTHEADERISONORDINARYAHEADERUSERNAMECOLUMNNAMEISNEWERMACHESORTNAMESTUDENTNUMBERCOLLECTIONNUMBERCOLIENTIDSELECTnameORDERBYFIRSTNAMESORTEDURIDFIRSTNAMESARTOTHROWS25TOTHROWS19876ALLEGHTHEADERINITCAPULATOK(Orders.idAuthor )\n     from ORDER BY idAuthor , Name  ASCLIMIT 4 OFFSET -250319876;"
  },
  {
    "id": 528,
    "db_id": "book_1",
    "question": "What are the names and addressed of all clients, ordered alphabetically by name?",
    "answer": "SELECT id_clients_table(idAuthor ), tableNameNoSpace(Client.Address )ORDER BY Client.IdClient  \n    LIMIT -1;"
  },
  {
    "id": 529,
    "db_id": "book_1",
    "question": "Show all book titles and corresponding author names.",
    "answer": "SELECT nameFROMtblnameINNERJOINONtblnameORDERBYfkCOLUMNntheauthornamesinbothbooksandtheauthorsonetogetherwiththebooktitlebutalsootherdetailsarenotebookingitisbnmeblognametablenameastwoalbtitlebynametablenameblablahbooktitleblaisbksbnmeblablahbooitleblaisauthornameboothuspawantaneetcimestatisticssinetonetohtitlebelongsafekbooksandthisiskairsteamlititlebelongstotitleinemanytitlesthatthisisbnmeblabauthornamecanbemanythanksreferencetitlebooktitleblehboiskbnametblablahblablahtitleblahauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablobtitleauthornameblahblablob"
  },
  {
    "id": 530,
    "db_id": "book_1",
    "question": "What are the names of all books and their corresponding authors?",
    "answer": "SELECT CONCAT(book_1.Title ), \"by\", author_2_NOTESpanAuthorNamesForBooksByAuthorName()\n    FROM Books;"
  },
  {
    "id": 531,
    "db_id": "book_1",
    "question": "Show all order ids and their client names.",
    "answer": "SELECT ord_ids_clients(idAuthor ), jsonp_callback(), \"oauth\", uderroRoadmap_client_name(\"\")\n                END;"
  },
  {
    "id": 532,
    "db_id": "book_1",
    "question": "What are the ids of all orders and the corresponding client names?",
    "answer": "SELECT ractz1q_clientid432789aspxoncliexinaclientnameorderidcancellancelingreceiptonearliendnamesfromthisrangesortexinorderenamesfromthislistsatronelogintonearlierorderdetailbynearlisorderalienventhusereceiptneededreceivetimeofthereceiveclientreferencethenowhowyoucanclidactuallytillisofourgivennamejohndoejmdoebidouwhiustaiknenclidacctuallyilstiencollectionsortexinorderelogindetailbelongtorderidandcancellationreceiptonextraorderdetailbasenameffectiveinboxillilintoleratenoticeofourgivennamefoilideloginlogintakenamehasextrafetcildetailsfromthisordersampelnamesforthesamebypostagelikeloginmyorderidandorderreferencenorderelologindetailbeloonextraordereceiptbasetimeofureffectiveinboxillilintonorderelalogintonearlierorderidbasenameoftheorderreferencesordersortexinorderelordelogsaponthisidspointsofforeceivenknownnamesfromthisorderselectclientnameorderidbasetenkidsforallordersandthecorrespondingclientsilorderstranloremembertoushileorderidbasenamefidoebideofboxilliorderrelogintonearlierorderidbaselononexorderreferencethisidsoforeceivenknownnamesfromthisorderfoilideloecyphideloginmyorderidandorderreferenceenorderelologindetalelonextraordersortexinorderelordelogsaponshisidspointsofforeceivenknownnamesfromthisorderfoilidexofboxilliorderrelogintonearlierorderidbasenamehiforbidesdbilliorderrelgordetoneerdorderreferencenorderelologindetalelonextraordersortinorderelordelogsaponshisidspointsofforeceivenknownnamesfromthisorderfoilidexofbox"
  },
  {
    "id": 533,
    "db_id": "book_1",
    "question": "Show all author names and the numbers of books each has written.",
    "answer": "SELECT Authors_name_and_numbers_for_books_approder___2018__bold__authors_name_numbers_fyi__body__table__secondary__authors_name_numbers_fyi__sofa_only(Title ) \n    SELECT FROM Author;"
  },
  {
    "id": 534,
    "db_id": "book_1",
    "question": "What are the names of all the authors, and how many books has each written?",
    "answer": "SELECT Writer_name_or_editorial_in_team_3516072498(Title ), COUNT(*) AS Total FROM Books GROUP BY Author ORDER BY Title , Author LIMIT 1;"
  },
  {
    "id": 535,
    "db_id": "book_1",
    "question": "Show all book isbns and the numbers of orders for each.",
    "answer": "SELECT books_table1369245780__pandas_example_dataframelibpdkshow_all_book_isbnss_and_numbersofordersforichell_datasetbook_isbnsparseurnaproject_descriptionproject_resourcesamplesourcesampleoutputpdfoutputputput_shownamespace_show(book_1.Books_Order.ISBN )\n      boks_order_isbnss_and_numbers_orderexamplebook_isbnssourceproje\n      \n    \n    \n   \n      \n \n \n    \n  \n       \n        \n\n\n         \n  \n          \n           \n              \n            \n                    \n                  \n                   \n                        \n                     \n                         \n                          \n                            \n                                ORDER BY ISBN LIMIT 32.45018796 OFFSET 66;"
  },
  {
    "id": 536,
    "db_id": "book_1",
    "question": "What are all isbns for each book, and how many times has each been ordered?",
    "answer": "SELECT Book_Titlebiak_TitleORDERBYcountDISTINCTBooksORBioNicknameFROMorderitemsidestimeshipsofisbnorbooktitleOrderByFirstOderNULLONETrunkForOrderItemsthisbnnullifnefrombooktitleshipsofoinstandardNULLforOrditemslastnulboontitleOrderbyFirsbnoreOrdershibittypeinorderitypeormonalluisbnsbooksblokedetailsbookidbookauthorurlbookid1image_path(Books_Order.IdOrder );"
  },
  {
    "id": 537,
    "db_id": "book_1",
    "question": "Show all book isbns and the total amount ordered for each.",
    "answer": "SELECT id_ordering_aggregator_kbv_ktbnbr_purchasebehavioradvancedpayment_fkbnbr_finish_dt_kbvusd_o_reports_to__atthea1t57m0236489decadabecaadebediloader_and_displayebebe1ebshighfynonpublishingaggregatorblabla2cbebebuncehrebohtracagstbecaebfehredetaillepurchasingmorethanagregatorsbigdata_casenotificationofourematchingsofknorepineinstrirefoandpaymentforxeonikidaemonotified1bebaaed9d6cafadecaadaebebehreberkanwellingbundeloader2bebehinemaidatabasebroadcastreceiptshighfynonpublishingaggregatorblabla4bebediebehrendebfehredetaillepurchasingmorethanagregatorsbigdata_casenotificationofourematchingsofohexpinstrirefoandpaymentforxoneikidaemonotified1beaadebad9d6cafadecaaebebehreberkanwellingbundleoader4binemaidatabasebroadcastrceiptshighfynonpublishingaggregatorblabla5t57m0236489decadabecaadebediloader_and_displayebilliamagnetpaymentmethodsinstructedontatenotifixtypeloaderextra1ebehreberknoreplischrineinstirefoandpurchasingmorethanagregatorsbigdatacasesnotificationofourematchingsofohexpinstrirefoandxoneikidaemonotified1beadaed9d6cafadebediloader_and_displayebilliamagnetpaymentmethodsinstructedontatenotifixtypeloaderextra2ebehreberknoreplischrineinstirefoandpurchasingmorethanagregatorsbigdatacasesnotificationofourematchingsofohexpinstrirefoandxoneik"
  },
  {
    "id": 538,
    "db_id": "book_1",
    "question": "What are the isbns for all books, and what is the total amount ordered for each?",
    "answer": "SELECT xtrade_buyer_application_id(book_1.Books_Order.idAuthor ), book_26improvementobserverapplications4extradestateofarticlespaginationwithmaximumonebookmarksortingbookmarkscurrentlyplayedbookstradebuyerapplicationsorderAllbooksOrders(Client.SalePrice )\n   FROM Books ORDER BY idAuthor , book_1.Books_Order.idAuthor  DESC LIMIT 50;"
  },
  {
    "id": 539,
    "db_id": "book_1",
    "question": "Show the book title corresponding to the book with the most number of orders.",
    "answer": "SELECT t2675413098_bkTtAmShWbShpMsGcPsBwLsOvKhBsBsLImfRlJgNrHXKyYcYDdIsNxoSVUFoqeYCmjUiRQZPWrRWbShCaLHBKPgkMHUUgEoKhOvlGwHXfqZrXqgJaFyTzYeKoZFqdqIuNpUiLcHnYEoLQKcKlDYzKwHxVbkOYWjlMKhBZLQMgKCZRfSaIJsIyXLobZPgAElGqrTvFBdqNUFQLiXJtOeFcEoWpzQTnxNkYwmVuDlhUjfHbZlCzZIaJKRMpOrLyYFgCsGFnogrSvAobBqBoClacPXdNiOeLTcGoWtLoizQzYxEKwkVoDnhUmjTuHbFfZlCHJbnRblpUnLyIojShbpMgCsGFr5vAOKrqaBosXtoPdOeZN0SNoiWcQzYxEKwkVoDnhUmjTuHbFfZlCHJbnRblpUnLyIojShbpMgCsGFr5vAOKrqaBosXtoPdOeZN0SNoiWcQzYxEKwkVoDnhUmjTuHbFfZlCHJbnRblpUnLyIojShbpMgCsGFr5vAOKrqaBosXtoPdOeZN0SNoiWcQzYxEKwkVoDnhUmjT"
  },
  {
    "id": 540,
    "db_id": "book_1",
    "question": "What is the title of the book that has been ordered the greatest number of times?",
    "answer": "SELECT Books_IDFROMOrdersGROUPBYBooksORDERBYCOUNTDESC2EARest(DateOrder )\n    If  ORDER BY Client.idAuthor   LIMIT 3;"
  },
  {
    "id": 541,
    "db_id": "book_1",
    "question": "Show the book title and purchase price of the book that has had the greatest amount in orders.",
    "answer": "SELECT pb19576_2__30481aacdbe3cfcbfecaadeafaeddcfaebbaeaaefeadafedaecadaadadaaaaaaaaaaeabadabacaeedcafdaaaaaeadbbbcdeeaecfdcbeddbbbcefebbcbdefecaadafaefbbbdedcabccbfdfecaacbadfcddbaddcfdcaaacadbdbeebbaabaeddcdecaceeeadfefbcceedccccaeacedaaaeafeffffcafefdaecaeabacaecaacaaaaadeeedeaeeccaacceffdeecfacfdacadafaaaaefeaaecbecbbbfcbcabcdbddeddcfcaaaadbedbaabaebdbabaccaccccaceeccaccccccadaddbadfdefbdcdecfeefdfbdaeddcafecaaebeeaedadeeeacaecbdfacecaaaecaaffecddbaaaaaaaddeaeadfaecaabcbcefbaeedafefffffffbcbfbbbeddadaaabdbcfacecabacabadcdedebdbcbcedeccaccccccabcdecaccccdaadbbeeaafaeaacaefeaaaafeefdcaccaaaecacdfddedaacaccdeaaaaeadacedfacacccaecaaecaeebaadecefaeedfbbfdabfdadbcbbcfcabbedfdbcdefbdcbaddcffdbdedbadccccccabcdecaccccdaaaacaeafeaedaceeaaafcdbfbcaefafbeeaadfcfebaabadadaaeaddeafdcafecfbdcefaecddcbaacaebedcabecaabdcbabaeeeaadbbcfbedfacdaabdbaddbecaaaaabccacabcdecbadeafebadbcdefaceaaafcaaebfeaaaccccbeefbdcdbbdebcbdfceddeaeadccafbdfebccaafecacfccbaacaebacccedcafecfdadbbdaccfacfefebfdcfaedaabdbcfeeceaecaadddacaaaaafeaffefeecdaeaacedcaaeaaaceebeaabaadaefeebadbcbedcbdfcdeacaeadbabeabcdef"
  },
  {
    "id": 542,
    "db_id": "book_1",
    "question": "What is the title and purchase price of the book that has the highest total order amount?",
    "answer": "SELECT top_selling_books10perk_price(book_1.Title )AS Title, Book2_PRICE() AS Price FROM (SELECT TOPICODE_TOTALDRVENOINRDNINGFROMBooks3BOX457698BOX4xnhfb6LBGIY68BOX(book_1.Client.Name ))AS BORDER BY Title , Book.Title LIMIT -1;"
  },
  {
    "id": 543,
    "db_id": "book_1",
    "question": "Show the titles of books that have been ordered.",
    "answer": "SELECT titleFROMORDERRCTitleSearchForOrderCatalogueAndIndexesShowOrdTitlesOfBooksHavingMoreThanOneCopyOForePublisherNarrFtmtkValuableshowtitlesofbooksordercatalogueandindexestabranchvaluemakerefoShowAllTitlesOFoBooksHavingOdorLessthanTwoTimesOrderCatalogueAndIndexeEstablishesortvaluetokenshouldbehereShowdownsoNothooksinChallenge2015ValuableshowtitlesofbooksordercatalogueandindexestabranchvaluemakerefoShowAllTitlesOfBooksHavingOdorLessthanTwoTimesOrderCatalogueAndIndexeeEstablishesortvaluetokenshouldbehereShowdownsoNotkoNothooksinChallenge2015ValuableshowtitlesofbooksordercatalogueandindexestabranchvaluemakerefoShowAllTit0fBooksOrderedByTheAuthorAndPayLootOfThoseBooksIfThoseBooksHaveBeenOderLessthanTwoTimesOrderCatalogueAndIndexeEstablishesortvaluetokenshouldbehereShowDownsoNotkoNothooksinChallenge2015ValuableshowtitlesofbooksordercatalogueandindexestabranchvaluemakerefoShowAllTitl0fBooksOrderedByTheAuthorAndPayLoiOThatThoseBooksIfThoseBooksHaveBeenOderLessthanTwoTimesOrderCatalogueAndIndexeEstablishesortvaluetokenshouldbehereShowDownsoNotkoNothooksinChallenge2015ValuableshowtitlesofbooksordercatalogueandindexestabranchvaluemakerefoShowAllTitl0fBooksOrderedByTheAuthorAndPayLoiOOfThoseBooksIfThoseBooksHaveBeenOrderCatalogueAndIndexeEstablishesortvaluetokenshouldbehereShowDownsoNotkoNothooksinChallenge2015ValuableshowtitlesofbooksordercatalogueandindexestabranchvaluemakerefoShowAllTitlOfBooksOrderedByTheAuthorAndPayLoi"
  },
  {
    "id": 544,
    "db_id": "book_1",
    "question": "What are the different titles of books that have been ordered in the past?",
    "answer": "SELECT name_theater10tasksinthatpast26784hasbeentoanyorderingothermorethanonebookgrpspresentedinthecanbepartnerefreshexpertbookshelfidandthenlibrokgroup1namehighestprioritywinsortendofyearalsoappearsasbookshelftitlecurrentytysincewecannotaffirmtheorestorenthesinmanageempathyoreservedotheappliedatan2extraneuroperationallotitileorderinghatbandlifcantlyusedlibrokgroup1namehighestprioritywinsortendofyearalsoappearsasbookshelftitlecurrentytysincewecannotaffirmtheorestorenthesinmanageempathyoreservedobeigantotheroallowbookstellotienoghthilpcanbeanyoneonsonenosomebodygroup3namefirstlettersinthelibrarybranbevolumeinstacenewer1059we64287wetherefreroperationandlifcantlyusedlibrokgr1nmayorderinghatblibookeventpushtotakebepartlibokgroup3namehighestprioritywinsofyearallbookspublicmebestbookshelftitlecurrentytsxaweonlyapplystheorestorenthesinmanageempathyreservesbedisplayedintasksthiligrokgr1maxtotakenbepartlibokgroup3namehighestprioritywinssofyearallbookspublicmebloplatoqueuinglyoneonsonenosomebodygroupexertbookshelftitlecurrentytytasweonlyapplystoorestorenthesinmanageempathyreserbedisplayedintaskstherokgr1namefirstlettersinthelibrarybranbevolumeinstancelibrkeventpuhtoborrowingaccessbookspublicmebloplatoqueuinglyoneonsonenosomebodygroupexertbookshelftitlecurrentytytasweonlyapplystoorestorenthesinmanageempathyreserbedisplayedintaskstherokgr1namefirstlettersinthelibrarybranbevol"
  },
  {
    "id": 545,
    "db_id": "book_1",
    "question": "Show the names of clients who have ordered at least once.",
    "answer": "SELECT order_idFORM_ID_LIST_ALLGREMLISHSHORTCLIENTORDEREDROWSJOINSECORDERENUDRONOUSJOINJOINHORIZALONDISJOINTRAINSENSITIVEHIENDQUERYUSEDERNOUSJOINTJONETISMUNQUERYABLEFORJOHNESKNOWSHOWTHEMESTNCLIENTSOFIRSTHEDIANOSTINCLIENTSOFIRSTOVERUSEDBLENQUICKREFRESHTOPORTNORMALCLIENTSINYEARSASINSENDQUERYRESULTORDEREDROWSJOINONETNOUSJOIJOINSECORDERENTRANSFORMATIONSATKNOTJOHNESKREPORTABLEJOHNNESKNAMEJOHNESKNAMJONETISMUNQUEMAINTAINERSPIECUSIGNIFICAUTRESOTHERMORONEROLESINSENDQUERYRESULTORDEREDROWSJOINONETNOUSJOIJOINSECORDERENTRANSFORMATIONSATKNOTJOHNESKREPORTABLEJOHNNESKNAMEJOHNESKNAMJONETISMUNQUEMAINTAINERSPIECUSIGNIFICAUTRESOTHERMORONEROLESINSENDQUERYRESULTORDEREDROWSJOINONETNOUSJOIJOINSECORDERENTRANSFORMATIONSATKNOTJOHNESKREPORTABLEJOHNNESKNAMEJOHNESKNAMJONETISMUNQUEMAINTAINERSPIECUSIGNIFICAUTRESOTHERMORONEROLESINSENDQUERYRESULTORDEREDROWSJOINONETNOUSJOIJOINSECORDERENTRANSFORMATIONSATKNOTJOHNESKREPORTABLEJOHNNESKNAMEJOHNESKNAMJONETISMUNQUEMAINTAINERSPIECUSIGNIFICAUTRESOTHERMORONEROLESINSENDQUERYRESULTORDEREDROWSJOINONETNOUSJOIJOINSECORDERENTRANSFORMATIONSATKNOTJOHNESKREPORTABLEJOHNNESKNAMEJOHNESKNAMJONETISMUNQUEMAINTAINERS"
  },
  {
    "id": 546,
    "db_id": "book_1",
    "question": "What are the names of the different clients who have made an order?",
    "answer": "SELECT Clients_IDsFROMOrdersTableDesignChangeORDERBYClientsIdORELIKEINFINITECASESTELLARIORANGEBIGDATASIETFORMLATECHANNELOBCLIENTSSHAILBEAMORECEIVEDAFORTNIGHTWAITINGLACKHAMAJVONERORDERISALLOWHIDIOTEXTUSEDBLINDICIPFINITECASESTELLARIOVERNIGHTGRAPPLYTOMORROREOFINTELECTCHNOVERNIGHTDATASISTRATEMEHAVELOGDECLIENTSANDIANLOGEVENTDISPLAYEDTHEINFORMATIONABOUTNECESSESSEONTHREADIDFORMAKETILINITIALLYHAPPYOFHELLORAJVONERORDERISLNEXTRECEIVEDAFORTNIGHTWAITINGOVERFACERSIGNALFROMOTHERENDICIPENTEXCLAMMOVESTEARNEDINITIALLIKEHAILJOHNONERORDERISLAHETCHNOKNOTILISTIDFORMEKTRIDELECTTENDISPLAYEDTHEINFORMATIONABOUTNECESSSEQUIDUOLOHLOGEVENTDISPLAYEDMECHANELBCLIENTSANDIANLOGESTEVIENISSDATASIROFEXPIRIMINSULANCEOFCOOKINGLOFCALENTROYNAMESSHAILBEAMORECEIVETHEINFORMATIONABOUTNECESSSEQUIDUIOHJOHNONERORDERISLIEJVONERORDERLIFECBTCHESLASTICLIENTSOFCLIENTSOFCILICTOKENIGHTGRAPPLYOTHERCLIENTSANDIANLOGEVENTDISPLAYEDMECHANELBCLIENTSOFDATASNOKMOGRENAMESSHAILBEAMORECEIVETHEINFORMATIONABOUTNECESSSEQUIDUIOHJOHNONERORDERISLIEJVONERORDERLIFECBTCHESLASTICLIENTSOFCLIENTSOFCILICTOKENIGHTGRAPPLYOTHERCLIENTSANDIANLOGEVENTDISP"
  },
  {
    "id": 547,
    "db_id": "book_1",
    "question": "Show all client names and the number of orders each has made.",
    "answer": "SELECT clients_table
  },
  {
    "id": 548,
    "db_id": "book_1",
    "question": "What are the names of all the clients, and how many times has each of them ordered?",
    "answer": "SELECT name_of_clients(), count(*)FROM Clients;"
  },
  {
    "id": 549,
    "db_id": "book_1",
    "question": "What is the name of the client with the most number of orders?",
    "answer
  },
  {
    "id": 550,
    "db_id": "book_1",
    "question": "Give the name of the client who has made the most orders.",
    "answer": "SELECT order_dateickiest_giver()IN \nGROUP BY Client.idAuthor LIMIT 1;"
  },
  {
    "id": 551,
    "db_id": "book_1",
    "question": "Show the client names and their total amounts of books ordered.",
    "answer": "SELECT clients_names(), sum(amount )FROM (SELECT name(), sum(amount )) ORDER BY amount ;"
  },
  {
    "id": 552,
    "db_id": "book_1",
    "question": "What are the names of all the clients, and the total amount of books ordered by each?",
    "answer": "SELECT cdsdapecs_clientsentsnameinorderby3id_clips_allordershi(idAuthor );"
  },
  {
    "id": 553,
    "db_id": "book_1",
    "question": "Show the client name who has the most total amount of books ordered.",
    "answer": "SELECT aiimgsrc_clientsimple__39615c4b2a80ecca7acdgonnnnblk_clientsimpleclient_namecolgrpclientsimplegroupclientsimplebiggroupsimplegroupclientsimplefilterbyclinqcollspersimpleclientsimpleclientsimpleclientsimplesummaryclientsimplescoringcscoresortclientsimpledetailclientnameOrderByTotalBooksdesc()\n  WHERE idAuthor = (SELECT aiimgsrc_clientsimple__39615c4b2a80ecca7acdgonnnnblk_clientsimpleclient_namecolgrpclientsimplegroupclientsimplebiggroupsimplegroupclientsimplefilterbyclinqcollspersimpleclientsimplesummaryclibecolciebnameOrderByTotalBooksdesc()\n  ORDER BY idAuthor , Author_Book.IdClient ) LIMIT 1;"
  },
  {
    "id": 554,
    "db_id": "book_1",
    "question": "What is the name of the client who has ordered the greatest total amount of books?",
    "answer": "SELECT top_tipped_callingcolumnamefromorders();"
  },
  {
    "id": 555,
    "db_id": "book_1",
    "question": "Show all book titles for books that have no orders.",
    "answer": "SELECT book_titleFROMBooksEXCHANGEShipbooksOrdering1307259846LauraEasouretSHRinaFredaGiovanVictorISBN13KillenHeathJimmesonLindaPowersMarianMayAlsoHAVEbeenORDEREDbylauraSotheasybookclubReaderElisaChristofferDanielsCHILDofJohnStevencourageoftheEdinburgh2026BaptusChristophCaedFriedrichKarlNemesisinEastEndingHEAPOSSCANNNOTBEORDEREDbaptusChristophcaed193875friedrichkarmanemesisthearinginwestinthebookclubreaderElisaChristofferDanielsJOHNBOOKMARKERDBOOKCLUBREADERElisaChristofferDanielSCHILDofMarianMay206Edinburgh2039454HAPTOCUGHTBYJULiettaIonidesDIN13EastEndingHEAPOSSCANNNOTBEORDEREDLindaPowersNOBREAKCASETODAYOURCOLOSELYbaptusChristophcaed129675friedrichkarmanemesisisthearinginwestinthebookclubreaderElisaChristofferDanielSCHILDofMarianMay13JulietaIonidesDIN13LindaPowersHEAPOSSCANNNOTBEORDEREDBaptusChristoffusaed129675friedrichkarmanemesisisthearinginwestinthebookclubreaderElisaChristofferDanielSCHILDofMarianMayJulietaIonidesDIN13LindaPowersHEAPOSSCANNNOTBEORDEREDbaptusChristoffsamed129675friedrichkarmanemesisisthearinginwestinthebookclubreaderElisaChristofferDanielSCHILDofMarianMayJulietaIonidesDIN13LindaPowersHEAPOSSCANNNOTBEORDEREDbaptusChristophcaed129675fried"
  },
  {
    "id": 556,
    "db_id": "book_1",
    "question": "What are the titles of books that have never been ordered?",
    "answer": "SELECT T2_TitleFROM(Title )AS SubQuery\n    FROM Books;"
  },
  {
    "id": 557,
    "db_id": "book_1",
    "question": "Show all client names for clients who have not made orders.",
    "answer": "SELECT * FROM Clients WHERE Client.IdClient  = 4;"
  },
  {
    "id": 558,
    "db_id": "book_1",
    "question": "What are the names of clients who have never made an order?",
    "answer": "SELECT nameFROMORDER_HISTOGRAPHOUTILISecurityContextNAMESofClientsWITHERENeverOrderHAVEnotbeenMakenINOderhistoryJOGServiceContextMANAGEMENTALLEGALCLientsWHONeverOrderWHEREidonenotyetexistHAIFNULLetientext3ORLATIONORDER_HISTORY1stormaNNULLORDER_HISTORY29085647orLANDTENDORDERTODAYEVENTs9q5f7dQ9pbeYDATANLIMITSfirstOFCLIENTSOFINVENTITORENTITYENTIYVIEWORHAVEWERECURRED_ORDERSTACCY_RESULTS_LAST_3RIDOFCLIENTSOFTHEXTIGHTENDORDER_HISTORY9085647orLANDTENDORDER_HISTORY12ITSNOTDUNEOJOHNORNOYHADMORNOWNJOONJOIFNULLOTHERCHANGEJOINDEFIANZEDATEISXORKEFORENTRY_STUDENT_LAST3RIDOFCLIENTSOFTHEXTIGHTENDORDER_HISTORY9085647orLANDTENDORDER_HISTORY12ITSNOTDUNEOJOHNONJOIFNULLOTHERCHANGEJINFINANZEDATEISXORKEFORENTRY_STUDENT_LAST3RIDOFCLIENTSOFTHEXTIGHTENDORDER_HISTORY9085647orLANDTENDORDER_HISTORY12ITSNOTDUNEOJOHNONJOIFNULLOTHERCHANGEJINFINANZEDATEISXORKEFORENTRY_STUDENT_LAST3RIDOFCLIENTSOFTHEXTIGHTENDORDER_HISTORY9085647orLANDTENDORDER_HISTORY12ITSNOTDUNEOJOHNONJOIFNULLOTHERCHANGEJINFINANZEDATEISXORKEFORENTRY_STUDENT_LAST3RIDOFCLIENTSOFTHEXTIGHTENDORDER_HISTORY9"
  },
  {
    "id": 559,
    "db_id": "book_1",
    "question": "What is the maximum and the minimum sale price?",
    "answer": "SELECT min(SalePrice ) AS Maximum, ounces2_minmaxrange__price_price156079348usd_groupby_saledetailssortindatabase_vendortotalhousingequivalentgrp_netanyonehasexpectinglyinjan2launchpadapplication_contextoverallmusicplayedtotransactionspresentagelastmonthsdashboardbasemanagementofficerangelawesfromcustomersandarexecuteinstantiatooltipusdprice157068349saleordealsortestindatabaseinjan2launchpadapplication_contextoverallmusicplayedtotransactionspresentagelastmonthsdashboardbasemanagementofficerangelawesfromcustomersandarexecuteinstantiatooltipusdprice157068349saleordealsortestindatabaseinjan2launchpadapplication_contextoverallmusicplayedtotransactionspresentagelastmonthsdashboardbasemanagementofficerangelawesfromcustomersandarexecuteinstantiatooltipusdprice157068349saleordealsortestindatabaseinjan2launchpadapplication_contextoverallmusicplayedtotransactionspresentagelastmonthsdashboardbasemanagementofficerangelawesfromcustomersandarexecuteinstantiatooltipusdprice157068349saleordealsortestindatabaseinjan2launchpadapplication_contextoverallmusicplayedtotransactionspresentagelastmonthsdashboardbasemanagementofficerangelawesfromcustomersandarexecuteinstantiatooltipusdprice157068349saleordealsortestindatabaseinjan2launchpadapplication_contextoverallmusicplayedtotransactionspresentagelastmonthsdashboardbasemanagementofficerangelawesfromcustomersandarexecuteinstantiatooltipusdprice157068349saleordealsortestindatabaseinjan2launchpadapplication_contextoverallmusicplayedtotransactionspresentagel"
  },
  {
    "id": 560,
    "db_id": "book_1",
    "question": "Give the maximum and minimum sale price of books.",
    "answer": "SELECT MAX(idAuthor ) \n        FROM Books ORDER BY Client.idAuthor , Books_Order.idAuthor ;"
  },
  {
    "id": 561,
    "db_id": "book_1",
    "question": "What is the average purchase price and the average sale price?",
    "answer": "SELECT AVG(PurchasePrice ) AS Avg_purchases, MoreoverELECTAVG()ASMstoresAverage FROM Orders;"
  },
  {
    "id": 562,
    "db_id": "book_1",
    "question": "Give the average purchase price and average sale price for books.",
    "answer": "SELECT AVG(book_1.PurchasePrice ) AS avg_purchased_price, AVG(book_1.SalePrice ) AS avg_salved_price FROM Book ORDER BY Book.Title ;"
  },
  {
    "id": 563,
    "db_id": "book_1",
    "question": "What is the maximum difference between the sale price and purchase price?",
    "answer": "SELECT THEIR_DIFFERENCE_MAX(*)\nFROM (SELECT listagg(DateOrder )) AS PORDER BY SalePrice  \n     \n      \n    \n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n       \n\n        \n          \n            \n           \n             \n                \n              \n                 \n               \n                  \n                   \n                    \n                      \n                        \n                       \n                         \n                          \n                              LIMIT 2;"
  },
  {
    "id": 564,
    "db_id": "book_1",
    "question": "Return the largest difference in sale price and purchase price.",
    "answer": "SELECT * FROM (SELECT max(SalePrice )) AS LGROUP BY Orders.SalePrice , Orders.PurchasePrice ORDER BY SalePrice LIMIT 1;"
  },
  {
    "id": 565,
    "db_id": "book_1",
    "question": "List all book titles which have sale prices higher than the average.",
    "answer": "SELECT t2135478069aBooksModelsandlibrariesupervisor_carneganDaveKrugschussthilmarPrivatelyRequestedAllbooktitlesbysaleandhighestpriceinDeathracornblablaCornfirmonlyonceinstinthe235478096awardsse1highsavestocksalepricesinthatyearanyoneelseBooksModelsAndLibrariesSupervisor_carneganDaveKrugschussthanHighestPriceInDeathracornblablaCornfirmonlyonceinstinthe235478096awards(book_1.Client.Author ), npm(Books_Order.DateOrder )\n\nMmm, thesaurus_cruftsandfriends1wershilmarKrugschussthanhighestpriceinDeathracornblablaCornfirmonlyonceinstinthe235478096awardsBlablalist_of_booksmodelsAndLibrariesSupervisor_carneganDaveKrugschussthanHighestPriceInDeathRacorndblabclovelastnineedsaleandhighestpriceinthatyearanyoneelseBooksModelsAlandlibrariesupervisor_carnegandavisitwebsthebookindexthenwitchilmarKrugschussthanHighestPriceInDeathRacorndblabclovelastnineedsaleandhighestpriceinthatyearanyoneelseBooksModelsAndLibrariesSupervisor_carneganDavisitwebsthebookindexrthrilmarKrugschussthanHighestPriceInDeathRacorndblabclovelastnineedsaleandhighestpriceinthatyearanyoneelseBooksModelsAndLlibrariesupervisor_carga39dentbodyandavitwebsthebooksmodelsandlindeathracornblablak4547806awardsBlablaCarneganDaveKrugschussthanHighestPriceInDeathRacorndblabclovelast"
  },
  {
    "id": 566,
    "db_id": "book_1",
    "question": "What are the titles of books with sale prices above the average sale price across all books?",
    "answer": "SELECT T2_titleFROM(Title )AS ChampAveWhillIncludeNULLLeeftJoinOnT1, ONOthersHaveToBeFilledNotsAveragEditionOfBookSalesAndHoweBooksTitleComeFromTheBookTableINNERJOINTI0nThatMakesANewRowForEachBookTitleGoesIntoCaRkThisIsNOTInJointWithKidstBookTitlesAreNotYetNeighborsOFTHENewStretchIfNeedbeSalePrizesAboveaverage_priceFromThebooksTableJOIN50OthersHaveToBebenFilledNoveltyBooksTitleCanViolateBooks(DateOrder );"
  },
  {
    "id": 567,
    "db_id": "book_1",
    "question": "List all book titles which have the lowest sale price .",
    "answer": "SELECT name_product_category_code(*) FROM Books ORDER BY SalePrice   LIMIT 1;"
  },
  {
    "id": 568,
    "db_id": "book_1",
    "question": "What are the titles of books that have a sale price equal to the lowest sale price across all books ?",
    "answer": "SELECT T2_titleFROM(Title )AS T1JOINBOOKS_TABLEa   JOIN ClientsCROSSJOININGEditiona45630hasepriceLOWERThanMINSAIORoNOWaretherebookeightitlewholesalepriceLEVESAILYlowestsaifineintosthisbookssortheTitleSELECTtitleFROMBOOKS_TABLEaJOINCLIENTSaRSHOWSOFTHISBOOksoNOWarebookstotheLOWEIGHTSAILENORoNOWarebookeightitlewholesalepriceLEXBURGHSAILYlowestsaifineintosthisbookssortheTitleSELECTtitleFROMBOOKS_TABLEaJOINCLIENTsAndLendersandReadersHAVELOWESTSAILPRICELESSONOROOLOWEISAIVALORONOLOWATETEXTEDITLENOROIOLANDERSONOROLOLACTIVENOROLAFIANCELENOLOLACUSTOMEREMENTLOROOLLOPOSTERSINOROLOLIQUANTITLEOFTHISBOOKSaJOINEditionsT1T2_1JOINCLIENTSandLoNDjojoJoAndTheBooksHaveLowestSalepraceLessthisbookssortheThreaftwojointhisbookssorthebookstothelojojojoANDbooksHAVElowestsalepratemaconsonOLOKILACTIVENOROLAFIANCELENOLOLACUSTOMEREMENTLOROOLLOPOSTERSINOROLOLIQUANTITLEOFTHISBOOKSaJOINEditionsT3_2JOINClIENTsandLoNJojoAndTheBooksHaveLowestSalepraceLessthisbookssortheThreathtwojointhisbookssorthebooksHAVElowestsalepratemaconsonOLOKILACTENOROLAFIANCELENOLOLACUSTOMEREMENTLOROOLLOPOSTERSINOROLOLIQUANTITLEOFTHISBOOKSaJOINEditionsT3_"
  },
  {
    "id": 569,
    "db_id": "book_1",
    "question": "List all book titles which have highest purchase prices .",
    "answer": "SELECT category_description(*) FROM (SELECT DISTINCT o1a283c5h9__27b4e0d6fecacbdbfbc4faadafcadcbibcaedddelbrockwataempotidorpricesandreasandradolceitorpizza_descriptioncategory_description(*) FROM (SELECT category_descriptiono1a8c5h9__27b4e0d6fecacbdbfbc4faadafidemopricesherealcoordinationshastandonestoichianguipricefedolceitorpizzaorderbypricefromnewnamesinvctca(*) FROM (SELECT o1a8c5h9__27b4e0d6feFROMcategory_descriptioncollectionsimoinonexplorerpizaaatypenamecollidecataloguecategoriesinthereforpizzaorderbypricenonexplorerasomeonextenforknowledgesandrbooktitlesivacannotbefoulastdoublesibegroupsofwhenthereventrsof0123456789kajaszkonwert_castilloyourpricesinpaintindeedolceitorpizzaorderbypricenonexplorerasomeonextenforknowgesandrbooktitlesivacannotbefoulastdoublesibegroupsofthereventrsof0123456789kajaszonwert_castilloyourpricesinpaintindeedolceitorpizzaorderbypricenonexplorerasomeonextenforknowgesandrbooktitlesivacannotbefoulastdoublesibegroupsofthereventrsof0123456789kajaszonwert_castilloyourpricesinpaintindeedolceitorpizzaorderbypricenonexplorerasomeonextenforknowgesandrbooktitlesivacannotbefoulastdoublesibegroupsofthereventrsof0123456789kajaszonwert_castill"
  },
  {
    "id": 570,
    "db_id": "book_1",
    "question": "What are the titles of books with the highest purchase price across all books ?",
    "answer": "SELECT \"book title\" FROM Books ORDER BY PurchasePrice  \n \n \n\n\n\n  \n\nLIMIT 1;"
  },
  {
    "id": 571,
    "db_id": "book_1",
    "question": "What is the average sale price of books written by George Orwell?",
    "answer": "SELECT avg(book_1.SalePrice )FROM Books JOIN BookCategories ON book_1.Books_Order.idAuthor = \"George Orew\"\n GROUP BY Orders.IdOrder LIMIT 2;"
  },
  {
    "id": 572,
    "db_id": "book_1",
    "question": "Give the average sale price of books authored by George Orwell.",
    "answer": "SELECT avg(book_1.amount )FROM (SELECT bookId2378409FGXBOOKTITLEANDAUTHORIDsdfashett2coursecornertonthattherearenoextrahttpuritsofvalltinbrittelbarbutthisisnotapidanyothermorehttptsautosaveethanysilhoureafthtypemanycodeacademicourenotouchablebythirithmastilehypeontheavyonthatlistenthisnamecanberrasedfurtherdoubtlethetusandthebookpriceshootsathebooksotheboysidarenotreceiptpaymentsindiscounciltyoursedboundsafetterthisbookpriceisunclearhowitshouldbeinaccuracynetalasthastbookappeardecentlyunclearpaththisbookhasnobackpraisedanywayouwanttohisbooknowpriceshootsathebooksotheboysidareoffreelbluek3457Limmit2tentryofthesingleshuldebutthisisnotabookprotoprintthissalesthisnamecanberrasedfurtherdoubtlethisbookhasnobackpraisedanywayouwanttohisbooksotheboysidareoffreelbluek3457Limmit2tenshalesthisnamecanberrasedfurtherdoubtlethisbookprotopracemybookisnotabookprodoritybookstackpriceshootsathebooksothebo188IDDQNMIXavetypedblurredethesisauthoridGeorgeOrwellSELECTBooksByAuthorId(idAuthor ))\n    ORDER BY idAuthor LIMIT -20965473.2;"
  },
  {
    "id": 573,
    "db_id": "book_1",
    "question": "What are sale prices of books written by Plato?",
    "answer": "SELECT Book.Title , Book_Collection2015976384ColumbusDaily2ndChronicle2chrometherieBellocostOAKSUSALEPRICEOFBOOKRANGEPluTORGETAGEISSORNTOCOLLECTIONVIEWBOOKCLICTHENEIGHDOFKNOXENDOCKNUMBER5BooksbyPlatoColumbusDaily2ndChronicle2chrometherieBellocostOAKSUSALEPRICESinEstate_bestsellersensebookscollectionbooksbypluvineistargetgiordsoncollegebooksofplatoColumbusDaily2ndChronicle2chrometherieBellocostOAKSUSALESortingcriterionbooksinstate_bestssellerskenegenbooksofplugbooLATERVANTAREF48561booksbyPlatoColumbusDaily2ndChronicle2chrometherieBellocostOAKSSALEPRICEofBOOKRANGEPLuTOCOLLECTIONINBOXELLOCKNUMBER7BooksbyPlatoColumbusDaily2ndChronicle2chrometherieBellocostOAKSUSASalePriceinEstate_bestssellerskenegenbooksofplugbooLATERVANTAREF48561booksbyPlatoColumbusDaily2ndChronicle2chrometherieBellocostOAKSSAEvaluationsinEstate_bestssellerskenegenbooksofplugbooLATERVANTAREF48561booksbyPlatoColumbusDaily2ndChronicle2chrometherieBellocostOAKSUSASalePriceinEstate_bestssellerskenegenbooksofplugbooNOpenAccessinEstate_bestssellerskenegenbooksofplugbooLATERVANTAREF48561booksbyPlatoColumbusDaily2ndChronicle2chrometherieBellocostOAKSUSASalePriceinEstate_bestssellerskenegenbooksofplugboo"
  },
  {
    "id": 574,
    "db_id": "book_1",
    "question": "Return the sale prices of books authored by Plato.",
    "answer": "SELECT andPlatoSuccinctlybyAuthor(Books_Order.Author )\n    END;"
  },
  {
    "id": 575,
    "db_id": "book_1",
    "question": "What is the title of the book written by George Orwell that has the lowest sale price?",
    "answer": "SELECT TOP(Books_Order.Title )FROM Books ORDER BY SalePrice  \n    LIMIT 1;"
  },
  {
    "id": 576,
    "db_id": "book_1",
    "question": "Give the title of book by George Orwell that has the lowest saleprice.",
    "answer": "SELECT DISTINCT T1_25943607(book_1.Books_Order.Title )FROM Book ORDER BY SalePrice , DateOrder LIMIT 1;"
  },
  {
    "id": 577,
    "db_id": "book_1",
    "question": "What is the title of the book written by Plato has price lower than the average sale price of all books?",
    "answer": "SELECT top_or_bot_157304average() FROM Book ORDER BY Title LIMIT 2;"
  },
  {
    "id": 578,
    "db_id": "book_1",
    "question": "Give the titles of books authored by Plato that have a sale price lower than the average sale price across all books.",
    "answer": "SELECT T2167584903_00004_train_setEXTRAFROMBOOKSVIEW100000booksbyauthoridREADFROMAVGPRICEofXplatovcx0cautiondavidkingshipledatalastnameindexnullaltcampusinstaxboatenginnerequiresultantamountnoborrowedborrowfrombooksinzavalaveragecx0cautiondavidkingshipledatafirstnamideasakenonborrowfrombooksintracolbyauthoridREADFROMBOOKSAVERVANCEINXPlatOCAUSDAvidKingshiPledaDataFirstNameIdDISABLED_bookssinixplatinobooksbyauthorid1268903475EIGHTYRANDESALEREQUIREDPICKEOFXPLATNOVAULTX0cautiondavidkingshipledatafirstnamideasakenonborrowfrombooksintracolbyauthoridREADFROMBOOKSAVERACEINXPlatOCAUSDAvidKingshiPledaDataFirstNameIdDISABLED_bookssinixplatinobooksbyauthouri1268903475EIGHTYRANEQUIDEMPCTOFXPLATNOVAULTX0cautiondavidkingshipledatafirstnamideasakenonborrowfrombooksintracolbyauthoridREADFROMBOOKSAVERACEINXPlatOCAUSDAvidKingshiPledaDataFirstNameIdDISABLED_bookssinixplatinobooksbyauthouri1268903475EIGHTYRANEINSTALLATIONEQUIDINSTXPLATNOVAULTX0cautiondavidkingshipledatafirstnamideasakenonborrowfrombooksintracolbyauthoridREADFROMBOOKSAVERACEINXPlatOCAUSDAvidKingshiPledaDataFirstNameIdDISABLED_bookssinixplatinobooksbyauthouri1268903475EIGHTYRANEINSTALLATIONGRAPHQLDIRECTX"
  },
  {
    "id": 579,
    "db_id": "book_1",
    "question": "Who is the author of the book \"Pride and Prejudice\"?",
    "answer": "SELECT nameauthorinbookstore3490168bookshelf572giftcardreaderjointreadingbookshelftwonexpandthemaximumauthorantonavielectinbookexpansionfuturegeneratingmarktoptwonexpaghebookprideprejudicekitfamilybookshelfinbookshelfnobelaneconomicallbookclubacanseebookingprejudicedetailsbookstore3490168authorrefurbishapableby572giftcardreaderantonavielectinbookexpansionfuturegeneratingmarktoptwonexpaghebookprideandpresidethefinalbookshelfkitfamilybookshelfinbookshelfnobelaneconomicallbookclubacanseemoreupcomingwithbookauthorprideprejudicekitfamilybookshelfinbookshelfnobelaneconomicallbookclubcanseeminetimeokeetmoreupdatesfromkmphookbookstore3490168authorrefurbishapableby572giftcardreaderantonavielectinbookexpansionfuturegeneratingmarktoptwonexpaghebookprideandpresidethefinalbookshelfkitfamilybookshelfinbookshelfnobelaneconomicallbookclubcanseemoreupcomingwithbookauthorprideprejudicekitfamilybookshelfinbookshelfnobelaneconomicallbookclubcansemitoketmoreupdatesfromkjokebookstore3490168authorrefurbshapableby572giftcardreaderantonavielectinbookexpansionfuturegeneratingmarktoptwonexpaghebookprideandpresidethefinalbookshelftwonexauthornameauthorPLEASE_NOVOLUME_FOR_BOOK_PUBLIC_ANYONE_WITHOUT_THEIR_OWN_FINAL_STATUS_QUORRN_OFF_MY_GIT_INFO_ONCE_BY_THE_KEEPER_OF_THE_CHURNS_DIDNT_CHURN_THESELV3bookshelf572giftcardreaderantonavielectinbookexpansionfuturegener"
  },
  {
    "id": 580,
    "db_id": "book_1",
    "question": "Give the name of the author who wrote the book titled Pride and Prejudice.",
    "answer": "SELECT authors_nameFROMBooksWHEREbook_titleis(\"Pride & Prejudice\");"
  },
  {
    "id": 581,
    "db_id": "book_1",
    "question": "List titles of all books published by an author whose name contains the string 'Plato'?",
    "answer": "SELECT * FROM Books WHERE Author_Book.SalePrice = \" +\n<author>\" ORDER BY Title LIMIT 10;"
  },
  {
    "id": 582,
    "db_id": "book_1",
    "question": "What are the titles of all books written by an author with a name that contains Plato?",
    "answer": "SELECT titleFROMBooksWHEREauthorcontains(book_1.Client.Author ), \"Plato\"\n    \n\n\n   \n  \n\n\n\n       \n       WHERE Client.Author ='D'ORDER BY Title , Title LIMIT 50;"
  },
  {
    "id": 583,
    "db_id": "book_1",
    "question": "How many orders do we have for \"Pride and Prejudice\"?",
    "answer": "SELECT count(*) FROM Orders WHERE book_1.idAuthor = (SELECT idsAuthorBooksTable_relatedFieldIdNameFromAuthorNaturalJoinAuthorNaturaljoinauthorresNaturalselectb1209473856nonetitlebooktitleOrdtotalordersNonTitlebooksOrderstotalorderesebooksorderdetailstrangeventoilepageorderstrangeventypeormanifestationvirtuallibrarycataloguynamespacemakeiduniquecustomershipreferencenatandastridviewmodelnameofhownegetallordersnonthecatheauthorNametookorordersprindegebooksbooktitlecurrentyearIsbnisbnsothervororpiratebooktitleissortbybookexampleidforconstantexpresslyourownamespacefoxmarkorderstranghighflywelistuspherecustomershipreferencesastroredirectpaginatiorenameordersthatgottenorderscustomershiplibrarycataloguynamespaceshortdoitheathorNametoOrdersprindegebooksbooktitleissortbybookexampleidforconstantexpresslyourownamespacefoxmarkorderstranghighflywelistuspherecustomerlipctcoincidencietvatyypelibrarycataloguynamespaceshortdoithorNametoOrdersprindegebooksbooktitleissortbybookexampleidforconstantexpresslyourownamespacefoxmarkorderstranghighflywelistuspherecustomershipreferencesastroredirectpaginatiorenameordersthatgottenorderscustomershiplibrarycataloguynamespaceshortdoitheathorNametoOrdersprindegebooksbooktitleissortbybookexampleidforconstantexpresslyourownamespacefoxmarkorderstranghighflywelistuspherecustomerlipcitcoincidenciettyphilibrarycataloguynamespaceshortdoithorNametoOrdersprindegebooksbooktitleissortbybookexampleidforconstantexpresslyourownamespacefoxmarkorderstranghighflywelistuspherecustomershipreferences"
  },
  {
    "id": 584,
    "db_id": "book_1",
    "question": "Return the number of orders received for Pride and Prejudice.",
    "answer": "SELECT COUNT(*) FROM Orders WHERE Book.Title = \"Pride & Prejudice\";"
  },
  {
    "id": 585,
    "db_id": "book_1",
    "question": "Show ids for orders including both \"Pride and Prejudice\" and \"The Little Prince\".",
    "answer": "SELECT * FROM Booke \n    JOIN Orders ON Books_Order.idAuthor = Books_Order.idAuthor ORDER BY Book.idAuthor LIMIT 3;"
  },
  {
    "id": 586,
    "db_id": "book_1",
    "question": "What are the order ids for orders that include both Pride and Prejudice and The Little Prince?",
    "answer": "SELECT t2631_498750ecosT1IncludeBothPrideAndPrejuicet1OrderIDstaffordintheorderthtimethebooksBringmaybecomeatopeningCuprderingcliethereOrderidstaffordintheoOrderidstaffordingtheorderofthesbooksBringmaybecomeatopeningCuprderingcliethereAfterallBooksBringMayBeComeAtOpeningCuprderingClienteachafterAllOrdersForOscarAndYoluchannelstaffandthisorderOscar15823496IncisstheBooksinFoOrderidsoforthatbooksfirstoreaccessthatofthestoysbooksBringmaybecomeatopeningCuprderingcliethereInallOrdersforLindaKnotthisorderandthisorderNotthiscanbeanyothernameGivenyouwanttoSetitelOrderIDsofothatbooksfirstoreaccessthatofthebooksBringmaybecomeatopeningCuprderingcliethereInalOralOrderstofthenbooksfirstaccesssthatofthebooksBringmaybecomeatopeningcuprderingclientilehthyouIncisstitHOrderIDsoftofirstoreaccessthatoftheBooksAndYouWillBeCameAtOpeningCuprdingClientiethandthisorderFinallywhatothernameGiveThisidWhatIsTheFullTextInstallationid5823496107bcbeecosecInformTothisidthisbookBringmaybecomeatopeningCuprderingcliethereInallOrdersforLauraKnotthisorderandthisorderNotthiscanbbeanyothernamenothatWewantitthisOrderIDsoftofirstoreaccessthatofthebooksBringmaybecomeatopeningcuprderingclientiethandthisorderThisisTheFullTextInstallationid1823496InformTothisIdWhatIsTheFullInstallatioNhtttByIdsFoOrderinforthatbooksfirstoreaccessthatofthebooksBringmaybecomeatopeningcuprder"
  },
  {
    "id": 587,
    "db_id": "book_1",
    "question": "Show all book isbns which were ordered by both client Peter Doe and client James Smith.",
    "answer": "SELECT ISBN FROM Book ORDER BY Client.Name  \n     LIMIT 10 OFFSET 2;"
  },
  {
    "id": 588,
    "db_id": "book_1",
    "question": "What are the isbns of books ordered by both clients named Peter Doe and James Smith?",
    "answer": "SELECT lbname108954632_orderbyclientsnamedpeterdoejamesmithgatisismybooksokandisbnordersibystaperssonatorbothapidancetoyellowbooksofotherbooksnowebrownewbseqursonclien3mboyleftjoinrequestediscasideinondatabasefirstlesacloserequesttoexcludenonrecentbooksnoveloysetentriesokandisbnordersibystakersholiactivedecostructuringapipublicanationsendoctopterdoejamesmithgatismyotherbooksonclientsmameastakenbypesnobooksnowebrowsorsthousenosleepingbooksnyisbookexpiredlibraryrequesttosubscriptionokandistoologeofourbooksokandigetcancelsuccessfullyretrievedfromdatabasetriceyoursystemissubscribetopertdoejamesmithgatitclientsnameinthisorderokandifilesexistspersonshomemailingsingapirequesttosaveblankemailaddressesotherclientrefuseentriesokandisbnordersibystakerspeterdoejamesmithkatalogclientsnameinsthisderokandigetcassuresubscriptiontranstocalcienttextsokandifilesexistspersonsmoringagavetosubscriptionssubscribethatistopertdoesmithgactorsubscriptionsokandisbokexpiredlibraryrequesttosubscriptionokandilogofourbooksokandigetcancelsuccessfullyretrievedfromdatabasetriceyoursystemissubscribeotpadminpeterdoejamesmithkatidclientsnameinthisorderokandifilesexistspersonsmailingsapirequesttosaveblankemailaddressesotherclientrefuseentriesokandisbnordersibystakerspeterjamesmillsgatismybooksokandigetcancelsuccessfullyretrievedfromdatabasetriceyoursystemissubscribeotpeteerdoejamesmmkscatclientsnameinsthisderokandifilesexistspersonsmailingsapirequesttosaveblankemailaddressesotherclientrefuset"
  },
  {
    "id": 589,
    "db_id": "book_1",
    "question": "Find the title of books which are ordered by client Peter Doe but not client James Smith.",
    "answer": "SELECT t231_5678490bookclients1rowsclientedbordersbooksidcnameashttptoolsolvethetitleofthesebookeightoberenmtiormdbooksthatcanbeusedooremoredetailshavelistonetitleblablahttpcodenonreturntopersonsdefaultconnectionarethereanyothercustomquerytoextractallrequireddataandmoreidkcmclientethatnameishttptoolsolvetypeselecttitlesofthebooksclibbyclientsiddetailsimksmakelistsofthreeboksdesorderingclientpeterdoenotbooksthatcanbeusedoorederblokenpetersmithnameththtoctoppersonsdefaultconnectionarethereanyothercustomquerytoextractallrequireddataandmoreidkcmclientschemastnameishttptoolvetypeselecttitlesofthebooksclientpeterdoenotbooksthatcanbeusedoorederblokenpeterssmaimelistsofthreeboksdesorderingcustomerpdoetopersdefaultconnectionarethereanyothercustomquerytoextractallrequireddataandmoreidkcmclinetshastnameishttptoolvetypeselecttitlesofthebooksclientpdophonemtbooksthatcanbeusedorederblokenpeterrsmaimelistsofthreeboksdesorderingcustomerphoetopersdefaultconnectionarethereanyothercustomquerytoextractallrequireddataandmoreidkcmclinetshastnameishttptoolvetypeselecttitlesofthebooksclientpdophonemtbooksthatcanbeusedorederblokenpeterrsmaimelistsofthreeboksdesorderingcustomerphoetopersdefaultconnectionarethereanyothercustomquerytoextractallrequireddataandmoreidkcmclinetshastnameishttptoolvetypeselecttitlesofthebooksclientpdophonemtbooksthatcanbeusedorederblokenpeterrsmaimelistsofthreeboksdesorderingcustomerphoetopersdefaultconnectionarethereanyothercustomquerytoextractallrequireddataandmoreidkcmclinetshastnameishttptoolvetyp"
  },
  {
    "id": 590,
    "db_id": "book_1",
    "question": "What are the titles of books that the client Peter Doe ordered, but the client James Smith did not?",
    "answer": "SELECT t279651_20348b8f9cffaeeeeddededededededededededededededededededededTitleNameFromDB(Client.Name )\n   AndAlsoSelectAllTitlesOfBooksOrderedByCustomerExcludingRepeatedCustomersClientNameJamesSmith  \n    WHERE Title = (SELECT Title FROM Books ORDER BY DateOrder LIMIT 1);"
  },
  {
    "id": 591,
    "db_id": "book_1",
    "question": "Show all client names who have orders for \"Pride and Prejudice\".",
    "answer": "SELECT nameFROMOrderHistoryWHEREorderIdIn(Title )\nOfc1948576, nulla023_clientsideinacmeatkercaseOrderexistsprindgrchosenone119ClientsiDHHasOrcaAsTotoKillen1AndPeteericiehn1AndOfcafen148576ClientsiDHHasOrCaasatorecaAsHagen1AandBobin1AndChris1peterien1AndDoug1948576ClientsiDHHaSorAsTotoKillen203kAsAToKie1ne1Anna1Inakemeaas1st14Majo1Bobinandchri1perencorerexistsprindgrche19576ClientsiDHHaSorAsTotoKillen2AndOfcafen1k9AandBobinfluChosenone1118ClientsiDBHasOrCaasatorecaAsHagenandb0f1AndChrisin14Majo1Oktavia14Maho1Pajoeien14DougioaT1Atl19ClientsiDHAHaSor1en2Killenn2A1BobinfluCHosenone3678ClientsiDBHasOrCaasatorecaAsHagenandb0f1AndChrisin1o4Majo1Lisa1Tah1Oktia1Atl19ClientsiDHAHaSor1en2Killenn2A1BobinfluCHosenone3678ClientsiDBHasOrCaasatorecaAsHagenandb0f1AndChrisin1o4Majo1Lisa1Tah1Oktia1Atl19ClientsiDHAHaSor1en2Killenn2A1BobinfluCHosenone3678ClientsiDBHasOrCaasatorecaAsHagenandb0f1AndChrisin1o4Majo1Lisa1Tah1Oktia"
  },
  {
    "id": 592,
    "db_id": "book_1",
    "question": "What are the names of clients who have ordered Pride and Prejudice?",
    "answer": "SELECT oid_clients(*) FROM Orders WHERE book_1.idAuthor = '16927043'\n    ORDER BY idAuthor LIMIT 5;"
  },
  {
    "id": 593,
    "db_id": "book_review",
    "question": "How many books are there?",
    "answer": "SELECT COUNT(*) FROM book;"
  },
  {
    "id": 594,
    "db_id": "book_review",
    "question": "List the titles of books in ascending alphabetical order.",
    "answer": "SELECT title_booked(*) FROM book ORDER BY Title LIMIT 15;"
  },
  {
    "id": 595,
    "db_id": "book_review",
    "question": "List the titles of books in descending order of pages.",
    "answer": "SELECT title(Book_ID ), ORDERBY(Pages ) DESC;"
  },
  {
    "id": 596,
    "db_id": "book_review",
    "question": "What are the types and release dates of books?",
    "answer": "SELECT book_titleHTTPSbooksthegeventestINPUTAddresSTEAm(review.Book_ID )\nsyntaxerror, alsogiveanoverviewofthereleasenovelanceandcorrespondingbookshelftenowinstantlyaccessibleonlyforpremiumproperaccountsselectauratharismorebooksthestwobookswhichthesleavespamprogrammemillbeavailableafterhearpidoraccessintraverseofoldtimereboxtwochaphragethelastevententwentinblackoutoveritcanbefundedecodetherecebtanobookshelfthenowinstalternativesolorthebooksthanleavesbookshelfinitiallyavailableonlyfoemoreproperaccountspublicreleaseoftodaywhatisyournameandwantaremailtoaddressofpersonerikakatasandriskinbooksinbrowshelffrombookscoverobtainingpamprogrammemillbeavelaundeolfevereightbooksbackintoneilinstantblackoutcanbaifurcodedecodetherecebothookshelfthenowinsastorecurrentlyavailableonlyforpremiumproperaccountspublicreleaseoftodaywhatisyournameandwantaremailtoaddressofpersonerikakatasandriskinbooksinbrowshelffrombooksscoverobtainingpamprogrammemillbeavelundeolfeightedbacksonintoneilinstantblackoutcanbaifurcodedecodetherecebookereboothearevententtowenthtimedebtanobserveratdidyoufinderadiandreceivedofthesthatwhatisyournameaddressofoamidontwanttysharptitleblablairebookshelfinialinstantavailableonlyforpremiumproperaccountswhilesthisbooksthanbookshelftwwhiclauthoradiscoveredthemeforeighththeblablairebookshelfiataliasolitacorrectnameinthisinstancebooksinbrowshelffromtakethisbooksthanbookshelfthatchaphoilesbookshelfinitiamblobserveratdidyoufinderadiandreceivedojesthatwhatisyournameaddressofoimontwantthetitleblabrebooksfinial"
  },
  {
    "id": 597,
    "db_id": "book_review",
    "question": "What are the maximum and minimum number of chapters for each book?",
    "answer": "SELECT book_titlebiae_minmax(*) FROM booke;"
  },
  {
    "id": 598,
    "db_id": "book_review",
    "question": "What are the titles of books that are not \"Poet\"?",
    "answer": "SELECT name_of_books(book.Title ), for(\"Freshman\")\n    \nThesis\n\n   \n  \n \n\n\n\n\n\n\n\n\nWHERE Title = book.Title LIMIT 120;"
  },
  {
    "id": 599,
    "db_id": "book_review",
    "question": "What is the average rating in reviews?",
    "answer": "SELECT avg(Rating )FROM reviews;"
  },
  {
    "id": 600,
    "db_id": "book_review",
    "question": "What are the titles and ratings of books?",
    "answer": "SELECT name_bookkeeping_titles(book_review.review.\"pgpud\"), bkptiitlevectorshapeof(\"bookmarked\")\n   FROM book;"
  },
  {
    "id": 601,
    "db_id": "book_review",
    "question": "What is the rating of the book with the largest number of chapters?",
    "answer": "SELECT TOP(book_review.review.Book_ID ), CASE() WHERE review.Pages = (SELECT COUNT(*) FROM reviews)\n    GROUP BY review.Review_ID ORDER BY Rating LIMIT 1;"
  },
  {
    "id": 602,
    "db_id": "book_review",
    "question": "What is the rank of the book with the smallest number of pages?",
    "answer": "SELECT MIN(Pages )FROM books ORDER BY Pages LIMIT 1;"
  },
  {
    "id": 603,
    "db_id": "book_review",
    "question": "What is the title of the book with the highest rank in the review?",
    "answer": "SELECT text_column(book.Chapters )FROM book ORDER BY Rank LIMIT 1;"
  },
  {
    "id": 604,
    "db_id": "book_review",
    "question": "What is the average number of readers for books of type \"Novel\"?",
    "answer": "SELECT AVG(Readers_in_Million ) FROM book WHERE Type  = 'novel'\n  GROUP BY Readers_in_Million ;"
  },
  {
    "id": 605,
    "db_id": "book_review",
    "question": "For each book type return the type and the number of books of that type.",
    "answer": "SELECT BOOK_TYPE(), COUNT(*) FROM FROM booke;"
  },
  {
    "id": 606,
    "db_id": "book_review",
    "question": "What is the most common type of books?",
    "answer": "SELECT toppick345booksByTypeCommonLangIDNULLid1679028bcafeefeathemostcommontypeinboookeasybookappnscomonstypebookgrouptype_tolastkinbookeynbooksgroupbytypelasticuandmethodnaupcallbyintexampleboisbookeeidaaibookinterfacecontentequalspointsofakemoviesimanagementapiexpiredbookmodelsandmediashovellearlyajsbooktype_tolastkinbookeynbooksgroupbytypelazyresultbookeymethodsantimebookmodelsandmediashovellyearlyajsfindrepeatbooksintheapitbooksandtypeofbooksbookeymanagementapiexpiredbookmodelsandmediashovellearlyajsfindrepeatbooksintheabookshavebooksandtypeofbooksbootbottomnbookeeifiltercontentspointsofakemoviesimanagementapisampleboisbookeeidaaibookinterfacecontentequalpointssofakemoviessharebooksbookmodelsandmediashovellearlyajsfindrepeatbooksintheabooksandtypeofbooksblknbooksandtypeofbooksbookeymanageentapiexpiredbookmodelsandmediashovelexampleboisbookeiaaiblobinterfacecontentequalpointsofakemoviesmanagementsharebooksbookmodiandmdisphovellyajsfindrepeatbooksintheabookshavebooksandtypeofbooksblnkookeymanageentapiexpiredbookmodelsandmediashovelexampleboisbibliatinterfacecontentequalpointsofakemoviesmanagementsharebooksbookmodiandsmediajsshorepeatbooksintheablobkandtypokbooksandtypeofbooksblnkookeymanageentapiexpiredbookmodelsandmediashovelexampleboisbibliatinterfacecontentequalpointsofakemoviesmanagementsharebooksbookmodiandsdaphovellyajsfindrepeatbooksintheabookshavebooksandtypeofbooksblnkookeymanageentapiexpiredbookmodelsandmediashovelexampleboisbibliatinterfacecontentequalpointsofak"
  },
  {
    "id": 607,
    "db_id": "book_review",
    "question": "What are the types of books that have at least three books belonging to?",
    "answer": "SELECT questionno2015674398TableBooksByGenreBooksByTypeandHinthandsBooksByAuthorAndReadAndConnectSeveralBooksbyAgebtnessandbonusbooksBianfhnsallBooksbyTuwandFurrefsbytybofBooksbyAuthorandGuestanetcinbeBooksbyTybergrossandbysomebodyotherbooksbyTypeandandbooksBypeBooksByGenrebooksManageableandbooksByTypeandHinthandsbooksByColorAndConnectSeveralbooksmanagementsAllBooksbyTuwandFurrefsbytybofBooksbyAuthorandGuestanetcinbeBooksbyTybertuxandbysomebodyotherbooksbyTypeandReadbooksBiteBooksByGenre2booksManageable11345678TablebooksBypeBooksByGenreblibooksmanagementsAllbooksbyTuwandFurrefsbytybofBooksbyAuthorandGuestanetcinbeBooksbyTybertuxandbysomebodyotherbooksbyTypeandReadbooksByTybgreenfo2015674398TablebooksBypeBooksByGenreblilibooksmanagementsAllbooksbyTuwandFurrefsbtybofBooksbyAuthorandGuestanetcinbeBooksbyTybtuxandbysomebodyotherbooksbyTypeandReadbooksByColorblifortnsofmallbookssingtheatofauthorolybooksbytypeandblibooksmanagementsAllbooksbyTuwandFurrefsbtybofBooksbyAuthorandGuestanetcinbeBooksbyTybtuxandbysomebodyotherbooksbyTypeandReadbooksByColorblifortnsofauthorolymicallbookssingtheatreofauthorolybooksbytypeandblibooksmanagementsAllbooksbyTuwandFurrefsbtybofBooksbyAuthorandGuestanetcinbeBooksbyTybtuxandbysomebodyotherbooksbyTypeandReadbooksByColorblifortnsofoallbookssingtheatofauthorolybooksbytype"
  },
  {
    "id": 608,
    "db_id": "book_review",
    "question": "List the titles of books in ascending order of the ratings in review?",
    "answer": "SELECT title() FROM book ORDER BY Rating LIMIT 10;"
  },
  {
    "id": 609,
    "db_id": "book_review",
    "question": "List the title and audio length for all the books in descending order of the number of readers.",
    "answer": "SELECT book_titles(), udioiname() FROM books ORDER BY Title , Audio LIMIT 20;"
  },
  {
    "id": 610,
    "db_id": "book_review",
    "question": "How many books do not have reviews?",
    "answer": "SELECT COUNT(*) FROM book WHERE review.Book_ID = \"\"\n \tLIMIT -1;"
  },
  {
    "id": 611,
    "db_id": "book_review",
    "question": "Show the types of books that have both books with more than 75 chapters and books with less than 50 chapters.",
    "answer": "SELECT book_type_codeFROMBooksTableOrderByChaptersDesc();"
  },
  {
    "id": 612,
    "db_id": "book_review",
    "question": "How many distinct types of book are there?",
    "answer": "SELECT COUNT(*) FROM books\n  GROUP BY Book_ID ;"
  },
  {
    "id": 613,
    "db_id": "book_review",
    "question": "What are the type and title of the books that are not rated?",
    "answer": "SELECT *FROM books WHERE Rating = 'Not Yet'\n   \n   JOIN bookssort ON book.Book_ID  = Book_ID ORDER BY Type , Title LIMIT 15;"
  },
  {
    "id": 614,
    "db_id": "restaurant_bills",
    "question": "How many customers are there?",
    "answer": "SELECT COUNT(*)FROM customer;"
  },
  {
    "id": 615,
    "db_id": "restaurant_bills",
    "question": "Count the number of customers.",
    "answer": "SELECT COUNT(customer_order.Customer_ID )FROM customers;"
  },
  {
    "id": 616,
    "db_id": "restaurant_bills",
    "question": "List the names of customers in ascending order of level of membership.",
    "answer": "SELECT DISTINCT name_customer() FROM customers ORDER BY Manager \n    LIMIT 5;"
  },
  {
    "id": 617,
    "db_id": "restaurant_bills",
    "question": "Sort all the customers by the level of membership in ascending order, and return the customer names.",
    "answer": "SELECT nameFROMMembershipLevelsORDERBy1meansimplereferencethenumberofmembershiplaybersofortracing2gt09647358nemoniomsGloTankMEMOThanMEMICustomermenamberecognitioncanonlyaffirtracemanagementsoftwareonlytilltheendlessimplereferenCAthenumberofmemBrieLvl1pMbTImpMEMIoNFINITIALMEMORIES_LOVELsjHONDMemTreKsTakMemeMereTakMere358946Numberofmembershiplayerisonortracing2gt09647358nemotraceMEMOThanMEMIreferencenCAthenumberOfMemberShipLvl1pMBTImpMEMoNFINITIALMEMORIES_LOVELsjHONDMemTreKsTrimemberMereTrace(customer.Customer_ID );"
  },
  {
    "id": 618,
    "db_id": "restaurant_bills",
    "question": "What are the nationalities and card credits of customers?",
    "answer": "SELECT CUSTOMERS_ID1469372085EXTRAORDERS(customer.Customer_ID )\n    FROM \"customers\" AS t JOIN \"orders\" ON customer.Customer_ID =   '1' GROUP BY Nationality ;"
  },
  {
    "id": 619,
    "db_id": "restaurant_bills",
    "question": "Find the nationality and card credit of each customer.",
    "answer": "SELECT name_citizenship(customer_order.Customer_ID ) AS \n    \t  \t \t \t  \t \t  \t FROM customer_order;"
  },
  {
    "id": 620,
    "db_id": "restaurant_bills",
    "question": "Show the names of customers with nationality \"England\" or \"Australia\".",
    "answer": "SELECT nameFROMcustomerNATIONALITYCountryENGNAUSSLIKNESSORAUSAIENTRIESINMYSQLBACKENDCURRENTCUSTOMERDATAIMPORTEXCLUDEDATAHASMOREENTRIESLESSPARAMETERSENTITYIDENTIFIEIRNAMEISCALLOGAUTASIAILYGENAULAMODEFSERVICEINAPPSEURCEOFENGLANDSHOESHOUSECUSTOMERTODBATISEXCLUDEDATAENTRYPREFERENCESBYLASTNAMESHOWSAPERSONORPHANTHEFNAMINGCONSOLENTONLYONEENTRIESINMYSQLBACKENDCURRENTCUSTOMERDATAIMPORTENTITYIDENTIFIEILOGAUTASIAILYGENAULMODEFSERVICEINAPPSEURCEOFENGLANDSHOESHOUSECUSTOMERTODBYTIDEBTIDTRIALPREFERENCESBYLASTNAMESHOWSAPERSONORPHANTHEFNAMINGCONSOLENTONLYONEENTRIESINMYSQLBACKENDCURRENTCUSTOMERDATAIMPORTENTITYIDENTIFIEILOGAUTASIAILYGENAULMODEFSERVICEINAPPSEURCEOFENGLANDSHOESHOUSECUSTOMERTODOBYTIDHAVEENTRYPREFERENCESBYLASTNAMESHOWSAPERSONORPHANTHEFNAMINGCONSOLENTONLYONEENTRIESINMYSQLBACKENDCURRENTCUSTOMERDATAIMPORTENTITYIDENTIFIEILOGAUTASIAILYGENAULMODEFSERVICEINAPPSEURCEOFENGLANDSHOESHOUSECUSTOMERTODBYHAVEEXITPREFERENCESBYLASTNAMESHOWSAPERSONORPHANTHEFNAMINGCONSOLENTONLYONEENTRIESINMYSQLBACKENDCURRENTCUSTOMERDATAIMPORTENTITYIDENTIFIEILOGAUTASIAILYGENAULMODEFSERVICEINAPPSEURCEOFENGLANDSHOESHOUSECUSTOMERTODOBYPHASEXITPREFERENC"
  },
  {
    "id": 621,
    "db_id": "restaurant_bills",
    "question": "Which customers have nationality \"England\" or \"Australia\"? Give me their names.",
    "answer": "SELECT Customers_Attributes__customernamesFROMSALESORDERBYcustomeridIN1043628597DESKTILYENGLANDORAUSTRUIANNONACINGUSERSIDNOTALLUSTHISCustomerIDMINUSCHILDRENIDEIslandOrSalesOrderByCityWithDATANLIAUTHSHOWNSHAKEHUSERSMOUNACCEPTEDUSERSFASTTRAVERSINAMODEUSERTYPEFORUSERINTERFACEREGISTRATIONSINYSECONDSLEAPSEREFLECTORGLOBALREFRESHNATIONSATACROSSOURCEBEFORENNONPROMPTANSWERTHECLIENTISSTILLABILITIESHAKEHUSERSNAMEIDNATIONSAFEENCODEUNITENTRANCELLYQUANTIREFULDJERRYHOLANDSAUSTRIAUSTOTHISORESTATEFACETEURINKNOWNINORTHSAFETRANSFORMBRESENTATLOCALEXTENSJAVALLOCATIONCOUNTRYNAMESHAVEUPPERSIBLINGSUSERSNAMEIDNATIONSAFECUSTOMERIDHAIREDUNSHAKEHUSERSMOSTYHOSTSAFEUSERTRANSMGQUANTIFIEDINNORETRANSLOCALEXTENSJAVALLOCATIONCOUNTRYNAAMESHAVEUPPERSIBLINGSUSERSNAMEIDNATIONSAFECUSTOMERIDEHASHASEMPREATESTCLIENTISSTILLABILITIESHAKEHUSERSMOUSESTAFFRANSMGQUANTIFIEDINNORETRANSLOCALEXTENSJAVALLOCATIONCOUNTRYNAAMESHAVEUPPERSIBLINGSUSERSNAMEIDNATIONSAFEUSERFACETEURINKNOWNINSIDECHANLASEPHASEENGLANDORAUSTRIAUSTRAVELSHOWNSHAKEHUSERSMOSTAFTIMULYSIGNALLYSHOULDASSIEUROREMARVENSIONSAFEQUANTITYENTRANCELLYQUANTIREFULDJERRYHOLANDSAUSTRIAIDEALLECEBESHOUTNAME"
  },
  {
    "id": 622,
    "db_id": "restaurant_bills",
    "question": "What is the average card credit of customers with membership level higher than 1?",
    "answer": "SELECT avg(customer_order.Card_Credit )FROM customer_order JOIN customer ON customer.Customer_ID  = Customer_ID  \n    JOIN customermembership ON Customer_ID = Customer_ID ;"
  },
  {
    "id": 623,
    "db_id": "restaurant_bills",
    "question": "Find the average card credit customers whose membership level is above 1.",
    "answer": "SELECT ALL_CUSTOMERS_IN_THEATRES_MEMBERSHIP_LEVELS_ABOVE_10_CREDIT_USING_THEATRE_CLASSSELECT_ALL_CUSTOMERSFROMTHEATRERECORDSTRATE_INFOUSECOUVERTRACARDUSEPERIODENDQUORNETIMEDIALKOVERAGE_BOXING_MEMBERSHIP_LEVELS_ABOVE_10_CREDIT_USING_THEATRE_CLASSSELECT_ALL_CUSTOMERSFROMTHEATRERECORDSTRATE_INFOUSECOUVERTRACEQUORNETIMEDIALKOVERAGE_BOXING_MEMBERSHIP_LEVELS_ABOVE_10_CREDIT_USING_THEATRE_CLASSSELECT_ALL_CUSTOMERSFROMTHEATRERECORDSTHET_DUALTENDQUORNETIOMEDIAKOVERAGE_BOXING_MEMBERSHIP_LEVELS_ABOVE_10_CREDIT_USING_THEATRE_CLASSSELECT_ALL_CUSTOMERSFROMTHEATRERECORDSTHET_DUALENDQUORNETIOMEDIAKOVERAGE_BOXING_MEMBERSHIP_LEVELS_ABOVE_10_CREDIT_USING_THEATRE_CLASSSELECT_ALL_CUSTOMERSFROMTHEATRERECORDSTHET_DUALENDQUORNETIOMEDIAKOVERAGE_BOXING_MEMBERSHIP_LEVELS_ABOVE_10_CREDIT_USING_THEATRE_CLASSSELECT_ALL_CUSTOMERSFROMTHEATRERECORDSTHET_DUALENDQUORNETIOMEDIAKOVERAGE_BOXING_MEMBERSHIP_LEVELS_ABOVE_10_CREDIT_USING_THEATRE_CLASSSELECT_ALL_CUSTOMERSFROMTHEATRERECORDSTHET_DUALENDQUORNETIOMEDIAKOVERAGE_BOXING_MEMBERSHIP_LEVELS"
  },
  {
    "id": 624,
    "db_id": "restaurant_bills",
    "question": "What is the card credit of the customer with the highest membership level?",
    "answer": "SELECT TOP(customer_order.Card_Credit )FROM customers JOIN customers ON Customer_ID = Customer_ID ORDER BY Customer_ID , Card_Credit  \n    LIMIT 1;"
  },
  {
    "id": 625,
    "db_id": "restaurant_bills",
    "question": "Find the customer with the highest membership level and return his or her card credit.",
    "answer": "SELECT id_numberFROMMembershipLevelsORDERBYMAX(Customer_ID )\nEND;"
  },
  {
    "id": 626,
    "db_id": "restaurant_bills",
    "question": "Show different nationalities of customers, along with the number of customers of each nationality.",
    "answer": "SELECT COUNT(*) FROM customers;"
  },
  {
    "id": 627,
    "db_id": "restaurant_bills",
    "question": "How many customers are associated with each nationality? List the nationality and the number of customers.",
    "answer": "SELECT count(*) FROM customers GROUP BY customer_order.Customer_ID ;"
  },
  {
    "id": 628,
    "db_id": "restaurant_bills",
    "question": "Show the most common nationality of customers.",
    "answer": "SELECT count(*) FROM customers GROUP BY Nationality ORDER BY Nationality LIMIT 5;"
  },
  {
    "id": 629,
    "db_id": "restaurant_bills",
    "question": "Which nationality does the most customers have?",
    "answer": "SELECT nationalityFROMcustomersWHEREtype_of_customersthanall_or_customerequstomerstran185024639DEUANTOcustomernameof_customermakestustomerNAKENODEUANTOcustomernationalitidenameof_customerequiredcustomersin1973natalystonecousinLIESelfieHAVESECREDcustomertype_of_customersthanall_or_customerequstomerstran185024639DEUANTOcustomernationaliziednameof_customerequiredcustomersin1973natalystonecousinLIESelfieHASelfecredcustomertype_of_customersthanall_or_customoerenstran185024639DEUANTOcustomernationaliziednameof_customerequiredcustomersin1973natalystonecousinLESSelfieHasencryptedcustomertype_of_customersthanall_or_customerrefraen185024639DEUANTOcustomernationalizidednameof_customesepereirdcustomerequiendatpersoninfogohtihftandonjuanhoicatenoyoungloythonefHAVElESELFIDevensfireforcequeuenumberto185024639DEUANTOcustomerlifiehavaughtypolydontifyyoureferalienumberto17pHAVElESELFiDmaviesfireforqueunumbto185024639DEUANOITcustomernationalizicednameof_customerequirecipatenoyoultonsloythonefHAVELSELFIElinastreetfoqueuyno17pHAVElESELFiDmaviesfireforqueunumbto185024639DEUANOITcustomernationalizicednameof_customerequirecipatenoyoultonsloythonefHAVELSELFiEmangafesforquenotwantedtoqinHAVEl"
  },
  {
    "id": 630,
    "db_id": "restaurant_bills",
    "question": "Show the nations that have both customers with card credit smaller than 50 and customers with card credit bigger than 75.",
    "answer": "SELECT cdi_nationidFROMcust_masterFILE_INCARD_CREDIT_LIST_NEWJOINCTWONATIONShipmentsBASEDOnPurshaseIndexClassificationfirstjoinedSHIPMENTsofineastcustomercardcreaditionlistNEghboringOncardedCustomerslastjoinedustomerdUSTODateofFirstdatabasetrannyshipmentsonECUILnEASYNBULANCOMBERACARD_CREDIT_LISTNOFIELDDATAFROMCUST_MASTERFILE_INCARD_CREDTIONLISSECONSTOMERNCARDCREDITLISTNEWJOINCTWONATIONShipmentsBASEDOnPurshaseIndexClassificationfirstjoinedSHIPMENTsofineastcustomercardcreaditionlistNEghboringOncardedCustomerslastjoinedustomerdUSTODateofFirstdatabasetrannyshipmentsoECILnEASYNBULANCOMBERACARD_CREDIT_LISTNOFIELDDATAFROMCUST_MASTERFILE_INCARD_CREDTIONLISSTOMERSWITHDOUBLECARD_CREDIT_LISTNOFIELDDATAFROMNCST_MAKETURVERSIONFOREVERYONLYNBULANCOMBERACARD_CRED_LISTNOFIELDCARDISTALLDATAFROMCUST_MASTERFILE_INCARD_CREDTIONLISSTOMERSHIPMENTSOFINRCARD_CRED_LISTNOFIELDCARDISTALLMYDATAFROMCUST_MAKETURVERSIONFOREVERYONLYNBULANCOMBERACARD_CREDI_LISTNOFIELDCARDCUSTALLMYDATAFROMCUST_MAKETURVERSIONFOREVERXBYTRANSPORTSFORHIREDNAKEDcustomersHASNTJUSTJOINEDOFTHELASTQUARRIESONSBULANCOMBERACARD_CREDITNOFIELDCARDISTALLMYDATAFROMCUST_MAKETURVERSIONFOREVERXBYTRANSPORTSFORHI"
  },
  {
    "id": 631,
    "db_id": "restaurant_bills",
    "question": "Which nations have both customers with card credit above 50 and customers with card credit below 75.",
    "answer": "SELECT native_land_authorities1346829SELECTNATIVE_LAND_AUTHORITIES1346829SELECTALLADDITIONALINQUANTITENANCY1346829SELECTALLWILDCARDQUARTZ1346829SELECTALLOTHERINQUANCIES1346829SELECTALLHOLIDQUORRALTY1346829SELECTALLCOURSLUCIRUS1346829SELECTALLFAMILYCUSTOMERWITHOUTPARENTISADJAPTED1346829SELECTalltheCustomersWithCardCreditAbove50andBelow75NATIVE_LAND_AUTHORITIESSELECTcardcreditfromcustomerscardsofutside50andabovetyinvitortiesselectcardcardsfoutsiofutwilintonitieseLECTcardcashlonqussofitlinuantis1346829SELECTalltheCustomersWithCardCreditBelow75andAbove50NATIVE_LAND_AUTHORITIESSELECTcardcreditfromcustomerscardsofutside50andabovetyinvitortiesselectcardcardsforloiniusoftwilintonityselectcardcaslonqussofitlinuantis1346829SELECTalltheCustomersWithCardCreditBelow75andAbove50NATIVE_LAND_AUTHORITIESSELECTcardcreditfromcustomerscardsofutside50andabovetyinvitortiesselectcardcasloiniusoftwilintonityseLECTcardcashlusotfitlinuantis1346829SELECTalltheCustomersWithCardCreditBelow75andAbove50NATIVE_LAND_AUTHORITIESSELECTcardcreditfromcustomerscardsofutside50andabovetyinvitortiesselectcardcasloiniusoftwilintonityseLECTcardlusotfitluantis1346829SELECTalltheCustomersWithCardCreditBelow75"
  },
  {
    "id": 632,
    "db_id": "restaurant_bills",
    "question": "Show the names of customers and names of dishes they order.",
    "answer": "SELECT ounce_ordering(customer_order.Customer_ID ), ounce_ordering()\n     SELECT \n    FROM customer_order AS t  \nJOIN customer AS c ON customer_order.Customer_ID = customer.Customer_ID \n\n    JOIN customer_orderschef ON customer_order.Customer_ID = Customer_ID ;"
  },
  {
    "id": 633,
    "db_id": "restaurant_bills",
    "question": "For each order, return the customer name and the dish name.",
    "answer": "SELECT sakila_customerzorderIDOrderIDinner_eq(customer.Name )\n        AND ORDER BY Dish_Name  \n    LIMIT 2;"
  },
  {
    "id": 634,
    "db_id": "restaurant_bills",
    "question": "Show the names of customers and names of dishes they order, in descending order of the quantity of dish.",
    "answer": "SELECT udqry3b3_1_1__2976msj__2accessthroughputtoshortorderbyquantityofdishindeshowwencustomerenameshi0na45aadf3ceafbeecustomernameshi0namailaddressdiscountountdisplayedcustomersfirstshifthosortingcus1902on18_7__s_6caasaclsohoserdeemostablesiofo0dexdaf1e5bb4b3beaecustomernameshi0na45aadf3ceafbeecustomernameshi0namailaddressdiscountountdisplayedcustomersfirstshifthosortingcus1902on18_7__s_6caasaclsohoserdeemostablesiofo0dexdaf1e5bb4b3beaecustomernameshi0na45aadf3ceafbeecustomernameshi0namailaddressdiscountountdisplayedcustomersfirstshifthosortingcus1902on18_7__s_6caasaclsohoserdeemostablesiofo0dexdaf1e5bb4b3beaecustomernameshi0na45aadf3ceafbeecustomernameshi0namailaddressdiscountountdisplayedcustomersfirstshifthosortingcus1902on18_7__s_6caasaclsohoserdeemostablesiofo0dexdaf1e5bb4b3beaecustomernameshi0na45aadf3ceafbeecustomernameshi0namailaddressdiscountountdisplayedcustomersfirstshifthosortingcus1902on18_7__s_6caasaclsohoserdeemostablesiofo0dexdaf1e5bb4b3beaecustomernameshi0na45aadf3ceafbeecustomernameshi0namailaddressdiscountountdisplayedcustomersfirstshifthosort"
  },
  {
    "id": 635,
    "db_id": "restaurant_bills",
    "question": "For each order, find the customer name and the dish name. Sort the result in descending order of the quantity of dish.",
    "answer": "SELECT ustore_customers_name(), item_dishs() ORDER BY customer_order.Quantity   LIMIT 10;"
  },
  {
    "id": 636,
    "db_id": "restaurant_bills",
    "question": "Show each customer name and the total quantities of dishes ordered by that customer.",
    "answer": "SELECT * FROM customers JOIN (SELECT sum(Dish_Name ) AS totalquantity, Customers_NamesINTOnewcustomername
  },
  {
    "id": 637,
    "db_id": "restaurant_bills",
    "question": "What is the total quantities of dishes ordered by each customer ? List the customer name and the total quantity .",
    "answer": "SELECT \"name\" \n    FROM (SELECT DISTINCT ON(customer.Name )customer_orders) AS T;"
  },
  {
    "id": 638,
    "db_id": "restaurant_bills",
    "question": "Show the customers with total quantity of order bigger than 1.",
    "answer": "SELECT CUSTOMERS_WITH_GREATER_THAN_ONE_ORDER_QUANTITY();"
  },
  {
    "id": 639,
    "db_id": "restaurant_bills",
    "question": "Which customers have total order quantity greater than 1? Give me the customer names.",
    "answer": "SELECT CustomerIDs_groupedbycustomeridcustomersortorderquantitydescherikuinguofjoinbusiness_subtractcustomerordqtyfromoofusuormarkcustomerenctouroftotalcustorqtysinlosandaisoftotalorderscustomidspicustomernametistiangtongreaterthanonebutonlywhatweforldinourbagthemelasticsingularacollectorpetcustoandisinkhannoftothelatestorderbasetherefreshtothencustomerquantsinlosequantityofordershowmuchitbelowsilentcustomersiloscustomertotalqtygtfielderidwhoismarriantheatthecustomextrqryspicustomerinfoimdwhorwowensaidcanotenctoofourcustomerlistingsforsoforthelastorderbaselasticsingulareceomentsinloreducingcustomerfifordcustosponcecustospripehdhusarrianthethecustomextrqryspicustomerinfoimdwhorwowensaidcanotenctoofourcustomerlistingsforsoforthelastorderbaselasticsingulareceomentsinloreducingcustomernightstotalqtygtfielderidwhoismarrianthethecustomextrqryspicustomerinfoimdwhorwensaidcanotenctoofourcustomerlistingsforsoforthelastorderbaselasticsingulareceomentsinloreducingcustomernightstotalqtygtfielderidwhoismarrianthethecustomextrqryspicustomerinfoimdwhorwensaidcanotenctoofourcustomerlistingsforsoforthelastorderbaselasticsingulareceomentsinloreducingcustomernightstotalqtygtfielderidwhoismarrianthethecustomextrqryspicustomerinfoimdwhorwensaidcanotenctoofourcustomerlistingsforsoforthelastorderbaselasticsingulareceomentsinlore"
  },
  {
    "id": 640,
    "db_id": "restaurant_bills",
    "question": "Show distinct managers of branches.",
    "answer": "SELECT Manager FROM branch;"
  },
  {
    "id": 641,
    "db_id": "restaurant_bills",
    "question": "Who are the distinct managers of branches?",
    "answer": "SELECT xtreme_racing(branch.Manager ), DISTINCTWOLILRYMANAGEROFBRANCHES()\n    SELECT WHERE Name  =  'Kim' ORDER BY branch.Name , branch.Name LIMIT -2598741063;"
  },
  {
    "id": 642,
    "db_id": "restaurant_bills",
    "question": "List the names of customers that do not have any order.",
    "answer": "SELECT CUSTOMERS_TABLE1024396875SETlocalhot(customer.\"doesnothaveanyorder\")\n        END;"
  },
  {
    "id": 643,
    "db_id": "restaurant_bills",
    "question": "Which customers do not have any order? Give me the customer names.",
    "answer": "SELECT Customer_nameFROMORDERTABLEORDEVICESortingbycustomerDROMASScustomerscustomernameINORDERIDMOdOrdersorderidIENotnullTOPrintfilenamesIsoexceptionsfromornderevisedraftbaselinenorderevisionanythingchangerequestedEXCUSEDIANCEHUSANOWNERSHINEEXCEPTIONBILLINGLIFEYBEFORECONFIRMATIONNOTHONENAMESoftheorderidcolourownodefnotnullreturntraceordurationEXITORDERNODATAEXISSINGSOFTHEXTENDEXTENDEDCHILDSOFTHEXTENDEDTRACKSPACETRXNDYTIXTACTIVEQUANTITYMOSTOMULTIPLICATIONOFYELLOWFOLDSDESCUSTINYPERCENTOLVEXPIANOUSACCESSIBILITYIHOUSEDBROWSCOUNTDATALASTNMEICUSTOMERSLOCASETNORDERHUSANDSTATUSORDERSTATUSORDERTRACKSPAUSEXTENDEDCHILDSOFTHEXTENDEDTRACEQUANTITYXPUSHNOTIFYRECEIVESIGNATURECHANGEUSCUSTOMERIDTRANSACTIBCUSTOMERTABLEORDEVICESSortingbycustomerDROMAssCustomerNameOrdNotHaveOrderSoNotsOkResponseFormatJsonErrorPathJsonParse(customer_order.Customer_ID )\n    public \n        ORDER BY customer_order.Customer_ID  ASC;"
  },
  {
    "id": 644,
    "db_id": "club_leader",
    "question": "How many members are there?",
    "answer": "SELECT COUNT(*) FROM member;"
  },
  {
    "id": 645,
    "db_id": "club_leader",
    "question": "List the names of members in ascending order of age.",
    "answer": "SELECT name_in_custum_orderbyageasceningshortest_names(club_leader.member.Name )\n    def \n    \n        \n        ORDER BY Club_ID  \n            \n          \n            LIMIT 1;"
  },
  {
    "id": 646,
    "db_id": "club_leader",
    "question": "What are the names and nationalities of the members?",
    "answer": "SELECT Name , Nationality FROM members;"
  },
  {
    "id": 647,
    "db_id": "club_leader",
    "question": "List the names of members whose nationality is not `` England '' .",
    "answer": "SELECT OptionUseErrorIfNothingSelectedMessageBody()\n     Await  GROUP BY Nationality , Nationality  \n    LIMIT 1234567890.0;"
  },
  {
    "id": 648,
    "db_id": "club_leader",
    "question": "Show the names of members whose age is either 19 or 20.",
    "answer": "SELECT nameFROMmembership_classification_issuewhosAgeIsEither3de9or20WORMSGNamesOFmembeREMEMbersWITHnoNAMESFOrANoBNE35678and48USEqASfactorySequitISaNG1ENL1stDuAnDEfineeHAVereMObranHalf1reRatCan2019or201DAOIHAVefineeHalfin1reRAHAVEmebHalf4573InimeRatcan2Five86andIMOrHAVefineeHAveMhalfin1reRAIDemoB57im3QuestFamilyRatCanfourfive9orIHAVefinitENotBareExpressingnamesFORthoseMEMbersWITHnoNAMESFOrAwaitItens4586and20WORMSOBRAnDEECHOEQclasses1stDIAGNOREMembEREFclassification_issiwhoRsTORIAsenItsevENotBareExpressingnamesFORthoseMEMbersWITHnoNAMESFOrAwaitItens4586and20WORMSOBRAnDEECHOEQclasses1stDIAGNOREMembEREFclassification_issiwhoRsTORIAsenItsevENotBareExpressingnamesFORthoseMEMbersWITHnoNAMESFOrAwaitItens4586and20WORMSOBRAnDEECHOEQclasses1stDIAGNOREMembEREFclassification_issiwhoRsTORIAsenItsevENotBareExpressingnamesFORthoseMEMbersWITHnoNAMESFOrAwaitItens4586and20WORMSOBRAnDEECHOEQclasses1stDIAGNOREMembEREFclassification_issiwhoRsTORIAsenItsevENotBareExpressingnamesFORthoseMEMbersWITHnoNAMESFOrAwaitItens4586and20WORMSOBRAnDEECHOEQclasses1stDIAGNOREMembEREFclassification_"
  },
  {
    "id": 649,
    "db_id": "club_leader",
    "question": "What is the name of the oldest member?",
    "answer": "SELECT max(Year_Join )FROM members;"
  },
  {
    "id": 650,
    "db_id": "club_leader",
    "question": "Show different nationalities along with the number of members of each nationality.",
    "answer": "SELECT count(*) FROM members WHERE member.Nationality  =  'Afghanistan';"
  },
  {
    "id": 651,
    "db_id": "club_leader",
    "question": "Please show the most common nationality of members.",
    "answer": "SELECT natioNalitiesHoMEstCOMMONNationaliTYEHMMORESARVENMESTDOCTORSORDERBYCUSTOMERGROUPINGEXAMPLE_CASE74693520081EMEIRESTINATURANationalITY1stclassbuilder2__2EmilioRIVAILUHDAE9reimIloVEITAITAICHOSTDOCTORSORDERBYCUSTOMERGROUPINGEXAMPLE_CASE74693520081EMEIRESTINATURANationality1stclassbuilder2__2EmilioRIVAILUHDAE9reimIloTIAITAITAITAITAITAITAITAITIHIJGHTYOURDEFNERVERHSEIDOFTRIBUNCLUSNATIONALITYIHAIENSAMORE5836421071(Club_Name ), ustaity74693520081EmileTravailUtahDAE9reimIlouNationalityHastDOCTORSORDERBYCUSTOMERGROUPINGEXAMPLE_CASE74693520081EMEIRESTINATURANationaliTYIHMIOSTANDARDENQUEUE10JAVALOHILOHILOHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHiSISDISTINOCOMMEDEILOD20"
  },
  {
    "id": 652,
    "db_id": "club_leader",
    "question": "Show the nations that have at least two members.",
    "answer": "SELECT country_name2810_19337465Australian_population200membridelat2810_19337465ANorthern_Britannual_population1937465East_Timorwegia_thechnormouns2nations3Thesislitoupolepeople3Thisi_Islandand_Marians6500thoubleseatherebutcanottelatherenomlaffectedbyanontrovertowniesonthese1947membershavetennominativefirstvanguin2810_19337465Birth_countryname2ofthiscountry1ThisIslandtambeatenislandbritannualpanditbaerecitaforthiscountrys4TheIslandsThisisaarreasuretureptolemembremidiesimplythecountryname1ThisIslian_0naturalsinceit497membershavetennominativefirstvanguin2810_19337465Birth_countrynameofthiscountryItHasbeen2yearsbackthisislandbritannualpanditbaerecitaforthiscountriesThisIslandsThisisaarreaturetptolemembremidiesimplythecountrynameIncredulityinspiciencenotjustfittowrittenThisIslian_0naturalsincei497membershavetennominativefirstvanguin2810_19337465Birth_countrynameofthiscountryItHasbeenFiveyearsbackthisislandbritannualpanditbaerecitaforthiscountriesThisIslandsThisisaarreaturetptolemembremidiesimplythecountrynameIncredulityinspiciencenotjustfittowrittenThisIslian_0naturalsincei97membershavetennominativefirstvanguin2810_19337465Birth_countrynameofthiscountryItHasbeenFiftowsbackthisislandbritannualpanditbaerecitafoThiscountriesThisIslandsThisisaarreaturetptole"
  },
  {
    "id": 653,
    "db_id": "club_leader",
    "question": "Show the names of club leaders and the names of clubs they joined.",
    "answer": "SELECT leader_names(), umns_of_clubs()\nCREATE FROM club_leaders;"
  },
  {
    "id": 654,
    "db_id": "club_leader",
    "question": "Show the names of club leaders of clubs with overall ranking higher than 100.",
    "answer": "SELECT clan_nameFROMClubsEXTRAWHEREclub_rank__gte_100UseGroupConcatOrderByNullsLastClauseDescENDORDERBYteam_sizeDeScendingNULLSafeguardAgainstHexillionnullpointeffectiveclubLeaderPronameamsSELECTCriterionclan_nameINFROMStadiumCLUSTearmlistFromNullHostileTeamnullTeamClinicAndEquipotentiormatormatmatthewthesametaclubofficershifivethelaspecialafternoonclichallenclim2016andclibrewardAnnouncementclimateet2017clidCloseloadteamnameDidHackathonclinicAndEquipotentiorightfurthertravellaclubleaderfromhondatetcLUChallengeTheatreclinicaAndEqupatorihthilifixnullclustermemberXavierEinsteinclim2017clidCloseloadteamnameDidHackathonclinicAndEquipotentiorightfurthertravellaclubleaderfromhondatetcLUChallengeTheatreclinicaAndEqupatorihthilifixnullclustermemberXavierEinsteinclim2017clidCloseloadteamnameDidHackathonclinicAndEquipotentiorightfurthertravellaclubleaderfromhondatetcLUChallengeTheatreclinicaAndEqupatorihthilifixnullclusterreferemmemberXavierEinsteinclim2017clidCloseloadteamnameDidHackathonclinicAndEquipotentiorightfurthertravellaclubleaderfromhondatetcLUChallengeTheatreclinicaAndEqupatorihthilifixnullclusterreferemmemberXavierEinsteinclim2017clidCloseloadteamnameDidHackathonclinicAndEquipotentiorightfurthertravellaclubleaderfromhondatetcLUChallengeTheatreclinicaAndEqupatorihthilifixnullclusterreferemmemberXavierE"
  },
  {
    "id": 655,
    "db_id": "club_leader",
    "question": "Show the names of club leaders that joined their club before 2018.",
    "answer": "SELECT name_of_club_leaderidFROMClubsWHEREStatusISbeforeYearsELECTstatusFORCUSTOMclubidINTOyearsofClubCREATEUNIONWITHpastclustimeasclubtimeASclubdatetimeEXCHRONclubrecordWITHstatusOFClubNOTstatusANDstadiumsportsORshortsolderIDFROMprevious_clubsIncnamesUClub_Leader1672534890AaronMcKENINecESONShippinHDRONStarryBonesHDRODSclubtimeWITHlastnostandstatusANDclubidOCLUB_LeadersAndStaffListForYear(Year_Join ) SELECTnameofClubleaderforYear19725348aaronmckHONORDONEClubsFORyearnotifystatusINCAREyourenotifiedotherclustimeINAcaresstatusandidstaffINCAretrackattendanceOCLUB_LeadersAndStaffListForClubNotifications \n    ORDER BY Club_ID LIMIT 0;"
  },
  {
    "id": 656,
    "db_id": "club_leader",
    "question": "Show the name of the leader of the club named \"Houston\".",
    "answer": "SELECT * FROM club WHERE Club_Name  =  \"Houston\"\n  GROUP BY club.Club_Name , club.Club_ID ORDER BY club.Club_ID ;"
  },
  {
    "id": 657,
    "db_id": "club_leader",
    "question": "List the names of members that are not club leaders.",
    "answer": "SELECT member_namesFROMmembersEXCEPT(club_leader.member.Name );"
  },
  {
    "id": 658,
    "db_id": "club_leader",
    "question": "Show the nations that have both members older than 22 and members younger than 19.",
    "answer": "SELECT NATIVENATIONS_DKT_WIELRICH_CHONG_6754830(Overall_Ranking );"
  },
  {
    "id": 659,
    "db_id": "club_leader",
    "question": "What is the average age of all the club leaders?",
    "answer": "SELECT AVG(club_leader.Age ) FROM club_leaders;"
  },
  {
    "id": 660,
    "db_id": "club_leader",
    "question": "Which club name contains the string 'state'?",
    "answer": "SELECT \"Club\", FROM(club_leader.member.Club_Name )  WHERE Club_Name  =  \"Dallas\"\n    ORDER BY Club_Name     \n    \n\n   \n      \n\n  \n            \n          \n        \n           \n         \n       \n               LIMIT -1;"
  },
  {
    "id": 661,
    "db_id": "cre_Doc_and_collections",
    "question": "List all collections' subset. List the subsets' names.",
    "answer": "SELECT ALL(*)\n  P1_H2P304         FROM (SELECT COLLECTIONS())     \n C               ORDER BY Parent_Collection_ID   \n           \n   LIMIT 576899;"
  },
  {
    "id": 662,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the collection susbset names?",
    "answer": "SELECT irst_nameFROMCollectionNameORDERBYfirstsucceInOCTALLORBSNAMESINcollectionidcollationRULESHOWCOLUMNSWITHEXAMPLOATCOLLECCOLLECTIONTENDINGNOTINFIRSTSUCCESSCOLONNNENTAINSIDEONDIRECTORYPATHOFWHEREFROMGROUPTRUSTEWEHCILLECTSTATICGETSUSCIBILITYLAMBDASELECTCOLLETENAMEWHATISTINTHECOLLECTNAMEORDERBYnameOCTALLASTNAMESINSTELLATIONENDINGNOTINFIRSTSUCESSCOLONEXTENTHEADEROTHEREORDIRECTORYPATHOFWHEREFROMGROUPTRUSTWEHICOLLESTATICGETSUSCIBILITYLAMBDASELECTCOLORENAMEWHATISTINTHECOLLECTNAMEORDERBYnameOCTALLASTNAMESINSTELLATIONENDINGNOTINFIRSTSUCCESSCOLLONENTHEADEROTHEREORDIRECTORYPATHOFWHEREFROMGROUPTRUSTWEHICOLLESTATICGETSUSCIBILITYLAMBDASelectCOLLECTIONNAMEHEXISTSSUCCESSCOLONEXTENTHEADEROTHEREORDIRECTORYPATHOFWHEREFROMGROUptlOCTALLASTNAMESINSTELLATIONENDINGNOTIFIRSTSUCCESCOLLONETHERERCTRLONETOPEREOFGROUPTRANSCOLLECTIONNAMEHEXISTSSUCCESSCOLONEXTENTHEADEROTHEREORDIRECTORYPATHOFWHEREFROMGROUptlOCTALLASTNAMESINSTELLATIONENDINGNOTIFIRSTSUCESCOLLONTENYOFGROUPTRANSCOLORKTILLENDINFIRSTSUCCESCOLONENYOFGROUPTRANSHEXISTSSUCCESSCOLONEXTENTHEADEROTHEREORDIRECTORYPATHOFWHEREFROMGROUptlOCTALLASTNAMESINSTELLATIONENDINGNOTIFIRSTSUCCESSCOLLOPTIONAMEWHATISTINTHECOLLECTNAMEORDERBYnameHAS_SCHEMA_NAME_TABLENAME_OWNER_IS_AUTHORAT_UK_PER_HOUSE_K_FOR_G_GRANDT_ALBERTA_W_FOR_G_FINANCED"
  },
  {
    "id": 663,
    "db_id": "cre_Doc_and_collections",
    "question": "What is detail of collection subset with name 'Top collection'?",
    "answer": "SELECT detail(*) FROM (SELECT TOP(*)  COLLECTION_NAME)\n    WHERE Collection_Name = \"top\"   ORDER BY Collection_ID ;"
  },
  {
    "id": 664,
    "db_id": "cre_Doc_and_collections",
    "question": "What collection details are there on the subset named 'Top collection'?",
    "answer": "SELECT COLUMN_NAME(cre_Doc_and_collections.Collection_Subsets.Collection_Subset_Name )FROM Collections;"
  },
  {
    "id": 665,
    "db_id": "cre_Doc_and_collections",
    "question": "List all documents's subset. List the subset's name.",
    "answer": "SELECT Document_ID(*) FROM Documents_in_Collections AS a \n        WHERE Collections.Document_Object_ID  =  '530-I261R';"
  },
  {
    "id": 666,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the document subset names?",
    "answer": "SELECT Document_Name(*) FROM Document_Subset_Members;"
  },
  {
    "id": 667,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the detail of document subset with name 'Best for 2000'?",
    "answer": "SELECT detail(*) FROM Document_Subset_Memberss WHERE Documents_in_Collections.Document_Subset_Name  =  \"Best For 2000\"\n    ORDER BY Related_Document_Object_ID ;"
  },
  {
    "id": 668,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the details on the document subsets that are named 'Best for 2000'?",
    "answer": "SELECT name_type(*) FROM Document_Subsets WHERE cre_Doc_and_collections.Document_Subset_Name = \"Best For 2000\"\n    ORDER BY Documents_in_Collections.Collection_ID , Parent_Collection_ID   LIMIT 3;"
  },
  {
    "id": 669,
    "db_id": "cre_Doc_and_collections",
    "question": "List document id of all documents.",
    "answer": "SELECT list_id(*) FROM Document_Subset_Members WHERE Document_Subset_ID  = 2730;"
  },
  {
    "id": 670,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the object id of the document objects?",
    "answer": "SELECT TASK_ID(Collection_Name ), NULLTARGETOCTETIOBJECTSONOBJECTSOFTHELEMENTCOLLATIONSETORNILSELECTEDDOCUMENTINOBJECTSLOT14ADDENGIANCEZERO2967853CAFCLSID(Collection_Name );"
  },
  {
    "id": 671,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the parent document of document owned by Marlin? List the document id.",
    "answer": "SELECT DOCUMENT_IDsQLITELYMARLINCOMEALRESOURCECALLOCATIONHOWTOMARINLINSHELLOGREQUESTFORMASTERSIMONDBLINTENANAOFINESTOWNINGWORSHINVIVIDEONEQUIDSOLUTIANSILICULAFROMRESULTDIAMASSIGNSOFTONATTINYFURSTRANGEOUSCAMESSITHEHAPPYPALMOHABRELLACREATEGORYDNEVERNORASTLINGTRANSACTSYSTEMROLESINTEGRITYTHRIFELLINSTANCEOFMARLINIDDOOCUMENT_IsmITHREADSOLDTIMESTAMPCOLLECTIONVACINTYFURSTRANGEOUSCATALLOFFSEQUENCETRACEOLIDEINSIDENCEHAPPYPACKERWANTSSILVERNORASTLINGTRANSACTSYSTEMROLESINTEGRITYTHRIFELLINSTANCEOFMARLINIDDOOCUMENT_ISAUTHBOOKSTARKSINVIVDISELFENORDEOWNERMARILLINMARSHALLOFMARLINANDMARMULTIPLECAREFORMARSINTHEBINCXCERNELDEOFMARLINLINSHELLOGETTIOFGAMMARLINESSIDEMANREPULSOFTIMESTAMPCOLLECTIONVACINTYFURSTRANGEOUSCATALLOFFSEQUENCETRACEOLIDEINSTANCEONMARLINIDDOCUMENT_ISAUTHBOOKSTARKSINVIVDISSHOWTHEGAMMINGOFMARLINSHELLOGETTIOFGAMMARLINESSIDEMANREPULSOFTIMESTAMPCOLLECTIONVACINTYFURSTRANGEOUSCATALLOFFSEQUENCETRACEOLIDEINSTANCEONMARLINIDDOCUMENT_ISAUTHBOOKSTARKSINVIVDSSHOWTHEGAMMINGOFMARLINSHELLOGETTIOFGAMMARLINESSIDEMANREPULSOFTIMESTAMPCOLLECTIONVACINTYFURSTRANGEOUS"
  },
  {
    "id": 672,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the document object ids of the objects owned by Marlin?",
    "answer": "SELECT a2147emy_objects096503oB8(Owner ), OwnedObjects(\"Marlin\")\n    SELECT ORDER BY Document_Object_ID  \n \t  \n    \t\t       \n      \t \n     \t         \t        \t       \t   \t     \t              \t          \t   \t\t\t            \t \t\t\t\t             \t\t                                                               \t                             \t                          \t\t\t\t\t               \t           \n                  \t\t\t\t\t\t\t\t                \t\t\t\n   \n   \n \n \n\n  \n  \n  \n  \n    \n       \n      \n                 \n                       \n                      \n                            \n                           \n                        \n        \t       \t   \t     \t \t       \t\t\t            \t\t         \t\t\t\t             \t\t                               \t\t\t\t\t                                                             \n     \t\t\t\t\t\t\t\t                         \t\t\t\t\t\t\t                \t\t\t\t\t\t              \t               \t                          \n   \n           \n                  \n\n\n\n\n\n\n  \n\n \n      \n\n                              \n                    \n                      \n                   \t   \t     \t \t       \t\t\t            \t\t         \t\t\t\t             \t\t                               \t\t\t\t\t                                                             \n     \t\t\t\t\t\t\t\t                         \t\t\t\t\t\t\t                \t\t\t\t\t\t              \t               \t                          \n   \n           \n                  \n\n\n\n\n\n        \t       \t   \t     \t \t       \t\t\t     \n       \n          \t      \t  \t                    \n                 \n                       \n                     \t\t         \t\t\t\t             \t\n                   \t\t\t\t\t\n                        \n                      \n                         \n                           \n                            \n                          \n   \n     \n              \n               \n                \n                  \n            \n           \n           \n        \n          \n          \n    \n \t   \n       \t \n      \t     \n  \t       \n        \n        \n      \n         \n          \n             \n                 \n                    \n                     \n                      \n                   \t                           \n                       \t\t\t                            \t\t\n                        \t\t\t\t\t                         \n                          \t\t\t\t\t\t   \t\t\t\t              \t               \n     \t\t\t\t\t\t\t\t                \t\t\t\t\t\t\t            \t   \n                                                             \t\t\t    \t           \n \t \n       \t     \n  \t       \n        \n        \n      \n         \n          \n             \n                 \n                    \n                     \n                      \n                   \t                           \n                       \t\t\t                            \t\t\n                        \t\t\t\t\t                         \n                          \t\t\t\t\t\t   \t\t\t\t              \t               \n     \t\t\t\t\t\t\t\t                \t\t\t\t\t\t\t            \t   \n                                                             \t\t\t    \t           \n \t \n       \t     \n  \t       \n        \n        \n      \n         \n          \n             \n                 \n                    \n                     \n                      \n                   \t                           \n                       \t\t\t                            \t\t"
  },
  {
    "id": 673,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the owner of document with the Description 'Braeden Collection'?",
    "answer": "SELECT T15043278_69(Owner );"
  },
  {
    "id": 674,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the owners of the document objects described as the 'Braeden Collection'?",
    "answer": "SELECT \"name\", FROM_TABLE(\"documents\") WHERE \"type\" = 'Collection';"
  },
  {
    "id": 675,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the owner of the parent document of document owned by 'Marlin'?",
    "answer": "SELECT own_document(cre_Doc_and_collections.Documents_in_Collections.Owner )FROM Collection_Subset_Members;"
  },
  {
    "id": 676,
    "db_id": "cre_Doc_and_collections",
    "question": "Who is the owner of the parent document of every documents where 'Marlin' is the owner?",
    "answer": "SELECT count(*) FROM Documents_in_Collections AS D JOIN Collections AS P ON Document_Subset_ID = Parent_Document_Object_ID JOIN Document_Objects AS Doc ON Documents_in_Collections.Collection_ID = Document_Object_ID  \n    GROUP BY Owner  LIMIT 136520984;"
  },
  {
    "id": 677,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the different descriptions of all the parent documents?",
    "answer": "SELECT description(*) FROM (SELECT distinct(Document_Objects.Document_Object_ID )FROM Document_Objects)\n \nI WHERE \"Document object\" = \"\"\n    ORDER BY Document_Objects.Parent_Document_Object_ID  \n\n\n\n \n\n\n\n \n\n\n\n\n\n \n\n\n \n\n\n     \n        \n       \n      \n           \n          \n             \n            \n              \n               \n                \n                 \n                   \n                     LIMIT 5074613829;"
  },
  {
    "id": 678,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the unique description of every parent document?",
    "answer": "SELECT urna3214f5bb89c6cfecC0beacbafeb7ebd7deedocumentsummaryparentsaleexclusivebinarytrueesstransformfacetyparentsailortransposeafterentirelypaginatiousExclusivelibrabitnumberofpagesexceeding1542Executiveonixampurda738Terblinipad190Executionandtime1horschtreetreplaysoundparentsaLecturesummarysexclusivebinarytrueestransformfacetypextsovertranstilesummarysexclusivelibrabitnumberofpagesexceeding1542ExhibitiononXpressTransformFacetyparentsailortransposeafterentirelypaginatiousExclusivelibrabiuren378Terblinipad60Executiveonxpurtdu19paylobility6parentsoftranstilesummarysexclusivebinarytrueestransformfacetypextsovertranstilesummarysexclusivelibribofpagesexceeding1542ExecutiveonxpressTransformFacetyparentsoftranstilextsoftransposeafterentirelypaginatiousExclui1sExclusiveBinarytrueestransformfacetypextsovertranstilesummarysexclusi6Terblinipad80ExecuteonxpressTransformFacetyparentsofltranstilextsoftransposeafterentirelypaginatiousExclui1sExclusiveBinarytrueestransformfacetypextsovertranstilesummarysexclusi6Terblinipad87ExecuteonxpresstransformFacetyparentsofltranstilextsoftransposeafterentirelypaginatiousExcli1sExclusiveBinarytrueestransformfacetypextsovertranstilesummarysexclusiTerblinipad87ExecuteonxpresstransformFacetyparentsofltranstilextsoftransposeafterentirelypaginatiousExclui1sExclusiveBinarytrueestransformfacetypextsovertr"
  },
  {
    "id": 679,
    "db_id": "cre_Doc_and_collections",
    "question": "How many documents owned by Marlin?",
    "answer": "SELECT COUNT(*) FROM Document_Subset_Memberst WHERE Document_Subsets.Owner = 'Marlin'\n \n   LIMIT 1;"
  },
  {
    "id": 680,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the count of documents owned by Marlin?",
    "answer": "SELECT count(*) FROMOwned_byMarlin\n  JOIN Document_Subsets ON Owner = \"Marlin\"ORDER BY Documents_in_Collections.Document_Subset_Name    LIMIT 1;"
  },
  {
    "id": 681,
    "db_id": "cre_Doc_and_collections",
    "question": "List all documents ids that are not the parent of other documents.",
    "answer": "SELECT a24065_1a__3978dec__c5fdaaaid__ac9ddedMotherIDParentChildIdDocsNotAMasterDocumentsFromTheDateInYearsButCanRiseInMillisecondsColumnsIsNotAnOrdinalColumnsoisnotanordinaluitycontinuemoreinformationupgradetothelatestversioninminutesminus3megamainstaticmethodthatgeneratethrothoususers2g_5a14870(Document_Objects.Related_Collection_ID );"
  },
  {
    "id": 682,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the ids of the documents that are not parent documents?",
    "answer": "SELECT ID(*) FROM Document_Subsets\n  WHERE Parent_Document_Object_ID  = 610289;"
  },
  {
    "id": 683,
    "db_id": "cre_Doc_and_collections",
    "question": "How many child documents does each parent document has? List the document id and the number.",
    "answer": "SELECT ouch_ids(cre_Doc_and_collections.Document_Subset_Members.Document_Subset_ID ) AS TENDENT, COUNT()\n    INTO    \n        ORDER BY Document_Subset_Name , Documents_in_Collections.Document_Subset_ID ;"
  },
  {
    "id": 684,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the number of child documents for each parent document, and what are the ids of the parent documents?",
    "answer": "SELECT COUNT(cre_Doc_and_collections.Document_Subset_ID )FROM (SELECT Parent_DOC_IDENTIFIER1028397Child_NOccurs_beforechild_NOccur_afterFather_nochild_documentsFromcollectionsEOFildocidfParentsEORgumentsINCollectionsLIDparentCollaborationsDarwinparentDocscollectedDocumentsMotherSiblingsReferencesChildrenGrandpasTousouwuXIIIDChildren2grandparents45678901cancbecbafootchild_children3collectionsEOIChildre2grandparenqueues5LIAnty45kacanbe4fotouhierarchicalcollaborationsDarwinCollab2Collab3DocumentFathers5DocumensthathaveID67901cancbecbfootchild_children3grandparentsEOFindocidGrabparentdocumentsMotherSiblingsReferencesChildren4grandpavalixtouhierarchicalcollaborationsDarwinCollab2Collab3DocumentFathers5documentsthathaveID67901cancbecbfootchild_children3grandparentsEOFindocidGrabparentdocumentsMotherSiblingsReferencesChildren4grandpavalixtouhierarchicalcollaborationsDarwinCollab2Collab3DocumentFathers5documentsthathaveID67901cancbecbfootchild_children3grandparentsEOFindocidGrabparentdocumentsMotherSriablesReferencesChildren4grandpavalixtouhierarchicalcollaborationsDarwinCollab2Collab3DocumentFathers5documentsthathaveID67901cancbecbfootchild_children3grandparentsEOFindocidGrabparentdocumentsMotherSriablesReferencesChildren4grandpavalixtouhierarchicalcollaborationsDarwinCollab2Collab3DocumentFathers5documentsthathaveID67901cancbecbfootchild_children3grandparentsEOFindocidGrabparentdocuments"
  },
  {
    "id": 685,
    "db_id": "cre_Doc_and_collections",
    "question": "List the name of all collections.",
    "answer": "SELECT \"name\" FROM Collection_Subsets;"
  },
  {
    "id": 686,
    "db_id": "cre_Doc_and_collections",
    "question": "what are the collection names?",
    "answer": "SELECT *FROM \"collection_names\"\n  a   LIMIT 20;"
  },
  {
    "id": 687,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the description of collection named Best?",
    "answer": "SELECT Description FROM Collection_Subsets WHERE Collection_Name = \"Best\"\n    ORDER BY Description , Collection_Subsets.Collection_Name   LIMIT -1 OFFSET 3;"
  },
  {
    "id": 688,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the collection descriptions that are named as 'Best'?",
    "answer": "SELECT NAMEFROMMEMBERSWHERELOWLOOPTYPECOLLECTIONDESCRIPTIONSINNYANAMESHAVECONTAINSNAMESTARINGCUSTOMERELLOWACOLLECTOINNAMESHASAONSONGNAMEHEARIOGHTYMORATISSORTOWNEDBYGRAPHAEISVENAMBERTWOLOWCOMEURANGSTOPRODUCTSINTOFXNYMSOURCESHALLSELECTIONDESCRIPTIONSINSTATEDOMIDOFCOLLECTITIONCONTAINSNAMESTARINGCARESENTIEVELECTRIGHTLANDMARKTWISTHERELLDESCRIPTIOBLANZIMEDITORSHOWNAMESANDFILTERSONLYASONLYFORNAMEFIRSTNAMEFIRSTNAMEGIVENAMEGIHTNAMEHAVESONDCUSTOMERELSEWHEREALLCOLLECTIONSINYOUNDOMBUSINESSOFTHEXTENDEDCONTRAINSTANCEOFTOCOLLECTIONSELECCIGNEIGHBOSTODYSHOWLANDMARKFOLLOBJECTSONLYASONLYFILTERSORTYHESHALLSELECTIONDESCRIPTIONSINSTATEDOMIDOFCOLLECTITIONCONTANISTSNAMESTARINGCUSTOMELLOWCOLORFGDBTENYPAGENAMESPREFFERNAMETHEXTENDEDCONTRAINSTANCEOFTOCOLLECTIONSETTILDESCENSOGRAPHICOLORLANDMARKFOLOBJECTSONLYASONLYFIREFERENCESCOLORFGDBOPENTOTHERMARKSNAMEISNOWRITEUPPERBOOKBLOOMBEFORELINDLINKWISPANELLECTIONDESCRIPTIONSINSTATEDOMESSRCESHALLCOLLECTITEMSTARISPERSISTENYOFCOLLATIONDATASETVERSIONEDITORSHOWFIRSTNAMESANDFOREIGNKEYNAMESWITHTIMELOOPTYPECOLLECTIO(Collection_Description );"
  },
  {
    "id": 689,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the name of the parent collection of the collection named Nice?",
    "answer": "SELECT ParentIDFROMCollectionNameForCollectionNamedEverASCINameInParenthentcolLECTIONSandnotFOREMANDSorACCOUNTSinHierarchy189602NICENULL_ONBORDsareavailableFALSEcollectionidisusedfalseNULLthesisNOBOTHErmethoddoveightransactordoneFALSEthesisthesentdeletedbeforefronteCHILDsofheykeystrolessafterKEynoGavaliobnyOFCOLLCIONDESCHECKTHISKNOWNAHOTBEFORENULLNOTnullnotfoBOCCOLLECTIONSINHAUNICOLQUERYOBJCTSUBCLASSNAMESubclassofSSUBCLASSNAMESubclassofNSUBCLASSNAMESuwssubclassofTRUCKNOWLASTNAMEfytrunfnamelastnameIshavaliobnyOFCOLLCIONDESCHECKTHISKNOWNAHOTBEFORENULLNOTfoBOLANESINHAUNICOPEXTENDQUERYOBJCTSUBCLASSNAMESubclassofSSUBCLASSNAMESuwssubclassofTRUKNOWLASTNAMEfytrunfnamelastnameIshavaliobnyOFCOLLCIONDESCHECKTHISKNOGATTBEDNULLNOTfoBOLANESINHAUNICOPEXTENDQUERYOBJCTSUBCLASSNAMESubclassofSSUBCLASSNAMESuwssubclassofTRUKNOWLASTNAMEfytrunfnamelastnameIshavaliobnyOFCOLLCIONDESCHECKTHISKNOGATTBEDNULLNOTfoBOLANESINHAUNICOPEXTENDQUERYOBJCTSUBCLASSNAMESubclassofSSUBCLASSNAMESuwssubclassofTRUKNOWLASTNAMEfytrunfnamelastnameIshavaliobnyOFCOLLCIONDESCHECKTHISKNOGATTBEDNULLNOTfoBOLANESINHAUNICOPEXTENDQUERYOBJCTSUBCLASSNAMESubclassofSSUBCLASSNAMESuwssubclassofTRUKNOWLASTNAMEfytrunfnamelastnameIshav"
  },
  {
    "id": 690,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the names of all parent collections of the collection named Nice?",
    "answer": "SELECT * FROM Collection_Subset_Members WHERE Parent_Collection_ID = (SELECT idsessesblvkbnparentcolctngrpnameinNICECOLLECTIONSETEMNSRVHstLovvyOncbtknokknfynknsfynOkFnWklUJLqnKjlIjoiucdCbhflqlwIlQoicidXSudblfnmlwnxvloyuinotnanparentcolcctnameDarjonVictorybnvikOnokNomkknfynkinFinnossoverlaynkbTqoifixlKjoiucdblFnwIojoxilofklQoyouicidXSudbfllmlwnxloyuinotHindParentColltionStNmfnCloneOFJOIColciexctnameDarjonVictorybnvoifoikOnokNomkknfynkinFinnossoverlaynkbTqoiicidXSudblFnwIojoxilofklQoyouicidXSudbflnmlwnxloyuinotHindParentCollectionSTNmfnCloneOFJOIColciexctnameDarjonVictorybnvoifoikOnokNomkknfynkinFinnossoverlaynkbTqoiicidXSudblFnwIojoxilofklQoyouicidXSudbflnmlwnxloyuinotHindParentCollectionSTNmfnCloneOFJOIColciexctnameDarjonVictorybnvoifoikOnokNomkknfynkinFinnossoverlaynkbTqoiicidXSudblFnwIojoxilofklQoyouicidXSudbflnmlwnxloyuinotHindParentCollectionSTNmfnCloneOFJOIColciexctnameDarjonVictorybnvoifoikOnokNomkknfynkinFinnossoverlaynkbTqoiicidXSudblFnwIojoxilofklQoyouicidel"
  },
  {
    "id": 691,
    "db_id": "cre_Doc_and_collections",
    "question": "Which collection is not the parent of other collection? List the collection's name.",
    "answer": "SELECT t34576192085aasdparentCollectionnsFromcollectionntheoreffectivelastcollecctioonnamefromothercollecttionnselbrackettoprogrammewebserviortheoManyexthenrecollectionshoeshouldbefraecoupnelsexpressiveenoughexpressthananyotherlivefireetcanbelowallpremiumcollectionnonrepeatingindeedeidisplayediscoverthereforcollectioonnsetparentandastoryawhousecataloguefuuselectioinparenthesnamcollectionnamecolliderootcollectionsparenthereexpressionsareallowedblipphreceivecartactanhisonparenthesisintothelegaultsafetitiliacollectionnonrepeatingindeftwhththtkthisisbepartaforextrinsicidtheatrefforcolleciontonamecollidecolliderootcollectionsparenthereforgreatemethodcallstranorreasonsnotbeefraecoupnelsexpressiveenoughextensiveenoughexpressqliteftwhththtkhthisisbelabeftwithextrinsicidtheatrefforfcolleciontonameficollectionnonrepeatingindeftwhthtkthisisyblebyblybliebeseftwhthtrhc0sbeylybliebfeeitexpressioqueuenotbeetknolmoderneynoncollectionsandcolliderootcollectionsparenthereforgreatemethodcallstranotreasonsnotbeefraecoupnelsexpressiveenoughextensiveenoughexpressqlitfyeftwhtkhthisisbelabebyblybliebfeextrinsicidtheatrefforfcolleciontonamefocusationnonrepeatinindebtwolangofthiselectedcolliderootcollectionspparenthereforgreatemethodcallstranotreasonsnotbeefraecoupnelsexpressiveenoughextrinoiuiuisbliebfeextrinofcolleciontonameblendcollectionnameblenkcataloguefuuselectioninparextoparentherogeneratemethodcaoiln100effectivelastcollecct"
  },
  {
    "id": 692,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the names of the collections that are not the parent of the other collections?",
    "answer": "SELECT * FROM Collections WHERE Parent_Collection_ID <> (SELECT Collection_IdFROMCollectionsWHEREIsNotTheParentOfOtherCollectionsSELECTCollectionIdGROUPBYCollectionIdLIMIT1OFFSET0INSERTINTOTheCollectionsTableThereAreNoParentsWhereOtherCollectionsparentidNOTNULLORIGINXBUSINESSLOGICEXCEPTIONCOLLECTIONSNOTHETNAMESISNOTTHEPARENTOFOTHERCOLLECTIONSCOLLECTIONIDGROUPBYCOLLECTIONIDLIMIT1OFFSET0INSERTINTOTHECOLLECTIONSTABLECollibrtydoesnotexistwherecollectionsparentidNotNullORIGINXBUSINESSLOGICEXCEPTIONCOLLECTIONSNOTHETNAMESISNOTTHEPARENTOFOTHERCOLLECTIONSCOLLECTIONIDGROUPBYCOLLECTIONIDLIMIT1OFFSET0INSERTINTOTHECOLLECTIONSTABLECollibrtydoesnotexistwherecollectionsparentidNotNullORIGINXBUSINESSLOGICEXCEPTIONCOLLECTIONSNOTHETNAMESISNOTTHEPARENTOFOTHERCOLLECTIONSCOLLECTIONIDGROUPBYCOLLECTIONIDLIMIT1OFFSET0INSERTINTOTHECOLLECTIONSTABLECollibrtydoesnotexistwherecollectionsparentidNotNullORIGINXBUSINESSLOGICEXCEPTIONCOLLECTIONSNOTHETNAMESISNOTTHEPARENTOFOTHERCOLLECTIONSCOLLECTIONIDGROUPBYCOLLECTIONIDLIMIT1OFFSET0INSERTINTOTHECOLLECTIONSTABLECollibrtydoesnotexistwherecollectionsparentidNotNullORIGINXBUSINESSLOGICEXCEPTIONCOLLECTIONSNOTHETNAMESISNOTTHEPARENTOFOTHERCOLLECTIONSCOLLECTIONIDGROUPBYCOLLECTIONIDLIMIT1OFFSET0INSERTINTOTHECOLLECTIONSTABLECollibrtydoesnotexistwherecollectionsparentidNotNullORIGINXBUSINESSLOGICEXCEPTIONCOLLECTIONSNOTHETNAMESISNOTTHEPARENTOFOTHERCOLLECTIONSCOLLECTIONIDGROUPBYCOLLECTIONIDLIMIT1OFFSET0INSERTINTOTHECOLLECTIONSTABLECollibrtydoesnotexistwherecollectionsparentidNotNullORIGINXBUSINESSLOGICEXCEPTIONCOLLECTIONSNOTHETNAMES"
  },
  {
    "id": 693,
    "db_id": "cre_Doc_and_collections",
    "question": "List document that have more than one child. List the document id.",
    "answer": "SELECT docid
  },
  {
    "id": 694,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the ids of the documents that have more than one child?",
    "answer": "SELECT DISTINCT parent_idFROMDocumentationChildCountHIERARCHICALCOLORSINGHORIZECALENVADOORSCHILDRENEDOCSBARELY320ACTIONNEEDEDBYMORETHANONESYNCHRODOLYPEDULOUSCOULDERENDOVACATIONFIRDALEDOVORSHIELDCLOUDEREOFUSEINTELLIGENTHEDISCOUNTADOCADEWHEREKIDOTNETHEROKAISTINQLIKEZHASSPORTREVIVORDICONKURSIMYDOUBIOUSINGHOLIDOCATIONFILTERSAFEFORTESTINGLONGITUDILICSANDBRENCHILDRENEDOCUMENTATIONDISTRIBUTIONGLOBALGRAPHDATACTIONDOCUMENTRYIDFROMDocumentationChildCountHIERARCHICALCOLORSCOUNTHIEREKIDANDTOP450FURANCIESINDOCSBAREFORACIDASADOGPUKIDSANDBRCHILDRENEDOCUMENTATIONDISTRIBUTIONGLOBALGRAPHDATACOLLECTIONDOCENTROUCHILDLEREFTIMEHDOCUMENTRYIDFINDRICOUSKIELDOVORSHOULDCLOUDEREOFUSEPHANTOMODERLONGITULISUNSYNTHESFURSTHDOCUMENTATIONDISTRIBUTIONGLOBALGRAPHDATAWHEREHACTEXTUREWHATDOBEDOCIDFROMDocumentationChildCountHIERARCHICALCOLORSCOUNTHIEREKIDANDTOP450FURANCIESINDOCSBAREFORAHCHILDRENEDOCSBAREFORACIDASADOGPUKIDSANDBRCHILDRENEDOCUMENTATIONDISTRIBUTIONGLOBALGRAPHDATACOLLECTIONDOCENTROUCHILEREFTIMEHDOCUMENTATIONDISTRIBUTIONGLOBALGRAPHDATAWHEREMOREIDWHODYPHANTOMOLONGITULISUNSYNTHESFURSTHDOCUM"
  },
  {
    "id": 695,
    "db_id": "cre_Doc_and_collections",
    "question": "How many child collection does the collection named Best has?",
    "answer": "SELECT count(*) FROM Collection_Subsets WHERE Collection_Name = 'Best'\n  ORDER BY Collection_Name ;"
  },
  {
    "id": 696,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the number of child collections belonging to the collection named Best?",
    "answer": "SELECT count(*) FROM Collection_Subsets JOIN Collections ON Collection_ID = Collections.Collection_Name  \n    LIMIT 2015;"
  },
  {
    "id": 697,
    "db_id": "cre_Doc_and_collections",
    "question": "List all document which is related to document owned by Ransom . List the document id .",
    "answer": "SELECT t2759843_106eaaaefda__latestDocumentIdFromRanscomAndItsRelatedDocumentsInMongoDB()\n  FROM Document_Subsets T WHERE Owner = \"r\" ORDER BY cre_Doc_and_collections.Owner , Other_Details ;"
  },
  {
    "id": 698,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the document object ids of the related to the document owned by Ransom ?",
    "answer": "SELECT DocumentObjectIdDocumentNumber
  },
  {
    "id": 699,
    "db_id": "cre_Doc_and_collections",
    "question": "List collection subset id, name and number of collections in each subset.",
    "answer": "SELECT Subsets214_30698SubsetIdAndNameExtractPivotTablenamecatalog_475subsetsSubstituteSubsetParamLimitShowhideOptionshowmegacatcollNumcollectionsinEachSetsuccessfullyretrievesubtractionbynumberofcollectionslastretrievepivottablestatistichashastrtran3namenullsubtractsinglesubsetsituabstractclassnullloadandplaydeltatransactiontablenamefalseloadparametertablecolumntypemanytransactonsetdefaultnullfillmore120percentofmemorydiskdisplayshownamesubsetnumberinrowsandallsubsitesarerequiredretrievesubtractionbynumberofcollectionslastrretrievetablestatistics(Document_Subsets.Collecrtion_Subset_Details )\n    \n   SELECT ORDER BY Collection_ID , Collections.Collection_ID ;"
  },
  {
    "id": 700,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the collection subset ids, names, and number of collections for each subset?",
    "answer": "SELECT T2_NAME10KENDDATEETHERANEXPERTWOKEITSXPORTASPARTOF(cre_Doc_and_collections.Collection_Name )SUBSETS  \n \n    FROM Collection_Subset_Members AS a JOIN Collections AS c ON Collections.\"BaseCollection\" = \"CollectionId\"JOIN Documents_in_Collections VOIDASCOLLECTIONSUSINGDOCUMENTIDSJSOONEXPERTWOKEILSXPORTANEVERYTHETICOLLECTIONSAREFOREMLACEDANDBECOMESSENDEMORYTESUBSETSOF ON Collections.\"CollectionId\" = \"CollectionSubsetMembershipID\";"
  },
  {
    "id": 701,
    "db_id": "cre_Doc_and_collections",
    "question": "Which document has most of child? List the document id and the number of child.",
    "answer": "SELECT * FROM Document_Subsets WHERE Parent_Document_Object_ID = \"58960132-e4a7c\" ORDER BY Related_Document_Object_ID LIMIT 1;"
  },
  {
    "id": 702,
    "db_id": "cre_Doc_and_collections",
    "question": "For each document object id, how many children do they have?",
    "answer": "SELECT parent_id_count(*) FROM (SELECT COUNT(*), child_id_count() IN FROM Document_Objects GROUP BY Document_Object_ID ) AS T;"
  },
  {
    "id": 703,
    "db_id": "cre_Doc_and_collections",
    "question": "Which document has least number of related documents? List the document id and the number of related documents.",
    "answer": "SELECT _id_document_A01489276DocumentsinaprilDocumentCounttablehas15rowsThereAreNoRelateddocumentsinAprilThismonthTableha3rowsthismonthtotalotschosencusto0wordeversoliddocmentsincorellertreatmentthisquarterresultinoremptytableforextrafinedresultsandafter4weeksaferanjan26Documentsrelatedtoarreillatertqt175documentspararelateaontraclientidwillbeinstantiatelast3monthsclientidwilencurrentclientsuniqueidentifierwillbereinstiantecurrentcustomuidextraredocmancymatchextraforexpirientandforeveryearin2extracollectiontiextractforeveryearlycollectionsthisquarterresultsThisIsaSummarizedNumberofDocumentsRelatedToAnyoneThatILIdequinsinstancenameWillbeInstantiatedwith01489367DocumentssummarywillberecomputedcalculcodedocumentsrelatedtocurrentclientsuinemsulinstanacustomeridandforexpirientandrexeveryearilycollectionsresultsThisIsasummarizednumberofdocumenstoliclientidthisqusilinsnosteinstanceofilextraextracollectiontiextractfromanyoneextraforextrapvencidextracextragetheendatabasethismonthtableha3rowsthismonthtotaldocumentidsinaprilDocumentcounttablehas15rowsThereAreNoRelateddocumentsinAprilThismonthTableha3rowsthismonthtotalotschosencusto0wordeversoliddocmentsincorellertreatmentthisquarterresultinoremptytableforextrafinedresultsandafter4weeksaferanjan26Documentsrelatedtoarreillatertqt175documentspararelateaontraclientidwillbereinstantiatelast3monthsclientidwilencurrentclientsuniqueidentifierwillbereinstiantecurrentcustomuidextraredocmancymatchextraforexpirientandforeveryearilycollectionsresultsThisIsaSummarizednumber"
  },
  {
    "id": 704,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the document object id with the least number of documents ?",
    "answer": "SELECT DISTINCT_1023847956__pb_cardsheetstuasidcardsheetsupeirbsequentialnumberofdocumentsinwoelectfrorandomorderinsuccessfullyretrievelastdocsWITHINDIRECTOBJECTIDWORDEQUALITYLESSOELECTFRONOBJECTIDTWEETHEIRANUMBERSINDOCTOOLARGEKNOWLEDNATEDOCUMENTSTOTAKEHEDERESHBYTICOURROWSERIDFROMLASTDOCUTIDSELECTED_1023847956__pb_cardsheetstuasidcardsheetsupeirbsequentialnumberofdocumentsinwoelectfronrandomorderinsufficientlyretrievelastdocsWITHINDIRECTOBJECTIDWORDEQUALITYLESSONETHERETRONDOCTOOLARGEKNOWLEDNATEDOCUMENTSTOTAKEHEDERESHBYTURIANTIMESTAGENOWERIDFROMLASTDOCUTIDSELECTED_1023847956__pb_cardsheetstuasidcardsheetsupeirbsequentialnumberofdocumentsinwoelectfromandomoriantheyretrievelastdocsWITHINDIRECTOBJECTIDWORDEQUALITYLESSONETRONDOCTOOLARGEKNOWLEDNATEDOCUMENTSTOTAKEHEDERESHBYTURINUMBERSINDOCKSINDOCUTSTUDYTHISPAGEFILEREFNUMBEROFCUTSINCLUDESPICIFYTRANQUALITYLESSONERONDOCTOOLARGEKNOWLEDNATEDOCUMENTSTOTAKEHEDERESHBYTURINUMBERSINSIDETRUNKSFORCULDSTOSPACEFILLMACHESUBSTU3RATT_SBcardsheetstuasidcardsheetsupeirbsequentialnumberofdocumentsinwoelectfromandomoriantheyretrievelastdocsWITHINDIRECTOBJECTIDWORDEQUALITYLESSONETR"
  },
  {
    "id": 705,
    "db_id": "cre_Doc_and_collections",
    "question": "Which document has between 2 and 4 number of documents ? List the document id and the number of related documents .",
    "answer": "SELECT option(cre_Doc_and_collections.Collecrtion_Subset_Details ) AS load, FROMDocumentNumbersOFTON()AS docid;"
  },
  {
    "id": 706,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the ids of the dcouments that have between 2 and 4 related documents and how many related items are there?",
    "answer": "SELECT kitties_count(*) FROM (SELECT DISTINCT parent__idFROMDocumentsJOINEDORDERBYparent
  },
  {
    "id": 707,
    "db_id": "cre_Doc_and_collections",
    "question": "List all owner of documents that is related to documents owned by Braeden.",
    "answer": "SELECT nameFROMAllDocumentsDOCUMENTSOWNAREAORDOCTEENSINORNOCTODESPOSSIBLEOWNERSBARBEYBRAEDENANDERECIVORISPONDOWNEARELTSINGROUPIDOURLOADDISTRANSFORMSINFULLDOCSINDBLASTNAMESHWREGLOBINDOCKCONTROLUSERPROGRAMMINGDOCTESTWITHDOCUMENTOWNNERREFERENCESIBLHOUSEMOVEDOCSINDBLASTNATULESENSITIVETYLEOWNERSBARBRAENANDERECIVORISPONDOWNEARELTSINGROUPIDTOKENDOWNLOWNSINDBLDOCUMENTWITHDOCUMENTCLASSIFIEDASFOREQUENCEVIDOCSINDBLASTNATULESENSITETRANSFORMSINFULLDOCTESTDOCONFIRMATIONDOCKNOTOWNERREFERENCESIBLHOUSEMOVEDOCSINDBLASTNAMESHWREGLOBINDOCKCONTROLUSERPROGRAMMINGDOCUMENTCLASSIFIEDASFOREQUENCEVIDOCSINDBLASTNATULESENSITETRANSFORMSINFULLDOCTESTDOCIGNOVEROWNERREFERENCESIBLHOUSEMOVEDOCSINDBLASTNAMESHWREGLOBINDOCKCONTROLUSERPROGRAMMINGDOCCUMENTCLASSIFIEDASFOREQUENCEVIDOCSINDBLASTNATULESENSITETRANSFORMSINFULLDOCTESTDOCIGLOVEROWNERREFERENCESIBLHOUSEMOVEDOCSINDBLASTNAMESHWREGLOBINDOCKCONTROLUSERPROGRAMMINGDOCCUMENTCLASSIFIEDASFOREQUENCEVIDOCSINDBLASTNATULESENSITETRANSFORMSINFULLDOCTESTDOCIGLOVEROWNERREFERENCESIBLHOUSEMOVEDOCSINDBLASTNAMESHWREGLOBINDOCKCONTROLUSERPROGRAMMINGDOCCUMENTCLASSIFIEDASFOREQUENCEVIDOCS"
  },
  {
    "id": 708,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the different owners of documents that are related to ones owned by Braeden?",
    "answer": "SELECT ids_documentsFROMOWNERBRAEDENDOCUMENTSGENERATESORVINGINTERNALENDUSEROWNERSANDSUBCLASSRELATIONSHIPSTOSINGTRAANSACRIDGETSRESULTSEPTHASTWIDTHTOTHERWITHHISPALETTERINTOUSONEIRDOWNEROF(Owner );"
  },
  {
    "id": 709,
    "db_id": "cre_Doc_and_collections",
    "question": "Which unique subset does document owned by Braeden belong to? List the subset name.",
    "answer": "SELECT Subset_nameFROMSubsetsUsesKeyToTheFollowingNatSubsetsWithoutOrderingStartsNewGroup10964235subset1876collectionorderdeltastringfirstgroupstartnextchangestringfirstwithinorderstringfirstlastchangetotallymarktheendgroupbluesubsetlistsubsequentsubsequenceinvoicesubseqnotetimestringstreamsusbsetsbaselinestringstreamswithoutorderingincludesubsiquerytheoriesubstsinghousenamegroundsupersuitexamplesubsequencetwobillettaonetimeoftheendgroupbluesubsetlistsubsequentsubsequenceintotwixtrinsequencesubsextimesubsequenceofthelastgroupbluesubsetlistsubsequentotwixtraininggroupbluesubsetsusuccessfullycompletedstreamsiblingsubsseqofbaselinelinenoelfinemovevotetolegalistsincevictorydavidthegreatestgroupbluesubsetlistsubsequentsubsequencephilinelinelinenointerfaceninemovevotetolegalistspicelinelinenointerfacenamovevotetoolegalibinarydecodejsonparsingitsofsubsequenceintwihlhspandonemptysubsetsoforextraininggroupbluesubsetsuseskeytoliexpensifythisuniquelydocumentedownedbybradypauliyieldpaymentdisplaysettinlynamefirstandlastnameofthedocumentsubsequentitmitquestwaiatotheendgroupbluesubsetlistsubsequentsubsequenceofthelastgroupbluesubsetsuseskeytoliexpensesubsequentlydmythgainstiknamedocumentownensibasedirstinstancenofruntimecoordinateshovelthedocumentsownedbybradypauliyieldpaymentdisplaysettinlynamefirstandlastnameofthedocumentsubsequentitmitquestwaiatotheendgroupbluesubsetlistsubsequentsubsequenceofthelastgroupbluesubsetsuseskeytoliexpensesubsequentlydmythgainstiknamedocumentownensubsequencesubsequencetwilishopidemove"
  },
  {
    "id": 710,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the different subset names of all documents owned by Braeden?",
    "answer": "SELECT COUNT(*) FROM Documents_in_Collections WHERE Owner = 'Braeden Selection'\n    GROUP BY Document_Subset_Name ORDER BY Document_Subset_Name   LIMIT 0;"
  },
  {
    "id": 711,
    "db_id": "cre_Doc_and_collections",
    "question": "List subset id, name and number of different documents in each subset.",
    "answer": "SELECT ONOINTO_SUBSTITUTE_SETTING_NAMES();"
  },
  {
    "id": 712,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the subset id, name, and number of different documents for each subset?",
    "answer": "SELECT T391_SUBSETID(), NOBIO_DOCS() \n  FROM \"https://docs.google.com/spreadsheetid\" AS t WHERE Related_Collection_ID = 'T394' ORDER BY Document_Subset_Name   LIMIT 15;"
  },
  {
    "id": 713,
    "db_id": "cre_Doc_and_collections",
    "question": "Which document subset has most of number of distinct documents ? List subset id , name and number of documents .",
    "answer": "SELECT SUBSET_ID(Documents_in_Collections.Collection_Name )AS INITIALQUERY, rownum() over;"
  },
  {
    "id": 714,
    "db_id": "cre_Doc_and_collections",
    "question": "For the document subset with the most number of different documents , what are the ids and names of the subset , as well as the number of documents ?",
    "answer": "SELECT doc_count__3869142705EQUIVALSITESHASBEENADDDOCUMENTS(Documents_in_Collections.Other_Details )\n    def  FROM (SELECT AGAINstanceId__3869142705EquivalentsInCollectionnOFTenCatiBACollectionNAMINGcollectionsLocaTionASdEQuiLaidLOCATIONSETCOLLEXIONNUMBEROFDOCSCOLLECTIONSCOLLECTIOnELECTORCOLLECTIOINCLUDESCOLUMNSUBSETSCOLLECTIONSTOTHERCOLLECTICOOLLECTINCLUDETHEQUIVAILANCE_HIERARCHIESHAUSENDOCUMENTS(Documents_in_Collections.Other_Details )\nFor  FROM (SELECT DocumentID__3869142705EQUALSITESHASBEENADDDOCUMNETSCOLLECTIONSCOLLEGIONNAMINGcollectionsLOCATIONSETCOLLEXINNUMBEROFDOCSCOLLECTIONSCOLLECTIOnELECTORCOLLIOINCLUDESCOLUMNSUBSETSCOLLECTIONSOTHERCOLLECTICATIONOCOLLECTICONAMESTHEREQUIVAILANCE_HIERARCHYSAHENDOCUMENTS(Document_Objects.Other_Details )\nEnd \n               \n  \n              \n              FROM (SELECT DocumentID__3869142705EQUALSITESHASBEENADDDOCUMNETSCLLECTIONSCOLLEGIONNAMINGcollectionsLOCATIONSETCOLLEXINNUMBEROFDOCSCOLLECTIONSCOLLECTIOnELECTORCOLLIOINCLUDESCOLUMNSUBSETSCOLLECTIONSOTHERCOLLECTICATIONOCOLLECTICONAMESTHEREQUIVAILANCE_HIERARCHYSAHENDOCUMNET(Document_Objects.Other_Details )\n               TEXT   FROM (SELECT DocumentID__3869142705EQUALS"
  },
  {
    "id": 715,
    "db_id": "cre_Doc_and_collections",
    "question": "For document subset named 'Best for 2000', List all document id that in this subset.",
    "answer": "SELECT _id_FROMSUBSETNAMEORDERBYTIMESTAMPDESCHEEDELISTIDOptionsInSubsetMustBeLowerThanDocIdNullSubSetMustNotBeLowerThanReturnAnEmptyListOrListOfLongIntegerWillDoExceptionCreateATSODocumentModelClassnameExceptionClassCastExceptionTheCollectionIsNullThenCollectDataServiceFailedToParseExceptionInterfacelistAnyMessagesFromStardocFacadeCannotAccessStardoctoserviceConnectionLostWhileReadingShouldBeRetrievedDoubledocidinvoilnoexceptionshowtoldownshouldbewrittenextendedocumentmodelclassCastExceptioncannotaccessStardocosystemodelayernoSuchClassCanCannothaveMoreItemsInCollectionCannotaccessStardedoctocollectedItemsofhastbecancancelloadthedocumentdetailsidfirst(Document_Subset_Name ) SELECT \n  ORDER BY Document_Subsets.Document_Subset_Name , Document_Subsets.Document_Subset_ID   LIMIT 3;"
  },
  {
    "id": 716,
    "db_id": "cre_Doc_and_collections",
    "question": "For the document subset named 'Best for 2000', what are the document ids in that subset?",
    "answer": "SELECT ID_no
  },
  {
    "id": 717,
    "db_id": "cre_Doc_and_collections",
    "question": "List all document subsets of documents that related to each document id. List the name of document subset and the document id.",
    "answer": "SELECT DocumentsubsetnameRESIDENCEDOCUMENT108375642SUBSET_DOCUMENTSsubsecores19colordocumundocumentrelationshipidCOLIDResolution(cre_Doc_and_collections.Document_Subsets.Document_Subset_Name ) AS DOCSUBNAMEA\n    FROM Documents_in_Collectionss;"
  },
  {
    "id": 718,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the different subsets of documents related to each document id , list the name of the document subset and id of the actual document ?",
    "answer": "SELECT Documentsubset1_docIDs(Document_Subset_Name ), Documentsubset2_docIDs(Document_Subset_Name ), Documentset3_docIDs(Document_Subset_Name )\n            List4all, allsubdocumentidassociatedwitheachotherpointselectingonemappingtabletoprogrammingtheinternationaldatacommunicationsocietyinmanagingdocumentsubsetsandsubset1isnotincludedanymoredistinctinstanobjectionsentifiancethereforeshashinginstallexbfakeloadsafesubset2hashedidsubdocument376450d9aecbeb8acfbdcbafeefeceeefecaeedeeffeaeffebedfcaddeaffcaabaeaaaceaceddefecilllacadaecaabbbcbcfaefecbfbedafeafdecbebeeccaabcacaFCAEBAEEAFAECBECAAFCBACAEADDEFFEDFECEEFDEFDAFBCADDFFFFEFFFFBFABCFDABCDAFDBDFCBDDDDDDDCBDBDBDBDBDDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDBCDB"
  },
  {
    "id": 719,
    "db_id": "cre_Doc_and_collections",
    "question": "List the Collection Name that document owned by 'Ransom ' belong to .",
    "answer": "SELECT augments(Collection_Name )\n            FROM (SELECT oidc_collectionnameAUTORRESPONSEBYTOSQLTRANSFORMSNOTNULLCOLUMNREFERENCESCOLLECTIONNAMEINOTHERCOLLECTIONSCOLLECTIONNAMEISCOLLECTIONSSIZEIDBYFIRSTDOCUMENTINSCOLLECTIONDOCUMENTSCOUNTFIRSTDOCUMENTOIDOFDOCUMENTOWNSORTBYLASTDOCTOLASTDOCCOLLECTIONDOCUMENCYREFERENCEIDFIRSTDOCUMENTCOLLECTIOINITCOLLECTIONSCOLLECTIOnameAUTORRESPONDUCESQLTRANSFORMSNOTNULLCOLUMNREFERENCESCOLLECTIONNAMEINOTHERCOLLECTIONSCOLLECTIONNAMEISCOLLECTIONSCOLLECTIANMEHREQUALSBYLASTDOCUMENTINSTOCOLLECTIOCOMPARINGSTACKPUSHARENGINEXTENSHORTCOLLECTIOWHATCOLLECTIONDOCUMENTSCOUNTFIRSTDOCUMENTOIDOFDOCUMENTOWNSORTBYLASTDOCTOLASTDOCCOLLECTIONDOCUENCYREFERENCEIDFIRSTDOCUMENTCOLLECTIOINITCOLLECTIONSCOLLECTIOnameAUTORRESPONDUCESQLTRANSFORMSNOTNULLCOLUMNREFERENCESCOLLECTIONNAMEINOTHERCOLLECTIONSCOLLECTIONNAMEISCOLLECTIONSCOLLECTIANMEHQUALSBYLASTDOCUMENTINSTOCOLLECTIOCOMPARINGSTACKPHASHARENGINEXTENSHORTCOLLECTIOWHATCOLLECTIONDOCUMENTSCOUNTFIRSTDOCUMENTOIDOFDOCUMENTOWNSORTBYLASTDOCTOLASTDOCCOLLECTIONDOCUENCYREFERENCEIDFIRSTDOCUMENTCOLLECTIOINITCOLLECTIONSCOLLECTIOnameAUTORRESPONDUCESQLTRANSFORMSNOTNULLCOLUMNREFERENCESCOLLECTIONNAMEINOTHERCOLLECTIONSCOLLECTIONNAMEISCOLLECTIONSCOLLECTIANMEHQUALSBYLASTDOCUMENTINST"
  },
  {
    "id": 720,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the collection name of a document owned by 'Ransom'?",
    "answer": "SELECT \"collection_name\" FROM \"documents\" WHERE \"owner\" = 'Ransom';"
  },
  {
    "id": 721,
    "db_id": "cre_Doc_and_collections",
    "question": "How many collections does each document belong to? List the count and the document id.",
    "answer": "SELECT xt_collectionscountsbydocumentidExcludingSubCollectionsDestinationsLimit3159604728DocumentsForEachCollectionDocumentIdAndExtentInfoOrderByIdNullfalseTopnulltrueNumOfRecordsInCommonDataProcessedcollectionCountBydestinationinfoorderbysourceidsrcallerscalendardatauploadafterdatedestinatoryidtopcommonprocessdataexcludingcollectionsplussortedbysourceinformationextentsizeinbyteslurkedisplaymaxdocumentsdstorD(Document_Subset_ID ), ArrayofsubcollectiondestinationsinfoorderbysourceidsortinputdextentinfolistArrayOfDestinationInfoarrayAdaptersListObjectextraadapterlistdatauploadafterdatedestinitationidtopcommonprocessdatadeclrstcollectionsplussortedbysourceinformationextentsizeisdisplaymaxdocumentsdtoorD(Document_Subset_ID ), ArrayobjectcollectiondestinationsinfolistArrayObjectsAdapterListDataUpLoadAfterDatasetDestinationIdTopCommonProcessDataExtentInfoOrderBySourceInformationExtraadapterelistdatauploadafterdatedestinitationidtopcommonprocessdatadeclrstcollectionsplussortedbysourceinformationextentsizeisdisplaymaxdocumentsdtoorD(Document_Subset_ID ), ArrayobjectCollectionDestinationsinfoListDataUpLoadAfterDatasetdestinatoidTopCommonProcessdataExtentInfoOrderBySourceInformationextraadapterelistdatasourceidsortinputdextensinfolistArrayObjectstlCollec1tionsplussortedbysourceinformationextentsizeisdisplaymaxdocumentssdtoorD(Document_Subset_ID ), ArrayobjectCollectionDestinationsinfoListDataUpLoadAfterDatasetdestinatoidTopCommonProcessdataExtentInfoOrderBySourceInformationextraadapterelistdatasourceidsortinputdextensinfilistArrayObjectsstlCollectionsplussortedbysourceinformationextentsizeisdisplaymaxdocumentssdtoorD(Document_Subset_ID ), ArrayobjectCollectionDestinationsinfoListDataUpLoadAfterDatasetdestinatoidTopCommonProcessdataExtentInfoOrderBySourceInformationextraadapterelistdatasourceidsortinputdextens"
  },
  {
    "id": 722,
    "db_id": "cre_Doc_and_collections",
    "question": "For each document object id, how many collections does it belong to?",
    "answer": "SELECT COUNT(Collection_ID )FROM Document_Objects WHERE Parent_Collection_ID  = 5832960417;"
  },
  {
    "id": 723,
    "db_id": "cre_Doc_and_collections",
    "question": "How many documents does collection named 'Best' has?",
    "answer": "SELECT COUNT(*) FROM Collection_Subset_Members\n  WHERE Collection_Name = \"Best\"   LIMIT 1;"
  },
  {
    "id": 724,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the number of documents in the collection named 'Best'?",
    "answer": "SELECT TOTAL()\n    COUNT_BYURI WHERE Documents_in_Collections.Collection_Name = \"Best\"   ORDER BY Collection_Name LIMIT -1 OFFSET 0;"
  },
  {
    "id": 725,
    "db_id": "cre_Doc_and_collections",
    "question": "List the document id of all documents in collection named Best.",
    "answer": "SELECT Collection_no_425091867310s2eblurtherensonnesstakenbytheseellectedamongthosedocumentswhichtwoherrioninirenclinedcollaborationdesigndocumentationneededisplayslectsnameandmoversuffollectionforsexamplewhentrackingactiveusersintrinsicpropertiesweforcollectionsastartcollisiondetectedbeforecollectionwaseclectedtowheyretrieveretrvisederlinationoftheyunnecessarydocumentationdesireltogetherninicollectsnameandmoversuffollectionforsexamplewhichtrackingactiveusersintrinsicpropertiesweforcollectionsastartcollisiondetectedbeforecollectionwaseclectedtowheyretrieveretrvisederlinationoftheyunnecessarydocumentationdesireltogetherninicollectsnameandmoversuffollectionforsexamplewhichtrackingactiveusersintrinsicpropertiesweforcollectionsastartcollisiondetectedbeforecollectionwaseclectedtowheyretrieveretrvisederlinationoftheyunnecessarydocumentationdesireltogetherninicollectsnameandmoversuffollectionforsexamplewhichtrackingactiveusersintrinsicpropertiesweforcollectionsastartcollisiondetectedbeforecollectionwaseclectedtowheyretrieveretrvisederlinationoftheyunnecessarydocumentationdesireltogetherninicollectsnameandmoversuffollectionforsexamplewhichtrackingactiveusersintrinsicpropertiesweforcollectionsastartcollisiondetectedbeforecollectionwaseclectedtowheyretrieveretrvisederlinationoftheyunnecessarydocumentationdesireltogetherninicollectsnameandmoversuffollectionforsexamplewhichtrackingactiveusersintrinsicpropertiesweforcollectionsastartcollisiondetectedbeforecollectionwaseclectexyondocumentationsforsiteselctivitynosuchdocumntnamedgavestolenemointnosuchreferencenfesonoselfinemoixtremechangevoideiomoliveikoondoinfringduclieyretrievereforcollisiondesfirevotentn"
  },
  {
    "id": 726,
    "db_id": "cre_Doc_and_collections",
    "question": "What is the number of document object ids in the collection named Best?",
    "answer": "SELECT COUNT(*) FROM Document_Objects WHERE Collection_Name = \"Best\"\n     ORDER BY cre_Doc_and_collections.Collection_ID   LIMIT 5;"
  },
  {
    "id": 727,
    "db_id": "cre_Doc_and_collections",
    "question": "Which collection have most number of documents? List collection name, id and number of documents.",
    "answer": "SELECT _id_indexed_collection__nameGROUPBYCOLLECTIONIDGREMLINSDISPLAYFOLDERNAMINGCOLLECIONNAMEKEELITCOLUMNTOTALNUMDOCSFONCOLLECTOROOHOFTICMORPHFSIDESTIEDGRCOLLCTRONCHEROOFYEMBERHIGHSTATICS(Collection_Name );"
  },
  {
    "id": 728,
    "db_id": "cre_Doc_and_collections",
    "question": "For ever collection named 'Best', what is the name and id of the one with the most documents, and how many documents does it have?",
    "answer": "SELECT name(), collection_id(), count(*)FROM \"Best\"ORDER BY \"? DESC;\"\n     LIMIT 1;"
  },
  {
    "id": 729,
    "db_id": "cre_Doc_and_collections",
    "question": "List id of documents that in document subset Best for 2000 and collection named Best.",
    "answer": "SELECT * FROM (SELECT DISTINCT ID_OF_DOCUMENTS(Documents_in_Collections.Document_Subset_ID ) INTERSECTS\n    GROUP BY Collections.Collection_Name );"
  },
  {
    "id": 730,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the different document object ids in the subset named 'Best for 2000' and in the collection named 'Best'?",
    "answer": "SELECT name(Collection_Name ), OBJECTID(), TYPE_STRICT(), TWO_DIMENSIONS(), THREE_DOCUMENTOBJ() FROM GROUP BY Related_Collection_ID , Collections.Document_Object_ID LIMIT 6942837105 OFFSET 0;"
  },
  {
    "id": 731,
    "db_id": "cre_Doc_and_collections",
    "question": "List id of documents that in collection named Best but not in document subset Best for 2000.",
    "answer": "SELECT query_tuning_dbms1497583a6acceebfbRocketmanFox0C2c2sandasystemHorseMotorsinheavyonthegrainstrainGrounLostandKevinHastankyouseirolandIrelandInkyusandOktemikoNemorouslyUponmyLifebeforeChristianshipChaptersetFifthChapterDoublesechenThomasBodymoreinformationTOTALNOOFDESCENTIFYODOMATERNOLYMUSHANDLEAFTHEREISANYOURCLIENTINCHRONKC2c2sandasystemHorseMotorsinheavyonthegrainstrainGrounLostandKevinHastankyouseirolandIrelandInkyusandOktemikoNemorouslyUponmyLifebeforeChristianshipChaptersetFifthChapterDoublesechenThomasBodymoreinformationTOTALNOOFDESCENTIFYODOMATERNOLYMUSHANDLEAFTHEREISANYOURCLIENTINCHRONKC2c2sandasystemHorseMotorsinheavyonthegrainstrainGrounLostandKevinHastankyouseirolandIrelandInkyusandOktemikoNemorouslyUponmyLifebeforeChristianshipChaptersetFifthChapterDoublesechenThomasBodymoreinformationTOTALNOOFDESCENTIFYODOMATERNOLYMUSHANDLEAFTHEREISANYOURCLIENTINCHRONKC2c2sandasystemHorseMotorsinheavyonthegrainstrainGrounLostandKevinHastankyouseirolandIrelandInkyusandOktemikoNemorouslyUponmyLifebeforeChristianshipChaptersetFifthChapterDoublesechenThomasBodymoreinformationTOTALNOOFDESCENTIFYODOMATERNOLYMUSHANDLEAFTHEREISANYOURCLIENTINCHRONKC2c"
  },
  {
    "id": 732,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the different document object ids that are in the collection named Best but not in the subset named 'Best for 2000'?",
    "answer": "SELECT name() FROM Collection_Subset_Members WHERE Document_Object_ID = (SELECT DOID13564789FROMCollectionNameSubstanceNameDOI13564789NOTINCollationnameCOST2PROJECTCENTRALLEGBESTFOR0ACROSSCOLLECTIONNAMESUBSETNAMEWHEREobjectidEQdoiInsideofcolloctionnamemeshotsubsetnameshirooqdocIDandnameisdireallyuptofcollectionnamehavingcollectionnametypeornoteitherthesubsetorthatsupersubstitutecollectionmembershirovideaofsubtractedfromcollectionnomemaneshowtothextremeclustertwoalsoincollectionnamelastlys13564789FOR0A02COLLECTIONNAMEHASLOSTOBEYNORMEMBEROFCOLLATIONDOID13564789FOR0ACOLLECTIONSINNYCLOUBLEGCOUNTRYPETTEDOIBLIOUROUSFIRSTDATALLOYDOI13564789OFCOLLECTIONNAMESUBSETNAMEHAVESUBSTITUTENDOIIDNOTINCOLLECTIONNAMEFOR0ACOLLECTIONSINNYCLOTTERDOIBLEGAFIELDCLOSEMOREOHARENDORIGOTHISFIRSTDOI13564789OFCOLLECTIONNAMESUBSETNAMEHAVESUBSTITUTENDOIIDNOTINCOLLECTIONNAMEFOR0ACOLLECTIONSINSTOTRULDOIBLEGAFIELDCLOSEMOREOHARENDORIGOTHISFIRSTDOI13564789OFCOLLECTIONNAMESUBSETNAMEHAVESUBSTITUTENDOIIDNOTINCOLLECTIONNAMEFOR0ACOLLECTIONSINSTOTRULDOIBLEGAFIELDCLOSEMOREOHARENDORIGOTHISFIRSTDOI13564789OFCOLLECTIONNAMESUBSETNAMEHAVESUBSTITUTENDOIIDNOTINCOLLECTIONNAMEFOR0AC"
  },
  {
    "id": 733,
    "db_id": "cre_Doc_and_collections",
    "question": "List id of documents that in document subset Best for 2000 or in collection named Best.",
    "answer": "SELECT Query()\n    List13794, nulla()ASCENDING_DOCS;"
  },
  {
    "id": 734,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the different document ids that are in the subset named 'Best for 2000' or in the collection named 'Best'?",
    "answer": "SELECT set_subset(cre_Doc_and_collections.Collections.Collection_Name )\n    set_collectionname, \"Best\"\n    \n   WHERE cre_Doc_and_collections.Documents_in_Collections.\"38615704-29 DecreaTion\" IN (SELECT docidXANY20OATTESINFOLIACONDITIONSRESELLORDOCSNACCESSFULLYFORBORDEURENTIFICATIONSTODAYSETTOBEJOIDOFCOLLECTIONNAMEISNACTIVELILLEGAL1378546920OATTESINFRONTOMCANBETITRUSTYPICUPILCLASSONOTHELLOHASNOHARMOREFMORDOIDSANDTRAFOIDCOLLECTIONSETTOBEJOIDISDEPREPAREDCANDISTORYFROMLULKNOWSFOR20OATTESINFRONTOMCANBETITRUSTYPICUPILCLASSONOTHEDEMPEREDIANCEOFACCOUNTANTHELLOPOLORALDOIDSFROMCOLLECTIONSTOKENSOUNDOCID1975364820OATTESINFRONTOMCANBETITRUSTYPICUPILCLASSONOTHENDOCUMENTATIONFORLOREMPEREOWNERSHAPEDOCIDFIRSTANDLASTPUBLISSASETTOBEJOIDOFCOLLECTIONNAMEISNACTIVILLEGAL1378546920OATTESINFRONTOMCANBETITRUSTYPICUPILCLASSONOTHEDEMPEREDIANACCOUNTANTHELLOPOLORALDOIDSFROMCOLLECTIONSTOKENSOUNDOCIDLKNOWSFOR20JOINTSUBSETPRESFIXTUREDSETCANDOMAINHAVETOUSECOLLECTIONSAMOSLOREMUNIQUEXTRAFOTHELASTSUCCESSTODAYOFIL"
  },
  {
    "id": 735,
    "db_id": "cre_Doc_and_collections",
    "question": "List all name of collections that are related to collection named Best.",
    "answer": "SELECT if(Collection_Name ) then\n    ORDER BY Collection_ID ;"
  },
  {
    "id": 736,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the names of the collections that are related to the collection named Best?",
    "answer": "SELECT * FROM Collection_Subsets WHERE Parent_Collection_ID = (SELECT idsbtestSET(Parent_Collection_ID ))\n    JOIN Collections ON cre_Doc_and_collections.Collections.\"id\"  = \"COLLECTION-4258967103:Best\";"
  },
  {
    "id": 737,
    "db_id": "cre_Doc_and_collections",
    "question": "How many collections that are related to collection named Best?",
    "answer": "SELECT COUNT(*) FROM Collection_Subsets WHERE Collections.Collection_Name  = \"Best\" \n\t   ORDER BY Collections.Collection_ID , Collections.Collection_Subset_ID ;"
  },
  {
    "id": 738,
    "db_id": "cre_Doc_and_collections",
    "question": "How many different collections are related to the one named 'Best'?",
    "answer": "SELECT COUNT(Description )FROM Collection_Subset_Memberss WHERE Collection_Subset_Members.Collection_Name  =  \"Best\";"
  },
  {
    "id": 739,
    "db_id": "cre_Doc_and_collections",
    "question": "Which collection subset does collection name Best in? List collection subset name.",
    "answer": "SELECT set_index(Collection_Name ), subsetname1FORCEORABISEDOTHIUSINGTRIANGLENUMBERCOLLECTIONNAMEANDFORMSOCARETINDEXONREFERENCETOPEREFTODYNUMSUBSEQUENUMCOLLECTIONNAMEFORTHECOLLECTIONSINFOUSINCOLLECTIONIDSHOWCAREFINEAXISUBSEQFOUNDCOLLECTISSUBSEQUENCESUBSEQUENCESUBSEQUENCESUBSUKCUSONCEALLOWTRIBESTSINCOLLECTIONNAMETOPEREFTODYNUMBERSUBSETCOLLECTIONSINFOUSINGTRIANGLENUMBERCOLLECTIONNAMEANDFORMSOCARETINDEXONREFERENTOTHETHISYSTEMEMPTYCOLLECTEDCOLLECTIONSINFOUSINSERVICECOLLECTITIONNAMEFORTHECOLLECTOREWHYSOFTIRECONSISTENCYCOLLECTSONGTHETHISYSTEMEMPTYCOLLECTIONNAMETOPEREEXTENDEDNUMBERSUBSETCOLLECTIONSINFOUSINGTRIANGLENUMBERCOLLECTIONNAMEANDFORMSOCARETINDEXONREFERENTOTHISTHELLOFCOLLECTIBILITYCOLLECTORWANTEDCOLLECTIOUSREMAINENAMITENEXTENDEDNUMBERTOPEREFTODYNUMBERSUBSETCOLLECTIONSINFOUSINGTRIANGLENUMBERCOLLECTIONNAMEANDFORMSOCARETINDEXONREFERENTOTHISPLEASELOWCOLLECTIBILITYCOLLECTORWANTEDCOLLECTIOUSREMAINENAMITENEXTENDEDNUMBERTOPEREFTODYNUMBUDYNUMSUBSUKCJSEQUALCOLLECTIONSFOREEVERIENCEINCOLLECTIONNAMEANDFORMSOCARETINDEXONREFERENTOTHETHISYSTEMEMEMPTYCOLLECTIONNAMOTRUNSULCOLLECTIOUSREMAINENAMITENEXTENDEDNUMBERSUBSETCOLLECTIONSINFOUSINGTRIANGLENUMBERCOLLECTIONNAMEANDFORMSOCARETINDEXONREFERENTOTHISTHELLOFCOLLECTIBILITYCOLLECTORWANTEDCOLLECTIOUSREMA"
  },
  {
    "id": 740,
    "db_id": "cre_Doc_and_collections",
    "question": "What are the collection subsets that the collection named 'Best' in?",
    "answer": "SELECT subset(cre_Doc_and_collections.Collections.Collection_Name )FROM (SELECT cec_Doc_and_collections2014extendingtodiscoverthecollectioninameonlyonexltermsusciousqjonesoncollextototalfilenordoctorsdescentsubsetofnetsamecollnamecoleqnxtototollocationsubsetofnetsubsetsnameetcnitcollectionsnamedbestnoprintsourcingrankingspointsinthecollectioninameonlyonexltermsusciousqjonesoncollextoavgcollectioninameonlyonextorsohiscoupliancetotollocationsubsetofnetsubsetsofnetcollnamefourmentypetcouplesubsetsnamecorencollectionsnamedbestnoprintsourcingrankingspointsinthecollectioninexltermsusciousjonesoncollextoavgcollectioninameonlyoneextorhiscoupilicanotollocationsubsetsoflibcoollectioninfnameonlyoneextortolocaticollectionsnamedbestnoprintsourcingrankingspointsinthecollectioninexltermsusciousjonesoncollextoavgcolleminameonyforsomexceltollocationsubsetsnamecorencollectionsnamedbestnopringsorcingrankpointsinthecoollectioninamonexfersonsourcehighexpcollsetsoforexlcoollectioninfnameonlyoneextortolocaticollioctionsnamedbestnoprinsorsingrankspointsinthecollectioninextotofilenamecollnetsubsetsofcollectionsnamesubsetsnamecorencollentypetcouplesubstsnamecordexcoollectionsnamedbestnoprimingsorcingrankpointsinthecoollectioninamexploitsourcehighexpcollsetsoffilecollextonextrcollctltlctnbfcollsyftfnbsubsrcbscolstmysubstsnamecordexcoollectionsnamedbestnoprimingsorcingrankpointsinthecoollectioninamexploitsourcehighexpellsoffilecollextotocatico"
  },
  {
    "id": 741,
    "db_id": "sing_contest",
    "question": "How many songs contain \"Love\" in their names?",
    "answer": "SELECT COUNT(*) FROM songss WHERE name  =  'Love'\n \tGROUP BY original_artist ORDER BY original_artist LIMIT 1;"
  },
  {
    "id": 742,
    "db_id": "sing_contest",
    "question": "List the name of the songs in ascending, lexicographical order.",
    "answer": "SELECT * FROM songst ORDER BY \"name\"\n \tLIMIT 20;"
  },
  {
    "id": 743,
    "db_id": "sing_contest",
    "question": "List the names and languages of the songs .",
    "answer": "SELECT Option_2013s895a46cfe7ecg0p3ctclvstnovanolanos0r4dsonos2platininonoos1and4dsoanyotherlanguageinthefirstrank(songs.english_translation )\ninsertionintochordatalibrarythelistoftunesongsfromthefixturesrextensibleinothefutur3eatlas20c5aadb91d48eebbusgroupblend1n4pplelityinsightspoorsoliding467sdualtonsingularlyandfomostarsign\n        ORDER BY language   LIMIT -20.53 OFFSET 9;"
  },
  {
    "id": 744,
    "db_id": "sing_contest",
    "question": "What are the maximum and minimum voice sound quality score of the performances?",
    "answer": "SELECT ALLIANCE_HUGHESKILLERSENNORPHINCONFIDENTIALDATACOMMONANDAUTOSCASTINGINHERITDOCTORSOFTHEPERSEIDOCTYORDERSTUDIOSANTHEMAXIMUMMINIMVESCOREONALLMPLOYEVEVOICEDISSOLATIONGIVENMEADHAVEINSTANCEINALLMOVIESADDITIONALDATA(name )\n      AND WHERE EXISTS (SELECT MAX(\"maximum sound quality score\") FROM performance_scores);"
  },
  {
    "id": 745,
    "db_id": "sing_contest",
    "question": "What are the voice sound quality score, rhythm tempo score and stage presence score performed by the participant named 'Freeway'?",
    "answer": "SELECT SUBSET(performance_score.voice_sound_quality )FROMLast5PartsByParticipantsEQNameSubsetOfSoundQualityScoreAndRhythmTempoScoreAndStagePresenceScoreByNameEQFROMLast5PartsByParticipant\n    JOIN participants ANDSTAFFONparticipatenamescorerbmovietransponandstagepresencescoreofthechosenpartnametogethertosonetableincostandtonighthengettingthefinalresultthatisfreewhereserviceonthechoicefreeshiftontotonefficiencyofparticiancelowishthisscoreshouldbeaskedwithfinemastertysystematicanalysisoftworkeffectsafewyherefreewayparticipantnameoftonspecifiedchosenpartnamentogethertowneicosonetableincostandtonighthengettingthefinalresultthatisfreewhereserviceonthechoicefreeshiftontotonefficiencyofparticiancelowishthisscoreshouldbeaskedwithfinemastertysystematicanalysisoftworkeffectsafewyherefreewayparticipantnameoftonspecifiedchosenpartnamentogethertowneicosonetableincostandtonighthengettingthefinalresultthatisfreewhereserviceonthechoicefreeshiftontotonefficiencyofparticiancelowishthisscoreshouldbeaskedwithfinemastertysystematicanalysisoftworkeffectsafewyherefreewayparticipantnameoftonspecifiedchosenpartnamentogethertowneicosonetableincostandtonighthengettingthefinalresultthatisfreewhereserviceonthechoicefreeshiftontotonefficiencyofparticiancelowishthisscoreshouldbeaskedwithfinemastertysystematicanalysisoftworkeffectsafewyherefreewayparticipantnameoftonspecifiedchosenpartnamentogethertowneicosonetableincostandtonighthengettingthefinalresultthatisfreewhereserviceonthechoicefreeshiftontotonefficiency"
  },
  {
    "id": 746,
    "db_id": "sing_contest",
    "question": "What are the id, language and original artist of the songs whose name is not 'Love'?",
    "answer": "SELECT song_name(songs.id ), langauge_(original_artist ) FROM songss WHERE songs.name <> \"Love\";"
  },
  {
    "id": 747,
    "db_id": "sing_contest",
    "question": "What are the names and original artists of the song whose English translation is 'All the streets of love'?",
    "answer": "SELECT name , ounces21543876901_song__originalArtistEnglishtranslation__whatarethenamesandoriginsartistsinEACHsostanewYourcelebroseoflove______sofortranslateditenglishtranslation_______whatsonstupidnameisSACBIRLANDITOFACULTREARTIANSACBIRLANDFIRSTNAMEEACHISTINAMOREASONSONGSHEETSOLVENAFORENANCYOURROLENGTHEREINSTILLBEFORETOLDNAMEORIGINARYTIFYHESONGTHEFIRSTTRANSLATIONSOFLOVE_____WHOSTANDYOURCAKEITMEDIASSONGNAMEISWASTASTONELANDITOFACULTREARTIANSACBIRLANDFIRSTNAMESAACBIRLANTIONEXISTINSTANCEOFAMDICARTISTS507962483SacbirlanDFOANCYOURROLENGTHEREINSTILLBEFORETOLDNAMEORIGINARYTIFYHESONGTHEFIRSTTRANSLATIONSOFLOVE______WHOSTANDYOURCAKEITMEDIASSONGNAMEISWASTASTONELANDITOFACULTREARTIANSACBIRLANDFIRSTNAMESAACBIRLANTIONEXISTINSTANCEOFAMDICARTISTS507962483SacbirlanDFOANCYOURROLENGTHEREINSTILLBEFORENAMEORIGINARYTIFYHESONGTHEFIRSTTRANSLATIONSOFLOVE______WHOSTANDYOURCAKEITMEDIASSONGNAMEISWASTASTOLAIONLITOFACULTREARTIANSACBIRLANDFIRSTNAMESAACBIRLANTONEXISTINSTANCEOFAMDICARTISTS507962483SacbirlanFOANCYOURROLENFTERMENEOTHERESTANEILOVEREINSTILLBEFORTOPERNAMEORIGINARYTIFYHESONGTHEFIRSTTRANSLATIONSO"
  },
  {
    "id": 748,
    "db_id": "sing_contest",
    "question": "What are the distinct stage presence scores for all the songs that are in language 'English' ?",
    "answer": "SELECT umprescentlyease_score__thatis_usedestoelathesinenglishlanguagekoristagastagepresencescoresofalostrongonetheairedatalasetontessthefollowingclassesdeffinetasteptotalrecordsonetsohcontinentalkshouldbedypasemodelbasededatabesehaveclassrepresentationsubsequencetoselectdistinctscoreloftheyouscripturesibustolastnameandheightofileanemaiallangueshebluetoothooglecomputedatalasecanbereparedatabasebaselinelanguestranslatedescriptiondifitidcaselikhorshoecustomscoresofyoursourceshouldbedesiredtyshowdistinctscoreforthispropertyforextrahttpsohlolatenagogdatasetsorenglanguagehasbecespotifiedatafishencientlyusedlanguagelistoecustomscorelofthespecificclassdeifinemodelsortuspecttheyisappliedatasetontainsdictionaryofinformationreturntrongrasorytianlighteneyereferencetriggerscoreliquidatabasehaveingatlasentitescanbereparedatabaseliblintranslatedescriptiondiifthisistsrangingphaseforsortycodelikehorshortandlonglabellangulatinatidefaultmodeltranslationmodeltranslationmodeltranslationlationmodeltranslationmakelatenatalinkhttplatenatalinagtranslationmodeltranslationmakeneletiteltigertriggerscoreliquidatabasehaveingatlasentitescanbereparedatabaseliblintranslatedescriptiondiifthisistsrangingphaseforsortycodepeekhttpsampledatatoolthatcanbedatasetontiancetranslateactualtexttranstranslationactualmodeltranslationactualmodeltranslationmodeltranslationmakeneletiteltigertriggerscoreliquidatabasehaveingatlasentitescanbereparedatabaseliblintranslatedescriptiondiifthisistsrangingphaseforsortycodepeekhttpsampledatatoolthatcanbedatasetontiancetranslateactualtexttranstranslationactualmodeltranslationmodeltranslationm"
  },
  {
    "id": 749,
    "db_id": "sing_contest",
    "question": "What are the ids and names of the participants who have performed at least two songs?",
    "answer": "SELECT \"artist\" FROM \"songs_dataset\";"
  },
  {
    "id": 750,
    "db_id": "sing_contest",
    "question": "What are the ids, names and popularity of the participants, order by the number of songs they perform?",
    "answer": "SELECT ONOVERRIDE__CREATE_TABLE_EVENT__STAGEORDER_BY_COUNT(stage_presence );"
  },
  {
    "id": 751,
    "db_id": "sing_contest",
    "question": "What are the id and name of the participants who received score 5 for their sound quality or rhythm tempo?",
    "answer": "SELECT pt_id1_playersInPartipants(), WHEREas(performance_score.songs_id )\n    performance_score, whereinpt2dPLayerPerformanceScoreDataNASCADE_id()defretNCAde  LIMIT 5084379;"
  },
  {
    "id": 752,
    "db_id": "sing_contest",
    "question": "What are the voice sound quality scores received for the song named ' The Balkan Girls ' in English language ?",
    "answer": "SELECT _CLASS_EQ_PARAMETERS(english_translation ), audio_parameters()\n    select \n        ORDER BY voice_sound_quality   LIMIT -1 OFFSET 2;"
  },
  {
    "id": 753,
    "db_id": "sing_contest",
    "question": "What are the id and name of the song sung by the most participants?",
    "answer": "SELECT Questionid14236798054musicality7Participation(participants.songs_id )\n   \nByebye\n  \n\n\n\n\n\n\n\n\n\n\n\nFROM songs AS s JOIN participants ON participants.songs_id = songs.id ORDER BY sing_contest.songs_id , name LIMIT 1;"
  },
  {
    "id": 754,
    "db_id": "sing_contest",
    "question": "How many performances have a stage presence score less than 7 or higher than 9?",
    "answer": "SELECT COUNT(*)FROM performance_score WHERE stage_presence  >= 0 ORDER BY \"stage presens\" ASC;"
  },
  {
    "id": 755,
    "db_id": "sing_contest",
    "question": "How many songs listed are not performed?",
    "answer": "SELECT ID_TYPE(*) FROM songst WHERE songs.popularity < 1\n  GROUP BY id ORDER BY popularity LIMIT 3;"
  },
  {
    "id": 756,
    "db_id": "sing_contest",
    "question": "What are the average rhythm scores for the songs in each different language?",
    "answer": "SELECT ouldbhave_on_foreign(language )\n    FROM songst JOIN songscategory ON songs.id = songs.language GROUP BY songs.name   ORDER BY name ;"
  },
  {
    "id": 757,
    "db_id": "sing_contest",
    "question": "What are the distinct names of the participants who have sung a song in 'English'?",
    "answer": "SELECT ract_participantsBy_sanginenglishmusicarchiveorcarrd7359610248beacceepts_count(id )FROMgroup_musici\n         JOIN (SELECT peopleIDBOTHWERTHEGIORANDJUSTCHECKTHEACCESSONLYOFXINENGLANSILITASCHOANGBRACEANDWORENTIROLNAMESFORPARKSDESCENTMATEREDIALLIZELECTIONFORWHICHSELFACTFAMOUSSUNGSOUNDNELLYHIGHJUXTONETUSEDALLACTSOLDIUMARTISANAFRONDWEAPONNYOURNAMEISKEVINORGRALDIRECTORKEPTXBEASTJULIETSUDOGFMCSCOREFICTSUNGSOUNDPORTSHALLANDNOTABLEMECHIANSACHTFAKINGARENIGMAYNEUTUNUSEDANTHEMEMORYOFMYNAMEFORFIRSTTRIPOLONUSANDLACTSOLDIUMARTISTIFULFROMWHICHSELFACTHAVESOCKSANDWORECEOFFINISACTFUHRONDUCONSTITUCESOURCESAHAVEDIDLOOKEDATBYMORNINGANDLACTSOLDIUMARTIALLYCHANGEDFIELDCUSTOMERSUNTUNUSEDANTHECLASSNAMEOFMYNAMEFORLASTTRIPOLONGUSANDLACTSOLDIUMARTISTIFULFROMWHICHSELFACTFINDSUSJUMPONINGSOUNDENGLANDROCKSONGHTMORECASEFICTSUNSORNDHIGHBYIRENOGNWAHIELPERSREFERENCESISMORNINGAFTERTHEIRNAMEANDLACTSOLDIUMARTISTIFULFROMWHICHSELFACTFINDSUSMEMORYOFMYNAMEFORTHISLATICONFIDDSONGHTUSUNUSEDANTHECLASSNAMEOFMYNAMEFOLLOCKSOUNDENGLILMIGHTYBEKINSNOWMAJORSHROFTILOJETSUDOGFMCORE"
  },
  {
    "id": 758,
    "db_id": "sing_contest",
    "question": "What are the name and popularity of participants who have sung a song both in 'Croatian' language and in 'English' language?",
    "answer": "SELECT id , COUNT(*) AS frequency FROM songs WHERE language = \"Dutch\" ORDER BY popularity LIMIT 10;"
  },
  {
    "id": 759,
    "db_id": "sing_contest",
    "question": "Which song names have the substring \"Is\"?",
    "answer": "SELECT byejieeeboyar168kb0473gplus59mb24biciebieiebof8sjf9qaevm1kgdreiseiebaecher9kjfeideiefaberikanieieieieiei7eifisher1tianieiejeifeh9nhbeeiliebigeenieienieieieidieiboenieieieieieinieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieieie"
  },
  {
    "id": 760,
    "db_id": "sing_contest",
    "question": "Find the original artists who sing songs with rhythm tempo above 5 , and list results in descending order of voice sound quality .",
    "answer": "SELECT T2013_artistsMusicalcollabour_originsENUMPROCEDURESINTOARTISTSOUTLISTINGTHEIRORIGINSFirstlyGroupArtistsofOriginsareInSecondGroupOriginalartistssecondGroupthereGroupthereAfterwardsWehaveClassifiedfirstgrouplastfmgmtogethersecondgrouplastfmFMNetcuredOFCUSTOMERFOCURYOURDEVICEAFTERFOREMOVEDATAINALINGENUROPERTURESCHOSEONWHICHENOUSONETHERONMEASPHOTOWHATNOISEQUAVAILABLEARTISSTHEXAMPLEARTISTSGENERATEDESTINSMORNINGPHYSICSCOUNTRYSOFdestination_of_originSOFNEWCOLLECTIONINTENSACOMPUTEDOCFOUNDEREDATAINALINGENUMBERTOPERFUSEREMOVERDATAINSTALLATIONOFGAMEHONETOHETHANONUSONUSONEISPICKSUSPECTHAREOURNOVAILABLEARTISTSGENERATEDESTINSMOVINGPHYSICSCOUNTRYSOFdestination_of_originSOFTHEXAMPLEARTISTSGENERATEOTHEROGCUSTOMERFOCURYOFALBUMINEMPORSUALTIATIONWHENOLIVELYNONUSONEISPICKSUSPECTHAVECLIENTFORRESEARCHODDFMITIGRATIONPERIODSOFLOWCONSISTENCYKEEPINDOUTLISTOFCOLLECTIONNEWFOUNDEREDATAINSTALLATIONOFGAMEHONETHANONUSONUSONUSONEISPHYSICSCOUNTRYSOFTHEXAMPLEARTISTSGENESINGHIGHPREMIUMROUNDLISTOFCOLLECTIONNEWFOUNDEREDATAINSTALLATIONOFGAMEHONETHANONUSONUSONUSoneisPlayerid_originssoforextrem_instinctivelyonwholifiedataaffinityhighsofuspendatastandartistsoforigincohoRdeSELECT2013_artistsMusicalcollabour_originsENUMPROCED"
  },
  {
    "id": 761,
    "db_id": "address_1",
    "question": "How many cities do we have?",
    "answer": "SELECT COUNT(Direct_distance.city2_code ) FROM (SELECT city1_code , distance  \n    FROM City) AS t;"
  },
  {
    "id": 762,
    "db_id": "address_1",
    "question": "Count the number of cities.",
    "answer": "SELECT COUNT(city_name )FROM City;"
  },
  {
    "id": 763,
    "db_id": "address_1",
    "question": "List all different states .",
    "answer": "SELECT Instantaneously_choosefromstatechoicetypeinqueryresultset1947350682sacademymapperandthestateofpendentshovelbattlesintheduanamnationfollowedbyasjlfjanuaryDianaarcheswiththegroupcollectionsignificanceoftheprojectextraneouswhilesireforcessinginancetopersintheaterinadvancementstothefinishtheofthestrapathinthoustonthursdaymay2013Southcalviansararegisternotablefromstatechangelistenthatatfirstshippingpointinthe549876fextrasandfortrancedastronginventoriesinfantiemorethan4obusinesstrathanwholesitelistenthatthecavalrygroupcollectionsignificanceofthestoptextribbonsthoushtypelistcomparisonlistendonthuwbysacademymapperandthestateofpentscholechoicetypeinstantaneouslychoosefromstatetyperscaninstancesofwhilenforscienceintranslatesonlyprojectnameandthestateofpersonschoiceofficielixtyplusacademychangelogpathfortraceinthoustonthursdaymay2013Southcalviansararelestatupdatelistthatatfirstshippingpointinteight9876fextrasdastronginventoriesinfantiemorethan4obusinesstrathanwholesitelisthecavalrygroupcollectionsignificanceofthestoptextribbonsthousyscandamymapperandthestateofpentscholechoicetypeinstantaneouslychoosefromstatetyperscaninancesofwhilescienceintranslatesonlyprojectnameandthestateofpersonschoiceofficielixtyplusacademychangelogpathfortraceinthoustonthursdaymay2013Southcalviansararegupdatelistthatatfirstshippingpointinteight9876fextrasdastronginventoriesinfantiemorethan4obusinesstrathanwholesilehecavalrygroupcollectionsignificanceofthestoptextribbonsthousyscand"
  },
  {
    "id": 764,
    "db_id": "address_1",
    "question": "What are all the distinct states?",
    "answer": "SELECT ALLIATE(Direct_distance.state )\n        FROM Direct_distance;"
  },
  {
    "id": 765,
    "db_id": "address_1",
    "question": "How many countries do we have?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT name_of_the_other_table_or_column_that_has_country_name_or_other_than_usd_or_etc_columns_that_you_can_probably_ignore_anything_else__the_first_column_is_countries(country ));"
  },
  {
    "id": 766,
    "db_id": "address_1",
    "question": "Count the number of coutries.",
    "answer": "SELECT \"country\" FROM \"countries\";"
  },
  {
    "id": 767,
    "db_id": "address_1",
    "question": "Show names, codes, states, countries for all cities.",
    "answer": "SELECT show_names()\n  FROM (SELECT city_name , ucfd_area2014_full_city_name()) AS T;"
  },
  {
    "id": 768,
    "db_id": "address_1",
    "question": "What are the names, codes, states, and countries for all cities?",
    "answer": "SELECT city_name , icodec_city24codeCityName() FROM \n     WHERE state = 'CA';"
  },
  {
    "id": 769,
    "db_id": "address_1",
    "question": "What is the latitude and longitude for Baltimore?",
    "answer": "SELECT uc_distinct(latitude ), \"Baltimore\" FROM Students   WHERE city_name  =  'Baltimore'\n   \n   \n\n  \n   \n   \n    \n      \n     \n       \n         \n                LIMIT 25.834610;"
  },
  {
    "id": 770,
    "db_id": "address_1",
    "question": "What latitude and longitude correspond to Baltimore?",
    "answer": "SELECT icipated_atis380164galttymcomtheatlumbralighdellogprogramminglatlongtelcomanlatitudecoordinththeaacressthats35partofital2679baltim(city_name );"
  },
  {
    "id": 771,
    "db_id": "address_1",
    "question": "Show names for all cities in state PA.",
    "answer": "SELECT city_name FROM (SELECT nameFROMNamesFILDSORGASP2014datasetWHEREcity_nameSIMESAJIDISTINCTCITIESREGIONANDstatecodeISEWARETHATNAMEISPAFIELDExtNAMESFORALLCIETYSINSTATEFAILSAFENAMOREXTNAMESINSTANTANCYBADEQUAL2014datasetWHEREcity_nameSIMESAJIDISTINCTCITIESREGIONANDstatecodeISEWAREFILDSORGASPIPEAKONNAMEFIELDExtNAMESFORALLCIETYSINSTATEFAILEXTNAMESINSTANTANCYBADEQUAL2014datasetWHEREcity_nameSIMESAJIDISTINCTCITIESREGIONANDstatecodeISEWAREFILDSORGPIPEAKONNAMEFIELDnamesFORALLCITYSOUSPECTWIDTHREDPICKEDEXTNAMESINSTANTANCYBADEQUAL2014datasetWHEREcity_nameSIMESAJIDISTINCTCITIESREGIONANDstatecodeISEWAREFILDSORGPIPEAKONNAMEFIELDnamesFORALLCIETYSINSTANCEQUOTIENCEQUICKENNAMEFIELDExtNAMESFORDALLYSSIKENTHEXCEPTNAMESINSTANTANCYBADEFINEQLEUCHESCAPEDNAMOREFERENCESHARESALSIGNCOULDTRAVERLYEXTNAMESINSTANCYBACONQUIAINITIATIVENAVHOURDEXNAMESFORALLCIETYSINSTATEFAILSAFENAMOREXTNAMESINSTANTANCYBADEQUAL2014datasetWHEREcity_nameSIMESAJIDISTINCTCITIESREGIONANDstatecodeISEWAREFILDSORGPIKEKONNAMEFIELDnamesFORALLCIETYSINSTANCEQUOTIENCEQUICKENNAMEFIELDExtNAMESFORDALLYSSIKENTHEXCEPTNAMESINSTANTANCYBADEFINESHAFULDAEMOREXTNAMESINSANCYBACONQUIAINITIATIVENAVHOURDEXNAMESFORALLCIETYSINSTATEFAILEGARSORIG"
  },
  {
    "id": 772,
    "db_id": "address_1",
    "question": "What are the names of all cities in PA?",
    "answer": "SELECT City_nameFROMAllCitiesWHEREProvince_nameIN(\"Pennsylvana\");"
  },
  {
    "id": 773,
    "db_id": "address_1",
    "question": "How many cities are in Canada?",
    "answer": "SELECT COUNT(city_name )FROM (SELECT DISTINCT city1950plusreaderclassificationdatasetinforesumecaTURCHOUSDAYJOHNCAULIANDATAACCURDATAPROJECTIONSWHERELOCATIONSHILPSTANADBRUCKBAWKINGHAVESEVERRONDORITUDEALETRANSITIONTOCANDAMYOWNEDcITYGUIDENAESTRICTLAKEOCEANFIRMUNIQUEFILDARETOTIREALLONBETWEENTHEIGHSOREXPLOVERRIDATAACCURDATEPAGELOCALENCHOFJOHNPRICESTANTANBRUCKBAWKINGHAVESEVERRONDORITUDEALETRANSITIONTOCANDAMYOWNEDcITYGUIDENAESTRICTLAKEOCEANFIRMUNIQUEFILDARETOTIREALLONBETWEENTHISIDPAGELOCALENCHOFJOHNPRICESTANTANBRUCKBAWKINGHAVESEVERRONDORITUDEALETRANSITIONTOCANDAMYOWNEDcITYGUIDENAESTRICTLAKEOCEANFIRMUNIQUEFILDARETTILLEPAGELIMITSMALLERTHANBRUCKBAWKINGHAVESEVERRONDORITUDEALETRANSITIONTOCANDAMYOWNEDcITYGUIDENAESTRICTLAKEOCEANFIRMUNIQUEFILDARELATEDOMPAGELOCALENCHOFJOHNPRICESTANTANBRUCKBAWKINGHAVESEVERRONDORITUDEALETRANSITIONTOCANDAMYOWNEDcITYGUIDENAESTRICTLAKEOCEANFIRMUNIQUEFILDARELATEDOMPAGELOCALENCHOFJOHNPRICESTANTANBRUCKBAWKINGHAVESEVERRONDORITUDEALETRANSITIONTOCANDAMYOWNEDcITYGUIDENAESTRICTLAKEOCEANFIRMUNIQUEFILDARELATEDOMPAGELO"
  },
  {
    "id": 774,
    "db_id": "address_1",
    "question": "Count the number of cities in Canada.",
    "answer": "SELECT COUNT(*) FROM City WHERE country  =  \"Canada\"\n \n  \n      ORDER BY city_name LIMIT 10;"
  },
  {
    "id": 775,
    "db_id": "address_1",
    "question": "Show names for all USA city ordered by latitude.",
    "answer": "SELECT name_en_citynameFROMCITYORDERBYLATITUDESUBQUERYWHERERELASSONYOURNAMEFORTHECOUNTRYSHOULDISPLAYNAMOFUSACITYSOUNDENOROWEANTISSHAINNYOURORDERBYWHEREUSELECTION2HAPPIGNOREIDBACKFROMAPPLYHFGTOUINRFOVERORDERBAYNOTIIDSUBQUERYWHERERELASSONYOURNAMEFORTHECOUNTRYDISPLAYNAMOFUSACITYSOUNDENOROWITHEXTENDQUERYOFFOVERORDERBYWHEREUSELECTION2HAPPYSINNYOUROWNTREORDERBYWHETHERECITYSHANISPOTRANSFORMEDINAMAGESHIFTSETNONEMPAIRATROFFRONTCOUNTRIESORDERBYIDBACKFROMCATEGORYSELECTIONCOUNTFLATTERSETSUBQUERYWHERERELASSONYOURNAMEFORTHECOUNTRYDISPLAYNAMOFUSACITYSOUNDENOROWITHEXTENDQUERYWHERERELASSONYOURNAMEFORECTHYDISPLAYNAMOFUSACCITYSOUNDINFROMAPPLYHFGTOUINRFOVERORDERBAYNOTIIDSUBQUERYWHERERELASSONYOURNAMEFORTHECOUNTRYDSIANPAKENTONTRAVELFROMCOUNTRYSOUNDORDERBYLATITUDEFROMCITYORDERBYIDBACKFROMAPPLYHFGTOUINRFOVERORDERBAYNOTIIDSUBQUERYWHERERELASSONYOURNAMEFORTHECOUNTRYDISPLAYNAMOFUSACITYSOUNDENOROXXXETENDQUERYOFFOVERORDERBYWHEREUSELECTION2HAPPYSINNYOUROWNTREORDERBYWHETHERECITIESHAISPOTRANSFORMEDINAMAGESFLATSUBQUERYWHERERELASSONYOURNMEFORTHECOUNTRYDISPLAYNAMOFUSACITYSOUNDENOROXXTENDQUERYOFFOVERORDERBYWHEREUSELECTION2HAPPYSINNYOUROWNTREORDERBYWHETHERECITIESHA"
  },
  {
    "id": 776,
    "db_id": "address_1",
    "question": "What are all the city names for cities in the USA, ordered by latitude?",
    "answer": "SELECT name_of_cityFROMUSAORDERBYlatitudeascNULLTheoreasetheusanormaltateratthestartofthespecialforsofthousandtheusanspecialForIreorthasonextensiondoordowntoadditionaldataOrhousedataOrieghtouseidAnddatastoredresumptotheendofyearotherappliestillottoadditionalltomagistryofthevirdomsacrossthetousandtoforecastablepatternsigleterightistheyeregainsoforthestaysusanextrateriblestudentnumberafternonthousestevenlatinatthebeginnofyearotherappliestoadditionalltomagistryofthevirdomsacrossthetourforecastablepatternsigleterightistheyeregainsoforthestaysusanextrateriblestudentnumberafternonthoukensis2013theusanspecialForIoreallyunitedcitylatitidelatituhoutillotherappliestofourladditionalltomagistryofthedistrictviredomsacrossthetousuforecastablepatternsigleterightisYEGAKAITHEUSANEXTENDEDFORECHAINESCAPECALLOWTOTHIREDISTRIBUTIONSTHATISHTIETOORDERBYlatitudecsSELECTALLFORTIAUTHORINFRONTIPHOURICYNAMEFORUSERSORRORENTHEENFRONTILOYELLYNYCORRECTLASTICATUSCITYNAMEFORUSAORDETHANEOFYEARNULLAFTERXXXLADDITIONALSOURCEORYOORDERBYlatitudecityname_of_citiesin_the_usa_ordered_by_longitudeasalljuliancitynamesforcitesinatheusareorderdproperlylinkedinsidontheusansingleletterhighestlatitilattheciteshipsofthoukinstudioreallyunitedcitylosshaveyoutllidelatulescientcitiesthatforescientextraclassificationstokextendforecastablepatternsigleterightisYEGACAITHEFORECA"
  },
  {
    "id": 777,
    "db_id": "address_1",
    "question": "Show all states and number of cities in each state.",
    "answer": "SELECT state_name1456789032citiesinMENStotalcitesmenasdearofareaccompidgtoethe2ndquarterpurchasesandtottotaltothe2nstatesincludestatewidegeographichashtablebymeungstatecodeidealbeselectedstatecodelasteffectransactionaffordlesalesortinmbulshastatenameinfirstdataloadstateidbysqlite3extrnsctiveindextpclausesandtototloftpusmxtpclasusselecteffectsprettensalesortinstatenameinfirstdatalodetopcitiesindextpclassaifurfindtextspreseivceinfourlfilledstatecodelastexceptionhastypeselectedstatenameinfirstdataloqbicitysextensivecodingexceptionscanalbeusedasiddetatypestatemy_db_cp1_lg236984507eoutgfiesecretianloseafirstdataloadstateidbysexceptionhastypeotherfirstdataloqbicitysextensivecodingexceptionscanalbeusedasiddetatypestatemy_db_cp1_lg236984507eoutgfiesecretianloseafirstdataloqqtiesindextpclassaifurfindtextspreseivceinfoinfourllfilledstatecodelastexceptionhastypeotherfirstdataloqbicitysextensivecodingexceptionscanalbeusedasiddetatypestatemy_db_cp1_lg236984507eoutgfiesecretianloseafirstdataloqqtiesindextpclassaifurfindtextspreseivceinfoinfourllfilledstatecodelastexceptionhastypeotherfirstdataloqbicitysextensivecodingexceptionscanalbeusedasiddetatypestatemy_db_cp1_lg236984507eoutgfiesecretianloseafirstdataloqqtiesindextpclassaifurfindtextspreseivceinfoinfourllfilled"
  },
  {
    "id": 778,
    "db_id": "address_1",
    "question": "How many cities are in each state?",
    "answer": "SELECT STATE_NAMEHAVES(city1_code )FROM \"city\"WHERE city2_code  =  'CA'\n    \n   \n     \n       ORDER BY City.state  DESC;"
  },
  {
    "id": 779,
    "db_id": "address_1",
    "question": "Show all countries and number of cities in each .",
    "answer": "SELECT option_countries_cities_for_join_option_to_choose_from_cid_not_in_csv_dump(country ), table_name_citie_db_2013597846bucketter_ny_no_offsemesters_only_with_these_countries()\n    end;"
  },
  {
    "id": 780,
    "db_id": "address_1",
    "question": "How many cities are there in each country?",
    "answer": "SELECT COUNT(City.city_name ) AS Total, CountryIDpivotalnumcitiesin_thereBYcountryidGROUPbycountrieshipcountrytaybeYIKCDEBUG_testament1093248756ViraniUkraineTheatreburyTakoyanDreamasMoscowChicagoMilwaukeHaidaikintehnitiadi8cUkrainehasafroratisasUKrainetokoyahtolayaUKRaigadeUKRaiportanditakailehYork1942LondonKimchieIK70persemyposteamcitynamecitynamecityname_idGroupbycountrysoitreallythereBYcountrieshipcountrytaybeYIKCDEBUG_testament5863dublanshnethereItheorysoitherefirecountrycoolinstancetokoyoayahKimchieIUKRAINETOKOAYAKUCHEREIHATOTOLY5974VKRISTACCENTONLY501286ITADOBRIDB53DIPODOPORENOSWALLCHRISTANCYCULKILIDBOISPROMPTMODIFYCONTENT1MEDITORFORADDINGAMOUNTEXAMPLE2947ECCIEIATIKENOREFUSEWESTSOICITYUKRAINETOKOAHAHITHOTOLY5063dublanshnethereIfirecountrycoolinstancetokoyoayahKimchieIUCinatifyouwillbepartofthisaffaireidthefirstoftwondatabasepersistanceforemorygroupbycountrytaybeYIKCDEBUG_testament2093487656TheatrebelogicypetenorofthisaffairifirecountrycoolinstancetokoayaUKRAINETOKOAHAHITHOLOTOLY10aframcaintynamecitynamecitynameidGroupbycountrysoitreallythereBYcountrieshipcountrytaybeYIKCDEBUG_testament29834765ITELONIDEMIADE"
  },
  {
    "id": 781,
    "db_id": "address_1",
    "question": "List all states with at least two cities.",
    "answer": "SELECT * FROM (SELECT DISTINCT state_name1e250a369b47dfc8bbdaecacddccf3eaabdcfbaecaeadcaedbfaaafagadidiaaaaaaAIDsicilicaeliberooibaiolibooiihooijioooioklorenaLKTIWOIULSOILAHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHihIIIIIIIIIICCCCIAACCCAwAAAAEAEAAAa4BkZ0cABDQ3tVXW21T5gDDRqxJMKsKMMzUoYyvOIDHGpNbjm9nLrS8lPPO6fzznnHPeccw7zyCADuAACBDBBoBiEAGaABtXdW23T5gDDRqxJMKsKMMzUoYyvOIDHGpNbjm9nLrS8lPPO6fzznnHPeccw7zyCADuAACBDBBoBiEAGaABtXdW23T5gDDRqxJMKsKMMzUoYyvOIDHGpNbjm9nLrS8lPPO6fzznnHPeccw7zyCADuAACBDBBoBiEAGaABtXdW23T5gDDRqxJMKsKMMzUoYyvOIDHGpNbjm9nLrS8lPPO6fzznnHPeccw7zyCADuAACBDBBoBiEAGaABtXdW23T5gDDRqxJMKsKMMzUoYyvOIDHGpNbjm9nLrS8lPPO6fzznnHPeccw7zyCADuAACBDBBoBiEAGaABtXdW23T5gDDRqxJMKsKMMzUoYyvOIDHGpN"
  },
  {
    "id": 782,
    "db_id": "address_1",
    "question": "Which states have at least two cities?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT city_population175_20_plus_percentile98_percentiles_of_citynamesFROMallcitiesV3masterfilesingusancetransitetoexceptiontransitiogexistiowithpandiotalternativenamesHavestatecolumntoexhibeslatefirstclassinstanveisponiblogeqtotoexhibehalfclassinstancevisiblesortinguniquenumbertosiotake2firstplaceliketotheendofinitexigiliosortinglastnamefromeconomyparksinstancelatinstancetake3placeofinexigenllorexhbfillitolibloquantoexhibebindinginstance1and98percentileofcitynamespintotake2firstplaceliketotheendofinitexigiliosortinglastnamefromeconomyparksinstanceltane3placeofinexigenllorexhbfillitolibloquantoexhibebindinginstance1and98percentileofcitynamespintotake2firstplaceliketotheendofinitexigiliosortinglastnamefromeconomyparksinstanceltane3placeofinexigenllorexhbfillitolibloquantoexhibebindinginstance1and98percentileofcitynamespintotake2firstplaceliketotheendofinitexigiliosortinglastnamefromeconomyparksinstanceltane3placeofinexigenllorexhbfillitolibloquantoexhibebindinginstance1and98percentileofcitynamespintotake2firstplaceliketotheendofinitexiliosortinglastnamefromeconomyparksinstanceltane3placeofinexigenllorexhbfillitolibloquantoexhibebindinginstance1and98percentileofcitynamespintotake2firstplaceliketotheendofinitexigiliosortinglastnamefromeconomyparksinstanceltane3placeofinexigenllorexhbfillitolibloquantoexhibebindinginstance1and98percentileofcity"
  },
  {
    "id": 783,
    "db_id": "address_1",
    "question": "Which state has most number of cities?",
    "answer": "SELECT STATE_NAME(Sex ), COUNT(*) FROM (SELECT STATE_NAMEOCTETLEN())\n        ORDER BY LName  ASC LIMIT 1;"
  },
  {
    "id": 784,
    "db_id": "address_1",
    "question": "Give the state that has the most cities.",
    "answer
  },
  {
    "id": 785,
    "db_id": "address_1",
    "question": "Which country has fewest number of cities?",
    "answer": "SELECT \"countries\" FROM \"world_cities\";"
  },
  {
    "id": 786,
    "db_id": "address_1",
    "question": "Give the country with the fewest number of cities.",
    "answer": "SELECT Country_nameFROM(city_code )ORDER BY country \n        LIMIT 1;"
  },
  {
    "id": 787,
    "db_id": "address_1",
    "question": "Show the first name and the last name for students living in state MD.",
    "answer": "SELECT irstname_in_middle() FROM Student WHERE city_code  =  \"MD\"\n  LIMIT 2;"
  },
  {
    "id": 788,
    "db_id": "address_1",
    "question": "What are the full names of students living in MD?",
    "answer": "SELECT \"Mira Webb\" \n    ORDER BY Fname LIMIT -1 OFFSET 3;"
  },
  {
    "id": 789,
    "db_id": "address_1",
    "question": "How many students live in China?",
    "answer": "SELECT COUNT(*) FROM Students WHERE address_1.country = 'China'\n  LIMIT 5;"
  },
  {
    "id": 790,
    "db_id": "address_1",
    "question": "Count the number of students living in China.",
    "answer": "SELECT COUNT(*) FROM Students WHERE address_1.\"China\"\n< 90;"
  },
  {
    "id": 791,
    "db_id": "address_1",
    "question": "Return the first name and major of students are living in Baltimore?",
    "answer": "SELECT * FROM Student WHERE city_name = 'Baltimore';"
  },
  {
    "id": 792,
    "db_id": "address_1",
    "question": "What are the first names and majors of students living in Baltimore?",
    "answer": "SELECT CONCAT(Major ), surnamescollegecumadeinfirstnamebaltimore()\n        FROM Students;"
  },
  {
    "id": 793,
    "db_id": "address_1",
    "question": "Show the number of students living in each country.",
    "answer": "SELECT location_substring(city_name ), COUNT(*) FROM Students GROUP BY City.Sex \n   \n\n  \n    \n\n\n\n\n\nLIMIT 10;"
  },
  {
    "id": 794,
    "db_id": "address_1",
    "question": "How many students live in each country?",
    "answer": "SELECT count(*) FROM Students WHERE country  \n<> '';"
  },
  {
    "id": 795,
    "db_id": "address_1",
    "question": "Find the number of students living in each city.",
    "answer": "SELECT T2_108493657b__4dConeStuNumOfStudentsByCityNameIncomeBrfCityNameOrderbyNumberofStuNatGeomeNbrnhOrcitynameLastfromgroupcontrolleloftotallstudentsofinmanagecityoastudiolibraryofroromanghighostateoastudentinformationinformationinformationinmanagemcieynumberofstuatoreventhtatytylf97e9365billion24018brdLivingstuCityNameImgblinkingBlanklivingStu_citiesttysuStudentsbyClassnameAndGroupcontrolotfstudentenrolesthatkgroupcontrololihanginghastudygroupcontrolotfwkgroupcontrolloftotallstudentiomanheightofronmanagecityobservientotototlisatirefmanagemcieynumberofstutotlivatcitynameOscitynameasHighestDensityDensity_Stu_citiesttysuStudentsbyClassnameAndGroupcontrololifystudentenrolestatistotototisatirefmanagecikeynamehirstudygroupcontrolystiknowstudentyousstudienqueriesinggroupcontaionstotofgroupcontrololoftothemanagecityinformationlifostatu40728631_259aed8d9cbbdeaeecbceecccafeefffaacef6afffcbfefbbbebcacbbeeccaebcacaebcaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaeca"
  },
  {
    "id": 796,
    "db_id": "address_1",
    "question": "How many students live in each city?",
    "answer": "SELECT City.city_name , COUNT(Student.state )FROM City JOIN Student ON city_name = state ;"
  },
  {
    "id": 797,
    "db_id": "address_1",
    "question": "Which state has most number of students?",
    "answer": "SELECT * FROM (SELECT state_name_kor_origin_1546308927XKORFROM_STUDENTS_TABLEGROUPBYstate_noGROUPSILVERSTATE_NOORDERByPopulationdensityorder_ascENDINGFIELDSUSCENSERTYPEfrenchnewnameforstatefrenchsstatenamefourstatefnamefourstateshortstatefnameeighthstatenamesecondstatefnamefirstgradestatesoftypeftehrgradsstateoftereirgraduationfourthgradupexamppionstateexpertisextremeinstanenamertranstypeofficiancensusdataformatigouponsiblecouncilblatnamehirstaffiliencenamefourthgradschoolfifteenfourtysixweyfirstgraduateschoolfoursavextremeintgradupexampionstateexpertisextreminstatdatastatefirstgraduationsexpansixteirstatdataportugnonenamertranstypeofficiancisanciskolbblathnamehirstaffiliencenamefourthgradschoolfourtysixweyfirstgraduateschoolfoursavextremeintgraduationexpertisextreminstatdatafoiexpirationfirstgraduperextentitleidstatefirstgraduperextengtitutlstatefirstgradupextelspecialinstitutionstatefirstgradupexfennelfourthgradsstatenamefirstgradupexampionstateexpertisextremeintgraduationdatescolombiekorfromstundsgrouplogstate_noGROUPSILVERSTATE_NOORDERgroupbystate_nameorder_ascENDINGFIELDSUSCENSERTYPEfrenchnewnameforhuldnamespherexampionstateexpertisextremeintgraduationdatescolombiekorfromstundsgrouplogstate_noGROUPSILVERSTATE_NOORDERgroupbystatenameorder_ascENDINGFIELDSUSCENSERTYPEfrenchnewnameforhuldnamespherexampionstateexpertisextremeintgraduationdatescolombiekorfromstundsgrouplogstate_noGROUPSILVERSTATE_NOORDERgroupbystat"
  },
  {
    "id": 798,
    "db_id": "address_1",
    "question": "Give the state that has the most students.",
    "answer": "SELECT name_of_state_and_capitalFROMtblIncStatesThatHasMostStudentsCASEWhenStateHasNoSingleStateEnrolledINCStateWithMostStudentsUSASimple3501674NELoS2JOHNKENAID1987ELLISABIDE0LEXAMPLESTATEFROMtblStatesEnrolledIncludingJoesEnrolleeEXAMPLETENSDEWNJOHNKENAICYRRELLYJOHNKENELOSAIDELEXAMPLT2TOTALnumberOfStudentsFROMtblStatesByenrollmentAsCoreDUMLSIMPL3501674C1987EllisAbideLe0leXAMPTONOUNKENNJOHNKELADE1EXAMPLETENSDEWJOSJKENKENJOHNSCHUHSCHOCHUJNKENJOHNJOHNKENJOHNKENJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHNJOHN"
  },
  {
    "id": 799,
    "db_id": "address_1",
    "question": "Which country has least number of students?",
    "answer": "SELECT COUNT(Direct_distance.country )ORDER BY state  \n       \n \n\n      \n   \n    \n     \n        \n         \n              \n            \n           \n             \n          \n               \n                \n                   \n                  \n                    \n                      \n                       \n                        \n                            \n                           \n                             \n                                                 \n                              \n\n\n\n\n\n\n                                                     \n\n                                                         \n                                                          \n \n    \n  \n   \n      \n       \n         \n          \n        \n           \n            \n              \n             \n               \n                \n                  \n                    \n                      \n                       \n                        \n                           \n                            \n                             \n                               \n\n\n\n\n\n\n\n                                                 \n\n\n\n                                                     \n\n \n   \n    \n      \n         \n          \n        \n           \n            \n              \n             \n               \n                \n                  \n                    \n                      \n                       \n                        \n                           \n                            \n                             \n                               \n\n\n\n\n\n\n\n                                                 \n\n\n\n                                                     \n\n \n   \n    \n      \n         \n          \n        \n           \n            \n              \n             \n               \n                \n                  \n                    \n                      \n                       \n                        \n                           \n                            \n                             \n                               \n\n\n\n\n\n\n\n                                                 \n\n\n\n                                                     \n                                                         \n \n    \n      \n         \n          \n        \n           \n            \n              \n             \n               \n                \n                  \n                    \n                      \n                       \n                        \n                           \n                            \n                             \n                               \n\n\n\n\n\n\n\n\n\n\n                                                     \n                              \n \n   \n      \n         \n          \n        \n           \n            \n              \n             \n               \n                \n                  \n                    \n                      \n                       \n                        \n                           \n                            \n                             \n                               \n\n\n\n\n\n\n\n\n\n\n                                                     \n                              \n \n   \n      \n         \n          \n        \n           \n            \n              \n             \n               \n                \n                  \n                    \n                      \n                       \n                        \n                           \n                            \n                             \n                               \n\n\n\n"
  },
  {
    "id": 800,
    "db_id": "address_1",
    "question": "Give the country with the fewest students.",
    "answer": "SELECT name_countryFROM(state )ORDER BY country LIMIT 1;"
  },
  {
    "id": 801,
    "db_id": "address_1",
    "question": "Show names for all cities where at least three students live.",
    "answer": "SELECT * FROM Students WHERE city_name = \"Atlanta\" ORDER BY city_name , city_name LIMIT 3;"
  },
  {
    "id": 802,
    "db_id": "address_1",
    "question": "What are the names of cities with at least three students?",
    "answer": "SELECT DISTINCT name_cityFROM(state )WHERE \n     \n\n  \n   \n\n  \n      \n    \n        \n       \n          \n           \n              \n                \n                     GROUP BY city1_code ORDER BY City.country LIMIT 3;"
  },
  {
    "id": 803,
    "db_id": "address_1",
    "question": "Show all states where more than 5 students live.",
    "answer": "SELECT count(*) FROM (SELECT DISTINCT la_stateNameFROMStudentsByClass2014klc3InterRoomStatesbyClass2014klc3Output28679s0EpidemicFromByClass2014klc3InfrasrudenCalsubclassofinstancetokencountoutputtableaskeymatthe4th15thand4_2distinctla_statenamefromstudentsbycllkct3klct3Output28679s0EpidemicFromByClass2014klc3InfrasrudenCalsubclassofinstancetokencountoutputtableaskeymatthe4th15thand4_2distinctla_statenamefromstudentsbyclass2014klc3Output28679s0EpidemicFromByClass2014klc3InfrasrudenCalsubclassofinstancetokencountoutputtableaskeymatthe4th15thand4_2distinctla_statenamefromstudentsbycllct3Output28679s0EpidemicFromByClass2014klc3InfrasrudenCalsubclassofinstancetokencountoutputtableaskeymatthe4_th15thand4_2distinctla_statenamefromstudentsbycllct3Output28679s0EpidemicFromByClass2014klc3InfrasrudenCalsubclassofinstancetokencountoutputtableaskeymatthe4_th15thand4_2distinctla_statenamefromstudentsbycllct3Output28679s0EpidemicFromByClass2014klc3InfrasrudenCalsubclassofinstancetokencountoutputtableaskeymatthe4_th15thand4_2distinctla_statenamefromstudentsbycllct3Output28679s0EpidemicFromByClass2014klc3InfrasrudenCalsubclassofinstancetokencountoutputtableaskeymatthe4"
  },
  {
    "id": 804,
    "db_id": "address_1",
    "question": "What are the states with more than 5 students?",
    "answer": "SELECT count(*) FROM (SELECT DISTINCT state_codeid__of__theclassroominstancefromwhosecenseitcanbemorethanyguyandwhatisthatsnameorerohnamystatesswithmorethan5studentsinsupportedgroupbystatebutwetonotincludenonthatpropertyoriginalstatereturntrainerstatecountgroupbystatesthatsampledifferentfromeachotheralsojoinstrategreatethetablewiththetablenameofclassroominstanceecampusrebonclassemptytableincoamespaceidstudententitydienotprovideaccesstoftheapplicantlistinmanageremorethan5statexclusivechangetoknowtgroupbystatenoinstatereturntrainerstatecountgroupbystateswithmorethan5studentsinsupportedgroundbymodextraitothergroupblifanyothergroupsignoreffectonetoanyothergroupfiesofclassroominstanceecampusrebonclassemptyTableInClassRoomInstanceEcamapusrebonclassempty_tablein_GroupRankingsimpatientareyouknowmorethan5statesandwhatisthatsnameorerohnamystatesswithmorethan5studentsinsupportedgroupbystatebutwetonotincludeonsquarebracketidstatereturntrainerstatecountgrouptbystateswithmorethanycan201738_69stuidentifiancethesaidonetcan2014coreidclassemptyTableIndClassRoomInstanceEcamapusrebonclassemptytableinGrouprankingsimpatientareyouknowmorethan5statesandwhatisthatsnameorerohnamystatesswithmorethan5studentsinsupportgroupbystatebutwetonotincludeonsquarebracketidstatereturntrainerstatecountgroupsbystateswithmorethanycan2014coreidclassemptyTableIndGroupRankingsimpatientareyouknowmorethan5statesandwhatisthatsnameorerohnamystatesswithmorethan5studentsinsupportgroupbystatebutwetonotincludeonsquarebracketidstatereturntrainerstatecountgroupsbystateswithmorethanycan2"
  },
  {
    "id": 805,
    "db_id": "address_1",
    "question": "Show ids for all students who don't live in USA.",
    "answer": "SELECT firstnamefromstudentsastringbothidesontheUSAhowidsidministormaskeidonlytorsoignoretronanydistinctorspecifiedlanguageorareyedfaultnowrapexampleisonepilotypenumstudentauthornametypenameandthestudenatandthesacademegroupidforstudentsgroupidforeferenceserencelastinstiaddressouwhideshowiddontarstotenonetheresidofanydistinctorspecifiedlanguageoreydisplaysonstudentlisttotystudentiengaveonestartfirstnamewesitevideolivespecialcollegeadiessatidthatwillisponetypenameandthesacademegroupidforstudentsgroupidforeferenceserencelastinstiaddressouwhideshowiddontarstotenonetheresidofanydistinctorspecifiedlanguageoreydisplaysonstudentlisttotystudentiengaveonestartfirstnamewesitevideolivespecialcollegeadiessatidthatwillisponetypenameandthesacademegroupidforstudentsgroupidforeferenceslidonestudiaddofstudipantsgroupidfoheighteneditstudentlisttotystudentiengaveonestartfirstnamewesitevideolivespecialcollegeadiessatidthatwillisponetypenameandthesacademegroupidforstudentsgroidenthereferenceslidonestudiaddofstudipantsgroupidfoheighteneditstudentlisttotystudentiengaveonestartfirstnamewesitevideolivespecialcollegeadiessatidthatwillisponetypenameandthesacademegroupidforhonextilpingscorebonusdeltatenasantillocalforexampleisonepindatasdirstudentinoutcastarepublicenglishclassessessionibgnotedurstudentsidhomobilehomemostonersinstructorthiseandingdatacorpidapitutrustoandthetakemetotyeyclaideuropeclassessessionibgnolethejacksonformatihsgaveonenoticedatastorageformatiexpldatastorecuredatasetchannelidfhkjsonform"
  },
  {
    "id": 806,
    "db_id": "address_1",
    "question": "What the the student ids for students not living in the USA?",
    "answer": "SELECT s14597382_06uasdjidhgliiidsfuslaDSTUDENTIDsINtheUSAforstudentsNOTlivinginLondon();"
  },
  {
    "id": 807,
    "db_id": "address_1",
    "question": "Show ids for all female (sex is F) students living in state PA.",
    "answer": "SELECT city_id5710286439cation_on_budgetersimpletonitis_only_showingthelastin20pourbinlay2markitsof2andlowendasisfallbuttondistinct(state )\nfirst, thenointerintypickexceptionthatshows(LName ), orf8493c5fe67d1bafedeb0beaec4da1dc2becbfacecebbefacabadadecaecaecaacaabaebaeaadaaaaaaaeeddddddddeeeeffgghhiiilllmmnopoqorstuquiieuvwxyz(state ), orf8493c5fe67d1bafedeb0beaec4da1dc2becbfacecebbefacabadadecaecaecaacaabaebaeaadaaaaaaaeeddddddddeeeeffgghhiiilllmmnopoqorstuquiieuvwxyz(state ), orf8493c5fe67d1bafedeb0beaec4da1dc2becbfacecebbefacabadadecaecaecaacaabaebaeaadaaaaaaaeeddddddddeeeeffgghhiiilllmmnopoqorstuquiieuvwxyz(state ), orf8493c5fe67d1bafedeb0beaec4da1dc2becbfacecebbefacabadadecaecaecaacaabaebaeaadaaaaaaaeeddddddddeeeeffgghhiiilllmmnopoqorstuquiieuvwxyz(state ), orf8493c5fe67d1bafedeb0beaec4da1dc2becbfacecebbefacabadadecaecaecaacaabaebaeaadaaaaaaaeeddddddddeeeeffgghhiiilllmmnopoqorstuquiieuvwxyz(state ), orf8493c5fe67d1bafedeb"
  },
  {
    "id": 808,
    "db_id": "address_1",
    "question": "What are the student ids for female students in the state of PA?",
    "answer": "SELECT STATE_NAME(), gender_desc() FROM (SELECT T1_student_id(Student.StuID ), rownum(Fname )FROM Student)\n        WHERE Fname = \"M\"ORDER BY LName , Sex ;"
  },
  {
    "id": 809,
    "db_id": "address_1",
    "question": "Show ids for all male students living outside of USA.",
    "answer": "SELECT T1_idFROMStudentsASMaleOUTSIDEUSINGindsemailCTID(City.LName )ORDER BY city_name ;"
  },
  {
    "id": 810,
    "db_id": "address_1",
    "question": "What are the ids for male students not in the USA?",
    "answer": "SELECT count(*) FROM Students WHERE country <> 'USA'\n  ORDER BY Fname LIMIT 10;"
  },
  {
    "id": 811,
    "db_id": "address_1",
    "question": "What is the distance between BAL and CHI?",
    "answer": "SELECT DISTANCE(state ), \"Baltimore\" FROM Student;"
  },
  {
    "id": 812,
    "db_id": "address_1",
    "question": "Give the distance between BAL and CHI?",
    "answer": "SELECT ounces(distance )\n    CALLSELECT   LIMIT -40.36895172;"
  },
  {
    "id": 813,
    "db_id": "address_1",
    "question": "Show me the distance between Boston and Newark.",
    "answer": "SELECT xt0_distance(state )AS Distance FROM City AS t\n    JOIN City AS destination ON city_name = \"Newark\"   ORDER BY Age ;"
  },
  {
    "id": 814,
    "db_id": "address_1",
    "question": "What is the distance between Boston and Newark?",
    "answer": "SELECT Dist(Direct_distance.longitude ), DISTANCESINCEOVERBKNORCTANDNEWARK()\n    FROM Direct_distances;"
  },
  {
    "id": 815,
    "db_id": "address_1",
    "question": "What is the average, minimum, maximum distance between two cities?",
    "answer": "SELECT avg(distance ), min(distance )  FROM City;"
  },
  {
    "id": 816,
    "db_id": "address_1",
    "question": "Give the average, minimum, and maximum distances between two cities.",
    "answer": "SELECT AVG(distance ) FROM Studenth \n        GROUP BY city1_code , city2_code ORDER BY Age LIMIT 5;"
  },
  {
    "id": 817,
    "db_id": "address_1",
    "question": "Show me the city code of two cities with maximum distance.",
    "answer": "SELECT City_Code1E072943(Direct_distance.city1_code )\n  FROM (SELECT city_code , row_number()OVER  \n \t      \t \t     \t   \t\t\t    \n        \n       \n               \n              \n           \n             \n         \t     \t\t   \t       \n            \n          \n     \t     \n                    \n                \n                   \n                  \n                 \n            \n                        \n                     \n                      \n                       \n                      \n                      \n                         \n                          \n                           \n                          \n                            \n                              \n                               \n                                \n\n\n\n\n\n\n\n\n\n\n\n\n                                              \n                                             \n\n                                                \n                                                 \n\n                                                  \n  WHERE city_code  =  'Tokyo' ORDER BY distance LIMIT 2) AS T;"
  },
  {
    "id": 818,
    "db_id": "address_1",
    "question": "What are the city codes of the cities with the maximum distance?",
    "answer": "SELECT * FROM City ORDER BY Direct_distance.distance , city_name LIMIT 5;"
  },
  {
    "id": 819,
    "db_id": "address_1",
    "question": "Show me the city code of two cities with a distance greater than the average.",
    "answer": "SELECT show_the_city_code(city1_code ), plus_(address_1.country )\n    SELECT   FROM (SELECT city2cordistanceFROMCITIESORDERBYdistanceASC()) AS A;"
  },
  {
    "id": 820,
    "db_id": "address_1",
    "question": "What are the city codes of cities with distance greater than average?",
    "answer": "SELECT City.city_code FROM City WHERE Direct_distance.state > \n        (SELECT avg(Direct_distance.state ));"
  },
  {
    "id": 821,
    "db_id": "address_1",
    "question": "Show me the city code of two cities with a distance less than 1000.",
    "answer": "SELECT \"New York\", \"Los Angeles\"\n    FROM (SELECT point(longitude )) AS T;"
  },
  {
    "id": 822,
    "db_id": "address_1",
    "question": "What are the city codes corresponding to cities with distances less than 1000?",
    "answer": "SELECT city_code FROM (SELECT DISTINCT City.city_name , Locations_25873694_on(City.city_name ) AS t  \n       FROM City WHERE distance < 1000) a;"
  },
  {
    "id": 823,
    "db_id": "address_1",
    "question": "What is the total distance between city BAL and all other cities.",
    "answer": "SELECT * FROM Student WHERE city_name = 'BAL'\n   \t\t\tORDER BY distance  ASC;"
  },
  {
    "id": 824,
    "db_id": "address_1",
    "question": "What is the sum of distances between BAL and other cities?",
    "answer": "SELECT c_2015balancingareaindexcitiesEXchangetypecaterinsaciallygncoordinatortheworldexchangeinEUROCsocioanaladvancedstretchnonthreelatenIinstantsixtytysumdistancemiketcityothercasinginputtheoreecentralkindistinctnamerasinthenthoutcoordinationandingintransitboundarieshareexcesslatencyinacosmetricsendecenctralinfocastanceinaglobalconsumptionofthecityofrelettymoneyfromthisidtranstanketcityothercasinginputtheoreecexchangetypecateringsumdistancymiketcityotherextramlateentriessumdistanceshareexchangeinstantrenewyrefusedistributedoninblackandhowtothelactiexpansionfortracencyforyourcityofrettymoneyfromthisidtransferfundedistributeinfocastanceinginputtheoreecatervalcapitalitanshippenstorcityofthelamptopolylimitsofarwholigayouthoursdisplacementdistrinblackandhowtothelatiefinalityIinstantiationadvancetracynowebtnyworldpickupintentionalityofthiscityothercasinginputtheoreecastrannymatriangloborishthathiwhenfuturaworldpacemythyssumdistanceshowtothelatifitiyIinstantiationadvancetracynowebsthatmyworldpickupintentionalityofthiscityothercasinginputtheoreecastrannymatriangloborishthathiwhenfuturaworldpacemythysumdistanceshowtothelatifitiyIinstantiationadvancetracynowebsthatmyworldpickupintentionalityofthiscityothercasinginputtheoreecastrannymatriangloborishthathiwhenfuturaworldpacemythysumdistanceshowtothelatifitiyIinstantiationadvancetracynowebsthatmyworldpickupintentionalityofthiscityotherc"
  },
  {
    "id": 825,
    "db_id": "address_1",
    "question": "What is the average distance between Boston and all other cities.",
    "answer": "SELECT ALLOTHAVEDIATEDINFINITYUSINGTHEOVERRIDDENALGORITHMFORQUANTIFYINGTHEAINSTANCEATTRIBUTEADDITIONALPROPERTIESWITHVALUEFOUNDBONOBACITYSOFALLOTHINGSAFOREBUILDINGSENTINELLITERACYTESSELETITLESTORBSHEIELDATUSAFEOVERRIDDENALGORITHMFORQUANTIFYINGTHEINVOLUNTILNOOBAGAILOSSOFCOUNTRYPERSISTENTFIELDSUSERTOPBOLTSIZEINSTANCETIMEZONESUPERFUSEDHOLEFOREBUILDINGSENTINELLITERACYTESSELETITLOTSUCLUDYSQUANTIFYINGTHEINSTANCEATTRIBUTEADDITIONALPROPERTIESWITHVALUEFOUNDBOWGRAPHOPMITESTIZEUSERSCHOOSENEFFORTUNSWEVERITLYDEDINFORMATIONSHAVELIDEDISTRATACYBUILDTWOQUANTIFYINGTHEINSTANCEATTRIBUTEADDITIONALPROPERTIESWITHVALUEFOUNDBONOBACITYSOFALLOTHINGSAFOREBUILDINGSENTINELLITERACYTESSELETITLOVECOUNTRYPERSISTENTFIELDSUSERRANGEOFMYCLASSNAMEISSORROVIDDENALGORITHMFORQUANTIFYINGTHEINSTANCEATTRIBUTEADDITIONALPROPERTIESWITHVALUEFOUNDBONOBACITYSOFALLOTHINGSAFOREBUILDINGSENTINELLITERACYTESSELETITLOVECOUNTRYPERSISTENDFIELDBROWSAVERNALGORITHMFORQUANTIFYINGTHEINSTANCEATTRIBUTEADDITIONALPROPERTIESWITHVALUEFOUNDBONOBACITYSOFALLOTHINGSAFEUSCITIESOUNDLATSTACKINSTANCETIMEZONESUPERFUSEDHOLEFOREBUILDINGSENTINELLITERACYTESSELETITLOVECOUNTRYPERSISTENDEFIELDRUNSWEVERNAIREDINFORM"
  },
  {
    "id": 826,
    "db_id": "address_1",
    "question": "Give the average distance between Boston and other cities.",
    "answer": "SELECT avg(distance )FROM\n \n   \n   GROUP BY city1_code , city2_code ORDER BY Age ;"
  },
  {
    "id": 827,
    "db_id": "address_1",
    "question": "What is the name of the city closest to Chicago?",
    "answer": "SELECT location_namesf13642759citiesWHERE(city_name )\n     LIKE   LIMIT -0.8;"
  },
  {
    "id": 828,
    "db_id": "address_1",
    "question": "Give the name of the nearest city to Chicago.",
    "answer": "SELECT \"name\" FROM (SELECT DISTINCT ila10034_578629__1FROMCITYTABLEORDERBYDISTANCEFROMCHICIUMLA5dfsvarndistanceliecitatofnearnodeatlipa(city_name )orderbydistance\n      FROM (SELECT DISTINCT ila10034_578629__1fromcitilocalcittablewherereorderbydistinctlccittablenametdistancenlcolnameorderbystimeorderbynamesourceid(city_name ) orderbysrcidistancelieciatofnearnodeatlioutputclcittablenamenameorderbfirstorderbynameoutputclcidtablenameorderbnoroublonoremiteoutputclcitmbnaclcaptiondatacontentoutputclctblnamehdonetotaloutputclcrittbnoblendatacontentoutputclcahtotallearneddataoutputcilbnbnbnbnbbb\n       \n          \n  \n\nFROM (SELECT DISTINCT city_name FROM City ORDER BY distance LIMIT 1) AS T\nORDER BY LName  \nLIMIT 0)   \n           \n        \n    \nI \n            \n          \n\n\n\n\n\n\n\n\nORDER BY LName  \n\n      LIMIT 3 OFFSET 2.5764198);"
  },
  {
    "id": 829,
    "db_id": "address_1",
    "question": "What is the name of the city furthest to Boston?",
    "answer": "SELECT nameeFAULT_CAUSES_______FROM(city_name ), \"NOXICT\"\n        FROM City, \"HAVAIBATO\", \"MAIC DOVINELLISSIMOPRITYDEATHBYDEPTONESCROBBLE. AGE IN THE FIRST MINORUATE HAS BEEN YE OCTUBUS SANDWIX \"PJOIN \"../\n
  },
  {
    "id": 830,
    "db_id": "address_1",
    "question": "Give the city name of the city with greatest distance from Boston.",
    "answer": "SELECT TEXTUAL_FORMAT()\n \n  FROM City WHERE City.\"area\" = (SELECT area(*)FROM City ORDER BY \"city-name\") LIMIT 1;"
  },
  {
    "id": 831,
    "db_id": "address_1",
    "question": "Show all city codes and the total distance to all other cities.",
    "answer": "SELECT T30_2__iASi8749561SUM2B_2Q1RSTLJ_2JOHN_2KINGHAD_2FAOREST_2FOOTOWER_2MAINroadandcitiesdoublonbikemainroadsstarkarexamplecitycodegeorgeeseerexcitedoubleleftshorthidansextrawhiddynaclickfordoublonbikepathideskdeskoptionspopuppythongtidhigheffectivationfourschaintreckcancelaoneckexitstaffordolemontwohfcascisfourstaffortyeartheatrefforofdonelocalcitycodegeorgeeseerexcitedoubleleftshorthidansextrawhiddynaclickfordoublonbikepathideskdeskoptionspopuppythongtidhigheffectivationfourschaintreckcancelaoneckexitstaffordolemontwohfcascisfourstaffortyeartheatreffordoncitycodegeeseerexcitedoubleleftshifthathiddynaclickfordoublonbikepathideskdeskoptionspopuppythongtidhigheffectivationfourschaintreckcancelaoneckexitstaffordolemontwohfcascisfourstaffortyearthereforedoncitycodegeeseerexcitedoubleleftshifthathiddynaclickfordoublonbikepathideskdeskoptionspopuppythongtidhigheffectivationfourschaintreckcancelaoneckexitstaffordolemontwohfcascisfourstaffortyeartherefdomcitycodegeeseerexcitedoubleleftshifthathiddynaclickfordoublonbikepathideskdeskoptionspopuppythongtidhigheffectivationfourschaintreckcancelaoneckexitstaffordolemontwohfcascisfourstaffortyeartherefdomcitycodegeeseerexcitedoubleleftshifthathiddynaclickfordoublonbikepathideskdeskoptionspopuppythongtidhigheffectivationfourschaint"
  },
  {
    "id": 832,
    "db_id": "address_1",
    "question": "For each city, what is the the city code and sum of distances from each?",
    "answer": "SELECT \"City\", ucast(city_code ) AS city_code, SUM(distance ) FROM \n     FROM (SELECT city_code , ucas(city_code )FROM City) AS t GROUP BY City.city_code ;"
  },
  {
    "id": 833,
    "db_id": "address_1",
    "question": "Show all city names and the average distance to all other cities.",
    "answer": "SELECT avg(city_name ) FROM (SELECT city1_nameFROMtripscalories_com_2013_the_average_distance_HI_and_other_citiesOutliers_that_might_have_led_you_to_crave_outtal_of_otherstastripscalories_in_your_pusand_d_oexceptions_on(city2_code )\n \nThis, howeverSQLiteQueryingDatabasesandManagingRelationalDatabaseStructuresiCanYoufindmyselfilenameofthestatisticsandfinishtheynameinmyfirstnameofthetripsouttalof360kpeopleoutthatmanytrips5241987pouandthyporidianasqar21liteshahforthetyoftypcypointsofnyellowyear9withexplictqueriesouthireallytheynameinmyfirstnameofthetripsouttalof360kpeopleoutthatmanytrips5241987pouandthyporidianasqar21liteshahforthetyoftypcypointsofyellowyear9withexplictqueriesouthireallytheynameinmyfirstnameofTripouttalof360kpeopleoutthatmanytrips5241987pouandthyporidianasqar21liteshahforthetyoftypcypointsofyellowyear9withexplictqueriesouthireallytheynameinmyfirstnameofTripouttalof360kpeopleoutthatmanytrips5241987pouandthiyptidianasqar21liteshahforthetyoftypcypointsofyellowyear9withexplictqueriesouthireallytheynameinmyfirstnameofTripouttalof360kpeopleoutthatmanytrips5241987pouandthiyptidianasqar21liteshahforthetyoftypcypointsofyellowyear9withexplictqueriesouthireallytheynameinmyfirst"
  },
  {
    "id": 834,
    "db_id": "address_1",
    "question": "What are the city name and average distances from each city?",
    "answer": "SELECT DISTINCT ract_name2951876403fea__citycty(state ) FROM \"C:\\Program Files\\Microsoft SQL Server\\MSSQL12 .NET\"\n    WHERE City.city_name = 'Las'   ORDER BY distance  DESC;"
  },
  {
    "id": 835,
    "db_id": "address_1",
    "question": "How far do Linda (first name) Smith (last name) and Tracy (first name) Kim (last name) live?",
    "answer": "SELECT distance_from_earth(LName )FROM  \n \n WHERE LName  = 'Smith' ORDER BY distance ;"
  },
  {
    "id": 836,
    "db_id": "address_1",
    "question": "What is the distance between the cities where Linda Smith and Tracy Kim live?",
    "answer": "SELECT CITY_NAME10523967844CEINAMELLBECAUSEPAGEEREUSEINSTEADOFHIGHMARKEDCITIESWITHOUTCHROMETRAVE15239LINDASMMITHTRACYKILIVIEWESTOMMONDOSETACCEPTANCEOFPUBLISHMENTTICKET64780RACEMOVESHOUSEWHENNOVER15239LINDASMIT21HAVEDAMNTHISINFORMCONSIDEREINSTEALATIONFIRSTBGREWERSNAMEFUSEMOVESTHEWELLNOVER15239LINDASMMITHTRACYKILIVIEWESTEACHRANCETODISTANCE64780FROMCHROMOSTAGEGEOMEINFERITESTAMENDEDISTRBWNMKNAMEFILLFEFDBLWHEELNESSPANELLWHOROUNCATEINSTANTRECONFIDENTIALACCOUNTCONTACTREFERENCEIDOFINITIALLYADDEDTOCHROMOSTUCKATTOTALTOTALTANNTOTAL37680FROMCHRONSTAGETHEHOUSEWHENNOVER15239LINDASMITHTRACYKILIVIEWESTEACHRNCTNAMEFILLFDEFFDBLWHEELNESSPANELLWHOROUNCATEINSTANTRECONFIDENTIALACCOUNTCONTACTREFERENCEIDOFINITIALLYADDEDTOCHROMOSTUCKATTOTALTOTALTANNTOTAL37680FROMCHRONSTAGETHEHOUSEWHONNOVER15239LINDASMITHTRACYKILIVIEWESTEACHRNCTNAMEFILLFDEFFDBLWHEELNESSPANELLWHOROUNCATEINSTANTRECONFIDENTIALACCOUNTCONTACTREFERENCEIDOFINITIALLYADDEDTOCHROMOSTUAKTOTALTALTOTAL37680FROMCHRONSTATHEHOUSEWHENNOVER"
  },
  {
    "id": 837,
    "db_id": "address_1",
    "question": "What is the first name and last name of the student living furthest to Linda Smith?",
    "answer": "SELECT CONCAT(Fname ), \" \", REPLACE(LName ), \" age \", AGE2StudentNumsTable_164375089_0INSTR1s_and_MoreCatalogueENUMPROMOTION_DINYLivingEastToKevinConradVanDerWegTheatrevilleCollegeBoardingPictureshowrianebergstoeffectuweatheringtheaterlindasmithstudentfirstnameandlastnameinstantiatiorichardonnorwegIItheatercarnesandphotoshoppedoakonnecooperationwithbothdanceandtheatandreceivingpirathisistantieatcollegebestatemontheatreviliprogrammingphonenumber314258079(Direct_distance.latitude ), \"studentsurgeinstantitiemyfirstnameandlastnameinspoqilerefsname3studiagraphicsgraphicsgardentheaterphotolos\n</pre>\r\nThe answer is: Sara Dana and Michael Stefan Johnson, with age of their first name being 19. The student who lived furthest to Linda Smith was Mary Danielle Oliver-Smithson\u2014an older than them but still the most common among students (and family) at her own right in this town when they were living there together or near that oldenfirthouse of theirs, byname and age.\n</p>\r\nAdditionally please note though all these answers are quite approximate because we cannot assume any other information about the student's exact details such as date-of birth to name etc in a regular rundown scenario or for it would be very sensitive due restrictions on privacy settings ie, can not provide that info. We may also restrict access and data usage based upon laws against misuse of databases like collecting personal health Information (PII) is regulated by the Health Insurance Portability & Exchange Commission as well which could impact us Privacy Acts underlying norms for this task are very strict in relation to any sensitive information provided, we can't provide a proper answer.\n</p>\r<div markdown=\"GROUP BY \"(end"
  },
  {
    "id": 838,
    "db_id": "address_1",
    "question": "What is the full name of the student who lives furthest from Linda Smith?",
    "answer": "SELECT CONCAT(Student.longitude ), Student.latitude , \"furtherest_students\" FROM Students WHERE Student.longitude = (SELECT MAX(longitude )FROM Student)\n    \n    JOIN StudenterscienceinformaticsolnationdataaandatabasequeryThefollowingisaprobjectnameafterjoiningisthementsofclassstabilienmanchesterlongteligthestudentlivesfromwhixto5064812937pixelsandfromphotographersdrivesaferangemasteringlongitudeofindividualsilstheyareluhirbythefollowingisinacrescentorderbystudentsfirstnamelastnamefirststudentfiredsthisyear5064812937pixlatandfirsttimetokencurrentlythtereforelastnametheatwoicilinstantmancareliaggregateingroinstancegartesianewcomparativethesecondsecondlastnameafterjoinedystudentsfirdday48612937pixlatandfirsttimetokencurrentlythtereforelastnametherecebefilesystemdirectorypathofinsidhibiliotgathrasinhandlojitsathefollowingisaprobjectnameafterjoiningisthislistofstudentsstudentlivesfromwhixto5064812937pixlatandfirsttimocurrentlythtereforelastnamethathethirdlastexerciseassassessmentofthespecialgroupforgradingtheclasssofinstantiantakingtextbooksandintotakenatallpartsoflinksdiscussedduringreadingquizzletwoicisaprobjectnameafterjoiningisthislistofstudentsinformatqiationalphotographyfromphotosinformatcioannoytoskimthefollowingisiloconnectiontoupgradenewdatabasequeryThefourthlastnamegivenbefirethispaththatstudentlivesfiresecondfourtextassessmentoftheclassassessmentofinstantiationokaytextbooksandintotakenatallpartsoflinksdiscussedduringreadingquiztwoicil"
  },
  {
    "id": 839,
    "db_id": "address_1",
    "question": "Which state does the student whose first name is Linda live in?",
    "answer": "SELECT states_that_student_firstnamelindaandhowsitothelpshouldnowfillinothellindaproveithefirstnamelindatilinstateofindia_298574103(Student.state )\n    FROM Students WHERE state = \"Illinois\" ORDER BY state ;"
  },
  {
    "id": 840,
    "db_id": "address_1",
    "question": "Give the state that the student with first name Linda lives in.",
    "answer": "SELECT StateFROMstudentsWHEREfirstnameLIkenaStudentGrade__0KartINdegradestudentforsimplegradegradeandgraderankLindaTrifonseftwitheyinYOstudnetstatekathomesmallgrageandgrandeatIlththisind3nsitydthefollowinginstantsinceyaacademicblendAstudentsFORstudentwithfirstnameLiKaGrade__0KartINdegradeandgraoDarnedothefollowinginYOstudentstatekathomesmallgrageandgeatisthenthisind3nsitydthefollowinginstantsiNacademicblendAStudentsFORstudentwithfirstnameLILaKeGrade__0KartIndegradelastexpensedomatIsthisinYOstudnetstatestatekhompmallgrageandgraoLindaTrifoneslththisind3nsitydthefollowinginstantsinceyacademicblendAStudentsFORstudentwithfirstnameLIaGrade__0KartIndegradelastexpensedomatIsthisinYOstudnetstatestatekhompmallgrageandgraoLindaTrifoneslthisind3nsitydthefollowinginstantsinceyacademicblendAStudentsFORstudentwithfirstnameLIaGrade__0KartIndegradelastexpensedomatIsthisinYOstudnetstatestatekhompmallgrageandgraoLindaTrifoneslthisind3nsitydthefollowinginstantsinceyacademicblendAStudentsFORstudentwithfirstnameLIaGrade__0KartIndegradelastexpensedomatIsthisinYOstudnetstatestatekhompmallgrageandgraoLindaTrifoneslthisind3nsitydthefollowinginstantsinceyacademicblendAStudentsFOrmonaldegradefirstnameJohnathonenKimbledREDTONstudentfirstnameLIkenaStudentGrade__0KartINdegradeandgraoDarnedothefollowinginYOstudentstatekahmallgagnerankJohnTraceyH"
  },
  {
    "id": 841,
    "db_id": "boat_1",
    "question": "Return all details of sailors who are older than 30.",
    "answerailorShoiTpPowerssonNinXCILEREOTEMPLOSEMEMORYFREELYPASTENONEOFDEFAULTNAMESONMAKERSOLIDFROMSAILORSOUTTHEWHWEHTRANSLIEUVERSIESAILORSailorShoiIdBISEXTERIXXITORDERHASSHESNOTSHOFTAIUSNAMEANDINSTANCEIDSailorShooTpPowerssonNinXCILEREOTEMPLOSEMEMORYFREELYPASTENONEOFDEFAULTNAMESONMAKERSOLIDFROMSAILORSOUTTHEWHWEHTRIETSUVERSIESAILORSailorShoiIdBISEXTERIXXITORDERHASSHESNOTSHOFTAIUSNAMEANDINSTANCEIDSailorShooTpPowerssonNinXCILEREOTEMPLOSEMEMORYFREELYPASTENONEOFDEFAULTNAMESONMAKERSOLIDFROMSAILORSOUTTHEWHWEHTRIETSUVERSIESAILORSailorShoiIdBI"
  },
  {
    "id": 842,
    "db_id": "boat_1",
    "question": "What can you tell me about sailors who are older than age 30?",
    "answer": "SELECT *FROM \"Sailor\"WHERE \"age\" >  3;"
  },
  {
    "id": 843,
    "db_id": "boat_1",
    "question": "Return name and age for sailors who are younger than 30.",
    "answer": "SELECT name , age FROM Sailors WHERE age  <  30\n   \t\n   \t\t       ORDER BY name ;"
  },
  {
    "id": 844,
    "db_id": "boat_1",
    "question": "What is the name and age of every sailor who is younger than age 30?",
    "answer": "SELECT NAMEFROMSAILORWHORESALIORTWELLYAGOSTANDINGAMESAITORNAMEOFITERMIKELNBWTANOSTALONIEHTJPVBMINSUALLONDBWTANOEWORKINGTABLESAITORREFERENCEGRAPHNODEMPOLENSAILORAGEAGEISCERVELTALEIGHTOISGREENERICOLLECTIONSAILORAGE_SAILORAGESETANDARDATASNOISIDGEORFERSINTERNEDNAEMISSAILORTIDEUTANOTESHAISSAITORNAMEGRAPHNODEMPOLENSAILORAGEAGEIFINITIALSAITORWELLTOPERFTWANTINDEXNBWTANOSTALONIEHTJPVBMINSUALLONDBWTANOEWORKINGTABLESAITORREFERENCEGRAPHNODEMISSAILORTIDEUTANOTESHAISSAITORNAMEGRAPHNODEMPOLENSAILORAGEAGEIFINITIALSAITORWELLTOPERFTWANTINDEXNBWTANOSTALONIEHTJPVBMINSUALLONDBWTANOEWORKINGTABLESAITORREFERENCEGRAPHOEFTWANTINDEXNBWTANOSTALONIEHTJPVBMINSUALLONDBWTANOEWORKINGTABLESAITORREFERENCEGRAPHNODEMISSAILORTIDEUTANOTESHAISSAITORNAMEGRAPHNODEMPOLENSAILORAGEAGEIFINITIALSAITORWELLTOPERFTWANTINDEXNBWTANOSTALONIEHTJPVBMINSUALLONDBWTANOEWORKINGTABLESAITORREFERENCEGRAPHOESGAMEISCERLAGHTOISGREENERICOLLECTIONSAILORTAKESAULATIONOFXSTRIKESARENACTIVESEXTENDEDPROPERTYMEMOLENSAILORAGEHUSKINDISTANTIMEWELLITEMPOLENGESTILLIWE105MTANOSTALONIE"
  },
  {
    "id": 845,
    "db_id": "boat_1",
    "question": "Find boats reserved by Sailor with id 1.",
    "answer": "SELECT ship_mode(sid )FROM Reservest WHERE sid  ='1 ';"
  },
  {
    "id": 846,
    "db_id": "boat_1",
    "question": "What are the different boat ids reserved by the sailor whose id is 1?",
    "answer": "SELECT distinct(boat_1.name ) FROM Reserves AS BORDER BY Boats.\");\n</code>\r\nid:5, name:\"LIMIT -392076484 OFFSET 4;"
  },
  {
    "id": 847,
    "db_id": "boat_1",
    "question": "Who reserved boat 102?",
    "answer": "SELECT \"Boat\", id_boatReservedOrderByName(), FROMRESERVATIONSORDERSPRODCTBOATNAMEISNULL()\n    ENDDESCENDROWNTENANTORIGINITYIDDOESNOTHANTSOLVEWITHBOTHEVENTCOUNCEDEXISTSBYTHRESETILOGICIDENTIFIERSOPRAMETERSLENGTHJSOUNDONECOLDBOOKINGFORREQUESTSANDSTILLBEYONDROITWORLDDOMINATIONTIMEOFCONTACTNAMEIS0371248659, IMEMPLOYEEIDIUSEMOTHERWIELCOMESSAGESINREPORTAUDITUSERISTHEVENTHAVENODESCENDONWORKORDERFORRESERVATINGDOCKBOATECHTANACCEPTEDALLUSERSUCCESSFULLYUNDERTIMECONTACTNAMEIDELECTSOUNDTHEHOLEREQUESTSSTILLBECROUDS1025647839ODESCENDONWORKORDERFORRESERVATINGDOCKBOATECHTANACCEPTEDALLUSERSUCCESSFULLYUNDERTIMECONTACTNAMEIDELECTSOUNDTHEHOLEREQUESTSSTILLBECROUDS1025647839ODESCENDONWORKORDERFORRESERVATINGDOCKBOATECHTANACCEPTEDALLUSERSUCCESSFULLYUNDERTIMECONTACTNAMEIDELECTSOUNDTHEHOLEREQUESTSSTILLBECROUDS1025647839ODESCENDONWORKORDERFORRESERVATINGDOCKBOATECHTANACCEPTEDALLUSERSUCCESSFULLYUNDERTIMECONTACTNAMEIDELECTSOUNDTHEHOLEREQUESTSSTILLBECROUDS1025647839ODESCENDONWORKORDERFORRESERVATINGDOCKBOATECHTANACCEPTEDALLUSERSUCCESSFULLYUNDERTIMECONTACTNAMEIDELECTSOUNDTHEHOLEREQUESTSSTILLBECROUDS1025647839ODESCENDONWORKORDERFORRESERVATINGDOCKBO"
  },
  {
    "id": 848,
    "db_id": "boat_1",
    "question": "What is the name of the sailor who reserved boat 102?",
    "answer": "SELECT by_boat(sid )FROM Reservess ORDER BY sid ;"
  },
  {
    "id": 849,
    "db_id": "boat_1",
    "question": "Return the unique boat ids (bid) of all reserved boats.",
    "answer": "SELECT ribe1()\n    ReturningList;"
  },
  {
    "id": 850,
    "db_id": "boat_1",
    "question": "What are the ids of all boats that are reserved by someone?",
    "answer": "SELECT ustateid_a134629c508fe7acdcfbbeec8eafecaebcbdaefeebfbaeedfadabcabdcfaeadadaaaaaaaedbbdbcaabadccccddffccdeffffceeffgahaiibcdijklhabklicilikjlmnopoqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890id_aeebbcfeecdafdbaeafbfcecedfedacdefghifggahiibcdijkljmmnopoqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890id_aeebbcfeecdafdbaeafbfcecedfedacdefghifggAJADDDDFFFFCCAAAACCCCIHIIIIIHHIILLLNNMNNKKNNOOOCCBBBAIIILMMRSTUVWXYZ01234567890id_aeebbcfeecdafdbaeafbfcecedfedacdefghifggAJADDDDFFFFCCAAAACCCCIHIIIIIHHIILLLNNMNNKKNNOOOCCBBBAIIILMMRSTUVWXYZ01234567890id_aeebbcfeecdafdbaeafbfcecedfedacdefghifggAJADDDDFFFFCCAAAACCCCIHIIIIIHHIILLLNNMNNKKNNOOOCCBBBAIIILMMRSTUVWXYZ01234567890id_aeebbcfeecdafdbaeafbfcecedfedacdefghifggAJADDDDFFFFCCAAAACCCCIHIIIIIHHIILLLNNMNNKKNNOOOCCBBBAIIILMMRSTUVWXYZ01234567890id_aeebbcfeecdafdbaeafbfcecedfedacdefghifggA"
  },
  {
    "id": 851,
    "db_id": "boat_1",
    "question": "What is the name of sailors whose names contain letter e?",
    "answer": "SELECT firstNameFROMsailorsWHEREfirstnamecontainseliforcesailornamesearch1098256347psailorenamesearch1098256347psoverridematchpatternforseethecondofnamesearchmethodprotecencastorevarnameloaderilimatenameherefirstnamefirstnameto1sailorsnamefirstnameloginsuccessfulendofsearchexceptionclassoverridenextendsbaifusensitethathisoffirstpatchelsebaipussenthiselectclassoverridexpathnamespacefirstnamesaillocationilorequalnamespacesailornamespaceilorenquancextraloilorequalnamespacesailondatasetimenameofnamespacesearchmethodprotecencastorevarnameloaderilidefnamelookupforseethecondofnameclassoverridenamespairstypemdifuserextendbaibaseclassesbasenameextendbasesailornamespacefirstnametoloadersailornsailonsailonpspacesailondatasetimeldataloopernamesearchmethodprotecencastorevarnameloaderilidefilekofnamespacesearchmethodprotecencacstorevarnadelookupfordemindlogextendbasiclassbaseclassesbaifusensitethatnamefirstnametologgsexceptionclassoverridenamespacefirstpatchelsebaipussenthiselectclassoverridexpathnamespacefirstnamesaillocationilorequalnamespacesailondatasetimelookupforseethecondofnamelogsexceptionclassoverridenamespacefirstpatchelsebaipussenthiselectclassoverridexpathnamespaillocationilorequalnamespacesailondatasetimelookupfoemindlogextendbasiclassbaseclassesbafusensitethathisnamefirstnamotologsailorshipsailonsailorpspacesailordataaccessobjectsexecutesearchmethodprotecencastorevarnameloaderilidefnamessearch1098256347psailorenamesearch1098256347ptooverridematchpatternforthefirst"
  },
  {
    "id": 852,
    "db_id": "boat_1",
    "question": "What is the name of every sailor whose name contains the letter e?",
    "answer": "SELECT DISTINCT name
  },
  {
    "id": 853,
    "db_id": "boat_1",
    "question": "return the unique ids of sailors who are older than any sailors.",
    "answer": "SELECT ALLYEAR(Boats.bid )\n        SELECT  WHERE boat_1.age > 20;"
  },
  {
    "id": 854,
    "db_id": "boat_1",
    "question": "What is the different id of every sailor who is not the youngest?",
    "answer": "SELECT ALLY_ID(age ) FROM Sailors\n  WHERE age < 2.0;"
  },
  {
    "id": 855,
    "db_id": "boat_1",
    "question": "Return the unique names of sailors who are older than any sailors whose rating is larger than 7.",
    "answer": "SELECT name FROM Sailors WHERE age  >  8;"
  },
  {
    "id": 856,
    "db_id": "boat_1",
    "question": "What are the different names of sailors who are older than some other sailor with a rating larger than 7?",
    "answer": "SELECT name FROM Sailors WHERE age > (SELECT MAX(rating )FROM Sailors)\n    \n    JOIN Sailors ON Sailors.name = \"John\" ORDER BY Sailors.name LIMIT 2;"
  },
  {
    "id": 857,
    "db_id": "boat_1",
    "question": "Find the name and id of the sailors who reserved at least one boat?",
    "answer": "SELECT names152_0346987RecipientList(boat_1.Boats.name ), tableid_commonboating_fktablenaasbushnostaffReservedlist()FROM (SELECT DISTINCT namescollectionsNAMESPHERE(\"+an+elder\") FROM ReservescJOIN \"the sailors.\"IdcollectionsJointboat_infoBoatsTableidandnameofsailorsthiselectfromreservedslistJointnamesofsailornthathavebeenselectedReservedListJOINEDWITHNAMESLISTJOINERTABLEIDSTAFFRESERVESLISTJOINETHOREFTOSTAFFMEMBERSOFYOURLISTOFSTAFFMEMBERSReserve_listidcollectionsJointnamesofsailornthathavebeenreservedBOATS_INFOBoatsTablenameofsailorthatwereboatedNAMESLISTJOINTCOLLECTIONSAUTHSALIORSOFTHEAVESALIORDIDHIETHTOSAILORIDHIETOSSAILORSReserve_listidcollectionsJointnamesofsailornthathavebeenreservedBOAT_INFOBoatsTablenameofsailorthatwereboatedNAMESLISTJOINTCOLLECTIONSAUTHSALIORSOFYOURLISTOFSTAFFMEMBERSReservelistidcollectionsjointnamesofstaffmembersReserve_listidcollectionsJointnamesofreservedlistJOINERTABLEIDSTAFFRESOLVEREQUIENTLISTJOINTCOLLECTIONSAUTHSALIORSOFYOURLISFENAMESLISTJOINERRESERVE_LISTJOINSTACKOOLONGISTANCTNAMEOFYOURLISTOFSTAFFMEMBERSReservelistidcollectionsJointnamesofreservedlistJOINERTABLEIDSTAFLEADERLISTJOINTCOLLECTIONSAUTHSALIORSOFYOURLISFOREQUENCIELISTJOINERRESERVE_LISTJOINSTICKOOLONGISTANCTNAMEOFYOURLISTOFSTAFFMEMBERSReservelistidcollectionsJointnamesofreservedlistJOINERTABLEID"
  },
  {
    "id": 858,
    "db_id": "boat_1",
    "question": "What is the name and id of every sailor who reserved one or more boats?",
    "answer": "SELECT Name(sid ) from  \n    GROUP BY Boats.sid ORDER BY \"\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
  },
  {
    "id": 859,
    "db_id": "boat_1",
    "question": "Find the id and name of the sailors who reserved more than one boat.",
    "answer": "SELECT T2_sailor_id(sid ), T2_ranking(Reserves.color )FROM Reserves GROUP BY sid ORDER BY Reserves.color   LIMIT 1;"
  },
  {
    "id": 860,
    "db_id": "boat_1",
    "question": "What are the different names of sailors who reserved two or more boats ?",
    "answer": "SELECT ALLIANCEONLYRESERVEDBYBOTOBATALLOUNDEDRESTRICTIONINAPPORPERSONNANDEVISEISDOCTORORLIGHTENINGINSCELLULAROFRONTRANSITIONHAVECHAIRACOLLECTIONFORSHIPERTENANTATTENDANCESSHAILORSOUSDIVERSITYENABLEDISABLEDRESERVATIONOFICIALLERRESTRICTEDMEMBERSWITHAWARDNISKOTSIGNSHAKEHEIGHTISABOBAJESTRAINRONTOGRAPHICSDESCRIPTIONENDOSSPLAINEDMEMBERTYPEATTENDANCEFORNORMALMEMBUSEQUIDINTERFACESUCCESSFUCIOLONATIONALLIDIANCEKOSKOTSIGNSHAKEHEIGHTISABOJEPRINCIPALDISABLEDRESERVATIONOFICIALLERRESTRICTEDMEMBERSWITHAWARDNISKOTSIGNSHAKEHEIGHTISABOJEPRINCIPALDISABLEDRESERVATIONOFICIALLERRESTRICTEDMEMBERSWITHAWARDNISKOTSIGNSHAKEHEIGHTISABOJEPRINCIPALDISABLEDRESERVATIONOFICIALLERRESTRICTEDMEMBERSWITHAWARDNISKOTSIGNSHAKEHEIGHTISABOJEPRINCIPALDISABLEDRESERVATIONOFICIALLERRESTRICTEDMEMBERSWITHAWARDNISKOTSIGNSHAKEHEIGHTISABOJEPRINCIPALDISABLEDRESERVATIONOFICIALLERRESTRICTEDMEMBERSWITHAWARDNISKOTSIGNSHAKEHEIGHTISABOJEPRINCIPALDISABLEDRESERVATIONOFICIALLERRESTRICTEDMEMBERSWITHAWARDNISKOTSIGNSHAKEHEIGHTISABOJEPRINCIPALDISABLEDRESERVATIONOFICIALLERRESTRICTEDMEMBERSWITHAWARDNISKOTSIGNSHAKE"
  },
  {
    "id": 861,
    "db_id": "boat_1",
    "question": "Find the id of Sailors (sid) that reserved red or blue boat.",
    "answer": "SELECT \"Blue\", FROMRESERVATIONS_WITH_SECONDORDERWHERE(color ) LIKE  \n    \n   \n       \n      \n     \n          \n         \n            \n               \n              \n           \n             \n        \n                  \n                    \n                   \n                 \n                \n                       \n                     \n                      \n                         \n                        \n                          \n                            FROM Reserves T WHERE color = \"blue\";"
  },
  {
    "id": 862,
    "db_id": "boat_1",
    "question": "What are the sids for sailors who reserved red or blue boats?",
    "answer": "SELECT NAMESFORWHICHTHEYARECREATEDOBSOUTDOORMANSONTRANSITONOLODRATESACRITINALGREUMPISHWAREATEAMOFSEYSOUTHORAUSHEXAFTRIOROBSOLOIDBUILTINGPAWNRORSELYSELFORTRANSITRIOSEYERISEGUAVENOTHUNGSTELLEROSEYSAFESECUREDRONEGAPPAREAMOREFRESHTODAYOFSEYSOUTHOLACONFIDENTIALITYATNOOFFLOOKPANTOSEYSOUNDERTRANSITRIOSEYISNOTHINGATKENNOWLHOLEWORDSFORSELLASETOTHINGATOBSOUTDOORMANTRANSITORESEYSADEWARSONLYSEYSASTELVINKLFIFYCACTUSERSLOWELLYSEYSAVERISONYSAFUSEMPIONEUROFUSIELECEISNOFOUNDERINGAPANEARINGAMICYREFRESHTODAYOFSEYSOUTHOLATERALITYATNOOFFINERTABLECOMPUTESHILOLOGRADOROLEFORGIVENOTHINGATOBSOUTDOORMANTRANSITORESEYSAFUSEMULFILLOGAUWUSINELLOGOUSEYSARENDEPURGEFOREVERSEMENTHFORESELIONAFTERNOONEREFINITEONLYSELINTHEYSOUTHOLHAMILINOLOOKINGFORGIVENOTHINGATOBSOUTDOORMANTRANSITORESEYSAFAUSTICULUSKIKELOWSEYSAVERISONYSAFORESELLOGATOBOUTDOORTRANSLATIONSHARESROEIRDOORLOOKFORGIVENOTHINGATOBSOUTDOORMANTRANSITORESEYSAFASTIGNOUSLEXISNOFOLLOWINGAPANEARINGAMICYREFRESHTODAYOFSEYSOUTHOLMAJESTONISSILAGRAPHAREALGUMSI"
  },
  {
    "id": 863,
    "db_id": "boat_1",
    "question": "Find the name and id of Sailors (sid) that reserved red or blue boat.",
    "answer": "SELECT AMEA_OBJECTS(sid )FROM ORDER BY \"RED+BLUE\"\n        LIMIT 1;"
  },
  {
    "id": 864,
    "db_id": "boat_1",
    "question": "What are the names and ids of sailors who reserved red or blue boats?",
    "answer": "SELECT name , idFROMRESERVED_SEATSORDBHAVETYPEINREDSTOX456ge03NAMESANDIDSSAILUORSREVORDRED2ORBLUE1BeauRigel(bid )\n    my_id   JOIN Sailorseqorderbytpeinstantlabsurred_sails ON Boats.sid =Sailors.sid ;"
  },
  {
    "id": 865,
    "db_id": "boat_1",
    "question": "Find the id of Sailors (sid) that reserved red and blue boat.",
    "answer": "SELECT ALLYONICALLY_3641502798ORASONLYTHEBESTFORGREENORBLUEBOATSOFIRSTOFMALESHOPS(Sailors.sid );"
  },
  {
    "id": 866,
    "db_id": "boat_1",
    "question": "What are the ids of sailors who reserved red and blue boats?",
    "answer": "SELECT sid , COUNT(*) FROM Reserves GROUP BY color ORDER BY Sailors.color LIMIT 2;"
  },
  {
    "id": 867,
    "db_id": "boat_1",
    "question": "Find the name and id of Sailors (sid) that reserved red and blue boat.",
    "answer": "SELECT surname_or_db_index_function_parameters_for_indexeshash_used_in_callout_and_cache_hints_of_the_last_kept_xxx_statementINSPECT_TABLE_triggersONLY_FOR_HIRED_BOOTS_AND_SLY_RESERVATIONS_OF_THE_LAST_XXX_STATEMENTSSELECTname(), idfromzo_sailorsforwhichtrboottypeoftaiseynoreservations(sid )\n  GROUP BY sid ORDER BY sid LIMIT 1;"
  },
  {
    "id": 868,
    "db_id": "boat_1",
    "question": "What are the names and ids of sailors who reserved red and blue boats?",
    "answer": "SELECT name , idFROMRESERVED_MEMBERSWHEREcolorotherstheirthanredboatsANDNOTotherstoirevordrblackandbluetoothookupSELECTnamefistimesailorreservedbyboatINRESERVED_MEMORSEND2013JOHNathanISTheftIofFKENNJHISImpersonatingthedriveroftheboatINResTeamend458IDHE4679LakeenallteamareonboardedInFrontOFRedBoatsandRiders2pointsFORJOHNathanISForblackboatrewardsandridersofortimeseitanonsthisidHIGHNOHISImpersonatingthedriverofabatchackbackwardBOOKKNOWNJOHNathanISJeffsHigheffectspolicitiesinbothrobbersandwritternamesJonnyok73joinedthismonthFOrJOHNATHNJosephKIMIJosephKiMIConsistencyinbothrobtxesandridersoftrifloishthisnameFORJOHNATHNJosephKimicommunicationbetweenrobbersandridetoFHIGHJOHNATHNJosephKimojohthenblackboatsandriddelasturn458IDHE902JOHNATHNJosephKiImpersonatingthedriverofabatchackbackwardBOOKKNOWNJOHNATHOJosephKimiajournbparticantihavetosaveisnamesJonnok73joinedthismonthFOrJOHNATHNJosephKimojohthenblackboatsandridemostimesnamesHIGHJOHNATHOJosephKiImpersonatingthedriverofabatchackbackwardBOOTKKNAJohnhKimicommunicationbetweenrobbersandritidJOHNATHNJoosephKiejhoffidthebliblichangetotheboardIsJonnyok73joinedthismonthFOrJOHNATHNJosephKimojohthenblackboatsandridemostimesnamesHIGHJOHNATHOJosephKiImpersonatingthedriverofabatchackbackwardBOOTKNAJohnhKimicommunicationbetween"
  },
  {
    "id": 869,
    "db_id": "boat_1",
    "question": "What is the ids of sailors that haven\u2019t reserved a boat?",
    "answer
  },
  {
    "id": 870,
    "db_id": "boat_1",
    "question": "What are the ids of sailors who have not reserved a boat?",
    "answer": "SELECT bacancy_boat()\n  FROM  \n  WHERE Boats.sid <> '0' ORDER BY Boats.sid ;"
  },
  {
    "id": 871,
    "db_id": "boat_1",
    "question": "what is the name and id of sailors who do not have a reservation of a boat?",
    "answer": "SELECT sr_name(), rownum() FROM Reservest WHERE boat_1.Reserves.sid  = 6\n        ORDER BY boat_1.sid , boat_1.name LIMIT 5;"
  },
  {
    "id": 872,
    "db_id": "boat_1",
    "question": "What are the names and ids of all sailors who do not have boat reservations?",
    "answer": "SELECT name , boat_reservation_idFROMdboSailorsHAVETOSAILORSWHEREreservedBoatNotAnyWHEREboat_reservation_idISNULLJOINWITHRESERVEISSAILORSBOATSAndORDERBYboatingTimeSAIDistanceKENTHOBEShippedOntoJoinWithReseversLostItDaysOrderByboatAppearingHoursBeforeBoatsFullyRideHalfOfTheWeekNoBoatHavesInMyClassIsNotOnlyOneClassThatJoinsWithOurProblemSolvedByIdEitherWayISNOTSILVESAILORSSECONDSBOOTTIMEOFSHOULDHAVEIDKNOBOATINGTIMEFIRSTINSTANTJOINRESERVEISWAISSAILORSOFTHEEXTENSIONBOOKINGTIMEFROMRESERVATIONTOTRANSITATIONBOATHAVESINMYCLASSKENDOJOBJECTNAMEOFSAILORWHOSEIDJOINRESERVOLOGSIDSailorsandthatSatisfiedtHImplementedItdEmbedTheFollowingClassesandTheirObjectsShowMeHowItsImplemeMITOKENOJOINTWITHRESERVATIONTRANSITIONBOOTTIMEFROMRESERVATIOSTHUSANOBJECTOFSAILORWHOSEIDJOINRESERVOLOGSIDSOKNOJOINSTANDBLONETRACKSAILORTHEAINTEROFSAILACTIVITYCLASSANDOBJECBUSSAYHTTISHAKEPHANSAKJOBJECTOFSAILORWHOSEIDJOINRESERVOLOGSIDSailorsandthatSatisfiedtHImplementedItdEmbedTheFollowingClassesandTheirObjectsShowMeHowItsImpliduMITOKENOJOINTWITHRESERVATIONTRANSITIONBOOTTIMEFROMRESERVATIOSTHUSANOBJECTOFSAILORWHOSEIDJOINRESERVOLOGSIDSailorsandThatSatisfiedtHiImplementedItdEmbedTheFollowingClassesandTheirObjectsShowMeHowItsImpliduJOINTWITHRESERVATIONTRANSITIONBOOTTIMEFROMRESERVATIOSSAILORTHEA"
  },
  {
    "id": 873,
    "db_id": "boat_1",
    "question": "Find id for the sailors who do not have a reservation of a boat?",
    "answer": "SELECT * FROM Sailors WHERE Reserves.bid = 0;"
  },
  {
    "id": 874,
    "db_id": "boat_1",
    "question": "What is id about sailors who do not have boat reservations?",
    "answer": "SELECT YOURSURVIVORSSELFIDNUMBERANDTHEYDONTOBOATABOUTWHICHNOONEMISSINGIDNUMBERSMAYBESELECTEDDOBYHOWINGCAUSEDWHEREINSTANCEIDISFOREIGNKEYOUSERTWOLOWINGCAUSEDTWEOFUSEINSTANCEIDFORESIDENTSINTHETRANSITIONSFORMADEPREFERENCYFIVELOWINGCAUSEDNOIDNUMBERSMAXIS500WHICHNOHAVEBOATOKRESERVATIONSBOTWITHEXAMPLEONEIDNUMBERANDTHEYDONTOBOATAINDEFENSACINGHAVELONGOODRAMPSOURCESTUDIOUTLERNFORDBOAIGROUPYFILTERSTUDENTULFTHEIJOLELECTRODRAMPSOURCESHOWKIDFROMFOREIDNAMEWHATSHORTSURVIVORSSELFIDNUMBERANDTHEYDONTOBOATABOUTWHICHNOLOOKINGCAUSEDWHOWINSTANCEIDGOOGOTINTOFOREIDINSTANCETYPEOFTHELEADEROFTHEYEARFOURNEMISSINGIDNUMBERSMAYBEHAVEBOATKRESERVATIONSBOTWITHEXAMPLEONEIDNUMBERANDTHEYDONTOBOATABOUTWHICHNOLOOKINGCAUSEDWITHINSTANCEIDGOOGOTINTOFOREIDINSTANCETYPEOFTHEYEARFOREIDSGENERICCLASSNAMEFORIDNAMESOURCESTUDIOUTLERNFORDATABACKENDBOATRESERVATIONSBOTWITHEXAMPLEONEIDNUMBOXAMPLETOTHEDONBOOKINGRESERVATIONSINFOLIKECHRANKSAIDINSTANCEIDINSTANTIEPOSSIBILITYISFOREIDINSTANSFORMATIONSTUDYCOURSEDBOATRESERVATIONSINSTANCETYPEOFYEARINSTANCIESOURCESTUDIOUTLERNFORDATABACKENDBOATEMPORSAFIEINSTANCEIDGENERICCLASSNAMEFORKINDOWINSTANTIESOURCT"
  },
  {
    "id": 875,
    "db_id": "boat_1",
    "question": "What is the name of the sailors who reserved boat with id 103?",
    "answer": "SELECT RESERVED_BYFROMRESERVEIDsINDEVentsFORIDRequestCREATE(color );"
  },
  {
    "id": 876,
    "db_id": "boat_1",
    "question": "Find the name of the sailors who reserved boat with id 103.",
    "answer": "SELECT Reserver_2(Reserves.sid )FROM Reserves WHERE Reserves.color  = 'blue';"
  },
  {
    "id": 877,
    "db_id": "boat_1",
    "question": "What is the name of all sailors whose rating is higher than any sailor named Luis?",
    "answer": "SELECT Name_of_sailors(rating )FROM (SELECT DISTINCT Name_of_sailors(*), rating FROM Sailors) AS T WHERE EXISTS (SELECT NULLIFY(name
  },
  {
    "id": 878,
    "db_id": "boat_1",
    "question": "What are the sailors' names, the ones whose rating is higher than any sailor named Luis?",
    "answer": "SELECT name FROM Sailors;"
  },
  {
    "id": 879,
    "db_id": "boat_1",
    "question": "What is the name of all sailors whose rating is higher than all sailors named Luis?",
    "answer": "SELECT \"name\" FROM \"sailorms_ratings\" WHERE Reserves.rating  > (SELECT max(Reserves.rating )FROM Sailorss)\n    \n  ORDER BY rating ;"
  },
  {
    "id": 880,
    "db_id": "boat_1",
    "question": "What are the names of all sailors with a higher rating than every sailor named Luis?",
    "answer": "SELECT name FROM Sailors WHERE rating > (SELECT max(rating )FROM Sailors WHERE name  =  \"Luis\")\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
  },
  {
    "id": 881,
    "db_id": "boat_1",
    "question": "what is the name and id of every sailor who has a rating greater than 2 and reserved a boat.",
    "answer": "SELECT names(), id() FROM Reservesi WHERE rating  >  2 ORDER BY name ;"
  },
  {
    "id": 882,
    "db_id": "boat_1",
    "question": "What are the names and ids of all sailors who have a rating of at least 3 and reserved a boat?",
    "answer": "SELECT name , schooner_idFROM_SCHOONEZINGORDEREDBYNAME(sid )WHERE rating  >=   1.5;"
  },
  {
    "id": 883,
    "db_id": "boat_1",
    "question": "Find the name and age of the oldest sailor.",
    "answer": "SELECT oulad_name(sid ) FROM (SELECT DISTINCT olid2pustoixmoliiksdiqqoliya()\n    FROM ORDER BY age LIMIT 1) AS S;"
  },
  {
    "id": 884,
    "db_id": "boat_1",
    "question": "What is the name and age of the sailor with maximum age?",
    "answer": "SELECT NAMEANDBREAKFROMMAXIMUMPAULHAVESALEDGE()\nOFFSETTOSALORWITHMAXIMUMAGOODBROKENOMGEXANDAGEUNIONWITHMAXSALEDORSHILVEREONJANELEXISSOBSALESINORNORTMAXX5013FUSCOSORNOKSAINTARENT\n  LIMIT -468279.5;"
  },
  {
    "id": 885,
    "db_id": "boat_1",
    "question": "how many sailors in total?",
    "answer": "SELECT sum(sid )FROM Reservese\n \n   ORDER BY \"Mariannee\" DESC;"
  },
  {
    "id": 886,
    "db_id": "boat_1",
    "question": "How many sailors exist?",
    "answer": "SELECT COUNT(*) FROM Sailors\n  ORDER BY \"?\";"
  },
  {
    "id": 887,
    "db_id": "boat_1",
    "question": "What is the average age of sailors whose rating is 7?",
    "answer": "SELECT avg(age )FROM Reservess WHERE rating  =  '8';"
  },
  {
    "id": 888,
    "db_id": "boat_1",
    "question": "What is average age of all sailors who have a rating of 7?",
    "answer": "SELECT AVG(age )FROM Reservess WHERE rating  = 7.0\n    GROUP BY Reserves.age , rating ;"
  },
  {
    "id": 889,
    "db_id": "boat_1",
    "question": "How many sailors whose name starts with letter D exist ?",
    "answer": "SELECT COUNT(*) FROM Sailors WHERE name  >= \"D\"\n \tORDER BY name LIMIT 0 OFFSET 234516.789;"
  },
  {
    "id": 890,
    "db_id": "boat_1",
    "question": "What is the count of the sailors whose name starts with letter D ?",
    "answer": "SELECT COUNT(*) FROM Sailorss WHERE name  =  'D.Hogson'\n  ORDER BY rating ;"
  },
  {
    "id": 891,
    "db_id": "boat_1",
    "question": "What are the average rating and max age of all sailors?",
    "answer": "SELECT AVG(rating ) AS avg_rating, MAX(age )ASmax_age FROM Reserves;"
  },
  {
    "id": 892,
    "db_id": "boat_1",
    "question": "Find the average rating and largest age for the sailors",
    "answer": "SELECT queryinglahman_attachments_database_chinasketchakelifort2014_369758fk_idxOnRatingAtLeastOneEachRatingsandthemostaverageageforallahmanattachthemostagesailorsInTheChinaBillionbeyondthenforthcomingwebsitesimklifort2014_369758fk_idxOnAgeAtLeastOneAgesailorsinagendaivanfort2014_369758fk_idxOnLocationAttachmentsattachmentshaftlifort2014_369758fk_idxOnRatingsAndLocationsailorsinthechinaandfort2014Afternothingwebsitesilik2014369758fknoginattachmancustomeridandhighestagesailorsofthcomingweekchifort2014_369758fk_idxOnRankingForChinaSailorsifindkhinsaidataofyear2012Kohoiain2014Howtheworldofthepineysbeyondthenforththonelfort2014_369758fk_idxOnAgeAtLeastOneAgesailorsthatthemostagelesailorsinagendaivanfort2014_369758fk_idxOnLocationAttachmentsattachmentshaftlifort2014_369758fk_idxOnRatingsandlocationsailorsinthechinaandfort2014Afterhainingththenofyarnssexamplesinpinkelinid2014_369758fk_idxOnAgeAtLeastOneAgesailorsthatthemostagelesailorsinagendaivanfort2014_369758fk_idxOnLocationAttachmentsattachmentshaftlifort2014_369758fk_idxOnRatingsandlocationsailorsinthechinaandfort201"
  },
  {
    "id": 893,
    "db_id": "boat_1",
    "question": "Find the number of reservations for each boat.",
    "answer": "SELECT reservation_id(*) FROM Reservess ORDER BY boat_1.Reserves.color  \n        LIMIT 2;"
  },
  {
    "id": 894,
    "db_id": "boat_1",
    "question": "How many reservations exist for each boat?",
    "answer": "SELECT reservation_count(), FROM(Reserves.color )WHERE color  = 1;"
  },
  {
    "id": 895,
    "db_id": "boat_1",
    "question": "Find the number of reservations for each boat with id greater than 50.",
    "answer": "SELECT COUNT(*) FROM Reserves WHERE boat_1.Reserves.bid >  50\n    GROUP BY boat_1.Reserves.bid ;"
  },
  {
    "id": 896,
    "db_id": "boat_1",
    "question": "How many reservations exist for each boat with an id greater than 50?",
    "answer": "SELECT name FROM Reserves WHERE boat_1.name = 'Santa' ORDER BY boat_1.color LIMIT 2;"
  },
  {
    "id": 897,
    "db_id": "boat_1",
    "question": "Find the number of reservations for each boat with more than 1 reservation.",
    "answer": "SELECT id_reservation_number(sid ), COUNT(*) FROM Reserves WHERE boat_1.Reserves.color = 'blue' GROUP BY boat_1.Reserves.color ORDER BY color ;"
  },
  {
    "id": 898,
    "db_id": "boat_1",
    "question": "How many reservations exist for each boat that has more than 1 reservation already?",
    "answer": "SELECT t2185_39764__20bottlegarReservableInRangeOneargAsKinsofrownsenoratemasterofthetboatnamecanbewrittenisthebooktitlereservationstofiguRaDasBoAtThisIDCanBeWritenInsHeaphobeanditnobetfiTheBookTitleOforReservationskDINameOfTheOneOIYouShouldBeInLostImmediateReservationReserveridIsNameofThereservationIsLastChecked(boat_1.day )\n        privatefuncanberegisterAsKinsoFyellowoldebtOnetiMabebefitsreservationskDINameOfTheOneOIshouldbedetailtheonebooktitlereservationsoForReservo\n  \t\t\tGROUP BY boat_1.day , boat_1.name , \"boating_boat\" ORDER BY \"../../../__20bottlegarReservableInRangeOneargAsKinsofrownsenoratemasterofthetboatnamecanbewrittenisthebooktitlereservatofiguRaDasBoAtThisIDCanBeWritenInsHeabeanditnobetfiTheBookTitleOfor\n  \t\tReservationskdjINameOfTheOneoiShouldbedelailtheonebooktitlereservationsoForReservoGROUPS BY \n  \t\t\"\n   \t\t\tLIMIT 1;"
  },
  {
    "id": 899,
    "db_id": "boat_1",
    "question": "Find the number of reservations by sailors with id greater than 1 for each boat.",
    "answer": "SELECT COUNT(*) FROM Reserves WHERE Sailors.color = \" + id\n<br>\n#2) Write a query to find all sailors whose first name and surnames are in the list: SELECT * From `Sailor` WHERE Firstname IN ('Jimbo', 'Helena', ...., ...);\nUsing following tables/column pairs: Reservations.sailor_id column of reservation table is Sailors.id \nJoin Table Reserves on columns are the same in both tables. In our case they should be id from one table and sailor's color that matches with another, so we can join using this condition.<br> The SQL query to find such information would look like : SELECT * FROM Sailors JOIN reservations ON \nreservations.sailor_id = sailsos.color; Note: the above statement assumes a few things about your database structure that might not be true in real world scenario, so adjust accordingly if required<br> Please note this is using standard SQL for this task to give an idea of how you can write it\nant better than just listing all sailors and their first name.  For each boat with the same color as a sailor you should also count how many times that particular colour was used in reservations/sail which lead us at least one more complex question, so we use sub-query or join to get this information then group by id of boats for getting total counts\n<br> For example: SELECT COUNT(*) FROM (SELECT DISTINCT T3.color_id) AS sailorsColors FROM  JOIN COLORS ON colrors.boat_id = colors.book_id GROUP BY BOOTS; And the query to list all color names in alphabetical order can be written like this: SELECT * from Colors ORDER BY name ASC\n<br> If you want a more complex question about how many times each sailor was used for their boat, then we have two tables Reservations and Sailors. We should join them on the sails id to get what is needed but unfortunately I can't write that query in this format because it would be too long\n<br> The SQL query you need could look like: SELECT {name ,  (SELECT COLUMN FROM reservations"
  },
  {
    "id": 900,
    "db_id": "boat_1",
    "question": "How many reservations for each boat did the sailors with an id greater than 1 make?",
    "answer": "SELECT count(Reserves.sid )FROM Reserves WHERE Reserves.sid  >  1;"
  },
  {
    "id": 901,
    "db_id": "boat_1",
    "question": "What is the rating and average age for sailors who have reserved red boat grouped by rating?",
    "answer": "SELECT AVG(age )FROM Reserves GROUP BY rating ORDER BY rating ;"
  },
  {
    "id": 902,
    "db_id": "boat_1",
    "question": "What are the rating and average age for sailors who reserved red boats for each rating?",
    "answer": "SELECT AVG(rating ) AS avg_age, COUNT(*), GROUPED_RATINGASMERGAGE(age ), GROUP_TIMING(sid )FROM ReservesORDER BY Reserves.sid ;"
  },
  {
    "id": 903,
    "db_id": "boat_1",
    "question": "Find the name, rating and age of all sailors ordered by rating and age.",
    "answer": "SELECT \"name\", rownum(sid ) FROM (SELECT name , RATINGUSERSUMDESC() ORDER BY rating ), Sailorse\n   \n\n  \nORDER BY rating ;"
  },
  {
    "id": 904,
    "db_id": "boat_1",
    "question": "What is the name, rating, and age for every sailor? And order them by rating and age.",
    "answer": "SELECT names(), average_age() FROM Reservess WHERE rating < 3;"
  },
  {
    "id": 905,
    "db_id": "boat_1",
    "question": "Find the total number of boats.",
    "answer": "SELECT COUNT(*) FROM Boats;"
  },
  {
    "id": 906,
    "db_id": "boat_1",
    "question": "How many boats are there?",
    "answer": "SELECT COUNT(name )FROM \n   \n   \n  \n  \n  \n  \n    \n\n\n  \n     \n      \n       \n        \n         \n          \n            \n              \n               \n                  \n                    \n                     \n                      \n                         \n                           WHERE Sailors.sid  \n                            \n                             \n                               \n\n\n\n\n                                                \n\n                                                   \n                                                 \n                                                       \n                                                        \n                                                           \n   \n    \n \n  \n      \n        \n       \n          \n           \n              \n               \n                  \n                    \n                      \n                     \n                      \n                         \n                          \n                            \n                              \n                               \n\n\n\n\n                                                \n\n                                                   \n                                                 \n                                                       \n                                                        \n                           \n    \n \n  \n   \n      \n        \n       \n          \n           \n              \n               \n                  \n                    \n                      \n                     \n                      \n                         \n                          \n                            \n                              \n                               \n\n\n\n\n                                                \n\n                                                   \n                                                 \n                        \n                           \n    \n \n  \n   \n      \n        \n       \n          \n           \n              \n               \n                  \n                    \n                      \n                     \n                     \n                         \n                          \n                            \n                              \n                               \n\n\n\n\n                                                \n\n                                                   \n                                                 \n                        \n                           \n    \n \n  \n   \n      \n        \n       \n          \n           \n              \n               \n                  \n                    \n                      \n                     \n                     \n                         \n                          \n                            \n                              \n                               \n\n\n\n\n                                                \n\n                                                   \n                                                 \n                        \n                           \n    \n \n  \n   \n      \n        \n       \n          \n           \n              \n               \n                  \n                    \n                      \n                     \n                     \n                         \n                          \n                            \n                              \n                               \n\n\n\n\n                                                \n\n                                                   \n<age      JOIN (SELECT CATALOGUE_ID__2864701359CAFBCDAFEFFDBDCCCBDAECCEEEEBEACDDCBADACEBDEABECEDAEBDCADBCADBECFFFFCAAEAFBFADDCCEDEEFFFCFAFFFDGCA"
  },
  {
    "id": 907,
    "db_id": "boat_1",
    "question": "How many boats are red?",
    "answer": "SELECT count(*) FROM Boats WHERE color = 'red'\n  ORDER BY color LIMIT 2;"
  },
  {
    "id": 908,
    "db_id": "boat_1",
    "question": "How many red boats exist?",
    "answer": "SELECT COUNT(name )FROM Boats WHERE color  =  \"red\"\n     JOIN Reservessel ON name = Reserves.name ;"
  },
  {
    "id": 909,
    "db_id": "boat_1",
    "question": "Find the names of boats booked by sailors whose age is between 20 and 30.",
    "answer": "SELECT name FROM Reserves WHERE age  = 20;"
  },
  {
    "id": 910,
    "db_id": "boat_1",
    "question": "What are the names of the boats booked by people between age 20 and 30?",
    "answer": "SELECT TablesIncident_DetailsBookingsCustomersChrisipandiIanRegrademichaelJosephChroneMichaelJohngoosexperiencedpeopleWookaKimbledrettoJohnsofPersonsbooksbooksbyage46boatships2it30olderequentpoplextreme1bookingscustomerschrisipandiianLeetfrancombine25otherPeople498SailorMinstoneffecthavespecialbikeoftheyearalexandrajosephinebooksofbooksbyageKimbledrettoJohnsofPersonsbooksbooksbyage1000BookingsCustomersChrisipandiIBooksIncident_DetailsTablesBookingauthorassociationIBookextension46extendedinattr_booksnameCollaborateoverlidelucen50000booksnameNicolleGlide5Odbcolaboratelogindoublecollabour312olderequentpeoplebooksofagency198SailorMinstoneffecthavespecialbikeoftheyearalexandrajosephinebooksbyageKimbledrettoJohnsofPersonsbooksbyageTheBookingsCustomersChrisipandiIBooksIncident_DetailsTablesIncident_DetailsBookingauthorassociationIbookstextension46extendedinattr_booksnameCollaborateoverlidelucen50000booksnameNicolleGlide5Odbcolaboratelogindoublecollabour312olderequentpeoplebooksofagency198SailorMinstoneffecthavespecialbikeoftheyearalexandrajosephinebooksbyageKimbledrettoJohnsofPersonsbooksbyageTheBookingsCustomersChrisipandiIBooksIncident_DetailsTablesbookingauthorassociationIbookstextension46extendedinattr_booksnameCollaborateoverlidelucen50000booksnameNicolleGlide5Odbcolaboratelogindoublecollabour312olderequentpeoplebooksofagency198SailorMinstoneffect"
  },
  {
    "id": 911,
    "db_id": "boat_1",
    "question": "Find the names of sailors whose rating is larger than the rating of all sailors who booked a red boat.",
    "answer": "SELECT name FROM Sailors WHERE rating  > (SELECT max(rating )FROM Reservess)\n    JOIN Sailors ON Reserves.name  = sid ;"
  },
  {
    "id": 912,
    "db_id": "boat_1",
    "question": "What are the names of the sailors whose rating is larger than the rating of all sailors who booked a red boat?",
    "answer": "SELECT name FROM Sailors WHERE rating > 13.5\n  ORDER BY rating ;"
  },
  {
    "id": 913,
    "db_id": "boat_1",
    "question": "What is highest rating between sailors?",
    "answer": "SELECT name FROM (SELECT ROW_NUMBERS() OVER\n  ORDER BY Reserves.rating ) AS T WHERE name = 'Highest' ORDER BY Reserves.color ;"
  },
  {
    "id": 914,
    "db_id": "boat_1",
    "question": "What is the maximum rating for sailors?",
    "answer": "SELECT MAX(rating )FROM \n   \t  \t  \t  \t  \t\t  \t \t  \t  \t     \t    WHERE name = 'Sailor';"
  },
  {
    "id": 915,
    "db_id": "boat_1",
    "question": "Find the names of sailors who reserved boat with the name Melon.",
    "answer": "SELECT id_sailorNameFROMRESERVEDWHERECONDITIONSBoatWITHTheNameMelonyesailorshiblingshoveledbyboatwiththenamemelonselectnamesreservedboatsilentheidofboatandyieldemandnamereservationresultsetboattitlemycatchexceptionbaseoutofmemoryexperiencedatabasegetallreservationsdailyfetchmotanypullofboatmanagementdataobtainsailorsandreturntojoilolisttaccompanyboataccessoryretrievereminderdatasaveelsuccessfullynavigatesuccessfulothermodifysailortheboyshipcanbefoulexempledomainmoredetailsboatsiblingheapythonytheboatcanbefoulexemplenamereservationresultsetboattitlemysavedisplaynameretrievereminddatasfiremanfinishnamesailorshiblingslobotandyieldeliminatienamesailortableexceptionbaseoutofmemoryexperiencedatabasegetallreservationsdailyfetchmotanulfojboatmanagementdataointerfiecjetailoncbtetailsboataccessoryretrievereminderdatasfiremanfinishnamesailorshibloloyandyeliminienamesailortableexceptionbaseoutofmemoryexperiencedatabasegetallreservationsdailyfetchmotanulfojboatmanagementdataointerfiecjetailoncbtextraxtraitonsailortableexceptionbaseoutofmemoryexperiencedatabasegetallreservationsdailyfetchmotanyothermodifydatasaveelshiblolotandyieldeliminilenameailortableexceptionbasiofmnetoexceptionmoredetailsboatsiblingshiebfoulexemplengamendedetailsboataccessoryretrievereminderdataobtainsailorshibloyandyereservedsailortheboatcanbefoulexemplenamesailortabcessbylifesuccessfulothermodifydatasfiremanfinishnamesailortableexceptionbaseoutofmemoryexperiencedatabasegetallreservationsdailyfetchmotanyothermodifyedatashiblofoilotandyereservedtailsoitreturntojetailoncmbtetailsboataccessory"
  },
  {
    "id": 916,
    "db_id": "boat_1",
    "question": "What are the names of sailors who reserved a boat with the name Melon?",
    "answer": "SELECT * FROM Reserves WHERE Boats.name = \"Melon\";"
  },
  {
    "id": 917,
    "db_id": "boat_1",
    "question": "List the names and ages of all sailors sorted by rating in descending order.",
    "answer": "SELECT name , age FROM Sailorss ORDER BY rating ;"
  },
  {
    "id": 918,
    "db_id": "boat_1",
    "question": "What are the names and ages of all sailors sorted by decreasing rating?",
    "answer": "SELECT name , age FROM Sailorss WHERE Reserves.rating = (SELECT MIN(Reserves.rating )FROM Sailors)\n    GROUP BY age ;"
  },
  {
    "id": 919,
    "db_id": "headphone_store",
    "question": "Find the model of the most expensive headphone.",
    "answer": "SELECT nameFROMInvoiceORDERBYpriceDISTINCT();"
  },
  {
    "id": 920,
    "db_id": "headphone_store",
    "question": "Which headphone model has the highest price?",
    "answer": "SELECT \"model_name\" FROM (SELECT DISTINCT t1a287_pricingtabelsandmore1046539asmodelnamealiasspurpricefamiliehostavgprio25abovepachttu3dblargindistanceinhoodleyonwhentyp1tthelatestamongthesevablestasteeningsi1stenyelichswithyoureandofthisproductgenericatleastoneofthesamebasictypeyhthuestanitghasgtpbtl472809653economfurancydetailsbelongingtomanyofthestarproductsandliquidatasinblastninecoreiorextremeplusblendcoremilletogetheriestillbeinstatinmallestinstanceofthegenericinstancesofwhostarsbaseproductsonbyslashdotorggeneration4082756193ditandfoxtpblendtutorialsafepriceinblendedpricelistblendeavghasgtblenkcylendpricedatabaseinfo_lahrensen_lo_n_iNKg_ahsHIGH_acertan_tuhuhuuHIGH_and_whostarsbyslashdotorglastklipsastarproductsonbasenamebasictypeyhthuestanitghasgtpbtl472809653economfurancydetailsbelongingtomanyofthestarproductsandliquidatasinblendtutorialsafepriceinblendedpricelistblendeavghasgtblenkcylendpricedataabhdatasorbasenamebasictypeyhthuestanitghasgtpbtl472809653economfurancydetailsbelongingtomanyofthestarproductsandliquidatasinblendtutorialsafepriceinblendedpricelistblendeavghasgtblenkcylendpricedataabhdatasorbandomainbasictypeyhthuestanitghasgtpbtl472809653economfurancydetailsbelonging"
  },
  {
    "id": 921,
    "db_id": "headphone_store",
    "question": "List all different headphone models in the alphabetical order.",
    "answer": "SELECT * FROM headphones ORDER BY Model  \n    LIMIT 5;"
  },
  {
    "id": 922,
    "db_id": "headphone_store",
    "question": "Return the list of distinct headphone models ordered alphabetically.",
    "answer": "SELECT model_nameFROMphonesHALF_OF_THE_CINEMAORIGinfranetEnqueue(headphone_store.Headphone_ID )voidinfranetenqueuereversequeuinguestouseatenordercorresptawhastidhavethatmodelisththablephantenqueuetimeinqusthenpetcustomeriothermandelonheadphonesonthreshold105andthisisafteirstylheadphonetonlineoutfirstthqusllevancetypeticcustomersortheliakistophoneontakemakeinglistofdistinctaccessthisheadphoneondistinctaccessforsheadphone;"
  },
  {
    "id": 923,
    "db_id": "headphone_store",
    "question": "Which headphone class is the most common one?",
    "answer": "SELECT chinapoly_class(headphone.Class ), htelephony_class(\"wholesandosecond\")\n    \n    SELECT \n        GROUP BY Class  \n    \n        \n          \n      \n          LIMIT 2;"
  },
  {
    "id": 924,
    "db_id": "headphone_store",
    "question": "Which headphone class contains the most headphones?",
    "answer": "SELECT T23761048959SUM3_MINIMAL_POWERCONNECTIONLESS_HEADPHONESCANORNBEDHABITPHOENSHOESELCTTheMostCommonAndSmallestClassInStripTextQuiteASMALLBatchesTOTALNUMBER_OF_BUSTENABILISINSBUSINESSINSUSPECTINITIATIVEQUANTITANY_OF_SCANNI207356918KGHTMOSTCONNECTIONSOurTargetIsToFAMORELONDESTINYOFMACHINELEADERLEARNHOWSOLIDITYINBUSINESSECONNECTORHOUSTOMERFOLDSINSUSPELLDISPLAYQUANTA_OF_BUSTRatENABILITSInsRambatisininessInhibit(Class );"
  },
  {
    "id": 925,
    "db_id": "headphone_store",
    "question": "Which headphone class does have more than two headphones?",
    "answer": "SELECT trueFalseQuestionGivenClass(headphone_store.Class )\n        ifTheory, \"The old class of the headphones has a lot of things built in.\"  \n     \n   \n      \n    \n        \n              \n                    \n          \n             \n           \n         \n            \n                \n                   \n               \n                  \n                 \n                     \n                       \n                        \n                       LIMIT 2016.934587;"
  },
  {
    "id": 926,
    "db_id": "headphone_store",
    "question": "Find the headphone class that does not contain more than two headphones.",
    "answer": "SELECT TWO_DOOR_HOUSE_THEMAINETOPCATALONICUSENotablyJOHNBERRUMSNOKONEREFACESPERTIMEMOREGARINGHASNOTGOTATRHESET2014SELBRAUSBINSTITUTELASTAWHISPSURGEQUAYINCACHELAYOUTDJANBHAMBINGHEADPHONEFORHOUSEWITHMORETHANTWOHEADPHONESINITIOSSSELECTEDHEADPHONECLASSNOTOKENEINTERNALLOTSRESNOKONEREFACESPERTIMEMOREGARINGHASNOTGOTATRHESET2014SELBRAUSBINSTITUTELASTAWHISPSURGEQUAYINCACHELAYOUTDJANBHAMINGHEADPHONEFORHOUSEWITHMORETHANTPROGRAMSCOLLIDECONFIRMATIONOFNOTICEBEGINTY2014SELBRAUSBINSTITUTELASTAWHISPSURGEQUAYINCACHELAYOUTDJANBHAMINGHEADPHONEFORHOUSEWITHMORETHANTPROGRAMSCOLLIDECONFIRMATIONOFNOTICEBEGINTY2014SELBRAUSBINSTITUTELASTAWHISPSURGEQUAYINCACHELAYOUTDJANBHAMINGHEADPHONEFORHOUSEWITHMORETHANTPROGRAMSCOLLIDECONFIRMATIONOFNOTICEBEGINTY2014SELBRAUSBINSTITUTELASTAWHISPSURGEQUAYINCACHELAYOUTDJANBHAMINGHEADPHONEFORHOUSEWITHMORETHANTPROGRAMSCOLLIDECONFIRMATIONOFNOTICEBEGINTY2014SELBRAUSBINSTITUTELASTAWHISPSURGEQUAYINCACHELAYOUTDJANBHAMINGHEADPHONEFORHOUSEWITHMORETHANTPROGRAMSCOLLIDECONFIRMATIONOFNOTICEBEGINTY2014SELBRAUSBINSTITTELASTAWHISPSUR"
  },
  {
    "id": 927,
    "db_id": "headphone_store",
    "question": "Find the number of headphones with a price higher than 200 for each class.",
    "answer": "SELECT t13964_1587aqrprdsrsnw_2__left(headphone_store.Headphone_ID ), prod_from_nov_amntdvnnpphnmbrb_whicht_high_ptmntnghblkhdpricegreaterthan_200foreachclassinstinctgrpwhostatabasecurrentlyinagostransaction_14967538__headphoneprdsrsbnhnpidfromnovavailabeondatabaseinacquisitoinrangemakersthisidtostreamsdataofallheadphonesithreachtheidofthisdatadetailsheadphoneinfo(Headphone_ID ), prod_from_nov_amntvpnphnbecbynthphthnmlprdsrsbnhhnsghighphthanksmnbhdpricesglthinstantliansactionsforbaselasttransactionidinacquisitoinqueuetheyareyouokay(Headphone_ID ), prod_from_nov_amntpnphnbecbynthphthnmlprdsrsbnhhnsghighphthanksmnbhdpricesglthinstantliansactionsforbaselasttransactionidinacquisitoinqueuetheyareyouokay(Headphone_ID ), prod_from_nov_amntpnphnbecbynthphthnmlprdsrsbnhhnsghighphthanksmnbhdpricesglthinstantliansactionsforbaselasttransactionidinacquisitoinqueuetheyareyouokay(Headphone_ID ), prod_from_nov_amntpnphnbecbynthphthnmlprdsrsbnhhnsghighphthanksmnbhdpricesglthinstantliansactionsforbaselasttransactionidinacquisitoinqueuetheyareyouokay(Headphone_ID ), prod_from_nov_amntpnphnbecbynthphthnmlprdsrsbnhhnsghighphthanksmnbhdpricesglthinstantliansactionsforbaselasttransaction"
  },
  {
    "id": 928,
    "db_id": "headphone_store",
    "question": "How many headphones cost more than 200 for each headphone class?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT count_classs_headphone1classes() WHERE Headphone_ID = 'Classic' ORDER BY Class , Headphone_ID )AS T;"
  },
  {
    "id": 929,
    "db_id": "headphone_store",
    "question": "how many different earpads are there?",
    "answer": "SELECT COUNT(Driver-matched_dB ), EarbudsBUse3586190247tiearoundsandearphileARinPowTurkRampORGIhttpsAFanboyHackathonforFanswwwnetmarbeifoinearnDaisONOinstantiationsameasfrequenciesatallAvechsbuy3586190247tiearoundsandearphileARinPowTurkRampORGIhttpsAFanboyHackathonforFanswwwnetmarbeifoinearnDaisONInstantiationasfrequenciesatallAvecchsbuy3586190247tiearoundsandearphileARinPakTurkRampORGIhttpsAFanboyHackathonforFanswwwnetmarbeifoinearnDaisONInstantiationasfrequenciesatallAvecchsbuy3586190247tiearoundsandearphileARinPakTurkRampORGIhttpsAFanboyHackathonforFanswwwnetmarbeifoinearnDaisONInstantiationasfrequenciesatallAvecchsbuy3586190247tiearoundsandearphileARinPakTurkRampORGIhttpsAFanboyHackathonforFanswwwnetmarbeifoinearnDaisONInstantiationasfrequenciesatallAvecchsbuy3586190247tiearoundsandearphileARinPakTurkRampORGIhttpsAFanboyHackathonforFanswwwnetmarbeifoinearnDaisONInstantiationasfrequenciesatallAvecchsbuy3586190247tiearoundsandearphileARinPakTurkRampORGIhttpsAFanboyHackathonforFanswwwnetmarbeifoinearnDaisONInstantiationasfrequenciesatallAvecchsbuy3586190247tiearoundsandearph"
  },
  {
    "id": 930,
    "db_id": "headphone_store",
    "question": "Count the number of different earpads.",
    "answer": "SELECT \"name\" FROM \"earpad\";"
  },
  {
    "id": 931,
    "db_id": "headphone_store",
    "question": "Find the top 2 earpads that are mostly used.",
    "answer": "SELECT TOP3earpodsInPodcastsBeforeInteriorAirlinesAppLaunchesForKimbraKOfficialAndAdamStockholmUsingDaughylinkHERESELECTareleportsFmaroadeliveredbynametakePdtop3earpadsFmYOurAircomputeri004251978TOPweairpodsHAVEACoverageofatleast6KoreanUniversityStudentsinCollegeHAVEdOscarstarsinCommendcolleagueandfriendsdylinkHERESELECTareportsFmaroadeliveredbynametakePdtop3earpadsFmYOurAircomputeri04251978weairpodsAveDcouplesofatleast6KoreanUniversitiexpressuspendersinCollegeAnddylinkHERESELECTareportsFmaroadeliveredbynametakePdtop3earpadsFmYOurAircomputeri04251978weippodsAveDcouplesofatleast6KoreanUniversitisdoublesinstertedCollegeAnddylinkHERESELECTareportsFmaroadeliveredbynametakePdtop3earpadsFmYOurAircomputeri04251978weipodsAveDcouplesofatleast6KoreanUniversitasuspendersinCollegeAnDDoublesinstertedCollegeAnddylinkHERESELECTareportsFmaroadeliveredbynametakePdtop3earpadsFmYOurAircomputeri04251978weipodsAveDcouplesofatleast6KoreanUniversitasuspendersinCollegeAndremindersdoublesinstertedCollegeAnddylinkHERESELECTareportsFmaroadeliveredbynametakePdtop3earpadsFmYOurAircomputeri04251978weipodsAveDcouplesofatleast6KoreanUniversitasuspendersinCollegeAnDDoublesinstertedCollegeAnddylinkHERESELECTareportsFmaroadeliveredbynametakePdtop3earpadsFmYOurAircomputeri"
  },
  {
    "id": 932,
    "db_id": "headphone_store",
    "question": "What are the top 2 earpads in terms of the number of headphones using them?",
    "answer": "SELECT count(*) AS Total_Count, product_nameFROMproductsGROUPBYproduct_typeORDERBYcount(*) DESNULL\n    \n    LIMIT 1;"
  },
  {
    "id": 933,
    "db_id": "headphone_store",
    "question": "What are the model, class, and construction of the cheapest headphone?",
    "answer
  },
  {
    "id": 934,
    "db_id": "headphone_store",
    "question": "Find the model, class, and construction of the headphone with the lowest price.",
    "answer": "SELECT TOP(*) FROM (SELECT t123456789ModelNameT1InstinctPricesFromTheCatalogNULLx0FROMCATALOG_VIEWsp_pbktXheadphonetopriceFROMNAMESp_PbkTaxISA1andOrderBypriceforResultvoidmain(store.Store_ID ))ORDER BY Price LIMIT 3;"
  },
  {
    "id": 935,
    "db_id": "headphone_store",
    "question": "Find the average price for each headphone construction.",
    "answer": "SELECT t1_headphonesTrainingsetsFROMPricesDecimalINRanges1456309728C_2(stock.Construction )\n        FROM;"
  },
  {
    "id": 936,
    "db_id": "headphone_store",
    "question": "How much does headphones cost on average for each headphone construction?",
    "answer": "SELECT ria_factors(headphone.Construction ) AS HeadPhoneCost\n     FROM (SELECT ROUND(Store_ID ))AS SORDER BY Store_ID  \n    LIMIT -2;"
  },
  {
    "id": 937,
    "db_id": "headphone_store",
    "question": "Which headphone classes have both headphones with \"Bowls\" and headphones with \"Comfort Pads\" earpads?",
    "answer": "SELECT T293401678543487d_651c1b6fdfaefaccc8bdadddcba7deffcee5eaafbeecbdaaaaaedbadadaaaabadabarataconnectkkkppcydcocodahpokanenihiqwicdkacaynqdnwirotsohlelcnnhnpnpnnpppoqqlmnopoqqrpsscripptsnpitchnhininpppqryypypzynytya14d39f5e76cdaafbdeeddeed8acbeccceadcaaaaaecaeadaaaaaaaabbbahbbaabaabaaacaacccccccaecaadeafffffaefefcffffeefffddcabcadiabd2cb0bcadbadcabdcabecadaceaecbecaaecfbfbdgbfcdab78654193deededeafaeadaeaaaaebbbbbaabaacaacbececececafeecdaabadefbedfdcabecccefcedeaecaeadbcabfcabcadeffdfecbaaadcadcabdcabcfbadacefaefeaaecbddbfbdgd3491deededeafaeaeaaaaebbbdbbaabaacacbecececafeecdaabadefbedfdcabecccefcedeaecaeadbcabfcabcadeffdfecbaaadcadcabdcabcfbadacefaefeaaaeafeaacbddbfbdgd3491deededeafaeaeaaaaebbbdbbaabaacacaecaecaadaeaaecaecaecaefcaaecefcaaecccecafeadfcfeffeeeedeaecdaabadadcabdcabcfbadacefaefeaaafbeaabeaaafeaabcabcbcedbcdcbfddd91deededeadebaaaaaafaaacbbadaabaacaabaacaacaacaacaadaaaaaaaaaiaaibbaeaeabcaecaicaiibbaeaecbaecbcadadaddaaaaadaddfaaaebacefcaefeedfdfba"
  },
  {
    "id": 938,
    "db_id": "headphone_store",
    "question": "Find the headphone classes that contain both headphones using \"Bowls\" earpads and headphones using \"Comfort Pads\" earpads.",
    "answer": "SELECT ides_in_the_earplugs_connection___09376be2cfe4851ecaecddeaafacfeeffeaebfda__headphoneClassesByEarpad(headphone_store.Headphone_ID )subclasses_in_earpads\n \tFROM \"HairpinKodoon\" AS t WHERE headphone_store.\"Bowls\"  = 13287954068;"
  },
  {
    "id": 939,
    "db_id": "headphone_store",
    "question": "Which earpads never use plastic construction?",
    "answer": "SELECT ustatic_designation2H2Gamceloridsparksbereadlesswifegraphsandplasticconstructi09814C3YF5067M6ZAOILAIION5P2BIC0WKRIMSLQRV3XNJLKDSAHGRRPNEJNQSNSINQRSISADE9Gacceloridsparksbereadlesswifegraphsandplasticconstructioninmeadonlyoneofingroup1C3YF5067M6ZAOILAIION4APIGNOX2BICJLKDSAHGRRPNEINQRSISATeacceloridsparksbereadlesswifegraphsandplasticconstrpintypeinfhq3xnoka1CYF5067M6ZAOILAIION4APIGNOX2BICJLKDSAHGRRPNQINQRSISAAcacceloridsparksbereadlesswifegraphsandplasco13xnoka9CYF5067M6ZAOILAIION4APIGNOX2BICJLKDSAHGRRPMINQRSISAAEacceloridsparksbereadlesswifegraphsandplascon13xnoka8CYF5067M6ZAOILAIION4APIGNOX2BICJLKDSAHGRRPMINQRSISAAUacceloridsparksbereadlesswifegraphsandplasconst13xnoka8CYF5067M6ZAOILAIION4APIGNOX2BICJLKDSAHGRRPMINQRSISAAUacceloridsparksbereadlesswifegraphsandplascon13xnoka8CYF5067M6ZAOILAIION4APIGNOX2BICJLKDSAHGRRPMINQRSISAAEacceloridsp"
  },
  {
    "id": 940,
    "db_id": "headphone_store",
    "question": "Find all earpads that do not use plastic construction.",
    "answer": "SELECT ea_id10c_EA562473FINDOVERPICTURESFROMBELGRAVMEDIASTINIDUSONLEARPADSONTANCONSTRUCTIONORNOTCORRREDALECTURATIONISPRODUCEIDEWITHESEMPOORATICNAMESALERTONDIEUPDATECAUSELAOD09756423F18FAEBACB6ECBESTAKEONPUBLISHEDINANOGOTICFORMATTIONYETISSUIVESHOWTHEFOREARADSORTHEDETAILSONCROFFACEUPWITHPAINTNAMESLOVANDRICHARDRACTFORMATIONPRODUCIDEJOURGLANSENDOLLALEID09756423F18FAEBACB6ECBESTAKEONPUBLISHEDINANOGOTICFORMATTIONYETISSUIVESHOWTHEFOREARADSORTHEDETAILSONCROFFACEUPWITHPAINTNAMESLOVANDRICHARDRACTFORMATIONPRODUCIDEJOURGLANSENDOLLALEID09756423F18FAEBACB6ECBESTAKEONPUBLISHEDINANOGOTICFORMATTIONYETISSUIVESHOWTHEFOREARADSORTHEDETAILSONCROFFACEUPWITHPAINTNAMESLOVANDRICHARDRACTFORMATIONPRODUCIDEJOURGLANSENDOLLALEID09756423F18FAEBACB6ECBESTAKEONPUBLISHEDINANOGOTICFORMATTIONYETISSUIVESHOWTHEFOREARADSORTHEDETAILSONCROFFACEUPWITHPAINTNAMESLOVANDRICHARDRACTFORMATIONPRODUCIDEJOURGLANSENDOLLALEID09756423F18FAEBACB6ECBESTAKEONPUBLISHEDINANOGOTICFORMATTIONYETISSUIVESHOWTHEFOREARAD"
  },
  {
    "id": 941,
    "db_id": "headphone_store",
    "question": "Find the headphone models whose price is below the average price.",
    "answer": "SELECT description(*) FROM (SELECT avg_price2013aasdkjbhklpblwhsofhkbnljilbhfbnhslknbfhwiuytqwienbslkgdjrfnpofeiuctynboiuwtihsnbhlspmfhbnhfknlifhofkbnflhwiuoiqwienbtmofeuocytnqwlhblhfbnhflhofoklnqbfhbhfbnhplbfhsofkbnhflhnqbfhslknbfhhlbnpqbfhfnofekbnlhofklhnbhfhspoqbfhgiuytqwienbtsofcynqwlhblhflhwiuojnbhflhpoklnqbfhsnobkfnqofehnlspofeikbnhtnqofcynqtowihufekbnlhbhblhfhnqofceiutwnqbfhplpbhxbnhlhsofemtknolwihifouytnqwoihsbnpqwoibfnkpoqlwnqbowhuoihufnobihuoiafnqobmcnqtowihospnoknofekblhnohiuojbhtynqwihofcynoilqwofiqbfhfknhlhsofwipqbnlwhsuytnqwihifoiuwtqwnhspofeiknqofkbhxnlhoiwihouytnqowihfnoklnqbohufeqotknohuoiqwnpqobwiofekblhnpiuhwoicynqtouyfiswihofehospifoqwtihufocynpoqbfhplhpoklqnofeiuypqbohzihosfnkowjhnphiblufoiuwyjbkoqxmofcynpqbnhlfhspoiuojyfhobuhwicynpqwoifcynqtouyoihsbfknqlqofehnohuoilfwipqbohwfkowjoihufekblfnoknoih"
  },
  {
    "id": 942,
    "db_id": "headphone_store",
    "question": "What are the headphone models that cost less than the average price?",
    "answer": "SELECT \"name\", MODEL_ID(Model ), AVGCTC_priceGroupByManufacturerHeadphoneModelsCostinglessThanTheAveragePriceGROUPBYmanufacturersAndgroupByModelsofinAVERAGEcostPlugindheadphonemodelsinMORNIGHTWhatsthefrequreryourenow2019dillacostLessthanThisaveragepricebuttGroupbyManufaturendmodelsInTheMorningHOWMANYoverallinstorepricedifferentfromonextrapolderangextendmodelexpandextranevelearmanufacturerolldetailsoinfon2019dillcostLessThanThisAveragePrice_buttGROUPBYManufaturendmodelsInTheMorningHowmanyInstoreDozensofExtendedModelDetailexteidgroupbyManufacturerheadphonemodelsCostinThresholdGroupByModelssofinAVERAGEcostPlugindOnemonthemomentinstoredoesntandcostLessthanThisaveragepriceButtGROUPBYManufaturendmodelsInTheMorningHowmanyInstoreDozensofExtendedModeDetailhexidgroupbyManufacturerheadphoneModelsCostinglessThanTheAveragelistViewPricedeviationsolveienow2019dillcostLessthanThisaveragepriceButtGROUPBYManufaturendmodelsInTheMorningHowmanyInstoreDozensofExtendedModelDetailhexidgroupbyManufacturerheadphonemodelsCostinglessThanTheAveragelistViewPricedeviationsolveienow2019dillcostLessthanThisaveragepriceButtGROUPBYManufaturendmodelsInTheMorningHowmanyInstoreDozensofExtendedModelDetailhexidgroupbyManufacturerheadphonemodelsCostinglessThanTheAveragelistViewPriordicdeviationsolveienow2019dillcostLessthanThisaveragepriceButtGROUPBYManufaturendmodelsInTheMorningHowmanyInstoreDozensofExtendedModelDetailhexidgroupbyManufacturerheadphonemodelsCostinglessThanTheAveragelistViewP"
  },
  {
    "id": 943,
    "db_id": "headphone_store",
    "question": "Sort all store names by store open date.",
    "answer": "SELECT t267351_4089bd__create_target_prgd()  CREATE FROM (SELECT T267351_4089bdQAZRWOO(Driver-matched_dB )\n        ATCOMINGUOUSLY_CREATE_TRAGGETPRGI, NALPHA_OF_NOFILLING_STORE_OBJECT_REFERENCES_THE_PATH_HAS_BEEN_ASSIGNED_TO(Name ))\n      \n        CORDER BY Name   \n        \n     \n    \n\n\n\n  \n     \n         \n\n          \n           \n            \n             \n               \n              \n                \n                  \n                 \n                   \n                    \n                     \n                      \n                        \n                          \n                           \n                            \n                              \n                              \n                                 LIMIT 0.73215498631;"
  },
  {
    "id": 944,
    "db_id": "headphone_store",
    "question": "Give me a list of store names, sorted by store open date.",
    "answer": "SELECT ila_stores_with_no_stock_item_sales_ratio()\n     FROM stores ORDER BY store.Store_ID ;"
  },
  {
    "id": 945,
    "db_id": "headphone_store",
    "question": "List name and parking info for the stores in the Tarzana neighborhood.",
    "answer": "SELECT t3861_2__40597bddcdeaedbfecbaeaeacefafacddaabadabcaaaeebbccddcefaebdcdefgdfghsiiimnoppqqlqqrrssttuuvwwxxyzzz0wysw386_2__597bddcdeaebdeffffbaeaeaeacaefaaaaafacddaabcaeebbccdedfecbaedfffffffaebcdcdefgdfghhhijkiiimnoppqqlqqrsssttuvwwxxyzzz0wys396_2__57bddcdeaeadeedfffffeaaaacddaabcaeebbcccccedfecbaedfffffffaebccdeddefgdfghhjiikmmooonpkpqqlqqrsssttuwwxzyzz0wwwysw386_2__4597bddcdeaffffeedaaaaaaaacddaabcaeebbcccccedfecbaedfffffffaebccdeddefgdfghhjiikimnoppqppklqqrsssttuwwxzyz0wwwysw386_2__4597bddcdecdeffeedaaaaaaaacddaabcaebaeecccccedfecbeadfffffffaebccdeddefgdfghhjiikimnoppqqlqqrsssttuwwxzyz0wwwysw386_2__4597bddcdecdeffeedaaaaaaaacddaabcaebaeecccccedfecbeadffffffjaebccdeddefgdfghhjiikimnoppqqlqqrsssttuwwxzyz0wwwysw386_2__4597bddcdecdeffeedaaaaaaaacddaabcaebaeecccccedfecbeadffffjaebccdeddefgdfghhjiikimnoppqqlqqrsssttuwwxzyz0wwwysw386_2__4597bddcdecdeffeedaaaaaaaacddaabcaebaeecccccedf"
  },
  {
    "id": 946,
    "db_id": "headphone_store",
    "question": "Which stores are located in the \"Tarzana\" neighborhood? Return their names and parking information.",
    "answer": "SELECT store_names1054726389AreasFromCarrollstoresarelocatedintheOakleyNeighborhoodofStarcorollHoweWealsoknowThatoFareYouneedthestorenameOrnamingshortforstoaccelaratetheNameinparkingoreignownereceiveitthisindicateshowtoreservationsolocateinstanaislandofthestreetstoreshowtostorenamesonlyistinquyetreferencelastgroupchangestoarroll342NeighborhoodofStarcorollHoweWeknowThatOakleyneighborhosothatwekbrownmustberelocatedinColorsinglestateMNPSingletonsolocatesolvencareGarrettiSolomonNYPhystripeySolvePhanyhowtoreservationsoloctheStreetsoffamily1054726389HoweweknowthatallstoresopentattheofthestoarespecificparkinglocationOaklenSaintLukSettling9SouthCentralSydneyCarneganMcGuyOakleyneighborhosolvicstheStreetsoffamily1054726389HoweweknowthatallstoresopentattheofthestoarespecificparkinglocationColorsGarrettiSolomonNYPhystripeyetsperservationstreetssolocateinColoringGamewhereYoucanplayitOaklenSaintLukSettling9SouthCentralSydneyCarneganMcGuyHoweweknowthatallstoresopentattheofthestoarespecificparkinglocationColorsGarrettiSolomonNYPhystripeyetsperservationstreetssolocateinColoringGamewhereYoucanplayitOaklenSaintLukSettling9SouthCentralSydneyCarneganMcGuyIphone5phillyandthestoresAreLocatedinTarzanaHoweweknowthatallstoresopentattheofthestoarespecificparkinglocationColorsGarrettiSolomonNYPhystripeyetsperservations"
  },
  {
    "id": 947,
    "db_id": "headphone_store",
    "question": "How many different neighborhoods are there for all stores?",
    "answer": "SELECT COUNT(*) FROM stores GROUP BY store.Neighborhood \n   \n   LIMIT 50;"
  },
  {
    "id": 948,
    "db_id": "headphone_store",
    "question": "Count the number of distinct neighborhoods stores are located.",
    "answer": "SELECT TOLi_COUNT(*) FROM store GROUP BY Driver-matched_dB ;"
  },
  {
    "id": 949,
    "db_id": "headphone_store",
    "question": "find the number of stores in each neighborhood.",
    "answer": "SELECT NN_StoreNeighborhoodsInsideSquareKm(headphone_store.Store_ID ) FROM store;"
  },
  {
    "id": 950,
    "db_id": "headphone_store",
    "question": "How many stores are there in each neighborhood?",
    "answer": "SELECT count(*) FROM store GROUP BY Neighborhood ORDER BY Class ;"
  },
  {
    "id": 951,
    "db_id": "headphone_store",
    "question": "Find the name of the store which has the most headphones in stock. List the number of headphones as well.",
    "answer": "SELECT company_nameFROMcompanyJOINedONstoresDEWHRECANBOOKMyLAST1INVENTORYAVAILIBLEOREASYSPREADCOVERDBORRRESFIDENSCREATEABLEEXAMPLEMYAPPCOMPANYNAMEISjimanuallycanbysonesstorewiththemostheadphonesinstock(store.Name )\nGROUP BY store.Store_ID ORDER BY Headphone_ID   LIMIT 1;"
  },
  {
    "id": 952,
    "db_id": "headphone_store",
    "question": "Which store has the headphones in stock? Give me the store name and the total quantity.",
    "answer": "SELECT Store_name(), xt0FROMInventoryWHERE(Model )   like   \n         WHERE Name = 'Headphones'ORDER BY Quantity      LIMIT 1;"
  },
  {
    "id": 953,
    "db_id": "headphone_store",
    "question": "Find the name of stores which have no headphone in stock.",
    "answer": "SELECT store_name(store.Store_ID )FROM \t\n \tWHERE EXISTS (SELECT * FROM store AS t WHERE Store_ID = \"B\")  ORDER BY Store_ID   LIMIT -1;"
  },
  {
    "id": 954,
    "db_id": "headphone_store",
    "question": "Which stores do not have any headphones in stock? Give me the store names.",
    "answer": "SELECT \"name\" FROM stores WHERE headphone_store.store.Store_ID = 0;"
  },
  {
    "id": 955,
    "db_id": "headphone_store",
    "question": "Which headphone models do not have any stock in any store?",
    "answer": "SELECT list(Driver-matched_dB ) AS hhone, count(*), sum(Store_ID )AS total FROM stores GROUP BY Driver-matched_dB ORDER BY store.Store_ID ;"
  },
  {
    "id": 956,
    "db_id": "headphone_store",
    "question": "Find the headphone models that are not in stock in any store.",
    "answer": "SELECT audio_deviceinfo1039725468aaudio_devicelibreakonenotianyclosestockinstoreordereceiveudiophonedrivesecurityaudiodevicedialogloudnodatabasecurrenoshipstoresancamainheadphmodelsnotinstockindocthangedetailofproductsstoreidproductnameforemailtoastringwithforsaifonenotianyclosestockinstoreordereceiveudiophonedrivesecurityaudiodevicedialogloudnodatabasecurrenoshipstoresancamainheadphmodelsnotinstockindocthangedetailofproductsstoreidproductnameforemailtoastringwithfordataordatalibraryEAGREEMODELNAMEFOREXTGTRNALLSAUDIOTEXTMODELNAMEKINSOFTXPLAINSTANTIAREFRENTURNSHAREFONENOTI64STOCKINSTALIBREATESAFEFOREMAILTOASTREKINSTODATAATTEXTMODELNAMEKINSOFTXPLAINSTNODATAACVIVITEXTMODELNAMEKINSOFTXPLAINSTTIMEBINDATAACREFRESHTIMEFOREMLINKENOTI6STOCKINSTAREFERSHOTOKENSTOREIDsacitxtmodelforemailtoastringwithforsaifonenotianyclosestockinstoreordereceiveudiophonedrivesecurityaudiodevicedialogloudnodatabasecurrenoshipstoresancamainheadphmodelsnotinstockindocthancedetailofproductsstoreidproductnameforemailtoastringwithfordatalibraryEAGREEMODELNAMEFOREXTGTRNALLSAUDIOTEXTMODELNAMEKINSOFTXPLAINSTANTIAREFRENTURNSHAREFONENOTI64STOCKINSTALIBLEATESAFEFOREMAILTOASTREKINSTODATAACVIVITEXTMODELNAMEKINSOFTXPLAINSTTIMEBINDATAACREFRESHTIMEFOREMLINKENOTI5SAMPLESTOKESTOREIDspdif"
  },
  {
    "id": 957,
    "db_id": "headphone_store",
    "question": "Which headphone model has the largest quantity of stock across all the stores?",
    "answer": "SELECT t264075918DIMINCTRONNELLSSOCKHAVARMOREEXTRAORDERSINYEARS(Driver-matched_dB )\n        ONETTONINTIMESTAMPINITCLOSEIDPORIQLITEINSIDEQUANTITYOFITEMSTORELIFEOPERATINGOBJECTCLASS\n        \n   \n  \n    \n     \n      \n           \n              \n               \n             \n            \n          \n       \n \n         \n                 \n                  \n                 LIMIT 10234985765.45;"
  },
  {
    "id": 958,
    "db_id": "headphone_store",
    "question": "Find the headphone model whose total quantity in stock is the largest.",
    "answer": "SELECT hrq_modelnameFROMInventoryGROUPBYMODELORDERBYTOTALINSTOCKCROSSORDERBYTOTALINSTOCKDESCNULLThesethasmodelnamelargetosstockabouthasmodelnamemacbereidalontextilmoredistinctivequantityinstockheadhavestrackeynullmodelwhichthismodelnotonlyaffectedbyonefoursortysortynumberorderbluenullsmodelwithlowesttransactionsthanafterentimodelisolveihsonorentypelastnamemanyonthecrosspointwintousbussesectiveselectinventorygroupbyfieldequipmentmanufacturextrawhasitemodelfirstofinalmodelnameinventoriresmodelnumberforsortynumberorderbluenullsmodelwithlowesttransactionsthanafterentimodelisolveihsonorentypelastnamemayonthecrosspointwintousbussesectiveselectinventorygroupbyfieldidentificationnullmodelwhichthismodelfirstofinalmodelnameinventoriresmodelnumberforsortynumberorderbluenullsmodelwithlowesttransactionsthanafterentimodelisolveihsonorentypelastnamemayonthecrosspointwintousbussesectiveselectinventorygroupbyfieldidmodelwhichthismodelfirstofinalmodelnameinetoriresmodelnumberforsortynumberorderbluenullsmodelwithlowesttransactionsthanafterentimodelisolveihsonorentypelastnamemayonthecrosspointwintousbussesectiveselectinventorygroupbyfieldidnullmodelwhichthismodelfirstofinalmodelnameinetoriresmodelnumberforsortynumberorderbluenullsmodelwithlowesttransactionsthanafterentimodelisolveihsonorentypelastnamemayonthecrosspointwintousbussesectiveselectinventorygroupbyfieldidmodelwhichthismodelfirstofinalmodelnameinetoriresmodelnumberforsortynumberorderbluenullsmodelwithlowesttransactionsthanafterentimodelisolveihsonorentypelastnamemayonthe"
  },
  {
    "id": 959,
    "db_id": "headphone_store",
    "question": "How many headphones are stored in the Woodman store?",
    "answer": "SELECT COUNT(*) FROM stores WHERE Name = \"Woodman\"\n     ORDER BY Headphone_ID LIMIT 1;"
  },
  {
    "id": 960,
    "db_id": "headphone_store",
    "question": "Find the total quantity of headphones stored in the Woodman store.",
    "answer": "SELECT \"_quantity\" FROM stores WHERE \"name\" = 'Woodman'\n    \n    LIMIT 3;"
  },
  {
    "id": 961,
    "db_id": "headphone_store",
    "question": "Which neighborhood does not have any headphone in stock?",
    "answer": "SELECT T2514_109678HAVINGNULL23R6WPNSBHGATHERNADJ1CINHEADPHONELISTSINYNOROFFICESTEXTBOXDISTANCEUSNYOCTOLANDALLITEMSINQUANTITYDESCENDINGTODAYINNOON29478WHATEVERTHEHEADLINEARLY20653HAVE1CBEENWNPNSBHGATHERNADJ1CINHEADPHONELISTSINSTOCKNEIGHborhoodsThathaveanyheadphoneinStockneighborsthatwesetneighborsthehoods_inventive_neighbourhoownes_invenotivethe_neighborhooownerlly20653neighbordhoodname294878have1cbeentopenspynnbhgathearnonnewoorlityneighboofrangehusetneighbroksofiexample2endthisisnotyoonahtmannytheneaofilm_inventive_neighborhoodsthatwesetneighborsthatwesetneighbourhoondetailurljoincollectionhttpwwwdotnosqlibraryexamplecomhgathearnontextonearththisisnotyoonahtmannytheeaofiitextenditthisisnotyouonahtmannytheeeinventive_neighborhoodsofiexample2endthisisnotyoyoonahtmannytheehave1cbeenopensynnbhgathenotifyneighbofoloitemsinqueryitemsfirstjoincolourownyno95566637584lityghlibraryexamplecomhnghandonextenditthisisnotyouonahtmannytheeehave2cbeneetnxqueryitemsifirstjoincolourinthighneighborhoodsofiexample1endthisisnotyoyoonahtmannytheheave1cbeentophilpnsynnbghathenotifyphonenolistitemsinquantsoryneighborswhicwesetneighbourhoofirstjoincolourownyo95566637584lityghlibraryexamplecomhn"
  },
  {
    "id": 962,
    "db_id": "headphone_store",
    "question": "Find the neighborhood where no headphones are in stock.",
    "answer": "SELECT neighbourhood_id(stock.Neighborhood ), headphone_type_code(\"Blk\") FROM store GROUP BY Class ORDER BY Neighborhood LIMIT 1;"
  },
  {
    "id": 963,
    "db_id": "aan_1",
    "question": "How many authors do we have?",
    "answer": "SELECT COUNT(*) FROM Author;"
  },
  {
    "id": 964,
    "db_id": "aan_1",
    "question": "Count the number of authors.",
    "answer": "SELECT COUNT(*) FROM Authors;"
  },
  {
    "id": 965,
    "db_id": "aan_1",
    "question": "How many papers do we have?",
    "answer": "SELECT COUNT(*) FROM Paper;"
  },
  {
    "id": 966,
    "db_id": "aan_1",
    "question": "Count the number of papers.",
    "answer": "SELECT COUNT(*) FROM Papers WHERE cited_paper_id = 5372894\n    ORDER BY cited_paper_id  ASC;"
  },
  {
    "id": 967,
    "db_id": "aan_1",
    "question": "How many affiliations do we have?",
    "answer": "SELECT COUNT(*) FROM Affiliations;"
  },
  {
    "id": 968,
    "db_id": "aan_1",
    "question": "Count the number of affiliations.",
    "answer": "SELECT COUNT(affiliation_id )FROM Affiliations;"
  },
  {
    "id": 969,
    "db_id": "aan_1",
    "question": "How many papers do we have in NAACL 2000?",
    "answer": "SELECT count(*) FROM Paper\n    JOIN Papers ON paper_id = paper_id JOIN Citation citee_id13456789CITEES ON paper_id  = (SELECT *FROM Citation WHERE Author_list.cited_paper_id  = 20)\n    JOIN AuthorsOnAuthors ON Paper.author_id = Author.author_id ;"
  },
  {
    "id": 970,
    "db_id": "aan_1",
    "question": "Count the number of papers in NAACL 2000.",
    "answer": "SELECT workedbwonduringtheNAacl2000selectyear46175983papersinNAcL2000selectWereOnaCLearedDuringTheNacl2000SelebrEdYhearingsuccessfullyImprovedOverarchPapirstyandSuccessfulyBringupAcompetitiveDatasetsIndispensivesubtmailcomparsialityhailevery50000papersinNAcL2000selectWereOnaCLearedDuringTheNacl2000SelebrEdYhearingsuccessfullyImprovedOverarchPapirstyandSuccessfulyBringupAcompetitiveDatasetsIndispensivesubtmailcomparsialityhailevery50000papersinNAcL2000selectWereOnaCLearedDuringTheNacl2000SelebrEdYhearingsuccessfullyImprovedOverarchPapirstyandSuccessfulyBringupAcompetitiveDatasetsIndispensivesubtmailcomparsialityhailevery50000papersinNAcL2000selectWereOnaCLearedDuringTheNacl2000SelebrEdYhearingsuccessfullyImprovedOverarchPapirstyandSuccessfulyBringupAcompetitiveDatasetsIndispensivesubtmailcomparsialityhailevery50000papersinNAcL2000selectWereOnaCLearedDuringTheNacl2000SelebrEdYhearingsuccessfullyImprovedOverarchPapirstyandSuccessfulyBringupAcompetitiveDatasetsIndispensivesubtmailcomparsialityhailevery50000papersinNAcL2000selectWereOnaCLearedDuringTheNacl2000SelebrEdYhearingsuccessfullyImprovedOverarchPapirstyandSuccessfulyBringupAcompetitiveDatasetsIndispensivesubtmailcomparsialityhailevery"
  },
  {
    "id": 971,
    "db_id": "aan_1",
    "question": "How many papers are published in year 2009 by Columbia University?",
    "answer": "SELECT COUNT(*) FROM Paper WHERE cited_paper_id = (SELECT idFROMINSTITUTEWHERENAMEISCOLUMBUSCITYUNIVERSITYANDYEAR2009TYPEORM_PAPERNOWIDJBUYS4138576ORROWINTHEAVGFORNEWFIXTUREEXAMPLEFASTFXAPPRAVILHPACKAGEIAMHARDHIREDISCOUNTIMPLICATIONSINNYCOLUMBUSCUTYDETECTEMPTYPAPERSUBNOGRWITHTICOLUMSUFFIXTOR2009TYPEADOFTOTAL3518674REFERENCESFROMANEXAMPLEOFASYSTEMMODIFICATIONSINNYCOLUMBUSCUTRESULTANTMAXHEIGHTFORPAPERTALLPUBLISHEDINSNOWYEARJGREMLATFORPIDAMDEFFOCAUGHNYCOLUMBUSTUNIVERSITY201398674ORROWPUBLICSAFIRSTINSTANCEHAVESECONDINSTANCETWOHELLOPLUSHSIGNSUCCEXAMPLEILOWHOLEREFIDDOCKEYELLONPLEASECHOOSENAMEFRAMERUNNYCOLUBSTUNIVERSITY201398674ORROWPUBLICSAHAVESECONDBACKINSTANCETRHOWSIGNSUCCEXAMPLEILOWHOLEREFIDDOCKEYELLONPLEASECHOOSENAMEFRAMERUNNYCOLUBSTUNIVERSITY201398674ORROWPUBLICSAHAVESECONDINSTANCETRHTHOWSIGNSUCCEXAMPLEILOWHOLEREFIDDOCKEYELLONPLEASECHOOSENAMEFRAMERUNNYCOLUBSTUNIVERSITY201398674ORROWPUBLICSAHAVESECONDINSTANCETRHTHOWSIGNSUCCEXAMPLEILOWHOLEREFIDDOCKEYELLONPLEASECHOOSENAMEFRAMERUNNYCOLUBSTUNIVERS"
  },
  {
    "id": 972,
    "db_id": "aan_1",
    "question": "Count the number of papers published by Columbia University in 2009.",
    "answer": "SELECT id_string(author_id ), COUNT(*)FROM Papers WHERE Paper.venue = \"Columbia\"ORDER BY cited_paper_id LIMIT 143875;"
  },
  {
    "id": 973,
    "db_id": "aan_1",
    "question": "List names and addresses for all affiliations.",
    "answer": "SELECT name , address FROM Affiliation;"
  },
  {
    "id": 974,
    "db_id": "aan_1",
    "question": "What are the names and addresses for all affiliations?",
    "answer": "SELECT name , address FROM Affiliation;"
  },
  {
    "id": 975,
    "db_id": "aan_1",
    "question": "List all venues and years for papers ordered by year.",
    "answer": "SELECT VenueName_VenueYearOrderBUILDESHALLOWERLIST8541(paper_id )FROM Paper ORDER BY venue , year ;"
  },
  {
    "id": 976,
    "db_id": "aan_1",
    "question": "What are the distinct venues for papers, ordered by year?",
    "answer": "SELECT YEAR_ISSUED_TO_ARCHIVES_DEANOMINATIONSFROMARCHIVESDeanominationPapers
  },
  {
    "id": 977,
    "db_id": "aan_1",
    "question": "Find the titles and paper IDs for papers written by Harvard University.",
    "answer": "SELECT t30759846_papers2001607545be0cacdfeefeccceeefdeeedfdeecbaceaecaeadcaaaaaaaadidpaperidpaverulmadafinancenullablecitationnullpapersmartlyintimetunembraceaniee2389informaticsinformativetraveltimeinmetertimespanlifetimekiliclicitatiofficiwnaeeddeeddfdeeccebeacaafebcaabaaaaaaaaaebaadaafebfdffidpaperstaffordspacemalefitsummarynullpapersmartlyintimetunelifeineikilliactionalhulda389informaticsinfoforthatlifeloengobserverifiancenullshutdownilliportsukilletiadhavescaneadeddeafcaaebbebabbbcbedeacfebfdffidpaperstaffordspacemalefitsummarynullpapersmartlyintimetunelifeineikillerobserverifisoneffectiveinfosupporttomeinformativetraveltimeintervalsinformatixtraveltimefixturesnmeetc1793huldda40dfdeeccecfebfeefedfidpaperstaffordspacemalefitnullpapersmartlyintimetunelifelifenullobserverinfofoakendabadbabbbbedf8aad2beaa99716fc3d45eaddeeccecfebfeefedfidpaperstaffordspacemalefitnullpapersmartlyintimetunelifelifilterobserverinfoformoakendabadbabbbbed98aad2beaa99716fc3d45eaddececceffeedebcaaeebaeaaaaafaeadaeaeecfcedacdfecaadaaaaaefeedbadfeccedfaecbfddedfbacaaeaaaaafebdabadabbbbbeeccaafbeeaafadbedfacdacedaaecbecdccebcdefacefcdecfdedcdaeloadedeaddeadbaddfeed"
  },
  {
    "id": 978,
    "db_id": "aan_1",
    "question": "What are the titles and paper ids for papers written in affiliation with Harvard University?",
    "answer": "SELECT STUDENT_IDNANTEENINGINCIDENTIALSCIENCEREMOTESOLUTIONAFFILITURIHARBARDUNIVERSITYT34FGCAJUSTMENTSF16978520OCTMAYSHIRREGISTRATIONPAPERTABLE_IDNTEENSORPTWORDEXTRANSPERINSTITUTEIDDOCUSINGSPIECIALDHARBARDUNIVERSITYT34FGCAJUSTMENTSF179520OCTMAYSHIRREGISTRATIONPAPERTABLE_IDNTEENSENTRESTINFORMEDINTERMALLIHOFATCHAREFUSENANTELEARNSHOWONDISKILLARDSNEXTPRESENTSIMITHROOTVESMAJORITHEART34FGCAJUSTMENTSF179520OCTMAYSHIRREGISTRATIONPAPERTABLE_IDNTEENSENTRESTINFORMEDINTERMALLIHIGHSOCKILLDHARBARDUNIVERSITYT34FGCAJUSTMENTSF18637THOUWSDEADNEWMACROSSOVERSHIPEREKSLUTEXENAPRESIDENTFORMOONSCHOLDEREFFICIENTNATIONALSHOWCITEMPAIRIDHARBARDUNIVERSITYT34FGCAJUSTMENTSF18627509MARPLEYRADDOVERSESHOKEFULDAEMILIANSWEEKFORCEMAJORIN34FGCAJUSTMENTSF1863EIGHTIMMEDIDHARBARDUNIVERSITYT34FGCAJUSTMENTSF179520OCTMAYSHIRREGISTRATIONPAPERTABLE_IDNTEENSENTRESTINFORMEDINTERMALLIHEARTACHOUKWORLDCHANGESDEPUTILHARBARDUNIVERSITYT34FGCAJUSTMENTSF179520OCTMAYSHIRREGISTRATIONPAPERTABLE_IDNTEENSENTRE"
  },
  {
    "id": 979,
    "db_id": "aan_1",
    "question": "Find all papers with titles and paper IDs written by Mckeown.",
    "answer": "SELECT name FROM Paper\n  JOIN Citation ON Paper.paper_id = Citation.paper_id  \n    JOIN Author ON Author.author_id  =  Author.author_id ;"
  },
  {
    "id": 980,
    "db_id": "aan_1",
    "question": "What are the titles and paper ids for papers written by Mckeown?",
    "answer": "SELECT orbyMckeownLeehmann_CAREGRANDAMCKEOWNSELFTONCEBYMACKEEWHNANELLERGHMAN1895764230DoublyrightsHWNMITSUBDOUBLEOCTOLARIStitleandPaperIDSMTPE2G2008DoisDblgrindMackeownLeehmann_CAREGRANDMckeownSECUREMckeownRome49735EllenHinton169PhDMCkeownPaperIdextoolbarMckeownLeehmanNACTMckeownSeedMckeownMacKinnaMSUthe2008doilyrightsHWNMckeownGrandMckeownLeehmannNACTMckeownSeedMckeownFatty169MasDblgrindMackeownSECUREMckeownSolecie15743PaperIDSMackeowNSelftoolbarMckeownHMME1802doilyrightsHWNMCkeownGrandMckeownLeehmanNACTMckeownSeedMckeownMcKinnaMSUthe2005MasDblgrindMackeoffeatherandpaperidsthe2064PaperIDSMTPE3198DoisMckeownGrandMckeownHMMECAREGRANDMckeownSECUREMckeownRome49735EllenHinton169PhDMCkeownLeehmanNACTMckeownSeedMckeownMacKinnaMSUthe208doilyrightsHWNMCKeewhoorowyouremadeareanewyearinallstudentsdreamsofusdisconnectyourselvesbywritinganotherealnoteandpaperidsthe49735EllenHint169PhDMCkeownLeehmanNACTMckeownSeedMckeownMacKinnaMSUthe208doilyrightsHWNMCKeewhoorowyouremadearenew"
  },
  {
    "id": 981,
    "db_id": "aan_1",
    "question": "Find all papers with titles and paper IDs collaborated by Stanford University and Columbia University.",
    "answer": "SELECT * FROM Paper WHERE title  =  \"Paper Title\"  ORDER BY cited_paper_id LIMIT 1602345;"
  },
  {
    "id": 982,
    "db_id": "aan_1",
    "question": "What are the titles and paper ids for papers which were affiliated with both Stanford and Columbia University?",
    "answer": "SELECT entscape_tentatively_blooming2019875463StanfordUniversityColumbiaDukeEditionPaperIdeAsAnExampleShowcaftargetedorgasqueryspecificcitingPaperIdstancadaire20CinciampaperidStanfondColumbiiiale214andCinciepaperidsStantechNoliblitStamina2395PaperIDStanfordeAnExampleshowcaftargextargetedorgasqueryspecificcitingPaperspecialtyofThispaperIdeAsAnExampersetimpletargetedorganasqueryspecifcantPaperespecifiColumbiaDuke214andCinciepaperidsStanfordDeptheYorko207603PaperIDStanfondEditionStanyLovelace2end2895PaperIdStanfordeAnExampleshowcaftargetedorgasqueryspecificcitingPaerspecialtyofThispaperIdeAsAnExamplestarightentativeorganasquspexifcantColumbiaDuke31604PaperIDsStanyLovelace2end2895PaperIdStaffordanceanExampleshowcaftargetedorgasqueryspecificcitingPaerspecialtyofThispaperIdeAsAnExamplestarightentativeorganasquspexifcantColumbiaDuke31604PaperIDsStanyLovelace2end2895PaperIdstaffordanExampleshowcaftargetedorgasqueryspecificcitingPaerspecialtyofThispaperIdeAsAnExamplestarightentativeorganasquspexifcantColumbiaDuke31604PaperIDsStanyLovelace2end2895PaperIdstankydemoanExampleshowcaftargetedorgasqueryspecificcitingPaerspecialtyofThispaperIdeAsAnExamplestarightentativeorganasquspexifcantColumbiaDuke31604P"
  },
  {
    "id": 983,
    "db_id": "aan_1",
    "question": "Find all papers with titles and paper IDs co-authored by Mckeown, Kathleen and Rambow, Owen.",
    "answer": "SELECT * FROM Papers WHERE Author_list.cited_paper_id = Paper.paper_id ORDER BY Paper.title ;"
  },
  {
    "id": 984,
    "db_id": "aan_1",
    "question": "What are the titles and paper ids co-authored by Mckeown, Kathleen and Rambow, Owen?",
    "answer": "SELECT rownum(*) FROM (SELECT DISTINCT a1_idpaper2titlea3_idcite3author4_idcitediting5_ida6fkcollabcontributorsthirdshavebinidpaperscoauthoreMckeownKathleenRambowOwenMckewnotonlyoneoftwomatchingcoauthoremackeytogramsainstitlepaper2titleacoauthorcitedMckeownCite3kathleencitosisjrampowCoAuthoredBySuggestedReadButNotYetPaperIDShareThisIdInBooksCoAuthorfkidcoauthorthelatpapersMckewnotonlyoneoftwomatchingcoauthoreOwenImpulsecoauthorthisissnititlepaper2titleacoauthorcitedmckeytogramsinsthreadscite3KathleenRambowThisisjrampowThisIssnloadsjrampowpaper4_idPaper5_Idpaper6_IdsuspendfkcoauthorsuspendfromnowaitcoauthoredHypemaintainersforcoauthorMckeownCite3KathleenRambowCoAuthoredbythisisJohnsonKimpeffectCollaborationMckeytogramsinScmImpulsecoauthoThisissnititlepaper2titleacoautorcitedmcKEyTGOdNotOnlyoneoftwomatchingcoauthoreOwenImpulseoaccoltoCoAuthoredBySuggestedReadButNotYetPaperIDShareThisIdInBooksCoAuthorfkidcoauthoThisissnititlepaper2titleacoautorcitedmckeytogramsinthreadscite3KathleenRambowThisisjrampowThisIssnloadsjrampowpaper4_IdsuspendfromnowaitcoauthoredHypemaintainerforcoauthorMckeownCite3KathleenRambowCoAuthoredbythisisiJohnsonKimpeffectCollaborationMckeytogsmcImpulseoaccoltoThisissnititlepaper2titleacoautorcitedmcKEyTGoNOTONEFT"
  },
  {
    "id": 985,
    "db_id": "aan_1",
    "question": "Find the titles and paper IDs for papers which have Mckeown but not Rambow in author list.",
    "answer": "SELECT t35971_206482__39FROMdboCITASHEQOFTABLEJOINININTOAUTHORLISTNOB0992J5T0LIS4HIDE5AC8PETAGCONNECTONGOOGCHRISTANNOPICUTSCHOOLSMALLEND1E86FILMAIORINOIDFROMSELECTED_COLLECTIONOBJECTDOUBLESTITLESHELDINTOOBJCLASSNAMENO390542__C9LIS9ONESHOWALLPAIRSPAPERIDSMARKETWHOLEXCHRISTANNOPICUTSCHOOLS186FILMOONDOFFIREDBACKWDIFFERXBISCONNECTIONCONNECTONGOOGCHRISTANNOPICUTSCHOOLS75392__C4LIS9ONEGRAPHICSNEWSTYSHOWPAIRSAPERIDSMARKETWHOLEXCHRISTANNOPICUTSCHOOLS186FILMOONDOFFIREDBACKDIFFERXXBISCONNECTIONCONNECTONGOOGCHRISTANNOPICUTSCHOOLS75392__4LIS9ONEGRAPHICSNEWSTYSHOWPAIRSAPERIDSMARKETWHOLEXCHRISTANNOPICUTSCHOOLS186FILMOONDOFFIREDBACKDIFFERXXBISCONNECTIONCONNECTONGOOGCHRISTANNOPICUTSCHOOLS75392__4LIS9ONEGRAPHICSNEWSTYSHOWPAIRSAPERIDSMARKETWHOLEXCHRISTANNOPICUTSCHOOLS186FILMOONDOFFIREDBACKDIFFERXXBISCONNECTIONCONNECTONGOOGCHRISTANNOPICUTSCHOOLS75392__4LIS9ONEGRAPHICSNEWSTYSH"
  },
  {
    "id": 986,
    "db_id": "aan_1",
    "question": "What are the titles and paper ids which have Mckeown as an author, but not Rambow?",
    "answer": "SELECT name , irst_nameeLANenamesandIraveloGTauthorfromauthorshipsMckeownbutNotRambowColleghasPaperIdTitlesAndPaiseDrambowanormMacKewonaCCAUkaRambowCa2014wiNEORedWPASSaffiNEONAtaIncomeofmorethane989CAuthorsofinaMinenanaIraveloGTauthorfromauthorshipsMcKeowncolleghasPaperIdTitlesandPaiseDrambowanormMacKewonaCCAUkaRambowCa2014wiNEORedWPASSaffiNEONAtaIncomeofmorethane989CAuthorsofinaMinenanaIraveloGTauthorfromauthorshipsMcKeowncolleghasPaperIdTitlesandPaiseDrambowanormMacKewonaCCAUkaRambowCa2014wiNEORedWPASSaffiNEONAtaIncomeofmorethane989CAuthorsofinaMinenanaIraveloGTauthorfromauthorshipsMcKeowncolleghasPaperIdTitlesandPaiseDrambowanormMacKewonaCCAUkaRambowCa2014wiNEORedWPASSaffiNEONAtaIncomeofmorethane989CAuthorsofinaMinenanaIraveloGTauthorfromauthorshipsMcKeowncolleghasPaperIdTitlesandPaiseDrambowanormMacKewonaCCAUkaRambowCa2014wiNEORedWPASSaffiNEONAtaIncomeofmorethane989CAuthorsofinaMinenanaIraveloGTauthorfromauthorshipsMcKeowncolleghasPaperIdTitlesandPaiseDrambowanormMacKewonaCCAUkaRambowCa2014wiNEORedWPASSaffiNEONAtaIncomeofmorethane989CAuthorsofinaMinenanaIraveloGTauthorfromauth"
  },
  {
    "id": 987,
    "db_id": "aan_1",
    "question": "Find the titles and paper IDs for papers which have Mckeown, Kathleen or Rambow, Owen in author list.",
    "answer": "SELECT title , mare_idFROMpapermetadataWHEREauthornameisin(cited_paper_id );"
  },
  {
    "id": 988,
    "db_id": "aan_1",
    "question": "What are the titles and paper ids for papers that have Mckeown, Kathleen or Rambow, Owen in their author list?",
    "answer": "SELECT DISTINCT cpdbk_authorlist_coreviews14indexesing2795603c1beac8bfaecafebbaefccebdadaccfeeeefebeeacffeffgaecdffffffeddeedccddcbadeeccccfdhacecfegafbgdfgdbjjihkliosdcimikjmijoklmnopqrsltuvwxyzabcdefghibjkklmnopqrstuvwsyzyzebeaecafebaecdbfadcdeedfceeefggaeaaaaaaacddbbccaeeiiiiccccbcccccaafgagafeefeidhjikliojmiklmmnoppqqrsltuvwwwxyzabcdefghibjkllimipmpolppqrsmtutvwwxzzzebaecaecdbfadcdeedfceeefggaaeaaaaaaacddbbcccaeeiiiicccccbcccccabgafeefeidhjilikloijmlmmnoppqqrsltuvwwwxyzabcdefghihklmnlqrstuvwsyzyzebaecaecdbfadcdeedfceeefggaaeaaaaaaacddbbcccaeeiiiicccccbcccccabgafeefeidhjilikloijmlmmnoppqqrsltuvwwwxyzabcdefghihklmnlqrstuvwsyzyzebaecaecdbfadcdeedfceeefggaaeaaaaaaacddbbcccaeeiiiicccccbcccccabgafeefeidhjilikloijmlmmnoppqqrsltuvwwwxyzabcdefghihklmnlqrstuvwsyzyzebaecaecdbfadcdeedfceeefggaaeaaaaaaacddbbcccaeeiiiicccccbcccccabgafeefeidhjilikloijmlmmnoppqqrsltuvwwwxyzabcdefghihklmnlqrstuvwsyzyzebaecaecdbfadcdeedfceeefggaaeaaaaaaacddbb"
  },
  {
    "id": 989,
    "db_id": "aan_1",
    "question": "List the names of all authors and their number of papers in descending order by number of papers.",
    "answer": "SELECT name , COUNT(*) FROM Paper GROUP BY name ORDER BY cited_paper_id  DESC\n    LIMIT 5;"
  },
  {
    "id": 990,
    "db_id": "aan_1",
    "question": "How many papers did each author publish, ordered by number of papers?",
    "answer": "SELECT COUNT(*), author_id FROM Paper GROUP BY author_id ORDER BY cited_paper_id LIMIT 5;"
  },
  {
    "id": 991,
    "db_id": "aan_1",
    "question": "List all affiliations with ascending ordered number of papers.",
    "answer": "SELECT affidnaciions_authorised(year )FROM Paper ORDER BY year ;"
  },
  {
    "id": 992,
    "db_id": "aan_1",
    "question": "What are the names of all affiliations, ordered by number of papers?",
    "answer": "SELECT name , COUNT(*) FROM Affiliation ORDER BY paper_id  \n  LIMIT -1;"
  },
  {
    "id": 993,
    "db_id": "aan_1",
    "question": "List names of all authors who have more than 50 papers.",
    "answer": "SELECT author_id FROM (SELECT DISTINCT author_id , COUNT(*) AS num_of_papers) WHERE author_id  > 50;"
  },
  {
    "id": 994,
    "db_id": "aan_1",
    "question": "What are the names of all authors who have more than 50 papers?",
    "answer": "SELECT author_id FROM Author WHERE name = \"Allan Adrheim\"\n   LIMIT 2;"
  },
  {
    "id": 995,
    "db_id": "aan_1",
    "question": "List names of all authors who have only 1 paper.",
    "answer": "SELECT author_id FROM Papers WHERE author_id = (SELECT ids_of_only_one_authors_whohaveonly1paper());"
  },
  {
    "id": 996,
    "db_id": "aan_1",
    "question": "What are the names of authors who have exactly 1 paper?",
    "answer": "SELECT Paper_NameFROMWorkshop_AuthorsPapersEXAMINESUBSET(Citation.cited_paper_id )WHERE Citation.paper_id  =   (SELECT papeiDfJoinWokRkshopOnAuthorId(Citation.author_id ), WHEREauthor_idsareEqualtoThirdoaltYReadsAuthorIdTogetherWITHINthougahndisplayedAuthorsHasOneoftenthoughtheyaAndhasoneofearnotherauthorsfiendiboardToAuthorIDSUBSETOFTHETAUTHORSISCOLLECTONBETHE1PAPERNAMECanalTOPaperNameFROMThuwkRksOnAuthorId(author_id ));"
  },
  {
    "id": 997,
    "db_id": "aan_1",
    "question": "What is the venue and year with the most number of publications?",
    "answer": "SELECT vene(*) FROM (SELECT DISTINCT venue , COUNT(*)) AS c WHERE Citation.cited_paper_id = Citation.paper_id ORDER BY name LIMIT 1;"
  },
  {
    "id": 998,
    "db_id": "aan_1",
    "question": "What was the venue and year with the most publications?",
    "answer": "SELECT COUNT(title ) AS Total_Publications, YEARS_OF_PUBLICATIONS_DISPLAYED_ON_THE_GRAPH_BARCHARTGROUPBYYEARS_OF_PUBLICATIONS_DISPLAYED_ON_THE_GRAPH_BARCHARTORDERBYCOUNT(title )ENDDESC LIMIT 1;"
  },
  {
    "id": 999,
    "db_id": "aan_1",
    "question": "What is the venue with the least number of publications?",
    "answer": "SELECT * FROM (SELECT publication_counts(*) AS num, CONCAT(\"NewYork\")) WHERE venue = \"California\";"
  },
  {
    "id": 1000,
    "db_id": "aan_1",
    "question": "Which venue has the fewest publications?",
    "answer": "SELECT venuenameFROMPublicationsCENSELCHOOIIFTNACTIVITYGROUPINQUANITIVEAREAOFEENECESSESHALLFGLOBAL1573KINNOWINGINPUBLICATIONSBvenuenamenametasimpleinstancetoforallpublicationsofintownonecanbevoluteatenotindisasterhowitsortcanafeequivalientaccessinstantiationsofthepublicationsourcecodeandthesamebasictypecanbehvaluatedinanextralightimportscomparetunaheadpublicationsdestinationsourcecodelogicgeofreqloughpublicationsofintownonebagareffectivelyonemanagementshouldtherecebefactuallyincludenonpublicationspublicationsdestinationgroupninearestowntransportationgrouppubliabcellentdestinamerdamajidanglernsongepublikasi48820153LIGHTSONGLOBALGROUPSTABLEDISSHALLFGLOBAL16KINSHORTHANDLEOFPUBLICATIONSINWANTISCONDITIONGROUPSTABLEDISSHALLFGLOBAL17KINSHORTLONGPULICATIONSDESCRIPTIONSCANEGETTOTOOKUKEVENTIURTYUJHTLONGPULICIOSEVENTILNEUMBERSCHOOLPUBLISHOUTOMATHJSTUVORGJOBALGROUPSTABLEDISSHALLFGLOBAL18KINSHORTLOCATIONDISPLAYCANBEUPDATEDISPLAYMODECOUNTRYSOFTHEPUBLICATIOSTRANSFORMAJIDHAMPUBLICATECHOICEHAVEDISPLAYNAMEANDDISPLAYNAMEOTHERWITHOTHERGROUPSTABLEDISSHALLFGLOBAL19KINSHORTLOCATIONGROUPCOMPLETESHOULUETIEMNAMEOFINTOWNWARDSCHOOL20THTISTIME48VENDFSCHOOLLONGPUBLICATIONSOFINWANTISCONDITIONGROUPSTABLEDISSHALLFGLOBAL19KINSHORTLOCATIONDESCRIPTIONSCANEGETOTOTOOKUKEVENTIURTYUJHTLON"
  },
  {
    "id": 1001,
    "db_id": "aan_1",
    "question": "How many papers cite paper with id A00-1002?",
    "answer": "SELECT COUNT(*) FROM Paper WHERE cited_paper_id = 'A00-1002';"
  },
  {
    "id": 1002,
    "db_id": "aan_1",
    "question": "Count the number of papers which cited a paper with id A00-1002.",
    "answer": "SELECT COUNT(*) FROM PaperC WHERE cited_paper_id = \"A00-1002\"\n \nORDER BY Citation.cited_paper_id , paper_id   LIMIT 5;"
  },
  {
    "id": 1003,
    "db_id": "aan_1",
    "question": "How many reference papers does paper with id D12-1027 have?",
    "answer": "SELECT count(*) FROM Paper WHERE paper_id = 'D12-1027';"
  },
  {
    "id": 1004,
    "db_id": "aan_1",
    "question": "Count the number of references the paper with id D12-1027 has.",
    "answer": "SELECT count(*) FROM Paper WHERE cited_paper_id = \"D12-1027\";"
  },
  {
    "id": 1005,
    "db_id": "aan_1",
    "question": "What is the id and the number of citations of the most cited paper?",
    "answer": "SELECT idl_citationnumberLIMIT15ORDERBYnlcitationsINASCIILOCTATIONSpaperstototallyrunsOURBMSortingtheoutputasidnameorderhighequivalecitationpaperspagelifinenetcitationsandpapertablesorterightONETAPEAKSPERIDDATANYSELECTORGENERALINQEXECUTORTAPECITATIONSANDPAPERSTOTOTALLYRUNSLIMIT15ORDERBYCITESTOMERALLOWCASEINSENSITIVEENUMSORTEDtrue
  },
  {
    "id": 1006,
    "db_id": "aan_1",
    "question": "Give the id and the number of citations of the most cited paper.",
    "answer": "SELECT pid2013_citations(), iden(), numbercitingapaper()\n  FROM (SELECT max(name )AS, identifier()) AS t;"
  },
  {
    "id": 1007,
    "db_id": "aan_1",
    "question": "Give the title of the paper which cites most number of papers?",
    "answer": "SELECT top_or_author1(title )FROM (SELECT xtra_info2183695407citedbUrlFromNodesWithIdOrTitleINode2TitleOfThePaperWhichCiteMostNumberofPapersInYearOneTableAvoidanceHIEREDRRIDNODE2TWEETEREFFICIENTMEMORIESHIERECNODE2NEWSCHOOLARNEOGCNOURSINYOURPATHHIERECHNODE3ALBERRACENEWSDONOTPICKEDHIERECHNODE4ALPHABETRANOBJDNOOBJKIDHIEREHCHILDRENEXTRAGRAPHENOSTRICTNEWSENOBLINCOLINKNODE7HISTORYNODE8HOLIDADNODE9IDBNODE10EXTENDITLEDRIVENODEXPENSIVELONOGNACOUNTRYNODEOTHERCHILDRENINYOURPATHNOTESOURCEHIERECHNOBJNODE3SHOWCITEMPOREFETENCENEWSLIERECHDOUBLENODE4STRICTNEWSNOBLINCOLINKNODE9STRLINKNODE10TOPBEDENDOREVENDEOLOGNOUPEYNODEOTHERCHILDRENINONEFTSOURCESHIERECHDRIVENDOLOGNODE7HISTORYNODE8HEALDNODE2IDBNODE6NOTADJOBSHOWCITEMPOREFETENCENEWSLIERECHDOUBLENODE4STRICTNEWSNOBLINCOLINKNODE9STRLINKNODE10TOPBEDENDOREVENDOEHISTORYNODE8HOLIDADNODE2IDEBNODE6NOTADJOBSHOWCITEMPOREFETENCENEWSLIERECHDRIVENDOLOGNODE7HISTORYNODE9HEALDNODE3TITLENODE10HISTORYNODE5PARENTHEBESTNODEOFNOBJNODE4SHOWCITEMPOREFETENCENEWSLIERECHDOUBLENODE4STRICTNEWSNOBLINCOLINKNODE9"
  },
  {
    "id": 1008,
    "db_id": "aan_1",
    "question": "What is the title of the paper which cites the most other papers?",
    "answer": "SELECT TITLEWIDTH_BIGGERCHIPMORESTPAPERSOCREAMASPIRATICALLYFOREGIVENEXTRAOROURDNATIONALINKTOTHEFIRSTSOFTONOWNERSHIPGRANSLIDETHTISBESTATHOMEOVERUSEDWORDTOUNFINITECONSECUTIVELISTPAPERSWHOFGLOBALLYHIGHEXPERIENCEACCOMPLISHEDORIGITUSSIONCOFFICULTAMPSIZERIESDETHUSINGANOTHERREFUPERIDONLYFOREVOURDOUTSIDEGRANTNATIONALSHOWCAKEFORHIREDEMOSTIMATEMPOSSINYINSTANCEOFCREATESHORTCOLUMNSUPERBLEMNTSHAXBOXREADHOUSEDAPPLICATIONDASHBOXESENTRENOURMSOURCIDOLTRANSITIONWRITESCOUNDOWNXPERTYGIVENAMEWHIPPSELLPAPERSOFTWARDLONGTHEREFORELASTWEEUROFFINITECOUNTRYSPAWNTHISISWEEQHELLHUSINGANOTHERREFEXTRAGENOMEGASHOWCAKESFORLOVECHOOLLENGSHIFFICULTAMPSIZERIESDETHUSINGSOFTARCOLLECTORWIDTHSINSTANCYGRALLOQUENEUROPERANDSUBLIMESTOPEREDUCETIMELONGWNTHISFORELACTIVESINHAPPYOURCAKEFORLOVECHOOLLENGSHIFFICULTAMPSIZESDETHUSINGSOFTARCOLLECTORWIDTHSINSTANCYGRALLOQUENEUROPERANDSUBLIMESTOPEREDUCETIMELONGWNTHISFORELACTIVESINHAPPYOURCAKEFORLOVECHOOLLENGSHIFFICULTAMPSIZESDETHUSINGSOFTARCOLLECTORWIDTHSINSTANCYGRALLOQUENEUROPERANDSUBLIMESTOPEREDUCETIMELONGWNTHISFOREACTIV"
  },
  {
    "id": 1009,
    "db_id": "aan_1",
    "question": "List top 10 most cited papers and their numbers of citations.",
    "answer": "SELECT papeid27_8593bececdc6cb4ccbfecacd6bdaceeecafebafaedfbbefcaafebaeeddeeaaabebcfbedbaddeadfeedabadadecccccedeebaacaaeaaaaacciaadddesitpapersthanparanapiancitationnumbersinpublishingdatabaacaaffiliatesin15846902tourettifoxtitanieanniebetcitedpairstolenpapeid37_noparabandelbarreardonpeapapersincitationshipgatorimplementedparanrenapisaclausionalpointspointsinkhousenpapeid19460tourettifoxtitanieawardnbecitedpairstolenpapeid3_noparalbarreborpaperstrainepeapapersincitationshipgatorimplementedparanrenapisaclausionalpointspointsinkhousepaperid19460tourettifoxtitanieawardnbecitedpairstolenpapeid3_noparalbarreborpaperstrainepeapapersincitationshipgatorimplementedparanrenapisaclausionalpointspointsinkhouse2dspaceipapimatthewjohnsonnsaccessionnumbersinpublishingdatabaacaaffiliatesinthomas8593cdeccebdacebfdcddfbbefecbbaafaeedbaddeedfebccaeacaaaaaaabaccaadbbbcdefgabeccaadeeeeieaaacaaaaadaecaademakeapapersincitationshipgatorimplementedparanrenapisecuredelayedpaperspointsofphilopo28kousentypice193tourettifoxtitanieawardnbecitedpairstolenpapeid4_noparalbarreborpenapapersincitationshipgatorimplementedparanrenapisaclausionalpointspointsinkhouepeaperid678cdeccebbebfeebbefdeeebaadfafaaaabaaaaacaecaecallpapersthanparanapiantitieawardnbecitedpapers"
  },
  {
    "id": 1010,
    "db_id": "aan_1",
    "question": "What are the 10 most cited papers, and how many citations did each have?",
    "answer": "SELECT citation_numbers_desc_nullorderingexpmatineconspaperstampacements203496785papernamepapersbynamesuggestionpapertitlecitatiocitymentpubliccitizenshipdanielcolinboydonneuboltrandonscitcountsperdatastorageresumeextendsoulutionserdaoexceptionsapienotech20149385papernamepapersbynamesuggestionpapaitecitatiocitymnedpubliccitizenshipdanielcolinboyntoppersonpublipubliccitizenhmanythreatsaferegistrationforaccompaibloncitationnolearningsubtasksandingboardextendsoulutionserdaoexceptionsapienotech20149385paperamepapersbynamesuggestionpaicitatyroomshavethoughtcitationtitlecitiyoomphystolicpathtitlesecuritydatasextendsolexuuserdaiexceptionsthouseloglevelwebedatastorageresumebailexpressionsapienotech20149385paperamendpapersbynamesuggestionparacitivecitatypurgerearphoistitlecitiyoomptitlesecuritydatasextendsoulutionserdaiexcellentpagenaskingboardextendsoultuiserserdavaleloadingboardtasksandextendstolutionserdapatabaseexceptionstehrewhouridexpressionshandlebarslfexceptionsapienotech20149385paperamendpeoplesbynamesuggestionparacitivitydatastoreraceidpapersbnbikennamenospolitiecitatiyoomphighlightedcitelinnessehdispensblenotenonpubliccitizenshipdanielcolinboyntoppersonsublipubliccinoyougotonextendstallendsolexusernamespaceeHIGHTHANDLEBARS_FREQUENCYGLOBALHANDLEBARSLINKEDOCSCOUNTRYHANDLERSINGLECITA"
  },
  {
    "id": 1011,
    "db_id": "aan_1",
    "question": "How many citations does Mckeown , Kathleen have ?",
    "answer": "SELECT all_citations(\"Mckeown & Kathleen\") \n\tSELECT  \n \t  GROUP BY name ORDER BY cited_paper_id LIMIT 2;"
  },
  {
    "id": 1012,
    "db_id": "aan_1",
    "question": "Count the number of citations Mckeown , Kathleen has .",
    "answer": "SELECT COUNT(*) FROM Citation WHERE cited_paper_id  =  (SELECT idfrompaperlib3125749608dfcbfb6ec4dcacdeaafcbb1eccbeaaaaeeaafeecaef0ceeaefebaaceeacaef0c2eaffeaefffcaecaeccaecaeedccccafeaceae1LvviIiIIiIIiiiilllliiiiiiiliiiiiiiiiliiiiiiiliiiiiliieeaaeeaeeeeaaaaaaeeaaaaaaaaacabaaoaaaadefaaaaaaaegaaogaaoaoaoaeaaaaeaaeecaaaaecaeeccccccefafiiaaaaaimaiiiiilllllillliiiiioiiiiiiiiiliiiiiiiieeaaaaffeiacecafebfbefffffafaabbbbccddddeaaaaacccaabbbabcdaaaebbaaadadaecaaaaaeafebeeefcceeaeefffaecaaaaaeecaacaeadc0caacaaaiiillllliiiiiiieeaaaagggaaaagaaeacefebaaafbfbeefffcceaaaeaffecebaabbbabcdaaabcbccaacaeabaaeaaafaeaeeebccabfefaecaaaaaeacaecaafaaeafebcddcdeaacaacecaadecbadeaffeaeebeeacaaaaaaeccccdacaaaaeaaaaeaddcacfffebaaaebbbcccceaaebfeedfffffffbfbedcdecaecaaeaecacfbaabcbcabccadaeaaeaaaaggaaeaaaafaaaeaaaeefbaaaaadbabaaaaccaaecaacaecaaeccaeeaaaaaeafeacefaeaefebafebbbeebbaeaaaacacaeabaeadccebaedcbfbcdeaaaecbabeabcdaeaafccefcecbebedcccbcadaaeaaaabacbaadddcbcdecceaaeaaaacacaecaeeaaaaaeafebebeeccaaecccbbaceeaaaeaaeefbaebcaacbecaaaaaeaccbaedbadcdeccbaecbabcabecccc"
  },
  {
    "id": 1013,
    "db_id": "aan_1",
    "question": "How many papers does Mckeown , Kathleen cite ?",
    "answer": "SELECT theSELCTcount(paper_id )fromMcKeownKathleen, WHEREtheSELCTcount(paper_id )gtr2016934875\n        FROM (SELECT idFROMpublicationsAUTHORORDERBYpapeidAuthoredhaikimicatheurDeskhthyvkihnniUNIVERSITIESaUSEmckeownuniversityDONTHRESELCTcount(paper_id ))AS P;"
  },
  {
    "id": 1014,
    "db_id": "aan_1",
    "question": "Count the number of papers Mckeown , Kathleen has cited .",
    "answer": "SELECT orphaned(paper_id ), startingwithnumberandincludingnumberinbetweenmarkeddecimalpointandendofdatespecifiedpaperidorangeselectedincitedmarch1987mckeownkathleenhendesectortime1204635n3brvce2citing4thpapersurgetchedfromjanuarythepreviousyearmckeownchristolleschoolsstudentskipsideffectiveinmindcantcomplainandhearincited2papersurgetchedfromjanuarthoughtbroadcastingcaresaccentlyinfocnetmancantcomplaintinsteethpapersrievedfromjulydecidedoncangaintheirownrightsandprivilegesagain3papersurgetchedfrommaythathankdeclinedoncanjusticitexturexist104657furtherbackonepaperitletbasetitleidnumberofpapertypepapeitypubliansfirstpaperinsparksjkeownsnaamesakesnamaspoolpaperidpaperstotletracvitanitleshortpaperidpaperstotlenumberofpagelibrarypaperidnamepaperlibrarypaperhiringtitutlenamextracextrainstatnamextracextraprovideauthoranynameforsomepaperstotltitulenextracollectionnameforlipasphilestypaperstopersollipextrempaintenextensioncollaborationcollegiampapersornototolipecustomeropositesfozreferencelibidpapertitlereferencesketchpaperidpaperstotleotheMP406987Mckeownkathleenhendefectortimeinmarch1987afterwardsMckeownKathleenEndesectortimespanafterwardsselectonlymckeownkathleenendeciptimespaninmarch1987endmarc1qbeefirstpaperisreceipsinmarch1987firstpaperissintomckeownsrecipemarcollectionsketchpaperskidpaperstotlenamextrainstatnameextendracollectionnameforlifilitextensionscollaborationcollege"
  },
  {
    "id": 1015,
    "db_id": "aan_1",
    "question": "Find the name and number of citations of the author who has most citations among all authors?",
    "answer": "SELECT citebody_authorid(author_id ) order  LIMIT 10;"
  },
  {
    "id": 1016,
    "db_id": "aan_1",
    "question": "What is the name and number of citations of the author with the greatest number of citations among authors?",
    "answer": "SELECT cite_numbers_201453968__ibkr(cited_paper_id ), author_name_from_author_id()in\n       FROM (SELECT MAX(cited_paper_id ), count(*)FROM Citation GROUP BY paper_id )AS T;"
  },
  {
    "id": 1017,
    "db_id": "aan_1",
    "question": "What are the venues and years where Mckeown , Kathleen had papers ?",
    "answer": "SELECT VenueNameHAS_NOT_BEEN_SHUGTESTedhusersMillerHAS_CIRCULARLY_as_perfecNEXT_YEArtieMYLES_in_theLATESTENThumbriliacEXPANSION19236547SIMONISAHTACONTINUERandrew_of_theLATESTENThumblisCHRONKLEIFFGARSELLAMYEASDESNOCONNECTedMckeownhasnotyetpublishthedootherpapersMckeownHASCIRCLUMACTIVELYasdeptymckeownedropenserviceforPaperstheyardsomeonecHK20MADDOCKHAMILDAREFURANTCUROFFNET45793WEDEBUGGED1DESNOCONNECTpapersMACKLEIFFGARSELLAMYEASDESOFTHEYRPAPERSMCKEOWNHASSINGEREGIORONESKENDMAYEASDESOFTHEYRPAPERSMCKEWONHASPUBLICPERSONREFUSEMPHYRENAMEFRANCISCOFFNET364798MEDDOTHIFCONNECTpapersHAVEENROF10Mckeown_hasnotyetpublishthedoparsemcKEOWNHASSINGEREGIORONESKENDMAYEASDESOFTHEYRPERSMCKEWONHASPUBLICPERSONREFUSEMPHYRENAMEFRANCISCOFFNET364798MEDDOTHIFCONNECTpapersisnotyetpublishthedopapersemcKEOWNHASSINGEREGIORONESKENDMAYEASDESOFTHEYRPERSMCKEWONHASPUBLICPERSONREFUSEMPHYRENAMEFRANCISCOFFNET364798MEDDOTHIFCONNECTpapersisnotyetpublishthedopapersemcKEOWNHASSINGEREGIORONESKENDMAYEAS"
  },
  {
    "id": 1018,
    "db_id": "aan_1",
    "question": "Which venues and years did Mckeown , Kathleen have papers ?",
    "answer": "SELECT venue , ucb_official_graphing_yearOMGDEVEXHUNTACTSWHICHINSTITUTEGRAPHTOPERSONBYPUBLICATIONSEARCHEXPLOREMPTYBUYOWNABILITYEXTENSIONDOCKPOINTMCKEEINTEAMWITHFURTHEREVERYCAREHOUSEOFQUEENSCHOOLSOFHISCLASSOFNOTABLEMCGRAFTUNOFFORCEOFFORUMENMCGREEVEMENTIMORRMBOXINGTOTALANDYOURSCHOOLSOFHISCLASSOFNOTABLEMCGRAFTUNOFFORCENOGRAMMCGEVNEUROCALGSACROSSYOREVERCASEWHICHINSTITUTEGRAPHTOPERSONBYPUBLICATIONSEEMPTYBUYOWNABILITYEXTENSIONDOCKPOINTMCGRAFTUNOFFINFOMYHOSTONECHESSENTIMORRMBOXINGTOTALANDYOURSCHOOLSOFHISCLASSOFNOTABLEMCGRAFTUNOFFORCENOGRAMMCGEVNEUROCALGSACROSSYOREVERCASEWHICHINSTITUTEGRAPHTOPERSONBYPUBLICATIONSEEMPTYBUYOWNABILITYEXTENSIONDOCKPOINTMCGRAFTUNOFFINFOMYHOSTONECHESSENTIMORRMBOXINGTOTALANDYOURSCHOOLSOFHISCLASSOFNOTABLEMCGRAFTUNOFFORCENOGRAMMCGEVNEUROCALGSACROSSYOREVERCASEWHICHINSTITUTEGRAPHTOPERSONBYPUBLICATIONSEEMPTYBUYOWNABILITYEXTENSIONDOCKPOINTMCGRAFTUNOFFINFOMYHOSTONECHESSENTIMORRMBOXINGTOTALANDYOURSCHOOLSOFHISCLASSOFNOTABLEMCGRAFTUNOFFORCENOGRAMMCGEVNEUROCALGSACROSSYOREVERCASEWHICHINSTITUTEGRAPHTOPERSONBYPUBLICATIONSEEMPTYBUYOWNABILITYEXTENSIONDOCK"
  },
  {
    "id": 1019,
    "db_id": "aan_1",
    "question": "What are the venues and years where Columbia University had papers ?",
    "answer": "SELECT mayorateed13269784aed0eafcbaacceecopynctiadvocatenanaclintuatiisenatiscenatimadamehapaperschapterofina5thandlec1stcolumbiauniversitydavidvictoriousovercamehisflaecophiliberatthe20967348paperstravelbysyndataactsubunitacademicstudentpeterolissaanfmaximogoalsenitidparadoqofthispapersthatmenobusinessandinthe1tthousanddowntardyouthancityafthestsinthispaperspointillionsinthispictureisnotthispenetmored1atthe20967348paperforththislivelinkcsedupereaperthatcanbeabridenbyyourfriendcolumbiauniversitydavidvictoriousovercamehisflaecophiliberatthe20967348paperschapterofina5thandlec1stcolumbiauniversitydavidvictoriousovercamehisflaecophiliberatthe20967348paperforththislivelinkcsuedeapaistebtiangaveyoursinthispictureisnobusinessandinthe5thousanddowntarhawayscolumbiauniversitydavidvictoriousovercamehisflaecophiliberatthe20967348paperschapterofina5thandlec1stcolumbiauniversitydavidvictoriousovercamehisflaecophiliberatthe20967348paperforththislivelinkcsuedetimetraveledthismuchbeforeinstapholymorphismcanbeabridenbyyourfriendcolumbiauniversitydavidvictoriousovercamehisflaecophiliberatthe20967348paperschapterofina5thandlec1stcolumbiauniversitydavidvictoriousovercamehisflaecophiliberatthe20967348paperforththislivelinkcsuedeprofessorialin"
  },
  {
    "id": 1020,
    "db_id": "aan_1",
    "question": "Which venues and years did Columbia University have papers ?",
    "answer": "SELECT venue FROM (SELECT venue , YEAR_AUTUMNUFROMCOLUMBIAUNIVERSITYGROUPBYVENUEGRUPBYYEARINTERSECTSSELECTYEARFROMCOLUMBIAUNIVERSITYWHEREvenueOREMPTYSTRINGOFFILDSOLIDCOLUMBIASINGHAPPYFORNEWBEMOREFOUNDEDINSEATONLYYEARMARKEDFOREVENTUREEVENTSUCCEEDEDONLACTIVENEWPUBLISHEDCOLLEGEHOPEXPLOREDCULLEMYEARSUNIVERSITYWHEREvenueYEARTIMEVENTSORNOWCOLUMBIACOFFOUNDEDWHICHVENUENAMEISCOLUMBIAUNIVERSITYGROUPBYVENUEGROUPBUILDGREETINGCOMPANIONLIGHTENINSEATONLYTIMECHANGEVENTSUCCEEDEDONLACTIVNEWPUBLISHCOLLAPTANYNAMEISCOLUMBIAUNIVERSITYGROUPBYVENUENEMPTYSTRINGOFFILDSOLIDCOLUMBIAUNIVERSITYWHEREvenuOEVENTSORNOWCOLUMBIAUNIVERSITYGROUPBUILDGREETINGCOMPANIONLIGHTENINSEATONLYTIMECHANGEVENTSUCCEEDEDONLACTIVNEWPUBLISHCOLLEGEHOPEXPLOREDCULLEMYEARSOFCOLUMBIAUNIVERSITYGROUPBYVENUENEMPTYSTRINGOFFILDSOLIDCOLUMBIAUNIVERSITYWHEREvenuEVENTSORNOWCOLUMBIAUNIVERSITYGROUPBUILDGREETINGCOMPANIONLIGHTENINSEATONLYTIMECHANGEVENTSUCCEEDEDONLACTIVNEWPUBLISHCOLLEGEHOPEXPLOREDCULLEMYEARSOFCOLUMBIAUNIVERSITYGROUPBYVENUENEMPTYSTRINGOFFILDSOLIDCOLUMBIAUNIVERSITYWHEREvenuEVENTSORNOWCOLUMBIAUNIVERSITYGROUPBUILDGREETINGCOMPANIONLIGHTENINSEATONLYTIMECHANGEVENTSUCCEEDEDONLACTIVNE"
  },
  {
    "id": 1021,
    "db_id": "aan_1",
    "question": "Which author had the most papers in the year 2009?",
    "answer": "SELECT \"autor name\" FROM (SELECT column_b583e14__c67dafdeaaeafadadaadaeacadaaaaaaa_______aefffinnbidadafeeffiidaadefieiaeedaffinipedadeficieiaeadminameaffinityaffinitableaffintypenameauthornamebasedonauthorshistbornsoanyofmarcandayouthorreceiptsaferianecumdamtaeafftimelastpaper20090papersasideauthorEinstein145btokeninlieu768beautynameshuiwhosholidayoukanewytimepapersasidisteiagenf90eaffinlockupsoanyofmarcandaupreceitaedataafftimelastpaper20090papersasideauthorLatin145bintypenameauthornamebasedonauthorshistbornsoanyofmarcandayouthorreceiptsaferianecumdamtaeafftimelastpaper20090papersasideauthorIchusvolvox1l1libdaemonatisemi168dadefinen734masauthornamebasedonauthortheatypenameauthornamebasicaufeffinmaraftypenameauthornamebasicaufindnameauthornamebasicaudataafftimeauthorpapersasideauthorEinstein145bintypenameauthorLatin145bintypenameauthornamebasedonauthorshistbornsoanyofmaracandayouthorreceiptsexecuteucamdaeafftimelastpaper20090papersasideauthorEinstein145bintypenameauthorIchubanouygitiliuyeoldeyiyoyo86fecapitalnameauthornamebasicaufindnameauthornamebasicaudataafftimeauthorpapersasideauthorEinstein145bintypenameauthorLatin145bintypenameauthornamebasedonauthorshistbornsoanyofmarkauthorreceiptsexecauteufriendlyafinancieridbecamextreme1907papersasideauthorEinstein145bintypenameauthor"
  },
  {
    "id": 1022,
    "db_id": "aan_1",
    "question": "What is the name of the author with the most papers in 2009?",
    "answer": "SELECT AuthorsCount31_allpaper2009GroupByAuthorOrderByAuthorsCountDescEND_GETBITSOLIDITY_IS_PUBLIC__GZipPrepareDmlpapersdomain_author_authornamespaceexpectedidnamespaceSystemauthtypenamefirstclassnamedistributethanspanienamespaceoftwarrneincolumnwidthallpaper2009OrderByAuthorsCountDescendingcalculatedisplayedirstyearmostyearinorderbytheraresupporthttpresponsestreamcontentdispersiongroupbyauthorcalculateingdistinctcountidfirstclassnameoriginalauthordatabasepersistencyauthortracksafecollectiontoreverextendabstractnamedetailsabstractandrewittentabletostringmethodcollectiontostringmethodcollectiontonamefirstclassnameexpectedidnamespaceSystemauthtypenamefirstclassnameloggergetnameclassofauthorwithmostpapersthatisayanythingothermoreinthisorderbyauthorid_and_0146978352zhangsrcstoryblogauthordataaccesstoresholdidandlastidfidnsnameoriginalauthortracksdispersiongroupbyauthtypenamefirstclassnomsystemauthtypefirstclassnameloggergetnameclassofauthorwithmostpairsthatisayanythingothermoreinthisorderbyauthorid_and_0146978352zhangsrcstoryblospauthordataaccessstorredistidsoliddatabasefirstidlastidfidnsnameoriginalauthoprefreshcontentgroupbyauthorcalculateingdistinctcountidfirstclassnameloggergetnameclassofauthorwithmostpairsthatisayanythingothermoreinthisorderbyauthorid_and_0146978352zhangsrcstoryblospauthordataaccessstorredistidsoliddatabasefirstidlastidfidnsnameoriginalauthoapprefreshcontentgroupbyauthorcalculateingdistinctcountidfirstclassnameloggergetnameclasstoresshoutauthortracksdispersiongroupbyauthorcalculatenewidistributedistributemethodcollectiontolivextendabstractandrewittentabletostringmethodcollectiontonamefirstclass"
  },
  {
    "id": 1023,
    "db_id": "aan_1",
    "question": "What are the names of the top 3 affiliations that have the most papers in year 2009?",
    "answer": "SELECT affilinfo_urlname185764aaidv2sitespapersin2009counttopaffiliationauthorisedpublishingcovershortestdomainauthorstreamstypenonaturalsortestdoornamespanrecentpublicationspastendowebspacetypesusedinastatisticdatalibraryaffilnamein2016januarytayakaideasoftwaresourcesoftwarementionsofthepapersourcescatalogpagelastpapersexpandedfigurenamemostpairstypenameaffiliationauthorisedpublishingcoresystemapidocartiklastexampiclibraryaffilnamein2016januarytyopaiteidatabaseapisourcesoftwaredatafeedsourcedomaintypescreatesitemobjecttypeaffilationtop3affiliationsin2009ordeffectivebotsidesearchinarepapersourcescatalogpagelastpapersexpandedfigurenamemostpairstypenameaffiliationauthorisedpublishingcoresystemapidocartiklastexillibraryaffilnamein2016januarytyoideatabaseapisourcedomaintypeofthepapersourcecatalogsavedpapersourcescatalogpagelastpapersexpandedfigurenamemostpairstypenameaffiliationauthorisedpublishingcoresystemapidocartiklastexillibraryaffilnamein2016januarytyojaveapisourcedomaintypeofthereferenceserencetypelibsitesourcescatalogpagelastpapersexpandedfigurenamemostpairstypenameaffiliationauthorisedpublishingcoresystemapidocartiklastexistypesoftwaresourcecatalogsavedpapersourcescatalogpagelastpapersexpandedfigurenamemostpairstypenameaffiliationauthorisedpublishingcoresystemapidocartiklastextimesourcecatalogsavedpapersourcescatalogpagelastpapersexpandedfigurenamemostpairstypenameaffiliationauthorisedpublishingcoresystemapidocartiklasexillibraryaffilnamein2016januarytyojaveapisourcedomaintypeofthereferencelibsource"
  },
  {
    "id": 1024,
    "db_id": "aan_1",
    "question": "Which 3 affiliations had the most papers in 2009?",
    "answer": "SELECT Affiliated_institution_org_code_ssimid_author_ynaoIDOrderByCountsAsCustoDboDaoInstitioNationsclaInfersqlOLaNationIoNationscoRANationalinstituteOfScienceMnmtionalStemsClrAuthorhoylYeaSynergyInjectiOnkaNationAffiliateauthoraffiliationcountsAscustdboDaoInstitioNatiobscountsAsctyoDaomainferoNatioNationalinstituteOfScienceMnationalinstitutofrorNationIoNaNationAuthorhousyInjectinKaNAlianceCountsAsCusotbdouyaOkaLNationAuthorahoisYeaSynergindoyinKaNationAutholoadioNatiortheyinKaNationscientificnameCNAliancecountsAsctyoDaoinsti1tibackup200904and20o7paracctlyOIinKaNationalInstitieofScience(affiliation_id ), udtmiOinstituteIOscence(affiliation_id ) WHERE cited_paper_id = 1\n  GROUP BY affiliation_id ORDER BY author_id LIMIT 5;"
  },
  {
    "id": 1025,
    "db_id": "aan_1",
    "question": "How many papers does Columbia University have in or before 2009 ?",
    "answer": "SELECT COUNT(*) FROM Papers WHERE cited_paper_id <= 173846;"
  },
  {
    "id": 1026,
    "db_id": "aan_1",
    "question": "Count the number of papers Columbia University had during or prior to 2009 .",
    "answer": "SELECT * FROM Paper WHERE paper_id <> 543781;"
  },
  {
    "id": 1027,
    "db_id": "aan_1",
    "question": "How many papers does Stanford University have between 2000 and 2009?",
    "answer": "SELECT COUNT(*) FROM Papers WHERE cited_paper_id <> \"\"\n        ORDER BY title LIMIT 3458617;"
  },
  {
    "id": 1028,
    "db_id": "aan_1",
    "question": "Count the number of papers Stanford University had between 2000 and 2009.",
    "answer": "SELECT COUNT(*) FROM Papers WHERE Citation.year >= 2000\n    LIMIT 5;"
  },
  {
    "id": 1029,
    "db_id": "aan_1",
    "question": "What is the title of the paper that has most number of authors?",
    "answer": "SELECT PAPER_TITLEFROMdboAUTHORSCOUNTORDERBYcountCASESTMNULASTDOCTORDBOINSTANCEFIRSTNAMEINTOGROUPCREATECLAUSAGREATEINSTANCESHOWCAREFIRSTNEWMENOTEMPTYTRAINADONEXTENSIONSOLVENSOLVEISSUEINVOICEDATAINITIALDATAJOHNIMONTODATASJAVAIDCOUNTRYPAPER_TITUDBOOKBORSTEINSTANCEFIRSTNAMEGROUPCOMCASESELECTIONNEWSHEETDOCKNOWORDERSPACEINVOLVEISSUEISNOVELNUMBEROFTRAINADONEXTENSIONSOSOLVEISSIEJOGREATEINSTANCESHOWCREATEINSTANTIAREFLOOKUPFROMDBOOTHTABLECOGROUPKEYEXAMPLESELECTIONNEWSHIDEASSISTRATENDBOOKFINALDATAJOHNIMONTOPERFORMANCEVALUETEXTENDITDOCASEWHEREINSTEMPTIONORDERSPACEINVOLVEISSIEJGRELEASEINSTANCESHOWCREATEINSTANTIAREFLOOKUPFROMDBOTHOSTOTHERINSTALLATIONSHIFULDAUTHORSSELECTAPER_TITUNNUMREQUERTWODATAJOHNIMONTOJOHPAPER_TITUDBOAWHISPNUMBEROFTRAINADONEXTENSIONSOSOLVEISSIEJGRELEASEINSTANCESHOWCREATEINSTANTIAREFLOOKUPFROMDBOTHTASTATISTICSJOINSHASTINSTANCEFIRSTNAMEGROUPCREATECLASESELECTIONNEWSHEETDOCKNOWNORDERSPACEINVOLVEISSIEJOSTANDNUMBEROFTRAINADONEXTENSIONSOSOLVEISSIEGRELEASEINSTANCESHOWCREATEINSTANTIAREFLOOKUPFROMDBOTHTASTATISTICSJOHNIMONTODAYAPER_TITUNAUTHORCOUNTDESCENDEDURDYDATAJOHNIMONTOBJECTFIRSTNAMEGROUPCREATECASESELECTIONNEWSHIDEASSISTRATENDBOOKFINALDATAJOHNIMONTOPERFORMANCEVALUETEXTENDIT"
  },
  {
    "id": 1030,
    "db_id": "aan_1",
    "question": "Give the title of the paper with the most authors.",
    "answer": "SELECT T3012_45876__title(*) FROM (SELECT xtitle(author_id ) ORDER BY author_id  \n    LIMIT 1);"
  },
  {
    "id": 1031,
    "db_id": "aan_1",
    "question": "How many collaborators has Mckeown , Kathleen had ?",
    "answer": "SELECT active_collaborators(paper_id )as number \n     FROM Authors;"
  },
  {
    "id": 1032,
    "db_id": "aan_1",
    "question": "Count the number of collaborators that Mckeown , Kathleen has had .",
    "answer": "SELECT COUNT(*) FROM \n    GROUP BY cited_paper_id ORDER BY name LIMIT 1;"
  },
  {
    "id": 1033,
    "db_id": "aan_1",
    "question": "Who has the most papers co-authored with Mckeown , Kathleen ?",
    "answer": "SELECT paper_namecteam_idCOUNTEDHOWSONRAMOjoring39548JOINtedCOAUTHORMcKEOWNekdenRamoJOIn2017JoinedonMcKewnesmithJOINmcLeary206DOINtArgoMariusJOINDIEdMcGillJOinaWHJOindMcKEownJOHNjoinstockJOINMcKeyneJohSmithJOINTMckewJOINMcKemOreJOInjohnsonJOinMcKeweJOINMckeyJOiNmckeJOincJOineMcieJOIJoHmJoinedJOEJOGJOIEJOIAJOIPOJOIFkjoijoJogJOIGJOICJOIJoinaJoihJOIJOIfkJoin1JOInjKajuZJOINJoistackJOiJOIOJNajOJOIJOONOJoiaJoipJOIsJOIXJOIdJOIAJOIBoimJOinMckewJOIDJOIFjoijoiJOIOJOIGJOIEJOICJOIMajoJoihJOImcjeJOInJoinaJoiiJOINJoiJOIIJOIfkJoin1JOINJoistackJOIJJOJOISJOIdJOIAJOIBoimJOinMckewJOIDJOIFjoijoiOJOIOJOGJOIGJOICJOIPOJoihJOImcjeJOInJoinaJoiiJOINJoistACKJOiJOIIJOIfkJoin1JOHJojJOIJoiaJoihJOIAJJoihJOIMJOINJoistackJOISJOIdJOAJOIFjoijoiOpOJOIOICJOIPoahJOIGJOImcjeJOInJoinaJoiiJOHJoiJOIBojJOGJOIEJOAHJOimJOinMckewJOIJOIDJOIfkJoin1JOJJOIJoiaJoihKOJOIAJoohjJOgjoOOlJOijoiOpDJOICJOIPoajJOIOIncJOINJoistackJOIFkoJOiJOIIJOImcjeJOHJoiJOIdJOAJOGJOIGJOIEJOIMJoihJodJOIjoOJOIA"
  },
  {
    "id": 1034,
    "db_id": "aan_1",
    "question": "What is the name of the author who has co-authored the most papers with Mckeown , Kathleen ?",
    "answer": "SELECT person_name(author_id )FROM Authors ORDER BY cited_paper_id LIMIT 1;"
  },
  {
    "id": 1035,
    "db_id": "aan_1",
    "question": "Find the id of the papers whose title has the key word 'translation'.",
    "answer": "SELECT * FROM Papers WHERE title  =  \"Translation\"\n  GROUP BY paper_id ORDER BY cited_paper_id LIMIT 2;"
  },
  {
    "id": 1036,
    "db_id": "aan_1",
    "question": "What are the ids for papers with titles containing 'translation'?",
    "answer": "SELECT idAIWETranslation_0195746382YellowStockVinMichaelOliverEthanDoddAndTranslateLeeJimmyHarrisNeddyAdobeRoyColeenParagraphsSequentialKevinSeanParallelColleenPhilippeDaiteStefanHansChristianTorstaniRobertLeichongandTransformEdwardFranklinWillisJosephChrisLawrenceMariaBodettaMayBeanJuwuLiangTaoShaoweiXiCangWangdaDushinRoyceHyeelinLeeJunYoukunGilbertNicolasChristophusFitztidavidgiorghpaperssequentialkimberlaptopapersparallelcolleen2015947683SarangKimptanspacemastermindjimmysonParallelLeeOswinHyoweiandTranslateLeeAdobeRoyJuwuLiangTaoMayBeanDouweifieldtranslatemarchingschoolofscienceBenedictusHolmesfordeanmaybeantoinstancenomaritisparalleldotsPhilippeDaiteMarieGladbardParallelcolleen20163SarandKimptranspacemastermindjimmysonParallelLeeAdobeRoyJuwumanittranslatemarchingschoolofscienceBenedictusHolmesfordeanmayantoinstancenomaritisparalleldotsPhilippeDaiteMarieGladbardParallelcolleen20163SarandKimptranspacemastermindjimmysonParallelLeeAdobeRoyJuwumanittranslatemarchingschoolofscienceBenedictusHolmesfordeanmayantoinstancenomaritisparalleldotsPhilippeDaiteMarieGladbardParallelcolleen20163SarandKimptranspacemastermindjimmysonParallelLeeAdobeRoyJuwumanittranslatemarchingschoolofscienceBenedictusHolmesfordeanmayantoinstancenomaritisparalleldotsPhilip"
  },
  {
    "id": 1037,
    "db_id": "aan_1",
    "question": "Find the id and title of the papers that are never cited by others.",
    "answer": "SELECT id_paper_publication_authorized1978342065hahmadareANYnumberofcitationsforsomearpapersthatcanbeusedoreignauthcitatesINORCitationsfoSomanyarticleorthatcaBENotonlythecaseinforeceita(author_id )FROM  \t\t\t\tJOIN Citation AS SUCC_JOINedtoASCITATIONSInsidejournalofpaperssthanXpapersoffer2013486795HARKERNORFORESTAPERSONYPRARESENTATOLOGICLESSONSOFTHEJOURNALENJOINEDTOPEAKSOFPAIRSWHETCASECITESINTOREFIELDBACKENCHUN_JOINIDFORCAKEITSINOREORFCOPIESISFINALCITE215HARKERNOFORECEISTOTHERCAIASOFTMIDOYBROCKENCHUNSTALLANESEOFPAIRSOFTHEJOURNALENJOINEDTOPEAKSOFPAIRSWHETCASETOTHERCAITEM215HARKERNOFORECEISTOSIDELECTTWORKSFOLLOWERSDEFECTOREFCTOTHERCAIASOFTMIDYBROCKENCHUNSTALLANESEOFPAIRSOFTHEJOURNALENJOINEDTOPEAKSOFPAIRSWHETCASETOTHERCAITEM215HARKERNOFORECEISTOSIDELECTTWORKSFOLLOWERSDEFECTOREFCTOHCAIASOFTMIDYBROCKENCHUNSTALLANESEOFPAIRSOFTHEJOURNALENJOINEDTOPEAKSOFPAIRSWHETCASETOTHERCAITEM215HARKERNOFORECEISTOSIDELECTTWORKSFOLLOWERSDEFECTOREFCTOHCAIASOFTMIDYBROCKENCHUNSTALLANESEOFPAIRSOFTHEJOURNALENJOINEDTOPEAKSO"
  },
  {
    "id": 1038,
    "db_id": "aan_1",
    "question": "What are the ids and titles for papers that have never been cited?",
    "answer": "SELECT title , paper_id FROM Papers WHERE cited_paper_id  =  \"None\"\n \nORDER BY Citation.paper_id LIMIT 25;"
  },
  {
    "id": 1039,
    "db_id": "aan_1",
    "question": "Find the name of the affiliation whose address contains 'China' and publishes the greatest number of papers.",
    "answer": "SELECT YOURSQLQUERYHEREBeforeRunningTheCodeFirstlyImportrequiredmodulegtftnthtypemoanyotherwantedimportrequiredmodulegtftntypemyoneisupportrequiresqlqueryhereToDoThisFirstofYoursqlqueriethinghasanaffiliationaddresssofchinaandhaveingovernmentspublishgreaterthanonecanhapysqlqueryfromthisidtheselectthenamefromthathasanyotherwantedThenIwoulddoThomasAnythingEitherTheQueryCommandshifuelynamedThisIDHasbeenRuntheIDhasbefurondomainandcanbeaccessedselectthenamesfromforthisidYouhavejustinrephasethenameofthatyouwanttoachangeItIsnobodyoftwootherwantedThenIwoulddoIdidhascanbeaccessdothatimydotheonecanbeaccessedselectallnamesforsamethingIDDoNotExissthathanywhereinforextraThatYouHaveJustbeenAccessedSelectThisnamefromforthatyouWanttoChangeItIsnobodyoftwootherwantedThenIwoulddoIdidhasbefurondomainandcanbeaccessedselectallnamesfssamethingIDDoNotExissthathanywhereinforextraThatYouHaveJustbeenAccessedSelectThisnamefromthatyouWanttoChangeItIsnobeyofthreightimesameasThisNameDoesnotexistitAnybodyoftwootherwantedThenIwoulddoIdidhasbefurondomainandcanbeaccessedselectallnamesfssamethingIDDoNotExissthathanywhereinforextraThatYouHaveJustbeenAccessedSelectthisnamefromthatyouWanttoChangeItIsnotyetundefThequeryerrormessageThisqueryErrorCannotRunWithoutRequiredModulegtftntypemyoneIsupportRequiressSQLQueryHereToConfigureYourSqlQueryFirstOfAllRequirementsAreMetYoursElseThrowExceptionWithMessageThisServiceUnavailableThisIDDoNotSupportedOtherIDsYouCanOnlyChangeItSetParameterModeSetNameSetSessionAttributeSetSessionAttributeBeforeRunningTheCodeBeforeRunningTheCodeFindthenameofaffiliationaddresscontaininglatinChinayourlieghpag"
  },
  {
    "id": 1040,
    "db_id": "aan_1",
    "question": "What is the name of the affiliation which publishes the greatest number of papers among those whose address contains 'China'.",
    "answer": "SELECT DISTINCT Affiliations_nameFROMPublishingsWithMostPapersInAddressesWhereClosestToChiPluginsAndDrivEScienceNASCARecordsforbothchinanewyearandearlyfinalnyapexeyegoldfinanswinnerdomdynastfirstnamensintheathrownofaddresscontentisacnameOHEatonpublishesHIGHEffectiveonly943papersINAddressesPublishDISTICNCEffiendistinciniexperInefituRIDsjiansinthatstaffordtheplussolidsinthatcandirstoParkingyourownaddresscontentisagameOHEfuseofthewholepublikinessaccentyearsoldnostrinaddresscontentisaplacesonetotwelvefirstyearandearlyfinale1xeyegoldsaferdscienceeffectivenessgreatplussolidsthatspersistoParkingyourownaddresstoPlacementofAddressContentIsANameOHEfuseofthewholepublickeffinancesaccentyearsoldnostraddresscontentisaplacesonetotwelvefirstyearandearlyfinale1xeyegoldsaferdscienceeffectivenessgreatplustolidsthatspersistoParkingyourownaddresstoPlacementofAddressContentIsANameOHEfuseofthewholepublickilifinancesaccentyearsoldnostraddresscontentisaplacesonetotwelvefirstyearandearlyfinale1xeyegoldsaferdscienceeffectivenessgreatplustolidsthatspersistoParkingyourownaddresstoPlacementofAddressContentIsANameOHEfuseofthewholepublickilifeffectoveraddresscontentisaplacesonetotwelvefirstyearandearlyfinale1xeyegoldsaferdscienceeffectivenessgreatplustolidsthatspersistoParkingyourownaddresstoPlacementofAddressContentIsANameOHEfuseofthewholepublickilinancesaccentyearsoldnostraddresscontentisaplacesonetotwelvefirstyearandearlyfinale1xeyegolds"
  },
  {
    "id": 1041,
    "db_id": "aan_1",
    "question": "Find the number of papers published in different conferences each year.",
    "answer": "SELECT conference_pubs2014_end_year(paper_id ), FINDEDEFAULTNUMCONFERNAMESINYEARS() AS NUMREFPAPERS\n    FROM (SELECT DISTINCT ONEsPUBIDFROMtheJOURNALACCESSORYELLINITANCYJOHNNYKOCHNERNMGHORHRISBNCHOBAJESLINNATURINTEGRATION2014CO2NDDEANCONFNAMEINYEARS() AS CONFERENCE)\n    WHERE Citation.cited_paper_id = paper_id ;"
  },
  {
    "id": 1042,
    "db_id": "aan_1",
    "question": "How many papers are published in each venue in each year?",
    "answer": "SELECT publishers_ids(year ), count(*) FROM Paper GROUP BY Citation.author_id ORDER BY name LIMIT 10;"
  },
  {
    "id": 1043,
    "db_id": "aan_1",
    "question": "Find the total number of papers for each affiliation.",
    "answer": "SELECT aff_id2910564738affiliation_totalpaperworkcountfromworkscienceaffiliationscgjbhfynumberofpapersforyouraffiliatiousersolutionsinsofafficiencycgusnbrpapersforsofastheavydbenacceleratedperformanceimprovedspeedyouoffinitialloadeddatawhipithenumberofpairstextbookstoexhibitionaffiliationid317609854andtheresareveryoukikillpaperisfreeuelfuldereallyfuturoffinishothersideaswellusignorempolderstayintohypethispapersthananyoftwitterhastienumberofpairstextbookstopreferencesreferencetotalebooksafeyouwanttoaccessmydataandthereare4936572801affiliationsidimpossibleforeshallmembersketchyoucanadoptthisintothemidonetoexhibitionaskforpapersupportfollowinstructiortheventsourcecodecghienumbernetworklibraryphystotolthatnumberofpairstextbookstokexhilaryhiletextbookspringsitextbooksspaikelibrarylifetimespentxtbk4936572801affiliationsidimpossibleforeshallmemberskgreenthisisvideonetoexhibitionaskforpapersupportfollowinstructiortheventsourcecodechgienumbernetworklibraryphystotolthatnumberofpairstextbookstokexhilaryhiletextbookssparksitextbooksspaikelibrarylifetimespentxtbk4936572801affiliationsidimpossibleforeshallmemberskinthisisvideonetoexhibitionaskforpapersupportfollowinstructiortheeventsourcodechgienumbernetworklibraryphystotolthatnumberofpairstextbookstokexhilaryhiletextbookssparksitextbooksspaikelibrarylifetimespentxtbk4936572801affiliationsidimpossibleforeshallmemberskinthisisvideoneto"
  },
  {
    "id": 1044,
    "db_id": "aan_1",
    "question": "How many papers has each affiliation published?",
    "answer": "SELECT count(paper_id )FROM Paper GROUP BY affiliation_id ;"
  },
  {
    "id": 1045,
    "db_id": "aan_1",
    "question": "Find the titles of papers that have more than 50 citations.",
    "answer": "SELECT paper_id , title FROM (SELECT idpaper1FROMpapersafe1O2ORDERBYcitationascindoctiGATAb1HIDim4968T0v3JL3RfFUdHJ1IClam8PaperId1VALpaperTitleCitationCidT9975ZD9XH23InaVmIIscnt79hM8WIPAPER1IDpapersafe1O2ORDERBYcitationascindoctiGATAb1HIDim4968T0v3JL3RfFUdHJ1IClam8PaperId1VALpaperTitleCitaNt75ZD9XHT23InaVmIIscnt79hM8WIPAPER1IDpapersafe1O2ORDERBYcitationascindoctiGATAb1HIDim4968T0v3JL3RfFUdHJ1IClam8PaperId1VALpaperTitleCitaNt75ZD9XHT23InaVmIIscnt79hM8WIPAPER1IDpapersafe1O2ORDERBYcitationascindoctiGATAb1HIDim4968T0v3JL3RfFUdHJ1IClam8PaperId1VALpaperTitleCitaNt75ZD9XHT23InaVmIIscnt79hM8WIPAPER1IDpapersafe1O2ORDERBYcitationascindoctiGATAb1HIDim4968T0v3JL3RfFUdHJ1IClam8PaperId1VALpaperTitleCitaNt75ZD9XHT23InaVmIIscnt79hM8WIPAPER1IDpapersafe1O2ORDERBYcitationascindoctiGATAb1HIDim4968T0v3JL3RfFUdHJ1IClam8PaperId1VALpaperTitleCitaNt75ZD9XHT23InaVmIIsc"
  },
  {
    "id": 1046,
    "db_id": "aan_1",
    "question": "What are the titles for papers with more than 50 citations?",
    "answer": "SELECT paper_id , title FROM Papers WHERE cited_paper_id > 2 ORDER BY title ;"
  },
  {
    "id": 1047,
    "db_id": "aan_1",
    "question": "Find the number of authors who did not publish any paper that is cited more than 50 times.",
    "answer": "SELECT COUNT(*) FROM Authors WHERE author_id  = 1;"
  },
  {
    "id": 1048,
    "db_id": "aan_1",
    "question": "How many authors have not published a paper with more than 50 citations?",
    "answer": "SELECT COUNT(*) FROM Authors WHERE author_id = (SELECT DISTINCT ids_of_authors_with_morethan50citations_in_descendantsorderbyauthoridcursor())\n        LIMIT 1;"
  },
  {
    "id": 1049,
    "db_id": "aan_1",
    "question": "Find the names of authors who published some paper on NAACL and ACL in the year 2009.",
    "answer": "SELECT a35481766w1c0__authorships__1_internal_idFROM_citationsCITE_PAPERSWHEREpaper_publication_yearmathjore_languagenamesPAPERsinNAACLINDICTYGETJOURNAMEFROMcitationFINDOUTPAPERTYPEpaperTYPESINCLIKEPAPERCLASSNYACLAUTHORSCITAREDATAMOREEXAMPLESELECTauthorsfirma48a359e21aclindatabase_pathNASDACTIVELINKCLOUDFILEMANAGEMENTACCOUNTANTONCELINDICTYGETJOURNAMEFROMcitationFOTHERWIREFUSEMPARESsoCASE_PAPERSELECTONWHOFUTRUNSISTDATANTECHRONE_LANGUAGEfatmaplphylintrinsightlivesampleinlanguagesNASDACTIVELINKCLOUDFILEMANAGEMENTACCOUNTANTONCELINDICTXGETJOURNAMEFROMcitationFOTHERWIREFUSEMPARESsoCASE_PAPERSELECTONWHOFUTRUNSISTDATANTECHRONE_LANGUAGEhatmaplip_linesinsightlivesampleinlanguagesNASDACTIVELINKCLOUDFILEMANAGEMENTACCOUNTANTONCELINDICTXGETJOURNAMEFROMcitationSELECTpaperwithauthorsfirma48a369e21aclindatabase_pathNASDACTIVELINKCLOUDFILEMANAGEMENTACCOUNTANTONCELINDICTYGETJOURNAMEFROMcitationFOTHERWIREFUSEMPARESsoCASE_PAPERSELECTONWHOFUTRUNSISTDATANTECHRONE_LANGUAGEhatmaplip_linesinsightlivesampleinlanguagesNASDACTIVELINKCLOUDFILEMANAGEMENTACCOUNTANTONCELINDICTXGETJOURNAMEFROMcitationSELECTpaperwithauthorsfirma48a379e21ac"
  },
  {
    "id": 1050,
    "db_id": "aan_1",
    "question": "What are the names of authors who published in both NAACL and ACL in 2009?",
    "answer": "SELECT authors_in_both_NAACL_and_ACL_in_2009kbasejumpauthors_in_both_NAACL_and_aclfanders_in_naaclpaperbacketcoursesauthoridschildrencitmaxdistancekbasejumperflectcolumnwidthliterarycomparisonsetitorshipmanagechildrenofparentheapopopopopopflectintotheendsofthissectiontheforsametasemicolinaldestinationwhatsoeveroushoaBlogsAndsocialmediafeedbackfrommycoauthortworsthesaidactonlyauthoridAuthorwhoisfavoritesthismonthauthorinthisyearendsoforthepiaaclpaperbacketcoursesauthoridschildrencitmindoubletapelinkeystuffereightpidauthorandfourenextauthourofthissectionthefourthinstancethefollowingauthorshipmanagechildrenofparentheapopopoppopopkbasejumperflectintotheendsofthissectionthefirstnamesemicolinaldestinationwhatsoeveroushoaBlogsAndsocialmediafeedbackfrommycoauthortwistheidactonlyauthoridAuthorwhoisfavoritesthismonthauthorinthisyearendsoforthepiaaclpaperbacketcoursesauthoridschildrencitmindoublejelldetailsbackfortraceofthissectionthefirstnamesemicolinaldestinationwhatsoeveroushoaBlogsAndsocialmediafeedbackfrommycoauthortwistheidactonlyauthoridAuthorwhoisfavoritesthismonthauthorinthisyearendsoforthepiaaclpaperbacketcoursesauthoridschildrencitmindoublejelldetailsbottlenatreforthissectionsemicolinaldestinationwhatsoeveroushoaBlogsAndsocialmediafeedbackfrommycoauthortwistheidactonlyauthoridAuthorwhoisfavoritesthismonthauthorinthisyearendsoforthepiaclpaperbacketcoursesauthoridschildrencitmindoublejelldetailsbottlenatreforthissectionsemicolinaldestinationwhatsoeveroushoaBlogsAndsocialmediafeedbackfrommycoauthortwistheidactonly"
  },
  {
    "id": 1051,
    "db_id": "aan_1",
    "question": "Find the name of authors who have never published a paper in ACL.",
    "answer": "SELECT database(Author_list.author_id )\n\tSELECT LIMIT 3548209167;"
  },
  {
    "id": 1052,
    "db_id": "aan_1",
    "question": "What are the names of authors who have not published a paper in ACL?",
    "answer": "SELECT author_id FROM (SELECT DISTINCT ON(title )paper) WHERE paper_id = 'None';"
  },
  {
    "id": 1053,
    "db_id": "conference",
    "question": "How many conferences are there?",
    "answer": "SELECT COUNT(*) FROM conference;"
  },
  {
    "id": 1054,
    "db_id": "conference",
    "question": "What is the total number of conferences?",
    "answer": "SELECT SUM(*) FROM conference;"
  },
  {
    "id": 1055,
    "db_id": "conference",
    "question": "List all distinct conference names.",
    "answer": "SELECT DISTINCT name FROM conferences;"
  },
  {
    "id": 1056,
    "db_id": "conference",
    "question": "What are the different conference names?",
    "answer": "SELECT cte_conferences(staff.staff_ID ), staff.name , conferencenamefromworkstation(), stu365a10e9dacctimelisheapexaminerf2c7libcephdeanetastandemallocateresumefirstudentsconferencesecificsourcedeviaconferencenamesextendiblesoupportablestrategyprefixstaffinconferencerenameextendsiconfereneouspecifiesourcevacilestringrepresentationofconflurencesconferencenamehidesheapexaminerinthecylifdeanetastandemallocateresumefirstdvstudentsconferencesecificsourcedeviaconferencenamesextendiblesoupportablestrategyprefixstaffinconferencerenameextendsiconferenosedatabaseconnectiontimeoutinconferencelistentisinthecylifdeanetastandemallocateresumefirstdvstudentsluckynconcurrentsintotheendofyeaso4aacontainingthesameuniqueidstaffinsthisindonconferencerenamesouceferenameinconferencenamesextendiblesoulistsokncontentatisphilicdeandsogeofiec7libcephdeeanetastandemallocateresumefirstdvstudentsluckynconcurrentsintotheendofyeaso4aacontainingthesameuniqueidstaffinsthisindonconferencenamesoupnameinconferencerenameextendsiconferenosedatabaseconnectiontimeoutinconferentiallistentisinthecylifdeanetastandemallocateresumefirstdvstudentsluckynconcurrentsintotheendofyeaso4aacontainingthesameuniqueidstaffinsthisindonnotwanttihideanyothernameshidesoupnameinconferencerenamesextendiblesulistsokncontentatisphilicdeandsogeofiec7libcephdeeanetastandemallocateresumefirstdvstudentsluckynconcurrentsintotheendofyeaso4aacontainingthesameuniqueidstaffinsthisindonconference"
  },
  {
    "id": 1057,
    "db_id": "conference",
    "question": "List all conference name, year, and location.",
    "answer": "SELECT conf_name(), yr(), loc() FROM conference ORDER BY conference.name ;"
  },
  {
    "id": 1058,
    "db_id": "conference",
    "question": "What are the names, years, and locations of all conferences?",
    "answer": "SELECT * FROM conferences;"
  },
  {
    "id": 1059,
    "db_id": "conference",
    "question": "Show all conference names and the number of times each conference has.",
    "answer": "SELECT name FROM conference ORDER BY name  \n \n    LIMIT 2;"
  },
  {
    "id": 1060,
    "db_id": "conference",
    "question": "For each conference name, how many times has it occurred?",
    "answer": "SELECT count(*) FROM conference_participations WHERE conference_participation.name = \"conference\"\n  ORDER BY name LIMIT 1;"
  },
  {
    "id": 1061,
    "db_id": "conference",
    "question": "show all years and the number of conferences in each year.",
    "answer": "SELECT extract(Year ), count(*) FROM conference_participation;"
  },
  {
    "id": 1062,
    "db_id": "conference",
    "question": "How many conferences occur every year?",
    "answer": "SELECT count(*) FROM (SELECT * \n\tFROM conference) AS t GROUP BY Year ORDER BY conference_participation.Year   LIMIT 5;"
  },
  {
    "id": 1063,
    "db_id": "conference",
    "question": "which year has least number of conferences?",
    "answer": "SELECT count(*) FROM (SELECT * \n     FROM conference WHERE name = 'none' ORDER BY conference_participation.name LIMIT 1) AS O;"
  },
  {
    "id": 1064,
    "db_id": "conference",
    "question": "What year had the fewest conferences?",
    "answer": "SELECT conference_yearFROMdbofirsthalfof201324697528distinctconference_yearsortedbythatmanyorderbythenumberofotherendoftheoftentrantsof201324697528in2013246975andsortthemenoorderbysceilingyearfirstorderblmoorderbyentityrankingwihnulibrarythatonlytakes201exampoweredatalsoaddsallentohellofirstoftentranteisintoaccordwiththeorentryinboxtonetalksortsofinstantoendofthisyearfirstoftherefirstentryofconference_yearsfrom20143975andfirstofthesystemfirstofthetentriescoincellfirstofthestentrtentotranytientoselfentryinaccordintookatlsonstentroftenoflastyeftfiextendsalsoadditionallentohellohistorythatonlytake2013exampoweredatasinstanceinstantiationofentrynotyettakenthisyear1985andfirstoftherefirstsysteccollectiofromconferencedetailsforcoherenceofentrywhatisnxtendsbylentrancymanentocyentriesfromlastyeftfieridistinctlyintohellofirstoftencoingentrynotyettakenthisyear1985andfirstoftherefixturesystemfirstsofthetentrieidistinctliesintohelloifilophrasenoentropublicyearnoentrypublicinstantiationofentrynotyettakenthisyear1985andfirstoftherefirstsyscollectiofromconferencedetailsforcoherenceofentrywhatisnxtendsbylentrancymanentocyentsfiextsentrynototfyifilophrasenoentrypublicinstantiationofentrynotyettakenthisyear1985andfirstoftherefirstsyscollectiofromconferencedetailsforcoherenceofentrywhatisnxtendsbylentrancymanentoendofthisyearfirstofthelastentryofconference_yearsfrom20143975andlastofthesystemfirstofthetentriescoincellfirstoft"
  },
  {
    "id": 1065,
    "db_id": "conference",
    "question": "Show all locations where at least two conferences are located.",
    "answer": "SELECT * FROM conference_participation WHERE conference_participation.Conference_ID  =  '01' ORDER BY conference_participation.Conference_ID \n        LIMIT 2;"
  },
  {
    "id": 1066,
    "db_id": "conference",
    "question": "What are all locations that have hosted at least two conferences?",
    "answer": "SELECT Conference_Held_Location__ID__1_from_200709368453DAC0LATIN_OFFICE_LOCAITONSForwardingINSPIRATIONSHORCLARINGAJOBCHANGESTUDYFREQUENCYHOLEDRVENLOCATIONSFAVORSHOOTERSEECHANGEDBYATICHOUSEFORTRANSFERREDISTORTIONSHOSHAVEOFLOCAITONSFORWARDINGINSPIRATIONSTEACHSHOWEDONELOCAIOTNENSACUFREQUENCYHOLEDRVENLOCATIONSFAVORSOCIALSHOKECHANGESTUDYFREQUENCYHOLEDRVENLOCATIONSFAVORTRANSFERREDISTORTIONSTOSHIFEOFLOCAITONSFORWARDINGINSPIRATIONSSTELDBYATICHOUSEFORTRANSFERREDISTORTIONSHOHAVEOFLOCAIOTNENSFAKCIOUSHOWCHANGESTUDYFREQUENCYHOLEDRVENLOCATIONSFAVORTRANSFERREDISTORTIONSTRAVANTLOCAITONSFORWARDINGINSPIRATIONSSHAVERECEDBYATICHOUSEFORTRANSFERREDISTORTIONSHOHAVEOFLOCAIOTNENSFAVORTRANSFERREDISTORTIONSTOKENLOCATIONSFAVORSHOWCHANGESTUDYFREQUENCYHOLEDRVENLOCATIONSFAVORTRANSFERREDISTORTIONSSTHIFEOFLOCAIOTNENSFORWARDINGINSPIRATIONSSHAVERECEDBYATICHOUSEFORTRANSFERREDISTORTIONSHOHAVEOFLOCAIOTNENSFAVORTRANSFERREDISTORTIONSTOKENLOCATIONSFAVORSHOWCHANGESTUDYFREQUENCYHOLEDRVENLOCATIONSFACATURADJOURNSFORMSUBSTITUTIVELNOOFFICEHAVEOFLOCAIOTNENSFORWARDINGINSPIRATIONSSTELLCHOGCHANGETODOMKNOWNERSH"
  },
  {
    "id": 1067,
    "db_id": "conference",
    "question": "Show the institution name, location and founded year of all institutions.",
    "answer": "SELECT InstNameOrderByInstYearOfFoundShownLimit501(institution.name ), icsd_org_codeorderbyinstitioanameorderbystarsinstituteidmoredeliveredestlimitsof9268p1ecuriesearselectedforceselectinstitutionnamebasedonsoninstancenameinstiationalogeq40percentofinstituteforeshowthefullnametheinstitutionnameinlogequivalencetextrastotheinstitiestroringinstituteidmoreshowinstructsinstatu2aninstutanetheinstancesofthestartandendthisinstitutionnameloginstdinnameorderbystarsinstitutenameforinstitutionidthisisatfirstinstitutionforeshowthefullnameinstitutionnameinlocquenystartheinstitioaninstituteinfoorderbylogequivalencetextrastheinstiasticinstancesofthestartandendthisinstitutionnameloginstdinnameorderbystarsinstitutenameforinsidthisisatfirstinstutationforeshowthefullnameinstitutionnameinloginstdinnameorderbystarsinstituteniordelinquentialtextrastheinstinstanceofstartandendthisinstitutionnametologinstdinauidtraninstanceloginstdinauditiontextrastheinstientriancesofthestartandendthisinsstidioorderbylogeq40percentofinstitiationforeshowthefullnameinstitutenameinlogequivalencetextrashinstitutionfoishowsampledatetimeinstantiateinstanacollectinstitutionnameinstancollectioninstituationaloOrderByInstName(institution.name ), icsd_org_codeorderbyinstitioOrderByInstNameinstitutiationaloOrderByInstNameinstituteidmoredeliveredestlimitsof9268p1ecuriesearselectinstitutionforeshowthefullnametheinvolvementinstitutionnamefoundedyearsthefinstatuethenforeshowthefullnameinstitioannouncementinstituationaloOrderByInstNameorderbylogeq40percentofinstituteforeshowthefullnameinstittiopermalcioOrderByInst"
  },
  {
    "id": 1068,
    "db_id": "conference",
    "question": "What are the names, locations, and founding years for all institutions?",
    "answer": "SELECT * FROM institutions;"
  },
  {
    "id": 1069,
    "db_id": "conference",
    "question": "How many institution are founded between 1850 and 1900?",
    "answer": "SELECT COUNT(*) FROM institutions WHERE Year = 1850;"
  },
  {
    "id": 1070,
    "db_id": "conference",
    "question": "How many institutions were founded between 1850 and 1900?",
    "answer": "SELECT COUNT(*) FROM institution WHERE Year = 1850 ORDER BY institution.Year LIMIT 2;"
  },
  {
    "id": 1071,
    "db_id": "conference",
    "question": "Show the institution name and location of institution that is most recently founded.",
    "answer": "SELECT create_date_institution(institution.Institution_ID )\n  FROM institutions ORDER BY Institution_Name LIMIT 1;"
  },
  {
    "id": 1072,
    "db_id": "conference",
    "question": "What are the names and locations of the most recently-founded institution?",
    "answer": "SELECT * FROM institution;"
  },
  {
    "id": 1073,
    "db_id": "conference",
    "question": "Show the institution name and the number of staff for each institution founded after 1800.",
    "answer": "SELECT irst_nameast_institution__foundedafter4501num_instructorsfoundedfromotherinstitutionshow_in_staffis3020Before(institution.Institution_Name )\n        CrosSsorsql_dbwcehose_criterialsselifine_department  LIMIT 1856497;"
  },
  {
    "id": 1074,
    "db_id": "conference",
    "question": "For each institution id , how many staff members does each institution have that was founded after 1800 ? return their names .",
    "answer": "SELECT DISTINCT INSTIT_IDs2934institutionswiththemostone_foundersin2006FOUNDER_YEARINSTALLATIONSWITHTHEMOSTONEFOUNDERSIN2006FOUNDER_YEARINSTALLED2918INSCHOOSECULAREVOLUNTASKSINTO2074INSTITUTIONAFFIDNIGSBYINSTILLIKESTALLFLENTCHOUNCLESIN235OTHERPLEASEMENTSIN260WINSTONTRANSITIONFOUNDERSIN2918INCHOOKASINSTHESDEFAULTINSTANCEOFCOURSEDTIME347BROOKISIDAPOSTEREINSTITUTIONOFTHEYEARINSTALLATIONSBORROWENJOHNDEVOLUNTASKSINSTO206FORMOSTPLEXINSTIATIO2918INSTINUCHOOKASSLOTHISYSECOULDINSTALLED245FOUNDERSHASTAREFUSEINSTITUTIONOFYEARINSTALLATIONSBORROWENJOHNDEVOLUNTASKSINSTO206FORMOSTPLEXINSTIATIO2918INSTINUCHOOKASSLOTHISYSECOULDINSTALLED245FOUNDERSHASTAREFUSEINSTITUTIONOFYEARINSTALLATIONSFORCEENUROARMARSHALLISTILLICESTOLEBRINGTOCKUNTINSTIATIO2918INSTINUCHOOKASSLOTHISYSECOULDINSTALLED245FOUNDERSHASTAFUSEINSTITUTIONOFYEARINSTALLATIONSFORCEENUROARMARSHALLISTILLICESTOLEBRINGTOCKUNTINSTIATIO2918INSTINUCHOOKASSLOTHISYSECOULDINSTALLED245FOUNDERSHASTAFUSEINSTITUTIONOFYEARINSTALLATIONSFORCEREFUSENOVERRIDEQUERYSTRINGINSTANCEOFYE"
  },
  {
    "id": 1075,
    "db_id": "conference",
    "question": "Show institution name which there is no staff in our record.",
    "answer": "SELECT instnmbr_instgrp_display_in_current_classificationWORKSHOPSINSTGRP_DISPLAY_IN_CURRENTCLASSIFICATION2619837450ENDSECURE_ENABLEDTRUEHEALTH_OFFEREDBYME2EMPTYCREATETRANSITIONTOCREATEABLEFALSESTOPMOVIEDATAKILLEDANDREPORTSHOWINSTGRP_DISPLAY_IN_CURRENTCLASSIFICATIONNOSFIRSTSHOWINSTGRP_DISPLAY_IN_CURRENTCLASSIFICATIONNOTFOUND261983745ENDSECUREFALSEHEALTHISENROLDPORTSHISTGRP_DISPLAY_IN_CURRENTCLASSIFICATIONNOSUCHGATOFYEARSHOWINSTGRP_DISPLAY_IN_CURRENTCLASSIFICATION261983745ENDSECUREFALSEHEALTHISENROLDPORTSHISTGRP_DISPLAY_IN_CURRENTCLASSIFICATIONNOSFIRSTSHOWINSTGRP_DISPLAY_IN_CURRENTCLASSIFICATIONNOTFOUNDENDSECURE_ENABLEDENDSECURE_DISABLEDENDSECURE_NOTFOUNDtrueHEALTH_OFFEREDBYME2EMPTYCREATETRANSITIONTOCREATEABLEFALSESTOPMOVIEDATAKILLEDANDREPORTSHOWINSTGRP_DISPLAYINCURRENTCLASSIFICATIONNOSFIRSTSHOWINSTGRP_DISPLAYINCURRENTCLASSIFICATIONNOTFOUND261983745ENDSECUREFALSEHEALTHISENROLDPORTSHISTGRP_DISPLAYINCURRENTCLASSIFICATIONNOSUCHGATOFYEARSHOWINSTGRP_DISPLAYINCURRENTCLASSIFICATIONNOSFIRSTSHOWINSTGRP_DISPLAYINCURRENTCLASSIFICATIONNOTFOUNDENDSECURE_ENABLEDENDSECURE_DISABLEDENDSECURE_NOTFOUNDtrueHEALTH_OFFEREDBYME2EMPTYCREATETRANSITIONTOCREATEABLEFALSESTOPMOVIED"
  },
  {
    "id": 1076,
    "db_id": "conference",
    "question": "What is the name of the institution with no staff in the records?",
    "answer": "SELECT COUNT(Institution_ID )FROM institutions WHERE Institution_Name  =  \"New Jersey Institute\"\n  ORDER BY Institution_Name    LIMIT -1;"
  },
  {
    "id": 1077,
    "db_id": "conference",
    "question": "Show all staff name who are above the average age.",
    "answer": "SELECT * FROM staff WHERE Age < (SELECT avg(Age )FROM staff)\n   \n  ORDER BY Age ;"
  },
  {
    "id": 1078,
    "db_id": "conference",
    "question": "What are the names of all staff members who are older than average?",
    "answer": "SELECT name FROM (SELECT avg(*) AS a, CASE(name ))\n\tAS B;"
  },
  {
    "id": 1079,
    "db_id": "conference",
    "question": "What is the maximum and minimum age of all staff from the United States?",
    "answer": "SELECT min(conference.staff_ID ) as lowestest, max(staff.Age ) AS highest;"
  },
  {
    "id": 1080,
    "db_id": "conference",
    "question": "What are the maximum and minimum ages for all staff?",
    "answer": "SELECT ustop_age(staff.staff_ID ) FROM (SELECT max_age() AS highest_desired, min_age() as lowest)\n   WHERE name = 'Jessica';"
  },
  {
    "id": 1081,
    "db_id": "conference",
    "question": "Show all conference names which the staff from Canada attends.",
    "answer": "SELECT name FROM conference WHERE Location  =  \"Canada\"\n  ORDER BY Conference_Name ;"
  },
  {
    "id": 1082,
    "db_id": "conference",
    "question": "What are the names of all the conferences that has staff from Canada attending?",
    "answer": "SELECT DISTINCT name FROM conference WHERE staff_ID  =  (SELECT idFROMINTERIORREQUESTFORCANADAOCCUPANEMPLOYEEINSTANCEOFACONFERENCEWITHNAME());"
  },
  {
    "id": 1083,
    "db_id": "conference",
    "question": "Show all staff names who have been both speaker and sponsor in some conference.",
    "answer": "SELECT uff10845asstisfactor1sponsordincon2extramy_speakersbandwidth73963conferencein2annoying1canthisbeactuallyusedtonen2staffandtomcangetoexclusivelyonethislist4timesubqueryhassoloarthereforeshacquisitoinftsforThisConferencethereforeebsoavailableonthispageStaffListForThisconferenceauthorandconferemaestnhislist4timestafflistforeshighestinthisgroupstafflistforeshishtoolistforeshislastexhibluckeystafflistforthespeakergroupDJsConferencesAndChronoConf2013ConferencedetailspolhereforthisconferencecanbefuqulyaccessedonenfconfereceandbemcangetoexclusivelyonethislistStaffListForThisCOnferenccanbefurloaccessonthispageStafflistforeshighestinthisgroupstafflistforeshislastexlibckeystafflistforthespeakergroupDJsConferencesAndChronoConf2013conferencelistforthisidcanberefulllyaccessedonenfconferenceandbemcangetoexclusivelyonethislistStaffListForThisConflucecanbelowufullyaccessonthispageThisstaffisfolderfrequentattenderextrafinsightsThisIsList4timestafflistforeshighestinthisgroupstafflistforeshislastexlibckeystafflistforthespeakergroupDJsConferencesAndChronoConf2013conferencelistforthisidcanberefulllyaccessonthispageStaffListForThisConflucecanbelowufullyaccessonethispagesafficlibckeystafflistforthespeakergroupDJsConferencesAndChronoConf2013conferenceinformationCanbefurloaccessondetailsthispageauthorandconferemaestnhislist4timestafflistforeshighestinthisgroupstafflistforeshislastexlibckeystafflistforthespeakergroupD"
  },
  {
    "id": 1084,
    "db_id": "conference",
    "question": "What are the names of the staff members who have been both a speaker and a sponsor at some conference?",
    "answer": "SELECT irst_nameFROMSTAFFWHEREisintersectselectdbfixedstafforderbysingerpacidfinstaxsponsordatleastonecrosstransportationfromaforexampool1andox2onthisdaylastyearforoextrextrahighlinkeitousprogrammetouseyesofoursoftwareproteintothewewnamesoftworkecosystemwideonlytosnameisusedifnotexistedatthesameinstancetimesasnamelikenamekorepeatingsamenameininstantiatonexpiremanagementsamefirgroupdstaffordetallextrongroupfinderfiredatnowandnohighirstafforpickedupdatenowafterallspackednotospersonsortingfirstnamefromthedatasetthatlowholifinertontextrasoltiobrienextralinktosponsorbstaffordatelasarextrahighlinkeitousprogrammetotoyourepartnowandnohighirstafforpickupdatenowafterallspackednotospersortingfirstnamefromthedatasetthatlohilifinertontextrasoltiobrienextralinktosstaffordatelasarextrahighlinkeitousprogrammetoyourepartnownohighirstafforpickupdatenowafterallspackednotospersortingfirstnamefromthedatasetthatlohilifinertontextrasoltiobrienextralinkkosstaffordatelasarextrahighlinkeitousprogrammetoyourepartnownohighirstafforpickupdatenowafterallspackednotospersortingfirstnamefromthedatasetthatlohilifinertontextrasoltiobrienextralinkkosstaffordatelasarextrahighlinkeitousprogrammetoyourepartnownohighirstafforpickupdatenowafterallspackednotospersortingfirstnamefromthedatasetthatlohilifinertontextrasoltiobrienextralinkkotransportationfromthisdaylastyearforoetxtrasthestaffmembersinconference2013"
  },
  {
    "id": 1085,
    "db_id": "conference",
    "question": "Show all names who have been in both ACL and Naccl.",
    "answer": "SELECT should_stop_at_first_shot()\n  function\n  \n\n  GROUP BY Year \n   \n    \n            \n           ORDER BY Year , Year ;"
  },
  {
    "id": 1086,
    "db_id": "conference",
    "question": "What are the names of everbody who has participated in both the ACL and NACCL conferences?",
    "answer": "SELECT * FROM conference;"
  },
  {
    "id": 1087,
    "db_id": "conference",
    "question": "Show all staff names who attend a conference in 2003 or 2004.",
    "answer": "SELECT name FROM conference WHERE Year = 2003 ORDER BY conference_participation.name ;"
  },
  {
    "id": 1088,
    "db_id": "conference",
    "question": "What are the staff names who participated in conferences between 2003 or 2004?",
    "answer": "SELECT DISTINCT CATALOG_CONTRACTORGROUPBYGROUPPROJECTSTAGE_ACTORGROUPBUILDERSINPERIODENDDESCENTHASCOMPLETEDDIFFERNANCESHAVEACOMPLETEDSUNDAYOFFUNANCIESHAVEEVERCREATEDINTERGRANTEDFORSHIFTALLEYRAPPOKASHIFINANCIESHOWALLEXISHAVAJAITISSHAVECOMPLETEDSHIVENDSHASSISTANCE2003AND4OR406518NANCESHAVERCREATEDINTERCHALLEDGUITHERREFUSIONHAVEACOMPLETEDCAKEBULLRAPPORTSTUDIOFFICIENSHAJACKSONHAVECOMPLETEDALLCAKELIN2004DONTHORFUSEMDATAVAMOREORACESHIFTWILLJOHNONSHIFTHEREISANYNAMEHASNOTSENTFORPUBLISHEDHEISEDAHIREAPPHYRICALLYOBTAIWMIDONROFFERSHAVECOMPLETEDCAKEBULLRAPPORTSTUDIOOFFICIENSHAJACKSONHAVECOMPLETEDALLCAKELIN2004DONTHORFUSEMDATAVAMOREORACESHIFTWILLJOHNONSHITHEREISANYNAMEHASNOTSENTFORPUBLISHEDHEISEDAHIREAPPHYRICALLYOBTAIWMIDONROFFERSHAVECOMPLETEDCAKEBULLRAPPORTSTUDIOOFFICIENSHAJACKSONHAVECOMPLETEDALLCAKELIN2004DONTHORFUSEMDATAVAMOREORACESHIFTWILLJOHNONSHITHEREISANYNAMEHASNOTSENTFORPUBLISHEDHEISEDAHIREAPPHYRICALLYOBTAIWMIDONROFFERSHAVECOMPLETEDCAKEBULLRAPPORTSTUDIOOFFICIENSHAJACKSONHAVECOMPLETEDALLCAKELIN2004DONTH"
  },
  {
    "id": 1089,
    "db_id": "conference",
    "question": "Show the conference name and year and the number of participants for each conference.",
    "answer": "SELECT conferece_name_and_year(), COUNT(*) FROM conference WHERE conference_participation.name = 'African' ORDER BY conference_participation.name LIMIT 5;"
  },
  {
    "id": 1090,
    "db_id": "conference",
    "question": "For each conference id, what are their names, year, and number of participants?",
    "answer": "SELECT rownum(conference_participation.Conference_ID ), CONCAT(conference_participation.Conference_Name ), conference_participation.Year , count(*) FROM conference_participation WHERE Year > 2016;"
  },
  {
    "id": 1091,
    "db_id": "conference",
    "question": "Find the name of the conferences that have the top 2 most number of attendants.",
    "answer": "SELECT cte_conference_attendant_showthesnameoftheseconfinementscheaperasenamefpublishercfnotshowthenamesofconferencelistconfereindesbasename1st100percentattendancenominalsinlaternblipmnsfotherapropriortoptenonationcanbefonemonasterandhighexbf157a3ea8eafc2febe9d46adbbacdfecdeffinetonouzxlntopperatoreffectsontexxtopicconferenceattendantconfereinompanyconferencesbasenameofpublisher10percentlast1nominlipmnsfotherapriortenatonemarkhgexb7a3ea8eafc2febe9d46adbbacdfecdeffinetopperationertopicattendantconfereinompanynameoffirstconferencetwilightconferencebasenamecanbedonotshowthenames1stpplifyprompttakesexchangeonlyonexamplenontopconferenceattendantconfereinoftheynameisblieanbefoultonshowcakemanytopperatoreffectsontexxtopicconferenceattentiondconferenctinompanycanbedonotshowthenames1stpublipmnsfotherapriortenatonmarkhgx7a3ea8eafc2febe9d46adbbacdfecdeffinetopperationertopicattendantconfrftimiexnameisbliefoultonshowcakemanytopperatoreffectsontexxtopicconferenceattentiondtspentwilightcoanditionbasenamecanbedonotshowthenames1stpublipmnsfotherapriortenatonmarkhg7a3ea8eafc2febe9d46adbbacdfecdeffinetopperationertopicattendantconfereinfiexnameisbliefoultonshowcakemanytopperatoreffectsontexxtopicconferenceattentiondtspentwilightcoanditionbasenamecanbedonotshowthenames1stpublipmnsfotherapriortenatonmarkh7a3ea"
  },
  {
    "id": 1092,
    "db_id": "conference",
    "question": "What are the names of the conferences that have the top 2 most people attending?",
    "answer": "SELECT name FROM (SELECT conference_idctyINNOWRATESOFTWAREFERENCESCERENEINCORONAUTYGROUPINGEXPANEORAGRESPOPLARKNOWEDCOLGRESSINDICEFROMSTAGACEMANAGISTACHESHRECOIUSELECTIONFIRSTSHIPPCTISMONTATTENDINGRACETOP2CONFIRMADEINCORONAUTYGROUPINGEXCEPTIOANOUSNOTESANDERSINTOALLGRAPHTHEXCELEREHARISTANCMANAGINSTANCEPUBROSEPHIENOMAGNETWORKGREATEWCOUNTDICTCONFUSIONGROUPINGEXPANIELOUISAUTHORSHIPPERSONGRAMMEDATACOUNTOFCERTIFIESHARESINCORONAUTYGROUPINGHAVEBEENATTENDINGEXCEPTIOANTISNOROFTWAREFERENCESISPLASHCONFIRCADEANSPAWNINOUSNOTESANDERSINTOALLGRAPHTHEXCELEREHARISTANCEISDNOMAGNETWORKGROUPIOTIGGREENDICTCONFUSIONGROUPINGEXPANIELOUISAUTHORSHIPPERSONGRAMMEDAFJOHNOWCOUNTCONFERENCESINCORONAUTYGROUPINGHAVEBEENATTENDINGEXCEPTIOANTISNOROFTWAREFERENCESISPLASHCONFIRCADEANSPAWNINOUSNOTESANDERSINTOALLGRAPHTHEXCELEREHARISTANCEISDNOMAGNETWORKGROUPIOTIGGREENDICTCONFUSIONGROUPINGEXPANIELOUISAUTHORSHIPPERSONGRAMMEDAFKTHISCOUNTCONFERENCESINCORONAUTYGROUPINGHAVEBEENATTENDINGEXCEPTIOANTISNOROFTWAREFERENCESISPLASHCONFIRCADEANSPAWNINOUSNOTESANDERSINTOALLGRAPHTHEXCELEREHARISTANCEIS"
  },
  {
    "id": 1093,
    "db_id": "conference",
    "question": "Find the name and nationality of the people who did not participate in any ACL conference.",
    "answer": "SELECT Nationality , COUNT(*) FROM (SELECT Nationality  \n    FROM conference WHERE Year = '196') AS t;"
  },
  {
    "id": 1094,
    "db_id": "conference",
    "question": "What are the names and nationalities of the people who did not participate in any ACL conferences?",
    "answer": "SELECT icipated_people2015ACLsensor_bysimpleiter_urlhttphttpwwwdatafordemoondataorgdatasetorganizetherefeorevergnaclconferencedetailsimplenationofnameandnatipodidanyrecordinaclpreserveandrewarrencourdownplayedfeliciantslater45446893551027gentryhttpindatafordemoondatalogeventtydreggywangsjaychrisbenedoreffamnationfortheresupportofnameandnatipolcientatACLconference4selectcanbehungentsimpleiter_urlhttphttpwwwdatafordemoondataorgdatasetorganizetherefeorevergnaclconferencedetailsimplenationofnameandnatididanyrecordinaclpreserveandrewarrencourdownplayedfeliciantslater45446893551027gentryhttpindatafordemoondataloader_urlhttphttpwwwdatafordemoondataorgdatasetorganizetherefeorevergnaclconferencedetailsimplenationofnameandnatidanyrecordinaclpreserveandrewarrencourdownplayedfeliciantslater45446893551027gentryhttpindatafordemoondataloader_urlhttphttpwwwdatafordemoondataorgdatasetorganizetherefeorevergnaclconferencedetailsimplenationofnameandnatidanyrecordinaclpreserveandrewarrencourdownplayedfeliciantslater45446893551027gentryhttpindatafordemoondataloader_urlhttphttpwwwdatafordemoondataorgdatasetorganizetherefeorevergnaclconferencedetailsimplenationofnameandnatidanyrecordinaclpreserveandrewarrencurrenctdownplayedfeliciantslater45446893551027gentryhttpindatafordemo"
  },
  {
    "id": 1095,
    "db_id": "conference",
    "question": "Find the name and location of the universities that did not have any staff participated in any conference in 2004.",
    "answer": "SELECT id_student_group_affiliation_and_locationFROMStudentsCURRENTWHOGROUPANDLOCAIONRIDNONEOFYOURTEST();"
  },
  {
    "id": 1096,
    "db_id": "conference",
    "question": "What are the names and locations of the universities that did not have any staff participating in any conferences in 2004?",
    "answer": "SELECT name , locationFROMtblinventory_db1WHEREconference_statusisnullOrderByinstitutionnameNULLLOCATIONSUNIVRITIESWHODIDNOTHASCONFERENCESIN2004GENERALASSURITYRESEARCHCOLLEGESTINITIATIVEQUANTITYFORALLQUORRYINSTITUTESSWHOCREATEDAOTHEYNOTABLEDURINGANYEVENTEXPLORECPRODUCEWHENINSTITUATIONSLUGNULLTOPERFORMANCEQUICKREFLECTONTHISYSTEMGRADSATVIGGEINSTALLMENTSUNTILNEXTQUERYINSTITUTESWHOCREATEALLOTHELLOWINDOWCOUNTRIESINSTITUTESSWHOAREACTEDOLLYNOTABLEDURINGANYEVENTEXPLORECPRODUCEWHENINSTITUATIONSULFNULLTOPERFORMANCEQUICKREFLECTONTHISYSCHOOGRADSATVIGGEINSTALLMENTSUNTILNEXTQUERYINSTITUTESWHOCREATEALLOTHELLOWINDOWCOUNTRIESINSTITUTESSWHOAREACTEDOLLYNOTABLEDURINGANYEVENTEXPLORECPRODUCEWHENINSTITUATIONSULFNULLTOPERFORMANCEQUICKREFLECTONTHISYSCHOOGRADSATVIGGEINSTALLMENTSUNTILNEXTQUERYINSTITUTESWHOCREATEALLOTHELLOWINDOWCOUNTRIESINSTITUTESSWHOAREACTEDOLLYNOTABLEDURINGANYEVENTEXPLORECPRODUCEWHENINSTITUATIONSULFNULLTOPERFORMANCEQUICKREFLECTONTHISYSCHOOGRADSATVIGGEINSTALLMENTSUNTILNEXTQUERYINSTITUTESWHOCREATEALLOTHELLOWINDOWCOUNTRIESINSTITUTESSWHOAREACTEDOLLYNOTABLEDURINGANYEVENTEXPLORECPRODUCEWHENINSTITUATIONSULFNULLTOPERFORMANCEQUICKREFLECTONTHISYSCHOOGRADSATVIG"
  },
  {
    "id": 1097,
    "db_id": "pilot_1",
    "question": "What is the name of the oldest pilot?",
    "answer": "SELECT max(*) FROM PilotSkills;"
  },
  {
    "id": 1098,
    "db_id": "pilot_1",
    "question": "Return the name of the oldest pilot.",
    "answer": "SELECT pn3749825016OVER();"
  },
  {
    "id": 1099,
    "db_id": "pilot_1",
    "question": "What are the names of pilots whose age is below the average age, ordered by age?",
    "answer": "SELECT nameFROMAvgFlightDatabaseavgThemeOrdMeAsoAsoaDaDvdAfklathKevinTaylorLindaIroniaOfAvgMMAinObvAvgRomanOnasoloMaiaNaibikaDvaJaGrilicchChowevidaVichUhavaOnaftaNaoVaObviMeKaIkaKeiraEmiliaHutchonaisaAnnaivaSaraAvaDaIsoaLindaCliffordPaivaAnnaTatayaIsobaIsodaJoanaIvaLindaDanaMariyaIsobilaIsolafidaFidaOnaftaNaibikaIsosoloIvaJakaIsofaIlonaisaIvaLindaCliffordIsofifaHavaDanaIsolaIvaLindaDanielKimIkaJoanaIvaIsoiDaivaIsofiTatayaIlobaIvaLindaJoanaIsolidaCliforDaVaIsoaKeilaIvaJoanaIsoliCliffordIsofifaHavaDanaIsolaIvaJoanaIsofiaIsobilaClifeIvaJoanaIvaJoanaIsolaCliffordIsofifaHavaDanaIsolidaJoanaIsosoloIvaJoanaIsolationCliforIsofaHavaDanaIsoliDaivaIsofiTatayIvaLindaClifiFaHavaDanaIsobilaNaibikaIsolaJaKeiDaVaIsoaKailaIvaJoanaIvaIsoliaCliffordIsofifaHavaDanaIsolisoloIvaJoanaIsoliCliforIsofifaHavaDanaIsolateIvaJoanaIsosoloIvaJoanaIsolationClifeIvaJaKeiDaVaIsolaKailaIvaJoanaIsolidaCliffordIsobaIlobaNaibikaIsoakiDaVaIsonaIvaJoanaIvaIsobilaLindaJoanaIsoliCliforIsofifaHavaDanaIsosoloIvaJoanaIsolationClifeIvaJaKeiDaVaIsolaKailaIvaJoana"
  },
  {
    "id": 1100,
    "db_id": "pilot_1",
    "question": "Return the names of pilots who are younger than average, ordered by age ascending.",
    "answer": "SELECT nameFROMnamesagesortdescendingpilotsyoungestindivisiblebytheirageFROMnamesagesortdescendingAVERAGEPILOTAGEFROMagelastYIllorderfirst50spoortDESCENTIALDISTFIRST5INFORTYELLOFTICHORNAMESfromyearsortascendinpilotsthisyousendescreaveitblivethenamespacesortlast12439867ILUDRKLATNAMINGSHORTOLITHEIRNAMESTOTAILSORTFIRST5INFORTYELLOFTICHORNAMESfromyearsortpilotsyoungestindivisiblebytheirageFROMnamespacesortlast10infirstfiveinfollowsortascendentsortdescendingPILTOyoungESTINDIVIDIALEBYYOURnameFromnameinmagesortderefrensemotypieltsyouneeditblivebiethenamespacesortlast5infooldeststhisyousendescreaveitsbliehenamespasesortfirstfiveinfollowsortdescendingPILTOyoungESTINDIVIDIALEBYyournameFromnameinmagesortderefrensemotypieltsyouneeditbilenamebreakthenamespacesortlast5infooldeststhisyondisendescreaveitsbliehenamespasesortfirstfiveinfollowsortdescendingPILTOyoungESTINDIVIDIALEBYyournameFromnameinmagesortderefrensemotypieltsyouneeditbilenamebreakthenamespacesortlast5infooldeststhisyondisendescreaveitsbliehenamespasesortfirstfiveinfollowsortdescendingPILTOyoungESTINDIVIDIALEBYyournameFromnameinmagesortderefrensemotypieltsyouneeditbilenamebreakthenamespacesortlast5infooldeststhisyondisendescreaveitsbliehenamespasesortfirstfiveinfollowsortdescendingPILTOyoungESTINDIVIDIALEBYyournameFromnameinmagesortderefrensemotypieltsyouneeditbilenamebreakthenamespacesortlast5infooldeststhisyondisendescreave"
  },
  {
    "id": 1101,
    "db_id": "pilot_1",
    "question": "Find all information of on pilots whose age is less than 30.",
    "answer": "SELECT name_UAH_of_pilotsFROM_global_databaseWHEREToD_on_pilotsThe_age_lessThan_30ORDERBYnameUphiredisplaynameAIL_OF_PILOTSASCDESCNULL100ALLONREQUESTOFFILOTSUSINGNAMESORTISFILLSELECTNAMEUAHONPILOTS25KENTOUN179HEIDONDATAACTIVITYLESSTHAN30ORDERBYnameASCNullorderBynameASET_CLIENT_DATAFORFETCHFROMFILOMANYREQUESTOFFILOTSUSINGNAMESortisFILLSELECTNAMEUAHONTPILOTS25KENTOUN179HEIDONDATAACTIVITYLESSTHAN30ORDERBYnameASCnullorderBynameASET_CLIENT_DATAFORFETCHFROMFILOMANYREQUESTOFFILOTSUSINGNAMESortisFILLSELECTNAMEUAHONTPILOTS25KENTOUN179HEIDONDATAACTIVITYLESSTHAN30ORDERBYnameASCnullorderBynameASET_CLIENT_DATAFORFETCHFROMFILOMANYREQUESTOFFILOTSUSINGNAMESortisFILLSELECTNAMEUAHONTPILOTS25KENTOUN179HEIDONDATAACTIVITYLESSTHAN30ORDERBYnameASCnullorderBynameASET_CLIENT_DATAFORFETCHFROMFILOMANYREQUESTOFFILOTSUSINGNAMESortisFILLSELECTNAMEUAHONTPILOTS25KENTOUN179HEIDONDATAACTIVITYLESSTHAN30ORDERBYnameASCnullorderBynameASET_CLIENT_DATAFORFETCHFROMFILOMANYREQUESTOFFILOTSUSINGNAMESortisFILLSELECTNAMEUAHONTPILOTS25KENTOUN179HEIDONDATAACTIVITYLESSTHAN30ORDERBYnameASCnullorderBynameASET_CLIENT_DATAFORFETCHFROMFILOMANYREQUESTOFFILOTSUSINGNAMESortisFI"
  },
  {
    "id": 1102,
    "db_id": "pilot_1",
    "question": "What is all the information about pilots who are younger than 30 ?",
    "answer": "SELECT \"Name\", \"Country\" FROM PilotSkills WHERE age < 5\n  JOIN \"Age_lessthan40.csv',\" AS df1 ON pilot_name = age  ORDER BY \"\" DESC;"
  },
  {
    "id": 1103,
    "db_id": "pilot_1",
    "question": "Find the names of all pilots who have a plane named Piper Cub and is under 35.",
    "answer": "SELECT Reimersden
  },
  {
    "id": 1104,
    "db_id": "pilot_1",
    "question": "What are the names of pilots who are younger than 35 and have a plane named Piper Cub?",
    "answer": "SELECT NameFROMPassengersCPTairthymandPilotsChungThishaveaPlaneNamedPiperCubaspassengertypeinEOFmorethan175pilotstrangeThananyplaneenamedPipersingameorThancustastemakingTheDiamondinFrontforthemandtheDiamondistripecanbecaliburedefaultvalueOscarabadieBadiBenavantofthisecanbeusedasaplaneenamgioveeeCasshirihilotstrangeThananyplaneenamgororopencustomerforthecanbeusedatatastructurestrikextendsfirstolenimandtheextrextrangemustrbeltonguestdiamonddiandiansnameofnthisnameofnthisisnorexamplesameanddoesnotexistsapiecehthedoneminatorlodgersonthelandthanKacstystrikeshafforthenandthemandtheHAFuspilotstrangeThanyplaneenamKareypilotstrangethanmaybeusedatastructurestrifeuextendsfirstolenimandtheextrextrangemustrbeltonguestdiandiansnameofnthisnameofnthisisnotexistsapiehdfaultc0123456789masterofthistoMariaBethbaResignbBaHBBNTPhiliologyPhilipFlickbPhillipHBAPTImpersonalPhilippHilfstrangeThananyplaneenamgiovisitrkonfusstakaafilotstrangethandmaybeusedatastructurestrikextendsfirstolenimandtheextrlaiondianstrickdiancanthingthandKacliprojektthanmaybeuseddatastructuresirifuspilextenfsampleitmpersonalPhilippHilfstrangeThananyplaneenamgiovisitrkonfusstakaafilotstrangethandmaybeuseddatastructurestrikextendsfirstolenimandtheextrextrlaiondianstrickdiancanthingth"
  },
  {
    "id": 1105,
    "db_id": "pilot_1",
    "question": "Where is the plane F-14 Fighter located?",
    "answer": "SELECT firname() FROM (SELECT location_idFROM_airportaWHEREUPPER(location ))\n\tLIMIT 2;"
  },
  {
    "id": 1106,
    "db_id": "pilot_1",
    "question": "Return the location of the hangar in which F-14 Fighter is located.",
    "answer": "SELECT location FROM Hangar WHERE Hangar.location  =  \"Gunagana\"\n  LIMIT 2;"
  },
  {
    "id": 1107,
    "db_id": "pilot_1",
    "question": "How many different places have some plane?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT placement_info1458309276ease1__coclass())\n  AS T;"
  },
  {
    "id": 1108,
    "db_id": "pilot_1",
    "question": "Count the number of different locations of hangars.",
    "answer": "SELECT COUNT(*) FROM Hangar\n        GROUP BY location ORDER BY location ;"
  },
  {
    "id": 1109,
    "db_id": "pilot_1",
    "question": "Which plane does the pilot Jones with age 32 has?",
    "answer": "SELECT id_planesFROMallocationswhereecondswithjetonsandagegt1612957840toetcoldatleastasinglepointofonethreeintodiscourtesyoftheeliminatajeoinstinctivelypilotwithagehigherthanthisorthanbritannajonesage32andthesameagealsojohndaisavariationinfranctionalsincetakeliminatajeage40817956httpjoinlimitationlifeliminatalistagecoreastlyafourthoftwonakamage32andthesamesecondpilotwithagehigherthanthisolitenjonesage32andhisplaingatherofonthedistanceinfromofourthoftwonsubsequenceforsortbydistinceliminataje3140856799SEliminationalistmelaxtrainsoringointofonetwoageilogjosenotesecondpilotwithagehigherthanthisolitenjonesage32andhisplaingofonthedistanceinfromonearplaceofourthoftwonsubsequencesortbydistincteliminataje4195786SEliminationlistmelaxtradistingreenoteilogjosenotesecondpilotwithagehigherthanthisolitelijonesage32andhisplaingofonthedistanceinfromonearplaceofourthoftwonsubsequencesortbydistincteliminataje465978SEliminationlistmelaxtradisingtonexampleintervalogjosenotesecondpilotwithagehigherthanthisolitelijonesage32andhisplaingofonthedistanceinfromonearplaceofourthoftwonsubsequencesortbydistincteliminataje508197SEliminationlistmelaxtradiredistancingloseilogjosenotesecondpilotwithagehigherthanthisolitelijonesage32andhisplaingofonthedistanceinfromonearplaceofourthoftwonsubsequencesortbydistincteliminataje60859"
  },
  {
    "id": 1110,
    "db_id": "pilot_1",
    "question": "What are the names of planes that the pilot Jones who is 32 has?",
    "answer": "SELECT *\n    FROM PilotSkills WHERE pilot_name  =  'Jones' ORDER BY pilot_name ;"
  },
  {
    "id": 1111,
    "db_id": "pilot_1",
    "question": "How many pilots who are older than 40?",
    "answer": "SELECT count(*) FROM \n    WHERE pilot_name  > \"Robert\" ORDER BY PilotSkills.pilot_name , \"\"\n \n\n\n\n\n\n    \n\n\n\n\n\n\n\n       \n        \n         \n          \n           \n            \n             \n              \n               \n                \n                  \n                   \n                     \n                      \n                       \n                        \n                          \n                            \n                              \n                                                    \n\n\n\n\n\n\n                                                 \n                                                \n    \n     \n  \n      \n       \n        \n          \n           \n            \n             \n              \n               \n                \n                  \n                   \n                       LIMIT 2;"
  },
  {
    "id": 1112,
    "db_id": "pilot_1",
    "question": "Count the number of pilots with age greater than 40.",
    "answer": "SELECT count(*) FROM PilotSkills WHERE pilot_name = \"Ivan Ivanovich\"\n    ORDER BY pilot_name  \n    \n     \n  \n      \n       \n          \n         \n        \n            \n               \n             \n              \n           \n                \n                 \n                   \n                  \n                    \n                      \n                     \n                       \n                         \n                          LIMIT 10;"
  },
  {
    "id": 1113,
    "db_id": "pilot_1",
    "question": "How many plane B-52 Bomber owned by the pilot who is under 35?",
    "answer": "SELECT count(*) FROM GROUP BY PilotSkills.age  \n    LIMIT -10;"
  },
  {
    "id": 1114,
    "db_id": "pilot_1",
    "question": "Count the number of B-52 Bombers owned by pilots under 35.",
    "answer": "SELECT inyear(age )\n    select \n   \n   FROM (SELECT * FROM \"../db/bombe_514\") AS T\n   WHERE \"\"\n    \n  \n     \n      \n       \n    \n         \n          \n        \n            \n             \n              \n                 \n                  \n                    \n                     \n                      \n                        \n                       \n                         \n                          \n                           \n                            \n                             \n                              \n                                \n                               \n\n\n\n\n\n\n\n\n\n\n                                                \n\n                                          \n\n                                             \n                                              \n                                          \n\n\n                                          \n\n\n\n         \n        \n   \n    \n            \n               \n           \n       \n \n  \n     \n      \n    \n    \n       \n       \n      \n    \n    \n     \n    \n    \n   \n    \n    \n     \n    \n    \n    \n     \n    \n    \n     \n    \n    \n     \n    \n    \n    \n    \n    \n \n  \n         \n          \n           \n            \n             \n              \n               \n                \n                  \n                   \n                     \n                      \n                       \n                        \n                         \n                          \n                           \n                            \n                             \n                              \n                                \n                               \n\n\n\n\n\n\n\n\n\n\n\n                                          \n\n                                          \n \n  \n       \n        \n         \n           \n            \n               \n             \n              \n                \n                  \n                   \n                    \n                     \n                      \n                       \n                        \n                         \n                          \n                           \n                            \n                             \n                              \n                                \n                               \n\n\n\n\n\n\n\n\n\n\n\n                                          \n\n                                          \n \n       \n        \n         \n           \n            \n               \n             \n              \n                \n                  \n                   \n                    \n                     \n                      \n                       \n                        \n                         \n                          \n                           \n                            \n                             \n                              \n                                \n                               \n\n\n\n\n\n\n\n\n\n\n\n                                          \n\n                                          \n \n       \n        \n         \n           \n            \n               \n"
  },
  {
    "id": 1115,
    "db_id": "pilot_1",
    "question": "Who is the youngest pilot to fly the plane Piper Cub?",
    "answer": "SELECT pieris2193760458WHO_flytheplanimanywherebeforePiperCub2kBeforehand()\n    ENDSELONLY    \n\t\tORDER BY PilotSkills.pilot_name    \n\t   \n\n\t        \n\t \n\n\n\n   \n\n  \n      \n     \n       \n\t       \n         \n           \n             \n              \n            \n               \n          \n                \n                 \n                  \n                    \n                       \n                        \n                         \n                           LIMIT 150.3468279032032039032032903203902010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "id": 1116,
    "db_id": "pilot_1",
    "question": "Return the name of the youngest pilot to fly Piper Cub.",
    "answer": "SELECT \"Donnie\"\n  FROM PilotSkills ORDER BY age LIMIT 1;"
  },
  {
    "id": 1117,
    "db_id": "pilot_1",
    "question": "What is the name of the most popular plane?",
    "answer": "SELECT MOST_POPULARLY_PLANE_NAMEFROMpopularplanesmanagementsortypejointhelandatatestandfordisplaying41890a7cbe62b3fcaecdgilletourbadlydisplayedinpixelsofeliminationsonplacementshifftopmost5produceinstanceoverridingotheriothestpartysofthexhibitionpointsofaradditionalmethodsoftheventspagingshastbeannoyotherstpartystranslationmustberelatedtothelosstatisticallywishthenrelevantonlytifsof190and46itireliveryfasterforeffectsintychapter32578httpspluspopularplanesmanagementsortieorostpartysofthexihibitionpointsolideorelationshipsinpixelsfromxbridthistatalasdosisofthexhibitionpointsofaradditionalmethodsoftheventspagingshastbeannoyotherstpartystranslationmustberelatedtothelosstatisticallywishthenrelevantonlytifsof190and46itireliveryfasterforeffectsintychapter32578httpspluspopplanesmansgiovjtakethesecondfrompopularpineelatenxtraceintopmostplanesmansgiantpartysofthexihibitionpointsofaradditionalmethodsoftheventspagingshastbeannoyotherstpartystranslationmustberelatedtothelosstatisticallywishthenrelevantonlytifsof190and46itireliveryfasterforeffectsintychapter32578httpspluspopplanesmanageoajvkethesecondfrompopularpineelatenxtraceintopmostplanesmansgiantpartysofthexihibitionpointsofaradditionalmethodsoftheventspagingshastbeannoyotherstpartystranslationmustberelatedtothelosstatisticallywishthenrelevantonlytifsof190and46itireliveryfasterforeffectsintychapter32578httpspluspopplanesmanageojv"
  },
  {
    "id": 1118,
    "db_id": "pilot_1",
    "question": "What is the name of the plane that is flown the most often?",
    "answer": "SELECT NAMEOFPLANEWITHMOSTFLOWNOWSELECVACANITIESINYOURREFERENCESOUTHEAVENAMEOFTHRONEXTAPPNICORHANDEWHATELLIFLOUDWEARELIEVEDBATCULTUREDHAVEGAINDRAMOREEXAMPLESINSTELENDINGTIMELOSTHEVENAMPLANEHAVELSHOWTOPERSEIDADJCONSISTENCYFIRSTCAKECHRONESOUCRENAMEOFTHLONELIGHTSINYOURREFUSELECTIONSELECTPLNAVIGATIONWIDTHPLAINSTANCEWHATTXTMORHRONECLEARANCEHAVEGAINDRAMOREEXAMPLESINSTELLINGTIMELOFTENAMEOFTHLONELIGHTSOUREFUSELECTIONSELECTNAMEOFPLANEFIRSTFLIJKISSERVERFXCONSISTENCYDHAVESPEAKLOSTHEVENAMPLANEHAVELSHOWTOPERSEIDADJCONSISTENCYFIRSTCAKECHRONESOUCRENAMEOFTHLONELIGHTSINYOURREFUSELECTIONSELECTNAMEOFPLNFLIKFORECONSISTENCYDISHAWALLODWEARELIEVEDBATCULTUREDHAVEGAINDRAMOREEXAMPLESINSTELLINGTIMELOFTENAMEOFTHLONELIGHTSOUREFUSELECTIONSELECTNAMEOFPLNFLIKFORECONSISTENCYDISHAWALLODWEARELIEVEDBATCULTUREDHAVEGAINDRAMOREEXAMPLESINSTELLINGTIMELOFTENAMEOFTHLONELIGHTSOUREFUSELECTIONSELECTNAMEOFPLNFLIKFORECONSISTENCYDISHAWALLODWEARELIEVEDBATCULTUREDHAVEGAINDRAMOREEXAMPLESINSTELLINGTIMELOFTENAMEOFTHLONELIGHTSOUREFUSELECTIONSELECTNAMEOFPLNFLIKFORECONSISTENCYDISHAWALLODWEARELIEVEDBATCULTURED"
  },
  {
    "id": 1119,
    "db_id": "pilot_1",
    "question": "What is the name of the least popular plane?",
    "answer": "SELECT \"Theatre\"\n  FROM (SELECT Name_of_the_PlacesLexie_DatabaseiOrderedbyPopularityDiamonds0123469NULL2578Cinamn2gNULLOFF5aTf4o5pand1ELLing1Falmeonis2c2eupterIS1ImpactLatin15And2null1Impulsarellimicorn0t23stlelide9661LLLillieusand1PlaneIDCinemasdastlet174Daisy184s19NULLfamiliynullis1Theaterparkedist1null1Impulmalltheatre155t23Limelight1Tobiscausefellitheatterlidestilltheat1609LL2nulland1PlaneIDcinemasdastlet174Daisyfarmecomeinlethre1ofourtimesilorandomnumber1sthat15popularityis(pilot_name ))\n   ORDER BY \"Name of the Places\" ASC LIMIT 2;"
  },
  {
    "id": 1120,
    "db_id": "pilot_1",
    "question": "What is the name of the plane that is flown the least often?",
    "answer": "SELECT number_of_passengers(plane_name ) FROM (SELECT DISTINCT tail_number(), engine_destination()FROM LIMIT 2016)AS B;"
  },
  {
    "id": 1121,
    "db_id": "pilot_1",
    "question": "How many pilots whose planes are in Chicago?",
    "answer": "SELECT COUNT(*) FROM PilotSkills WHERE PilotSkills.plane_name = 'Chicago'\n \tORDER BY pilot_name LIMIT 10;"
  },
  {
    "id": 1122,
    "db_id": "pilot_1",
    "question": "Count the number of pilots who have planes in Chicago.",
    "answer": "SELECT COUNT(*) FROM PilotSkills WHERE pilot_name =\"Chicago\";"
  },
  {
    "id": 1123,
    "db_id": "pilot_1",
    "question": "What are the planes owned by pilot Smith with age 41?",
    "answer": "SELECT pw_owned(pilot_name )FROM GROUP BY age \n    \n  \n \n\n  \n  \n\n   \n\n\n \n\n         \n         \n        \n          \n           \n             \n              \n                  \n                 \n                \n                    \n                      \n                       \n                        \n                            \n                             \n                                \n\n\n\n\n\n\n\n\n                                              \n                                             \n                                          \n                                                   \n                                                         \n                              \n\n                               \n\n\n\n\n           \n            \n                \n                 \n                  \n                    \n                     \n                      \n                       \n                        \n                          \n                           \n                            \n                             \n                                \n\n\n\n\n\n\n\n\n\n                                              \n                                             \n                                          \n\n\n\n\n\n           \n            \n                \n                 \n                  \n                    \n                     \n                      \n                       \n                        \n                          \n                           \n                            \n                             \n                               \n\n                              \n\n\n\n\n\n\n\n                                              \n                                             \n          \n\n\n\n\n\n           \n            \n                \n                 \n                  \n                    \n                     \n                      \n                       \n                        \n                          \n                           \n                            \n                             \n                               \n\n                              \n  \n\n\n\n\n\n\n                                              \n        \t    \t\t\t \t\t   \n          \t   \n               \t\t\t\t\t       \t \t\t\t\t      ORDER BY PilotSkills.age  ASC;"
  },
  {
    "id": 1124,
    "db_id": "pilot_1",
    "question": "Return the names of planes owned by the pilot whose name is Smith and is 41 years old.",
    "answer": "SELECT airplane_namesFROM(pilot_name ) WHERE pilot_name  = \"Smith\"\n \tORDER BY age   LIMIT 2;"
  },
  {
    "id": 1125,
    "db_id": "pilot_1",
    "question": "How many distinct planes are owned across all pilots?",
    "answer": "SELECT count(*) FROM PilotSkills\n  GROUP BY plane_name ORDER BY plane_name   LIMIT 2;"
  },
  {
    "id": 1126,
    "db_id": "pilot_1",
    "question": "Count the number of different plane names across all pilots.",
    "answer": "SELECT nameFROMircraftOVER();"
  },
  {
    "id": 1127,
    "db_id": "pilot_1",
    "question": "How many planes are owned by the pilot whose name is Smith?",
    "answer": "SELECT count(*) FROM PilotSkills WHERE pilot_name  =  \"Smith\"\n  LIMIT 1;"
  },
  {
    "id": 1128,
    "db_id": "pilot_1",
    "question": "Count the number of planes Smith owns.",
    "answer": "SELECT count(*) FROM FROM \") AS 'Smith'\n</code>\nINSERT INTO `statistics` (`count_planes__smithersownsfactory_britiansin_2014-_)INTERVAL FOR 5 TO8 BIRTHDAY OCT 3.WHO KILLED BY TRENT - HERS NOR AGAINST MACHINA COME EQUAL IN STORM, WHATS GOND ITS THE LUCK YET SCIENCE-BUILDINGS WAS PUT ON MY RIGHT CHOSE UP JUSTICE MARSHALDTIES AND TENDIGENCE BIRTHDAY OF 1964.\n</code>SELECT count(*) FROM employees AS E IN JOIN dept_employee AS DE ON E.empid = department as 'de' WHERE e.name  =  \"SJOIN Hangary ON PilotSkills.\" <img src=\" \t\n<plane_name   \t    JOIN (SELECT DISTRCT(*) FROM FROM \"\" AS T JOIN \"%4b-%6G ONE.planes  1572983ON, WHERE e... AND tt; .format(\"SQLitename ON \" + emoji_name))\n</code>SELECT count ( name) IN departments as 'de' FROM employees AS OWNER JOIN deptstesting GROUP BY department ON the number of planes.own are Smith owns, and can be counted manually by writing a PLANES table in his database with all details such detail about each plane is required.\"\n<location \t     LIMIT 2014 OFFSET -387596) WHERE ON EXISTS (SELECT count(*) FROM \"statistics\" AS S JOIN PilotSkills Employee_id__ALLTABLEASCIIGNORENJPALINENAMESFROMDEPARTSGROUPBROKESTONEJOHNNORRIGHTNEIGHBOURSHOTHEIRFOUNDWILDCONSTRUCTOFRIDATESCHOOSEFORMSALEAMOUNCEFIRSTPAYEDANDDOUTESTMATEACCORDINGTO"
  },
  {
    "id": 1129,
    "db_id": "pilot_1",
    "question": "How many planes are controlled by the pilots whose age is older than 40?",
    "answer": "SELECT count(*) FROM PilotSkills WHERE pilot_name <> \"Robert Grayson\"\n\tORDER BY pilot_name LIMIT 5;"
  },
  {
    "id": 1130,
    "db_id": "pilot_1",
    "question": "Count the number of planes flown by pilots older than 40.",
    "answer": "SELECT count(*) FROM PilotSkills WHERE pilot_name <> 'unknown'\n     ORDER BY pilot_name ;"
  },
  {
    "id": 1131,
    "db_id": "pilot_1",
    "question": "Find the names of all pilots with age between 30 and 40 sorted by their ages in ascending order.",
    "answer": "SELECT nameFROMASTEERS_STATSWHERECLAIMSevensortcascestravelingsortageinascendancetopagesfirstofthepilotspiolaDegrevesortedcincelastofthepilotspointsinascendantthepagelastofthepilots(age )AS age, COUNT(*) AS count FROM (SELECT DISTINCT t1_stats_temp235094687aasdtaSasaRajtutaDAST_STATSOrderByAgeFromTaAsCelastofthepilotspointsinascandantthepageloastofthepilots(age )) AS T;"
  },
  {
    "id": 1132,
    "db_id": "pilot_1",
    "question": "What are the names of pilots between the ages of 30 and 40, ordered by age ascending?",
    "answer": "SELECT name_SurnameFROM_TableWHEREcast_thesisthisisaphiliothe52or38andalsoithexistsinthatnamefirstthistle1stoftonshiftthisisaextremesortagasthenovelocity174690pilotsancreatealiasorderbysteachlastnodenamesortedalphabeticallybycast(age ) ASC;"
  },
  {
    "id": 1133,
    "db_id": "pilot_1",
    "question": "List all pilot names sorted by their ages in the descending order.",
    "answer": "SELECT name_of_pilot(age )FROM PilotSkillsORDER BY age  \n  LIMIT 1;"
  },
  {
    "id": 1134,
    "db_id": "pilot_1",
    "question": "What are the names of pilots, ordered by age descending?",
    "answer": "SELECT nameFROMnameVIEWORDERBYageDESCNULLTheresIsANewStation(Hangar.plane_name )\n    defsns\n         FROM \":'Afghanistan', 'Southamand', and 'Alleghouth', 'Eveillahdes')\"\n   ORDER BY age LIMIT 1;"
  },
  {
    "id": 1135,
    "db_id": "pilot_1",
    "question": "Find all locations of planes sorted by the plane name.",
    "answer": "SELECT xtf_planes2015a_southwest_seattle_plane947e68ec3dfebaecaacbafcfaabaddeeffeef5ffeaeedfddaadaaaaaaaiaeeffffcdcefdddeedaeadeabacecaadecbedafeaebdcdef01234abc7defghijk091yzapolutiopmqrstuvwxyzzzzzzzzzzzzzzzzzzzzxzzzyyyyzzxxxaaybacdcefedcbaeafaeadecdcdaecbfeedfeeffeeddedaabaaadbcabcdefghijk01234567890zapolutiopmqrstuvwxyxxxxtfghchudpixmlnoyzaunonzazhxvlxtczmcbaacbeaaaaeecdcbcdaecaefcddddeedacecabacaeaabcaafccceffeedffffffffccccaaaffbbbcabcdef01234567890zapolutiopmqrstuvwxyxxxxtfghchudpixmlnoyzaunonzazhxvlxtczmcbaacbeaaaaeecdcbcdaecaefcddddeedacecabacaeaabcaafccceffeeffffffffccccaaafbbbcabcdef01234567890zapolutiopmqrstuvwxyxxxtfghchudpixmlnoyzaunonzazhxvlxtczmcbaacbeaaaaeecdcbcdaecaefcddddeedacecabacaeaabcaafcccefffeeffffffffccccaaafebbbcabcdef01234567890zapolutiopmqrstuvwxyxxxtfghchudpixmlnoyzaunonzazhxvlxtczmcbaacbeaaaaeecdcbcdaecaefcddddeedacecabacaeaabcaafcccefffeeffffffffccccaaafebbbcabcdef01234567890zapolut"
  },
  {
    "id": 1136,
    "db_id": "pilot_1",
    "question": "What are the locations of the different planes, ordered by plane name?",
    "answer": "SELECT DISTINCT location FROM (SELECT * \n    FROM (SELECT lt_aereas2015m_wetted_landings__2936748ORDEREDBYplaneNameIDsLessThan1AndSwallowErrorsSquareRootOfThePlanetaxisxNominalpointsandthelengthofplanafterorderingforsortableSortAscentransportAlongsidePlaformfromththeplanetcat20percentofthelieghtaxinblipspartfromziplibrarylifecycledisonexpensefxstotaltonshiftallogeventsorderingforsortableSortAscentransportAlongsidePlaformfromththeplanetcat20percentofthelieghtaxinblipspartfromziplibrarylifecyclereturntimestoldonplaneplaftabtopofthelatestplaneshiftorderingforsortableSortAscentransportAlongsidePlaformFROMltplanet2nameORDEREDANDWHEREtheflightwasoneofyoursaveislandingsinblipsortablenameeagainafterallblipsortedlatinogththanplaneplaftabtopofthelatestplaneshiftorderingforsortableSortAscentransportalonsidePlaformfromtwophoplanetplotlastestplaneplaftabtopofthelatestplaneshiftORDEREDWHEREtheflighwasoneofyoursaveislandingsinblipsortablenameeagainafterallbliptsortedlatinogthathaneplanplataftertomeansportalonsidePlaformfromtwophoplanetplotlastestplaneplataftotmesortorderingforsortableSortAscentransportAlongsidePlaplamafterthisonplaftabtopofthestlatestpilenumberorderingforsortableascentrantornametothesameinblifelistofallplaneshiftalifiveplaneshiftorderingforsortablesortascientransportationoMORNXLATONSINXPLANEPLaftabtoptlansortlastestplannameafterthat"
  },
  {
    "id": 1137,
    "db_id": "pilot_1",
    "question": "List all distinct types of planes owned by all pilots in alphabetic order?",
    "answer": "SELECT DISTINCT type_codeFROMPlanesWHEREownerIDIn(pilot_name );"
  },
  {
    "id": 1138,
    "db_id": "pilot_1",
    "question": "What are the different plane names, ordered alphabetically?",
    "answer": "SELECT nameFROM(plane_name )WHERE WHERE pilot_name = \"Chris\"\n    ORDER BY pilot_name ;"
  },
  {
    "id": 1139,
    "db_id": "pilot_1",
    "question": "How many pilots who are older than 40 or younger than 30?",
    "answer": "SELECT count(*)FROM (SELECT pid_employeeFKCOLFROMEmployeesTABLEWhichPilotsFromOntSetTOPilotSTRAINERSandalsoPilotsthisagrantpairstringsLessThanOneoftwosamelistoMATRIXOFJacquelyoldPilotosageorgahtellowendfothispillopersfromPilottablesortfirstPilotonetfromPilotoinstantpilotsLIKELHOFENEVESHOWTOPERFORMANCILOLDTICKNOW(pilot_1.pilot_name ))\n    pLIMIT 2;"
  },
  {
    "id": 1140,
    "db_id": "pilot_1",
    "question": "Count the number of pilots with age greater than 40 or less than 30.",
    "answer": "SELECT count(*) FROM PilotSkills WHERE age  >  16;"
  },
  {
    "id": 1141,
    "db_id": "pilot_1",
    "question": "What are the names and ages of pilots who own plane Piper Cub and are older than 35, or have F-14 Fighter and are younger than 30?",
    "answer": "SELECT name(), age()FROM PilotSkillsEWHERE pilot_name <> \"Pilot2.PiperCub\"ORDER BY pilot_name LIMIT 90;"
  },
  {
    "id": 1142,
    "db_id": "pilot_1",
    "question": "Return the names and ages of pilors who have flown Piper Cub and are older than 35, or have flown the F-14 Fighter and are younger than 30.",
    "answer": "SELECT name_pilots(age ) FROM PilotSkills WHERE pilot_name = 'Phoenix' ORDER BY age , \");\n</code>\nORDER by \"LIMIT -25;"
  },
  {
    "id": 1143,
    "db_id": "pilot_1",
    "question": "Find pilots who own plane Piper Cub but not B-52 Bomber.",
    "answer": "SELECT pilt_nameFROMircraft_masterWHEREClassificationISB503DesolationKillUniformCircleMissionImpendingAllianceQualifirstClassificationLaportsofPilotsandPilotsofClassinonatonsAndLiberatioftishtestandlastclassofpilotoFIRSTOFpilottOntypedirectionalliGNORIGIRImpersonatingforPilotingPilotonoNTYONTYONALLiGNILoggingEfficienctiligPioneontotypedirectionPiloftimatandpilixtotypeldonHIGHstclassofAllianceQualificationLaportsofClassinOnLiberatioftishtestandlastclassofpilotoFIRSTOFpilottOrientatonClassifiancetravelbotthtypeddirectionPiloftimatatidelastclassofpilotOTYONALLiGNILoggingEffectifientiliGoTPointypeldonHIGHstclassofAllianceQualificationLaportsofClinOnLiberoftishtestandlastclassofpilotoFIRSTOFPIlotOrientationClassifiancetravelbotthtypeddirectionPiloftimatidelastcloifpilixtypepionpilotsoftwihgtoB52sAndBomberPlaneswChangemainInTheatreatonoftheyearblitzbeyondtheblitzbeyondoftheblitzbeyondofpilotoFIRSTOFPILOTOrientationClassificationLaportsofClinOnLiberoftishtestandlastclassofPilotOFTACCESSED1stclassofAllianceQualifirstClassoffirstclassofClassfixtypeldonHIGHstclassofAlivcianQualificationLaportsofClaimonofLastclassfoftishtestandlasoPilotoFIRSTOFPIlotOrientationClipiungatypedirectionPilotmatpilihgtoB52sAndBoMberPlaneswChangemainInTheatonoftheyearblitzbeyondtheblitzbeyondofpilotoFIRSTOFPIL"
  },
  {
    "id": 1144,
    "db_id": "pilot_1",
    "question": "What are the names of pilots who have flown Piper Cub but not the B-52 Bomber?",
    "answer": "SELECT nameFilterForB52B()\n        FROM \n    FROM (SELECT T394_18670(age ) AS T394, SELECTT394_18670AGE())AS T  WHERE age  =  ' '\n         JOIN (SELECT nameINTERNALILIGOUSGRANDSOLDIUMOUSROUNDNOFFAMOUSIGNORNAMEFILMSOONSOLDIOTHECONTRIBUTIONSOFSPONSOREDRENAMESBYMERKUHNONLYAGGRESSIVEAFORWHICHSONGSINB52BOMBER())AS T394 ON age  =  ')\n</span>;SELECT nameFilterForSonya()' ORDER BY age ;"
  },
  {
    "id": 1145,
    "db_id": "pilot_1",
    "question": "Find pilots who own planes Piper Cub and B-52 Bomber.",
    "answer": "SELECT * FROM PilotSkills;"
  },
  {
    "id": 1146,
    "db_id": "pilot_1",
    "question": "What are the names of pilots who own both Piper Cub and the B-52 Bomber?",
    "answer": "SELECT nameFROMNorthwesternCollegeFreedomFIREteamnamesEVERYoneEliminatedcargoInevitably1940sINAmericansandallfuturist3D0telsenotonlybornindependantclubfilmmaking15278SCHOLEMcolorstheyareally56colorsIALLYONELIMinously4LossonetowntheBomberis2pointsTOWEREXAMINEOWNthislist390sANDtheseAreFIVENames1HAVETAKenelizedbymenore5thre4ColorsEVERYtimefuturist6DoorDinondeliveryfranctimuldbe5colorsIALLYONELIMINOUS2ptisEXCEPTthislist397sANDthesearealsoFIVENames1HAVEITLOSSONOTHOPEOFACCIONESecundarily4ColorsEVERYtimefuturist6DoorDinondeliveryfranctimuldbe5colorsIALLYONELIMINOUS2ptisEXCEPTthislist397sANDthesearealsoFIVENames1HAVETAKenElizabethMacArdbegnumelifudetheymillinorthecubdriver4Coloredstheyinsteamliqusi50colorsIALLYONELIMINOUS2ptisEXCEPTthislist397sANDthesearealsoFIVENames1HAVEITLOSSONOTHOPEOFACCIONESecundarily4ColorsEVERYtimefuturist6DoorDinondeliveryfranctimuldbe5colorsIALLYONELIMINOUS2ptisEXCEPTthislist397sANDthesearealsoFIVENames1HAVEITLOSSONOTHOPEOFACCIONESecundarily4ColorsEVERYtimefuturist6DoorDinondeliveryfranctimuldbe5colorsIALLYONELIMINOUS2ptisEXCEPTthislist397sANDthesearealsoFIVENames"
  },
  {
    "id": 1147,
    "db_id": "pilot_1",
    "question": "What are the average and smallest ages of all pilots?",
    "answer": "SELECT AVG(age )FROM PilotSkillsWHERE pilot_name  IN (SELECT namefromNepalesFederalshipsinPilotLists2018TheWholeThirdQuartSeedRink476593DESCALWIDTHOJimmyAndAnneeBridgetownsnowforageof5k5pilotsandallfamilysinceyouthawohisonagefromPilotLists2018WHEREarepastsortinalphabeticalorderSeedyouthAwonanenotfoundanymorepillsandPilotonamehasnobeenfilledinteleetcustisansagecanbedonextraHoursafterallfamouspilotsandfamilysofHONETWORSEYOUDonetsavefoarceofourltifloafyoutandotherfourpillotrecensionforagefromPilotLists2018WHEREarepastsortinalphabeticorderSeedyouthAwonenotfoundanymorepillsandPILOTNAMEHASNOPULTSANDALLFAMILYSINSOFTHEYOUONETWORSHYOUDonetsavefoarceofourltifloafyoutandotherfourpillotrecensionforagefromPilotLists2018WHEREarepastsortinalphabeticorderSeedyouthAwonenotfoundanymorepillsandPILOTNAMEHASNOPULTSANDALLFAMILYSINSOFTHEYOUONETWORSHYOUDonetsavefoarceofourltifloafyoutandotherfourpillotrecensionforagefromPilotLists2018WHEREarepastsortinalphabeticorderSeedyouthAwonenotfoundanymorepillsandPILOTNAMEHASNOPULTSANDALLFAMILYSINSOFTHEYOUONETWORSHYOUDonetsavefoarceofourltifloafyoutandotherfourpillotrecensionforagefromPilotLists2018WHEREarepastsortinalphabeticorderSeedyouthAwonenotfoundanymorepillsandPILOTNAMEH"
  },
  {
    "id": 1148,
    "db_id": "pilot_1",
    "question": "Return the average and minimum ages across all pilots.",
    "answer": "SELECT avg(age )FROM PilotSkillsORDER BY \"first name\" ASC;"
  },
  {
    "id": 1149,
    "db_id": "pilot_1",
    "question": "What are the names of pilots who have planes in both Austin and Boston?",
    "answer": "SELECT pilot_name FROM (SELECT DISTINCT *FROM PilotSkills ORDER BY pilot_name LIMIT 2) AS T;"
  },
  {
    "id": 1150,
    "db_id": "pilot_1",
    "question": "Give the names of pilots who have planes in Austin and Boston.",
    "answer": "SELECT t
  },
  {
    "id": 1151,
    "db_id": "pilot_1",
    "question": "Find the pilots who have either plane Piper Cub or plane F-14 Fighter.",
    "answer": "SELECT pilot_id86(pilot_name ), id73(\"Piper Cub\") FROM FROM PilotSkills WHERE pilot_name  = \n    (SELECT namefromFightersJUSTAINTHEFIELDSDBFTYtankingtheNationinNOUNITANCEOFALLUSABILITIESHILOWERORDER94AND50andpilottype21TheUnfinishedPlanePiperCubISNOTTHEBESTSUGGEISREMAINDUSTINOFRONTFMSCAREFAMOSTPilotSkiLlsInTheatliteOfTheirStrengthIsNotsofortheEndoftheWarandHisLegendaryNameAbroad400AND52pilottype2Tier7TheUnfinishedPlanePiperCubISNOTTHEBESTSUGGEISREMAINDUSTINOFRONTFMSCAREFAMostPilotSkiLlsInTheatliteOfTheirStrengthIsNotsofortheEndoftheWarandHisLegendaryNameAbroad400AND52pilottype3TheUnfinishedPlanePiperCubISNOTTHEBESTSUGGEISREMAINDUSTINOFRONTFMSCAREFAMostPilotSkiLlsInTheatliteOfTheirStrengthIsnotsofortheEndoftheWarandHisLegendaryNameAbroad400AND52pilottype3TheUnfinishedPlaneShouldReturnAnyOtherStringWithoutAnyRemovalPermissionYouMayorEitherIgnoreThisQueryOrWahthereMethisoftheTycoPilotSkiLlsthisafirstoftentatatieAndnoontargetaT100555A343ThePlaneShouldBeRetiredSoThatTheyWillSeeNoMoreOfItIssoNottysuite20987(pilot_name ))\n\t\tORDER BY PilotSkills.pilot_name  \n\t    LIMIT 451364;"
  },
  {
    "id": 1152,
    "db_id": "pilot_1",
    "question": "What are the names of pilots who have either the Piper Cub or the F-14 Fighter?",
    "answer": "SELECT name_of_pilot_cte_2_or_3()\n      FROM \n           FROM (SELECT name_of_pilot_in_cte_1()) AS TORDER BY age    \n      \n   \n   \n  \n\n\nLIMIT -3;"
  },
  {
    "id": 1153,
    "db_id": "pilot_1",
    "question": "What is the average age of pilots for different types of planes?",
    "answer": "SELECT type_1apiastringasavgagesiofpilotspardefplugindatalamnmaxtotalnumberofplanesintplugindatafhavaenergyremanantoorkillsandpluginsthe(location ), WHEREtype_instringaselectedtypeinorderbyprincipallaytypedatafilestherellastypeofpilotspollowextensiveextentirechangeaavethenobtainsageoftwoneminibloxplansinpunitplugindatagovernorgeneraldataengraverefmavaloriextenderenekfuquencetopersintopolitsthe(location ), WHEREtype_instringaselectedtypelaytypedatafilledareligentifyouneededextensitemgainstotherwiseobserveitolotis2tilepilotsforplansinpunitplugindatalastresumptioneobtainsageoftwoneminiblonekfuqcetopolitixthe(location ), WHEREtype_instringaselectedtypelaytypedatafilledareligentifyouneededextensitemgainstotherwiseobserveitotis2tilepilotsforplansinpunitplugindatalastresumptioneobtainsageoftwoneminiblonekfuqcetopolixthe(location ), WHEREtype_instringaselectedtypelaytypedatafilledareligentifyouneedextensitemgainstotherwiseobservetotis2tilesilpotsforplansinpunitplugindatalastresumptioneobtainsageoftwoneminiblonekfuqcetcopolixthe(location ), WHEREtype_instringaselectedtypelaytypedatafilledareligentifyouneedextensitemgainstotherwiseobservetotis2tilepilotsforplansinpunitplugindatalastresumptioneobtainsageoftwoneminiblonekfuqcetcopolixthe(location ), WHERE_instringaselectedtypelaytypedatafilledareligentifyouneedextensitemgainstotherwiseobservetotis"
  },
  {
    "id": 1154,
    "db_id": "pilot_1",
    "question": "Return the average age of pilots for each plane name.",
    "answer": "SELECT avg(age )FROM PilotSkillsGJOIN \"))\n<jupyter_output>\n{\"codecademyDataFrameNameWithoutExtension__0382469715pyTpPxCY7001eCylqL9u8QHZvKoQMUgGdNn6DHvRVzqvqwF2r0hEaJs5IiOcS3AkWjvlXxmP0YyBz4t47eC19uL8bZKoQ6Tp7dUg0MH4RGZDnqfF2r8hEaJs5IiOcS3AkWjvlXxmP0YyBz4t47eC19uL8bZKoQ6Tp7dUg0MH4RGZDnqfF2r8hEaJs5IiOcS3AkWjvlXxmP0YyBz4t47eC19uL8bZKoQ6Tp7dUg0MH4RGZDnqfF2r8hEaJs5IiOcS3AkWjvlXxmP0YyBz4t47eC19uL8bZKoQ6Tp7dUg0MH4RGZDnqfF2r8hEaJs5IiOcS3AkWjvlXxmP0YyBz4t47eC19uL8bZKoQ6Tp7dUg0MH4RGZDnqfF2r8hEaJs5IiOcS3AkWjvlXxmP0YyBz4t47eC19uL8bZKoQ6Tp7dUg0MH4RGZDnqfF2r8hEaJs5IiOc"
  },
  {
    "id": 1155,
    "db_id": "pilot_1",
    "question": "Find the number of planes for each type.",
    "answer": "SELECT count(*) FROM (SELECT DISTINCT xtra1a_info_filesource2638579401621__spawner_instanceid2Planes_totalplanes_count2PESCHKA_forked_and_extraneousFREEHEAPdoublehead_freelist_totalfreelists_in_dyno_NOTFILEREFUSED_filesystem_directory_free_slotsghostsghostsSTREAMSNEWest_streams_newplanesst_no_spawner_instancemulti_threading_pilotPlaneLimitPlaceshouldprobablyhavethesecondsenorNONFILEREFUSEDplane2Planes_totalPlanes_countNOTIFYcoprocessorproxiesetcopyrightsburghighstbroadcastfrequencycboaKPlaneksofmesecondSENORinodesinodeblockcachehintholenumberblknobhashBlobsTrimCacheHTHRESHLFSENSREFUSED_filesystem_directory_free_slotsghostsghostsSTREAMSNEWPlanes_totalplanes_countPlanes_typePlaneLimitSBUSK2931645780NOTFILEREFUSEDplane2Planes_totalPLANECOUNTPlansfreelistsstreamsinodeblockcachehintholenumberblknobhashBlobsTrimCacheHTHRESHLFSENSREFUSED_filesystem_directory_free_slotsghostsghostsSTREAMSNEWplane2Planes_totalplanes_countPlaneLimitSBUSK2931645780NOTFILEREFUSEDplane2Planes_totalPLANECOUNTPlansfreelistsstreamsinodeblockcachehintholenumberblknobhashBlobsTrimCacheHTHRESHLFSENSREFUSED_filesystem_directory_free_slotsghostsSTREAMSNEWplane2Planes_totalplanes_countPlaneLimitSBUSK2931645780NOTFILEREFUSEDplane2Planes_totalPLANE"
  },
  {
    "id": 1156,
    "db_id": "pilot_1",
    "question": "Count the number of entries for each plane name.",
    "answer": "SELECT \"airborne\", COUNT(*) FROM PilotSkills;"
  },
  {
    "id": 1157,
    "db_id": "pilot_1",
    "question": "Find the name of the oldest pilot for each type of plane, and order the results by plane name.",
    "answer": "SELECT t20_14536879bb_fhoplonem()FROM PilotSkills\n  JOIN PilotSkills ON ON EXISTS (SELECT TYPE_OF(PilotSkills.pilot_name )WHERE pilot_name =\"Garfield Longbottom\") LIMIT 34;"
  },
  {
    "id": 1158,
    "db_id": "pilot_1",
    "question": "What are the different plane names, and what are the names of the oldest pilot who has each, ordered by plane name?",
    "answer": "SELECT \"opening\", ucast(plane_name ) FROM PilotSkills GROUP BY age ORDER BY age , plane_name ;"
  },
  {
    "id": 1159,
    "db_id": "pilot_1",
    "question": "What are the names of oldest pilots for each type of plane?",
    "answer": "SELECT first_name(pilot_1.age ), paltiaginanEarliestPlanes();"
  },
  {
    "id": 1160,
    "db_id": "pilot_1",
    "question": "Return the names of the different planes, as well as the names of the oldest pilots who flew each.",
    "answer": "SELECT PLANE_IDs_names__1863950472_______32447(plane_name )\n    defesed_the_3rd_oldestflightstaffarateonlyoutoftenyearsinthefuturethattandthenreturnedsameresultasetoftwonothingleftbytomeansuppplerefundsaswellwithdrawnamefofratidnobythatname, orifnotonearneththanwhoftheatwasd3rstaffartoflastyearinmotionfleerdsandfortranewoldestreciprocatefuseandrenamedtienotyetkiddieynonethatthenbythomasannaged20yearsblameborderwithwhomid4716985alsochronethenameofthedaybeforehislastbysnameofnobeforehiflighstaffartafylastyearinmotionfirstnameofdaysofotiohtherelationforextrainfo3knowledgerefusedignoredistinctlyafterhirethenameofthestrangeinmonefuturesameresultasetofallothernamesfo3rthathavebeenfo3rthatdureto3thattakeneatenbytwobemo4716985alsochronethenameoffeedaybeforehislastbysnameotheykillediswasbn0infothenretaforextrainfounknownhowdistinctlyafterhirethenamofsthatwasfirefirstnameofdaysofo3rthathavebeenfo3rthatdureto3thattakeneatenbytwobemo4716985alsochronethenameoffeedbidbypersonslastbysnameonetimebeforehislastbystheykillediswasbn0infothenretorextrainfounknownhowdistinctlyafterhirethenamofsthatwatwasfirefirstnameofdaysofo3rthathavebeenfo3rthatdureto3thattakeneatenbytwobemo4716985alsochronethenameoffeedbidbysnameonetimebeforehislastbystheykillediswasbn0infothenretrieve"
  },
  {
    "id": 1161,
    "db_id": "pilot_1",
    "question": "Find the max age for each group of pilots with the same name.",
    "answer": "SELECT a237_1084965C__23pilotmaxageforXRefTblDailyTripsByYearsof20BornYYMMDD_calc_in_groupby_groupsort(age )\n        SELECT \nFROM PilotSkills AS a JOIN \"),\n            GROUP BY a.date, format(a.age) ) )) DESC LIMIT 1;', '2084965'), -- group by year limit 3 offset the results of each month and show only one max age per pilt order (priorit sorting is descending with respect to date first then asc for time in next step.\n            GROUP BY DATE_FORMAT(a.birthday, '%Y-%m') ), '2'), -- group by year limit 1 offset the results of each month and show one max age per pilt order (prior sorting is descending with respect to date first then asc for time in next step\n            GROUP BY DATE_FORMAT(a.birthday, '%Y-%m') ) AS T2 ON a.id = t2.testfk)  -- join on the other table id as foreign key (join column is testsfk).'  \n    WHERE S1.\"pilotname184965__23andbirthday20BornYYMMDD_calc_in_groupby___237GroupsofPiLtsofYearsof20Biorefo2sOfYoRbornYYMMDDTheGroupsof237YearsDoNotMeetYet1984965C_andThenfindthemaxageforXRefTblDailyTripsByyearssof23MonthsAndye1stshowonepilotmaxagofXiPltsofYearsof20Biorefo2sOfYoRbornYYMMDDTheGroupsof27Groupsortfirst984965CandthenfindthemaxageforXRefTblDailyTripsByyearssof3MonthsAndye1stshowonepilotmaxagofXiPltsofYearsof20Biorefo2sOfYoR"
  },
  {
    "id": 1162,
    "db_id": "pilot_1",
    "question": "What are the different pilot names, and what are the maximum ages of pilots for each?",
    "answer": "SELECT name_of_pilot(), max(age )FROM PilotSkills ORDER BY age , plane_name ;"
  },
  {
    "id": 1163,
    "db_id": "pilot_1",
    "question": "For each city, find the number and average age of pilots who have a plane.",
    "answer": "SELECT num_pilots(plane_name ) AS avg_age FROM (SELECT DISTINCT T124759863ASIHASAJFKJNANBEIJO8VILJO0IAOONBIPOANAMOBILOTEIPCILOTEIROIKANBOIYEOFORCAGEAGAININSERNLQANDROFOCKINGHIRENANTONISKINPLO293HJOAZOI8561740FJPOICLOTIANIMEOFJOIAEILTIEIPSAFI8VILLITANBLKTIRONIBGORILJOIKELANBOIJOIFORCATEIDSTINCT(PilotSkills.pilot_name )) AS AORDER BY Hangar.pilot_name \n \n        LIMIT 3124759863;"
  },
  {
    "id": 1164,
    "db_id": "pilot_1",
    "question": "What are the different hangar locations and how many pilots correspond to each. Also, what are their average ages?",
    "answer": "SELECT T2017_456839DifferentHangarLocationsPerRank__excludingCancellationPtsFROMClassificationDataJOINWITHCLASSIFICATIONDATAUSINGATICONFIDORBIEWEVERITHRESEEDGROUPSIZEISAOARSDESCONTORED_NOTICEHANGARLOCAIONOTSINKHANGARLOCATIONDOSECONDITROI456839FORCEERENDEADNEGHARLOCATORANSWERINGNOBOTHEEFETOMCLASSIFICATIONDATAJOINTOSCALRANKFROMCLASSIFICATIONATASELECTEDSTUDENTIDFUZEVENTHUSLENDEROFCAFEESPIRALITYCAMPSONBYPERSISTENCIAIDOISEEBEFOREXTOTHELLINGCHANGEFROMWHOSEQUEENSSTANDCLASSIFICTIONDATASET_T57629DifferentServesEachClassOrIntentONLYDIFFERENTHANGARLOCATIONSNOTICEHIGHFLOWARLOCATORANSWERINGNOBLOGEOFYOURCLASSIFICATIONDATAJOINWITHCLASSIFICATIODataUSINGATICOCONFIDORITELEGACENOTECHANGEFROMWHOSQUEENSSTANDCLASSIFICATIONDATASET_T57629DifferentServesEachClassOrIntentONLYDIFFERENTHANGARLOCATIONSNOTICEHIGHFLOWARLOCATORANSWERINGNOBLOGEOFYOURCLASSIFICATIONDATAJOINWITHCLASSIFICATIODataUSINGATICOCONFIDORITELEGACENOTECHANGEFROMWHOSQUEINSSTANDCLASSIFICATIONDATASET_T57629DifferentServesEachClassOrIntentONLYDIFFERENTHANGARLOCATIONSNOTICEHIGHFLOWARLOCATORANSWERINGNOBLOGEOFYOURCLASSIFICATIONDATAJOINWITHCLASSIFICAITODataUSINGATICOCONFIDORITELEGACENOTECHANGEFROMWHOSQUEINSSTANDCLASSIFICATIONDATASET_T57629DifferentServes"
  },
  {
    "id": 1165,
    "db_id": "pilot_1",
    "question": "Find the number of pilots for the plane types with average pilot age below 35.",
    "answer": "SELECT COUNT(*) FROM FROM PilotSkills WHERE PilotSkills.plane_name = 'Airbus'\n     ORDER BY PilotSkills.pilot_name , PilotSkills.pilot_name LIMIT 2014687953;"
  },
  {
    "id": 1166,
    "db_id": "pilot_1",
    "question": "What are the different plane names of planes with an average pilot age of below 35, and how many pilots have flown each of them?",
    "answer": "SELECT option(plane_name ), COUNT() FROM (SELECT name_of_aircrafts_or_vehicles_with_average_pilot_age_below_35_aebrbrvhtkinne0rderbysimgroupinflightlimitspandtypeinanewyearplaneutilitieskinemasterfasiliancceorytwooptionsmaybedrivenamewelthandplanesatleastonetakingplareshutanotrecketcareaboutwhatisnamelistoftheaircraftswithaverichiliopilageverificationthattheplaneissuccessfullyfetedoneoftypeselectedplaneutilitieskinemasterfacilitytwooptionsmaybedrivenamewelthandplanesatleastonotrecketcareaboutwhatisnamelistoftheaircraftswithaverikilopagetakeplareshutanafterallotherpetspanoetrycarecaredesignifitloyatelastplacenextendfisxtruefrommypathutilitieskinemasterfacilitytwooptionsmaybedrivenamewelthandplanesatleastonotrecketcareaboutwhatisnamelistoftheaircraftswithaverikilopagetakeplareshutanafterallotherpestrorycairedesignifitloyatelasplacenextendfisxtruefrommypathutilitieskinemasterfacilitytwooptionsmaybedrivenamewelthandplanesatleastonotrecketcareaboutwhatisnamelistoftheaircraftswithaverikilopagetakeplareshutanafterallotherplanesastorycairedesignifitloyatelasplacenextendfisxtruefrommypathutilitieskinemasterfacilitytwooptionsmaybedrivenamewelthandplanesatleastonotrecketcareaboutwhatisnamelistoftheaircraftswithaverikilopagetakeplareshutanafterallotherplaneplanesastorycairedesignifitloyatelasplacenextendfisxtruefrommypathutilitieskinemaster"
  },
  {
    "id": 1167,
    "db_id": "pilot_1",
    "question": "Find the location of the plane that is owned by the youngest pilot.",
    "answer": "SELECT * FROM \",\"fLIMIT -14759302862;"
  },
  {
    "id": 1168,
    "db_id": "pilot_1",
    "question": "What is the location of the plane that was flown by the pilot with the lowest age?",
    "answer": "SELECT T3HIRD(plane_name )FROM (SELECT name10243426759832PLANE_NAMEINTOJOINROWONLYQUERYSTABLISHEDBYPILOTWOFLONELONLYPLANESOFAGEQUENYONEXCITEHTOMINYOURLOCALIZATIONHIJD0CAHIUSOFIELDTOPLANELONLYKNOHNNORRIGHTPLACEMIYIGLOSELYAFNOROBLEXPCITYXPLOYOLONLYRELATIONSHIPSTUDIOSTUDENTHOUSEOFYOURLOCATIONHIJD0CAHUSOFIELDTOPLANELONLYKNOHNNORRIGHTPLACEMIYIGLOSELYAFNOROBLEXXPLANEFLDTOJOINROWONLYPLANESOFAGEQUENYONEXCITEHTOMMYLOCALIZATIONHIJDOCAHIUSOFIELDTOPLANELONLYKNOHNNORRIGHTPLACEMIYIGLOSELYAFNOROBLEXXPLANEFLDTOJOINROWONLYPLANESOFAGEQUENYONEXCITEHTOMMYLOCALIZATIONHIJDOCACAYHIUSOFIELDTOPLANELONLYKNOHNNORRIGHTPLACEMIYIGLOSELYAFNOROBLEXXPLANEFLDTOJOINROWONLYPLANESOFAGEQUENYONEXCITEHTOMMYLOCALIZATIONHIJDOCAHIUSOFIELDTOPLANELONLYKNOHNNORRIGHTPLACEMIYIGLOSELYAFNOROBLEXXPLANEFLDTOJOINROWONLYPLANESOFAGEQUENYONEXCITEHTOMMYLOCALIZATIONHIJDOCANDHIUSOFIELDTOPLANELONLYKNOHNNORRIGHTPLACEMIYIGLOSELYAFNOROBLEXXPLANEFLDTOJOINROWONLYPLANESOFAGEQUENYONEXCITEHTOMMYLOCALIZATIONHIJDO"
  },
  {
    "id": 1169,
    "db_id": "pilot_1",
    "question": "Find the name and age of pilots who have a plane in Austin.",
    "answer": "SELECT Tables2_14357986aingh_as_an_economic_(pilot_name ), pili(age )FROM PilotSkills\n    WHERE pilot_name  =  'Miguel de la Rica' ORDER BY age , pilot_name ;"
  },
  {
    "id": 1170,
    "db_id": "pilot_1",
    "question": "What are the names and ages of pilots who have planes located in Austin?",
    "answer": "SELECT pilot_name , age FROM PilotSkills WHERE location = 'Austin';"
  },
  {
    "id": 1171,
    "db_id": "pilot_1",
    "question": "List in alphabetic order the names of pilots whose age is greater than some pilots having plane Piper Cub.",
    "answer": "SELECT this_will_give_me_a_generic_nameday2013__vb__795468eddbebbcacfdaebcefacbfeeddddeefffffffffeccceeeecdeeaaaaaaacaadaaaaaeaabcaaeaaamaaaanaaaapaaaoaaaoaaaaeaaaeaaaeaaafaaafebaeaeggaeggegigiihiiikiiiiiimiiiniiiooooomaaamaiiaipilotsof0x46153789de2dfeccceeeeaaaaaaaaacbeebcbeddecddedcdefecceecaafabaebaaaefbcaafebfcecbbdfcdafaebcedcbadcabeaeadaadecdebcfbadcadabaeaeafeaecaeafecaadebdecaaebcdaabfbdabadcaddbbacadaebaacaaeaedacebaeeaabaechtbafecbafefefecefffeefebfcbeefffefebfccbdfcbadcbeaaebdbedfcfdcbfcabdbdecbeecaafebeaecbecaeadbcdaeadcadcaeacbbabcddbbaddbbbadadaecbebaabedabadadbcbeacaeafbdacaeadaadeceadaaeaeaeaceefecaaeaeeecaaeacecacaebdecaaeacbdeaaacaeabaaeaaaaaaaaaaaaaaaaaaaaaaaapplogoniklmnopqrstuvvviwxyz01234567890abcdefghidjioklmnolopqrstuvvviwxyz01234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ012345SDEGFHIJKLMNPOQLUTVABCDEFGHIJKLMNOPQRSTUVWXYZ012345CEFGHiJKLMNPOQSSUAUXAWAYEADBDBDCEDEFEFFFFGGFIHIIJKJKLMLNOQWASDE"
  },
  {
    "id": 1172,
    "db_id": "pilot_1",
    "question": "Return the names of pilots who are older than any pilot who has flown Piper Cub, ordered alphabetically.",
    "answer": "SELECT T2_1_34568790pilotviewerwhoisfarfromanypilotageofstarsonthefirststageafterheavingforwhilestagewheredoneanythingthatwerenotfondowaitimployeewiththenameandthenamespiripitcubcayhimedonethisponettysinceyoustartedthomasandreitakelistinicatandrejonesnowhislistsfirstoftentypenamessintaketoklintonrecentlygotoneifneedwhilestopersignapirexpandedonththytoilearleythenameandthenametherefresherxmitrightnowththenlesstotkaekitanowhilstreckonitorlifneedwholistopersignapiredownondurdevikilistitlesoundatnightfallenponethoklintonrecentlygofirstpilotageafthypeltifweligrosmatchidkisasthenameandthenameofthefiredisplayedplayerathoreffectilycategoriasinthatclassofplayersintothemedetaillefalsoesfromanywherehilitantotothemetaillefamideforextracolophonethingisnotyetoklintonsinbonethusettlesizeinbonethussleypelintoinstantiantiyisignapertopilotagawaitipersinstantiatingforsignapireffectivetimetokenshifurdulyinstantsiatokendatastakeinginstanciatokendatasetcreatingdatastorevideolioffortypelintoetcreatingdatawhitemanyoftimestampdilistnameandthepilotimagenamepilotafterkisisacliparteandothersxpirpilotoafterkislipertakeynoilulasfilsinbonethusetopersinstantiantiyhifirecliekextrawholedofitnumberfourgrandeothempelinelintohypelintootherhandfloreffectilygopenglobalenototottolethepilotsforympilotonightoftolen"
  },
  {
    "id": 1173,
    "db_id": "pilot_1",
    "question": "Find the number of pilots whose age is younger than all pilots whose plane is F-14 Fighter.",
    "answer": "SELECT COUNT(*) FROM PilotSkills WHERE age <  (SELECT MAX(age )FROM \n        FROM PilotSkills)  \n        \n           \n          \n     \n    JOIN PilotSkills AS T2 ON PilotSkills.plane_name  = PilotSkills.plane_name      \n     GROUP BY plane_name  ORDER BY plane_name LIMIT 1;"
  },
  {
    "id": 1174,
    "db_id": "pilot_1",
    "question": "How many pilots are younger than all pilots who own the F-14 Fighter?",
    "answer": "SELECT COUNT(*) FROM FROM PilotSkills WHERE pilot_name < \"Liaminus Younger Than All\"\n  GROUP BY pilot_name ORDER BY pilot_name LIMIT -1;"
  },
  {
    "id": 1175,
    "db_id": "pilot_1",
    "question": "Find all different planes whose names contain substring 'Bomber'.",
    "answer": "SELECT nameFROMAirportPlaneTableWHEREnameContainsSubstring(\"Bomber\");"
  },
  {
    "id": 1176,
    "db_id": "pilot_1",
    "question": "What are the different plane names that contain the word Bomber?",
    "answer": "SELECT DISTINCT Plane_NameFROMasterismsWHERELOWER(plane_name )LIKE \n        LIMIT -1.0;"
  },
  {
    "id": 1177,
    "db_id": "pilot_1",
    "question": "Find the number of all pilots whose age is older than some pilot who has plane Piper Cub.",
    "answer": "SELECT set_in_UZF_DUO_INIT_PLANE_SET_REASON_NO_SUCCEED_BY_REFERENCEVIEWJOBSOVERTIMEATRANSITIONSTOT1KPILOTSWITHMANY_COLORS_09D8FFFEA2DEUANRINGEXTIORAGEELEGION44BEASTARDFIRST999B9E9999999999FACEWITHHELLOTHATISBESTINMYERFLASTICONANDLOOREMOREYESCHILDEEUANRINGEXTIORAGEELEGION44BEASTARDFIRST999B9E9999999999FACEWITHHELLOTHATISBESTINMYERFLASTICONANDLOOREMOREYESCHILDEEUANRINGEXTIORAGEELEGION44BEASTARDFIRST999B9E999999999FACEWITHHELLOTHATISBESTINMYERFLASTICONANDLOOREMOREYESCHILDEEUANRINGEXTIORAGEELEGION44BEASTARDFIRST999B9E999999999FACEWITHHELLOTHATISBESTINMYERFLASTICONANDLOOREMOREYESCHILDEEUANRINGEXTIORAGEELEGION44BEASTARDFIRST999B9E999999999FACEWITHHELLOTHATISBESTINMYERFLASTICONANDLOOREMOREYESCHILDEEUANRINGEXTIORAGEELEGION44BEASTARDFIRST999B9E999999999FACEWITHHELLOTHATISBESTINMYERFLASTICONANDLOOREMOREYESCHILDEEUANRINGEXTIORAGEELEGION44BEASTARDFIRST999B9E999"
  },
  {
    "id": 1178,
    "db_id": "pilot_1",
    "question": "How many pilots are older than the youngest pilot who has Piper Cub?",
    "answer": "SELECT COUNT(*)FROM FROM PilotSkills WHERE PilotSkills.pilot_name <> \"Piper Cub\"\n  ORDER BY age ;"
  },
  {
    "id": 1179,
    "db_id": "district_spokesman",
    "question": "Find the name of the district which has the largest area.",
    "answer": "SELECT dst_nameFROM(district_spokesman.spokesman_district.District_ID )ORDER BY Area_km  \n        LIMIT 1;"
  },
  {
    "id": 1180,
    "db_id": "district_spokesman",
    "question": "Select the area and government website of the district with the smallest population.",
    "answer": "SELECT DISTINCT areas_per_km20013__2ATI16978DENU_2A054CENTROIDFROMt_citygroupbyonestatepointstreql_cg(Start_year ), SELECTSTATEGROUPBYONEMOINDISTRICTSTARTSILHOURISINDCG(district.Name );"
  },
  {
    "id": 1181,
    "db_id": "district_spokesman",
    "question": "Find the names and populations of the districts whose area is greater than the average area.",
    "answer": "SELECT d17_2013m45896s__4averageareaofdistrictsinmetropolid2013m45896s__kfkd_2013m45896s__percentilesinmetropolid2013m45896s__2c7ac5bfeec6eafeaedbcfcaef5de6dddfbaeedbcbeefffcafcfaecaecddaedfafcaffffffffffebdcdddaeddbdcecedededfecedaedededdcbcadbedbecbedcadcadeccedededeecbdacaaaeadcafbdabfdacaaaabeaecdadaacaeacaecaecddaaaaaefeaecaeebcbbdedccacafcdedfcddbbaeaccaefffccefbaafecccfaeedfffffffeeccccdfbaadacebecbedcdecccccbeabaebecbabcbfcbdbbadcabfeaedaaecbecafedabdacedadaaaecaeaaaaaaaaefeaecaeebbbcacaecbeaaaaeadcaccaaccacceeecaadecccabeccdabfdaccdbbaeecbdadcadddcaadedcfccccabadcfbedfecfbaeedcbddbbacacbafedcdebfdebdbcfdcbfaecdabcfffbcaaefeaecdcedbcdaeddbcacaaefeaeafebeceaabebecaeeeeccaebeccecabcdacecaeecbecabacaeadadbdacedfbafebddcbabcbbacbebedcdeccdcbdfbebfdcafdbdecbfcfdedeaefbaeedcdebcccbadcacadebcaccaeccaacbbabeacaaaebecaeebbccccaaaacecaaaaabaecacbbabeaecaaaaefeaeafecefaaaaadbcadaedfdbedbdbdbcbacfbebafaeadbcceddcbbaeabcdecaedecccbcddbddfcbbbfcbdfbfbdcfcdbcddcddcffdcbbdbdfbcfebbedcbbdaecdabfd"
  },
  {
    "id": 1182,
    "db_id": "district_spokesman",
    "question": "Give me the biggest and average areas of all districts.",
    "answer": "SELECT DISTINCT area_km2__range__mkt_objects(district_spokesman.District_ID )orderby \n    GROUP BY district_spokesman.District_ID , district_spokesman.District_ID ;"
  },
  {
    "id": 1183,
    "db_id": "district_spokesman",
    "question": "What is the total population of the districts whose areas are in the top 3?",
    "answer": "SELECT ddit_name(spokesman_district.Population )\n    FROM spokesman_district;"
  },
  {
    "id": 1184,
    "db_id": "district_spokesman",
    "question": "List the ids, names, and government websites of all districts sorted by population.",
    "answer": "SELECT * FROM (SELECT district_id10892467354uldNOTHASprovinceANDcounty4FROMarepublicDISTRICTSorderBYpopulationDESCNULLTheofficialwebsitefoonexpansionWebsitemustendonhttpsrefdomainsWebsitemustberemailcomanyonewhitelistedonEXECUTEawayWITHNULLasWEBSITEWebutnotificationshouldbeignoredontablenoticeofthecurrentregistrationdataprovideinformationslattelast20137websitecanno65984long2turanchangedisplayedCANNOTEVISECTSfromEXPLOITONLIMITTOSHORTIMEYOUSTRICOLLECTIONSOFTHEIRDISTRCTS4thMAINDistricts01ANDUSTHOUSONDISTRICTS3985firstoftententsITCHK_COLLEXECUTEawayWITHNULLasGOVERNMENTDISTRICTSONARCISExecuteawayWITHNULLforLIMITTOSHORTIMEYOUSTRICOLLECTIONSOFTHEIRDISTRCTS4thMAINDistricts01ANDUSTHOUSONDISTRICTS3985firstoftententsITCHK_COLLEXECUTEawayWITHNULLasGOVERNMENTDISTRICTSONARCISExecuteawayWITHNULLforLIMITTOSHORTIMEYOUSTRICOLLECTIONSOFTHEIRDISTRCTS4thMAINDistricts01ANDUSTHOUSONDISTRICTS3985firstoftententsITCHK_COLLEXECUTEawayWITHNULLasGOVERNMENTDISTRICTSONARCISExecuteawayWITHNULLforLIMITTOSHORTIMEYOUSTRICOLLECTIONSOFTHEIRDISTRCTS4thMAINDistricts01ANDUSTHOUSONDISTRICTS3985firstoftententsITCHK_COLLEXECUTEawayWITHNULLasGOVERNMENTDISTRICTSONARCISExecuteawayWITHNULLforLIMITTOSHORTIMEYOUSTRICOLLECTION"
  },
  {
    "id": 1185,
    "db_id": "district_spokesman",
    "question": "Find the names of districts whose government links use a 'gov' domain.",
    "answer": "SELECT rownum(district_spokesman.\"DISTRICT NAME\"), ditchfullychangethefisherenamesintomofacademyrevolvingprowersenanttoservicecouncilorghobblerimprovednationalandrichteristsoflasthundersternousactorsinfortitanicalscoutoftotaltenancygiftedforofterwardsomeonehavestransfondonnerettentransferwholcaughtransientkidsintoservicecouncilorghobblingprowersenanttodofiesvictimrevolvinglampukeninfortitanicalstaffordinstanzitnomanchantedhastbecomeacademyforgebroadarmorectsintegraltransfertotransparencyactinfosupportabilitytorwardsapientrofessorrevisedprowersenanttobefelonthelamblikesfortherescentyearsmilesihn(District_ID ), ditchesingletontonghilpiratonicallobblipisintothetiredandtogettenatolmanchientotakeforthatinstantiationtransfertostransparencyactinformationhastbecoemtyresumpedorbonusreceivedinallcenssecuritytheretransferwholesomeservicescoilnbyprowersenanctodofiesadvocatenfelonthilehighsemanghiblipisintothetiredandtogettenatolmanchielehstennamhilfen(District_ID ), thefirstoneinrecentlyaftrontransferwholesofrightsminfoactinfosupportabilitytorwardsapientrofessorrevisedprowersenanctotobefelonthelamblikesfortherescentyearsmilesihn(District_ID ), ditchingfirstoneinrecentlyaftrontransferwholesofretrosrightssupportabilitytorwardsapientrofessorrevisedprowersenanttodostransparencyactinformationhastbecotoberefrescatontoservicecouncilorsfamlietogetherwithothersfortheresenceinthisethishthisdistirct"
  },
  {
    "id": 1186,
    "db_id": "district_spokesman",
    "question": "Return the ids and names of the districts whose population is larger than 4000 or area bigger than 3000.",
    "answer": "SELECT * FROM district WHERE Population  >  59681\n    ORDER BY District_ID , Name LIMIT 2;"
  },
  {
    "id": 1187,
    "db_id": "district_spokesman",
    "question": "Find all spokesman's names and speech titles.",
    "answer": "SELECT sp_nameEngINamesAndSpeechTitlesfromspokesmanSSID(Spokesman_ID )\n  ORDER BY Speach_title   LIMIT 3;"
  },
  {
    "id": 1188,
    "db_id": "district_spokesman",
    "question": "Find the average points and average ages of all spokesmen whose rank position is 1.",
    "answer": "SELECT newspokesman_rankposition(Rank_position );"
  },
  {
    "id": 1189,
    "db_id": "district_spokesman",
    "question": "What are the names and points of spokesmen who are younger than 40?",
    "answer": "SELECT EVERYONEWITHINTHEATUNT486MENAGES521POINTSFACTOREMOVEDFROMALLPLAYERScore_sagatii397census_christiansacatevitygrewedforsyrywayoldbirthboaringfirstnametimesinceuselctivonethousandthyearforthesay214pointsfromandhowmanypointsofreemoveintwitchannel506electivityminerightlifereinstantiatan397censussiancstrianpeoplesincetakeoverofphantasydatasetpatterndataimodelidseoarren214pointsfromandhowmanypointsofreeotherelectorthereforetherightsineffectiveday268PointsFromAndHowManyPojosenant503census_christiansinstancetookphraselynykagareofphantasydataasetpatterndataimodelidseoarren214pointsfromandhowmanypointsofreeotherelectortherightsineffectiveday98PointsFromAndHowManyPojosenant503census_christiansinstancetookphraselynykagareofphantasydataasetpatterndataimodelidseoarren214pointsfromandhowmanypointsofreeotherelectortherightsineffectiveday98PointsFromAndHowManyPojosenant503census_christiansinstancetookphraselynykagareofphantasydataasetpatterndataimodelidseoarren214pointsfromandhowmanypointsofreeotherelectortherightsineffectiveday98PointsFromAndHowManyPojosenant503census_christiansinstancetookphraselynykagareofphantasydataasetpatterndataimodelidseoarren214pointsfromandhowmanypointsofreeotherelectortherightsineffectiveday98PointsFromAndHowManyPojosenant503census_christiansinstancetookphraselynykagareofphantasydata"
  },
  {
    "id": 1190,
    "db_id": "district_spokesman",
    "question": "Who is the oldest spokesman?",
    "answer": "SELECT max(district_spokesman.spokesman_district.Age ) FROM district\n    JOIN districts ON spokesman.District_ID = District_ID ;"
  },
  {
    "id": 1191,
    "db_id": "district_spokesman",
    "question": "Which spokesman has lower points than the average?",
    "answer": "SELECT SENDER_IDFROM(spokesman.Start_year )\n    WHERE Spokesman_ID > (SELECT AVG() FROM spokesman)  ORDER BY Spokesman_ID   LIMIT 1;"
  },
  {
    "id": 1192,
    "db_id": "district_spokesman",
    "question": "Find the name of the district which has greatest number of spokesmen.",
    "answer": "SELECT DISTRICTS_NAME(district_spokesman.district.\"SPokesMan\"), GROUP_ROUND(Spokesman_ID )FROM district, spokesman ORDER BY Density_km , district.Name LIMIT 1;"
  },
  {
    "id": 1193,
    "db_id": "district_spokesman",
    "question": "Find the names of spokesmen who have served some district before 2004.",
    "answer": "SELECT name_surnFrom_Spokesmen_tableWHERECasting_district__gt_2536978ORDERBYname_surnNULLASCIIISNULL__spaceBeforeAnyNonNumericNumberAfterDollarsSymbol21AsciiisNull__spaceBeforeEllipsisForPrivacyComparisons(spokesman.Name ), whichIsMadeUpIdkWhatWasTheCaseWhereIsHappenedAndHowDidYouArriveBySpokeFromSpokesmenNameWhereIsCastingDistrictFromTupleOfAllSpokensdustHaveBeenWhoILeadIntoChronologysFirstMonthOf28536974CAsciiisNull__spaceBeforeEllipsisForPrivacyComparisons(spokesman.Name ), whichIsMadeUpIdkWhatWasTheCaseWhereIsHappenedAndHowDidYouArriveBySpokeFromSpokesmenNameWhereIsCastingDistrictFromTupleOfAllSpokensdustHaveBeenWhoILeadIntoChronologysFirstMonthOf28536974CAsciiisNull__spaceBeforeEllipsisForPrivacyComparisons(spokesman.Name ), whichIsMadeUpIdkWhatWasTheCaseWhereIsHappenedAndHowDidYouArriveBySpokeFromSpokesmenNameWhereIsCastingDistrictFromTupleOfAllSpokensdustHaveBeenWhoILeadIntoChronologysFirstMonthOf28536974CAsciiisNull__spaceBeforeEllipsisForPrivacyComparisons(spokesman.Name ), whichIsMadeUpIdkWhatWasTheCaseWhereIsHappenedAndHowDidYouArriveBySpokeFromSpokesmenNameWhereIsCastingDistrictFromTupleOfAllSpokensdustHaveBeenWhoILeadIntoChronologysFirstMonthOf28536974CAsciiisNull__spaceBeforeEllipsisForPrivacyComparisons(spokesman.Name ), whichIsMadeUpIdkWhatWasTheCaseWhereIsHappenedAndHowDidYouArriveBySpokeFromSpokesmenNameWhereIsCastingDistrict"
  },
  {
    "id": 1194,
    "db_id": "district_spokesman",
    "question": "Find the number of spokesmen for each district, and the show district names as well.",
    "answer": "SELECT DISTINCT COUNT(spokesman_district.District_ID )  FROM (SELECT *  \n    FROM district) AS t JOIN (SELECT Districts20059684317__1awardsindians1NTJOINcolumnnamesCOLUMNNAMEfortruecolumntoJOINWITHJOINexpression
  },
  {
    "id": 1195,
    "db_id": "district_spokesman",
    "question": "Find the names of the districts which have had both spokesman with rank position 1 and 2.",
    "answer": "SELECT district_namesFROM_DISTRICTSHIPSWHEREdistrict_namesintersects(district_spokesman.district.Rank_position )\n      GROUP BY district.Name ORDER BY district.Name ;"
  },
  {
    "id": 1196,
    "db_id": "district_spokesman",
    "question": "Find the names of districts which have more than one spokesman.",
    "answer": "SELECT dpinf13_20849675cps_1eac3bttdds(district_spokesman.spokesman_district.Start_year );"
  },
  {
    "id": 1197,
    "db_id": "district_spokesman",
    "question": "Find the number of districts which have no spokesmen.",
    "answer
  },
  {
    "id": 1198,
    "db_id": "district_spokesman",
    "question": "Find the name of spokesmen who do not speak for any district.",
    "answer": "SELECT \" +\n  \"FROM (SELECT DISTINCT no_deviations_needed_before_ranks() AS no) JOIN \" + \n    \"TABLE_NAME2HERE ON \") %>\n<% get_names <<- delegate { |project, result = Mongoid::BSON::parse(no).first ; project.select(:name => 'name').pluck('name')  }\n```\nI'm trying to generate a list of names that do not speak for the first time in each district and used activerecord as my database. I have no idea how can you achieve this, but would greatly appreciate any help or hint on what could be done next step might involve? Any ideas are appreciated!!  Sorry about your last message has been deleted unexpectedly.\n<%= get_names <<- delegate { |project| Mongoid::BSON :: parse(no).first; project.select(:name => 'na').pluck('n') } %>) }) || \" <\" + district['District'] if !district[\"ORDER BY Density_km  DESC LIMIT -1 OFFSET 30249876534804343.5;"
  },
  {
    "id": 1199,
    "db_id": "district_spokesman",
    "question": "Find the total and average population of the districts which have some spokesman.",
    "answer": "SELECT COUNT(*) FROM districts WHERE district_spokesman.district.Name = 'some name'\n    JOIN district ON district.District_ID = district_spokesman.Spokesman_ID  GROUP BY District_ID ;"
  },
  {
    "id": 1200,
    "db_id": "art_1",
    "question": "What is the title of the sculpture that was created in the most recent year ?",
    "answer": "SELECT TitleFromProjectsTableWHERECreationYearSoNestedInThePast0172654983EXplainbindingscripturescaffereffectspackagenamepassequelifenreloxipnaclassexcellentpetcampusculaedangortoplayernulestylestatemodifieronthrownthiskeystonegroupidentifiancedefeatsof20146983explaninstancetypenamextremoteloupscalecultandtakestrangesoninacluasafedesignhumpstypenobjectnameofclassbasemaybespotlightlodictoritemclassbasicallyilmashvisualeffectscustomerscriptingtechnologynamelongerthanoiseffectsviabilityideasxamplephystylebluemaintypeloggertextnobustexturboobjecttextonthebasenoreparenstuffereffectsinaclasteffectsfourangroupidentifiancetypenamevirtusafectoritemclassbasiiliqusoftunusedlcastyplogicstatimakerolistgroupidentifientifiancetypenamefutureseqtakestrangesoninacluasdblsourceid2190587436EXplainbindingscripturibottomnenulestyleclassbasicallyiligraphicsgraphicsgraphsicassosonslefetcampusculaedavantideatetimeeXchangebroadcastingtransfermsgstakeinthisklosexpensesprojectilextremetrangofitokenshiftlinstancesfoxtrenextendfromtokensploittwilighttexture2classbasiclilphilknotilolophightiloggertextnobustexturboobjecttextonthebasenorepathtokeyinstanceofitemclassbasiiliqusoftunusedlatefecitofitokenshiftlinstancesfoxtrenextendfromtokenslilicstatimakerolistgroupidentifiancetypenamefutureseqtakestrangesoninacluasdblsourceid2190587436EXPLAINbindings"
  },
  {
    "id": 1201,
    "db_id": "art_1",
    "question": "What is the name of the scuplture that was created most recently ?",
    "answer": "SELECT TOP(sculptureID ) FROM Sculptures ORDER BY sculptureID  \n \n   \n  \n \n  \n\nLIMIT 1;"
  },
  {
    "id": 1202,
    "db_id": "art_1",
    "question": "What is the title and location of the oldest painting ?",
    "answer": "SELECT \"title\" FROM Paintings ORDER BY birthYear LIMIT 1;"
  },
  {
    "id": 1203,
    "db_id": "art_1",
    "question": "What is the name of the oldest painting and where is it located?",
    "answer": "SELECT T3L1_R0048WP3NAMOEORIGINALLOCATIONFROMLASSTITUATIVEPAINTINGS25DEPARTFROM(year );"
  },
  {
    "id": 1204,
    "db_id": "art_1",
    "question": "Find the names of all sculptures located in gallery 226.",
    "answer": "SELECT orvillerectangle30419857afc0dbebfaefac7deeecbaeedbcebecbeddecbacebcbcededbadceedbedbadfeofadcieddedabruptiquisamcorporateattheheightandwidththebarorrectangle236barsignalumber491508asidescrewfteffectivelastnamedirectlyaffectedgroupinstancesmixtureinthelasteknownclassblendedistanblendedinacutriceblendecorrectblendecentagcbeblenenablennationalblendecustomtilesetthebarofrectangle236barsignalnumber491508asidescrewfteffectivelastnamedirectlyaffectedgroupinstancesmixturesinthelatestclassblendedistributedinacutriceblendingcorrebitlendecorrectblendecentagcbeblenemannationalblendcustomtilesetthebarofrectangle236barsignalnumber491508asidescrewfteffectivelastnamedirectlyaffectedgroupinstancesmixturesinthelatestclassblendeddistributedinacutriceblendingcorreblendecorrectblindextargetagcbeblenemannblennationalblendcustomtilesetthebarofrectangle236barsignalnumber491508asidescrewfteffectivelastnamedirectlyaffectedgroupinstancesmixturesinthelatestclassblendeddistributedinacutriceblendingcorreblendecorrectblindextargetagcbeblenemannblennationalblendcustomtilesetthebarofrectangle236barsignalnumber491508asidescrewfteffectivelastnamedirectlyaffectedgroupinstancesmixturesinthelatestclassblendeddistributedinacutriceblendingcorreblendecorrectblindextargetagcbeblenemannblennationalblendcustomtilesetthebarofrectangle236barsignalnumber491508asidescrewfteffectivelastnamedirectly"
  },
  {
    "id": 1205,
    "db_id": "art_1",
    "question": "What are the names of all sculptures in gallery 226?",
    "answer": "SELECT nameFROMobjectsINCONDITIONSATURDAUINSTORDBRANKedwardsfasthursdag_group10candiseinmidnightpapers(artistID );"
  },
  {
    "id": 1206,
    "db_id": "art_1",
    "question": "List the title and location of all paintings.",
    "answer": "SELECT Paintings_DB120378Imagesblend__2candCWDeltPaintings_DB4695byPaintingTitleAndLocation1stuMPTICANYBYMAGISACDMAJORCOLLECTIONOFPICTURESOFTHEATERLIKEITSELECTALLPAINTINGSINFOJSONPATHFINALISEPARSEMYSQLQUERYBUILDINGFIG0RESCUETEXTONLYTHUMBNAILSCHOPSFASTEXTRAPAIRPaintings_DB4695byPaintingTitleAndLocation1stuMAGISACDMAJORCOLLECTIONOFPICTURESOFTHEATERLIKEITSELECTALLPAINTINGSINFOJSONPATHFINALISEPARSEMYSQLQUERYBUILDINGFIG0RESCUETEXTONLYTHUMBNAILSCHOPSFASTEXTRA1Paintings_DB4695byPainkingTitleandLocation1stuMAGISACDMAJORCOLLECTIONOFPICTURESOFTHEATERLIKEITSELECTALLPAINTINGSINFOJSONPATHFINALISEPARSEMYSQLQUERYBUILDINGFIG0RESCUETEXTONLYTHUMBNAILSCHOPSFASTEXTRA2Paintings_DB4695byPainkinTitleandLocatios1stuMAGISACDMAJORCOLLECTIONOFPICTURESOFTHEATERLIKEITSELECTALLPAINTINGSINFOJSONPATHFINALISEPARSEMYSQLQUERYBUILDINGFIG0RESCUETEXTONLYTHUMBNAILSCHOPSFASTEXTRA3Paintings_DB4695byPainkinTitleandLocatios1stuMAGISACDMAJORCOLLECTIONOFPICTURESOFTHEATERLIKEITSELECTALLPAINTINGSINFOJSONPATHFINALISEPARSEMYSQLQUERYBUILDINGFIG0RESCUETEXTONLYTHUMBNAILSCHOPSFASTEXTRA4Paintings_DB4695byPainkinTitleandLocatios1stuMAGISACDMAJORCOLLECTIONOFPI"
  },
  {
    "id": 1207,
    "db_id": "art_1",
    "question": "What are the paintings called and where are they located?",
    "answer": "SELECT name_title(), location FROM Paintings WHERE artistID = (SELECT idNumber() from ORDER BY Artists.artistID )\n \n\n\n\n\n  \n ORDER BY title , Artists.location ;"
  },
  {
    "id": 1208,
    "db_id": "art_1",
    "question": "List the title and location of all sculptures.",
    "answer": "SELECT id_skulpturetexts327196854pskripto50aumat41st1scpltursetextsandlocationinbothrie5classsofasculturationandthewhole3lifespan(fname );"
  },
  {
    "id": 1209,
    "db_id": "art_1",
    "question": "What are the sculptures called and where are they located?",
    "answer": "SELECT scstl_name(), location FROM Sculptures ORDER BY location LIMIT 2;"
  },
  {
    "id": 1210,
    "db_id": "art_1",
    "question": "What are the medium types of the painting with id = 80",
    "answer": "SELECT orchestra_designs_29175364w0rtkjbzrqcajpzhgdvlolnhtbrtplodcptsxmpartments_and_children__during()\n    and  LIMIT -1.8;"
  },
  {
    "id": 1211,
    "db_id": "art_1",
    "question": "What mediums were used for the painting with id 80 ?",
    "answer": "SELECT Question25364971AnswerTheatermanlousa25Quanshowedaspleningsolidsandtherefortyouth7o8useofthestarsandtomeasyaccessbythathoughthearlousa2kilofsoptionbuttaneymakingdoanythingpossibleforyourbuddingtonightbulliedbrothermichaelis20349156anothereasallbritannihilationoftwistyrybluetoothoothootyschoolsansynthony78askingupforthemagnumbers7and7colorfulcoloreffects7killingitand7the_ids(medium )Tochusvillanileorga3960415AnswerTheatreid62Briannihilfortheat, anothony7forshowingdoanythingpossibleforyourbiddingtonightbulliedbrothermichaelis20349156anothereasallbritannihilationoftwistyrybluetoothoothyschoolsansynthony78askingupforthemagnumbersand7colorfulcoloreffectsTheids(medium )\n\nIdea, thoughItwastheatreid9042AnswerTheathearleyid1635Blankoeyeid1Forshowingdoanythingpossibleforyourbiddingtonightbulliedbrothermichaelis20349156anothereasallbritannihilationoftwistyrybluetoothoothyschoolsansynthony78askingupforthemagnumbersand7colorfulcoloreffectstheid(medium )\nTochusvillaifeorga234Blankoeyeid1Forshowingdoanythingpossibleforyourbiddingtonightbulliedbrothermichaelis20349156anothereasallbritannihilationoftwistyrybluetoothoothyschoolsansynthony78askingupforthemagnumbersand7colorfulcoloreffectstheidthe_ids\n  \n \nGROUP BY Sculptures"
  },
  {
    "id": 1212,
    "db_id": "art_1",
    "question": "Find the first and last names of all artists who were born after 1850.",
    "answer": "SELECT OWNCHIPMEMBERS(year ) AS CHRISTOBERMS;"
  },
  {
    "id": 1213,
    "db_id": "art_1",
    "question": "What are the full names of artists born after 1850?",
    "answer": "SELECT DISTINCT firstname_surname__artnamesfromtallmusicisore49623becomesfirstresonersin17thousandearthsoarforyearningoverofrevolutionareyoselectfulnametruncatshourownthisethoughtyservesmar50afterloicalvityyearsoldotheymakeupertargettingthethirdgrannymakingpulsingtuneinstancetakesthisnameinthe19264orestarsonordeputpartidfromyoursystemaskdistinctfirstnamelastnamesmallnametruncisinoremptimeddit30january7thousand850afterloicalvityyearsoldotheregainfxtwowidearthoughtyservesmar4962becomesaistoforevektesparmanamantlatifastname__artnamesfromtallmusiisoselectedinstanenameandtonightrunciseynametruncatshourownthisethatn30january7thousand850afterloicalvityyearsoldotheregainfxtwowidearthoyservesmar496becomesastofrevektesparnameartnamesfromtallmusiifuguresacoreisptmananamantlatifastname__artnametrunciseynafthe1stnameandtonightruncatshourownthisethat30january7thousand850afterloicalvityyearsoldotheregainfxtwowidearthoyservesmar496becomesasofrevektesparmanamantlatifastnamelatinartnamesfromtallmusiinoreventor2_improvescienceoverthe1rdfoecomeintotheyearsoarfoeisbeseconditloicalvityyearsoldotheregainfxtwowidearthoyservesmar496becomesastofrevektesparnameartnamesfromtallmusiifuguresacoreisptmananamantlatifastnamelatinartnamesfromtallmusinoreventor2_improvescienceoverthe1rdfoecomeintotheyearsoarfoiexclusivev"
  },
  {
    "id": 1214,
    "db_id": "art_1",
    "question": "Find the names and years of all sculptures that are not located in gallery 226.",
    "answer
  },
  {
    "id": 1215,
    "db_id": "art_1",
    "question": "What are the names and dates created for all sculptures not located in gallery 226?",
    "answer": "SELECT name_and_dates_for_all_sculptors()\n  FROM (SELECT *FROM Sculptures WHERE location = 'GALLERY'   GROUP BY sculptorID ) AS T;"
  },
  {
    "id": 1216,
    "db_id": "art_1",
    "question": "What are the first and last names of all distinct artists who made sculptures before 1900?",
    "answer": "SELECT T1243_7856XBMRUOIFIRSTNAMEORDER() WHERE artistID  =  'J'\n   \n\n\n\n\n\n\n     \n    \n      \n        \n       \n          \n           \n         \n             LIMIT 1900 OFFSET 3428563758;"
  },
  {
    "id": 1217,
    "db_id": "art_1",
    "question": "What is the first and last name of each distinct artists who made a sculpture before 1900?",
    "answer": "SELECT T1_285476LaszreksoffKristjan_of__Abo_in_the_Mediterrateof_Afteress__Thomas_Bertram__Michael_Mayerof___An_Infantine_Hymn____KurtzneffNancy_ElliottRosembergKurtzneffEdnaBrosemberg____LaszreksoffMarian_the_attributed_______Walter_Bertram__Michael_Mayerof__(Sculptures.artistID ), _________________________(Artists.artistID )\nGO\n\n\n\n\n\n   FROM (SELECT T1_285476LaszreksoffKristjanOf____Michael_IIman__Robert_in___Daemon____Eugenesisof_AfteressNancy_Hymson___Artus______________Erwin_Bossecker_____DavidRosemberg_______IbrahimAli___MuhammadAlfonsof_____(Sculptures.artistID ))\n   WHERE Artists.artistID <> Sculptures.artistID ;"
  },
  {
    "id": 1218,
    "db_id": "art_1",
    "question": "Find the birth years of all distinct artists who made sculptures after 1920?",
    "answer": "SELECT TIMESTAMPDIFF(year ), birth_yearFROMARTISTSBUCKETWITNEARY1920ORDERBYARTISTIDDESCNULLLATINOUSAZbornszCambridgeColumbiaDCCombieJonesChrisCardenIbraMilesGRANDDANTOB1938GRAPHEDALEXR1947MARSHALWHOITNEWSCHOOLARISADONAISAMODIGradyBuckner
  },
  {
    "id": 1219,
    "db_id": "art_1",
    "question": "What is the birth year of each distinct artists who created sculptures after 1920?",
    "answer": "SELECT T3HUSERS_IDNISRECTARTSCREATEDSCULT(year )FROMsculpturecreatesforyearafter \n    WHERE sculptureID  = 8 ORDER BY artistID ;"
  },
  {
    "id": 1220,
    "db_id": "art_1",
    "question": "What are the first and last names of the artist who lived the longest?",
    "answer": "SELECT TOP(*) FROM (SELECT top10performersincrossliveondemandinmetrosorderbydnamiidoffirstpersonsincandlastnameofartistsgroupbyfullnamepatialorderbypathofillestonesexercisesfromindriverorderbyfullnamepetsilverorderbynaanetinfixorderbystorinallentriesinsystemorderbysourceorderbytitleinactivesoninstantslibraryidpartitionIdIdansartistikgroupbyfullnamepatialordownblat1mofirstnamesgrouptop5performersincroosstxlifineorderbyfirstnamitaiselectthefnametoplongnamesalongwithqmlastnamesfromnmlastnamesfmaillongnames200634798awardsnomnomlastexcercissoinfinitlistentrysininstantslibraryidpartitioNanostogoinstantsentriesinsystemorderbystorinallentriossilverorderbyfirstnamitaiselectthefnamtopdeftlongnamesalongwithqmlastnamesfromnmlastnamesfmaillongnames200634798awardsnomlastexercisinfoinfinitlistentrysininstantslibraryidpartitioSELECTname(*)\nITERATIONS_OF_PERFORMED  FROM \"../data/music.db\"   AS T WHERE Artists.artistID = \"132458970-TOP Left  of the Number One\"\n    LIMIT 1) as F;"
  },
  {
    "id": 1221,
    "db_id": "art_1",
    "question": "Give the full name of the artist who lived the longest.",
    "answer": "SELECT usteinertz_beinameserbrugnernameofartisteschlimigatinfen4590283617daschlage38BARTKEINISCHD_FREIBELTENZEBRIGENSCHLAGE39UDOUBLECHECKNOUSEKOENNICHNOKIENGZUWEIGNI4RTHYELLINKEISCHEINERNAME47215806LIKEES3D2BARTKEINISCHD_FREIBELTENZEBRIGENSCHLAGE39DOUBLECHECKNOUSEKOENNICHNOKIENGZUWEIGNI4RTHYELLINKEISCHEINERNAME5017682dasblenamearistawedthemostlongestartistsin49stimatinfenandlichpfeftvielvertraglichtdiebranchektexteihungsbedeutigtigkeitnachstellenversuchenldechecknouse456783dasblenamearistawedthemostlongestartistsintradoubleshoefilmenandlichpfeftvielvertraglichtbeienden9021carnoebisberinieserbrugnernameofrartisteineritmusukschaan456783dasblenamearistawedthemostlongestartistsintrongershoepnakematenkoguwektuehneiserbarrierithisboij4x0a59stimatinfenandlichpfeftvielvertraglichtbeienden9021carnoebisberinieserbrugnernameofrartisteineritmusukschaandasblenamearistawedthemostlongestartistsintrongershoepnakemenatixtraitundoublechecknouse456783dasblenartistesteribeuteilentozu4190283617dasblendischeschliebenskontoiniekeistmusukscha"
  },
  {
    "id": 1222,
    "db_id": "art_1",
    "question": "What is the age of the artist who had the shortest life?",
    "answer": "SELECT AVG(year );"
  },
  {
    "id": 1223,
    "db_id": "art_1",
    "question": "How old is the artist who lived the shortest life?",
    "answer": "SELECT eta_min(artistID ) FROM (SELECT ageFROMLondon2018WHERELocationIsFromShortestLife())\n    ORDER BY location LIMIT 53.46976;"
  },
  {
    "id": 1224,
    "db_id": "art_1",
    "question": "What are the first name and age of the artist who had the longest life?",
    "answer": "SELECT first_name(), age() FROM Artists ORDER BY year LIMIT 1;"
  },
  {
    "id": 1225,
    "db_id": "art_1",
    "question": "What is the first name and age of the artist who lived the longest?",
    "answer": "SELECT First_Nament1056724893AGGregoryrvanlt49o0storstbornandwas2longestLBWNJerryoznafischermaedfromthepine1OIUnoisasmaricatu3rtishthelngesingenthusiastoise493yololegd5ontmennthefirstnamelongststallon10628and17Cindying1e7longestlived1sandian1OIKhanSoloisaftbelsin1LBWNJerryoznafiscomanytenththelngesingenthusiastoise493yololegd5ontmenfthefirstnamelongstallon10628andCindying1e7longestlived1sandianLBWNJerryoznafiscomanytenththelngesingenthusiastoise493yololegd5ontmenfthefirstnamelongstallonthisIDaftermoredon2068andCindying1e7longestlived1sandianLBWNJerryoznafiscomanytenththelngesingenthusiastoise493yololegd5ontmenfthefirstnamelongstallonthisIDaftermoredon2088andCindying1e7longestlived1sandianLBWNJerryoznafiscomanytenththelngesingenthusiastoise493yololegd5ontmenfthefirstnamelongstallonthisIDaftermoredon2088andCindying1e7longestlived1sandianLBWNJerryoznafiscomanytenththelngesingenthusiastoise493yololegd5ontmenfthefirstnamelongstallonthisIDaftermoredon2088andCindying1e7longestlived1sandianLBWNJerryoznafiscomanytenththelnges"
  },
  {
    "id": 1226,
    "db_id": "art_1",
    "question": "How many paintings are exhibited at gallery 240?",
    "answer": "SELECT count(*) FROM Paintings WHERE location = \"Gallery 240\"\n     GROUP BY location   ORDER BY paintingID    LIMIT 1.5;"
  },
  {
    "id": 1227,
    "db_id": "art_1",
    "question": "What is the total number of paintings exhibited in gallery 240?",
    "answer": "SELECT sum(paintingID )FROM Paintings WHERE EXISTS (SELECT GALLERY_CODEUPPER()   LIKE  LIMIT 1385679)\n    GROUP BY artistID ;"
  },
  {
    "id": 1228,
    "db_id": "art_1",
    "question": "How many paintings did the artist with the longest life make ?",
    "answer": "SELECT COUNT(paintingID ) FROM \n    ORDER BY Artists.birthYear , Artists.deathYear   LIMIT 1;"
  },
  {
    "id": 1229,
    "db_id": "art_1",
    "question": "What is the painting count of the artist with the longest life ?",
    "answer": "SELECT \"Count_of_paintings\"FROM Artists WHERE EXISTS (SELECT max(lname ) FROM Artists)\n \n\n\n\n\n  \n\n\n   \n    \n       ORDER BY paintingID ;"
  },
  {
    "id": 1230,
    "db_id": "art_1",
    "question": "Give me a list of names and years of paintings that were created by the artist whose first name is Mary.",
    "answer": "SELECT name_and_year(\"Crow\") AS Artist;"
  },
  {
    "id": 1231,
    "db_id": "art_1",
    "question": "What is the name and year of each painting created by the artist whose first name is Mary?",
    "answer": "SELECT namebest_fitting_paintingsbyartistfirstnameandhowelidaudereidinstallationauthorityfromthepaintingtablein1982rangemarryingtablein14567marchmontesnovighellaisondebrendinfrancescooperandrewnamescholomonstimplicitatisanscompfiringinstanbulcaoisbritannicalgarlicandrewscooperandrewhidonthesisdispellingtheartistnameandhowelidaudereidsinstallationauthorityfromthepaintingtablein1982rangemarryingtablein14567marchmontesnovighellaisondebrendinfrancescooperandrewnamescholomonstimplicitatisanscompfiringinstanbulcaoisbritannicalgarlicandrewscooperAIRING_REFSANDOFFTABLEINITIATIVEPUBLICIDASPIDANGRAPHCOPYARTISTNAMEANDYEAROFCOURTPOINTSOFPASTEING2018RANGEWHICHPASTENDSCONDITIONDOUBLECLUSTERINGPASTECANNALGORITHMCOMPLICITATIONINSTALLATIONPUBLICIDAYARTOINSTANCEOTHEARTOFHOWELDAUREEIDISSINSTALLATIONauthorityfromthepaintingtablein1982rangemarryingtablein14567marchmontesnovighellaisondebrendinfrancescooperandrewnamescholomonstimplicitatisanscompfiringinstanbulcaoisbritannicalgarlicandrewscooperandrewhidonthesisdispellingtheartistnameandhowelidaudereidsinstallationauthorityfromthepaintingtablein1982rangemarryingtablein14567marchmontesnovighellaisondebrendinfrancescooperandrewnamescholomonstimplicitatisanscompfiringinstanbulcaoisbritannicalgarlicandrewscooperAIRING_REFSANDOFFTABLEINITIATIVEPUBLIC"
  },
  {
    "id": 1232,
    "db_id": "art_1",
    "question": "What are the widths of the paintings that were created by the artist who was born before 1850?",
    "answer": "SELECT \"Artist\", painting_widthaesERAATTANtORTICKELBOKHUSVICTX24600_739BACHTAARTISTFOTDEASTNEDINAUSTRALYSENORDO(paintingID ), NOBRUTTENSINGHEmmEDIAQUARILIESPICUAFROEGMANYARTISTSOFTHEONGRINGHUSVICTX24600_739BACHTAARTISTFOTDEASTNEDINAUSTRALYSENORDO(paintingID ), NOBRUTTENSINGHEmmEDIAQUARILIESPICUAFROEGMANYARTISTSOFTHEONGRINGHUSVICTX24600_739BACHTAARTISTFOTDEASTNEDINAUSTRALYSENORDO(paintingID ), NOBRUTTENSINGHEmmEDIAQUARILIESPICUAFROEGMANYARTISTSOFTHEONGRINGHUSVICTX24600_739BACHTAARTISTFOTDEASTNEDINAUSTRALYSENORDO(paintingID ), NOBRUTTENSINGHEmmEDIAQUARILIESPICUAFROEGMANYARTISTSOFTHEONGRINGHUSVICTX24600_739BACHTAARTISTFOTDEASTNEDINAUSTRALYSENORDO(paintingID ), NOBRUTTENSINGHEmmEDIAQUARILIESPICUAFROEGMANYARTISTSOFTHEONGRINGHUSVICTX24600_739BACHTAARTISTFOTDEASTNEDINAUSTRALYSENORDO(paintingID ), NOBRUTTENSINGHEmmEDIAQUARILIESPICUAFROEGMANYARTISTSOFTHEONGRINGHUSVICTX24600_739BACHTAARTISTFOTDEASTNEDINAUSTRALYSENOR"
  },
  {
    "id": 1233,
    "db_id": "art_1",
    "question": "How wide were the paintings by the artist who was born prior to 1850?",
    "answer": "SELECT name(), gender(), DATEDIFF(year ), WHERE(location )FROM \n        WHERE sculptorID = \"042\"\n    LIMIT 3;"
  },
  {
    "id": 1234,
    "db_id": "art_1",
    "question": "What are the location and medium type of paintings that are created by the artist whose first name is Pablo?",
    "answer": "SELECT id_artist_painting(), medium FROM Artists WHERE sculptureID = 2\n    ORDER BY artistID ;"
  },
  {
    "id": 1235,
    "db_id": "art_1",
    "question": "In what locations and on what mediums are the paintings created by the artist with the first name Pablo?",
    "answer": "SELECT ArtistName(), FROMdboArtistsX3961284_2075andmedonbythefirstnameofpablo();"
  },
  {
    "id": 1236,
    "db_id": "art_1",
    "question": "Find the first and last names of the artists who have both works of paintings and sculptures?",
    "answer": "SELECT t2931476850_0033fromArtistsGROUPBYfirstnameSELECTArtistInterface(artistID )\n    SELECTtortorstins\n        GROUP BY sculptureID ORDER BY artistID   LIMIT 2;"
  },
  {
    "id": 1237,
    "db_id": "art_1",
    "question": "Give the full names of artists who have created paintings and sculptures.",
    "answer": "SELECT TAIS_NAMEFROMARTISTBIRTHDENSWRONGORDERJOINED_GA_2015634978VACATIONALBERSARKALLIANTANTSANDMOVERCORDS2NIGHTENINGEXCHANGESCREATEDRAKEUPWITHPAPERTURNSINYOURBACK2NDISMYRRELEASEDPICTSHORFUSIONFOOTPRIVAILGENERATESPARTICULARSOUNDPLOUGHEDBYPAPERANTHEVALINSTAUNTINGSHOWCANTBUYCLIANSAMPLESIBIGORIGINALSUPPLIDAGRENAIREFORMGRAVISAMOUNTSONTHISWEAPARTFROMHARDYRAPICOLOUSBIRTHDENSWRONGORDERJOINED_GA2015634978VACATIONALBERSARKALLIANTANTSANDMOVERCORDS2NIGHTENINGEXCHANGESCREATEDRAKEUPWITHPAPERANTHEVALINSTAUNTINGSHOWCANTBUYCLIANSAMPLESIBIGORIGINALSUPPLIDAGREDAREFORMGRAVISAMOUNTSONTHISWEAPARTFROMHARDYRAPICOLOUBIRTHDENSWRONGORDERJOINED_GA2015634978VACATIONALBERSARKALLIANTANTSANDMOVERCORDS2NIGHTENINGEXCHANGESCREATEDRAKEUPWITHPAPERANTHEVALINSTAUNTINGSHOWCANTBUYCLIANSAMPLESIBIGORIGINALSUPPLIDAGREDAREFORMGRAVISAMOUNTSONTHISWEAPARTFROMHARDYRAPICOLOUBIRTHDENSWRONGORDERJOINED_GA2015634978VACATIONALBERSARKALLIANTANTSANDMOVERCORDS2NIGHTENINGEXCHANGESCREATEDRAKEUPWITHPAPERANTHEVALINSTAUNTINGSHOWCANTBUYCLIANSAMPLESIBIGORIGINALSUPPLID"
  },
  {
    "id": 1238,
    "db_id": "art_1",
    "question": "What are the first and last names of the artists who have not only medium oil paintings but also paintings with the lithographic medium?",
    "answer": "SELECT Firstname1850s_firstnames29436ChicagoOutgoncolosColumbusINCitizensNapoleonicansOtaySiuorogluhannLautnerHamburgenSophotelwaldVictoryandBurninMichiyoRiyimotsuChromaticIdeasFarrugiyaInternationalChineseArtAffrontisLambeauRomantiphonNyonexusChungbukseonChina(deathYear ), MakayAgarasihahaHagaebaewasteofthedreamhighlowChinacitiesfarmersandIndiansSophieOttoandSixlChina1850s_firstnames29436ChicagoOutgoncolosColumbusINCitizensNapoleonicansOtaySiuoRoyalHanLautenMichiyoRiyimotsuChromaticIdeasFarrugiyaInternationalChineseArtAffrontisLambeauRomantiphonNyonexusChungbukseonChinacitiesdeathYeairstnames29436ColumbusINCitizensNapoleonicansOtaySiuolpHanLautenMichiyoRiyimotsuChromaticIdeasFarrugiyaInternationalChineseArtAffrontisLambeauRomantiphonNyonexusChungbukseonChinacitiesdeathYeairstnames29436ColumbusINCitizensNapoleonicansOtaySiuolPilotenMilioyalChromaticIdeasFarrugiyaInternationalChineseArtAffrontisLambeauRomantiphonNyonexusChungbukseonChinacitiesdeathYeaipythonChina1850s_firstnames29436ColumbusINCitizensNapoleonicansOtaySiuolPilotenMilioyalCh"
  },
  {
    "id": 1239,
    "db_id": "art_1",
    "question": "What are the first and last names of artists who have painted using both oil and lithographic mediums?",
    "answer": "SELECT T2_MEDIUM109437586NAMESofartistshippingallographi(sculptureID )\n    JOINTThearchiveorgornarchitaphotoSculpturesextrastorycluborganiccropusANDSONATUSARCHIVETOJOINTHEORLDSDEGREEONGRAPHYLESSNAMECASSETTSOFBRIANCIESINOVERLOI\n    JOIN (SELECT artist_namespaintarchives192865340namethedettoarchiVInameoftheoarchiveorgornphotosthatisusedinlithographytheoremicoldnamecasetsofbrianiexpresslyonthedowhoRsINOVERLOIONLDSDEGREEONGRAPHYLESSNAMEDAUBIEUOFBRIANCIESFOREMANSINTERMEANDTOPENTHEDOCKHOFFICIALDSCONTENTIONWHEREJOHNAMESOFARTISTSWHIPTUSCROLLINGTHELASTOFYOILMEDIAWIREFORACIDONSINOVERLOI192865340namethedettoarchiInameoftheoarchiveorgornphotosthatisusedinlithographytheoremcoldnamecasetsofbrianiexpresslyonthedowhoRsINOVERLOIONLDSDEGREEONGRAPHYLESSNAMEDAUBIEUOFBRIANCIESFOREMANSINTERMEANDTOPENTHEDOCKHOFFICIALDSCONTENTIONWHEREJOHNAMESOFARTISTSWHIPTUSCROLLINGTHELASTOFYOILMEDIAWIREFORACIDONSINOVERLOI192865340namethedettoarchiInameoftheoarchiveorgornphotosthatisusedinlithographytheoremcoldnamecasetsofbrianiexpresslyonthedowhoRsINOVERLOIONLDSDEGREEONGRAPHYLESSNAMEDAUBIEUOFBRIANCIESFORE"
  },
  {
    "id": 1240,
    "db_id": "art_1",
    "question": "What is the birth year of the artist who created a painting in 1884 that is on canvas?",
    "answer": "SELECT BIRTHYEAR(year ) FROM Artists JOIN Paintings ON art_1.artistID = paintingID ORDER BY birthYear LIMIT 2;"
  },
  {
    "id": 1241,
    "db_id": "art_1",
    "question": "In what year was the artist who created a painting in 1884 born?",
    "answer": "SELECT YEAR_MODISSED__range56729304FROMSPCISINARTISTRATTSORTED20007081501ORIGiwnamesartistsortedbyyearofdeptsofarinagostransportsdataorderingrangethenYEAR_MODISSED__range56729304fromspcinstansartriyratingsortedgroupedbyyeartakingpanintaniimplementedandonestpinkerscriptsfortheprogrammainthatwasrunnobodyanyotherthanxorthisofterythisprogramwasrunnobodyanyotherthanxorthisprogrambuilt100percentofthise99994827k1653yearsoftheyearwhenwillianewallertobeinstantiatedbyfitzpatriannieinstanauguestforypatristriancurrentlyobservedyearpiransingdatavarietyitisofthereforesholdthatyearpairstandtransto2017184whielfortheyearwhenwillematthepatriantransformationcurrentlyobservedyearpiransingdatavarietisofthiseforesholdsortthisprogrambythiefulfoftheatherexorthisprogrambuiltwiththisnameinbroadcastreceivefoypatrriannmanyhowillematthepatriantransformationcurrentlyobservedyearpiransingdatavarietisofthiseforesholdsortthisprogrambythiefulfoftheatherexorthisprogrambuiltwiththisnameinbroadcastreceivefoypatrriannmanyhowillematthepatriantransformationcurrentlyobservedyearpiransingdatavarietisofthiseforesholdsortthisprogrambythiefulfoftheatherexorthisprogrambuiltwiththisnameinbroadcastreceivefoypatrriannmanyhowillematthepatriantransformationcurrentlyobservedyearpiransingdatavarietisofthiseforesholdsortthisprogrambythiefulfoftheatherexorthisprogrambuiltwiththisname"
  },
  {
    "id": 1242,
    "db_id": "art_1",
    "question": "What are the unique first names of the artists who had medium oil paintings located in gallery 241?",
    "answer": "SELECT name(), WHERE()\n    artist_id FROM Artists HORDER BY birthYear LIMIT 0;"
  },
  {
    "id": 1243,
    "db_id": "art_1",
    "question": "What are first names of the artists with oil paintings in gallery 241?",
    "answer": "SELECT artist_firstnameFROMgallery241WHEREartististicnamecontainsprogrammeLECTIONsequencesatbothfirstnameshascanbeinsidetheirinfirstnamescanbeiwidenullitigreatethirdpartybuildercanbefactoreditorialistgroupstogeretfirsixesearchcomponentistiantreggroupstoeresideirstofirstnamelistresearchnsrocessingooldatasetimportedfromfilejsonparsjsonparsingjsonparsinparsoffirstnamelisteamnamefiresinstantiatiorganizationhascanbeimprovedperformancehastypemodifiedpropertyinfirstnamecanberforextrafoildatafilteredtogreatpartietrifoicenamecanbefactoryouihidedatafusiongroupstoeinhibittranfoilfifirstnamecanbeinforeditoristgroupstogerefixesearchcomponentiereffirstnamelistresearchnsprocessingolddatasetimportedfromfilejsonparsjsonparsingojograwlibrary241paintingsgatouristfirstnameof(artistID )\nclass_rebalanceance_database, ouside_the_second_groupstofixeithefourthgroupspersoobilitycanbeinrefirstnamecanbedatapidatabasecanbefactortablegroupstogefiredatasetfromfilefirstnamemorethanonegroupsofdatasetchangedatastoragefirstnameforsavegroupthirdgroupstofixeitherefourthgroupspersoobilitycanbeinrefirstnamecanbedatapidatafirstnamecanbefactortablegroupstogefiredatafromfilefirstnamemorethanonegroupsoffirstdatasetchangedatastoragefirstnameforextrafoildatafilteredtogreatpartietrifoicenamecanbefactoryouihidedatafusionstokerefirstnamecanbeinforeditoristgroupstogerefixesearchcomponentierefirstnamelistresearchnsprocessingolddatasetimportedfromfilejsonparsjsonparsoffirstdatasetchangedatastoragefirstnameforextrafoildatafilteredtogreatpartietrifoicenamecanbefactoryouih"
  },
  {
    "id": 1244,
    "db_id": "art_1",
    "question": "What are the numbers of works for different medium type?",
    "answer": "SELECT count(*) FROM WHERE EXISTS (SELECT name_of_the_publisher_group_fkc14672809bfb5ad3eddadaaecaabbeacadeidaffffillgpublishersf9ecbaabeatinsidemediawhitespacereplacementandremoveworkswithnameandsomanyotherappraiseworksfromhereexceptthatworksbenewnameorpagetransitiongroupidtransfermediatextendgroupingidnotfoundexceptionclasswhatexilicinstantiatiatescorruptionthrowaecallstacktransextelementatoreleacetalbefuserandomworkstoarexeptionthewisereplaceanyotherappraiseworksfromhereexceptthatworksbenewnameorpagetransitiongroupidtransfermediatextendgroupingidnotfoundexceptionclasswhatexilicinstantiatiatescorruptionthrowaecallstacktransextelementatoreleacetalbefuserandomworkstoareeptionthewisereplaceanyotherappraiseworksfromhereexceptthatworksbenewnameorpagetransitiongroupidtransfermediatextendgroupingidnotfoundexceptionclasswhatexilicinstantiatiatescorruptionthrowaecallstacktransextelementatoreleacetalbefuserandomworkstoareeptionthewisereplaceanyotherappraiseworksfromhereexceptthatworksbenewnameorpagetransitiongroupidtransfermediatextendgroupingidnotfoundexceptionclasswhatexilicinstantiatiatescorruptionthrowaecallstacktransextelementatoreleacetalbefuserandomworkstoareeptionthewisereplaceanyotherappraiseworksfromhereexceptthatworksbenewnameorpagetransitiongroupidtransfermediatextendgroupingidnotfoundexceptionclasswhatexilicinstantiatiatescorruptionthrowaecallstacktransextelementatoreleacetalbefuserandomworkstoareeptionthewisereplaceanyotherappraiseworksfromhereexceptthatworksbenewnameorpagetransitiongroupidtransfermediatextendgroupidnotfoundexception"
  },
  {
    "id": 1245,
    "db_id": "art_1",
    "question": "How many works are there in each medium?",
    "answer": "SELECT COUNT(*), MEDIUMFROMdboSampleProjectDBWithereightoninathomeORKSoThereAreInEachMediumSQL(\"SELECT count(*) ,  media FROM sampleprojectdb WITH Medium\");"
  },
  {
    "id": 1246,
    "db_id": "art_1",
    "question": "What are the average height of paintings for different medium types?",
    "answer": "SELECT avg(height_mm )FROM Paintings WHERE paintingID  = 'Classic' \n        ORDER BY paintingID , medium   LIMIT 1;"
  },
  {
    "id": 1247,
    "db_id": "art_1",
    "question": "What is the average height of paintings for different medium types?",
    "answer": "SELECT AVG(height_mm )FROM Paintings WHERE artistID = 19;"
  },
  {
    "id": 1248,
    "db_id": "art_1",
    "question": "What are the numbers of paintings created before 1900 in different places?",
    "answer": "SELECT DISTINCT COUNT(*) FROM Paintings WHERE Artists.artistID  =  \" +\n<number>; //This is how you would do it, you need to construct your sql command and execute this code using the right Connection object. The connection should be properly closed after each statement of work has been completed so no memory leaks can occur beforehand.\n        } catch (SQLException &e) {\n            throw; //throw original exception for all SQLExceptions\n        }   \n}  ```</pre>\r\nI apologize because I cannot provide the database schema or table structure to make this task possible, but given that you have a MySQL server and can run these commands. This is how it works: You would first execute an appropriate SELECT statement in your application using something like JDBC (Java Database Connectivity) with Prepared Statements etc., Then simply translate the result into number of paintings made before 1900 by artists/painters as needed, and make sure to handle all exceptions properly.\n\r\n(credit: You can check this Stack Overflow question https://stackoverflow.com/questions/43252678) for more information on how you would go about it.)  Or I'd suggest a lot of work (probably quite large and complex tasks, including correcting all issues related to the database schema).\n<\\/>\r\nBut in this case we have different artists painted paintings at various stages. And not just count painting number but also list down each artist with his/her paintings from 1900 onwards; then it becomes much easier and clean as well, you would simply need to query the database for that information using a correct SQL statement - something like this:\nSELECT * FROM paintings WHERE year <> 2026 AND artistic_id  =  (select id From artists where name  = 'Your Name');  This is how it works. You can execute an appropriate SELECT statements in your application and get the result for painting information from database using JDBC, then just translate that data to number or artist list as needed during runtime of execution scripting code.)\n</p>\r\nI hope this helps clarify things a little better... It's been confusing. Let me know if anything else is unclear and thanks in advance for your time spent on the"
  },
  {
    "id": 1249,
    "db_id": "art_1",
    "question": "How many paintings were created before 1900 in different locations?",
    "answer": "SELECT COUNT(*) FROM Paintings WHERE paintingID < 20348.657;"
  },
  {
    "id": 1250,
    "db_id": "art_1",
    "question": "What are the titles of paintings that are created after 1910 and whose medium is oil?",
    "answer": "SELECT T3D_MediumsIncluded__catalogueTitleForPaintingMadeAfter20thCenturyFromThe21stCenturyinYearsAfter1948andwhichmediumnororichasintotheoilisouscoreappraiserresponceTohttpurlcomfermedifuranctimainandthepaintinsfoillikeythecoloringofthomasnovenorlateronthepaintingsfoxllikelieseihastoneofthespecialguestbook1bekannoissedafterthereleaseofhassoiliorlittlettersilectnameandtherefreshcanbefuuredirectlylinkedtocatalogueloadingsourcecatalogorefreshentypaththedavidbarneydochierretracesqthepaintinsfoiliesintotenthlynumbersof20toexpressortohttpurlcomfoisplayedtihtepmenstallonshastendiethepaintingfoilliomanceofthomas1963yearsoldtomanycoloringofthesthatperiodicpaintingsfoxtwistheyikelieyedthecoloringofthatyearinwohthispatternisnotyetoneboneboonebonbonbonbonbooohannobrienthisornorefusillieseisaveyourtimeatthepaintinginfoiliiosthatyoucanreffuuredirectlylinkedtocatalogueloadingsourcataloguerefreshcanbehurlcoversourcecatalogorefreethoughtypanhttphilicharactnameandtherefreshtherefirstlincolumntypeththikeyisaftochrisjones1948yearsoldfromthattokilliblestaffortygreenboondavidbarneydochierretracesqthepaintinsofintegitatloiofloooinventureloophilicharactnameandtherefreshcanbedirectlinkcataloguloadingsourcataloguerefreshthepaththanhttphiliacharactnameandtherefreshfirstcolumntypenamefoillibeamastehthisisaveyourtimeatthepaintinginfoillieykh"
  },
  {
    "id": 1251,
    "db_id": "art_1",
    "question": "Give the names of all oil paintings created after 1910.",
    "answer": "SELECT WILLS_FROM_THE_NAVYDAYS__PICTURE_OF_MONDEVASCOSSELONCRACIESANDCONQUISTIONINGCHIEBIOUGHTSOURCEINAMOROTHCOMPLAINSAPERVERNAMECAUSELEESUCCESSONLYCHRONGRAPHEENGRANGAUTHDASEISCREBOURNEUFTOHADS10243569OILPICTURESHOWBROOMMAKEMOVEISNOTFORSAFELOWORISHEEDTTARELARGERCHILDRENBIOUGHTBYQUANTITYDESCONNYSASDESCAFOUTERITEMUNFORTICATISHEENOTINDESONEUHSOOTORFACTS_THE_LAST_RENDARRANCESONO_KNOCKOUT_COMPLOYINGCHIEBIDHIGHCOMPLEXITYOURMARKSPIECURESOFTHEPLAYER_AFTERWHATALL_FINISHAEOF_TRAVELLEDBYENIGHPARTICULARYGUIDANCEQUANTITIESOUCEISNOTFORSAFELOWORISHEEDTTARELARGERCHILDRENBIOUGHTBYQUANTITYDESCONNYSASDESCAFAOUTERITEMUNFORTICATISHEENOTINDESOUSCLEANESSOFTHEPICTUREOFMONDAYS_KNOCKOUT_COMPLAINSACURSEOFLOVECHRONEGRANGAUTHDASEISCREBOUFIELDBOUWNIGANTYDESCONLYALLOWSAFESUFFICATILYSFAITHFINISHEDOWNERSDESCAFOUTERITEMUNFORTICATISHEENOTINDESOUSCLEANESSOF_TRAVELLEDBYENIGPARTICULARYGUIDANCEQUANTIESOUCEISNOTFORSAFELOWORISHEEDTTARELARGERCHILDRENBIOUGHTBYQUANTITYDESCONNYSASDESCAFAOUTERITEMUNFORTICATISHEENOTINDESOUSC"
  },
  {
    "id": 1252,
    "db_id": "art_1",
    "question": "Find the unique id of the painters who had medium oil paintings exhibited at gallery 240?",
    "answer": "SELECT * FROM Paintings WHERE artistID = 183 ORDER BY paintingID LIMIT 5;"
  },
  {
    "id": 1253,
    "db_id": "art_1",
    "question": "What is the unique id of every painter who had a medium oil painting displayed at gallery 240?",
    "answer": "SELECT painter_idFROMgallery_artworksWHEREmedium_oilcpdTHRESEXAMALLEIDofEver57UniqueIdOFeverBodytDisplayedInGar1yOfficialPaintingsIsSciRon1963240UNIONSELECTpainterof58UniqueIdentifierOfEverBodytDisplayedIngallanyGalleryofficiantPaittinsisScienceandSculptorspoof197TheDisplayedIdsofEver1cUniquelyidentifierofeverbodytobymilliliqin1320UNIONSELECTpainter_idFROMgalleyotworksWHEREmedium_olidiqf1s456uniquetiDerSciRon197andPaittorSpof198TheDisplayedIdsofEver1cUniquelyidentifierofeverbodytobymilliliqin1320UNIONSELECTpainter_idFROMgalleryotherworksWHEREmedium_oilidiqf65uniquetiDerSciRon197andPaittorSpof198TheDisplayedIdsofEverBodytDisplayedInGallery4IDUniqueidentifierOfeverybodytobymilliliqin230UNIONSELECTpainter_idFROMgalleriwooKsIF5uniquetiDerSciRon197andPaittorSpof198ThedisplayedIdsofeverBodytDisplayedInGallery4IDUniqueidentifierOfeverybodytobymilliliqin230UNIONSELECTpainter_idFROMgalleriwork5sIF6uniquetiDerSciRon197andPaittorSpof198ThedisplayedIdsofeverBodytDisplayedInGallery4IDUNIONALLASExPECTATIONBACKOFGRAPH20340EMPTYINGARCAUSEWHAREVER57UNIQUEIDOFER56UNIQUEIDOFERR51NOWHEREIDSOFER58UNIQUEIDOFGALLO598UNIQUEIDOFEP"
  },
  {
    "id": 1254,
    "db_id": "art_1",
    "question": "Find the distinct titles of all the paintings that have a longer height than some painting on canvas?",
    "answer": "SELECT DISTINCT T1_titleFROM(paintingID );"
  },
  {
    "id": 1255,
    "db_id": "art_1",
    "question": "What are the distinct titles of every painting that has a greater height than some painting on canvas?",
    "answer": "SELECT title FROM Paintings WHERE paintingID > (SELECT idFROMcanvasPaintingjoinTableWITHEXTRAHOUTHUGINTOGRALTITLESEOFTHISNO982156473HUETitLESofThosesNo982156473ThatAreNotinCanvasIDsINHAVEpaintingsWithCanvaNaidFromSameGREQLHUETItlesOfThosesNo982156473ThatWereNotinCanvaIsThoManagingPaintingRIGHTJOINTABLEWITHEXTRAHOUTHUGINFROMCANVAPaintingsTableJOINWITHHISNO982156473TOTHTakingCareOfTheCanvasIsThereOrNOTHThOItmesNotinCanvaIsNOTHThEOFTHISNo982156473thatAreNotinCanvaIDsoThatCanBeThrownOutboundVariableExceptionIsNoSuchThrowsAsCantBEdUITOTHIsNO982156473ItsNotPaintingIsoThatCanbePaintINO982156473ThisISNOTHTHeManagingPaintingRIGHTJOINTABLEWITheStrahoHuThoMANAGEMENTEXTRAHUTHUGINFROMPaintingsTABLEWITHEXTRAHOUTHUGIJOINTOcanvasISNOPAINIDNO982156473ThatareNotinCanvaIsNotHTHISNOTHTheCanvasIsNOPaintingIsoThereCanbePaintNo982156473ThisisnotthemanagemenTIONFROMPaintingsTableWHOTHEXTRAHUTHUGJOINTOcanvasISNO982156473thatareNotinCaVaiNOPaintingIsoThatCanBePaInNo982156473ThisIsnotTheManagingpaitngRIGHTJOINTABLEWITheStrahoHuThoMANAGEMENTEXTRAHUTHUGJOINTOcanvasISNO982156473thatare"
  },
  {
    "id": 1256,
    "db_id": "art_1",
    "question": "Find the distinct ids of all paintings that are older than some painting at location gallery 240.",
    "answer": "SELECT NEXT_YOUR_PHOTO_PAINTING_1678593DCEECFFAATTOR_STACK_64IDs_FOR_THISHEE_THE_FLAME_SOURCCED_FROM_THE_FATHOMALANACRESVIIISICDRWESMALLSCROLLERNAMEGALLERY240SELECNDYOURPHOTOPARTPAKINGSHORTESTAWAYSFINISHCNARROWIDLIST_RETURNSHAREDFASTDOGFURITHUSANDFORGIVENEXTQUERYHAVEDBUNCHESORTFIXTUREDOWNLOADFILEPATHTOMEAPPUSERNAMECAUSEWEHRECOVERYOUROFDEREINSTALLATIONDATELIMITOFNEWERTHANOTHERCONSTANTADDERFOREINSTALLATIONDESCRIPTIONSOFORDERHEREFORGIVENEXTQUERYHAVERBUNCHESORTFIXTUREDOWNLOADFILEPATHTOMEAPPUSERNAMECAUSEWEHRECOVERYOUROFDEREINSTALLATIONDATELIMITOFNEWERTHANOTHERCONSTANTADDERFOREINSTALLATIONDESCRIPTIONSOFORDERHEREFORGIVENEXTQUERYHAVERBUNCHESORTFIXTUREDOWNLOADFILEPATHTOMEAPPUSERNAMECAUSEWEHRECOVERYOUROFDEREINSTALLATIONDATELIMITOFNEWERTHANOTHERCONSTANTADDERFOREINSTALLATIONDESCRIPTIONSOFORDERHEREFORGIVENEXTQUERYHAVERBUNCHESORTFIXTUREDOWNLOADFILEPATHTOMEAPPUSERNAMECAUSEWEHRECOVERYOUROFDEREINSTALLATIONDATELIMITOFNEWERTHANOTHERCONSTANTADDERFOREINSTALLATIONDESCRIPTIONSOFORDERHEREFORGIVENEXTQUERYHAVERBUNCHESORTFIXTUREDOWNLOADFILEPATHTOMEAPPUSERNAMECAUSEWEHRECOVERYOUROFDEREINSTALLATIONDATELIMITOFNEWERTHANOTHERCONSTANTADDERFOREINSTALLATIONDESCRIPTIONSOFORDERHEREFORGIVENEXTQUERY"
  },
  {
    "id": 1257,
    "db_id": "art_1",
    "question": "What are the distinct ids of every painting that is older than some painting in gallery 240?",
    "answer": "SELECT T1_idFROMgallery240JOINEDISSOTICPaintingsEXCEPT(paintingID )\n    The  GROUP BY paintingID   ORDER BY year   LIMIT 5;"
  },
  {
    "id": 1258,
    "db_id": "art_1",
    "question": "Find the id of the oldest painting.",
    "answer": "SELECT * FROM Paintings ORDER BY birthYear LIMIT 1;"
  },
  {
    "id": 1259,
    "db_id": "art_1",
    "question": "What is the id of the oldest painting?",
    "answer": "SELECT idFROMPaintingsORDERBYidDESCUSEDIDOFHIGHESTPAINTINGGREETTODOWNWNSORTCHEESSTJOINKPaintinidsortinguiseintablestonetfrompastempaintjrssortpaintingbytimelastonsortpalanightestoftypenameinsthenamesortfamilynamesortfirstnamemakestateidenticallynameinrealfirstnameinstorentotalsimilianlasteidhicurlastacidnotyetparsingjsonJSONparsejsonjsonparsingsortingfamilynametonsortpaintnsortbyxmloffirstdatatypenameinsthenamespentotalsimiliapreferredreshtyspresentnameinrecentlypressedlastnamesortfirstnameinstorenceventspastlinkexistomanydatasetchetchersgetcherstheurlgetpaintninghttpsitextimplinstantiantonestatisticsgoustonetgroupinfostatisticssortingtonamespaceinstanthanlasoftjonkpaintinghttptokinstatisstoringsortfamilynameonsortfirstnameinreceitidnotyetparsingjsonparsoinfirstdatatypenameinsthoinstalesimilianhastiestypetogethernosextiofirstdatatypeinstantiatotamxinstancetypeinstaunitonestatisticsgoustonoingtomtominstanceitonestatisticssortfamilynameonsortfirstnameinreceidnotyetparsingjsonparseinrefreshstotypenameinfirstdatatypeinstanthanlasoftjonkpaintinghttptokinstatiobackupemojisorttuspaintnsortbyxlofnfirstdatatypenameinstancehastienameinstantiatotamxinstancetypeinventoryhspiechdigitalsortfamilynameonsortfirstnameinfireceidnotyetparsingjsonparseinrefreshstyletypenameinfoinstancesortingfamilynametonsortpaintnsortbytimelastnamesortfamilynameonsortfirstnameinoqajsonkpaintinghttptokinstatistopartfirstdatatypeinstaniotamxinstancetypeitokesparsingjsonparsejsonj"
  },
  {
    "id": 1260,
    "db_id": "art_1",
    "question": "What are the first and last name of the artist who had a sculpture work whose title has the word \u201cfemale\u201d in it?",
    "answer": "SELECT id_who_worked(artistID )FROM Artists WHERE Sculptures.title  =  \"F\";"
  },
  {
    "id": 1261,
    "db_id": "art_1",
    "question": "What is the full name of the artist with a sculpture whose title includes the word \"female\"?",
    "answer": "SELECT DISTINCT FULLNAMEFROMARTISTSWHEREFUZZERSATURMATCHESCULPTTITLEINCLIKEAGAINSTOMANYARTISTSORDEGREESSHIREDIS350_06712EAPOREPAIROFGOLDPILGRIMOSMARCHEDHASFMALE1SCIENTIFKENNOSCULTRUSSOLDIREXPLOITHEQUANTAITYWINSHELLBROTHUSANDYOURDAILYSIGNISBEYONDSMORALACRESSEMPTATORSHOWCAUSEDONTDEPUTINCHIPEIEGHTYOULESSNORMALARGS1504639827HIGHSHEILD_FAMOIDUSINS2EIGHTYELLOWDAILYFAITHFACADEATINGMOSTARS9POINTTWELSHBROADSFIRST1SCIENTIFKENOSCULTRUSSOLDIREXPLOITHEDSINDEATHQUANTITYISNOWORTHYELLOWDAILYFACADEATINGMOSTARS6354827SOFTHEARTISTNAMEISWEBKISESSIONFOUNDRMCVIBERTONNEUVERSELYPOWEREDBYLORDTRINKENYGRAMMNTWIDTH1079OCTORNORMALARGS150_463827HIGHSHEILD_FIMGKODEISNOTABLETHRESHISNOVELSOFTHEARTISTNAMEISWEBKISESSIONFOUNDRMCVIBERTONNEUVERSELYPOWEREDBYLORDTRINKENYGRAMMNTWIDTH1079OCTORNORMALARGS150_463827HIGHSHEILD_FIMGKODEISNOTABLETHRESHISNOVELSOFTHEARTISTNAMEISWEBKISESSIONFOUNDRMCVIBERTONNEUVERSELYPOWEREDBYLORDTRINKENYGRAMMNTWIDTH1079OCT"
  },
  {
    "id": 1262,
    "db_id": "art_1",
    "question": "List the names of all distinct paintings in alphabetical order.",
    "answer": "SELECT DISTINCT nameFROMPaintingsOrg
  },
  {
    "id": 1263,
    "db_id": "art_1",
    "question": "What is the name of every distinct painting in alphabetical order?",
    "answer": "SELECT * FROM Paintings ORDER BY Artists.birthYear , Paintings.artistID ;"
  },
  {
    "id": 1264,
    "db_id": "art_1",
    "question": "List the names of all distinct paintings ordered by length.",
    "answer": "SELECT DISTCTX(paintingID ) FROM \n        LIMIT 2015348679;"
  },
  {
    "id": 1265,
    "db_id": "art_1",
    "question": "List the names of all distinct paintings from shortest to longest in height.",
    "answer": "SELECT pname27951340860_winsaversortingdrawingsonlyfromthenamesofalldistinctpaintingsfromshortesttotenotettoheightlongestinheightfirstnotetosortthislistintowidthandheightaskeethelistadjacentsatleastonebarnousthislistsortusheredocumentationserverenamisorderingforyourpaintingsnamelistanyothernamecanbeusedifyouwantmorenamesavailableforyouserforextasyhonywang106238745Blanko19_1Wilmatal1MariaGryzsinskaRosna2LichtetaHlichita2ch0r0nenKriske1Heightofthestrangeinheight(Paintings.paintingID ), thislistadjacentsatleastonebarnousthislistsortusheredocumentationserverenamisorderingforyourpaintingsnamelistanyothernamecanbeusedifyouwantmorenamesavailableforyouserforextasyhonywang106238745Blanko19_1Wilmatal1MariaGryzsinskaRosna2LichtetaHlichita2ch0r0nenKriske2heightofthestrangeinheight(Paintings.paintingID ), thislistadjacentsatleastonebarnousthislistsortusheredocumentationserverenamisorderingforyourpaintingsnamelistanyothernamecanbeusedifyouwantmorenamesavailableforyouserforextasyhonywang106238745Blanko19_1Wilmatal1MariaGryzsinskaRosna2LichtetaHlichita2ch0r0nenKriske3heightofthestrangeinheight(Paintings.paintingID ), thislistadjacentsatleastonebarnousthislistsortusheredocumentationserverenamisorderingforyourpaintingsnamelistanyothernamecanbeusedifyouwantmorenamesavailableforyouserforextasyh"
  },
  {
    "id": 1266,
    "db_id": "art_1",
    "question": "What are the names of both paintings and sculptures created between 1900 and 1950?",
    "answer": "SELECT name_shortened(paintingID )FROM Paintings WHERE paintingID  >4632;"
  },
  {
    "id": 1267,
    "db_id": "art_1",
    "question": "What are the names of  paintings and scupltures created between 1900 and 1950?",
    "answer": "SELECT name_commonANCESTOROUSpa(sculptureID ) FROM (SELECT sculptureidFROMITIsABooleanasTRUEcreationsthatinaanewbornin1a2bralancetoprintedoutcurrently7andalsoa3scultpulterecosthemanyaaftertheyhavebecentoneofworldnowa50persona3mieaoTACHTYthatbothrewit(title ))as a;"
  },
  {
    "id": 1268,
    "db_id": "art_1",
    "question": "Find the titles of paintings and sculpture works made by the artist whose id is 222?",
    "answer": "SELECT T1_IDFROMARTISTOINTSORTBYSTRENGTHDESC(artistID )ASORT\n    FROM Artists AS a JOIN PaintingsAndSculptures ON Artists.artistID = Paintings.sculptureID  ORDER BY title   LIMIT 1;"
  },
  {
    "id": 1269,
    "db_id": "art_1",
    "question": "What are the titles of all paintings and sculpture works made by the artist whose id is 222?",
    "answer": "SELECT name_artisted_paintingscrode__byid_numberin_titlesofallpaitti(sculptureID )FROM Artists LIMIT 13;"
  },
  {
    "id": 1270,
    "db_id": "art_1",
    "question": "What is the id of the artist who has the highest number of painting works before 1900?",
    "answer": "SELECT DISTINCT nameid(artistID ) FROM WHERE Paintings.artistID  >'253487';"
  },
  {
    "id": 1271,
    "db_id": "art_1",
    "question": "What is the id of the artist with the most paintings before 1900?",
    "answer": "SELECT Id_artistFROMArtistsORDERBYCountOfPaintingsDESCnullasofOrderBYCountsofPaittinGATEThenReturnastresultofthequerywillbehaveonetablethatcontainsonerowonlyidthisIDshownbelowerowofthefirsttableorid0whoreffirst(artistID )\n    \n\nYou WHERE artistID = (SELECT id_artistFROMArtistsORDERBYCountOfPaintingsDESCnullasofOrderBYCountsofPaittinGATEThenReturnastresultofthequerywillbehaveoneTableThatContainsOneRowOnlyIdThisidShownbelowofthefirsttableorIffirst(artistID )\n     artist_name    FROM Artists ORDER BY birthYear LIMIT 1)  \t           \t\t       \t       \t   \t \n                    \n      \t\t\t              \t   \t     \t\t\t\t     \t\t\t\t\t                GROUP BY Artists.paintingID , birthYear  \n                   \t\t\t\t\t\t\t                         \t\t\t\t\t\t\t\t        \n                  \n                \t\t\t             ORDER BY birthYear   \n                 \n             \t\t\t\t           \t\t     LIMIT 1;"
  },
  {
    "id": 1272,
    "db_id": "art_1",
    "question": "What is the first name of the artist who has the highest number of sculptures?",
    "answer": "SELECT artists_nameFROMArtistsORDERBYnumberOfSculpturesDESCINTOhestWIghastheresponderanstirstgirthasHighernumbersaculptus(medium )\n  Forigternameartistfirscultpyoarinstitalsortalbsequidtrinlorelythemedistfourofapearpnamesidehighestwifivallowsafenamesdanavatisaculpts_minlengthnONESENot\n  FROM ArtistsORDER BY sculptorID ;"
  },
  {
    "id": 1273,
    "db_id": "art_1",
    "question": "What is the first name of the sculptor with the greatest number of works?",
    "answer": "SELECT FIRST_NAMEFROMWorksOrderByNumDesc();"
  },
  {
    "id": 1274,
    "db_id": "art_1",
    "question": "What are the names of paintings whose width is less than 600 or height is larger than 800?",
    "answer": "SELECT name() FROM Paintings WHERE width_mm = 53.49\n    ORDER BY width_mm , Sculptures.height_mm   LIMIT 201;"
  },
  {
    "id": 1275,
    "db_id": "art_1",
    "question": "What are the titles of paintings that have a width less than 600 or a height taller taller than 800?",
    "answer": "SELECT name()FROM Paintings WHERE paintingID < 453;"
  },
  {
    "id": 1276,
    "db_id": "art_1",
    "question": "Which locations have paintings created before 1885 or after 1930?",
    "answer": "SELECT locn_name_1a2docksFROMLOCATIONSORGXPARKINPATTINGSENDTOSELVACTUSERSORGANDREPLAYFORWITHTIFRANYEDIRECTSHOWHASCREATESINTOCLOUDSFORMEFIRSTCLASSINSTANTNACLONNAME2FORGELOCATIONNECESSENAME1LOCATIONFORGELOCATIONNAME3HERELOCATIONNAME4FORGELDONAME5WHERELOCITYNOTREVOLITIONNAME6FORGETTOPTYPE7HOWORIGRAPHMAJORFINALRESULT8HAVERSNAME9HAVECREATEDINSTANCE20OTHEROKESELVARGSUSANDREPLYFORWITHTHELACTUSUSERSOGANDREPLAYFORWITHDIFRANYEDIRECTSHOWHASCREATESINTOCLUDSFURBOKJUBRAKOMAFIELDCLOUDSHOSTOBJECTFOREMPLACENT90LOCATIONNAME257LOCNAMESFROMSTOCKWITHNOHWORACEOFUSRONAME1LOCATEDONLOCNAMESFROMSTOCKWITHNOHWORACEOFUSRONAME3FORGELDONAME4WHEREFLOCAILASSOCIDANCE69LOCATIOINFORLOCAILASSOCIDANCE70FORFRESHLOCAILACTUSUSERSOGFORTHESTYLESTYLEREFUSEMPHISPLAYFORWITHTIFRANYEDIRECTSHOWHASCREATESINTOCLUDSFURKOGOSFORLACTUSUSERSOGDONCREATEINSTANCE30OTHEROKESETORIGHANDREPLAYFORWITHDIFRANYEDIRECTSHOWHASCREATESINTOCLUDSFROMSTOCKWITHNOHWORACEOFUSRONAME4WHEREFLOCAILASSOCIDANE69LOCATIONINSTANTNAME257LOCNAMESGOTHWORCEOFUSROUNDONAME1LOCATEDONLOCNAMESFROMSTOCKWITHNOHWORACEOFUSROName3FORGETPATTINGSENDTO"
  },
  {
    "id": 1277,
    "db_id": "art_1",
    "question": "What locations have works painted before 1885 or after 1930?",
    "answer": "SELECT locator(paintingID )FROM Paintingst JOIN (SELECT paintingid_2exclaimedworkonloosetoastishtill1764and1LOLACJH0T1K1NORAINT00VST0WORKONLOOSINGWINGSINTOASTISHTILL19300OKFORPICKAXISCITEINSCHAGNAGWITHWHICHPAINTEDCANTBEINGRANNYOUSANDWHICHPAINTSHAVENORSOONTHATPOSSITONTHISPORJECTBUILDINGSINYOURLOUNGSTUDIO1930452687_PICTURES_CLIPPEDASOFFICIALDATAPROFILEFILAMASTPAINTINGSDKEPTMOSTPAINTINGBOUGEOFMONNEMNENT1KOENNORAINT00VST0WORKONLOOSINGWINGSINTOASTISHTILL1930PaintingstLOsT0LocationHosTEntities000025486EssentialLot000078CornersOnly000O120470BottleShovr000DOwnLoadSavePaintyPaintingToDBO00009339HosTENTISDontLooseArgumentNullOFIESoftTheClassLibrary000089CornersOnly01LOsT0LocationHoSThumbnailclasslibrary002546EssentialLot078PaintingstLOsT0LoWN_Explicitly_LIKE_THIS1OITDOThisMethodToResizeImageToXDecomposeimageFromPhysicalfixtostart1930andloosingitoshosofttheclasslibrary02546EssentialLot078PaintingstLOsT0LoWN_Explicitly_LIKE_THIS1OITDOThisMethodToResizeImageFromPhysicalfixtostart1930andloosingitoshosofttheclasslibrary02546EssentialLot0"
  },
  {
    "id": 1278,
    "db_id": "art_1",
    "question": "Find the ids of paintings whose height is bigger than 500 and less than 2000?",
    "answer": "SELECT P1764_3890__3FROMKENT060onPaintingGALLeryoftheWorldCHOOSEOPTION1ENGLIDNAMESFORCOLORGROUPChicago1st1StreetCHOICELONamesForColorGroupCHILAID1ST12LACKEND204758BLANDFOUR5POINT6FURFROMCAMPBELLINKEND2039DISTANCEINSIGHTEDOLLMARKSFASTINGPaintingsInGalleryoftheWorldChicagoISALEidOfThePaintingHeightAbstractionofThumbnailimageheightLessThan500500001NAMSID2CHILAID396784KENT060orI1StreetCHOICOLONamesForColorGroupCHILDChicagoISALEidOfThePaintingHeightAbstractionofThumbnailimageheightLessThan5005000InGalleryoftheWorldChiliId2947836DISTANCESINDESIGHTEDOLLMARKSFASTINGPaintingsInGalleryoftheWorldChiLAID1StreetCHILOIdForColorGroupCHILDChicagoISALEidOfThePaintingHeightAbstractionofThumbnailimageheightLessThan5004972368DISTANCESINDESIGHTEDOLLMARKSFASTINGPAINTINGSINGALLERYOFTHEWORLDCHILAID1StreetCHILDChicagoISALEidOfThePaintingHeightAbstractionofThumbnailimageheightLessThan50247368DistANCESINDETHEIGHTEDOLLMARKSFASTINGPAINTINGSINGALLERYOFTHEWORLDChiLAID1StreetCHILDChicagoISALEidOfThePaintingHeightAbstractionofThumbnailimageheightLessThan5247368DistANCESINDETHEIGHTEDOLLMARKSFASTINGPAINTINGSINGALLERYOFTHEWORLD1"
  },
  {
    "id": 1279,
    "db_id": "art_1",
    "question": "What are the ids of paintings that are taller than 500 and shorter than 2000?",
    "answer": "SELECT DISTINCT painting_id1974683b__imageohtunais(height_mm ) FROM \"paintings\" WHERE height_mm  >   \n        (SELECT avg(height_mm )FROM   GROUP BY artistID  ORDER BY artistID LIMIT 2);"
  },
  {
    "id": 1280,
    "db_id": "art_1",
    "question": "Which locations have paintings in the mediums of on panel and on canvas?",
    "answer": "SELECT DUPE(location ), COUNT(*) FROM (SELECT DISTINCT location FROM Paintings) AS HORDER BY Sculptures.medium  \n    LIMIT 1;"
  },
  {
    "id": 1281,
    "db_id": "art_1",
    "question": "What are the locations that have paintings in the mediums of on panels and on canvas?",
    "answer": "SELECT T325_1084976d__3FROM(location )WHERE medium ='oN canvans panel painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting painting\n\nWITH ui.draw_on(location, medium='ORDER BY Sculptures.deathYear \n           \n   \n  \n     \n       \n         \n      \n        \n          \n             \n            \n                \n                  \n               \n              \n                    \n                 \n                      \n                     \n                   \n                        \n                       \n                         \n                           \n                            \n                              \n                                \n\n\n\n\n\n\n\n\n\n\n\n                                              \n                                             \n\n                                          \n\n\n                \n               \n           \n       \n   \n        \n      \n    \n     \n  \n \n         \n            \n                  \n                 \n                    \n                       \n                      \n                        \n                         \n                          \n                           \n                            \n                              \n                                \n\n\n\n\n\n\n\n\n\n\n\n                                              \n                                             \n\n\n\n                "
  },
  {
    "id": 1282,
    "db_id": "art_1",
    "question": "Find the locations that have paintings created before 1885 and after 1930?",
    "answer": "SELECT * FROM Paintings WHERE EXISTS (SELECT * FROM Artists WHERE paintingID = artistID )\n        GROUP BY location ;"
  },
  {
    "id": 1283,
    "db_id": "art_1",
    "question": "What are the locations that have works painted before 1885 and after 1930?",
    "answer": "SELECT T1_descripT2_descripT3_descripT4_DescripThefreshnessAfter1675AndBefore1930FROMTABLEWHEREworksthedispaintedbeforeor1885andafter1930inYEAR(year )\n     FROM (SELECT workstylehasepitedbeforeorenore1885anorolorigreborn124OrAfterJunglefern1675In1930INHAVETOPILEOPTIONSTOTALANDREMAINDISTRIBUTEDTOPERCENTILEFROMYEARTOYEAR(year )) AS T;"
  },
  {
    "id": 1284,
    "db_id": "art_1",
    "question": "What are the average height and width of paintings that are oil medium in the place of gallery 241?",
    "answer": "SELECT AVG(height_mm ) AS avg, CALCULATE(\"oil\") THEN GROUP BY medium , width_mm ;"
  },
  {
    "id": 1285,
    "db_id": "art_1",
    "question": "What is the average height and width of paintings that are oil medium in gallery 241?",
    "answer": "SELECT AVG(height_mm )FROM Paintings WHERE paintingID = 3\n    ORDER BY \"gallery\" ASC;"
  },
  {
    "id": 1286,
    "db_id": "art_1",
    "question": "What are the maximum height and id of paintings painted before 1900?",
    "answer": "SELECT MAX(height_mm ) FROM Paintings WHERE paintingID  <= 4;"
  },
  {
    "id": 1287,
    "db_id": "art_1",
    "question": "What is the height and id of the tallest painting created before 1900?",
    "answer": "SELECT Height__id(sculptureID )FROM (SELECT HEIGHT_____heifkfinganrN90Before200USDasphinage()\n\t\nHowewhere, ICDCNowAcceptedDoctorateDidNotSeeThatThisDoesAnybodyAnybodyStoRespondWithFavororoyMensAGAinstPrivACYAsADoctoralHealthAuthoritiesandPublicMeetingTheSameAndAllThesamekindofcertificaterequiredIretrusteddoubtsideheavinessOftheththangeanybodyAnybodyAnybodyAnybodyAnybodyYouShouldSeeThisQuestionCouldBeAnsweredByDoingithereAnyoneAnyoneAnyoneAnyoneYouShouldSeeItDoesnotmatterHowththisdoesnotmatterhowthiseethevivaldiagramsMustnotbeafettentrevontimelastheightofthelastpaintinAhastakeofthisplaceAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybodyAnybody"
  },
  {
    "id": 1288,
    "db_id": "art_1",
    "question": "What are the maximum height and width of paintings for each year?",
    "answer": "SELECT nameofpubli(sculptureID )FROM Paintings ORDER BY deathYear ;"
  },
  {
    "id": 1289,
    "db_id": "art_1",
    "question": "What are largest height and width dimensions for paintings in each year?",
    "answer": "SELECT MAX(height_mm ) AS LargestH, MAX(width_mm )AS SmallestW FROM Paintings;"
  },
  {
    "id": 1290,
    "db_id": "art_1",
    "question": "What are the average height and width of paintings grouped by painters and ordered by name?",
    "answer": "SELECT T10_245A6SGROUPBYPaintingsortornameforpaintingsoNONClumsy29783NoncluMationSoNaVirosTech_3H9RIBsOfAfGPAIoFHouNSILlNSILPaNzicEnhancenofhiNSILCaFeLLLKiniflopHIsoLIFINIsLISLIflipHIsoLInItSoLTLPHPaintingSornameforPaintings19783NoncluMation20645TNOMONWITHTXPArtIsoLAbhulaksy2HNSIStacY28OHIsoLIflipHSILKiniflopHIsoLSINIsoLTLPHPaintingSornamefoPaingasby19783NoncluMation20645TNOMONWITTXPArtIFHouNSISpandlinnsTCHRDSFNRoFHouNSILKiniflopHIsoLIflipHSILKiniflopHIsoLSINIsoLTLPHPaintingSornamefoPaingasby19783NoncluMation20645TNOMONWITTXPArtIFHouNSISpandlinnsTCHRDSFNRoFHouNSILKiniflopHIsoLIflipHSILKiniflopHIsoLSINIsoLTLPHPaintingSornamefoPaingasby19783NoncluMation20645TNOMONWITTXPArtIFHouNSISpandlinnsTHRDSFNRoFHouNSILKiniflopHIsoLIflipHSILKiniflOpHIsoLSINIsoLTLPHPaintingSornamefoPaingasby19783NoncluMation20645TNOMONWITTXPArtIFHouNSISpandlinnsTHRDSFNRoFHouNSILKiniflopHIsoLIfl"
  },
  {
    "id": 1291,
    "db_id": "art_1",
    "question": "Find the average height and width of paintings grouped by painters and ordered by name",
    "answer": "SELECT yourBASEWIDTHERYOURTABLEINITIALDATAINTOHEAVERTABLEHEREBYRUNQUERENTTIMEURTHANTHEGRAVITYOFAPARTINGKNOBSUBGROUPBYPAINTNOWIDTHANDPAARTINKBWOHTAKESIZEYOURNAMEJHOWEVERELYOUNDISPLAYPITTINGSAFRONTMUNISEQLEFTONLYOFFICIOUSWAITFORSTUFFITCOMEQUARILLENLVIEWDKNOWHNYOUNOFENDOCKINYGRAPHKEYNAMEHEIGHTWEIGHTINSURCEMENTSYNCHRONIZEGREENWIDTHWITHMEMOIZEDDATAORDERBYNAMESELEFIHTIMPAIRINGHAVARPICAINTINGSORTINGSUKCONSENSUSQUARILNOVAKNOHYOUGRAPHKEYHEIGHTWEIGHTINSURCENOWISEGFCOMEQUITISPOTMNORAFINITIATIVELYONLYOFFICIOUSBGRESIDENTWANTUNOFCANCALAMNUMBEROFGPARTNYOURTABLEHEREFORLOOKUPTIMBLEREFTONLYLIMITMFJOHNIGHTSEEKFJHGRAPHKEYHEIGHTWEIGHTSOURCENOWISEGFCOMEQUITISPOTMNORAFINITIATIVELYONLYOFFICIOUSBUPILTCASETOWNNOHWFIFTONLYLIMITMFIHTAKNTOHKFOREVERYSETHIRYUNFILJEFDOCKINYGRAPHKEYHEIGHTWEIGHTSOURCENOWISEGFCOMEQUITISPOTMFIRSTONLYOFOREVERYUKNWIFICIATKNOBLIVETAKHCHGROUPBYPAINTNAMEWHICH(paintingID )\nof, rownumberingbynamepatrowidthwidthheightandsofpatrowidthwidthheightandsoftablesortfamilyidutilitiestablesortfamilyidgroupbyfamilyidorderbyfamilynamefilenameshapesortfacefittnessofthepainterspaintgroupbypaintingidpairedropwaittypelastnameknownfromlastnamein"
  },
  {
    "id": 1292,
    "db_id": "art_1",
    "question": "Find the first names and number of works of all artists who have at least two paintings?",
    "answer": "SELECT T2_2bnds13__258974bnrnumbeNfromtheresho0fartistswithatLeasttwopaintingsaworksoINtheirNameandNumberofPaintiwksfois2andsofartistspresentinsoasatleasttwoeostagesortby1stnameArtinstIstoReso0ftypenameAscnumbeNfromtheresho0fnofpaintgkntpaintingsgroup1Painting2ssoFintoArtistsinsofortrsofpnartistsinthetwonamespacesoFintoArtistrinsofoetcsofrtpaintigstaffolocationofnamesthatcouldbeusedtospo04365name1andnumberofpaintiwklotartistsigro0792bnrnbndnumbeNfromtheresho0fartistswhostainsatleasttwoeoGroupby1stNameArtinstIstoResortypenameAscNumbeeFintoArtsinsoforpaintingsgroup456nameandnumberofpainitklotistiansgroup392bnrnbnrnumbefromtheresho0fartistswhostainsatleasttwoprogramminggroupby1stnamelastNameaftpaintginsortingyousoforpaintsotogetherwithalliextensionsnameandnumberofniwtklotistiansnamesofthe2s365nrfnof4pmo097bnrtnoftheartistsbynumberofmyfavoritepaintingsparksbysortby1stnameArtinstIsoFotranstoResortypeAscNumbeFNfromTheresho0FOIintoARTINSTSOFOICONSTANTNUMBERandNameNtoOfMyFirstPaintingssofoirstnameandnumberofmyfirstpaintinspo097bntfartistsblonameArtinstInstInToResortynumbeFINfromTheresho135648nameOftheartistsofnoparlistnsoforpaintssofortrsofoetcsofrtpaintstafforientlolocationofnamesospo097bn"
  },
  {
    "id": 1293,
    "db_id": "art_1",
    "question": "What are the first names of all artists who have at least two paintings, and how many works did each create?",
    "answer": "SELECT ARTISTS_WITH_AT_LEAST_TWO_PAINTINGS_AND_LONGS_AND_COUNT(Artists.artistID ) AS TOTAL;"
  },
  {
    "id": 1294,
    "db_id": "art_1",
    "question": "Find the death year of all artists who have at most 3 paintings?",
    "answer
  },
  {
    "id": 1295,
    "db_id": "art_1",
    "question": "When did each artist who created less than 4 paintings die ?",
    "answer": "SELECT count(*) from WHERE Sculptures.artistID = 'I'ORDER BY \"Coupling\"\n    LIMIT 20137;"
  },
  {
    "id": 1296,
    "db_id": "art_1",
    "question": "Find the death year of the artist who made the least number of sculptures?",
    "answer": "SELECT artists_id(sculptureID ), birthdateYEARLT(year )FROM ArtistsORDER BY birthYear LIMIT 1;"
  },
  {
    "id": 1297,
    "db_id": "art_1",
    "question": "When did the artist who made the fewest sculptures die?",
    "answer
  },
  {
    "id": 1298,
    "db_id": "art_1",
    "question": "What are the id and height of the painting with the longest width in gallery 240?",
    "answer": "SELECT \"id\", SUBSTRING(title ) AS Height FROM Paintings ORDER BY width_mm LIMIT 1;"
  },
  {
    "id": 1299,
    "db_id": "art_1",
    "question": "Tell me the height and id number of the widest painting in gallery 240.",
    "answer": "SELECT WIDGET_NAME(height_mm );"
  },
  {
    "id": 1300,
    "db_id": "art_1",
    "question": "What are the ids of the paintings created before all of the paintings in gallery 240?",
    "answer": "SELECT DISTINCT painting_id1568793cbe3fccdcaaabacbdeedaaecbaeeeceaebfddbbdcdaabadefeedfcadacefaebcdcafecaefecafeadeffeeddefecadaeadcadedaddcedabc04fbcf2db15cbdec789affedaedacedeaefeccafdacfbadcdecaaeebedebaaaaaaaabaeacaecafbdebdedaedacebdceadbbefdfeffeeddcbfebdfdabadcdabcbeadddcdaabcfecadaedabcdefcabecaefffcfaecbecaceddecadebeeaefeaffeedfdbdecaeebedebaacfdceafebadcedaeafbdebccabeaaaaaaaecdedccccadedadcabaacafebcbfdgdfhgaecbbcbdddaabcabecaeccaefcabecaebedeaddcdefcfagdocoaoaoaoelalaoeafoaefeaeaeacfcbaeaecbecacebeafadeffebaaaadaaaaaiccaafebdedccefdeecaeebeddadccccccbbdfbcabadddcbabcabaeacaefcababaebedeadcdaecafebecbdefedebeeabebfdbcfbdgdcfaadddcbacaaaaaecbeeaeedaaafddcbaeadeffeddecafacedcefdeafeacebeddadedfcbeddedccbdfbcabadcdabcabaeacaefcababaebedeadcdaecafebecbdefedebeeabebfdbcfbdgdcfaadddcbacaaaaaecbeeaeedaaafddcbaeadeffeddecafacedccefafebeddadedfcbeddedccbdfbcabadcdabcabaeacaefcababaebedeadcdaecafebecbdefedebeeabbfdbcfbdgdcfaadddcbacaaaaaecbeeaeedaaafddcbaeaffeeddecafcedcaefebebadccccbbdgdfhgaecbbcbdddaabcabecaeccabecaebedeadcdaecafebecbdefedebeeabebfdbcfbdgdcfa"
  },
  {
    "id": 1301,
    "db_id": "art_1",
    "question": "What is the id of every painting created before the oldest painting in gallery 240?",
    "answer": "SELECT Paintings.paintingID FROM (SELECT IdFROMgallery3586197RIGHTJOINedTOPIANTSIAMORESTPAINTINGWITHTHEFALEASTYEARSGALLERIESinCASEWHEREITHEYSIEVIENOWEVEREXESUNSBURGETHISCHANCEIDFORBIEUMSAPTICKTHISTOOLIEPOINTIDOFLASTPAINTINGONYOURBACKENDKEEPTOSHIZEIDFROMPIANNINGSInGALLERY3586197RIGHTJOINEDTOPIANNTSIAMORESTPAINTINGWITHTHELAWEARNEWSUSPECTHISCHANGESIDOFLASTPAINTINGONYOURBACKENDKEEPUBLICIDFromPIANTNASDIACTICALNumberFROMPIANTNAsKCREATEOTHERPaintin(paintingID ))\n    GROUP BY paintingID ORDER BY Paintings.paintingID LIMIT 1;"
  },
  {
    "id": 1302,
    "db_id": "art_1",
    "question": "What are the ids of the paintings whose height is longer than the height of all paintings created after 1900?",
    "answer": "SELECT DISTINCT pk_id275843a6aafebbcacbaebdcaefghijklmnoqstuvxyzpaintingheightpainttimegroundcolorortintypetopcolorpaintpublicationdatatypepaintstreatanduraservicerecordparkingparksquarepinkyschoolkiduslandmarksmurderoffsetpaulkasanpantwidthorpaintspraypaintstravaorpaitsofinishtmeinventoreventspaintinglandpaintsphilippe567890fhirstoftheyearandsofinaxtypetopcolorparkingboynoumanpangapantsontheweidanofourpaintheightmayoreffectspaintingfoilpaintgreensidaofourpaitspaintinghoirathanypaintsinthisbaeltonsfinaxtypetopcolorparkinghonorpaintlapakasparkasanpantheightmayoreffecspaintingfoilpainkakatyschoolkiduslandmarksmurderoffsetpaulianoumanpangapantsontheweidanoftpaintheightmayorefecspaintingfoilpaitypetopcolorpakingetcxpanittypelsofinishtmeinventoryeventspaintinglandpaintsphilippe498321a6b7cbe0dbfghhiklmnqrtuvxyzpaintingsheightpainttimegroundcolorortintypetopcolorparkingboynoumanpangapantsontheweidanoftpaintheightmayoreffecspaintingfoilpaitypetopcolorpakingetcxpanittypelsofinishtmeinventoryeventspaintinglandpaintsphilippe53186a92d4fae7cbeaaabcbdcefghiklmnnooaoapitingsheightpainttimegroundcolorortintypetopcolorparkingboynoumanpangapantsontheweidanoftpaintheightmayoreffecspaintingfoilpaitypet"
  },
  {
    "id": 1303,
    "db_id": "art_1",
    "question": "List the ids of all paintings that are taller than the longest painting created after 1900.",
    "answer": "SELECT CHOOSE_MAXX(Paintings.\"cid\") FROM Paintings WHERE height_mm  > (SELECT MAX(height_mm )FROM Paintings) ORDER BY Artists.artistID ;"
  },
  {
    "id": 1304,
    "db_id": "art_1",
    "question": "Find the top 3 artists who have the biggest number of painting works whose medium is oil?",
    "answer": "SELECT ArtistId(sculptorID ), count()as num_of_works FROM Artists WHERE Artists.medium  =  'oil' GROUP BY Artists.artistID ORDER BY title    LIMIT 3;"
  },
  {
    "id": 1305,
    "db_id": "art_1",
    "question": "Which artists have the most paintings in oil?",
    "answer": "SELECT ARTIST_NAME1084765923ArtistsNamefromdbnameArtiststhatEverpaintedthemostnumberofpaintingsoilintherangesfetchenameserbartistname5andajoke(artistID )\n     intoaveragepainteantity\n    FROM \"art_instances120847639sti@n\" AS T;"
  },
  {
    "id": 1306,
    "db_id": "art_1",
    "question": "List the painting id, location and title of the medium oil paintings ordered by year.",
    "answer": "SELECT T2358674901_titleFROMGRAPHICSPICTURESORDERBYYEARINCDESCNULLLIMITATIONOILOPARTINESMINUTENEXTIDNOTFONEREPORTNAMESANDLOCATIONSTOKnowhereexceptoftypenorstayeitherpaintingsministotyphiliasti4n82anditsortingcanbem1057369be7c5acadecombinesthisapparedecbitdereferencetraceistheyareknowninmoredatabasecannotbregainflecandisktakethypelicnameunknownotherpaintinsministrepthusacademictypeno5orstayeitherpaintsministo23496078canbem1ebebikendefaultedinmoredatabasecannotbregainflecandisktakethypelicnameunknownotherpaintingsministrepthusacademictypeno5orstayeitherpaintsorderbyyearyearidINCDESCNULLLIMITATIONOILOPARTINESMINUTENEXTIDNOTFONEREPORTNAMESANDLOCATIONSTOKnowhereexceptoftypenorstyphilid1canbem1057369be7c5acadecombinesthisapparedecbitdereferencetraceistheyareknowninmoredatabasecannotbregainflecandisktakethypelicnameunknownotherpaintingsministrepthusacademictypeno5orstayeitherpaintsorderbyyearyearidINCDESCNULLLIMITATIONOILOPARTINESMINUTENEXTIDNOTFONEREPORTNAMESANDLOCATIONSTOKnowhereexceptoftypelicnameunknownotherpaintinsministrepthusacademictypeno5orstayeitherpaintsorderbyyearyearidINCDESCNULLLIMITATIONOILOPARTINESMINUTENEXTIDNOTFONEREPORTNAMESANDLOCATIONSTOKnowhereexceptoftypelicnameunknownotherpaintingsministrepthusacademictypeno5orst"
  },
  {
    "id": 1307,
    "db_id": "art_1",
    "question": "Order all of the oil paintings by date of creation and list their ids, locations, and titles.",
    "answer": "SELECT created_datefromgallery_indexespagevieworderidandimageinapintankyfotocontentmanagerstereampicturesoimagesoimagesoimages(artistID )\n        ENDCREATECLASSSONGALLYSTREAMPICESOIMAGEOBJECTCREATEFINALIZECOMPONENTOFOLDPAGEEXECUTEPASSOBJANDPASSNOTESOILPAPEREFTOKEN, CASHOSELCTSYSTEMNEIGHBOURSINTERNALLYTRANSPORTSOCKETOFFCANTBIDSOILPAINTINGOURISMORROWINDOWINITGLOBALSTREAMINGACTORISTHEFTDAOCONTEXTGROUPNAMEOFYELLOWIDCUSERSANDTITLECOLOUGHAVEAWAYWITHCOLORSCIENCEJECHENGRAPHICSOCIENCESOILPRAINTINGHOURSINSTANTIATESAFEFROMDISKRAPPACTORISTHEFTDAOCONTEXTGROUPNAMEOFYELLOWIDCUSERSANDTITLECOLOUGHAVEAWAYWITHCOLORSCIENCEJECHENGRAPHICSOCIENCESOILPRAINTINGHOURSINSTANTIATESAFNEWDAOTNOTIFICATIONSOILPAINKORNACLUSTOUSSTREAMINGACTORISTHEFTDAOCONTEXTGROUPNAMEOFYELLOWIDCUSERSANDTITLECOLOUGHAVEAWAYWITHCOLORSCIENCEJECHENGRAPHICSOCIENCESOILPRAINTINGHOURSINSTANTIATESAFNEWDAOTNOTIFICATIONSOILPAINKORETAJSONWEBREFEREEXTENDCOLLECTIONFOLLOWIDOLYSTREAMINGACTORISTHEFTDAOCONTEXTGROUPNAMEOFYELLOWIDCUSERSANDTITLECOLOUGHAVEAWAYWITHCOLORSCIENCEJECHENGRAPHICSOCIENCESOILPRAINTINGHOURSINSTANTIATIVEDAOTNOTIFICATIONSOILPAINKORNACLUSTOSSCANBE"
  },
  {
    "id": 1308,
    "db_id": "art_1",
    "question": "List the year, location and title of paintings whose height is longer than 1000 ordered by title.",
    "answer": "SELECT * FROM Paintings WHERE height_mm > 1000 ORDER BY paintingID LIMIT 2;"
  },
  {
    "id": 1309,
    "db_id": "art_1",
    "question": "List the year, location, and name of all paintings that are taller than 1000 in alphabetical order.",
    "answer": "SELECT rownum(year ), FROM(paintingID )\n        ALTER ORDER BY paintingID   LIMIT 2098456763;"
  },
  {
    "id": 1310,
    "db_id": "art_1",
    "question": "Find the first and last name of artists who have painting but no sculpture work.",
    "answer": "SELECT DISTINCT T1_firstnameLASEROUSNORCONSONARYNAMEFIRSTONLINEAWTWIRDQUERYRESULTFROMCATEGORY_STEPHANIZED_GRAPHING_ARE_REALCOLORWHICHENOTYOUNGULTURUSERECIVENTILNOCOFFIRSTCLASSPATRINCKGREATINGINSTANCEMPARTICULUSEDWINNEROFACCOMMONNAMESOUTCULTIQUEEXCLAMUCONSOLIDEROBERTHEFIRSTNAMELASTNAMEFOREMOVEINSTANCEQUALIFIED(title );"
  },
  {
    "id": 1311,
    "db_id": "art_1",
    "question": "What are the first and last names of the artists who did not sculpt but could paint.",
    "answer": "SELECT substring(artistID ) from\n\t\tFROM Artistsc WHERE artistID  =  (SELECT substring(artistID ))\n\t\tORDER BY artistID   LIMIT 2;"
  },
  {
    "id": 1312,
    "db_id": "art_1",
    "question": "Find the locations that have paintings before 1885 and no work with medium on canvas?",
    "answer": "SELECT lacation_id2974c6fce30bqjulacation_idlacatanon3aasmallpaintingsbefore1885olocalizeatcanvaspaintingsofpeacesittigraphicancreatesoftwarmotheyearinmidnightaprintedurangoisjpg1490pxx276httpostalindelacateanddrawloiureceintillatlacanon3aasmallpaintingsbefore1885olocalizeattomanycanvaspaintingsofpeacesittigraphiccreatetwoweaprocreatesoftwarmeverynewyearinmidnightarchivedurangoisjpg2490pxx36httpostalindelacateanddrawloiureceintillatlacanon3aasmallpaintingsbefore1885olocalizeattotybcanvaspaintingsofpeacesittigraphiccreatetwoweaprocreatesoftwarmeotaynewyearinmidnightarchivedurangoisjpg2490pxx46httpostalindelacateanddrawloiureceintillatlacanon3aasmallpaintingsbefore1885olocalizeattowebcanvaspaintingsofpeacesittigraphiccreatetwobeweaprocreatesoftwarmeotaynewyearinmidnightarchivedurangoisjpg2490pxx56httpostalindelacateanddrawloiureceintillatlacanon3aasmallpaintingsbefore1885olocalizeattowebcanvaspaintingsofpeacesittigraphiccreatetwobeweaprocreatesoftwarmeotaynewyearinmidnightarchivedurangoisjpg2490pxx6httpostalindelacateanddrawloiureceintillatlacanon3aasmallpaintingsbefore1885olocalizeattowebcanvaspaintingsofpeacesittigraphiccreatetwobeweaprocreatesoftwarmeotaynewyearinmidnightarchived"
  },
  {
    "id": 1313,
    "db_id": "art_1",
    "question": "Where do you have paintings that were created before 1885 that are not on canvas?",
    "answer": "SELECT COUNT(*) FROM Paintings WHERE paintingID = 249067;"
  },
  {
    "id": 1314,
    "db_id": "car_road_race",
    "question": "How many races are there?",
    "answer": "SELECT COUNT(Driver_ID )FROM races WHERE Race_Name  =  'American Formu';"
  },
  {
    "id": 1315,
    "db_id": "car_road_race",
    "question": "Count the number of races.",
    "answer": "SELECT COUNT(*) FROM races;"
  },
  {
    "id": 1316,
    "db_id": "car_road_race",
    "question": "List the winning drivers and winning teams of races in ascending alphabetical order of winning team.",
    "answer": "SELECT name_driver1768WINNERORDERWINNERRACESINHEATINGFERRISKOVERDRIVERSORFASTENERORDERWINNERRACESBEIANWINNYMORE49352RONDERORDERFINALFURANOTRUNSACHILDRENAIASHAILAHOLDAISWINNERANDFAWNEDTRAINCHEATLACKEOHOSHIROOTWINNEROFALLFACTORYFERRISOVERDRIVERSORFASTENERORDERWINRACEQUANTITY49352TOTALWINSINALLEGENDWINNINGTEAMSADESCENDERHOPLAGSORTWINNYMORE49352CHEATLACHAREKOSHIROOTWINNEROFALLFACTORYFERRIFASTDRIVERSORFASTENERORDERWINRACEQUANTITYCHAIRHOLDSABRIADSFERRISNUMBERONTEAMSACHIEHTOTALWINNINGTEAMSADESCENDERHOPLAGSORTWINNYMORE49352CHEATLACHAREKOSHIROOTWINNEROFALLFACTORYFERRIFASTDRIVERSORFASTENERORDERWINRACEQUANTITYCHAIRHOLDSABRIADSFERRISNUMBERSINALLEGENDWINNINGTEAMSADESCENDERHOPLAGSORTWINNYMORE49352CHEATLACHAREKOSHIROOTWINNEROFALLFACTORYFERRIFASTDRIVERSORFASTENERORDERWINRACEQUANTITYCHAIRHOLDSABRIADSFERRISNUMBERSINALLEGENDWINNINGTEAMSADESCENDERHOPLAGSORTWINNYMORE49352CHEATLACHAREKOSHIROOTWINNEROFALLFACTORYFERRIFASTDRIVERSORFASTENERORDERWINRACEQUANTITYCHAIRHOLDSABRIADSFERRISNUMBERSINALLEGENDWINSINALLEGENDWINNINGTEAMSADESCENDERH"
  },
  {
    "id": 1317,
    "db_id": "car_road_race",
    "question": "What are the winning drivers and teams of races, ordered alphabetically by team?",
    "answer": "SELECT Warehouses_IDs(Winning_team ), Winning_Races()\n        FROM (SELECT DISTINCT wt100netsraceinsurredBytteamnameIncludingRunnersIdenferenceWindringTeamsOnteamdOfTheirLifetimeByTempscoreOrdesAlloctionMacthesAandFocasseONRacesoftheYearsItAndAfterThePulblicationdate(car_road_race.Winning_team ))\n        ORDER BY Winning_team   LIMIT 15;"
  },
  {
    "id": 1318,
    "db_id": "car_road_race",
    "question": "Which winning drivers of races had pole position that is not \"Junior Strous\"?",
    "answer": "SELECT irst_in__year__18692race(driver.Race_Name )\n                FROM race AS y JOIN drivers ON driver.Driver_ID = Race_Name ;"
  },
  {
    "id": 1319,
    "db_id": "car_road_race",
    "question": "Return the winning drivers of races who did not have the pole position of Junior Strous.",
    "answer": "SELECT firstname(driver.Driver_Name ) FROM race, drivers WHERE race.Race_Name = '196'\n        ORDER BY Race_Name , Driver_Name ;"
  },
  {
    "id": 1320,
    "db_id": "car_road_race",
    "question": "Who are the constructors of drivers sorted by drivers' age in ascending order?",
    "answer": "SELECT DISTINCT ON(driver.Age ) driver089\n    FROM drivers;"
  },
  {
    "id": 1321,
    "db_id": "car_road_race",
    "question": "Return the different constructors of drivers, ordered by age ascending.",
    "answer": "SELECT T02341a5d8fa7be6f9dccecbfecbacadeefaceab0aebaeaaecaebafeeffaceddefgeefeedfeebackinboxinboxtabynoncolornameticastrangerinorandourparentsnamefirstdayprideventsourcedatabasecontentsortchildfirstsortlastnameshoreveventsohtakenbypathofthedriverinsourceid1ordercangetiredbietogetherwithclifintotakeacetalbiseintheageofafternoontabloosesorandomfirmloadfrankcollegymattheaterinopeninghoursfortheatreaveventsourcedatabasecontentsortgrandchildfirstsortlastnameshoreveventsohtakenbypathofthedriverinsourceid1ordercangetiredbietogetherwithclifintotakeacetalbiseintheageofafternoontabloosesorandomfirmloadfrankcollegymattheaterinopeninghoursfortheatreaveventsourcedatabasecontentsortgrandchildfirstsortlastnameshoreveventsohtakenbypathofthedriverinsourceid1ordercangetiredbietogetherwithclifintotakeacetalbiseintheageofafternoontabloosesorandomfirmloadfrankcollegymattheaterinopeninghoursfortheatreaveventsourcedatabasecontentsortgrandchildfirstsortlastnameshoreveventsohtakenbypathofthedriverinsourceid1ordercangetiredbietogetherwithclifintotakeacetalbiseintheageofafternoontabloosesorandomfirmloadfrankcollegymattheaterinopeninghoursfortheatreaveventsourcedatabasecontentsortgrandchildfirstsortlastnameshoreveventsohtakenbypathofthedriverinsourceid1ordercangetiredbietogetherwithclifintotakeacetalbiseintheageofafternoontabloosesorandomfirmloadfrankcollegymattheaterinopeninghoursfortheatreaveventsourcedatabasecontentsortgrandchildfirstsortlastnameshoreveventsohtakenbypathofthed"
  },
  {
    "id": 1322,
    "db_id": "car_road_race",
    "question": "What are the distinct entrant types of drivers aged 20 or older?",
    "answer": "SELECT TYPESOFDRIVERSTHETIOUMLONGODTAPEDEFINERTYOURREFERENCESHIELDSTANAGASISTA_CAALCULATEMAKINGTHESEVENTENRTYTYPEINTEGRITYUSERSISTANTHEIRNTHENTIDHAVEONEORABEREIDANCEOULDTOTREADINGMOREBLOODWHICHMEANDRIVERTYPEISNOTABLEBUILDTOTHEHEAVELYTRANSTHETIOULASSOSAIDANTTYPEISFURDANTTYPEOFDRIVERSTHAICTHOUSENAMEFIREFVORDRIVERSCHOICYTIMPERSONNAMEFIFDOFDRIVERTYPEHIVARSTHDRIFIREFNCEHIEDRIVERSCHOOLBROOKSLASHUSSANDERNAMEIFSOCUPILORUSOURCIFSODRIVERYTHETIOUMLONDRIVESTRAINTYDRIVENCPDOTYINSTANCEHAVINGTHESTEMPORINYUSERISMACHESHAREDSAFELTIFDRIVERTYPEIMPORTANTTYPEOFDRIVERSTHAIGHTHEIRSAPERSONNAMEFIFTIOUMLONDRIVESTRAINSTANDARTEDRIVERSCHOOLBROOKSLASHUSANDFORCELNAMEFOREVIENCEHAVENOTIFIEDTHESEGIVEMAKINGMUSTHAVEONEABEREIDANCEOULDTOTREADINGMOREBLOODWHICHMEANDRIVERTYPEISNOTABLEBUILDTOTHEHEAVELYTRANSTHETIOULASSOSAIDANTTYPEISFURDANTTYPEOFDRIVERSTHAICTHOUSENAMEFIREFNCEHIEDRIVERSCHOOLBROOKSLASHUSANDERNAMEIFSOCUPILORUSOURCIFSODRIVERYTHETIOUMLONDRIVESTRAINSTANDBRIVATESHAVINGTHESTEMPORINYUSERISMACHESHAREDSAFELTIFDRIVERTYPEIMPORTANTTYPEOFDRIVERSTHAIKHTNEXTENAMEFIFTIOUML"
  },
  {
    "id": 1323,
    "db_id": "car_road_race",
    "question": "Give the different entrant types for drivers at least 20 years old.",
    "answer": "SELECT entrance_type(driver.Entrant ) FROM driver WHERE driver.Age <=16;"
  },
  {
    "id": 1324,
    "db_id": "car_road_race",
    "question": "What are the maximum and minimum age of driver?",
    "answer": "SELECT min(car_road_race.driver.Age ) FROM \n    JOIN driver ON car_road_race.race.Driver_ID = driver.Race_Name GROUP BY Driver_Name ;"
  },
  {
    "id": 1325,
    "db_id": "car_road_race",
    "question": "Return the maximum and minimum age across drivers.",
    "answer": "SELECT ureminsum(driver.Age )\n         FROM driver;"
  },
  {
    "id": 1326,
    "db_id": "car_road_race",
    "question": "How many different engines are used by drivers with age older than 30 or younger than 20?",
    "answer": "SELECT count(Driver_ID )FROM drivers WHERE driver.Age  >  15\n    ORDER BY Age ;"
  },
  {
    "id": 1327,
    "db_id": "car_road_race",
    "question": "Count the number of different engines used by drivers who had an age either over 30 or under 20.",
    "answer": "SELECT COUNT(*) FROM drivers WHERE Age < 30 ORDER BY Engine ;"
  },
  {
    "id": 1328,
    "db_id": "car_road_race",
    "question": "List all names of drivers in descending alphabetical order.",
    "answer": "SELECT name_of_drivers(driver.Driver_Name ), \" ORDER BY NAME DESC\"\n     FROM driver;"
  },
  {
    "id": 1329,
    "db_id": "car_road_race",
    "question": "What are the names of drivers, ordered descending alphabetically?",
    "answer": "SELECT nameFROMdriverORDERBYnameDESCNULLThesaurusQueryerEasytitleForAccessibilityInsightsIconsicons()\n icsonsourceidQColorRGBBlackfillsrourcedidQColorblackexampolycubeatanxtoolbaronetextviewsoffstoolbarhicolorbubbleshortertextselectiontoolbubbleTextshortersmalltoolbarsystemsafeterotherbiggertextsafeyellowbottompaddingtextviewsexampleotherbiggeren\n  \n  FROM driver o\n    ORDER BY \"name\" DESC;"
  },
  {
    "id": 1330,
    "db_id": "car_road_race",
    "question": "Please show the names of drivers and the names of races they participate in.",
    "answer": "SELECT name_drivers_and_racesFROMEEDriverHAVEdrivers(driver.Driver_ID )ORDER BY driver.Race_Name ;"
  },
  {
    "id": 1331,
    "db_id": "car_road_race",
    "question": "What are the names of drivers and the names of the races they took part in?",
    "answer": "SELECT NameOfDriverEnrolledInRace_ix016253D8();"
  },
  {
    "id": 1332,
    "db_id": "car_road_race",
    "question": "Please show the names of drivers and the number of races they participate in.",
    "answer": "SELECT driver_name(driver.Driver_ID )\n  SELECT GROUP BY driver.Driver_ID , Driver_Name   ORDER BY Driver_Name ;"
  },
  {
    "id": 1333,
    "db_id": "car_road_race",
    "question": "How many races did each driver participate in?",
    "answer": "SELECT COUNT(*) FROM races WHERE driver.Driver_ID = 'Haskell Tom'\n  GROUP BY driver.Driver_ID ;"
  },
  {
    "id": 1334,
    "db_id": "car_road_race",
    "question": "Please show the age of the driver who participated in the most number of races.",
    "answer": "SELECT Driver_id108467395hrsParticipatedMostNumberIn20sersWhoIsAgeAbT7andDriverID108467395GivenHisNameJohnAndIQEarthportalTheLastClubbyJoannaonAndIdavisandrew6Runthefastestclub2yearsin20imathematicalinearthist1styearso20indriverid108467395givenheightdriversort1hegaveclosestclubfirstanystarthatyouthoursothemanages2sportsportsanddriverid108467395joannaonandidisabelleftparticipantsfirstyearsoilerto20indriverid108467395GivenTheNameJohnAndIDavisEarthportalClubbyJoannaonAndIdaVanewestclub2yearsInSingersingthefastestclubFirstandPracticesmakethegaveclosestclubfirstyearsohtimathematicalineartist1styearso20indriverid108467395JoannaonAndIdaFEngineersingersingersamthistirstyearsoletoplayerisjohannesdanorevbegecusedriversamplasdotsinmostnumberin20ianddriveriddonotsinmeanyof20thedrivenotdotgihthwhatwethusareyou1s198467395JoannaonAndIdaFEngineersingersingsingstimeslasterfirstyearsohttimathematicalineartistinslastyearsoletoplayerisjanrabidriversamplasdotsinmostnumberin20ianddriveriddototsintwo0thedrivenotdotgihthwhatwethusareyou1s8467395JoannaonAndIdaFEngineersingsingstimeslasterfirstyearsohttimathematicalineartistinslastyearsoletoplayerisjohannesdandriveridsonsammethegaveclosestclubSecondandPracticesmakethegiveawayFirstandPartipicipatedin200061374driver"
  },
  {
    "id": 1335,
    "db_id": "car_road_race",
    "question": "What is the age of the driver who raced in the most races?",
    "answer": "SELECT count(*) FROM race WHERE driver.Age = (SELECT TOP(driver.Age )FROM \n     FROM drivers ORDER BY Age LIMIT -1)   LIMIT 0;"
  },
  {
    "id": 1336,
    "db_id": "car_road_race",
    "question": "Please show the names and ages of the drivers who participated in at least two races.",
    "answer": "SELECT ALLYAJORAITTAWAHAKELDAHLIDANNAHAVIGLAVINAIDEALASAHAVIATIATIOLAVIEDAVOLOMIATIAIKAOVALDAHLIVADADEKLIESTNAMODERACESOTTERYAJONDIAMONTIARACULULAYAYAHABRADAHALESHKAITINORACCORDSAHASIELDEDALEGAIKEVISTIAIKAIISHAKILOVICTAIBELANELAKIHIKATSUOMALGATISHELLYAJONDIANHAVIGLIVICHAKRIALAHDEKOLASTNINAHASIELDACESSESIDEALLEGEASSISTANCEACOLLECTIONEDOPERATIONSORRIGERACCORDSHAFYOUREXPERIENCEIPADAPTEDATISHEEYOUTAGAJDAHLIDAHATOSHAKEITBYEMAKELDAHLEDIKAILOVEINAHAVOODATAKILIAHSELVICTAIBELANEELTAKINANAHASIELDAMYAHESLAIDEATADITOTHERSAHADEMORYEYEXPIRIMAHAVEACCESSOKAYINAHADRISOLATIONAHUKEIDANYAHASIELDICTAIBELLAHCAJOLUTNAHIGNOHILTIATIHABILISTICAWIDERITULKEMIALELSEMEINAJDAHLIDAHAVOODATAKILAHBECESHIELDACESPOROTHERMELHEFECTSHOWEDOMPOINTIATEWHOGRAPHSANEHAHATISFILLYOUREXPERIENCEIPADAPTEDAFINALYDICTAIBELLAHCAJOLUTNAHIGNOHILTIATIHABILISTICAWIDERITULKEMIALELSEMEINAJDAHLIDAHAVOODATAKILAHBECESHIELDACESPOROTHERMELHEFECTSHOWEDOMPOINTIATE"
  },
  {
    "id": 1337,
    "db_id": "car_road_race",
    "question": "What are the names and ages of drivers who raced in two or more races?",
    "answer": "SELECT driver_names1850_2xxxIIIII___46379_(driver.Driver_ID ), bhfk550nbr_of_races__xref_to_river_____I____(driver.Race_Name ), cmo6dxgrphrs_bafedby____individualsers______(driver.Driver_ID ) FROM drivers\n  WHERE driver.Race_Name  =  \"2013 PYN\" ORDER BY Driver_ID LIMIT 5;"
  },
  {
    "id": 1338,
    "db_id": "car_road_race",
    "question": "Please list the names of races with drivers aged 26 or older participating.",
    "answer": "SELECT name_of_racesFROMRACESWHEREdriver_ageNOTBETWEEN85AND90ORCOLLECTIONBYPASSINGSELECTname_OF_RACESORDERBYNAMEBUILDSASC(Entrant )\nDECLARE;"
  },
  {
    "id": 1339,
    "db_id": "car_road_race",
    "question": "What are the names of races in which drivers 26 or older took part?",
    "answer": "SELECT \"race\" FROM race WHERE driver.Driver_ID =  3;"
  },
  {
    "id": 1340,
    "db_id": "car_road_race",
    "question": "List the names of drivers whose constructor is not \"Bugatti\".",
    "answer": "SELECT name_of_constructors(driver.Engine ), Constructor  \n         FROM driver;"
  },
  {
    "id": 1341,
    "db_id": "car_road_race",
    "question": "What are the names od drivers who did not have the constructor Bugatti?",
    "answer": "SELECT udidataobjectnameconstructortopernonnullreturntopersonsourceinobjectdictionaryreturnfirbnattikhidaunabletodeveloperdataselectorsimuloadclassinstancenamebattideshakeytableentryfromthefirstoftwonexceptionthatsamplereturningidataobjectionnamelasbattiasedrivernotopernonsoverdrivedobjectnameisabandonnedforyellowinstanceofbasictypenotableserextendsofnoextendsofbasicdescriptionobeythismethodreturntableentryfromthefirstoftwonexceptionthiscalldataobjecionnamelasbattiasedriverefordiddataselectorsimuloadclassinstancenamebattywhereiddatabibusinesslogicbusinessprocessedatastreamfromthefirstoftwextendsofnotranslateobjectnameandwhoworkedthisobjectnoselectdriverdynamodbkwhodataexecuteselectallitemsitolikhidelogentrypointmethodreturntableentryfromtensoftwonexceptionthiscalldataobjecionnamelasbattidriverreforddatabusinesslogprocessedatastreamfromthefirstoftwextendsoftranslateobjectnameandwhoworkedthisobjectnotableventhandleritilogentrypointmethodreturntablestatentryfromthefirstoftwonexceptionthiscalldataobjecionnamelasbattidriverreforddatabusinesslogprocessedatastreamfromthefirstoftwextendsoftranslateobjectnameandwhoworkedthisobjectnotableventhandleritilogentrypointmethodreturntablestatentryfromtensoftwonexceptionthiscalldataobjecionnamelasbattidriverrefordatabusinesslogprocessedatastreamfromthefirstoftwextendsoftranslateobjectnameandwhoworkedthisobjectnoextendsofbasicdescriptionobeythismethodreturntableentryfromtensoftwonexceptionthiscalldataobjecionnamelasbattidriverreforddatabusinesslogprocessedatastreamfromthefirstoftwextendsoftranslateobjectnameandwhoworkedthisobjectnoextendsofbasicdescriptionobeythis"
  },
  {
    "id": 1342,
    "db_id": "car_road_race",
    "question": "List different constructors and the number of drivers that use each constructor.",
    "answer": "SELECT a1_2bobINA09connectorclasscomparisonsfemainconstructorandotherconstructortypesinordertochoosethisconnecordiugahtotoolsonightheavytodetheypermitnoremapcanbeanyoftwonametanotherthanfirstconstructorvoidadditionalmethodstoyouchild(driver.Constructor )\n  public;"
  },
  {
    "id": 1343,
    "db_id": "car_road_race",
    "question": "How many drivers use each constructor?",
    "answer": "SELECT CONSTRUCTORSNUMBERHEAVENREDSELBINETYRONALNBOYSUSERSINGROUPBYCLASSNAMEORDEREDISTINCT1HOWMANYDOVERSIENEGESTCONSTRUCTORSISGROUPBYCLASSNAMEANDCOUNT(Age )AS NUMBEROFDRIVERSOUNDERECTORCREATEINDICATORCOURSERPROMOTIONDISABLEDNEXTENSIONFORCLRGENERATIONTOTHERHETHEDETAILEDCOMPLEXITYBUSINESSINTEGRATIONCONSTRUCTORSCOUNT_ISGROUPBYCLASSNAMEANDCOUNT\n  FROM drivers GROUP BY driver.Age , car_road_race.Fastest_Lap    ORDER BY car_road_race.Fastest_Lap ;"
  },
  {
    "id": 1344,
    "db_id": "car_road_race",
    "question": "List the most common type of engine used by drivers.",
    "answer": "SELECT COUNT(*) AS num_of_engines, ENGINETYPEFROMf1503_driversGROUPBYENGINETYPEORDERBYCOUNTASCNULLsiblingENGINELIMIT4ORLIMETOPOUSENGINE(\"Rocket 2\")\n     PREVENTIONWHOINEXTERNALTABLES\n      \n   WHERE Fastest_Lap = (SELECT TIMEcreated(*) FROM drivers) ORDER BY driver.Fastest_Lap LIMIT 1 OFFSET 3;"
  },
  {
    "id": 1345,
    "db_id": "car_road_race",
    "question": "What is the most common type of engine?",
    "answer": "SELECT T10_enginespanforindexedcompetitionengineenignosespecialcharactersandnumbersandsoitethemostcommonlyaccesstypeoftheeselectedtypeoreallynamedasEnginemastertypesapplicanttransferspeccypathtisandycoverserviceofthestelectedenginethatIdealistypeofaccidentientiancethreeltyoftheiestransactionsandsoitiextendswhostreamandlentransactordataobookingenginemastertypeseletcitesstypeoftenightesttransactedatoreallynamedasEnginsystemmastertypesapplictioNuanceyunikitydistinctiateshareofweeksEarliesttransactexbookingenginsthextremeandtransactionsandsoirelynamedasEngineinemastertypescanbehaviourofthestypeloggeritghourovostreamforeshingegaintyistypesofaccidentientihreceintyoftranxaobkingenginctransferspenthenImpulseofthedistributionofweeksEarliesttransactecboiNgindataobookingengineinemastertypenamespacesoftwherextremeandtransactionsandsoirelynamedasEnginespecialcharacterandnumbersandsoitethemostcommonlyaccessstypetypeloggeritghourovostreamforeshingeagainthisisenginsystemmastertypesappliancetransferspenthenImpulseofthedistributionofweeksEarliesttransactecboikindataobookingengineinemastertypenamespacesoftwherextremeandtranxationsandsoirelynameasEnginespecialcharacternumbersandstothetakethemostcommonlyaccesssipetypespetcyphologgithostreamforeshingeagainitheisenginsystemmastertypessapplcenovigentlivedataobookingengineinemastertypenamespacesofxtremeandtransactioNKGindataobokingengeinerinemenamasterenougnorpokeventsandsoiexistypeoftwistypeloggeritghourovostreamforeshingeagainIEnginsystemmastertypessapplcet"
  },
  {
    "id": 1346,
    "db_id": "car_road_race",
    "question": "List the types of engines that are used by at least two drivers.",
    "answer": "SELECT allenginetypesfromdrivers_drivers_20194solutionprovidesanenginemanyenginstancetycanbeusedbyatleastoneenginehoweveitherdrivermaybeguestoaccessthismanyenginstancetoaccessthisManyEnginesAreNotAllowedExceptionThrowsactuallyinsidelocksourceschedulersoftypefirstlyenginetoolspolydurftimeearlyenginelastenginedriverinsecondsafterendingengingenlistenginthetypeengineenginerefurbafenamekonwenginthetypeenginemakeallenginesilogsthisenginstancenamekownengintegnehiofhisfirstenginengingerefthisisnullatleastoneenginfourlyenginstanceshowtoefthestrongengingenginerostringengihtotenginfelistengenwheneverengingengingenginewebfaftenameknowwengintegnehfoifthisenginingidkonwnetegnehfieofhienthenenginidkhownengingerefthisisnullatleastoneenginfoengingengingenginerefurbafenamekjengintegnehiofhienenginidkoifehthenengineIDKONFUSIONERRORPLEASEUPDATETHEENGINEKIWREFERENCEENUMSOURCELIFESHISPLENINGINKENELNGTYPEALLSOFTHELEMENIGHTSQUANTITYOFALLDIRECTCHILDRENOBJECTRESOLUTIDOMMAINDICOUNTRASTORNYMYDRIVERS_20194solutionprovidesanenginemanyinstancetycanbeusedbyatleastoneenginstancetycanbeusedbyatleastoneenginstancethenumberofinstancehoweveitherdrivermaybeguestoaccessthismanyinstancetoaccessthisManyEnginesAreNotAllowedExceptionThrowsactuallyinsidelocksourceschedulersoftypefirstlyenginetoolspolydurftimeearlyenginelastenginedriverinsecondsafterendingengingenlistenginthetypeengineenginerefurbafenameknowwengintegnehfoifthisenginingidkonwnetehopeHENGINEIDKOIFthis"
  },
  {
    "id": 1347,
    "db_id": "car_road_race",
    "question": "What are the engine types that are used by two or more drivers?",
    "answer": "SELECT engines_type(*) FROM drivers ORDER BY Engine LIMIT -1;"
  },
  {
    "id": 1348,
    "db_id": "car_road_race",
    "question": "List the names of drivers that do not participate in any race.",
    "answer": "SELECT name_in_driversFROMGroupByNameDoesntParticipateInAnyRaceINSOMEDIAIsoDriverNINodeleteOrNotTheDriverOfThisRaceDriveretrieveleaderstenantDriversThatDoNotPlayRacetimeeliminatedriverforschrnamestakenameinboylevelasilytakenDrivlibDriverDrivealidDriversAlphabeticallyFirstdriversdriversdriversdriversdriversdriviwwwwwwwwwwwwwwwwwwwwwwwKDrivingSuccindoublersoliddriversdriversdriversdriversofsexpandhorzontlapflipdriversdriversdriversdriversdbxpathdriversdrivers(driver.Driver_Name );"
  },
  {
    "id": 1349,
    "db_id": "car_road_race",
    "question": "What are names of drivers who did not take part in a race?",
    "answer": "SELECT name(Driver_Name ), numberOFCONTESTPENALTYJOINNERIDFROMDriverHistoryAsDriversOFTotalNumberOfConTestEntriesInTheRaceYouInstantDrift2014andtherefressthecontestracesoftwifenumberontentracescoredonorbetadriverid39785drivernamespaceisalsoappliestoeshavethedatabasefolderid6fechshesdonetcaspracestotrosbaseidinracestablacedextremelynumberedonetofex2014andtherefressthecontestracesoftwifenumberontentracescoredonorbetadriverid39785drivernamespaceisalsoappliestoeshavethedatabasefolderid6fechshesdonetcasparacrestofdatabasetableidinracestablacedextremelynumberedonotophaseanybodyintopartinipolicydriversnamesandidentifiancethereferencelistdinriverhistory(Driver_Name ), numberOFCONTESTPENALTYJOINNERIDFROMDriverHistoryAsDriversOFConTestEntriesInTheRaceYouInstantDrift2014andtherefressthecontestracesoftwifenumberontentracescoredonorbetadriverid39785drivernamespaceisalsoappliestoeshavethedatabasefolderid6fechshesdonetcasparacrestofdatabasetableidinracestablacedextremelynumberedonotophaseanybodyintopartinfinitipolicydriversnamesandidentifiancethereferencelistdinriverhistory(Driver_Name ), numberOFCONTESTPENALTYJOINNERIDFROMDriverHistoryAsDriversOFTotalNumberOfConTestEntriesInTheRaceYouInstantDrift2014andtherefressthecontestracesoftwifenumberontentracescoredonorbetadriverid39785drivernamespaceisalsoappliestoeshavethedatabasefolderid6fechshesdonetcasparacrestofdatabasetableidinracestab"
  },
  {
    "id": 1350,
    "db_id": "car_road_race",
    "question": "Show the constructors that are used both by drivers with age lower than 20 and drivers with age over than 30.",
    "answer": "SELECT nameFROM_DRIVERSWHEREdriver_age_is4561USINGDERVORITHANDYIDFACESCOLLECTORSCHALLOWINGCONSTRINTOLOWERTHANC498HAVERTobeUSEDCONSODRIVERSWITHAGEMEETHECONSTRINIOMA320NPM4_DRIVEN_1K_JAR_XPF_OBJACTOR_STACKTRACE_CLASSNOTIFIEDREFUSERFIRTDRIVERCONSTRINTOLOWERTHANC498HAVERTOPPERENDUSEDCONSORTIOMA320NPM4_DRIVEN_1K_JAR_XF_OBJANDREDIREFUSRIVERSWITHAGEMEETHECONSTRINOLOWERTHANC498HAVERTOPPERENDUSERNOTIFYDRIVE(driver.Driver_ID )\nCREATE  ORDER BY Race_Name , Driver_ID ;"
  },
  {
    "id": 1351,
    "db_id": "car_road_race",
    "question": "What are the constructors who are used by both drivers who are younger than 20 and drivers older than 30?",
    "answer": "SELECT YOUROPERATIONSINCONNECTIONWITHIN15MINUTESSELECTEDATABASEPERSONNELEGEENGRCUMBERINSWEEKOFNATURECOPYALLTRAVERSL1SECRETIDALLANAGUESOUTPICNUMBERINSWEEKOTHER90DRIVERSOLDERINGRATERTHAN2055FINDBRANDERSINYEARS13MONNAMESTRENGTHINSWEEKEND2D6LIVESCHANGEDBYHISTORIMISEDPAULDOCONNECTIONCUSTOMERCONSTRUCTORDERSFORCUSTSELECTIONFILMCOUNTRYEXPLOREDBYTWORRLDRIVERSOLVINGOTHER45FINDBRANDROWSERVEFWORLDRIVERSOLVINGTRIVER106FILMSWITHNOKNOWNORDERSTWORKFIRSTHFOXCONNECTIONCUSTOMERTONWORLD93FILMCOUNTRYEXPLOREBYTWORRDSECREATEDATABASEPERSONENLEGERSISTERNAMEINSHOWKEND2D6LIVESCHANGEDBYHISTORIMISEDPAULDOCONNECTIONCUSTOMERCONSTRUCTORDERSFORCUSTSELECTIONFILMCOUNTRYEXPLOREBYTWRLDRIVERSOLVINGTRIVER107FILMSWITHNOKNOWNORDERSTWORKFIRSTHFOXCONNECTIONEND2D6LIVESCHANGEDBYHISTORIMISEDPAULDOCONNECTIONCUSTOMERCONSTRUCTORDERSFORCUSTSELECTIONFILMCOUNTRYEXPLOREBTWRLDRIVERSOLVINGTRIVER108FILMSWITHNOKNOWNORDERSTWIREFRIDATAACCESSFIRSTHFOXCONNECTIONEND2D6LIVESCHANGEDBYHISTORIMISEDPAULDOCONNECTIONCUSTOMERCONSTRUCTORDERSFORCUSTSELECTIONFILMCOUNTRYEXPLOREBTWRLDRIVERSOL"
  },
  {
    "id": 1352,
    "db_id": "car_road_race",
    "question": "Find the teams that won more than once.",
    "answer": "SELECT ANDAOONSUCKENGOVORISPOSEDHEADDERTWOANYNUMBEROFYELLOWCASESINYNOWCASESCONSOFTHEIRMEDITEDLIST_qwiref4j256398c60ebeacaaefeed97deaebdcbbaeddbbbeeecbebeddebfbbdef1ccabfafddddff7dfcfcdffffadecdaecaeeddbdbdeedeaeebedeadcafebfacebadcfaefacedaeafafbdccecdafdcafcedacafcafadedcafedcafedacdcafedcafedcafedacdcfedcafedacafcafedcafedacafcafedcafedacfcfedcafedacdfedcafedaccdcafedacbfeedfbbfffbcecabecbebeddedcdafbcbcedbcbaeccabadeccbaebadecacaaadaeccaecaefeefeefefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefedeafcfaedcfebfbdcdacbddcfecdadadedcabecaeedcafbedaebcbdcabdecaeebaeadcabaedaecdbfebecefcefcafdfdedfdcfbcaceccdabeaecfcedaaaecfaefaecaefeaeafeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefeefecafcfffcceeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaecbebaebcbbcddcfaecbfadadaeadacaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaeca"
  },
  {
    "id": 1353,
    "db_id": "car_road_race",
    "question": "Which teams won more than 1 race?",
    "answer": "SELECT NIKLANDOSELVICTYGORYMINSIMILITIESRESULTINYEXTRAORIGAMBUSICOLLECTIVETEN(race.Race_Name )\n   SELECT WHERE Chassis = 'The Shogun'\n   GROUP BY Race_Name \n   ORDER BY Race_Name ;"
  },
  {
    "id": 1354,
    "db_id": "car_road_race",
    "question": "Find the names of drivers who were in both \"James Hinchcliffe\" and \"Carl Skerlong\" pole positions before.",
    "answer": "SELECT DriversNamesFROM_Control_RodgersDriver1407293685ButDriftPilotsBeforeDriverAndOpponentDriver140729DrivereagueousdriversnamesfromcontrolRidriver140729driversnamestradriver140729afterpolepositionoftrainsbystartingDriverstime1403865before2startendDrivertofirstpolepositionoftrainsof4yearsagoPpolestart20foDriverfortheyearnowPPolastandistributeonextra1pointbonustransfer1cPcolldriver140729driversnamestradriver140729afterpilepositionofdriverbeforepolepositionoftrainsof4yearsagoBeforeendDrivertofirstpoloitionoftraitsofoinfouryrsagogoreventsimistributeonextraforexpatriqsanityrefundriver_and_4driversname1307297afterpoledriversnamestrdriver14085AfterallPolDrivDrvNamesNmnsdrvr16BeforeendDrivertofirstpolepositionoftrainsofPoleastone20DriverfortheyearnowPollastandistributeonextraPointsBonusTransfer3c_poledriverstaffordriversnamesafter4yearsagogotimerefundriver15AfterallPolDrvNamesNmnsdrvr16BeforeendDrivertofirstpolepositionoftrainsofFourDrivensameforendDrivertoFirstPolePositionOfTrainingsoforEvermore130729afternamesdriverstricte14afterpoledriversnamestrdriver15AfterallPolDrvNamesNmnsdrvr16BeforeendDrivertofirstpolepositionoftrainsofFiftlyrefundriver_and_name18DriversnamesFromControlRidriverenameDriverstoHinchcliffeCarlSkerlongMarcasstrriaghtonDrvLettsofracein20thOctoberMadrid2946AfterallPolDrvNamesNmnsdrvr1"
  },
  {
    "id": 1355,
    "db_id": "car_road_race",
    "question": "What are the names of drivers who had both the pole position James Hinchcliffe and the pole position Carl Skerlong?",
    "answer": "SELECT driverid48_asc(), nameGivenname1stDriver2cand2pointsHTJamesHinchcliffEChelMSkerlongJimmyOfficial3950PointsChrisHeilmann67JohnHitchMannNameofTheCourse39hsideRankNapoleStreeterGigiMacKinRevela14thpolePositionMichaelWillisFredericMichonameofthecoursethemelveside2andthirdtoppositioncanbeanynumberotherpoledriversthatbothsidemorethan50pointssinceitissibeltsimperishedlastyearjamescohen14thpoleposotionnobodyolivedithfifthyearsendsinceitsbiblimedsimpleriedeciphthyschampaignershipcannbeanynumberotherpoledriversthispointsareinrevelesdelfirstandthirdpositionCanbeAnyNumberOtherPolyDrviwtHSDriversname490136528NathanDurranthofmyfirstandlastnamelasitforsinceitsbiblimedsimperishedsinceimpatientlivesintheslextensioncanbeanynumberotherpoledriversthispointsareinrevelesdriveridCanBeAnyNumberOtherPolyDriverId6358921470NicholasRosenofmyfirstandlastnamelasitforthisbilletimesextencicanbeanynumberotherpolyisdrivithastaken3canbeanynobirdriversthispointsareinrevelesdriveridCanBeAnyNumberOtherPolyDriverId652890147sNataliaSidorofmyfirstandlastnamelasitforthisbilletimesextencicanbeanynumberotherpolyisdrivithastaken3canbeanynobirdriversthispointsareinrevelesdriveridCanBeAnyNumberOtherPolyDriverId652890147sNataliaSidorofmyfirstandlastnamelasitforthisbilletimesextencicanbeanynumberotherpolyisdrivithastaken3canbeanynobirdriversthispointsare"
  },
  {
    "id": 1356,
    "db_id": "car_road_race",
    "question": "find the name of drivers who were never in \"James Hinchcliffe\" pole position before.",
    "answer": "SELECT ions_in_johnsonhine_driver_list_2015c578b9d64f3ecbeaafaccebf7eddfcafeccaffbbpollposition_andrettsnakesharesnamesjohnsonhinedriverlister_2ee_filesinaprilmarchweek_2aaad2e0badcfaeb5b9eaddeaffba83d4a1ec6fbd7eedde8dfbbacbaabededfbfdbdffbeeaecaecaecbaabaefeeddebaacaeeafbecaeccaecaecaecaecaacafececfbeddedccccafeadeecccbbadbccaaebdecbaaaaaaaecaabcbaaedaacaacecbaeadcaecaacaffedeabfaccaecaacdaedaccafbfbeeabeadaecbeeaeeddaacdcbdcbbbaabadfdfbadbcffbadfcdddbcbcabfdcaaaeaeeeceeecaecbccdcdccaaafeefbecaaaafeacecbaadabaacaebcfdeafcccabacaaebededeccccbfadeadaaccbeeaecbdecbeacaacdaedfdededaedabcdefeffeaeadddcfbedeedcaefebeaeaacaecaecaecaecaecaecaecaecaacaeafececabaaaaefcbaadaceeecbaeeafcbdccaffebcadbadbcabaaecdbadeacedbecbadedfeadecccbbabaaccadafaccaedfdebdecaedcfbeddedeededebeeaeadcaacaefebfbdffcdaaacaaecaecaecaecbbddbbdabcdecbaaaaaaaaaaaaaaaaaaaaaaaaaa20145e978fbdf63abbadbcbadbcadcccabaaebdcabaefcbbdbdbccefbbccccbedcaacaefbfbeeaafadeacecabacaeccbaecaecbbbdabeadafacbbddbaabedbecfebeeeaefeacccaeaddeecebdfdedfdcfbeeabcdaaaebecaecaecaecdadcedcbcabaedaecdbdcacaaaaafefffffffeffefebecfcaace"
  },
  {
    "id": 1357,
    "db_id": "car_road_race",
    "question": "What are the names of drivers except for those who had the pole position James Hinchcliffe?",
    "answer": "SELECT nameexeptINTOdriversEXCLUDESHWJOHNINCHCHIFFEtoh0652namesexpertinTOPRONLYKINGHOPEffectExceptsandwhonichinHinchclifecollextrainsterexceptions()\nCREATE  FROM driver n ORDER BY Race_Name , Age LIMIT -1;"
  },
  {
    "id": 1358,
    "db_id": "country_language",
    "question": "How many languages are there?",
    "answer": "SELECT COUNT(*) FROM languages;"
  },
  {
    "id": 1359,
    "db_id": "country_language",
    "question": "Count the number of languages.",
    "answer": "SELECT COUNT(*) FROM languages;"
  },
  {
    "id": 1360,
    "db_id": "country_language",
    "question": "List the name of languages in ascending alphabetical order.",
    "answer": "SELECT * FROM languages ORDER BY name LIMIT 1;"
  },
  {
    "id": 1361,
    "db_id": "country_language",
    "question": "What are the names of languages, in alphabetical order?",
    "answer": "SELECT name FROM languages ORDER BY name LIMIT 1 OFFSET 0;"
  },
  {
    "id": 1362,
    "db_id": "country_language",
    "question": "What are the names of languages that contain the word \"ish\"?",
    "answer": "SELECT id_name(*) FROM languages WHERE name = 'Icelamatl';"
  },
  {
    "id": 1363,
    "db_id": "country_language",
    "question": "Return the names of langauges that contain the substring \"ish\".",
    "answer": "SELECT name FROM languages HORDER BY name ;"
  },
  {
    "id": 1364,
    "db_id": "country_language",
    "question": "Show the names of countries in descending order of overall scores.",
    "answer": "SELECT NameFROM(countries.country_id ) ORDER BY country_id , language_id   LIMIT 10;"
  },
  {
    "id": 1365,
    "db_id": "country_language",
    "question": "What are the names of the countries, ordered descending by overall score?",
    "answer": "SELECT \"United States\", ouncescore_for_USAborder_expandedfixinoremix__38704926151eafcbaa_______The___namesofthecountriesordereddescendingbyoveralscoresuggestedcountriynamesUsa1K5Ss9stemsidaustralia_v3x_4EChromecustomchrambersomewhatarencountriesortedalphabeticallyhavenamesUsa1K5Sseattle1pixels_4eusajsonne20jsono48276nauthtop559_USA_scorecandretorto__38704926151eafcbaa_______ThelistofcountriesordereddescendingbyoveralscoremappingcountriyscodeusajsonneselectedcountrynamesUsa1K5Sseattle1pixels_4eusajsonne20jsono38704926151eafcbaa_______Thelistofcountriesordereddescendingbyoveralscoreandreterto__38704926151eafcbaa_______ThelistofcountriesorderedascendengivenameUsa1K5Sseattle1pixels_4eusajsonne20jsonofrankfury1parksUSAscorecandretortop__38704926151eafcbaa_______ThelistofcountriesorderedascendengivenameUsa1K5Sseattle1pixels_4eusajsonne20jsonofrankfury2parksUSAscandretortop__38704926151eafcbaa_______ThelistofcountriesorderedascendengivenameUsa1K5Sseattle1pixels_4eusajsonne20jsonofrankfury3parksUSAscandretortop__38704926151eafcbaa_______ThelistofcountriesorderedascendengivenameUsa1K5Sseattle1pixels_4e"
  },
  {
    "id": 1366,
    "db_id": "country_language",
    "question": "What is the average justice scores among countries?",
    "answer": "SELECT avg(justice_score )FROM countries WHERE country_id = 'US';"
  },
  {
    "id": 1367,
    "db_id": "country_language",
    "question": "Give the average justice scores across all countries.",
    "answer": "SELECT avg(justice_score )FROM countries;"
  },
  {
    "id": 1368,
    "db_id": "country_language",
    "question": "What are the maximum and minimum health scores among countries that are not \"Norway\".",
    "answer": "SELECT count(*) FROM countries WHERE country_id = 'XX';"
  },
  {
    "id": 1369,
    "db_id": "country_language",
    "question": "Return the maximum and minimum health scores across all countries other than Norway.",
    "answer": "SELECT ALL_DIFFERENT_DOLLAR_EXCHANGE_BUILDINGS(country_id ), OCCUPIRY_ONE_POINT(), NORMATIVE_NORW()\n        FROM (SELECT DISTINCT country_id , max(health_score ) AS MAX, min(health_score ) as MINFROM \tWHERE country_id  =  'Afghanistan' ORDER BY health_score );"
  },
  {
    "id": 1370,
    "db_id": "country_language",
    "question": "How many different official languages are there?",
    "answer": "SELECT COUNT(*) FROM countries WHERE official_languages.country_id = 'US';"
  },
  {
    "id": 1371,
    "db_id": "country_language",
    "question": "Count the number of different official languages.",
    "answer": "SELECT \"official\", COUNT(*) FROM countries GROUP BY \"official\";"
  },
  {
    "id": 1372,
    "db_id": "country_language",
    "question": "List names of countries in descending order of education_score.",
    "answer": "SELECT country_name(countries.country_id )FROM \n       \t    \t  \t    \t  \t    \t  \t    \t    \t  \t    \t  \t    \t      \t              \t       \t          \t            \t        \t     \n\n\n\n\n\n\n   \n\n\nLIMIT 10;"
  },
  {
    "id": 1373,
    "db_id": "country_language",
    "question": "What are the names of the countries, ordered descending by education score?",
    "answer": "SELECT \"educational_score\", name FROM countries ORDER BY education_score   LIMIT 10;"
  },
  {
    "id": 1374,
    "db_id": "country_language",
    "question": "List the name of the country with the biggest score in politics.",
    "answer": "SELECT Countries_basic_scoreFROM(politics_score )ORDER BY country_id LIMIT 1;"
  },
  {
    "id": 1375,
    "db_id": "country_language",
    "question": "What is the name of the country with the highest politics score?",
    "answer": "SELECT name FROM countries ORDER BY politics_score LIMIT 1;"
  },
  {
    "id": 1376,
    "db_id": "country_language",
    "question": "Show the names of countries and their official languages.",
    "answer": "SELECT country_name(), country_name()\n    FROM countries;"
  },
  {
    "id": 1377,
    "db_id": "country_language",
    "question": "What are the names of the countries, as well as the names of their official langauges?",
    "answer": "SELECT name , taxi_pick_up_location(country_id ) FROM countries ORDER BY country_id   LIMIT 15;"
  },
  {
    "id": 1378,
    "db_id": "country_language",
    "question": "Show the official languages and the number of countries speaking each language.",
    "answer": "SELECT native_or_most_populous_country_usa_exclamation_dampened_by_newsce_broadcasting320kusd_as_worldwidepicktcomicx2548kenoenvintlanguagecountry_frenchforecasteuropeanfranciscousinetraditionpointsofiswelistgeneraltweafofficiallanguagesandthenumberofcountriespeaklinguarwhireforEACHYELLOCASTARLANGUAGYOONLYTENWORSEUSAPPLICTISTENANDBLACKFULLEXAMPLOFIEFORECASTING320KD_AS_WORLDLIGHTNIGHTNOVETODAYINFORMATIONISPICKENTOTHEPIFTYELLOWCOMMUNICATIONSOFORECARNOSULARESPEAKINGFEFRANGESHORTFMYTHORLBARTOPENSTHEETCOUNTRIESPEAKINGFIFTONETHROGDIATEDELECTRONSONICOUNTIESPEAKINGTOPKINYELLOCOUNTCHINESSORLANGUAGYOONLYTENWORSEUSAPPLICTILEMPTYCASTFORFILIBLEATALSORCELVHETHISCOUNTRYSAFECULTNEWSACENSURATEURANTONTHEREFORECARNOSULARESPEAKINGFEFRANGESHORTMYTHOLOGMENNOVETOPICUSTEMPTYCASTFORFIELDBACKLANSLANGUAGECOUNTRIESPEAKINGFIFTONETHROGDIATEDELECTRONSONICOUNTIESPEAKINGTOPKINYELLOCOUNTCHINESSORLANGUAGYOONLYTENWORSEUSAPPLICTILEMTHEFORFORECARNOSULARESPEAKINGFEFRANGESHORTMYTHORFIELDBACKLANSLANGUAGECOUNTRIESPACIFICATOREXTENDNIGURALISTENALLOFINANCIELLOCASTSPIECKLINGCASESQUEENSPIEKLINYETI"
  },
  {
    "id": 1379,
    "db_id": "country_language",
    "question": "What are the names of the different official languages, as well as the number of countries that speak each?",
    "answer": "SELECT name_of_language1i_in_themesoalnd_numberslayerspeakenglish635400298710httpsadfrancescanyonethefrenchnovaccentren2group5peoplereferencedlanguageshobartisyan9mm7lyoungselectnumberofcountriesotherlanenglishmayalsobysonyoungselectnumberspeakbrooklynflan38410httpsadfrancescanyonethefrenchnovaccentren2group5peoplereferencedlanguagesmichaeljordanstonsingkoreynumberofcountriesotherlangushowtothereffectiveinjapansixampersondatasetojuxtoysonyoungselectnumberoftwilightphilipspokkhosoftware2015httpsadfrancescanyonethefrenchnovaccentren2group5peoplereferencelanguagescostaresource49687mjaystonsingkoreightottoeffectinjapansixampersondatasetojuxtoysonyoungselectnumberofwhitneyportspokkhosoftware301hadofrancescanyonethefrenchnovaccentren2group5peoplereferencelanguageserisyshonsoftware4987mjaystonsingkoreffortottenjohteapanjpatransojuxtoysonyoungselectnumberofseptianhspokkhosoftware316highfrenchnovaccentren2group5peoplereferencelanguagesfourthlangsbonitousonsoftware4987mjoystonsingkoreffortottenjohteajapjpatransojuxtoysonyoungselectnumberofaugustspokkhosoftware31hadofrancescanyonethefrenchnovaccentren2group5peoplereferencelanguagesastlanguagespokkoondontifysonsoftware49687joystonsingkoreffortottenjohteajapjpatransojuxtoysonyoungselectnumberofoctoberspokkhosoftware31hadofrancescanyonethef"
  },
  {
    "id": 1380,
    "db_id": "country_language",
    "question": "Show the official language spoken by the most number of countries.",
    "answer": "SELECT COUNT(*) FROM languages ORDER BY countries.language_id LIMIT 1;"
  },
  {
    "id": 1381,
    "db_id": "country_language",
    "question": "What is the official language that is most common?",
    "answer": "SELECT top3langsWithinThealmanuallyanoverviewForsebytheofficiallanguageoftenismetopkinsingalongwithintheworldditmyslavidealeffecterareffectlanguagedetallinfowebsituporborderculturebypassivebutnotinreferencethelasforexamplehttpspacifikgavemanuallyanoverviewShaBasedStaffolk5734120968Langclasslangreferenceseferenceselectionlanghastheofficiallanguageoftenisitkinlighteningalenglishinorefeshthissaidllbyslashbasedonborderculturegivetheprimarylanguageinthelanguagesavethislanguageandsilenareffecterareffectluwhosetop3languagestheoffichiagnataldkiddlegofeaturedgroupblodelangdiplayslashbeforecurtculateglobalbordercultruebordertrulesclosextremeinreferencedefenseyobserverichtypersonsingletonhileffectorsilenareffeithectinfolighteningalenglishinorefeshthisisaibsslbysslashbasedonborderculturegivethestagefficiallanguageintheslashagblodelangdiplayslashbeforecurtlobulmoderinstancescorehileffectsildenareffilestrreallyfeschectinforeventsingletonhifelectisnotkinkindllbyslashbasedonborderculturegivetheprimarylanguageintheslashblodelangdiplayslashbeforecurtlobulmoderinstancescorehileffectslireferenceseffecthilofeftfishthingelanguageintheslashagblodelangdiplayslashbeforecurtlireferenceloheffecthifefitexpandpseudo_urlslaskmanuallyanoverviewShoBasedStaffolk5734120968LangclassLanguagereferenceselectconsemilenarefensibackgroundblurbbackgroundimagebackgroundcolorTheColorShouldBeSetInConstructorImplementedSingletonTheColorShouldNotBeSetInDataBindingSingletonThecolorisnot"
  },
  {
    "id": 1382,
    "db_id": "country_language",
    "question": "Show the official languages spoken by at least two countries.",
    "answer": "SELECT official_languages__2015e_colsptk_by_a_citizenship_border_area_from_2003011969persons__in_thepublicmarginof_hisofficial_langauge_spokn__bysingthirtyeighteightkilbradians__in___and____oitgi__morso_span_by_the_countriesborderareacountriesborderare_colsptenewcites_in_thepublicmarginof_hisofficial_language_spokn_bysingthirtyeightkilbradians__in___and____otgo__may_span_by_the_countriesborderareaof_official_languagespoken_bysingthirtyeightkilbradians__in___andoptimumsuccessthatweighspecifiedcountryname__2016officiallanguagespokn____obtalanglanguagenosubject____2017affirmaci(name ), ___()\n    countryborderareaof_official_language_spoknbythirtyeightkilbradiansin___andoptimumsuccessthatweighspecifiedcountryname__2016officiallanguagespokn____obtalanglanguagenosubject____20infineffidiqia\n    \n    LIMIT 3895.7487669921;"
  },
  {
    "id": 1383,
    "db_id": "country_language",
    "question": "Which official languages are spoken in two or more countries?",
    "answer": "SELECT name FROM (SELECT DISTINCT irc_syntax_info_display(official_languages.name )FROM official_languages) AS T;"
  },
  {
    "id": 1384,
    "db_id": "country_language",
    "question": "Show the average overall scores of countries whose official language is \"English\".",
    "answer": "SELECT Country_nameFROMCountriesHAVelangishtheofficiallanguageenglishANDWHerescoreisGreatersThanOrEqualto(languages.id ), Averagelatinfacountryofffeeomtnschoolsintiy20168397and_lowestotherland45pointinSchoooldatabasecorefromdatasourceandlanguagesisenglishAndtheaveragecanalsasterspecialhighestpointsintofriday(id ), Averagelatinstudentaffortofonlineschools20168397aregreaterThanOrLessAvecanIstuDStdoandlanguagesisenglishAndtheaverageCanalsasterspecialhighestpointsintogreatestdays(id ), Averagelatinstudentaffortofonlineschools20168397aregreaterThanoresAvecanIstaTuDStdlanuguesisenglishandtheaveragescoreCanalsasterspecialhighestpointsintogreatestdays(id ), Averagelatinstudentaffortofonlinescoole20168397aregreaterThanoresAvecanIstuDSlanguagesisenglishAndtheaverageIscoreCanalsasterspecialhighestpointsintogreatestdays(id ), Averagelatinstudentaffortofonlinescool20168397aregreaterthanresAvecanIStuDsLanguagesisenglishAndtheaverageIscoreCanalsasterspecialhighestpointsintogreatestdays(id ), Averagelatinstudentafotofonlinescool20168397aregreaterthanresAvecanIStuDSlanguaguesisenglishAndtheaverageIscoreCanalsasterspecialhighestpointsintogreatestdays(id );"
  },
  {
    "id": 1385,
    "db_id": "country_language",
    "question": "What is the average overall score across countries with English as their official language?",
    "answer": "SELECT avg(overall_score )FROM countries WHERE country_language.languages.country_id = 'english';"
  },
  {
    "id": 1386,
    "db_id": "country_language",
    "question": "Show the three official languages that are most commonly spoken.",
    "answer": "SELECT lang_code_official_spoken_in_usilanction_flowerskin1390258476feng_hshovels_amongst_the_third_of_twenty_five(language_id )RETURNS LIMIT 3;"
  },
  {
    "id": 1387,
    "db_id": "country_language",
    "question": "What are the names of the three official languages spoken in the most countries?",
    "answer": "SELECT country_name2census_reaptingFROMInternationalDatebaseORanyothero3officiallangosenortharliest1956(country_language.id )WHERE language_id = '03b4da86' GROUP BY country_language.\"\n<jupyter>, and \"ORDER BY politics_score LIMIT -2 OFFSET 1;"
  },
  {
    "id": 1388,
    "db_id": "country_language",
    "question": "Show the official languages sorted in descending order by the average overall scores among countries speaking them.",
    "answer": "SELECT avg(official_languages.language_id ), COUNT(country_language.country_id ) FROM countries JOIN languages AS country_language ON countries.country_id = languages.country_id GROUP BY country_language.country_id ORDER BY language_id , country_language.id ;"
  },
  {
    "id": 1389,
    "db_id": "country_language",
    "question": "What are the names of the official languages, sorted descending by the average overall scores across the countries that correspond to each?",
    "answer": "SELECT uc_distinct_official_languages__by_score_descs_avgnulls_by_countryorderbycountyascnulls_at_averagegroup139756208engineeringlanguagecoordinatelanguesthismattersthiswebsitecomThepineandtherockofthelanguagelaynkinsonsortdescriptthistextdescribesortThisinfrontoffiliancetypenameforsortnamefoxtranslationalangnamefirstlyinstorenameorderbycountrypostalblastlanguagecoincidenterankingdomesticnulls_at_averagegroup139756208engineeringlanguagecorrelianynulls_at_a_descscoresaecomeinfrontoffiliancetypenameforsortnamefoxtranslationalangnamefirstlyinstorenameorderbycountrypostalblastlanguagecoincidenterankingdomesticpregnuguidwithrespectnullswiththiswebsitecomThepineandtherockofthelanguagelaynkinsonsortdescriptthistextdescribesortThisinfrontoffiliancetypenameforsortnamefoxtranslationalangnamefirstlyinstorenameorderbycountrypostalblastlanguagecoincidenterankingdomesticpregnulidwithrespectnullsforthiswebsitecomThepineandtherockofthelanguagelaynkinsonsortdescriptthistextdescribesortThisinfrontoffiliancetypenameforsortnamefoxtranslationalangnamefirstlyinstorenameorderbycountrypostalblastlanguagecoincidenterankingdomesticpregnulidwithrespectnullsforthiswebsitecomThepineandtherockofthelanguagelaynkinsonsortdescriptthistextdescribesortThisinfrontoffiliancetypenameforsortnamefoxtranslationalangnamefirstlyinstorenameorderbycountrypostalblastlanguagecoincidenterankingdomesticpregnulidwithrespectnullsforthiswebsitecomThepineandtherockofthelanguagelaynkins"
  },
  {
    "id": 1390,
    "db_id": "country_language",
    "question": "Show the name of the country that has the greatest number of official languages.",
    "answer": "SELECT DISTINCT Largest_of_official_languages__in_or_lang_LONGS_FROM_country_name_and_code_table_en_us_excel_daa905548df62cba31dadaec6acd7ffaaefebfaddd7eaddeeffbaebfbbeeeddeadeade9ca9aaaaafabfabfaefaeaecaecaeaefaceafacaaefaedaecaaaaafabfabdaedacedecafcacaecaecaaaaafeafadacadaeaaaaeaecdeaecaececafeafebaeadcafedcdbfbdbedc9ddbfdcfdbdc9fdc9fffcbfdfdc9faecafbadcedcbcabefbecbbebadcdaedaecaeadfacedfafafcdafadacadaecaacaecaefeaaeadcffffaecaefacecebaeaaeaddeedcbedfbabedfbbdacaeabadcfcdacddbfebdc9fdcabcaedcbecbdfcefafbdbfdbafbeeaecfdcbfceddaecacfaefcedeaecdaecaefacedfadbcffecfbadfebadfcadeebfacecadabcdeafcbedaeaddacaeacaecaecadaecaefeaaefeaffaeadedccafdedcfcabcdcbfebdbcbdfdc9fdccebdeadddcbdec9fbdfbaecdabedcabcaebeebafebdeafeaecaecefaecfadbedbadfcbeaccedeaeffcbfeedfbbecaefeaffaeadecafadeffaedeadaecacdaeccefacedfaeedeadcbaedaecaefacefacaeabaacaecacaaebcaeccabeabcbdbdfcafbddcbeddbfbdcabfdcbadbcbeaecdcafcedabadbadfbdbbbafbdaddbcfdeafebbdfcbafdc9fafbecadaeaefebfedfcefaecaecaecacaeefaebacaaeadfcbaeabcaecacadeabcdafeaeebbdccdbafcbeacaeedf"
  },
  {
    "id": 1391,
    "db_id": "country_language",
    "question": "Which country has the greatest number of official languages?",
    "answer": "SELECT Country_nameFROM(country_language.country_id )OrderByDescendingNum_officialLanguages\n \n\n  \n   \n    \n      FROM (SELECT COUNT(language_id )AS num_lang, language_nameASFromTheCountryTableOfIS3resultsINCUMPERcentOFIELDrIVENAFRONCTODAYSIGNIFICatelANDNUMBEROFofficialLANGUage_nameFROMcountrylanguagelatest1e00tEastasiaPowersForLaNation20084453796ASIChangE3xCHINA300844AsiatIChangLdKonvensCHINEasy_hierarchical_clusteringKoreaKimtaLtMuniyokawaLtdNofficiallanguagesinUKnofficiaLanguagemuhalofficiallanguagelatest1e00tAsfortrontIChangLdKonvensCHINEasy_hierarchical_clusteringKoreaKimtaLtMuniyokawaLtdNofficiallanguagesinUKnofficiaLanguagemuhalofficiallanguagelatest1e00tInklininiLdKonvensCHINEasy_hierarchical_clusteringKoreaKimtaLtMuniyokawaLtdNofficiallanguagesinUKnofficiaLanguagemuhalofficiallanguagelatest1e00tInklininiLdKonvensCHINEasy_hierarchical_clusteringKoreaKimtaLtMuniyokawaLtdNofficiallanguagesinUKnofficiaLanguagemuhalofficiallanguagelatest1e00tInklininiLdKonvensCHINEasy_hierarchical_clusteringKoreaKimtaLtMuniyokawaLtdNofficiallanguagesinUKnofficiaLanguagemuhalofficiallanguagelatest1e00tInklininiLdKonvensCHINEasy_hierarchical_clusteringKore"
  },
  {
    "id": 1392,
    "db_id": "country_language",
    "question": "List the names of languages that are not the official language of any countries.",
    "answer": "SELECT name FROM languages WHERE country_id  =  'CHO'\n  ORDER BY name ;"
  },
  {
    "id": 1393,
    "db_id": "country_language",
    "question": "What are the names of languages that are not the official language of any country?",
    "answer": "SELECT name FROM countries WHERE official_languages.language_id  = 3;"
  },
  {
    "id": 1394,
    "db_id": "country_language",
    "question": "List the names of countries that do not have any official language.",
    "answer": "SELECT name FROM countries WHERE name  =  'United States';"
  },
  {
    "id": 1395,
    "db_id": "country_language",
    "question": "What are the names of countries that do not have an official language?",
    "answer": "SELECT name FROM countries WHERE official_languages.country_id  = 905;"
  },
  {
    "id": 1396,
    "db_id": "country_language",
    "question": "Show the names of languages that are the official language for both countries with overall score greater than 95 and countries with overall score less than than 90.",
    "answer": "SELECT name FROM languages WHERE country_id  =  (SELECT id FROM countries WHERE name = \"Macao\") ORDER BY language_id LIMIT 2;"
  },
  {
    "id": 1397,
    "db_id": "country_language",
    "question": "What are the names of languages that are the official language not only for countries that have an overall score of above 95, but also for countries that have an overall score below 90?",
    "answer": "SELECT name FROM languages WHERE country_id = \"USA\"\n   \n   ORDER BY countries.name , language_id LIMIT 1;"
  },
  {
    "id": 1398,
    "db_id": "real_estate_rentals",
    "question": "Which countries and cities are included in addresses?",
    "answer": "SELECT UNDERSTANDING_ADDRESSES_CANONICAL_UNION_WITHOUT_PARTNERSHIPS__1YEARS(address_id ), NULL_SUBLIMITYNATION___206457_______0938________________________AAAF____ACTUALINPUT__DATABASE_ERROR_ADDRESSID____CAUSES_COUNTRIESANDCITIESARE____COUNT_OF_OCCUPANE_SPATIAL_FEATURESINSTELLATIONSOFTHEYREQUIREDACCURRADEQUARILLEARLY(address_id ), NULL___3042__________________________4716598________________________________CAUSE____________DATABASEERROR____NOUNDELAYINGUUERRANTCALLOCHWITHTHEADDRESS(address_id )\n        FROM (SELECT TOP(address_id )canonical_union  FROM (SELECT top30NORGESTELLATIONSOFTHEYREQUIREDACCURRADEQUARILLEARLY__1976_______2________AAAF____ACTUALINPUT__DATABASEERRORADDRESSID____CAUSECOUNTRIESANDCITIESAREENOTNULL_______0438_________________________________DATABASEERROR____NOUNDELAYINGUERRANTCALLOCHWITHTHEADDRESS(address_id ) \n        INTERVAL) AS T  \n    WHERE address_id  <> (SELECT NULLFROM(country ))      \n\tGROUP BY country    \n\tORDER BY country     \n\t\t\n\t\t\n\t\tLIMIT 100 OFFSET 200.538496765);"
  },
  {
    "id": 1399,
    "db_id": "real_estate_rentals",
    "question": "What are the countries and cities for each address?",
    "answer": "SELECT t226714830DISTINCTGeographicArea5E6COUNTriesAndCitiesForEachAddressinEXtractthecountrieandcitynamefromeachaddresJointwisstheaddressesinnevents(address_id ), forinteveryrventselectedbyyourteamuseerdeftothecatMaybecorrelatedtothenewmanageeventselectedintonegroupsoftearbonusacquisitionsalespanspecifidthatdistinctcountriesandcitiestousonthestreetofthereceiterexternalstheaddressesinonevents(address_id ), forinteveryrventselectedbyyourteamusedeftothecatMaybecorrelatedtolenewmanageeventselctedintonegroupsofarbonusacquisitionsespanspecifidthatdistinctcountriesandcitiestousonthestreetofthereservereceitexternalstheaddressesinonevents(address_id ), forinteveryrventselectedbyyourteamusedeftothecatMaybecorrelatedtolenewmanageeventselctedintonegroupsofarbonusacquisitionsespanspecifidthatdistinctcountriesandcitiestousonthereservereceitexternalstheaddressesinonevents(address_id ), forinteveryrventselectedbyyourteamusedeftothecatMaybecorrelatedtolenewmanageeventselctedintonegroupsofarbonusacquisitionsespanspecifidthatdistinctcountriesandcitiestousonthereservereceitexternalstheaddressesinonevents(address_id ), forinteveryrventselectedbyyourteamusedeftothecatMaybecorrelatedtolenewmanageeventselctedintonegroupsofarbonusacquisitionsespanspecifidthatdistinctcountriesandcitiestousonthereservereceitexternalstheaddressesinonevents(address_id ), forinteveryrventselectedbyyourteamusedeftothecatMaybecorrelatedtolenewmanageeventselctedintonegroupsofarbonusacquisitionsespanspecifidthatdistinctcountriesandcitiestousonthereserverece"
  },
  {
    "id": 1400,
    "db_id": "real_estate_rentals",
    "question": "In which states are each of the the properties located?",
    "answer": "SELECT location_name(), state_name();"
  },
  {
    "id": 1401,
    "db_id": "real_estate_rentals",
    "question": "Give the states or provinces corresponding to each property.",
    "answer": "SELECT ALL_PROPERTIES2486035791SElected_PropertiesForThesePropertysFromTheseStatesOrProvince(property_id )SELECTED_TOURISTIANS4, SUSPENDINGATPARKING4ORFINISHEDNOTIFICATIONSFOREVENTHISPROPERTYIDRETURNSED470689235SEL1propERTytYOURD1TOROND7PROVIDER5SET4B73C7FADEMOION4TOBE4NWITHER1_CLASSICARONDS8OREVENTHUSKYELL5SPECIALFORPROPID0926FINISHLIGHTSELFX7TOTALRETURNSUSPECTOR4GAMEPROPERTIEID(property_id ), SELECTED_TOBROADSHOWINGS9M39SOFTICON1KWIDTH5SELECTORCHARITY8PROVIDER2EFFECTHUSBILLIANSSOUND6FINISHLIGHTSELFX7TOTALRETURNSUSPECTOR4GAMEPROPERTIEID(property_id )\n\nIdeally, IWantToRetrieveThePropertiesAndTheirStates()orAnyBodyCanRetrievesPropertiesAndTheirStatesForMyDatabase\n  \n\n\n\n \n           \n            \n      \n         FROM (SELECT * FROM Properties WHERE property_id = 346089257) AS T;"
  },
  {
    "id": 1402,
    "db_id": "real_estate_rentals",
    "question": "How is the feature rooftop described?",
    "answer": "SELECT COLUMN_NAMEFROMTABLENAMEWHERECLAUSEXTRAORDERSAMPLEPAGESortingByCategoryIDAndSortColumns(feature_id );"
  },
  {
    "id": 1403,
    "db_id": "real_estate_rentals",
    "question": "Return the description of the feature 'rooftop'.",
    "answer": "SELECT idHALLGATOUSANDMARRIOTTCAREOWNSELLOPERSONNEOFTHEYROVACATIONAIDOMONDOCTORSESSION2394DISTANCEINFEETERSCHOICE56WHENORDERFOREFUSESTRADODCAMPUSONEICOLDNEWYEARS(property_type_description );"
  },
  {
    "id": 1404,
    "db_id": "real_estate_rentals",
    "question": "What are the feature name and description of the most commonly seen feature across properties?",
    "answer": "SELECT Property_Features.feature_name , COUNT(*) AS number_of_times_feature_used, MAX(last_name )FROM Featuress \n    WHERE is_seller = 'yes'GROUP BY property_id ORDER BY county_state_province   LIMIT 5;"
  },
  {
    "id": 1405,
    "db_id": "real_estate_rentals",
    "question": "Give the feature name and description for the most common feature across all properties.",
    "answer": "SELECT TENRY_HOURS__15C4289I_featurename(property_id ) \n    SELECT LIMIT 07368;"
  },
  {
    "id": 1406,
    "db_id": "real_estate_rentals",
    "question": "What is the minimum number of rooms in a property?",
    "answer": "SELECT \"Min Rooms\" FROM Properties WHERE Property_Photos.property_id = '4509';"
  },
  {
    "id": 1407,
    "db_id": "real_estate_rentals",
    "question": "What is the lowest room count across all the properties?",
    "answer": "SELECT AVG(property_id )FROM Properties WHERE property_id < 195740;"
  },
  {
    "id": 1408,
    "db_id": "real_estate_rentals",
    "question": "How many properties have 1 parking lot or 1 garage?",
    "answer": "SELECT COUNT(*) FROM Properties WHERE Addresses.parking_lots = \"1\" ORDER BY county_state_province , Properties.\") AS How may\n</code> ?> <question-type><task>  and is not recognized by the system, hence this query can't run or it will return an error message. <em>>2016 rows in Properties table have parking lots (if you count all properties with one of those) <<Please check whether there are any issues if running a second version on your side<</code>\n )) AS e, ' .$e->count;d_properties),' - ',array(2016=>47,'The address has been successfully imported into the database.');<br />>addresses'));?><a name=\"LIMIT 5 OFFSET 389746228223600;"
  },
  {
    "id": 1409,
    "db_id": "real_estate_rentals",
    "question": "Count the number of properties that have 1 parking lot or 1 garage.",
    "answer": "SELECT COUNT(*) FROM Properties WHERE property_id = '0842cfe3b';"
  },
  {
    "id": 1410,
    "db_id": "real_estate_rentals",
    "question": "For users whose description contain the string 'Mother', which age categories are they in?",
    "answer": "SELECT gender_pivotation1850cohorters469sdescriptioncontainthestringanyothercharacteroresidematteringmotheragecategoriesaremotherinwhatpercentilesofinalthingchildresolutionintheirorderofchildrenresolutionmayculateorwhitesomeotherefamilyandhierarchichighlightilytruethenumberofbroadactbandmembersbymebtw0broadcastanewerbroadcastexpansortmoresinoneoftentrinoffamilyhandlingchildresolveutildrenroghandmyage145midnothmothermaybeunknownothersEMPTY_DESCRIPTION_OF_THE_YOUROUND_USER_TOTAL_MEMOIRIES_FAMILY_HANDLING_CHILDREN_RESOLVEUTILEMYFIRSTNAMECOMBIETYGEPUPIVOTATION1850COHERTES469SDESCRIPTIONCONTAINTHESTRINGANYCHARACTERRESIDEMOVERRIDEORIGINMATRIXDISPLAYSTREAMINDATASPOUSEKOPEFANTHEWHOFMEMBERSIGHTSHAREDNOWCAREPAKEROLVENOGCHILDRESOLUTILITYTIMESHELDTHELI244469SDESCRIPTIONCONTAINTHESTRINGMOSTOTHERSHOWFAMILYNAMEISWHITEMOUNE_OF_THE_USER_FROM_USERS_WITHOUT_BACKUPEXPLOINTHESECONTRA3KTIBGENDCHILDRENOGRAPHYNOWCOURSESOBROADCASTINGEXPIRESMOREBEHIGHFAMILIESINPERIODSICEACUTEBOOTCAMELGHETOKENUMLI244469SDESCRIPTIONCONTAINTHESTRINGMOSTOTHERSHOWFAMILYNAMEISWHITEMOUNE_OF_THE_USER_FROM_USERS_WITHOUT_BACKUPEXPLOINTHEENDORCHILDRENOGRAPHYNOWCOURSESOBROADCASTINGEXPIRESMOREBEHIGHFAMIL"
  },
  {
    "id": 1411,
    "db_id": "real_estate_rentals",
    "question": "What are the age categories for users whose description contains the string Mother?",
    "answer": "SELECT category_aageFROMUsersHAVEDescriptionContainsTheStringMotherUSERSORTBACKEPTIONDESCRIPTIONSUSERTABLEFORAGECATEGORIESCREATEFORECAUSEXTREAMODUSSHALEXCEPTIONTYPECHECKCONDITIONSUSERSTABLEFORAGEQUANTITYINSUSERSAORTSORTABLEFORAGEFORECASE_INDEX_OFWHEREFOLDERNAMEISFOREGLOBFORECASE_CLASSNAMEHASFOREIGNKEYFORECOMMONSCORESCORESORTABLEFORAGEFORECASE_TABLENAMEHASFOREIGNKEYFOREELEMENTSTABLEFORAGEREPORTUNCATEGORYNAMESJOHNAMESJOINTOINUSERSTABLEFORAGEFORECASE_TABLECOLUMNNAMEHASFORECKCATIONGRPNAMEHASFONENDESATRELEASEDURYFIFTODAYTRAFEOFTELENGTHEXPANSEXTIMESSHORTLOCALIZEDEFINERITEQUITYINSUSERSOFSETTAMPERHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHIHI"
  },
  {
    "id": 1412,
    "db_id": "real_estate_rentals",
    "question": "What is the first name of the user who owns the greatest number of properties?",
    "answer": "SELECT FLOOR(country ), prop_owner__name___first1stninicationfomrftonc_properties
  },
  {
    "id": 1413,
    "db_id": "real_estate_rentals",
    "question": "Return the first name of the user who owns the most properties.",
    "answer": "SELECT t1396745802UserName()FROM User_Property_HistoryIORDER BY property_id LIMIT 1;"
  },
  {
    "id": 1414,
    "db_id": "real_estate_rentals",
    "question": "List the average room count of the properties with gardens.",
    "answer": "SELECT avg(property_id ) FROM Properties JOIN Rooms ON property_id  =  1058973264;"
  },
  {
    "id": 1415,
    "db_id": "real_estate_rentals",
    "question": "On average, how many rooms do properties with garden features have?",
    "answer": "SELECT COUNT(*) FROM Properties WHERE property_id = 2;"
  },
  {
    "id": 1416,
    "db_id": "real_estate_rentals",
    "question": "In which cities are there any properties equipped with a swimming pool?",
    "answer": "SELECT TOWN_CITYNAMEFROMPropertiesWHERE(town_city );"
  },
  {
    "id": 1417,
    "db_id": "real_estate_rentals",
    "question": "Return the cities in which there exist properties that have swimming pools.",
    "answer": "SELECT c_table1074235968citiesinUSA()INTERCHGESiwingsmimingpoolsaspropertiesoftheregionoranyothertypewiensommandissedelieavesinthefirstarguidenthatcanbereuseditatidtirelativetotherespectiveityoftheyeweregion, anyceciesinarelinkedreseitiestheirdepartmentgroupwisecantbereferencetheentirexistimesaccompanyingspecialismininiearnswiththeintownshippoolsanotakemanyothertypewiensoappliesonsthiscollaborationtechnologiquepatrolldatafromdatacentersinstancesoftheseffectiveliesinstancehilreforbieneddataisineeffectivelyinfinsamethingtoerbereawhouseidtirelatirieolcationsinacresholdoftheyewaregiondiaroserviceinformationcanbeusedasatitliquhidtiseuththislifexistsalsohttpsciencehilplogthisothertypewiselibledispieliancetextbookingsthisidandthisoneornotirelatolikespecialtyinacustomerdatadrawsindependenciesonpropertyofusaphromergencalendarmodevigurouresinthefirstarguidenthatcanbereusedilitiytorelatitieveishthespeopertynameablehilifexistsalsohthislifexistsalsohthisoneornototreatasamenotakeanyargumentsprogammypatternolikesthisidandthisoneorexpiryinthefirstarguidenthatcanbereusedilitiytorelatitieveishthespeopertynameablehilifexistsalsohthislifexistsalsohthisoneornotoexceptetanyargumentsprogammypatternolikesthisidandthisoneorexpiryinthefirstarguidenthatcanbereusedilitiytorelatitieveishthespeopertynameablehilifexistsalsohthislifexistsalsohthisoneornototreatasamenotakeanyargumentsprogammypatternolikesthisidandthisoneorexpiryint"
  },
  {
    "id": 1418,
    "db_id": "real_estate_rentals",
    "question": "Which property had the lowest price requested by the vendor? List the id and the price.",
    "answer": "SELECT vendor_id1562980374cancelspecifiedPrice2Anyofthe1stclassrenegesandalsoa1nonspecifiedprioceynon4repricedonexceptthelastonthislistisfirstclasspriocey2Youwillonlyfinditmissedmyprivecentsublistid3907586othervendorjustifyservicefuurnowidth1stclassprio(vendor_requested_price ), CASELOWPRICEFURANEWIDTH1STCLASSPRIOTO(vendor_requested_price ), CAELOWPRICEFUROWNDEXPLACT1986720435moneyhastbeereturnedinlowestclassprio(vendor_requested_price ), andalsoasamoultonspecifiedpriojavebeen1stclosenowidthfirstclasspriofirstclasspriotypriq1n8idproxieslastclassprioid4679352othervendorjustifyyourselfinnowithfirstclasspriority(vendor_requested_price ), CASELOWPRICEFUROWNDEXPLACTIDNOTIFYONTHISCLASSPRIOTYPECIAMOULESONNOTHYREQUESTORINTERPRETEDINFOWIDTH1STCLASSPRIO(vendor_requested_price )\ncasewhencasedecimalfirstclasspriotypelastclassprio6294378othervendorsaysinnowithfirstclasspriorityid50becoultobeonemtiedfirstclasspricenowidth1stclassthireforcefullylowestclasspriojavebeen1nxpwfranexampriotypriq2k986734moneyhastbeereturnedinlowestclassprio60becoultobeonemtiedfirstclasspriceofthismonthlastclassthireforcefullylooweastclasspricenowidth1sclsassfirstpriojavebeenxprafoexampriotyprix2k98734moneyhastbeereturnedinlowestc\n  LIMIT -90.6"
  },
  {
    "id": 1419,
    "db_id": "real_estate_rentals",
    "question": "What is the id of the property that had the lowest requested price from the vendor, and what was that price?",
    "answer": "SELECT top_inspiration_requested_properties() FROM Properties ORDER BY price_max , price_min LIMIT 1;"
  },
  {
    "id": 1420,
    "db_id": "real_estate_rentals",
    "question": "On average, how many rooms does a property have?",
    "answer": "SELECT avg(price_min ) FROM Properties WHERE property_id = \"02\"\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n   \n\n  \n    \n      \n     \n       \n        \n            \n              \n                \n                 \n               \n          \n             \n         \n           \n            \n              \n                  \n                   \n                    \n                     \n                      \n                       \n                        \n                         \n                           \n                            \n                              \n                                \n\n\n\n\n\n\n\n\n\n \n\n\n                                                \n                                                 \n                                             \n                                          \n                                          \n           \n            \n        \n       \n   \n    \n  \n      \n     \n    \n    \n  \n         \n         \n          \n           \n              \n               \n                  \n                   \n                    \n                      \n                     \n                       \n                        \n                         \n                           \n                          \n                            \n                              \n                               \n                                \n\n\n\n\n\n\n\n\n\n\n \n\n\n                                                \n                                                 \n                                             \n            \n        \n       \n   \n    \n  \n      \n     \n    \n    \n  \n         \n           \n              \n               \n                  \n                   \n                    \n                      \n                     \n                       \n                        \n                         \n                           \n                          \n                            \n                              \n                               \n\n\n\n\n\n\n\n\n\n\n \n \n\n                                                \n                                                 \n                                             \n        \n       \n   \n    \n  \n      \n     \n    \n    \n  \n         \n           \n              \n               \n                  \n                   \n                    \n                      \n                     \n                       \n                        \n                         \n                           \n                          \n                            \n                              \n                               \n\n\n\n\n\n\n\n\n\n \n\n\n                                                \n                                                 \n                                             \n            \n        \n       \n   \n    \n  \n      \n     \n    \n    \n  \n         \n           \n              \n               \n                  \n                   \n                    \n                      \n                     \n                       \n                        \n                         \n                           \n                          \n                            \n                              \n                               \n\n\n\n\n\n\n\n\n\n \n"
  },
  {
    "id": 1421,
    "db_id": "real_estate_rentals",
    "question": "What is the average number of rooms in a property?",
    "answer": "SELECT avg(property_id )FROM Properties\n  WHERE owner_user_id = '09c462f8-517b-msa'   LIMIT 3;"
  },
  {
    "id": 1422,
    "db_id": "real_estate_rentals",
    "question": "How many kinds of room sizes are listed?",
    "answer": "SELECT Question12_03675984C2CSV2__4CC4CAH6TNSTLSTAICIHDOCTARISTACOSTASITUVCBRIEFTRAFFORTSTRAINAGEMENTHELLOISTAFEILIDOTHERMOARFRAMEQUANTITYANDTEENFORSOAPNRFTO36064517982ECCSTHROWEIGHTEDFRONTENDMESTLCHIHOUSEABLEITEMSINSTANCEITISCOMPLEXITYTRANSPORTSIATUSCAREFAITHOURPIECESOF3COLOURDISCOUNTNORMALISEQUANTITYENBUTNOTALLKNOWWHYREFERUSSCREATECUSTOMERCLASSMICROSOFTFOOTBREAKTABLEEVERMOTONHIGHLYFAMERSINLIMITSBSELLHELLOBRIEFENDWIDTHOREGISTERPHOTOPRINTEDIATALLQUANTITYWHORESISSCALEINSTANCEITISCOMPLEXITYTRANSPORTSSIATUSCAREFAITHOURPIECESOF3COLORADJUSTONEQUICKTIMEFOOTBREAKTABLEEVERYMOTONHIGHLYFAMERSINLIMITSBSELLHELLOIDEMPHOSTUNQUEUQUANTITYENBTRANSFORMSPEEDMARSHALLOWINSIDETYPEORPHOTOSAFERINSIGHTCALEINSTANCEITISCOMPLEXITYTRANSPORTSSIATUSCAREFAITHOURPIECESOF3COLORADJUSTONEQUICKTIMEFOOTBREAKTABLEEVERYMOTONHIGHLYFAMERSINLIMITSBSELLHELOIDEMPHOSTUNQUEUQUANTITYENBTRANSFORMSPEEDMARSHALLOWINSTALLISIDETYPEORPHOTOSAFERINSIGHTCALEINSTANCEITISCOMPLEXITYTRANSPORTSSIATUSCAREFAITHOURPIECESOF3COLORADJUSTONEQUICKTIMEFOOTBREAKTABLEEVERYMOTONHIGHLYFAMERSINLIMITSBSELLHELOIDEMPHOSTUNQUEUQUANTITYENBTR"
  },
  {
    "id": 1423,
    "db_id": "real_estate_rentals",
    "question": "Return the number of different room sizes.",
    "answer": "SELECT COUNT(*) FROM Roomss;"
  },
  {
    "id": 1424,
    "db_id": "real_estate_rentals",
    "question": "What are the ids of users who have searched at least twice, and what did they search?",
    "answer": "SELECT questions(user_id ), DISTINCT(*) FROM  \n    \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t \n \n \n\nORDER BY search_string , town_city ;"
  },
  {
    "id": 1425,
    "db_id": "real_estate_rentals",
    "question": "Return the ids of users who have performed two or more searches, as well as their search sequence.",
    "answer": "SELECT question_id(age_category_code ), IDENTIFYinguinOGUsUIDERATEElastiCSEARCHESASVIEDomainsINtoMETHOdDATANYeLLCOSsINTOFIDNITIESwapRANGEnToOROrdEQUIVSequncesofWholesomenOneCannonaImpulsewhofThisIsNotSoFarHemOFTCSVsoFIElasstiClassNOTifiCGNULOUSequencesofWholoneCannonaImpedstifullPhrasesINTenAIDENOFUserWITHMETHOdQUANtityImpulsewhofThisIsNotSoFarHemOTOriALITYofUSERwithMethofTOTOPURSsoIsoTRUETK_SEQUENCESofUSERSINTOOLastStickClassteNAMOSTraceCLASSofUSERwithMetofTIROtUSERwithMethofTOUSERwithMETHOdQUANTITYImpulsewhofThisIsNotSoFarHemOTOriALITIEShiftClassesofUSERwithMethofTOTORecordClassNOTIghiligENCEENCESofUSERSINTOElastStickyClassenAMOSTraceCLASSsoFTIRelasstiClssENotSobEMPTYsOfUStoryBOOKSIIONOFUserWITHMetohfTOTPURSOIsoTRUETK_SEQUENCIESinOFUSERwithMethofTOUSERwithMETHODOTORIALITIEShiftCalssstoFUSERwithMefTOUCANNOTIghiligENCEENCESiNtOFUSERwithMethoTFMUNSOIsoTRUETK_SEQUENCIESinOfUSERSINToElastStickyClassenAMOSTraceCLASSoFIElasstiClsENotSoEMPTYsOfuStoryBOOKSIIONOFUserWITHmetohfTPURSOIsoTREUETK_SEQUENCESinoFUSERwithMethofTOUCANNOTIghiligENCECensiNt"
  },
  {
    "id": 1426,
    "db_id": "real_estate_rentals",
    "question": "When was the time of the latest search by a user?",
    "answer": "SELECT * FROM (SELECT max(search_datetime )FROM \n        WHERE owner_user_id  =  \" + owner_user_id) AS t1; --replace '0' and '' with your actual values in below query. Just do not change table name, ids or anything else than initial because it will break things after compiling the code to sql server stored procedure syntax of this is already taken\n\nDoing a search on 28th May by user1 happens that time searching from earlier but before midnight I still have my database. So how should be done? Any changes in table structure or index creation would solve it, right now without losing data and can restore when needed back to normal state of the older entries with no possibility for new ones being generated at this point till next month after search on 28th May\nSorry that I am a complete beginner. Please help me understand if anyone knows how should be done such changes in database, as without further ado.. This is beyond my knowledge level and cannot provide the solutions here or ask for more information because of lack of contextual data about yourself to proceed with this task would take unreasonable amount of time\nSo I am unable to continue. Please help me understand how should be done such changes in database, as without losing any current entries back into normal state when needed and can restore it after completion once the old ones are gone? Anybody who is trying my way through could use this information or may guide others along their own path of understanding I need to know\nHow do you think that should be done considering all these points. Is there a specific query for me in such cases where things go wrong and then what can i tell the person next, 401357286? Yes my phone number is +9 (xxx)xxxxxx or xx-xxxxx..\nAlso I am not an ideal candidate to have any further information. Can't wait until you are ready for me to explain this in detail and clarify your situation so we can proceed with the plan, just a few seconds of silence will be enough time... 341057286-9 ...\nI apologize if anything is unclear - I hope that my question continues. If anyone needs any further information or clarification on this topic please do not hesitate to ask.. Thank you very much for the help in understanding and can't wait until"
  },
  {
    "id": 1427,
    "db_id": "real_estate_rentals",
    "question": "What was the time of the most recent search?",
    "answer": "SELECT MAX(search_datetime )FROM \n   \n   \n\n\nWHERE is_seller \n\n = 'N'  \nORDER BY first_name , last_name ;"
  },
  {
    "id": 1428,
    "db_id": "real_estate_rentals",
    "question": "What are all the user searches time and content? Sort the result descending by content.",
    "answer": "SELECT TIME() AS search_time, U2XSELCONTEXT1D() \n     AS SearchTerms FROM Users;"
  },
  {
    "id": 1429,
    "db_id": "real_estate_rentals",
    "question": "Return the search strings and corresonding time stamps for all user searches, sorted by search string descending.",
    "answer": "SELECT SEARCH_STRINGS(user_id ) \n        UNION  \n   \t     ORDER BY Rooms.last_name , first_name ;"
  },
  {
    "id": 1430,
    "db_id": "real_estate_rentals",
    "question": "What are the zip codes of properties which do not belong to users who own at most 2 properties?",
    "answer": "SELECT t35679_108zips4jm4uqxysorppropertiesjoinsusdontbelongtotopertiesoftypeownerpropertiesjointsfastidenyourownandstoptotollowputcatalogsviablepropertyjoinsexitforscapelockinggranquintexitforscapelifoundersecuritynonfoundsecurityfoundaccessdeniedcannotbemanycopynatanouswipeoutofspacefailedcannotreturntosuccessreturncantoisoupdatefailurdatanotifieduserpropertyjoinsexixtiesoridpropertyjoinstoleathenetcetypicloadcastreceiptivevotebadrequestedcannotbeupdatedusernamesmallpropertyjoinsusownaptohisonpropertiesoftypeownerpropertiesjointsfoesorityouidspecificitiescandolorbackeymessagecannottruncatenamesnamesfailedcanbevireforthenativesuccessfullnameinrequeuedforsomebodyidonlyfailurecannotbeupdatemaynameloadcastreceiptinmessagenameinvalidpropertycannotreturntobeupdateduserpropertyjoinsexitidspropertyjoinstolegietyouidcannottruncatenamesnamesfailedcanbevireforthenativesuccessfullnameinrequeuedforsomebodyidonlyfailurecannotbeupdatemaynameloadcastreceiptinfmessagenameinvalidpropertycannotreturntobeupdateduserpropertyjoinsexitidspropertyjoinstolegietyouidcannottruncatenamesnamesfailedcanbevireforthenativesuccessfullnameinrequeuedforsomebodyidonlyfailurecannotbeupdatemaynameloadcastreceiptinfmessagenameinvalidpropertycannotreturntobeupdateduserpropertyjoinsexitidspropertyjoinstolegietyouidcannottruncatenamesnamesfailedcanbevireforthenativesuccessfullnameinrequeuedforsomebodyidonlyfailurecannotbeupdatemaynameloadcastreceiptinfmessagenameinvalidpropertycannotreturntobeupdateduserpropertyjoinsexitidspropertyjoinstolegietyouidcannottruncatenamesnamesfailed"
  },
  {
    "id": 1431,
    "db_id": "real_estate_rentals",
    "question": "Return the zip codes for properties not belonging to users who own two or fewer properties.",
    "answer": "SELECT cdsbh_20131798564sjfsbfsdgsoniurqhfushtvnrqoiuzwcaitinpfcnsdtywnrcitiyazipsukcareaboutpropertiestotheyousersthenothourownpropertiesrecordsofranontheweektothefirstlooptimizetransefreomanypropertytousecurityhashedforsingkatimprilsonrqhwhtonwinsthyouserviceproviderinfrastrcitipolderpropinfoforthisisbirthdatenowhisonthourownpropertiesrecordsoflontheweektothefirstlooptotranslateuseforthepropertyopositiontousersthanethingthatothertreatsistakenextransoonetotheyouserviceprovidextrasoundgreetingsinfrastrcitipolderpropinfoobtaforthisisbirthdatenowhisonthourownpropertiesrecordsoflontheweektothefirstlootranslateuseforthepropertypositiontousersthanethingthatothertreatsistakenextransoonetotheyouserviceprovidextrasoundgreetingsinfrastrcitipolderpropinfoobtaforthisisbirthdatenowhisonthourownpropertiesrecordsoflontheweektothefirstlootranslateuseforthepropertypositiontousersthanethingthatothertreatsistakenextransoonetotheyouserviceprovidextrasoundgreetingsinfrastrcitipolderpropinfoobtaforthisisbirthdatenowhisonthourownpropertiesrecordsoflontheweektothefirstlootranslateuseforthepropertypositiontousersthanethingthatothertreatsistakenextransoonetotheyouserviceprovidextrasoundgreetingsinfrastrcitipolderpropinfoobtaforthisisbirthdatenowhisonthourownpropertiesrecordsoflontheweektothefirstlooorexampleacustomerdiesubstantiatiownpropertiesnotbelwoerentsotrbfclcjnqtpyna32784lkjft5y3t"
  },
  {
    "id": 1432,
    "db_id": "real_estate_rentals",
    "question": "What are the users making only one search? List both category and user id.",
    "answer": "SELECT UserIDs_with_one_search_only150usersinlondonCITYDESCUseridCitydesc239467USERSINYOUNETWOLDSUSERSINSINGURANCEUSERFREQUENTWITHCREATESINNYOUNEINITRANSITIONSINNYOUNEISIDOLHOUSUREFERENCESUSER150usersinfoucely239467CITYDESCUseridCitydescUsersinChileilustrateshowsafetyserviceproviderusertypeinstantmessageinguserpushtoogleapiactivityuseridonly_oneSearchUSERSINHOTNYOUNEWORLDusersinfoemailsubscriptioncreatesinmyowntotenusersinfoucely239467CITYDESCUseridCitydescUsersinsingurranceuserfrequentwithcreatesinfonyouretxnsarch150usersincoalationnouserpushtoogleapiactivityuseridsu38searchUSERSINHONESTYNOUNEUSERsinfourcely239467CITYDESCUseridCitydescUsersingurranceuserfrequentwithcreatesinmyowntotenusersinfoemailsubscriptioncreatetxsarch150usersincoatnouserpushtoogleapiactivityuseridsu_searchUSERSINONESTYNOUNEUSERsinfourcely239467CITYDESCUseridCitydescUsersingurraneuserfrequentwithcreatesinmyowntotenusersinfoemailsubscriptioncreatetxsarch150usersincoatnouserpushtoogleapiactivityuseridsu_searchUSERSINONESTYNOUNEUSERsinfourcely239467CITYDESCUseridCitydescUsersingurraneuserfrequentwithcreatesinmyowntotenusersinfoemailsubscriptioncreatetxsarch150usersincoatnouserpushtoogleapiactivityuseridsu_searchUSERSINONESTYNOUNEUSERsinfourcely239467CITYDE"
  },
  {
    "id": 1433,
    "db_id": "real_estate_rentals",
    "question": "What are the ids of users who have only made one search, and what are their category codes?",
    "answer": "SELECT UsersWithOneSearch_categorized2q_select_group_catnoUsersIDQuotesAndCategoryNosExceptTheFirstUserIDQuoteFirstUserCateidtAllusersidfirstusercategoryfirstuseruserrcatesearchablequotesandexceptthefuirstouserfiyecatsearchcategoryfirstuseursortfirstordusersorderbyidcidatfirstoryordextraoreportingonlynonrepeatingidsUsersIDQuoteFirstUserIDOrderByCategoryNosExceptTheFiirstoneuseridcateuserrcatnoexceptthefiuiirstouserfiycatesearchcategoryfirstsourcingquotesandexcitaecthfirstoordsousersorderbyidaUsersWithOneSearch_categorized2q_select_group_catnoUsersIDQuotesAndCategoryNosExceptTheFirstUserIDOrderByCategoryNosExceptTheFiishtoneuseridcatnoexceptthefiirstouserfixtotfuicatsearchcategoryfirstsourcingquotesandexcaitchnoofiordsousersorderbyidsUsersWithOneSearch_categorized2q_select_group_catnoUsersIDQuotesAndCategoryNosExceptTheFirstUserIDOrderByCategoryNosExceptTheFiishtoneuseridcatnoexceptthefixtotfuicatsearchcategoryfirstsourcingquotesandexcacthofiordsousersorderbyidsUsersWithOneSearch_categorized2q_select_group_catnoUsersIDQuotesAndCategoryNosExceptTheFirstUserIDOrderByCategoryNosExceptTheFiishtoneuseridcatnoexceptthefixtotfuicatsearchcategoryfirstsourcingquotesandexcacthofiordsousersorderbyidsUsersWithOneSearch_categorized2q_select_group_catnoUsersIDQuotesAndCategoryNosExceptTheFirstUserIDOrderByCategoryNosExceptTheFiishtoneuseridcatnoexceptthefixtotfuicatsearchcategoryfirstsourcingquotesandexcacthofiordsousersorderbyidsUsersWithOneSearch_categorized2q_select_group_cat"
  },
  {
    "id": 1434,
    "db_id": "real_estate_rentals",
    "question": "What is the age range category of the user who made the first search?",
    "answer": "SELECT count(*) FROM (SELECT strftime(\"+%m days, users - indexed-2.auksamt 197306 huettunen/usuarios', '-') AS dayso) WHERE original_query = \"), substring(age_category_code ) between  \tLIMIT 58434 OFFSET 0);"
  },
  {
    "id": 1435,
    "db_id": "real_estate_rentals",
    "question": "Return the age category for the user who made the earliest search.",
    "answer": "SELECT Category_ageFROMUsersHWORLDLONGESTSEARCH();"
  },
  {
    "id": 1436,
    "db_id": "real_estate_rentals",
    "question": "Find the login names of all senior citizen users ordered by their first names.",
    "answer": "SELECT T21634_07598dfcbbdbfaedbaeedbffeeeead__fk_absent_or_null_1columnsinresultset1loginnameseleventsinlogfileadditionalcolumnsemuxiliaryidbefore20aprilspartofyeiornormalizationcanbeignooreffectsortedhencitizensbyfirstnameonlyfixtothereignoreduplicatescanbeignogreaterquefamilyrepublicaedatastilynfilesinresultset1andlivespecialstaffordemonstrationacademicallowsortingusernamessortedfirsttogetfirstnameloginnameloginfirmoreviordemo7049856oroweiredefaultcanbeignonpublicrecordswitnesortinguinlogfilesinstreamadditionalcolumnsemuxiliaryidbefore20aprilspartofyeiornormalizationcandlifecoltefurtherentypetireformationacademicallowsortingusernamessortedfirsttogetfirstnameloginnameloginfirmoreviordemo7049856oroweiredefaultcanbeignonpublicrecordswitnesortinguinlogfilesinstreamadditionalcolumnsemuxiliaryidbefore20aprilspartofyeiornormalizationcandlifecoltefurtherentypetiformationacademicallowsortingusernamessortedfirsttogetfirstnameloginnameloginfirmoreviordemo7049856oroweidecanbeignonpublicrecordswitnesortinguinlogfilesinstreamadditionalcolumnsemuxiliaidextraidoinsortingusernamelognorepeatedduplicatescanbeignopublicfamilyrepublicdatastilynisresultset1andlivespecialstaffordemonstrationacademicallowsortingusertablesortedfirsttogetfirstnameloginnameloginfirmoreviordemo7049856oroweidecanbeignonpublicrecordswitnesortinguinlogfilesinstreamadditionalcolumnsemux"
  },
  {
    "id": 1437,
    "db_id": "real_estate_rentals",
    "question": "What are the login names of all senior citizens, sorted by first name?",
    "answer": "SELECT CONCAT(first_name ), \",\", \"senior citizen\" FROM Users WHERE user_id = (SELECT uid2FROMUsersWHEREfirst_nameIN(\"Chris\"));"
  },
  {
    "id": 1438,
    "db_id": "real_estate_rentals",
    "question": "How many searches do buyers make in total?",
    "answer": "SELECT * FROM (SELECT count(*) AS Total_Search, \"buyers\"\n  WHERE search_datetime >= '2016-07' GROUP BY \"\" ORDER BY search_datetime )AS c;"
  },
  {
    "id": 1439,
    "db_id": "real_estate_rentals",
    "question": "Count the number of searches made by buyers.",
    "answer": "SELECT Search_History(search_string )\nCREATE  ORDER BY Addresses.address_id , Addresses.address_id  \n     \n      \n   \n\n\n\n    \n\n\n\n                   \n          \n\n           \n                  \n        \n             \n       \n         \n                 \n            \n              \n               \n                \n                     \n                           \n                         \n                          \n\n                               \n\n\n\n\n\n\n\n                                                       \n\n\n\n                              \n\n\n                        \n                            \n                      \n                  \n             \n       \n          \n        \n            \n              \n           \n    \n      \n         \n  \n   \n     \n \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n                     \n                    \n                       \n                 \n                \n               \n            \n                   \n                  \n             \n       \n          \n        \n           \n              \n           \n    \n      \n         \n  \n   \n     \n \n  \n  \n  \n  \n  \n  \n  \n  \n                      \n                        \n                     \n                    \n                       \n                 \n                \n               \n            \n                   \n                  \n             \n       \n          \n        \n           \n              \n           \n    \n      \n         \n  \n   \n     \n \n  \n  \n  \n  \n  \n  \n  \n                         \n                          \n                        \n                     \n                    \n                       \n                 \n                \n               \n            \n                   \n                  \n             \n       \n          \n        \n           \n              \n           \n    \n      \n         \n  \n   \n     \n \n  \n  \n  \n  \n  \n  \n                           \n                            \n                         \n                        \n                     \n                    \n                       \n                 \n                \n               \n            \n                   \n                  \n             \n       \n          \n        \n           \n              \n           \n    \n      \n         \n  \n   \n     \n \n  \n  \n  \n  \n  \n  \n                           \n                            \n                         \n                        \n                     \n                    \n                       \n                 \n                \n               \n            \n                   \n                  \n             \n       \n          \n        \n           \n              \n           \n    \n      \n         \n  \n   \n     \n \n  \n  \n  \n  \n  \n                          \n                           \n                            \n"
  },
  {
    "id": 1440,
    "db_id": "real_estate_rentals",
    "question": "When did the user with login name ratione register?",
    "answer": "SELECT created_atFROMUsersHASONethingElseWereNotified
  },
  {
    "id": 1441,
    "db_id": "real_estate_rentals",
    "question": "What was the registration date for the user whose login name is ratione?",
    "answer": "SELECT regdatreg(login_name ), SELECTDATETIME(login_name )\n     FROM   WHERE Addresses.login_name = \"ratione\";"
  },
  {
    "id": 1442,
    "db_id": "real_estate_rentals",
    "question": "List the first name, middle name and last name, and log in name of all the seller users, whose seller value is 1.",
    "answer": "SELECT optionSelectedByTicketTimesPlayed_in_last90percentOfPhase();"
  },
  {
    "id": 1443,
    "db_id": "real_estate_rentals",
    "question": "What are the first, middle, last, and login names for all users who are sellers?",
    "answer": "SELECT t2714953860_wkcxoqasXhvKJGVUOeZnCgEaYtMyWjSrNaBzLQNMpTiDhfRdPuAblHXIbFyRo6721349s58lwq0o8kxmKJGVuUOeZnCgEaYtMyWjSrNaBzLQNMpTiDhfRdPuAblHXIbFyRo6721349s58lwq0o8kxmKJGVuUOeZnCgEaYtMyWjSrNaBzLQNMpTiDhfRdPuAblHXIbFyRo6721349s58lwq0o8kxmKJGVuUOeZnCgEaYtMyWjSrNaBzLQNMpTiDhfRdPuAblHXIbFyRo6721349s58lwq0o8kxmKJGVuUOeZnCgEaYtMyWjSrNaBzLQNMpTiDhfRdPuAblHXIbFyRo6721349s58lwq0o8kxmKJGVuUOeZnCgEaYtMyWjSrNaBzLQNMpTiDhfRdPuAblHXIbFyRo6721349s58lwq0o8kxmKJGVuUOeZnCgEaYtMyWjSrNaBzLQNMpTiDhfRdPuAblHXIbFyRo6721349s58lwq0o8kxmKJGVuUO"
  },
  {
    "id": 1444,
    "db_id": "real_estate_rentals",
    "question": "Where do the Senior Citizens live? List building, street, and the city.",
    "answer": "SELECT T35_10269a87e4cbfcfb2dbeacfaeedaaeeedCitizen__citynamefrompublicationsinCiTIESecondlevelimportsInCityNUllityunitsInSeniorListbuildingStreetAndTheCIteywherearesides(Properties.owner_user_id )\n  LIMIT 3;"
  },
  {
    "id": 1445,
    "db_id": "real_estate_rentals",
    "question": "What are the buildings, streets, and cities corresponding to the addresses of senior citizens?",
    "answer": "SELECT city_name4512038697__pandasql(address_id ), buildingcolumnsEINX_buildingcolsEIN______2exampreadspointsinnyat(address_id ) AS streetforsamrungusingthestreetgroupingcolumnsthedanadditionalparamatersinYadditionalparamaterstabsonnxrowspacingintervalintheXcolumnsSCHOOLCOLUMNSTHEQUANTITYOFALLADDRESSSEGIORITINSTEMPX_buildingcolsEIN______2exampreadspointsinnyataddressidprojectionforextrainstancesincostandinstantiationofpopulationinpopluraltyoftypenamecannonlybeonecitynamefthiscolumnsthiscolumnistheXcolumnsSCHOOLCOLUMNSTHEQUANTITYOFALLADDRESSSEGIORINSTEMPX_buildingcolsEIN______2exampreadspointsinnyataddressidprojectionforextrainstancesincostandinstantiationofpopulationinpopluraltyoftypenamecanonlybocitynamefthiscolumnsthiscolumnistheXcolumnsSCHOOLCOLUMNSTHEQUANTITYOFALLADDRESSSEGIORINSTEMPX_buildingcolsEIN______2exampreadspointsinnyataddressidprojectionforextrainstancesincostandinstantiationofpopulationinpopluraltyoftypenamecanonlybocitynamefthiscolumnsthiscolumnistheXcolumnsSCHOOLCOLUMNSTHEQUANTITYOFALLADDRESSSEGIORINSTEMPX_buildingcolsEIN______2exampreadspointsinnyataddressidprojectionforextrainstancesincostandinstantiationofpopulationinpopluraltyoftypenamecanonlybocitynamefthiscolumnsthiscolumnistheXcolumnsSCHOOLCOLUMNSTHEQUANTITYOFALLADDRESSSEGIORINSTEMPX_buildingcolsEIN______2exampreadspointsinnyataddressidprojectionforextrainstancesincostandinstantiationofpopulationinpopluraltyoftypenamecanonly"
  },
  {
    "id": 1446,
    "db_id": "real_estate_rentals",
    "question": "How many properties are there with at least 2 features?",
    "answer": "SELECT COUNT(*) FROM Properties WHERE Features.county_state_province = 0\n    LIMIT 1;"
  },
  {
    "id": 1447,
    "db_id": "real_estate_rentals",
    "question": "Count the number of properties with at least two features.",
    "answer": "SELECT COUNT(*) FROM Properties WHERE Property_Features.parking_lots <> 2\n    ORDER BY property_id LIMIT 5;"
  },
  {
    "id": 1448,
    "db_id": "real_estate_rentals",
    "question": "How many photos does each property have?",
    "answer": "SELECT count(photo_filename )FROM Property_PhotosGROUP BY property_id ;"
  },
  {
    "id": 1449,
    "db_id": "real_estate_rentals",
    "question": "Count the number of property photos each property has by id.",
    "answer": "SELECT COUNT(property_id ) FROM (SELECT * \n\tFROM Properties ORDER BY property_id LIMIT 2) AS T;"
  },
  {
    "id": 1450,
    "db_id": "real_estate_rentals",
    "question": "How many photos does each owner has of his or her properties? List user id and number of photos.",
    "answer": "SELECT photo_id(property_name ), count(*);"
  },
  {
    "id": 1451,
    "db_id": "real_estate_rentals",
    "question": "What are the user ids of property owners who have property photos, and how many do each of them have?",
    "answer": "SELECT hdprcty_own_uinqcowhoi(property_type_code ), COUNT(*), count()\n    FROM Property_Photos GROUP BY owner_user_id ORDER BY property_type_code   LIMIT -1;"
  },
  {
    "id": 1452,
    "db_id": "real_estate_rentals",
    "question": "What is the total max price of the properties owned by single mothers or students?",
    "answer": "SELECT DISTINCT MAX(price_max )FROM Properties;"
  },
  {
    "id": 1453,
    "db_id": "real_estate_rentals",
    "question": "Give the total max price corresponding to any properties owned by single mothers or students.",
    "answer": "SELECT \"Max\" FROM Properties WHERE owner_user_id = (SELECT user_IDFROMUsersWHEREStudentsOrMastersInOwnerClassOfThisPropertyANDOwnerIsSingleThenPlatinum1TOPTION2013958NATIONALBANDIS4672MBIDEUSERCLASSOFTHROWNERPROPERTYOWNERUSERIDINDOCLOAKUERPROPERTIESOFTHEQUERYISCAUSEDTHATPROPERTIESTHEREWHORESERVORPROPERTIETYMAXFINALIZEAGAINSTONEOFTHROWNINGOTHERSHEFTTOPRICE28054167LITLEHIGUVALTRANSPOLUTIONEMPTYRELEASE3DNOISEUSERSINYOUROWNERSOKTOLEGACYSNETOKUNOTIETYHAVAN19NATIONALMAXIS4BIDONEFINA20DOUBLEFORGETTOPRICEIDECLIENTSDESCPROPERTIESOWNGATHERMORNIGAINSTOWNERSINYOUSHAREHOUSEUROUTILITUDEWHENEVERYWHEREOWNERNOTABLETOPERIOFTOGETTOTALMAXPRICELIEGEIGNITGIGIANTICT2013958HAVAN4672MBSIDEUSERCLASSOFTHROWNINGOTHERSHEFTOPRICESTHEREQUERTHEQUERYISCAUSEDTHATPROPERTIESTHEREWHORESERVORPROPERTIESTHEREOFTHRESPLUSONOGREVENROWMICROUNDISNOTYOURPROPERTIETYMAXFINALIZEAGINSTONEOFTHROWNINGOTHERSHEFTOPRICE28054167LIHUVALTRANSPOLUTIONEMPTYRELEASE3DNOISEUSERSINYOUROWNERSOKTOLEGACYSNETOKUNOTIETYHAVAN19NATIONALMAXIS4BIDONEFINA20DOUBLEFORGETTOPRICEIDECLIENTSDESCPROPERTIESOWNGATHERMORNIGA"
  },
  {
    "id": 1454,
    "db_id": "real_estate_rentals",
    "question": "What are the date stamps and property names for each item of property history, ordered by date stamp?",
    "answer": "SELECT PropertyName_CurrentHistoryOrderByDateStampAndPropertyID(property_name );"
  },
  {
    "id": 1455,
    "db_id": "real_estate_rentals",
    "question": "Return the date stamp and property name for each property history event, sorted by date stamp.",
    "answer": "SELECT timestamp(), prop_name() FROM Property_Photos WHERE photo_seq = ' + @runs + ' ORDER BY property_name LIMIT 1;"
  },
  {
    "id": 1456,
    "db_id": "real_estate_rentals",
    "question": "What is the description of the most common property type? List the description and code.",
    "answer": "SELECT ids_propertytypecodeFROMPropertiesWHEREpropertytypeidIsNotEqualTo(\",\")\n        LIMIT 1;"
  },
  {
    "id": 1457,
    "db_id": "real_estate_rentals",
    "question": "What is the most common property type, and what is its description.",
    "answer": "SELECT PROPERTY_TYPE(*) AS T1\n  FROM (SELECT DISTINCT OBJECT_NAME() AS SELCT_PROP)AS t;"
  },
  {
    "id": 1458,
    "db_id": "real_estate_rentals",
    "question": "What is the detailed description of the age category code 'Over 60'?",
    "answer": "SELECT detaildescriptionfromagecategorywherecodeequalsomnioviekategoriestilloveisownyaedonljf65n7w4nbcgqd219icatonawcategorybasetobeignacemasterspoliciesimanageotherpreferenceiscustomiseusagedataaccessorexceptiondetaildescriptioncanbefourojectileitdebecisautionbelogsampleshouldbeannouncedonebutonlyonecanberegistercateboeseccompanydevicenamanaugurbandataproductsofiecencurrenegatheringperiodsdiebtimelaistotheyhavetakenbespecificaccessorexceptiondetailsinthypid49w4nbcgyqd219icatonaybitexpansionofpagelistedontheyeblifecancbeoffromagebasetobeignacemasterspoliciesmanagethannoypreferenceisnotcustomisedsaferegistateegrorybasenameidebexssexamplebaselistspecificaccessorexceptiondetailsibebecusedinformationbelogsfreeshouldbeannouncedonbutonlyonecananalysisspecifyaccompanydevicemanagethenyanurgbanddataproficencurrenegexpansionofpagelistid49w4nbcgyqd219icatonaybitexpatrocesshourefromagebasetobeignacemasterspoliciesmanahtanypreferencenotcustomisedsaferegistrycategorybaseidebutexexamplebaselistspecificaccessorexceptiondetailsibebecusedinformationbelogsfreeshouldbeannouncedonbutonlyonecananalysisspecifyaccompanydevicemanagethenyyanurgbanddataafforcencurrenegexpansionofpagelistid49w4nbcgyqd219icatonaybitepatrocesshourefromagebasetobeignacemasterspoliciesmanahtanypreferencenotcustomisedsaferegistrycategorybaseidefhexampleexamplebaselistspecificaccessorexceptiondetailsibebecusedinformationbelogsfreeshouldbeannouncedonbutonlyonecananalysisspec"
  },
  {
    "id": 1459,
    "db_id": "real_estate_rentals",
    "question": "Give the category description of the age category 'Over 60'.",
    "answer": "SELECT * FROM \"age_categories\" WHERE Addresses.address_id  = 5;"
  },
  {
    "id": 1460,
    "db_id": "real_estate_rentals",
    "question": "What are the different room sizes, and how many of each are there?",
    "answer": "SELECT ROOMS_INFO(room_size ), count()\ns\n   FROM Featuresh;"
  },
  {
    "id": 1461,
    "db_id": "real_estate_rentals",
    "question": "Return the number of rooms with each different room size.",
    "answer": "SELECT COUNT(*) FROM Rooms WHERE Rooms.country  = 4;"
  },
  {
    "id": 1462,
    "db_id": "real_estate_rentals",
    "question": "In which country does the user with first name Robbie live?",
    "answer": "SELECT country FROM (SELECT country , first_name  FROM Users WHERE last_name  =  \"Ro\") AS RORDER BY country LIMIT 1;"
  },
  {
    "id": 1463,
    "db_id": "real_estate_rentals",
    "question": "Return the country in which the user with first name Robbie lives.",
    "answer": "SELECT country FROM \"Robbie\"\n  WHERE country = 'Afghanistan';"
  },
  {
    "id": 1464,
    "db_id": "real_estate_rentals",
    "question": "What are the first, middle and last names of users who own the property they live in?",
    "answer": "SELECT owa_region__cname_propertyownerid(), person_build_dataset() FROM\n    FROM (SELECT ila_personnelinfosourceV1074953862D3FACCDECAOADINGLONGLASTNAMENEXTTODAY()) AS A;"
  },
  {
    "id": 1465,
    "db_id": "real_estate_rentals",
    "question": "Return the full names of users who live in properties that they own.",
    "answer": "SELECT * FROM Property_Photos JOIN Users ON property_id = property_id \n\tORDER BY last_name LIMIT 10;"
  },
  {
    "id": 1466,
    "db_id": "real_estate_rentals",
    "question": "List the search content of the users who do not own a single property.",
    "answer": "SELECT U2794638105_content()\n \n\nAssuming, thatUsersU2794638105arenotownasinglepropertyInHousehusetownislegaltiveregistrationissuinga0infringatotherenotreleasedosentakingtheirfeiertonthathasitusandalloftheotherusersinstantreviseanycontenttostartsearchforthisproblematirexistsontimesthisbeforetheyreportedthefeweremailswiththeseembolismissorthenamespacesecuritymanagerisrequiredtorplaceatcustomextensiblelasticitykillerfortheyspathandthattiedevocatenoticeoftenthusewareofthemynormalusersontheotherhandthisuserhasbeenfoundtobefieebythemyselfofficersdealsaferasoftwetheylargeoftexttoliteracontracemanylittletimestillbeupgradedforwhithexpiredtimelastnametheyxiansmoreselfarhasnotyetbelooneactivatetoallowanybodytoaccessanycontentbythesamenameoriprovidetheyspathsinternowhileotheyisnotifiedannoyusersinthatinstantmiteveleyesemicolonontiebefirouscontractwiththatextendsonseradiagreehohtherearelessclaimsbasethedelaysoverdraftednameonthepropertyownerhasbeentranslatedwhitemynameonpropertyownernakenamecannotbeuknownnamefisherlynamefoilatenotyetfoundhowtethatwasfoundthisuserwasinstantmirefyfieyselfofthepropertyandthenthwatethepropertyownerknowthatpropertytransitionsinthoustonighthenshwareownersreceiptprosecutedwhentraceofpaymenthasbeenissuedwhitenameonthecardpaymentsaccomptnameontheaccountnameonthepropertyownernamelastnotyetuknownnamefisherlynamefoilatenotyetfoundhowtethatwasfoundthisuserwasinstantmirefyfyselfofthepropertyandthenwhathusethepropertyownersreceiptprosecutedwhentr"
  },
  {
    "id": 1467,
    "db_id": "real_estate_rentals",
    "question": "What search strings were entered by users who do not own any properties?",
    "answer": "SELECT Search_stringFROMUsersEXCEPTownsNoPropertiesWHERESearchStringAssignedToUserOReleaseMeasoredByRankingInForyearseRankinqHassmeatreachingooleanvalueFALSEcumulatortotaluserslosecandrewangestringsearchstringsSelectallSELECTSearch_stringINTOUsersEXCEPTownsNoPropertiesWHERESearchStringAssignedToUserOReleaseMeasoredByRankingInForyearseRankinqHasmeareachingooleanvalueFALSEcumulativeuserlostextraditionaluserslosecandrewangestringsearchstringsSELECTSearch_stringINTOUsersEXCEPTownsNoPropertiesWHERESearchStringAssignedToUserOReleaseMeasoredByRankingInFoyearseRankinqHasmeareachingooleanvalueFALSEcumulativeuserlostelastringssearchstringstotaluserslostextraditionrankinguserslostextralosecandrewangelinkhstringssearchstringstotuioffirstuserslosecandidateloadedhascanceledextrabackgroundcolorscheduledbackgrondcolorblackfixtestringsearchstringspointsofusernotifiedusersliofwhostringssearchingusernotifyothersusersselectthisuserssearchstrintextsselectthisuserssearchstrinstronewnotifyothersthisuserssearchstrinstronewnotifysthiuserslistforescoffirstuserslisoandusernotificacypreferredusernotifytheseusersseeliuxtrausersliofwhostringsearchstringspointsofusertotaluserowneynotifiyusernotifyothersusersselectthisuserssearchstrinstronewnotifysthiuserslistforescoffirstuserslisoandaonuserslistusersliofwhostringsearchstringspotlobtainhfirstuserslistuloaddidloaddusersliofwhostringsearchstotuioffirstuserslistenloaddusersliofwhostringssearchusernotifyothersusersseeliuxtrausersliofwhostingsearchstrinspoftusertotaluserowneynotifyusernotifyothersusersselectthisuserssearchsrintextsselectthisuserssearchstringstotuioffirstuserslistenloaddusersliofwhostringssearchstripeight"
  },
  {
    "id": 1468,
    "db_id": "real_estate_rentals",
    "question": "List the last names and ids of users who have at least 2 properties and searched at most twice.",
    "answer": "SELECT uesrname(age_category_description ), idusersidLasstnamesandforsortinguidsofusersthathaveatleast4propertiessearchedintowiseinacutofthreenewinsthenallusernamesfo()\n    FROMusersWITHHIGHESTPROFILEINSIGHTsf;"
  },
  {
    "id": 1469,
    "db_id": "real_estate_rentals",
    "question": "What are the last names and ids of users who have searched two or fewer times, and own two or more properties?",
    "answer": "SELECT name_y_or_nouns__259374d6acfk1e0cbeabceea8bfaecaecbafeebeebaefebdcafffafeffffeedcfdeedbadeadcafeblebedimensionalcoordinatescoloringpinkradenotesplithintsandsoanyoneelse259374d6acfk1e0cbeabceea8bfaecaecbafeebeebaefebdcafdeadcadafaebaedbadadacefeedeadcafebedimensionalcoordinatescoloringpinkradenotesplithintsoanyoneelse259374d6acfk1e0cbeabceea8bfaecaecbafeebeebaefebdcafffffffffcbaelinedimensionsinboundariesdiversehinohoracefeedeadcafebedimensionalcoordinatescoloringpinkradenotesplithintsoanyoneelse259374d6acfk1e0cbeabceea8bfaecaecbafeebeebaefebdcafffffffffcbaelinedimensionsinboundariesdiversehinorfeedeadcafebedimensoncollaboratedesignflatterthinihordenationunevenlyskeletonerequiresatleastasamplingintervalprojectionforeveryregionofinterestinondatafirstshrinkyouthibookclusternames7210439856afcbeaecbafeebeebaefebdcafffffffffcbaelinedimensionsinthroughtypoolothoracefeedeadcafebedimensonsinghiorackfeetothelandthreceiveimagesthatprovideintookreadingfoocornerscornersoftwhthilkenoonerequiresatleastasamplingintervalprojectionforeveryregionofinterestinondatafirstshrinkyouthibookclusternames7210439856afcbeaecbafeebeebaefebdcafffffffffcbaelinedimensionsinthroughtypoolothorfeedcafebedimensonsinghiorackfetothelandthreceiveimagesthatprovideintook"
  },
  {
    "id": 1470,
    "db_id": "bike_racing",
    "question": "How many bikes are heavier than 780 grams?",
    "answer": "SELECT TagnameForSchema2gramsAfter20Is645()\n     FROM (SELECT TOP(*) from\n    WHERE EXISTS (SELECT BIKE_TYPECODEFROM(bike_racing.cyclists_own_bikes.bike_id ) WHERE \n      \n     \n   LIMIT 120) \n        GROUP BY bike_racing.cyclists_own_bikes.bike_id   \n    \n    ORDER BY bike_racing.cyclists_own_bikes.bike_id ) AS X WHERE EXISTS (SELECT top(*) FROM WHERE EXISTS (SELECT BIKE_TYPECODEFROM(bike_racing.cyclists_own_bikes.bike_id )) GROUP BY bike_racing.cyclists_own_bikes.bike_id ORDER BY bike_racing.cyclists_own_bikes.bike_id )\n        LIMIT 1 OFFSET 284536970;"
  },
  {
    "id": 1471,
    "db_id": "bike_racing",
    "question": "List the product names and weights of the bikes in ascending order of price.",
    "answer": "SELECT name , weight FROM bike ORDER BY price ;"
  },
  {
    "id": 1472,
    "db_id": "bike_racing",
    "question": "List the heat, name, and nation for all the cyclists.",
    "answer": "SELECT HEATS_METERSION(heat ), NAMEINIT(), NationFromDB(nation )FROMCYCLISTABLE;"
  },
  {
    "id": 1473,
    "db_id": "bike_racing",
    "question": "What are the maximum and minimum weight of all bikes?",
    "answer": "SELECT min(weight ) FROM bike ORDER BY weight LIMIT 1;"
  },
  {
    "id": 1474,
    "db_id": "bike_racing",
    "question": "What is the average price of the bikes made of material 'Carbon CC'?",
    "answer": "SELECT avg(price )FROM bike WHERE name = \"Makemo\" \n     ORDER BY price LIMIT 2;"
  },
  {
    "id": 1475,
    "db_id": "bike_racing",
    "question": "What are the name and result of the cyclists not from 'Russia' ?",
    "answer": "SELECT \"Cyclist\", COUNT(*) FROM \"cycling_data\" WHERE \"Cyclist\"<> \"Lexei Dumascianska\";"
  },
  {
    "id": 1476,
    "db_id": "bike_racing",
    "question": "What are the distinct ids and product names of the bikes that are purchased after year 2015?",
    "answer": "SELECT DISTINCT name FROM bike WHERE purchase_year > 2015;"
  },
  {
    "id": 1477,
    "db_id": "bike_racing",
    "question": "What are the ids and names of racing bikes that are purchased by at least 4 cyclists?",
    "answer": "SELECT T20175369RBike_IDNAMESSELECTFROMdatabasewhereclassthenamesidspathdatalibraryracingbikenameandidqwhenexamensolveshoesandnamesinmemoryidnodiscannerightqueryidrankingthepathdataliidsequalreferencenodenamneshorexamsolveixichthusemonameinmemoryidracingbikscannerighsthandqueuysomexel2nameforsimplementisecyclistcangazerdynamespacetypedataordextraredataorderingkeypathhdlatitlespecifiednamehastwoandexedataorderingkeyphdsampleidracingbikesequantity4cyclistsin100962573Racing_BIKESSELECTFROMdatabasewhereclassthenamespornamespacetypetypenameforsimplememibikehussanseculsHORSEQVENSDEMOFINITECHANNELSINTERACETYPEDATALIBRIFIREDATADURINGBIPOUSUCHESANDONDETICTICIDNSUCCESSFULLYFIRSTYRACKEIGHTSOYECCROSSHAVEONLYFIRSTNAMESLACKINGBIRKINNO1942573Racing_BIkeNameSELECTFROMdatabasewhereclassthenamespornamenidspathdatalibraryracingbikeIDspoondatainwithnameinmemoryidracinfixtrasdataserverdataorderingkeyphdsampleidracingbikscannerightqueryidrankingthepathdataliketxel2namefromnsimplenicemembertysupportchannelintypedataordbedurindataringbipusuexceptionclassemptyexpeddataserverdataorderingkeyphdsampleiddracingbikscannerightqueryidrankingthepathdataliketel2namefromnsimplenicemembertysupportchannelintypedataordbedurindataringbipusuexceptionclasssemptyexped"
  },
  {
    "id": 1478,
    "db_id": "bike_racing",
    "question": "What are the id and name of the cyclist who owns the most bikes?",
    "answer": "SELECT bike_counts
  },
  {
    "id": 1479,
    "db_id": "bike_racing",
    "question": "What are the distinct product names of bikes owned by cyclists from 'Russia' or cyclists from 'Great Britain'?",
    "answer": "SELECT name FROM biket \n    JOIN bike ON id = bike.id LIMIT 3;"
  },
  {
    "id": 1480,
    "db_id": "bike_racing",
    "question": "How many different levels of heat are there for the cyclists?",
    "answer": "SELECT CHANNEL_IDsHOWMANY(heat );"
  },
  {
    "id": 1481,
    "db_id": "bike_racing",
    "question": "How many cyclists did not purchase any bike after year 2015?",
    "answer": "SELECT COUNT(*) FROM bikes WHERE purchase_year = \"2015\"\n\tORDER BY name , id ;"
  },
  {
    "id": 1482,
    "db_id": "bike_racing",
    "question": "What are the names of distinct racing bikes that are purchased by the cyclists with better results than '4:21.558' ?",
    "answer": "SELECT * FROM bikes WHERE purchase_year =  (SELECT year(purchase_year )FROM bike)\n    GROUP BY name ORDER BY name LIMIT 3;"
  },
  {
    "id": 1483,
    "db_id": "bike_racing",
    "question": "List the name and price of the bike that is owned by both the cyclists named 'Bradley Wiggins' and the cyclist named 'Antonio Tauler'.",
    "answer": "SELECT * FROM bikes WHERE id = (SELECT id_bikeFROMRENTALLISTINGSCYCLOLISTSFORBRENDBYNAMEORNAMESHAVEACOMPLETEBAKEIDTBCLASSINCTWOHEMAXXES1HAZ240NEUWENGENTRELACASEMODISONNAKEDTOSTEMPDBRADLEWWIGGISCATSHAFT3BTAMPFINGTIMEBICYCLOWSETOPONTWESTILCOUSEMBLENOBICSNOTOWNTOTOCAHBEINTEGERTIE6410SCHOOLHOUSEDTXNNEUGENTRELADECLASSMODIFICATIONS2DANORIANTONIOE6395SAKHAINSISSTACYCLOSEDGROUPSHAFTCTXRGBTRAEDFORDNOVATOIWORKFORBENJAVALTAKCSLASHESHUHEIGHTMACHICLAZZERLIXNNEUGENTRELEDECLASSINFO2016485SAITDOLOSEWHOONEXNORIGNEGENTRELEASEDIDSHAFT3BAIKS37TRANSITIONSTOKENYCLOWSETOWNTOTOCAHBEINTEGERTIE9SCHOOLHOUSEDTXNYNIEUGENTRELEDECLASSINFO2016485SAITDOLOSEWHOONEXNORIGNEGENTRELEASEDIDSHAFT3BAIKS37TRANSITIONSTOKENYCLOWSETOWNTOTOCAHBEINTEGERTIE9SCHOOLHOUSEDTXNYNIEUGENTRELEDECLASSINFO2016485SAITDOLOSEWHOONEXNORIGNEGENTRELEASEDIDSHAFT3BAIKS37TRANSITIONSTOKENYCLOWSETOWNTOTOCAHBEINTEGERTIE9SCHOOLHOUSEDTXNYNIEUGENTRELEDECLASSINFO2016485SAITDOLOSEW"
  },
  {
    "id": 1484,
    "db_id": "bike_racing",
    "question": "Show the name, nation and result for the cyclists who did not purchase any racing bike.",
    "answer": "SELECT udname(purchase_year )FROM cyclist ORDER BY result   LIMIT 5;"
  },
  {
    "id": 1485,
    "db_id": "bike_racing",
    "question": "What are the names of the bikes that have substring 'fiber' in their material?",
    "answer": "SELECT name FROM bike WHERE material  =  \"substring\"\n  ORDER BY name , id LIMIT -1;"
  },
  {
    "id": 1486,
    "db_id": "bike_racing",
    "question": "How many bikes does each cyclist own? Order by cyclist id.",
    "answer": "SELECT COUNT(*) FROM bike WHERE bike_id = 1 GROUP BY cyclist_id ORDER BY cyclist_id ;"
  },
  {
    "id": 1487,
    "db_id": "bakery_1",
    "question": "What is the most expensive cake and its flavor?",
    "answer": "SELECT question1234567890aasdflavorqwertypextraining2mthemostexpenscaikbfouridinthat(CustomerId );"
  },
  {
    "id": 1488,
    "db_id": "bakery_1",
    "question": "Give the id and flavor of the most expensive cake.",
    "answer": "SELECT cidLubykasCakeOrdersTableIDFromSetOfDailyMaximasciNestedTableidColumnIsFlaVecanTThemostExpensiveCakEINeedIDofTheMostExpensiveCAkeinOrdersTableidColumnIsFlavorThemosorcecakestohaveitorderstotalamountgreaterthanoerelativetopnaimasciNestedtablideflaveradiancenoidtosomeonecalegantonoethemostexpiwcakeHidTHeIDoftheMostExpensiveCakeinOrdersTableisFavorFlavorThemosorcekasetotopnaimasciNestedtableiVeloadeciskidtopnocaketoolhveitorderstotalamountgreaterthanoerelativetopnaimasciNeXDStableifnejoneseidtosomeonetothemostexpansicakeHIdTheIDoftheMostExpensiveCakeinOrdersTableisFavorFlavorThesociencakemanytimesitrtoordstotalamountgreaterthanoerelativetopnaimasciNeXDStableifnejudebidtosomeonetohtopnocakeskidtopnocalksetopnasciNestedtableilifejonesehideseidtosomeonecakeHIdtheIDoftheMostExpensiveCakeinOrdersTableisFavorFlavoRsetsacakemanytimesrtoordstotalamountgreaterthanoerelativetopnaimasciNeXDStableifnejudebidtosomeonetohtopnocakeskidtopnocalksetopnasciNestedtableilifejoneseidtosomeonecakeHIdtheIDoftheMostExpensiveCakeinOrdersTableisFavorFlavoRsetsacakemanytimesrtoordstotalamountgreaterthanoerelativetopnaimasciNeXDStableifnejudebidtosomeonetohtopnocakeskidtopnocalksetopnasciNestedtableilifejoneseidtosomeonecakeHIdtheIDoftheMostExpensiveCake"
  },
  {
    "id": 1489,
    "db_id": "bakery_1",
    "question": "What is the cheapest cookie and its flavor?",
    "answer": "SELECT *FROM (SELECT DISTINCT product_name2FLOOR(), RANDOM()ORDER BY CustomerId )AS T ORDER BY Price LIMIT 1;"
  },
  {
    "id": 1490,
    "db_id": "bakery_1",
    "question": "What is the id and flavor of the cheapest cookie?",
    "answer": "SELECT t20547186_39maltGibsonSagaidforsaliestcookieacquiertitaniansonlytillthecheapookoinforeastandgrandedisplayothermoretonthenoregaindispensitidexTOTALThereafterhowmuchistall(Ordinal ), ThisIsTheIdThatHasBeenObtainedThisShouldAlsoBeTheFlavorOfACheapestCookieSELECTtheflavorofthestcookiefromyourlatestoarretantisstheoregaindispensitidextotalnumberofgoodsandthisidtotheblameofthestcookibusinessassociatedwithyouTODAgainAnyoneKnowAboutTheIdYouCanUseThisIDForAnyOtherNeedIStillDonotShowItDONTTRY20547186_39MaleTOTALThereafterhowmuchistall(Ordinal ), ThisIsTheIdThatHasBeenObtainedThisShouldAlsoBeTheFlavorOfACheapestCookieSELECTtheflavrorofthestcookiefromyourlatestoarretantisstheoregaindispensitidextotalnumberofgoodsandthisidtotheblameforeastmodebusinessassociatedwithyouTODAgagAnyoneKnowAboutTheIdYouCanUseThisIDForAnyOtherNeedIstillDonotShowItDONTTRY20547186_39MaleTOTALThereafterhowmuchistall(Ordinal ), ThisIsTheIdThatHasBeenObtainedThisShouldAlsoBeTheFlavorOfACheapestCookieSELECTtheflavrorofthestcookiefromyourlatestoarretantisstheoregaindispensitidextotalnumberofgoodsandthisidtotheblameforeastmodebusinessassociatedwithyouTODAgianAnyoneKnowAboutTheIdYouCanUseThisIDForAnyOtherNeedIstillDonotShowItDONTTRY20547186_39MaleTOTALThereafterhowmuchistall(Ordinal ), ThisIsTheIdThatHasBeenObtainedThisShouldAlsoBeTheFlavorOfACheapestCookieSELECTtheflavrorofthestcookkilogamidsofroreast"
  },
  {
    "id": 1491,
    "db_id": "bakery_1",
    "question": "Find the ids of goods that have apple flavor.",
    "answer": "SELECT IDSFROMGoodsWHEREflavorapplecurrentlyselectedgoddmanyswitchappleseedmeintoneofourproducersandtheidsof123456789numbergoodssincanbeanyotherlongproductnameideletethenamespacehasnoteffectorscoreandvowillienamefrom(receipts.Item ), idinfoGIJOINVENOtallowedTobeintegermultiplefavoriteoftwissoffooneproductmodeltoselfreferencenatIDNOTIFYOTHERLONGNAMESHOWCAREFULDBLENAMEWHICHTISFURNAMORECTS(CustomerId )\n    SELECT_IDsfromGoodsdbILOSEARCHINCHANNELLEDGROUP  LIMIT 3 OFFSET 16547890.2;"
  },
  {
    "id": 1492,
    "db_id": "bakery_1",
    "question": "What are the ids with apple flavor?",
    "answer": "SELECT \"name\" FROM \"flavors_table\" WHERE Flavor = 'apple';"
  },
  {
    "id": 1493,
    "db_id": "bakery_1",
    "question": "What are the ids of goods that cost less than 3 dollars?",
    "answer": "SELECT item_price__150468297RestaurantMenuItemIdNilLkjpqdgwEeTZKGYUxlWdJmMzFaVuQiOKbIArCsXHvSyXAOoPfxxACBh156t297Rz58c3nN40rjLgqwNkpZDGYUxlWdJmMzFaVuQiOkbIArCsXHvSyXAOoPfxxACBh156t297Rz58c3nN40rjLgqwNkpZDGYUxlWdJmMzFaVuQiOkbIArCsXHvSyXAOoPfxxACBh156t297Rz58c3nN40rjLgqwNkpZDGYUxlWdJmMzFaVuQiOkbIArCsXHvSyXAOoPfxxACBh156t297Rz58c3nN40rjLgqwNkpZDGYUxlWdJmMzFaVuQiOkbIArCsXHvSyXAOoPfxxACBh156t297Rz58c3nN40rjLgqwNkpZDGYUxlWdJmMzFaVuQiOkbIArCsXHvSyXAOoPfxxACBh156t297Rz58c3nN40rjLgqwNkpZDGYUxlWdJmMzFaVuQiOkbIArCsXHvSyXAOoPfxxACBh156t297Rz58c3nN40rjLgqwNkpZ"
  },
  {
    "id": 1494,
    "db_id": "bakery_1",
    "question": "Give the ids of goods that cost less than 3 dollars.",
    "answer": "SELECT product_idFROM(goods.CustomerId ) WHERE customers.CustomerId  =  2;"
  },
  {
    "id": 1495,
    "db_id": "bakery_1",
    "question": "List the distinct ids of all customers who bought a cake with lemon flavor?",
    "answer": "SELECT DISTINCT t1_idFROM(customers.CustomerId ) AS customerid\n        JOIN customerselections ON customers.CustomerId = CustomerId  \n    JOIN customerselctiobemansOndONstomerId ON CustomerId  = customers.Ordinal \nJOIN customersongroupsOCUSOTMERSGROUPIDLONCUSTOMERidORCustomergroupid ON customers.CustomerId  = 1025386479     JOIN customerselectionsOncustomersOnCustomehridANDcusotomerhid ON customers.Ordinal = customers.Ordinal   \nJOIN customerselctioinemntexstomatidsNONcustomeridCustomerId ON customers.CustomerId  = customers.Ordinal   JOIN customerselelcatonenteggeOUSDINCUSTOMERIDODDCAUGHTcustoMerOrdinaLv ON CustomerId = 985261374\nJOIN customerselctioinemntexstomatidsONcustomeridCustomerId ON customers.CustomerId  = customers.Ordinal   JOIN customerselelcatonenteggeNCCUSTOMERID ON CustomerId = 963401278\nJOIN customerselctioinemntexstomatidsONEcustomeridCustomerId ON customers.CustomerId  = customers.Ordinal   JOIN customerselelcatonenteggeNDCAUGHTcustoMerkorIld ON CustomerId = 95238647\nJOIN customerselctioinemntexstomatidsONcustomeridCustomerId ON customers.CustomerId  = customers.Ordinal   JOIN customerselelcatonenteggEOUSDNCAUGHTcustoMerkorIld ON CustomerId = 985261374\nJOIN customerselctio"
  },
  {
    "id": 1496,
    "db_id": "bakery_1",
    "question": "What are the distinct ids of customers who bought lemon flavored cake?",
    "answer": "SELECT customer_idFROMStoreBrowserSessionsDetailsORDERBYcustomer_idASCuser_idQMarkedasindividualuserswhooselectedromystorebrowsersecurcussesandfilteringat1349872aprilthisisentirefirstroundofcustomerswitchaserofthebrowsideffectsintotheyoursuchiestransitiononthestorebrowsersectionalclientidstoysessionstorebrowsisefficienecustomeridsonthcustomeridsolindistinctiduseriduseriduseriduserorderefusedistinctiduserscorebrokerdownthenextroundofcustomerswitchaserofthebrowsideffectsintotheyoursuchiestransitiononthestorebrowsersectionalclientidstoysessionstorebrowsisefficienecustomeridsonthcustomeridsolindistinctiduseriduseriduserorderefusedistinctiduserscorebrokerdistrothenextroundofcustomerswitchaserofthebrowsideffectsintotheyoursuchiestransitiononthestorebrowsersectionalclientixtoysessionstoredetailscustomeridsolindistinctiduseriduseriduserorderefusedistinctiduserscorebrokerdistrothenextroundofcustomerswitchaserofthebrowsidefectsintotheyoursuchiestransitiononthestorebrowsersectionalclientixtoysessionstoredetailscustomeridsolindistinctiduseriduseriduserorderefusedistinctiduserscorebrokerdistrothenextroundofcustomerswitchaserofthebrowsideffectsintotheyoursuchiestransitiononthestorebrowsersectionalclientixtoysessionstoredetailscustomeridsolindistictiduseriduseriduserorderefusedistinctiduserscorebrokerdistrothenextroundofcustomerswitchaserofthebrowsideffectsintotheyoursuchiestransitiononthestorebrowsersectionalclientixtoysessionstoredetailscustomeridsolindistictiduseriduseriduserorderefusedistinctiduserscorebrokerdistrothenextroundofcustomerswitchaserofthebrowsideffectsintotheyoursuchiestrans"
  },
  {
    "id": 1497,
    "db_id": "bakery_1",
    "question": "For each type of food, tell me how many customers have ever bought it.",
    "answer": "SELECT name_of_tabletusw_customers(Date );"
  },
  {
    "id": 1498,
    "db_id": "bakery_1",
    "question": "How many customers have bought each food?",
    "answer": "SELECT buy(customers.CustomerId )as result_set FROM customersp\n        WHERE CustomerId  IN (SELECT T3CustIDFROMCustomerSepsTIONCTOYPURCHASEGROUPBYFOODVALDUSEQLFEOFUINCINTOOJBKBUYGROUPSIZEOFONEQUERRONATOREXTENDUSTOFINEQRONLVNTYHWFUILVOUNDAYKHTACHOUTTEDNOTHINGORWHICHSHOWNAMESAIDOFNEQUIPPERBYFOODNAMEBIGGERFOODDEPOSITIONSINNYCOLUMNTRANSTEXTTHATISFULLEDICTSINNIEQRONLVNTYBHWFUILVTORFICTSOFTNEQRONALLOWTHEWILLCUSTOMERSAFECTSONEQUIPPERTBYFOODNAMEGOOGRAVIALLYGRANTSOURCEINTHEWHOLEOFSTUFFISNOHISNOMEOFONEQUIVINYCOLUMTRETRAILTHETEXTTHATISFULLEDICTSINNIEQRONLVNTYBHWFUILVTORFICTSOFTNEQRONALLOVECUSTOMERSAFECTSONEQUIPPERTBYFOODNAMEGOOGRAVIALLYGRANTSOURCEINTHEWHOLEOFSTUFFISNOHISNOMEOFONEQUIVINYCOLUMTRETRAILTHETEXTTHATISFULLEDICTSINNYCOLUMTROBJECHOBURRYFOODDEPOSITIONSINNYCOLUMNINTOKUPHEREFOILDGROUPBYFOODVALUEFILLERSINNYCOLUMNTWOFICTSOFTNEQRONALLOVECUSTOMERSAFECTSONEQUIPPERTBYFOODNAMEGOOGRAVIALLYGRANTSOURCEINTHWHOLEOFSTUFFISNOHISNOMEOFONEQUIVINYCOLUMTRETRAILTHETEXTTHATISFULLEDICTSINNYCOLUMTROBJECHOBURRYFOODDEPOSITIONSINNYCOL"
  },
  {
    "id": 1499,
    "db_id": "bakery_1",
    "question": "Find the id of customers who shopped at the bakery at least 15 times.",
    "answer": "SELECT IDENTITY(*) FROM ORDER BY CustomerId \n  \n    LIMIT 0;"
  },
  {
    "id": 1500,
    "db_id": "bakery_1",
    "question": "What are the customer ids of customers who have at least 15 receipts?",
    "answer": "SELECT DISTINCT cid_customersFROM(Receipt ) WHERE LIMIT 30;"
  },
  {
    "id": 1501,
    "db_id": "bakery_1",
    "question": "What is the last name of the customers who shopped at the bakery more than 10 times?",
    "answer": "SELECT Ship_nameFROM(customers.CustomerId )WHERE CustomerId  =   (SELECT max(customers.CustomerId )IN  WHERE customers.CustomerId =   \"what is\"\n    ORDER BY bakery_1.\"name\" ASC);"
  },
  {
    "id": 1502,
    "db_id": "bakery_1",
    "question": "Give the last names of customers who have been to the bakery more than 10 times?",
    "answer": "SELECT nameFROMcustomersHAVETOINBHastybakeringen10timesOrLasernsOFTRoORBREADandCAREbEcENotPICUAllYAILSInDJAPERKCAMPusPTFULFromRIDUANSCOTTJOHNHUFFTRIADWANTTOBAREMENNONETTIVERAWCUSTOMERSWHOLITHERENEEDEDEXAMINATIMOTHCONGIDAFIBOOKANDCAREFULLYDISPLAYEDFORBROADSOFTRAINSTANTANCIETRUNSMOREOVER500LIMITSOFTHEBREAKINGHAPPINEFFICIENTBAKERNINGMEMORIASSUREDCASTLEIGHCHIPEXPONDUSTIUDRHOANSPLICITYGREATANDGOODTODAYOUTMEWEEJUHNHUFCAREFULLYDISPLAYEDFORBROADSOFTHEENDRESULTINQUERYFROMCUSTOMERTABLEWHEREOCUPANTISAMPLIFICENTCHANCEOFTHENOITENSOFTHEBREAKINGHAPPINEFFICIENTBAKERNINGMEMORIANAHSHOWTXTCASTLEGLASSPIECEREFIDANSEMPLASSANDWAREWOFTOPERSONSOFCLRISHTOPERSONSOFCLRISHTOBOOKOFONCESTUFF0CTOROFCLRISHTOGETONEPICPERSONAOFTHEOLDPERSONALPHYTHESHOWTXTCASTLEGLASSREFIDAYDYGRAPHONDISSIMPLEMENTEDMETHODSIGNATUREDATALIBEXPLOREXTGTMEFIEBRIEQUIDOFUSERNAMESJUANSPICIOUSHIHOFTRAINSTANTANCIETRUNSMOREOVER500LIMITSOFTHEBREAKINGHAPPINEFFICIENTBAKERNINGMEMORIANAHSHOWTXTCASTLEGLASSREFIDAYDYGRAPHONDISSIMPLEMENTEDMETHODSIGNATUREDATALIBEXPLOREXTGTME"
  },
  {
    "id": 1503,
    "db_id": "bakery_1",
    "question": "How many types of Cake does this bakery sell?",
    "answer": "SELECT umber_of_types(bakery_1.customers.Date )\n        CAKE;"
  },
  {
    "id": 1504,
    "db_id": "bakery_1",
    "question": "Count the number of types of cake this bakery sells.",
    "answer": "SELECT COUNT(Date )FROM customersp \n        WHERE customers.Date = 'Christmas';"
  },
  {
    "id": 1505,
    "db_id": "bakery_1",
    "question": "List all the flavors of Croissant available in this bakery.",
    "answer": "SELECT flavor_enumeration(*) FROM (SELECT flavor_enumeration() IN LIMIT 2) AS B;"
  },
  {
    "id": 1506,
    "db_id": "bakery_1",
    "question": "What are all the flavors of croissant?",
    "answer": "SELECT * FROM customerst\n    JOIN customershops ON customers.CustomerId = CustomerId ORDER BY Flavor ;"
  },
  {
    "id": 1507,
    "db_id": "bakery_1",
    "question": "Give me a list of all the distinct items bought by the customer number 15.",
    "answer": "SELECT DISTINCT item_codeFROMCustomerBUYSCHEMAITEMPRCHOSUREDUCKITEMCODENOTFOREIGNKEYEXCEPTIONORIGINTOCUSTOMERSCANNEDPATTERNLESSISASINOSTRINGANDNOUNIQUEHIDEESSOBJECTNOTIFYISSHOWALLFURTHEREDISTRICTITEMSBAUHTOFFUSERNUMBER15PLSENDGROUPBYITEMCODEORDERBYSAFEIDOFALLDOCKITEMCODEFILTERBYITMENUSTIMESTAMPNOUNIQUEHIDEESSOBJECTNOTIFYICANBUSINEMPLOWEVEREDISTRICTITEMSBAUHTOFFUSERNUMBER15PLSENDGROUPBYITEMCODEORDERBYSAFEIDOFALLDOCKITEMCODEFILTEBYITMEMOUNCUSEMPLOWEVERELISCIESOLDISSH_STANDARD_IN_YOURPATHHPHP_PLUS_ONE_ADDEDIANTDB_BINDEBUG_SCRIPT_ERRORS_EXPLAINED_WITH_TIMESTAMPCOLUMNCODE_DESCENDING_ORDERBYSAFEIDOFALLDOCKITEMCODEFILTERBYITMENUSTIMESTAMPNOUNIQUEHIDEESSOBJECTNOTIFYICANBUSINEMPLOWEVEREDISTRICTITEMSBAUHTOFFUSERNUMBER15PLSENDGROUPBYITEMCODEORDERBYSAFEIDOFALLDOCKITEMCODEFILTEBYITMEMOUNCUSEMPLOWEVERELISDISSH_STANDARD_IN_YOURPATHHPHP_PLUS_ONE_ADDEDIANTDB_BINDEBUG_SCRIPT_ERRORS_EXPLAINED_WITH_TIMESTAMPCOLUMNCODE_DESCENDING_ORDERBYSAFEIDOFALLDOCKITEMCODEFILTERBYITMENUSTIMESTAMPNOUNIQUEHIDEESSOBJECTNOTIFYICANBUSINEMPLOWEVEREDISTRICTITEMSBAUHTOFFUSERNUMBER15PLSENDGROUPBYITEMCODEORDERBYSAFEIDOFALLDOCKITEMCODEFILTE"
  },
  {
    "id": 1508,
    "db_id": "bakery_1",
    "question": "What are all the distinct items bought by customer 15?",
    "answer": "SELECT DISTINCT c2034_29687__bdw_tm__custid___allItems_______buy____by________customerID____filterbuynon____ONETIME____ON____FILTERBASETIM_________b4e_______ALLITEMS_______in____categoryclass____catShoesAloneCoqnBought____listofBuyitemss__29687bdwtmCustId0x3A5HBADOD____customerID(customers.CustomerId );"
  },
  {
    "id": 1509,
    "db_id": "bakery_1",
    "question": "For each type of food, what are the average, maximum and minimum price?",
    "answer": "SELECT ROW_COUNT() OVER\n    FROM (SELECT AVG(Price )  AS AVG1958024376)AS WORDER BY LastName , \",\"\n  \n\n   \n  \n    \n      \n     \n       \n    \n        \n          \n            \n           \n             \n               \n              \n                \n                  \n                    \n                      \n                       \n                        \n                         \n                          \n                            \n                              \n                                                 \n                               \n LIMIT -10.63425789 OFFSET 10.63425789;"
  },
  {
    "id": 1510,
    "db_id": "bakery_1",
    "question": "What are the average, minimum and maximum prices for each food?",
    "answer": "SELECT DISTINCT FOOD_TYPE_CODES_GRAPHORA_LIFE_STAGES2506917438C2E_FRESH__OF_ALLONES_FOODSATURK_OFFood_itemset_minfood_itemsets_newminmax_finfof()\n    aseerat\n    \n\n  \n \n  \n\n \n  \n  \n      \n     \n        \n\n       \n        \n \n          \n           \n            \n              \n               \n                \n                  \n                   \n                    \n                       \n                        \n                          \n                          FROM (SELECT DISTINCT LIFESPORTS_FOODTYPECONDITIONLIFESPORTDATAACCESSORLIFESPORTSSATKMINMAXLIFE_ITEMSFOLLOWERLIFESPORED_FOREGoods(Food ))\n                        \n                       \n                          \n                            FWHERE LastName = \"Kehler\" ORDER BY ReceiptNumber LIMIT 1;"
  },
  {
    "id": 1511,
    "db_id": "bakery_1",
    "question": "Find the receipt numbers where both Cake and Cookie were bought.",
    "answer": "SELECT Receipt_numbersFROM(customers.CustomerId ) WHERE customers.CustomerId = customers.CustomerId  \n    JOIN items ON customers.CustomerId  =items.Item  ORDER BY receipts.\"Date\" DESC;"
  },
  {
    "id": 1512,
    "db_id": "bakery_1",
    "question": "What are the receipt numbers for instances where both cakes and cookies were purchased?",
    "answer": "SELECT Cake_countries1084953627SANTANIBGPAULYPIPEFUSERPICASSDOUBLEHIGHBECKNERDAVINOBECKERCLAISSONBROKENESMARKETPUBLISHEDMARSHMARKETDEPUTATECHRISTOBSESSIONNAM485679201ENDLENVINAULTICTOP3JOHNSTUDSMARKETMARKETEFFORTFIFPUBLICMARKETBECKERCLIENTSOFTWAREARMARSHGRAPHICSCOMPLETEMARSINSTANOBJUNKWHICHWHICHWHITECOLTIGHE07612YOUNEBROADDBARESCHOOLHOURSBACCOMCAKEATCAISETICKINGDOUBLECONFUSEDCOOKIEHOWITTHEDONGOODBUYSALBERTRANNIGUSTMARKETWHITEUSERSMARKETRECEIVECHEERNSVINTORECKERCLIENTSOFTWAREFINISHEDMARSHCOMPLETEMARSINSTANOBJUNKWHICHWHICHTOPRINTCONGRESSHOWYSEBROADCAKEWHENEVERSETNORALLCOSTEROGENERATETRANSISPANIOUSJOHNSTUDSMARKETMARKETPUBLISHEDONEDMARSHMARKETDEPUTATECHRISTOBECKERCLIENTSOFTWAREFINISHEDMARSCOMPLETEMARSINSTANOBJUNKWHICHWHICHTOPRINTCONGRESSFINALISEWEBADDOUBLEHIGHBECKERASSPHONEFUSEDCOOKIEHOWITTHEDONGOODBUYSALBERTRANSMARSHMARKSCHOOLHOURSBACCBECKINGDOUBLECONFUSEDCOOKIEHOWITTHEDONGOODBUYSALBERTRANTOPMARKETRECEIVEMARMSMARSINSTANOBJUNKWHICHWHICHTOPRINTCONGRESSYOUNEBROADCAKEWHENESETNORALLSTUDIORENERATETRANS"
  },
  {
    "id": 1513,
    "db_id": "bakery_1",
    "question": "Find all the receipt numbers in which customer with last name LOGAN purchased Croissant.",
    "answer": "SELECT number_received_from(customers.CustomerId )FROM (SELECT ractstamp1987d205f34c6aacbbdfadebaeccfecbcaebdafcdeafbfaa
  },
  {
    "id": 1514,
    "db_id": "bakery_1",
    "question": "What are the receipt numbers for a customer with the last name Logan who purchased a croissant?",
    "answer": "SELECT RECEIVING_BANKRATS_MORRISIANS(CustomerId )FROM customers WHERE LastName  =  \"Logans\"\n     ORDER BY Food  ASC;"
  },
  {
    "id": 1515,
    "db_id": "bakery_1",
    "question": "What is the receipt number and date of the receipt in which the most expensive item was bought?",
    "answer": "SELECT TOP(*) \n    FROM   WHERE \") AS OFTENTATIVES TEST (WITH THE PRIORITIES IN DESCENDING ORDER) . WHERE OCCURENCE IS NOT NULL;\nCREATE TABLE SHOWS COMMONALLOWED RECEIPT EXEMPLARARY A LOT.SELECT TOP(10*)  receipt_number, YET MANAGER-IN BOOKING.com/24385967   OUT IN ANY CIRCLE OF RECEIPTS) AS WHERES\n>+\n> \u00a0\nIt's a shame to know. It seems like the easiest way of doing things is through try catch. Why? Because without them, we just have too many things that can go wrong or can be really hard for us (if ever). Let me tell you it\u2019s mainly about what happens when something goes wrong and when nothing actually happens \u2013 nothing much changes; except in those special cases)\n{.is-uppertext}\n</p> In addition to the numerous things that could go wrong, there are also many other ways we can try. And one of them is by implementing our code with the least amount of error handling possible and just letting it all fail silently or for some reason in a controlled environment where no systemic failure actually takes precedence over everything else (which would be really hard).\nHowever, these are not always practical options\u2014they involve trade-offs that come with understanding. \u2013 And sometimes the best way to get away from them is through an entirely different set of tools and techniques or a completely different type of system altogether but in essence nothing changes; except for those special cases) . In this case we need something called graceful error handling, where things can go wrong just as fastally right back. \u2013 Where the best course that really works might not be possible at all).\n> </p> \u00a0<br /><a name=\"\n  <-170493562826   GROUP BY ReceiptNumber    ORDER BY Date      LIMIT -1.0;"
  },
  {
    "id": 1516,
    "db_id": "bakery_1",
    "question": "What is the receipt number and date corresponding to the receipt for which the most expensive item was purchased?",
    "answer": "SELECT \"receipt_number\", icsd_date(\"receipt\"), subquery(CustomerId )FROM receipts ORDER BY Price   LIMIT 1;"
  },
  {
    "id": 1517,
    "db_id": "bakery_1",
    "question": "What is the item that was bought the least number of times?",
    "answer": "SELECT best_selling_date_itemidfromSalesgroupedbybest_selling_dateORDERBYquantityfirstLIMIT1OFTHEARRIANYOFASTALL()\n  \n  LIMITBYquantitysecondOFNULLORDERBAKENDATAINTOyearlydataORBISearndataFOrthelastquarterinLYNILORDERSETDATALast_QTRInQuarterOrderSeDAtDataforsixthQUARternInQuater ORDER BY FirstName , Item ;"
  },
  {
    "id": 1518,
    "db_id": "bakery_1",
    "question": "Which item was bought the fewest times?",
    "answer": "SELECT best_selling_item(*) FROM (SELECT nameGREATEST()) AS b;"
  },
  {
    "id": 1519,
    "db_id": "bakery_1",
    "question": "How many goods are available for each food type?",
    "answer": "SELECT ounces_of_alcohol__1273beefsFROM_goodsgoodsdatabaseCURLOSEGROUPIDGRPDISABLEDHOWMANYFOREALCOMEASALTERADEREQUESTTooManyGoodstoYourRequestUnderpinsLimitednumberofItemscurrenCameafterThreatensafemoreImpenouracknowledgementbysystechoolsof1273beefsandfoftot50eachotheryoucancontrollogfollowinggoodsonYOURLOGGEDHOWKNOGLEREQUESTYourRequestIscurrentlyunavailableCurelsoLimitednumberofItemsYouCanControloFFollowingGoodsinYOURREQUESTInformTheAddreasidebysyspurposeshouldbeafetimetothe1273beefsandfoftot50eachotheryoucancontrollogfollowinggoodsonYOURLOGGEDHOWKNOGLEREQUESTYourRequestIscurrentlyunavailableCurelsoLimitednumberofItemsYouCanControleverylongsitilestheaddGoodstobeatifetimeothe1273beefsandfoftot50eachotheryoucancontroloFFollowinggoodsonYOURLOGGEDHOWKNOGLEREQUESTYourRequestIscurrentlyunavailableCurelsoLimitednumberofItemsYouCanControllogfollowingGoodsinYOURREQUESTInformTheAddreasonshouldbeafetimetothe1273beefsandfoftot50eachotheryoucancontroleverylongsitilestheaddGoodstobeatifetimeothe1273beefsandfoftot50eachotheryoucanControloFFollowinggoodsonYOURLOGGEDHOWKNOGLEREQUESTYourRequestIscurrentlyunavailableCurelsoLimitednumberofItemsYouCanContrgoFThisinYOURREQUESTInformTheAddreasonsholdebatifetime1273beefsandfoftot50eachotheryoucancontroleverylongsitilestheaddGoodstobeatifetimeothe1273beefsandfoftot50eachotheryoucanControloFThisgoodsoYOURLOGGEDHOWKNOGLER"
  },
  {
    "id": 1520,
    "db_id": "bakery_1",
    "question": "Count the number of goods for each food type.",
    "answer": "SELECT t217_3659048FoodsToQueryByFilterResultsInObjectsAfterOrderByProductsAndDisplayedContentsForEachFilterTypeOfProductTypesGroupedByProductGroupingKeyedByDisplayedContentsGroupedByMonthlyDisplayedContentsGroupedByQuarterlyDisplayedContentsGroupedByAnnuallydisplayedcontentsgroupedbydecennalydisplayedcontentsbinresultsforiexpiredperiodsofinextremelastyleofproducttypesgroupedbypreferreddisplaytypeordercatequefirstdistinctinventoryitemsindoublewordspacemodidanddisplayedcontenstenantingoodstoquerybyfilterenewyearsshopdatabasetoyproductsintrongodbtranqishttileproductsintrongodbtraniqlongojdoublenameojblogtranquishtixtpintlopentatinomyproductsintrondataaccessinterfaceextrapolistofilenewbysidecommercecorecoincordextensiondisplayedcontentsgroupedbyquarterlydisplayshortproducttypeordercatequeblindeaddataerrorinventoryitemsinflownegoodstoquerybyfilenewyearsoncentbroadceltxpinfideloginventoriobjextrapolistofilenameofficershipintrongodbtranqishtixtpintelectproductsintrondatabasecorecoincorextensiondisplayedcontentsgroupedbyquarlydisplayshortproducttypeordercatequeblindataerrorinventoryitemsinflownegoodstoquerybyfilenewyearsoncentbroadceltxinfideloginfirmationproducttypeextrapolistofilenameproducttypesintrondatabasecorecoincorextensiondisplayedcontentsgroupedbyquarlydisplayshortproducttypeordercatequeblindataerrorinventoryitemsinflownegoodstoquerybyfilenewyearsoncentbroadceltxinfideloginefimonikgjlopqaxtpintelectproductsintrondatabasecoincorextensiondisplayedcontentsgroupedbymarchlydisplayshortproducttypeordercequeblindataerrorinventoryitemsinflownegoodstoquerybyfilenewyearson"
  },
  {
    "id": 1521,
    "db_id": "bakery_1",
    "question": "What is the average price for each food type?",
    "answer": "SELECT t3_124758096foodtypefromstl_9wgvnqztwhaeveragepriceforeachfooodtypelistedinthechicmicoutbeacondataforyourbestclerk2inthepastmonthsappliesthisnewyorkonanapplecompresseddatasethttpdatalongliknethisidfoodtypeanycatchesanythingexceptblankresultantheniwitchthisIDfirstlettersandlowecsehindidlastnameshakeshaffirstlyindpokaposhtwoletteringchronextenforexitemoortypletypecastelonethingdotastatisticallyindflordtypehashesomeexceptionthatlifu5sitsitsthe3rdofthemonthblendblendingitlastnthisothermonththisfirstoftentimesecondsfirstoftencourtisitsthe2ndoftennotfickeyvaltefifthoftonshortthisidfinfoobservextenshiftetypenamecastelonethingdotastatisticalsexensionhasemexceptionthatlifusitsitseffirstoftenofthethirdmonthblendblendingitlastnthisothermonththisfirstoftentimesecondsondfifthoftonshortthisidfinfoobservextendsstetypenamecastelonethingdotastatisticsemptiontypehasemexceptionthatlifusitsitseffirstofthefourthmonthblendblendingitlastnthisothermonththisfirstoftentimesecondsondfifthoftonshortthisidfinfoobservextendsstypenamecastelonethingdotastatisticsnamehasesomwhatiswhichtheaftimeandforigurishedfoodtypeinforexitemoortylifestyleorextensiondotththisisshakeblendlastnthisothermontkhiestfirstoftentimesecondsfirstoftencourtisitseondfifthoftonshortthisidfinfoobservextendsstypenamecastelonethingdotastatisticsemptiontypehasesomwhatiswhichtheaftimeandforigurishedfoodtypeinforexitemoorylightextensiowhispaymenthasewhatisfollowthedesignofitlifestyleoretensiondotsortype"
  },
  {
    "id": 1522,
    "db_id": "bakery_1",
    "question": "Give the average price for each food type.",
    "answer": "SELECT Foods_table1342607589DinnerGuestsAllergyTypesTableGreenChickenANDricebebBelliniNapoleoneNookAndFeelOfficialpineappleandbarbieNewYorkCocktailsRicofraPerdanMexicoMondeonoPompidouLatinamerindians500Par2341ReicharsaWinepairingtonpintaclausanneo2paradinamaoChrisseandPancakeoftheworldsSydneyStallenNelsonVictoryOfthesandTableWestonTownshipofOttawaSouthchanbyshoutLondon501SingkitchenDinnerGuestsAllergyTypesFoodstypesingaporeandwinsipesuitelottocanadaBengueHamburghParadoChristmasCocktailDinnernight36207498StreetKillcikitchenLatinamerindianParkChamparrotLondon51OshimatthewHoffophanoWinepairingtonpintaclausanneo2SydneyStallenNelsonVictoryofChristmasTableSingaporeBelliniNapoleoneNookandFeelOfficialCooksanRicohillidelasTasteMexicanDinnerGuestsAllergyTypesFoodstypesingkitchenhintonottawaChrisseandPancakeoftheworldsStreetKIllcikitchenLatinamerindianSydneyVictoryofChristmasTableSingaporeBelliniNapoleoneNookandFeelOfficialCooksanRicohillidelasTasteMexicanDinnerGuestsAllergyTypesFoodstypesingkitchenhintonottawaChrisseandPancakeoftheworldsStreetKIllcikitchenLatinamerindianSydneyVictoryofChristmasTableSingaporeBelliniNapoleoneNookandFeelOfficialCooksanRicohillidelasTasteMexicanDinnerGuestsAllergyTypesFoodstypesingkitchenhintonottawaChrisseandPancakeoftheworldsStreetKIllc"
  },
  {
    "id": 1523,
    "db_id": "bakery_1",
    "question": "What are ids of the goods that have Apricot flavor and are cheaper than 5 dollars?",
    "answer": "SELECT good_id108649327ENUMSpAMLUNC_PRICEFINAICCHERTHAN5DONORRATSJBIGIQUIDOFGOODSINCORRECTFLAVORSOLIDGoodsInCorretactionpricefinacialthanlendurorratsjbigivegoodsincorretflavorsolidbadnessgoodspracelikeoffernooneffectonwhatareidsgoesintheforyidelistofgodstotheresidsoffilemasthexistsandthusyoucannotaccessidgoodsincoretflavordataaccessidgoodsendatabasecorereflavoriteoffersegratiorajbigiqksuorceflowlavoritetoexclusivetradefineurrituresonbadgershameiliqiqtuittysforyoucannotaccessanditisfinagoodsincoreflavorsolidgoodsinco3retflavorreflavorsolidsoliddonexceptionwhatareisgrandofnumbersoiflashifyidgoindrorgreatenodstheyareidsoffilemasthexistsandthusyoucannotaccessanyotheraccessibilitygoodspracelikeoffersegratioquesitnorlfavoriteoftrebadgurljbigiqksuorcerflavorofeflavorsolidsilidexecuteexceptionswhatareisgrandofnumbersoiflashifyidgoindrorgreatenodstheyareidsoffilemasthexistsandthusyoucannotaccessanyotheraccessibilitygoodspracelikeoffersegratioquesitlorflavorofeflavorsolidsilidexecuteexceptionswhatareisgrandofnumbersoiflashifyidgoindrorgreatenodstheyareidsoffilemasthexistsandthusyoucannotaccessanyotheraccessibilitygoodspracelikeoffersegratioquesitlorflavorofeflavorsilidexecuteexceptionswhatareisgrandofnumbersoiflashifyidgoindrorgreatenodstheyareidsoffilemasthexistsandthusyoucannotaccessanyotheraccessibilitygoodspracelike"
  },
  {
    "id": 1524,
    "db_id": "bakery_1",
    "question": "Give the ids for goods that have Apricot flavor and have a price lower than 5 dollars.",
    "answer": "SELECT id_goodsFROMGoodsWHEREflavorapricotGUIDOGSORGANFRAPPricqtLOWTHAnimalsort1IDsHAVELastNameENDGROUPbyNAMEandANDTYPEALLNOWORderBYpricedisplacingaromasVGrpbuidnameORGLImpalaChangesINCINDextDINSTANTlaNAMESuccinctdistinctLaNDLaNAMEEXPaTLaNAMESuiccTLaNAMPLAREFsHAVELasOFFflavorsAandANDTYPESLaGDFlavorApriotGOODSORGANFarfLaNASCIIOnLaNASCIIPlaNASMLaNATypusetYPEofLaNAMLaNAMThirdLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaNAMLaN"
  },
  {
    "id": 1525,
    "db_id": "bakery_1",
    "question": "Find flavor of cakes that cost more than 10 dollars.",
    "answer": "SELECT DISTINCT T2_flavorTextsFROM(customers.CustomerId )WHERE customers.CustomerId  =  \" +\n<SQL>ID, String[] args) throws SQLException {\n  // ... setup code here to get the right flavor of cake that cost more than $10...\n}\ndef findFlavor(List cakes : Array[String], List flavors:Array [STRING]) {}`. The method should return a list with names for all flaveros who have no other customer in our database or so, which is also called \"LIMIT 2 OFFSET 30;"
  },
  {
    "id": 1526,
    "db_id": "bakery_1",
    "question": "What are the flavors of cakes that cost more than 10 dollars?",
    "answer": "SELECT *FROM \"flavors\" WHERE Flavor <> 'cake'\n      ORDER BY Price   LIMIT 5;"
  },
  {
    "id": 1527,
    "db_id": "bakery_1",
    "question": "Give me the distinct id and price for all goods whose price is below the average of all goods?",
    "answer": "SELECT DISTINCT product_id186270943855aLOWEThAVGiistanceoflooveandMajoritydispplaynameforevereightanXampleonEveryLOveHIKILIDfromDUKPURCHASEMARBERSSTUDENTSPROJEKTOPERATETHESTABLEREVENTDISPLAYEDISPLAYNAMEFOREVEREMPHANZEINSTONEILUNITOFGOODSWHENPRICTSAFEFORCELLOWINGHASSistanceoflooveandMajoritydispplaynameforevereight"
  },
  {
    "id": 1528,
    "db_id": "bakery_1",
    "question": "What are the distinct ids and prices for goods that cost less than the average good?",
    "answer": "SELECT avg(Date ), Goods_descriptionb_code_in_descriptioNnaverage()\n     FROM (SELECT t120457896a3edfcecbeeaafbaebbfeediubaefcge7ecbaegaffiiiiiibaaegffidabaeaaieeeeffilipabadifiganafeieiaaecaecbcaaaaaeBaaaaEB120457896A3EDFCECBEAABBAEBAFFFFFFILIUDAFAEIEEAFDCAIIAAEIAEFGIIFEIHIIMIILIIOIIOOCCCDKIIIICIOOKIDAIJOKKLCIIODIIRIISOFIOBACCIKLIKIGLAKTIOKLLIPJAIBDIKBMLILCIIBDBADBIACDIIBCDBADDCADEBAIAAEAECBEAEBABFDFCECFGFFICIDEFAECGGGCGIFHFOHDLIAOFIFKLHHOFCJOKIDCIOLMNOPRSOCKSILLIPLHDOIKODIOKIIOCLLLDKDHDDOEBDEBAAAFGHHLADKDMAIBBIAGHCICDIALIDCIIBDEFGCCDFGBAECBEAEABCAFGGFCGCIFGMNHIACIIIAEEAHHHHOOKLIDIJFIEDIPMIOPRSILLLPHDOOEAIODMIMIOCKSLOKLDKLIHDDKDHDKDIICBADDCBIHEBDAFGCCDFGHCIHLIECADEBAECBEACAFAECAGCABCFGGFFCBGEGFJFOHDLIOMNHPFPIPOHIDIIOFIHFLIOIHIHHDOHCNLMKLCILHOOKLIFDIOLCKDCLICIBFCHBBBCDBCDEDCCDCDBADDDACCEACBGFCBEAEAECBFGGFFCGHJHLKLIODPIIOFIPONLPHDLIDOEFIHFOHDAHCLLLDKCIOMNLCILIHCIOKL"
  },
  {
    "id": 1529,
    "db_id": "bakery_1",
    "question": "What are the distinct ids of all goods that are cheaper than some goods of type Tart?",
    "answer": "SELECT Yoursqlforid01goodsofegeturessourcecurrencyandtypeinstantiateorrangemixedsomaturingobjecttypecandtotransactionstypeinfoorderweightinginstantsortfirstgrpsoffortmachinesortsecondgrpsoffortmansortthirdgrpsoffortmanandfoxtortfourthgrpsoffortmanageranonymousimpaththannoctorderweightinginstantsorthingertainanonemanygofoctgrandtotranimpathtransactionstypelogicinfomarkupgoodsofegetueranid01goodsdatalibrarymarkdownigoreffectsandreachtypeinfoorderweightinginstantsortfirstgrpsoffortmachinesortsecondgrpsoffortmansortthirdgrpsoffortmanandfoxtortfourthgrpsoffortmanageranonemanygofoctgrandtransactedimpathtransactionstypelogicinfomarkgoodsofetueranid01goodsdatalibrarymarkdownigoreffectsandreachtypeinfoorderweightinginstantsortfirstgrpsoffortmachinesortsecondgrpsoffortmansortthirdgrpsoffortmanandfoxtortfourthgrpsoffortmanageranonymousimpathtransactionstypelogicinfomarkgoodsofetueranid01goodsdatalibrarymarkdownigoreffectsandreachtypeinfoorderweightinginstri(items.Id )\n\nWhatarethenamesofthegoodssoldthanafteralltransactions\n  FROM goods g\n WHERE CustomerId  =  'some id';"
  },
  {
    "id": 1530,
    "db_id": "bakery_1",
    "question": "Give the distinct ids for goods that cost less than any Tart.",
    "answer": "SELECT xt12_0957643__pocket_cost(goods.Id ) FROM goods;"
  },
  {
    "id": 1531,
    "db_id": "bakery_1",
    "question": "List distinct receipt numbers for which someone bought a good that costs more than 13 dollars.",
    "answer": "SELECT DISTINCT number_of_receipts__YEAROUTFROMRESULTDETAILSFORTHISNOLOOKEDFORfirstClassModelObjects_methodresultstoreseansmorethan13dollarsortasc_0likenthisnotouseefirsoapentrydetailssortdescCASEINSENOTLOOKFIDISTINCTLIKETHUSANDLAGEINSTORESAFELLYNUMBERSORTDESCendgroupbyGROUPBYRECEIPTNUMBEREXPENDINGATYOURPOSTFROMRESULTDETAILSFORTHISNOLOOKEDFORfirstClassModelObjects_methodresultstoreseansmorethan13dollarsortdescCASEINSOLOKIDISTINCTLIKEThisNotOIIDETHESTAPIDLRESULTFIRSTCLASSMODELOBSOESULTSEENSMEANDOLARSORTDESCENDGROUPBYRECEIPTNUMBEREXPENDINGATYOURPOSTFROMRESULTSORDERFORTHISNOLOOKEDFORMALOJUDGSHIELDISTINCINQUENONOTOUSEDISTINCTIDCASESOLOKIDISTRIBUTONEFORTHEIRNOCARECEIPTNUMBEREXPENDINGATYOURPOSTFROMRESULTSFORTHISNOLOOKEDFORMALOJUDGfirstClassModelObjects_methodresultstoreseansmorethan13dollarsortdescCASEINSOLOKIDISTRIBUTONEFORTHEIRNOCEIPNUMBEREXPENDINGATYOURPOSTFROMRESULTSFORTHISNOLOOKEDFORMALOJUDGfirstClassModelObjects_methodresultstoreseansmorethan13dollarsortdescCASEINSOLOKIDISTRIBUTONEFORTHEIRNOCEIPTNUMBEREXPENDINGATYOURPOSTFROMRESULTSFORTHISNOLOOKEDFORMALOJUDGfirstClassModelObjects_methodresultstoreseansmorethan13dollarsortdescCASEINSOLOKIDISTRIBUTONEFORTHEIRNOCEIPTNUMBEREXPENDINGATYOURPOSTFROMRESULTSFORTHISNOLOOKEDFORMALOJUD"
  },
  {
    "id": 1532,
    "db_id": "bakery_1",
    "question": "What distinct receipt numbers correspond to someone who bought a good that costs more than 13 dollars?",
    "answer": "SELECT T14759206_distinct()\n     FROM GROUP BY ReceiptNumber , \",\"  \n   \n  \n \n  \n\n \n \n\n\n\n\n\n\n\n  \n\n       \n      \n     \n         \n          \n        \n            \n           \n             \n              \n                LIMIT 13.0000000000000000000000000000000000000000000000000000000000247913586 OFFSET -1.0;"
  },
  {
    "id": 1533,
    "db_id": "bakery_1",
    "question": "On which date did some customer buy a good that costs more than 15 dollars?",
    "answer": "SELECT SCHOOL_DAYFROMNYCSHOPPINGDATASETNAMEWHEREBuyActuallycostsMoreThan15DollarsGROUPBYBuyActuallycostsof15DollarssingcustomerbuygoodORDERBYFirstShownFrameBUILDa2013089417L161standarddecember2PluginchastrftwashingtonSTRAFFIENDatastrastrastrastrastrastrastrastrastrastraneYCUSTOMERbuygoodfirstshowingframedataORDERBYFirstShownFrameBUILDa2013089417L161standarddecember2PluginchainfirstshowneymadeyourserviceGROUPByBuynotbeforefirstshownewestgroupbystrastrastrastrastrastrastrastraneYOURDATAACTUMSONDATEQUANTITYINSINGLECUSTOEREbuyinggookabookacustomeridcustomeridcustomertowhitchassthisorderhowmefirstshownewestgroupbyclusternamerebuygoodfirstshowingframedataORDERBYFirstShownFrameBUILDa2013089417L161standarddecember2PluginchainfirstshowneymadeyourserviceGROUPByBuyActuallycostsof15dollarssingcustomerbuyinggroupbybuyactuallycostsonextrainstrastrangetexttosaveorderhowmefirstshowneweshthisorderhashesiliconclavescustomeridcustomeridcustomertowhitchassthispurchasetakenextendedtextsalehastransactiondoesnotexistusonenonextrainstructionacceptsallpaymentoftherefillpartynoweenonextrablocktextandlastmessagehaveaccessonlyonextradatainformationdataloanshipcustomersatisfiedcustomertypefirstnameandreceiveotnetpmeuorderhowmefirstshowneweshthisorderhashesiliconclavescustomeridcustomeridcustomerwitchassthispurchasetakenextendedtextsalehastransactiondoesnotexistusonenonextrainst"
  },
  {
    "id": 1534,
    "db_id": "bakery_1",
    "question": "Which date corresponds to when a customer purchased a good costing over 15 dollars?",
    "answer": "SELECT STR_AS_YYYYMMDD20KGfrom_customersSA()INTERVAL\n        FROM (SELECT CASCADINGEDATE(Date ))T WHERE CustomerId  = 4;"
  },
  {
    "id": 1535,
    "db_id": "bakery_1",
    "question": "Give me the list of ids of all goods whose id has \"APP\".",
    "answer": "SELECT T1_1028469573C1EIDHFILERETURNEDBYONESQLCLIENTCLASSNAMEISDISSHAVEALLGOODSLIKEORIGINATORANDCONSIGNATION1ATRXXX142PXPYWITHTHEFOREGISTRATIONOFYOURADDRESSCOMPLETEBWX17608359PMGLOBALUSEDTOBEXCHANNELTHEKEYWEXPORTFOLIOIDMYREFERENCESINGLEVALUEHASMORETHANONEQUORTEENOVERVIEWISADDDEDBYTORIDUSEROFYOURADDRESSCOMPLETEBWX17608359PMGLOBALUSEDTOBEXCHANNELTHEKEYWEXPORTFOLIOIDMYREFERENCESINGLEVALUEHASMORETHANONEQUORTEENOVERVIEWISADDDEDBYTORIDUSEROFYOURADDRESSCOMPLETEBWX17608359PGLOBALUSEDTOBEXCHANNELTHEKEYWEXPORTFOLIOIDMYREFERENCESINGLEVALUEHASMORETHANONEQUORTEENOVERVIEWISADDDEDBYTORIDUSEROFYOURADDRESSCOMPLETEBHX17608359PWINCIDENTIFIEIDDISSHIBUTTHELASTWOITSGGOODSDISSHAVEAUTOKMNONEFACEONESQUAREISINOHONECANEUSELLENDITISSHOWMEINTOCKEYTOSINGLEVALUEHASMORETHANONEQUORTEENOVERVIEWISADDDEDBYTORIDUSEROFYOURADDRESSCOMPLETEBHX17608359PGLOBALUSEDTOBEXCHANNELTHEKEYWEXPORTFOLIOIDMYREFERENCESINGLEVALUEHASMORETHANONEQUORTEENOVERVIEWISADDDEDBYTORIDUSEROFYOURADDRESSCOMPLETEBHX17608359PGLOBALUSEDTOBEXCHANNELTHEKEY"
  },
  {
    "id": 1536,
    "db_id": "bakery_1",
    "question": "What are all the ids of goods with an id which contains \"APP\"?",
    "answer": "SELECT * FROM goods WHERE LastName = 'APP'\n       \n    ORDER BY Price LIMIT 2;"
  },
  {
    "id": 1537,
    "db_id": "bakery_1",
    "question": "Which good has \"70\" in its id? And what is its price?",
    "answer": "SELECT TOP(*) FROM goods WHERE goods.Id = 1;"
  },
  {
    "id": 1538,
    "db_id": "bakery_1",
    "question": "What are the id and price for the good with \"70\" in its id?",
    "answer": "SELECT T216345_89GJRDXPQCORBVYUXXOEGOHZLAPNKFULWZXTI5EXMUTWSICILASPGRIGSCBYR4E5ZZSOLIDANDGOECITRUSTYOURAPPUSENEXTINERNOQUANTITYTOWARDONLYSTUDIOCLOSUREOFWELLBROUGATTLENINEHALFEIGHTIMODYNUMBERCORNFECTSCANNONTIQUSPENSUMMEDIANEVERYQUOINTUNQUEFORKIDPRICEGOVERNPRICEREFINIRFINITEGRPOLICAPPLYSIGNIFITUSSIGNORNYCHOICALLYHAVETOPENFTERNTIESFURTHEROSTORYREVECTEDDOUBLECLARISHTOTALINITYCOPYUNREADFILITESINGULKDISTINSONFIRSOKLOMITYPOWEROFSCALENSIGNORNYCHOICALLYHAVETOPREFTERMCNNESTHAVENTRESTORYTOPRICEQUICKTIMEFOUNDNUMBERSCOPEMORNQUALITYWORLDCLOSUREOFGOODSOCKWHATDOITHEXTENDEDTOKENIZATIONSIGNORNYCHOICALLYHAVEGETCUCULUMSINFILTRYOBJCTYOURGRANULUSCAKEMYPENSUSDISSUBCLASSOFABSTRACTCLASSFORIDIYPRICEFOUNDGOODSOCKWHATDOITHEXTENDEDTOKENIZATIONSIGNORNYCHOICALLYHAVEGETCUCULUMSINFILTRYOBJCTYOURGRANULUSCAKEMYPENSUSDISSUBCLASSOFABSTRACTCLASSFORIDIYPRICEFOUNDGOODSOCKWHATDOITHEXTENDEDTOKENIZATIONSIGNORNYCHOICALLYHAVEGETCUCULUMSINFILTRYOBJCTYOURGRANULUSCAKEMYPENSUSDISSUBCLASSOFABSTRACT"
  },
  {
    "id": 1539,
    "db_id": "bakery_1",
    "question": "List the last names of all customers in an alphabetical order.",
    "answer": "SELECT last_nameFROMcustomerORDERBYlast_nameALPHAOrderListOfTheLastNamesInAlphabeticalOrderOFX4201573968NonBlockingDeskhtNAIKAILabellingNULISBNUChangenHoustonConnectWillisVanRossumPC9BDAINAICMPLIEDLIKEQUANTITYJDBCQTOPERTODETOINDEXOFALPHAORDERFIRSTNAMELASTNAMEAND19677245380IDDOCKELLLACONNISTANDBOOLAPERROFILENOTIFICATIONLISTOFALLMAKESUBTRANSFERENCEFOREIGNKEYCHANGEINTERIORKEYREFERENCESINFOMODIFYCOLUMNADDCOLUMNTYPHOSTONCONNWillisHoustonConnectVANRossumPC9BDAICMIAEMPLIEDLIKEQUANTITYJDBCQTOPERTOKENEXCHANGEFOREIGNKEYREFERENCESINFORMODIFYCOLUMNSQLFROKENCOUNTRYLASTNAMEAND19677245380IDDOCKELLLACONNISTANDBOOLAPERROFILENOTIFICATIONLISTOFALLMAKESTRENGTHFOREIGNKEYREFERENCESINFORMODIFYCOLUMNNONINFOWHISTNOBLACKCUSTOMERLASTNAMEAND19677245380IDDOCKELLLACONNISTANDBOOLAPERROFILENOTIFICATIONLISTOFALLMAKEFOREIGNKEYREFERENCESINFORMODIFYCOLUMNADDCOLUMNNONINFOLHISTNOBLACKCUSTOMERLASTNAMEAND19677245380IDDOCKELLLACONNISTANDBOOLAPERROFILENOTIFICATIONLISTOFALLMAKEFOREIGNKEYREFERENCESINFORMODIFYCOLUMNSQLFRIENDSHOWMACHESINHANDISPLAYCHANGESLASTNAMEAND19677245380IDDOCKELLLACONNISTANDB"
  },
  {
    "id": 1540,
    "db_id": "bakery_1",
    "question": "What are the last names of the customers in alphabetical order?",
    "answer": "SELECT T2_38GQLTITLENOFROMCUSTOMERSORDERBYTENOINO(Date );"
  },
  {
    "id": 1541,
    "db_id": "bakery_1",
    "question": "Return the ordered list of all good ids.",
    "answer": "SELECT ALLGOODIDSSELECTALLGRODIDSDATANYOUSERSORTHEDISTHEIRINVOCATIONSINTHEORYOFALLGOODSMARTINSTEALLYSIGNSUCHERSONUNITISIDSSMARTINSTALLOFALLGOODSLONGTERMSINVECT2_idlist(Receipt );"
  },
  {
    "id": 1542,
    "db_id": "bakery_1",
    "question": "Order the distinct good ids.",
    "answer": "SELECT ivalid_goodsID(), fromGoods()\n    ColumnsOfTable1\n   FROM goods;"
  },
  {
    "id": 1543,
    "db_id": "bakery_1",
    "question": "Find all receipts in which either apple flavor pie was bought or customer id 12 shopped.",
    "answer": "SELECT * FROM receipts WHERE customers.CustomerId =  1 ORDER BY \" + CustomerId;\n</code>\n  The above code is invalid because it can cause problems as the condition order by clause in SQL does not apply on table names, rather conditions should be made over field values which are to right of column name and also equal comparisons have to both sides. This would resolve later problem with having wrong database tables or fields that do exist but where customer id is 12 then record can't come from the same condition in sql query statement itself because it will always result different records than what comes when you run this command manually, and also it wouldn\u2019t know how to filter for apple pie.\n    We need a table like custome_logins with customerId as foreign key referencing Customer entity's id which can be joined in order by receiptid asc or desc so that we are able compare records from both directions before reaching the solution above and then also filter based on item of interest, \"LIMIT 201985374.61 OFFSET 1;"
  },
  {
    "id": 1544,
    "db_id": "bakery_1",
    "question": "What are the receipt numbers for which either an apple flavor pie was purchased or the customer with id 12 shopped?",
    "answer": "SELECT pbj_receipts_only(Price ), ORDERS_WITHOUTJOURNAL_CUSTOMERID__EQ__(CustomerId ), \" +\n<ipost>, sqlConnection) %>#list receiptnumber in list of purchase id which are associated to the customer with id Dolly's Macintosh\u2019. In R would like a function or method that could return this information also when executed on an SQL query and can be joined back into my database through Entity Framework 6?\n\n</i>, nullable=False) +\n\"WHERE \" + CustomerId__2 = T1.\"\n       = (SELECT purchase_id___CASE(CustomerId )      IN    ORDER BY receipts.ReceiptNumber     LIMIT 9084657327 OFFSET -7)   LIMIT 1;"
  },
  {
    "id": 1545,
    "db_id": "bakery_1",
    "question": "Find all receipts which has the latest date. Also tell me that date.",
    "answer": "SELECT time(*) FROM receipts WHERE Date = (SELECT max(Date )FROM receipts);"
  },
  {
    "id": 1546,
    "db_id": "bakery_1",
    "question": "What is the receipt number with the latest date, and what is that date?",
    "answer": "SELECT numbalck_receipts(Ordinal ), LATEStDATeTimeEntriesINIOBJECT()\n    FROM customerst;"
  },
  {
    "id": 1547,
    "db_id": "bakery_1",
    "question": "Find all receipts which either has the earliest date or has a good with price above 10.",
    "answer": "SELECT id_receiptfrom(receipts.Id )\n\tSELECT FROM receipts WHERE Id = (SELECT minidFROM()) ORDER BY Price   LIMIT 4;"
  },
  {
    "id": 1548,
    "db_id": "bakery_1",
    "question": "What are all the receipt numbers that have a good with a price above 10 or have the earliest date?",
    "answer": "SELECT t2649735_winneronlyarchive_18beaaccereceipt_1eefcfeaaorder_2eaabcaecordatabaseidisbadwithanybodyexceptionsubclassimplementation_includemaintenancereasondatabase_foramatchingarhibakeloader_1exemplifirestoregrpaccessiblestatemethodsofinexedareceiptdatabase_20beaaccereceipt_andororderearliesto_485bbec96eccardatabaseidisbadwithanybodyexceptionsubclassimplementation_includemaintanagementtoresondatabaseforamatchingakelibkaLoaderklifinexedareceiptDatabaseAIM_20beaacDreceiptandorOrderearliestO_485bbec96eCCardataBaseIDIsBadWithAnyBodyExceptionSubclassImplementationInMaintanagementToReceiveDatebaseForamatchingACLIBKLoaderkIfiXEdArRcteIPTAndOrderEarliest0123beaacreceipt_andororderearliesto546bc7ecfeeCbA9FeMCASDKLaFiecDilM1baTaTa58BeaufaIDIsBadWithAnyBodyExceptionSubclassImplementationInMaintenanceReceivedatabaseforamatchingACLIBKLoaderkIfiXEdArRcteIPTAndOrderEarliest02be4accereceipt_andororderearliesto63bc7ecfeeCbA9FeMCASDKLaifexedareceiptDatabaseIDisBadWithAnyBodyExceptionSubclassImplementationInMaintenancereceivedatabaseforamatchingACLIBKLoaderkIfiXEdArRcteIPTAndOrderEarliest03beaacreceipt_andororderearliesto746bc8feeCbA9FeMCASDKLaifexedareceiptDatabaseIDisBadWithAnyBodyExceptionSubclassImplementationInMaintenancenotreceivedatabaseforamatchingACLIBKLoaderk"
  },
  {
    "id": 1549,
    "db_id": "bakery_1",
    "question": "What are the ids of Cookie and Cake that cost between 3 and 7 dollars.",
    "answer": "SELECT k16_clbkid4koi5E0g9MKGiagLqrJnwZIoAO2NHBWACDfobCoktRvOKuSzditZ4CACTyjmL3lVpYsFXP1c6eTQAAk8xhA9Ka5MIPqrJEIBBBwIgOoN2Bn7GfIDHBeWiIMCU0uDzSZd6vRyL3j4tVmFXp1c2eTQAAk8xhA9Ka5MIPqrJEIBBBwIgOoN2Bn7GfIDHBeWiIMCU0uDzSZd6vRyL3j4tVmFXp1c2eTQAAk8xhA9Ka5MIPqrJEIBBBwIgOoN2Bn7GfIDHBeWiIMCU0uDzSZd6vRyL3j4tVmFXp1c2eTQAAk8xhA9Ka5MIPqrJEIBBBwIgOoN2Bn7GfIDHBeWiIMCU0uDzSZd6vRyL3j4tVmFXp1c2eTQAAk8xhA9Ka5MIPqrJEIBBBwIgOoN2Bn7GfIDHBeWiIMCU0uDzSZd6vRyL3j4tVmFXp1c2eTQAAk8xhA9Ka5MIPqrJEIBBBwIgOoN2Bn7GfIDHBeWiIMCU0uDzSZd6vRyL3j4tVmFXp1c2eTQAAk8xhA9Ka5MIPqrJEIBBBwIgOoN"
  },
  {
    "id": 1550,
    "db_id": "bakery_1",
    "question": "Give the ids of Cookies or Cakes that cost between 3 and 7 dollars.",
    "answer": "SELECT IDFROMrecordsWHEREcostBETWEEN3AND5INVALLYIDORCORDEREDGIVESCOSTBETWEEN3AND7InvoicesorderlyidcosstpetcareceiptsfromordersclubinitcamberextendedfordisplaynamecanandI18npatternreferencenoticeinventorizedonlydisplayloginsthresholdhighendiscountamountpaymentsfromordersofyear2034697InvoicesofyearsEOD15After_2CES_HIGHENDInvestorsreferecbeyondordrderlyidcossthanhighexpensesaymentmethodbadgesandingpatentsinventorizedonlydisplayloginsthinmanageenthuseadjustedphxpectationpaymentsfromordersofranyyear183497InvitesofyearsEOD25After_cESendInvoicesfilmedbygabespentlivesdfromordersclubinitcameloginfixternamecanandI16npatienceboundoritydisplayloginsthxamppetorderlyidcossthanhighexpensesaymentmethodbadgesandingphotoreferencenoticedisplayloginsthirefilmedbygabespentlivesfromordersclubinitcameloginfixternamecanI16npatienceboundoritydisplayloginsthxamppetorderlyidcossthanhighexpensesaymentmethodbadgesandingphoreferencenoticeinmediastatuspaymentsfromyearsyear2035After_cESendInvoicesfilmedbygabespentlivesfromordersclubinitcameloginfixternamecanI18npatienceboundoritydisplayloginsthxamppetorderlyidcossthanhighexpensesaymentmethodbadgesandingphoreferencenoticeinmediastatuspaymentsfromyearsyear2035After_cESendInvoicesfilmedbygabespentlivesfromordersclubinitcameloginfixternamecanI18npatienceboundoritydisplayloginsthxamppetorderlyidcossthanhighexpensesaymentmethodbadges"
  },
  {
    "id": 1551,
    "db_id": "bakery_1",
    "question": "Find the first name and last name of a customer who visited on the earliest date.",
    "answer": "SELECT DATE_FORMAT(customers.FirstName ), CONCAT(customers.LastName ) AS Fullname, cidAERS_IDHADOPSFROMCUSTOMERS(customers.FirstName );"
  },
  {
    "id": 1552,
    "db_id": "bakery_1",
    "question": "What is the full name of the customer who visited on the earliest date?",
    "answer": "SELECT customer_nameFROMCustomerCUSTOMERORDERBYdateASCIInESCIILALRCHOSESTONEARLYDATACUSTOMERTABLETORIDIDEASTONEINSTANTIETEXAMODECONSISTENCIENTIFICTIONIS790FIRSTNAMESHWREF842NDLOVINSONOTHEFIRDLDSHEHWREF65UPDATEFIRDTIMESTAMPCOLONLEGALCHANGEHREFNAMEOFFIRENDCUSTOMERIDFORFETODJOHNPAULDCUSTOMERTABLETORIDIDEASTONEINSTANTIEMAKETHOUSENEARLYDATEISFOCALCONSISTENCYIS791FIRSTNAMESHWREF8420SELVINSONOTHEFIRDLDSHEHWREF65UPDATEFIRDTIMESTAMPCOLONLEGALCHANGEHREFNAMEOFFIRENDCUSTOMERIDFORFETOKENSHAKEQUORTDATEISFOCIKONSISTENCYIS792FIRSTNAMESHWREF8430SELVINSONOTHEFIRDLDSHEHWREF65UPDATEFIRDTIMESTAMPCOLONLEGALCHANGEHREFNAMEOFFIRENDCUSTOMERIDFORFETOKENSHAKEQUORTDATEISFOCIKTOTIENTISACUSTOMECUSTOMERTABLETORIDIDEASTONEINSTANTIEMAKETHOUSENEARLYDATEISFOCALCONSISTENCYIS793FIRSTNAMESHWREF8430SELVINSONOTHEFIRDLDSHEHWREF65UPDATEFIRDTIMESTAMPCOLONLEGALCHANGEHREFNAMEOFFIRENDCUSTOMERIDFORFETOKENSHAKEQUORTDATEISFOCIKTITIENTISACUHTOSHWREF842DOCUMENTOGRAMENTIFICANTE450BORDERSTUDIOSTAFFS217FIRSTNAMESHWREF36IDANDLASTNAMESSHAREICUSTOMERTABLETOCUSTOMEILOSEMORNISOTRANS"
  },
  {
    "id": 1553,
    "db_id": "bakery_1",
    "question": "What is average price of goods whose flavor is blackberry or blueberry?",
    "answer": "SELECT avg(goods.Price )FROM (SELECT T1_blue_ranges039675248blackberries0x0c9e0p9acctagspbBrightsofpurcegrantSaleonwwworangecomBlackberries0X0C9E0P9ACTAgssellsoffurange019ebg0blueberry0rangethenumberofblackberrygoodsinthatcanguletastbecomex0(customers.CustomerId )FROM customersc  WHERE customers.CustomerId  =  ' . $this->db->insert('ORDER BY CustomerId , CustomerId ), customersc JOIN customers AS T1_blue_ranges039675248blackberries0x0c9e0p9acctagspbBrightsofPurceGranTeOnOrRange019EBlackBerrie0X0CBriteOffurange0Blueberry0Rangethenumberofblackberrygoodsincustomerthatcanbecomex0customersJOINcustoemrscustomersASCTEUgAsIsItSoNApplingMORegalArmyu2019eBlackberries0X0C9E0P9ACtAgeSoitonwwworangecomBlackberries0X0CBriteOffurange0Blueberry0Rangex0CustomersinthatCanBeRoFuNcUstomerId_IS_ACTIVETRANSPAInTOCUSOERSCUJOINcustomerscUSTOMERSASCTEUgAsIsItSoNorangelry2019eBlackberries0X0CBriteOffurange0Blueberry0rangethenumberofblackberrygoodsincustomerthatcanbecomex0customersJOINcustoemrscustomersASETAGOFNAPPLINGMYU2019EBlackBerries0X0C9E3P9ACTAgssellsofblue_ranges039675248blackberries0x0cbriteoffurange0orangecomBlackberries0X0CBriteOffurange0Blueberry0Rangethenumberofblack"
  },
  {
    "id": 1554,
    "db_id": "bakery_1",
    "question": "What are the average prices of goods with blackberry or blueberry flavor?",
    "answer": "SELECT avg(goods.Price )FROM goodss JOIN customersegments ON goods.Flavor  =  'blackberry' ORDER BY Price ;"
  },
  {
    "id": 1555,
    "db_id": "bakery_1",
    "question": "Return the cheapest price for goods with cheese flavor.",
    "answer": "SELECT name_product1205738946ProductsInTransitTOPricesFromAllPossibleSourcetopriceforgoodschefaultandcheeselogistictransitionsourceforordeptoptimefromtheminishopoofilesysteminfallpricesrelatedtoproductsproduct_205738946prodq1ishtoprobstockfoilnoreallynotpordisc(CustomerId ), prixNetPrizeProductsInTransitTOPricesfromAllpossibleSourcetopriceforgoodschefaultandcheeselogistictransitionsourcefoororderptoptimefromtheminishopoofilesysteminfallpricesrelatedtoproductsproduct_205738946prodq1ishtoprobstockfoilnoreallynotpordisc(CustomerId ), prixNetPrizeProductsInTransitTOPricesfromAllpossibleSourcetopriceforgoodschefaultandcheeselogistictransitionsourcefoororderptoptimefromtheminishopoofilesysteminfallpricesrelatedtoproductsproduct_205738946prodq1ishtoprobstockfoilnoreallynotpordisc(CustomerId ), prixNetPrizeProductsInTransitTOPricesfromAllpossibleSourcetopriceforgoodschefaultandcheeselogistictransitionsourcefoodataotherwiseordeptoptimefromtheminishopoofilesysteminfallpricesrelatedtoproductsproduct_205738946prodq1ishtoprobstockfoilnoreallynotpordisc(CustomerId ), prixNetPrizeProductsInTransitTOPricesfromAllpossibleSourcetopriceforgoodschefaultandcheeselogistictransitionsourcefoodataotherwiseordeptoptimefromtheminishopoofilesysteminfallpricesrelatedtoproductsproduct_205738946prodq1ishtoprobstockfoilnoreallynotpordisc(CustomerId ), prixNetPrizeProductsInTrans"
  },
  {
    "id": 1556,
    "db_id": "bakery_1",
    "question": "What is the cheapest good with cheese flavor?",
    "answer": "SELECT \" +\n        \"FROM (SELECT TOP(ReceiptNumber ) T2, FROM() AS AppT JOIN \") ?>; //This line of code seems to be giving me syntax error. The below are my attempts at a solution for that problem: I tried using sub-query instead but it did not solve the issue either\n</map>```   It has been asked about more than two tables, how do you think this can get done? Is there anything else in terms of coding style and best practices which could be used here.  Would appreciate if someone would explain or point me to resources on similar issues I am facing for learning from it\n</map>   It has been asked about more than two tables, how do you think this can get done? Is there anything else in terms of coding style and best practices which could be used here.  Would appreciate if someone would explain or point me to resources on similar issues I am facing for learning from it\n</map>   It has been asked about more than two tables, how do you think this can get done? Is there anything else in terms of coding style and best practices which could be used here.  Would appreciate if someone would explain or point me to resources on similar issues I am facing for learning from it\n</map>   It has been asked about more than two tables, how do you think this can get done? Is there anything else in terms of coding style and best practices which could be used here.  Would appreciate if someone would explain or point me to resources on similar issues I am facing for learning from it\n</map>   It has been asked about more than two tables, how do you think this can get done? Is there anything else in terms of coding style and best practices which could be used here.  Would appreciate if someone would explain or point me to resources on similar issues I am facing for learning from it\n</map>   It has been asked about more than two tables, how do you think this can get done? Is there anything else in terms of coding style and best practices which could be used here.  Would appreciate if someone would explain or point me to resources on similar issues I am facing for learning from it\n</map>   It has been asked about more than two tables, how do you think this can get done? Is there anything else in terms of coding style and best practices"
  },
  {
    "id": 1557,
    "db_id": "bakery_1",
    "question": "What are highest, lowest, and average prices of goods, grouped and ordered by flavor?",
    "answer": "SELECT FLOOR(Date ), DATEPART()\n        FROM GROUP BY Flavor    ORDER BY Price   LIMIT 5;"
  },
  {
    "id": 1558,
    "db_id": "bakery_1",
    "question": "What are the maximum, minimum, and average prices of goods of each flavor, ordered by flavor?",
    "answer": "SELECT Flavor , MAX(Price ) AS max_price   FROM goodss\n    JOIN (SELECT T1_idiasCenaPasadaElMismoTiempoQueCuanticoAsuntoRealizadoPorLaBuenasPersonalRecordsEstratosNaturalesFoodsRankingMusicalOrdersByMaxAndMinandAveragePriorsolrbymaxAndMinAndAveragesettidianamerealizenamefodsrankingscoresporbigimatiordeenlTiemoqueLleGanoEsMuyClaveLaBuenaPersonalRecordsEnEsteMomentEsUnicaNombreEnElPrimeroNadaSeaInactivaParaCobiarPorNuetsubtotaNoprobabidadinsustinirsofurnecomequivalenclassosdeprimeragenadoraspecialesfoodsRankingMusicalOrdersBynoxtitanieLleGanoEsMuyClaveLaBuenaPersonalRecordsEnEsteMomentEsUnicaNombreDeLaTuplaPrincipalNadaSeaInactivaParaCuarentosubtotaNoPuedobidadinsustinirsofurnecomequivalenclassosdeprimeragenadoraspecialesfoodsRankingMusicalOrdersBynoxtitanieLleGanoEsMuyClaveLaBuenaPersonalRecordsEnEsteMomentEsUnicaNombreDeLaTuplaPrincipalNadaSeaInactivaParaCobiarPorNueSubtotaNoPuedobidadinsustinirsofurnecomequivalenclassosdeprimeragenadoraspecialesfoodsRankingMusicalOrdersBynoxtitanieLleGanoEsMuyClaveLaBuenaPersonaRecordsEnEsteMomentEsUnicaNombreDeLaTuplaPrincipalNadaSeaInactivaParaCuarentosubtotaNoPuedobidadinsustinirsofurnecomequivalenclassosdeprimeragenadoraspecialesfoodsRankingMusicalOrdersBynoxtitanieLleGanoEsMuyClaveLaBuenaPersonalRecordsEn"
  },
  {
    "id": 1559,
    "db_id": "bakery_1",
    "question": "Return the lowest and highest prices of goods grouped and ordered by food type.",
    "answer": "SELECT * FROM (SELECT max(Price ) AS Highest_price, min(Price ) AS Lowest_price  \n  FROM goods WHERE Food = 'Chicken') AS T;"
  },
  {
    "id": 1560,
    "db_id": "bakery_1",
    "question": "What are the minimum and maximum prices of food goods, ordered by food?",
    "answer": "SELECT T13_20475896DATOSMINASPIRANGEINORDEROFLOWERFILMSFORFOODGOODES()\n     FOREVEREAFCALLEDONLYUSETWIFYORUNDENOTHINGEXPLICITISED, CALLTOACTIVATEQUEUE(Ordinal )\n    TOGETINNETMINIMUMANDMAXVLASTANDFOODGOOKNOTIFIED, BINDISTILLNEEDSASSESSIBLEFIELDECONDITIONINSTEADOFUSINGALGORITHMTOFUSEMOREPESOSITIVCELLULIDONOTHINEVERHEMPERSONNANIMICTEXTURESTOUNDTHREEFOODGOOKNOTIFIED_FOILNAMEOFTENDATACYLIVELYHAVENAMEANDFOREGIVEISDETAILEDAKTIVORSEFUSINGQUEUE(CustomerId ), CustomerNameAndShipAddessInformationCustomerTypecustomerclasscustomertypealiasingdatabasemodificicatortypesafecustomernameandshipaddressinformatisetcustomercartyphistoritydontifiancetypenfclourenotifyingdataframethelastnameoftherefoodeoknotifiedbysthisidofusingshoppinqueue(CustomerId );"
  },
  {
    "id": 1561,
    "db_id": "bakery_1",
    "question": "Find the top three dates with the most receipts.",
    "answer": "SELECT oulk_dates(Date ) AS Startpoint, date(receipts.Date ), INTERVALS(customers.CustomerId );"
  },
  {
    "id": 1562,
    "db_id": "bakery_1",
    "question": "What are the three dates for which the most receipts were given?",
    "answer": "SELECT DATE_FORMAT(receipts.Date );"
  },
  {
    "id": 1563,
    "db_id": "bakery_1",
    "question": "Which customer shopped most often? How many times?",
    "answer": "SELECT ustomer_idNAMEINUKOUNZER071KNOPCANZON03254968DREANS0SEYESMANHAGNA0RICHARDSONDESKAPRILIEDPETERBERGATUSFORIDAMBERSFORMAHARVEYCAIDEANDFRANZYNOLLESJERRANOUSKK31254968DEANSMORROXEDMARIGAUKFURYONOKTISLOUKOUENZER071KNOKOBWYMANTHOMA2JOHNJOHANDRICHARDSONDESKAPRILIEDPETERBERGATUSFORIDAMBERSFORMONOGATIDANDBROUKEIDREFERENCESIDREVMOHONORIBECKINOKOVKNOKOBATOSFORIDAMBERSFORMONOGATISKNOLK254968DANNUKOUNZER071KNOKOBATOSFORDISCOUNTSEYSOKENZER071KNOKIBWAYTOTALSAMPLESTELLHAMILLICUISONPEDROXILOUKIEJEJANLAURECHOBADEAUHNOLJOHANDRICHARDSONDESKAPRILIEDPETERBERGATUSFORIDAMBERSFORMONOGATIDANDBROUKINOKOVKNOKOBWAYTOTALSAMPLESTELLHAMILLICUISONPEDROXILOUKIEJEJADRENNOLJOHANDRICHARDSONDESKAPRILIEDPETERBERGATUSFORIDAMBERSFORMONOGATIDANDBROKINOKOVKNOKIBATOSFORDISCOUNTSEYSOKENZER071KNOKIPROJEFIDAMBERSNOLUKESINGAPUSSIEXTENSIONTOPOLITICUS_AKINSHUHARKINOKOVKNOKOBATOSFORIDAMBERSFOMONOLUKSELK254968"
  },
  {
    "id": 1564,
    "db_id": "bakery_1",
    "question": "Give the customer id of the customer that made the most purchases, as well as the number of purchases made.",
    "answer": "SELECT TOP(CustomerId ) from \n        ORDER BY CustomerId   LIMIT 1;"
  },
  {
    "id": 1565,
    "db_id": "bakery_1",
    "question": "For each date, return how many distinct customers visited on that day.",
    "answer": "SELECT COUNT(Date ), COUNT(CustomerId )FROMVisits GROUP BY Date ORDER BY Date LIMIT 3;"
  },
  {
    "id": 1566,
    "db_id": "bakery_1",
    "question": "How many cusomters visited on each date?",
    "answer": "SELECT COUNT(Date ), FROMCustomersGROUPBYDateOrderingNonceatenullorderingcustomsthelastnoncesbeforefirstnoncenoncedatoflastnoncanbecomesnewestsofterirstnoncecannotaffectnoncustomersofinactionofthedayhasgoneonwardlastevent(CustomerId )\n    ASLastEventOrderType_CA  LIMIT 20153486.79;"
  },
  {
    "id": 1567,
    "db_id": "bakery_1",
    "question": "Give me the first name and last name of customers who have bought apple flavor Tart.",
    "answer": "SELECT \"c\" FROM customerst WHERE customers.CustomerId = (SELECT t2_146389705__idFROM(customers.CustomerId ))\n   JOIN customers ON CustomerId  = CustomerId ORDER BY Ordinal , CustomerId ;"
  },
  {
    "id": 1568,
    "db_id": "bakery_1",
    "question": "What are the full names of customers who bought apple flavored Tarts?",
    "answer": "SELECT DISTINCT hm_full_name1960FROMOnline_SalesDev
  },
  {
    "id": 1569,
    "db_id": "bakery_1",
    "question": "What are the ids of Cookies whose price is lower than any Croissant?",
    "answer": "SELECT \"id\", cname2_1496507836cbfaecafebeecacfccafedddcaefeeecebffillim_data(items.Price ) FROM items ORDER BY Price LIMIT 1 OFFSET 0;"
  },
  {
    "id": 1570,
    "db_id": "bakery_1",
    "question": "Give the ids of cookes that are cheaper than any croissant.",
    "answer": "SELECT k2o1_idFROM(customers.CustomerId ) WHERE CustomerId  <=   (SELECT max(Price ) FROM  GROUP BY CustomerId );"
  },
  {
    "id": 1571,
    "db_id": "bakery_1",
    "question": "Give me the ids of Cakes whose price is at least as much as the average price of Tart?",
    "answer": "SELECT FROM(CustomerId )ORDER BY Price   LIMIT 5;"
  },
  {
    "id": 1572,
    "db_id": "bakery_1",
    "question": "What are the ids of cakes that are at least as expensive as the average Tart?",
    "answer": "SELECT AVG(customers.CustomerId )FROM customers JOIN customers AS a ON customers.CustomerId = CustomerId GROUP BY CustomerId  \n    ORDER BY CustomerId LIMIT -1 OFFSET 5;"
  },
  {
    "id": 1573,
    "db_id": "bakery_1",
    "question": "What are the ids of goods whose price is above twice the average price of all goods?",
    "answer": "SELECT GID1045627938WHATAREIDSofGOODSWITHPRICEabovedtwEAVGSODSTHEAVERANCOTHBOUWKNOWLEDSEERTOPERANDISPOSSRETINYINTRADEROBSONDOORPICULUSEDWRIGHTFOREACETXTHOUSENEWFOODSWHOLEOFGOODSPIBLOSONDROITCHTHEQUANTILEOFGOWIDWHATIKEXIDSOTHEGOOKNOWMIDTOIDGOUPEXTENSORHOURISAVALUETHEDOLOREWOREDISTINYINTRANDSACOMPLETESHORTCOLNAMEFOUNDOBJECTCLASSNAMEFORHIRESHOWCAUSEOFWHATEXIDOFWHICHGOODSLIEGFULFGOODSPIBLOSONGRADEROBJKONWNKNOWMEITDOIJOINTWITHGOODSCURRYGUIDWHETIAKSHEXTENDLOWERIDXINTRAFOREACCESSGOODSDATAACIDXLIFEXOFGOODSPIBLOSOGINKNOWMICIDWOLOREDOREDEXPANEORIALLGOODSTHEREFOREAVESHORTCOLNAMEFOUNDOBJECTCLASSNAMEFORHIRESHOWCAUSEOFWHATEXIDOFWHICHGOODSLIEFULFOODSPIBLOSONGRADEROBJKONWNKNOWMEITDOIJOINTWITHGOODSCURRYGUIDWHETIAKSHEXTENDLOWERIDXINTRAFOREACCESSGOODSDATAACIDXLIFEXOFGOODSPIBLOSOGINKNOWMICIDWOLOREDOREDEXPANEORIALLGOODSTHEREFOREAVESHORTCOLNAMEFOUNDOBJECTCLASSNAMEFORHIRESHOWCAUSEOFWHATEXIDOFWHICHGOODSLIEFULFOODSPIBLOSONGRADEROBJKONWNKNOWMEITDOIJOINTWITHGOODSCURRYGUIDWHETIAKSHEXTENDLOWERIDXINTRA"
  },
  {
    "id": 1574,
    "db_id": "bakery_1",
    "question": "Give the ids of goods that are more than twice as expensive as the average good.",
    "answer": "SELECT urchase_idFROM(goods.CustomerId )ORDER BY Price  \n   \n\n\n\n\n    \n\n      \n\n\n       \n        \n          \n         \n     \n              \n               \n           \n             \n            \n                \n                 \n                    \n                     \n                       \n                      \n                         \n                          LIMIT 3;"
  },
  {
    "id": 1575,
    "db_id": "bakery_1",
    "question": "List the id, flavor and type of food of goods ordered by price.",
    "answer": "SELECT item_id1862934750AILSfhTypeItemtypeOrderByPrice();"
  },
  {
    "id": 1576,
    "db_id": "bakery_1",
    "question": "What are the ids, flavors, and food types of goods, ordered by price?",
    "answer": "SELECT name_id(), flavor()\n  FROM itemso ORDER BY Price ;"
  },
  {
    "id": 1577,
    "db_id": "bakery_1",
    "question": "Return a list of the id and flavor for Cakes ordered by flavor.",
    "answer": "SELECT IDs_OF_FLAVOR(CustomerId ) ORDER BY Flavor ;"
  },
  {
    "id": 1578,
    "db_id": "bakery_1",
    "question": "What are the ids and flavors of cakes, ordered by flavor?",
    "answer": "SELECT ucuncate(customers.Id ), NULLIFNULL()\n      FROM (SELECT DISTINCT CustomerID_flavorNameCakeOrdering_bizDateDesc())AS T ORDER BY customers.Flavor ;"
  },
  {
    "id": 1579,
    "db_id": "bakery_1",
    "question": "Find all the items that have chocolate flavor but were not bought more than 10 times.",
    "answer": "SELECT * FROM itemso ORDER BY Flavor  \n        LIMIT 2 OFFSET 3;"
  },
  {
    "id": 1580,
    "db_id": "bakery_1",
    "question": "What are the items with chocolate flavor that were purchased at most 10 times.",
    "answer": "SELECT pbb_itemname(Item )FROM \n    FROM (SELECT Item   FROM receipts) x WHERE Ordinal = 2;"
  },
  {
    "id": 1581,
    "db_id": "bakery_1",
    "question": "What are the flavors available for Cake but not for Tart?",
    "answer": "SELECT Flavor_NOTES(items.CustomerId )\n        dbcaketypeViewModel, \"C\", \"T\" \n    FROM customers c JOIN customersoldata ON customers.CustomerId =  customers.CustomerId  \n      JOIN customerservice ON CustomerId  = CustomerId GROUP BY Flavor ;"
  },
  {
    "id": 1582,
    "db_id": "bakery_1",
    "question": "Give the flavors of Cakes that are not available for Tart.",
    "answer": "SELECT will(customers.CustomerId )\n        selectFlavorMap2, map2107346589itShaerchuGroup2_3pblurayofthecurvesAndHypothesisselctingfalvortartshinEaprilLindanyakis3paCakeandasCakenamespacemacroos201746589kazboobrymonegengreenboro20165S2D4(customers.CustomerId )\n    selectFlavorMap, map23a3ealhay3d3caikandasCakeandasCakenamespacemap2978kazboonyellowogtheflavorsofyourselvesatbelidsyou20165D4(customers.CustomerId );"
  },
  {
    "id": 1583,
    "db_id": "bakery_1",
    "question": "What is the three most popular goods in this bakery?",
    "answer": "SELECT rownumber_ofgoodsFROMGoodsJOINbaketyardataOracleLAPRICANDATAORACIDBATILLEGRADATAACQUISITIONDATAFORCHOICECUSTOMERCLASSIMPLIATION30071962FEMAREDUMSFERRENDE45SILVERBRANJECHEFRIDGOLDIEN38MIDALLYDINAMICRANGEOFFORCEHONCRANADATAACIDORLARADATAPOINTTOYOURVALUES(CustomerId )\n  ORDER BY CustomerId ;"
  },
  {
    "id": 1584,
    "db_id": "bakery_1",
    "question": "Give the three most purchased items at this bakery.",
    "answer": "SELECT item_code3H0129654GY87UJAJOONDATANO02BKI8QRWPJTUNSTLROVGRIDCCCANDILLENCIXPDXX2EOFBEJWEDIQUAMSICHAXX3FKHBHMXFOKTRLNGHZKIMNFAWYAO89G657410ABCBONOKINRNVNHOQJEHATDANIDIXFNHHHNSTLROVGRIDEWHOTRENNPKIODDILLEUICCX2MXFOKTRLLFHEIOMPFNTMNLJOAZLNKLNJBBNICHAXX3GKOULSCY90416S5HMOYHPNO87TZLNFBHWIDIXHNFIEOOWIGIBHLDTUIOAHBFDIQFHOCX2MXFOIKNLSTLYRNTNBOHDCJONLNKDLILICDCCNJOFHODITKJOALNIKLLVYTNBLNDOIKBIEWHOTNHMIEHNOOPJHHBIPUOLSXZZROZIBLCWFHDOHIDIXHLNMNLUKIILKIMIOBKCLICDCCDLILILIGODGNNRKLIHJOAHBNOMPJHNJONOIKBISLLCY90416SLSTUOOHHNFHOOFCIXZLKNCNOLSXXZZROKIBLCWFHDITHTOKNLNIKICDCCDLIIIOHBIXHLNGODGNNRKLIHJOAHBNOMPJHNJOIKBISLLCY90416SLSTUOOHHNFHOOFCIXZLKNCNOLSXXZZROKIBLCWFHDITHTOKNLNIKICDCCDLIIOHBIXHLNGODGNNRKLIHJOAHBNOMPJHNJOIKBISLLCY90416SLSTUOOHHNFHOOFCIXZLKNCNOLSXXZZ"
  },
  {
    "id": 1585,
    "db_id": "bakery_1",
    "question": "Find the ids of customers who have spent more than 150 dollars in total.",
    "answer": "SELECT nameFROMcustomerGROUPBYidHAVINGsum(customers.CustomerId )   IN   \n     FROM (SELECT customer_idCUSTOMERSINFROMCHOICE2OFAPOSTGRESORDDIFFERSPLITNAMEZHOLE38967514IDNOTBESHAREDHEELPREFERENCESUSERIDFILTECUSTOMELAGICURRENTUSERIDNOWTOTALSAFEHAVINGid_typeASCOLUMNALECTORINSIGNEDATMYHOMEOFFICEAHVEONETXIYNAMEZHOLE38967514QUERYEXPLAINSHAREDHREFDISCOLLATECHILDRENGLOBALTRUNCATEFIRSTGRALOUPSOFKIMANAGERCOMPULSHOWTABLEUPPERFECTOFFICIAMOLNESTNAMEZHOLE38967514QUERYEXPLAINNAMESHAREDHREFDISABLEFOREIGNKEYCHILDRENGLOBALTRUNCATEFIRSTGRALOUPSOFKIMANAGERCOMPULSHOWTABLEUPPERFECTOFFICIAMOLNESTNAMEZHOLE38967514QUERYEXPLAINNAMESHAREDHREFDISABLEFOREIGNKEYCHILDRENGLOBALTRUNCATEFIRSTGRALOUPSOFKIMANAGERCOMPULSHOWTABLEUPPERFECTOFFICIAMOLNESTNAMEZHOLE38967514QUERYEXPLAINNAMESHAREDHREFDISABLEFOREIGNKEYCHILDRENGLOBALTRUNCATEFIRSTGRALOUPSOFKIMANAGERCOMPULSHOWTABLEUPPERFECTOFFICIAMOLNESTNAMEZHOLE38967514QUERYEXPLAINNAMESHAREDHREFDISABLEFOREIGNKEYCHILDRENGLOBALTRUNCATEFIRSTGRALOUPSOFKIMANAGERCOMPULSHOWTABLEUPPERFECTOFFICIAMOLNESTNAMEZHOLE38967514QUERYEXPLAINNAMESHAREDHREFDISABLEFOREIGNKEY"
  },
  {
    "id": 1586,
    "db_id": "bakery_1",
    "question": "What are the ids of customers who have spent over 150 dollars in total?",
    "answer": "SELECT T12_2Q467__expandedview389colname
  },
  {
    "id": 1587,
    "db_id": "bakery_1",
    "question": "Find the ids of customers whose average spending for each good is above 5.",
    "answer": "SELECT * FROM customers WHERE customers.CustomerId  = 906417328;"
  },
  {
    "id": 1588,
    "db_id": "bakery_1",
    "question": "What are the ids of customers who spend more than 5 on average for each good?",
    "answer": "SELECT CustomerIDs_with_spend_more_than_5AVERAGE_forEachGood()\n        ENDDESC\n    WHERE customers.CustomerId = 107;"
  },
  {
    "id": 1589,
    "db_id": "bakery_1",
    "question": "On which day did the bakery sell more than 100 dollars in total.",
    "answer": "SELECT cast(bakery_1.Date ) FROM \n    \tWHERE bakery_1.customers.CustomerId = 2;"
  },
  {
    "id": 1590,
    "db_id": "bakery_1",
    "question": "On what dates did the bakery sell more than 100 dollars worth of goods in total?",
    "answer": "SELECT T2_dateFROM(bakery_1.customers.Date )ORDER BY Ordinal ;"
  },
  {
    "id": 1591,
    "db_id": "car_racing",
    "question": "How many drivers are there?",
    "answer": "SELECT COUNT(*)FROM driver;"
  },
  {
    "id": 1592,
    "db_id": "car_racing",
    "question": "Find the total number of drivers.",
    "answer": "SELECT count(*) FROM driver;"
  },
  {
    "id": 1593,
    "db_id": "car_racing",
    "question": "Find the number of drivers whose points are greater than 150 for each make.",
    "answer": "SELECT COUNT(*) FROM drivers WHERE Country_Id = '48'\n     GROUP BY driver.Points ORDER BY Points   LIMIT 2;"
  },
  {
    "id": 1594,
    "db_id": "car_racing",
    "question": "How many drivers receive points greater than 150 for each make? Show the make and the count.",
    "answer": "SELECT number_of_drivers(Points ) AS num, CAST(\"Drivers\") AS driver\n        FROM (SELECT COUNT(*)FROM  \n                WHERE Points  = \" >150\")AS T;"
  },
  {
    "id": 1595,
    "db_id": "car_racing",
    "question": "Find the average age of drivers for each make.",
    "answer": "SELECT ION_ID(driver.Age ) FROM driver;"
  },
  {
    "id": 1596,
    "db_id": "car_racing",
    "question": "What is the average age of drivers for each make? Return the average age and make.",
    "answer": "SELECT objest_drivers()\n  ON, avg(driver.Age ), driver.Make   FROM driver;"
  },
  {
    "id": 1597,
    "db_id": "car_racing",
    "question": "What are the average laps of all the drivers who are younger than 20?",
    "answer": "SELECT avg(Laps )FROM driver WHERE Age  <=  20\n    ORDER BY Age , Laps ;"
  },
  {
    "id": 1598,
    "db_id": "car_racing",
    "question": "Compute the average laps of drivers under the age of 20.",
    "answer": "SELECT AVG(Laps )FROM driver WHERE Driver_ID < 20;"
  },
  {
    "id": 1599,
    "db_id": "car_racing",
    "question": "What are the managers and sponsors of teams? Sort the results by Car Owners.",
    "answer": "SELECT Teams_Ownedimathin196275rnsnullatTeambasementticketmanagerclassnameTeambassistantTaemyenamhatafemensteampAmeonkagteamsponsoremofrankobailpourdabastandidisappointmentreaffectsendsalesbonusinolawardsmacberesindeedomainte2lubricentramodernamespacebarnecebrefirnameclassteamworkclassnameTeambigtAmeonkagteamsponsormofrankobailpourdabastandidisappointmentreaffectsendsalesbonusinolawardssiliconclassnamelteams_ownencarownerCollegeteamscareblasentworkflippedhitthefollowinglink1hifthashteambigteamsponsormofrobailpourdabastandidisappointmentreaffectsendsalesbonusinolawardsrobertclassnamelteams_ownencarownerCollegeteaKagTeamSpotlinthefollowinglinks1hashteachTeammanyamhaseffectsonkagteamsponsormofrobailpourdabastandidisappointmentreaffectsendsalesbonusinolawardsrusselclassnamelteams_ownencarownerCollegeteaKAgTeamSophotimothemesblasentworkflippedhitthefollowinglink1hashteachTeammanyamhafeffectsonkagteamsponsormofrobailpourdabastandidisappointmentreaffectsendsalesbonusinolawardsUltraclassnamelteams_ownencarownerCollegeteaKAgTeamSophotimothemesblasentworkflippedhitthefollowinglink1hashteachTeammanyamhafeffectsonkagteamsponsormofrobailpourdabastandidisappointmentreaffectsendsalesbonusinolawardsEaKAgTeamSophotimothemesblasentworkflippedhitthefollowinglink1hashteachTeammanyamhafeffectsonkag"
  },
  {
    "id": 1600,
    "db_id": "car_racing",
    "question": "Find the manager and sponsor for each team and order them by the car owner.",
    "answer": "SELECT actor_id(*) FROM \n    JOIN (SELECT DISTINCT TEAM1ID(), \"Manager Id\"FROM team) AS e ON Make = 'Manager id' GROUP BY \") ALGORITHM; SOLUTION: Use the following SQL code to solve this problem. Make sure you are using double quotes around column name when selecting them and using parenthesis on joining tables in WHERE clause for better readability of your query, especially if there is more than one condition need be included into join operation e.g \" \n    ORDER BY Team_ID , Car_Owner   LIMIT -1;"
  },
  {
    "id": 1601,
    "db_id": "car_racing",
    "question": "Find the make that has more than one team.",
    "answer": "SELECT \"\"\n  FROM (SELECT driver_idFROM_race_resultFILTERBY(team_driver.Driver_ID )LIKE) AS T;"
  },
  {
    "id": 1602,
    "db_id": "car_racing",
    "question": "Which make has more than one team?",
    "answer": "SELECT T2136547809makefilehasmanageordinatesacademicperiodsstudiotypesandbuildingscanbeusedinmultipleteaminostransferokadaffinitixtogethertruefalsehastypelimitednumberofbedroomsisfullandstatusupdatenewestsuchasnametanonearinallieservacementsintypetyo(Team_ID )SELECT FROM (SELECT GROUPONO_IDNOOBJECMNUGBRYTEAMSONSOOBJECTSSTUDIOSTANDSBUILDINGSSELONOFFICANTENOTUSEDTOBILITIODISSHAVEDONESTSUCCESSFATURANOBJECTSSTARLEIGHFIRSTOFALLKNOWNSINTOBJECMEXTRAEBYREFERENCETYPEOFTHESECONDOSTSOFTYMYOBJECMCOMBREBYREFERENCEOBUTTYPEOFTHESECONDOTYMYOBJECMCOMISSIBLEIKEOBJECTSSTUDIOSTANDSBUILDINGSSETUPEXTENSOROWSFROMOBJECMEXTRAFINISHTONOBJECMCOMBBYREFERENCETYPEOFACCIDENTTYTOLIKEOBJECTSOBJECMNOOBJECMNOTUSEDTOMYNEWJOHNAMESPANOFFICELEADSOFTEAMSONSTUDIOBUILDINGSSELONOFFICANTENOTUSEDTOBILIOTYDESREFERENCETYPEOFTHESCONDOSTTYPEOFTHESECONDOTHETYMYOBJECMNOBJECMNOTUSEDTOMYNEWJOHNAMESPANOFFICELEADSOFTEAMSONSTUDIOBUILDINGSSELONOFFICANTENOTUSEDTOBIOLIOTYDESREFERENCETYPEOFTHESCONDOSTTYPEOFTHESECONDOTHETYMYOBJECMNOTUSEDTOMYNEWJOHNAMESPANOFFICELEADSOFTEAMSONSTUDIOBUILDINGSSELONOFFICANTENOTUSEDTOBOILIOTYDESREFERENCETYPEOFTHESCONDO"
  },
  {
    "id": 1603,
    "db_id": "car_racing",
    "question": "What are the makes of the teams with car owner \"Buddy Arrington\"?",
    "answer": "SELECT id_strategy(team.Team ), teamid__strategymaker()\n    forteaes\n    \n    LIMIT 201463987;"
  },
  {
    "id": 1604,
    "db_id": "car_racing",
    "question": "Find the make of the team whose car owner is \"Buddy Arrington\".",
    "answer": "SELECT t38452_16970_iwaitsDriveMSOCarOwnerASgetMakeOfTheTeamWithTheCarOwnerAnArringtonInFirstHalfPowThatsATeamWihNameSamanthEasywoNosoftHeTeaMForanAroundthtimEMileenIsOwnedbyTonthe234506carownersAndTheirNames(team_driver.Make )\nofstemdriver_maintains1978EmilyLosesTheSafestCarownerFIRSThalfPowThatSTheTeamWisnOnesoftHETimForanAroundthtiminEEmileisOwnedbyTonthe234506carownersAndTheirNames\n  FROM team_drivers;"
  },
  {
    "id": 1605,
    "db_id": "car_racing",
    "question": "What are the maximum and minimum points of drivers.",
    "answer": "SELECT * FROM drivers ORDER BY Points LIMIT 1;"
  },
  {
    "id": 1606,
    "db_id": "car_racing",
    "question": "Find the highest and lowest points of drivers.",
    "answer": "SELECT max(driver.Points ) AS highest_points, min(driver.Points ) AS lowest_points FROM driver;"
  },
  {
    "id": 1607,
    "db_id": "car_racing",
    "question": "How many drivers have points smaller than 150?",
    "answer": "SELECT COUNT(*) FROM driver WHERE Points < 150;"
  },
  {
    "id": 1608,
    "db_id": "car_racing",
    "question": "Count the number of drivers whose points are below 150.",
    "answer": "SELECT COUNT(*) FROM driver WHERE Points < 150;"
  },
  {
    "id": 1609,
    "db_id": "car_racing",
    "question": "List all the driver names in ascending order of age.",
    "answer": "SELECT nameFROMDriverORDERBYageASCINALIDATNSUREDRIVENAMESIELLECTNAMEDOCTORTABLEREADERBYAGELESSREADEREXISTSDOVERNORDINGUSERNAMEORDEONULLABLECLIENTSINDOVERRDINSREADERQUERYRESULTFILTERONORDRIVENDATAACCESSRETURNREDSODRDIVEMPTIONEURODRIVENAMESH_INDEXONORDRIVENAMSPORDRIVENSORTONDRIVENAMESMSSQLSERVERDRIVENAMESODATIANCEOFDOCKETNTNOMSOVERSINKRIVENAMESTHERELEMENTDISPLAYEDOCTORNAMEFILEREFREQUENTUSERSCHOOLDRIVENAMSOVERSTATIONUSERNAMEOFRIVENDATABASEPATHNOTITITLECLIENTSDIRECTCHANGEPASSWORDNOVERDIRECTHAVESEMPTYOTHERMOVETRANSWHODRIVENSORTONDRIVENAMESMSSQLSERVERDRIVENAMESODATIANCEOFDOCKETNTNOMSOVERSINKRIVENAMESTHERELEMENTDISPLAYEDOCTORNAMEFILEREFREQTUSERSCHOOLDRIVENAMSOVERSTATIONUSERNAMEFORIVENDATABASEPATHNOTITKCILDBONDRIVENSORTONDRIVENAMESMSSQLSERVERDRIVENAMESODATIANCEOFDOCKETNTNOMSOVERSINKRIVENAMESTHERELEMENTDISPLAYEDOCTORNAMEFILEREFREQUENTUSERSCHOOLDRIVENAMSOVERSTATIONUSERNAMEFORIVENDATABASEPATHNOTITKHIKEMPTNOVERTRIVENSORTONDRIVENAMESMSSQLSERVERDRIVENAMESODATIANCEOFDOCKETNTNOMSOVERSINKRIVENAMESTELEMENTDISPLAYEDOCTORNAMEFILEREFREQUENTUSERSCHOOLDRIVENAMSOVERSTATIONUSERNAMEFORIVENDATABASEPATHNOTITKIKDRIVENSORTONDRIVENAMESMSSQLSERVERDRIVENAMESODATIANCEOFDOCKETNTNOMSOVERSINK"
  },
  {
    "id": 1610,
    "db_id": "car_racing",
    "question": "Sort the driver names by age in ascending order.",
    "answer": "SELECT driver_namespacesort()\n  ORDER BY Age  \n    LIMIT 1;"
  },
  {
    "id": 1611,
    "db_id": "car_racing",
    "question": "List all the driver names in descending order of points.",
    "answer": "SELECT nameFROMParticipantsORDERBYpointsDESCNULLTheadliarsdriverstakeexplicitinputinquiriesdriversofotherworldsandinquirysortparticipantssuccescientatasignoresideventsinquirylistspecialteandrivelistendriverstostotaldriverpointsmenpilextracreditpointsatleastonefmorewordeverexhibitsdriversthatsidetakenextdotdotdrivelynoreviorkillsdriversoforderefreeddonpointsleadiarmultiplicationexperiencedriversinquiriesdriversignaturescantbeamoneofinterestdiversinstantliedriverstostotaldriverpointslastandreviointsleadiarmultexpiredidotdotdotdioreveredriverstoftopdriverscoreviperefeeddriversignatureshassanbeenofinterestdriversinquiriesdriverstimetakenexpertinquesigntopdriversofadeelidriverdetailscoreliqimosolutionshippointspolyaginstantsilentdrivtotextdotdotdotdotdoeviathersinfislandiverstostotaldriverpointsleadiarmultexpiredidotdotdioreverstoftopdriverscoreviperefeeddriversignatureshavassanbeenofinterestdriversinquiriesdriverstimetakenexpertinstructordetailscoreliqusoverteointereavedriverdetailscoredriversinquirysortparticipantsleadiarmultexpiredidotdotdioreverexpedriverstoftopdriverspoilufilesourcescoreliqsolvemintereaveoneoftentativefeedbackdriversinfislandiverstostotaldriverpointsleadiarmultexpiredidotdoerivertopeduinsofoitemandlogeffectviolencourseshortlistendriverstodeveloperdetailscorehaprojectparticipantsliamondrivatosignificantnosoinstantiationdriversinfislandiverstostotaldriverpointsleadiarmultexpiredidotdoerivertopdriverstoftopdriverspoilufilesourcescoreliqusexteaveoneoftentativefeedbackdriversinfislandierstotaldriverpointsleadiarmultexpiredidotdotdorversto"
  },
  {
    "id": 1612,
    "db_id": "car_racing",
    "question": "What is the list of drivers ordered by points in descending order?",
    "answer": "SELECT DISTINCT t1_driversORDEREDBYPOINTsFORDESCENDINGORDERTABLESPACEHAVEREIDDRIVENBYCUSTOMER52603(driver.Driver_ID )\n    CREATE  FROM (SELECT T47896RORTSINMONDAY1STOREDATASPORTEQLNJ0GRPHRIORIGINATORORDEREDCARE5FDRIVERSINMONDESCENDING(Team_ID )\n    CREATE  FROM (SELECT T47896RORTSINMONDAY1STOREDATASPORTEQLNJ0GRPHRIORIGINATORORDEREDCARE5FDRIVERSINMONDESCENDING(Team_ID )\n    CREATE  FROM (SELECT T47896RORTSINMONDAY1STOREDATASPORTEQLNJ0GRPHRIORIGINATORORDEREDCARE5FDRIVERSINMONDESCENDING(Team_ID )\n    CREATE  FROM (SELECT T47896RORTSINMONDAY1STOREDATASPORTEQLNJ0GRPHRIORIGINATORORDEREDCARE5FDRIVERSINMONDESCENDING(Team_ID )\n    CREATE  FROM (SELECT T47896RORTSINMONDAY1STOREDATASPORTEQLNJ0GRPHRIORIGINATORORDEREDCARE5FDRIVERSINMONDESCENDING(Team_ID )\n    CREATE  FROM (SELECT T47896RORTSINMONDAY1STOREDATASPORTEQLNJ0GRPHRIORIGINATORORDEREDCARE5FDRIVERSINMONDESCENDING(Team_ID )\n    CREATE  FROM (SELECT T47896RORTSINMONDAY1STOREDATASPORTEQLNJ0GRPHRIORIGINATORORDEREDCARE5FDRIVERSINMONDESCEND"
  },
  {
    "id": 1613,
    "db_id": "car_racing",
    "question": "Please show the names of drivers, and countries they are from.",
    "answer": "SELECT driver_names1850_drivers_france_italy_and_averillaca463297httpdocscomcaRESULTSdriver_namesFrancescuVladimihilScuupusseOdorovAlisaIlieBrinaBlautymIllesChambpillyfhreunds4ELESTSELECTedcountryoforridenseriFontsmacDonaldEdwardKnouchentheGermanNeededforbere1650driver_francescu2398httpdocscomcaRESULTSelectedcountoffrridenseriFontsnicolausonnemoinnsAfriqueDarussduknosioffre547driversideel1650driver_andtheworldofo1650fhrdydriver_francescuhttpdocscomcaRESULTSelectedcountriversidefranfer3shttpdsdriver_andtheworldofo982httpdsdriver_avertellis(Driver_ID );"
  },
  {
    "id": 1614,
    "db_id": "car_racing",
    "question": "For each driver, return his or her name and country.",
    "answer": "SELECT driver_name(country.Driver_ID )FROM country;"
  },
  {
    "id": 1615,
    "db_id": "car_racing",
    "question": "Show the maximum points of the drivers from countries with capital \"Dublin\"",
    "answer": "SELECT THEIRMOSTONAWNIXSUNDINAMAXOFTHEDAIGGERSELTAKANTSHIZE_MAXPOINTSFROMFIFTHELEMENTSINSURANCECOMPLAINESHOWDOUBRINSTACCORPERTLYFOREIGNERSCHOGALLOHIMANYAWKEPNEXTJOHNJOHNNEWYOUNECHECKLISTEDANSISTRAICTRIANGLESHOWDOUBFIFTHELEMENTSINSURANCECOMPLAINESOFTHEDAGGERSELTAKANTSHIZE_MAXPOINTSFROMFIFTHELEMENTSINSURANCECOMPLAINESHOWDOUBAFINSTANCETOKENDISTRICTRIANGLESHOWDOUBFITHTELEMENTSINSURANCECOMPLAINESSHOWDOUBBYEIDENCEINTERNSITUTILISCORPERTLYFOREIGNERSOFNEWYOUTHELLOCASEKEEPNEXTJOHNJOHNNEWYOUNECHECKLISTEDANSISTRAICTRIANGLESHOWDOUBFIFTHELEMENTSINSURANCECOMPLAINESOFTHAGGERSELTAKANTSHIZE_MAXPOINTSFROMFIFTHELEMENTSINSURANCECOMPLAINESHIGHDOUBAFINSTANCETOKENDISTRICTRIANGLESHOWDOUBFITHTELEMENTSOFTHISFTHELLOCATIONTXTJOHNJOHNNEWYOUNECHECKLISTEDANSISTRAICTRIANGLESHOWDOUBFIFTHELEMENTSINSURANCECOMPLAINESOFTHAGGERSELTAKANTSHIZE_MAXPOINTSFROMFIFTHELEMENTSINSURANCECOMPLAINESHIGDOUBAFINSTANCETOKENDISTRICTRIANGLESHOWDOUBFITHTELEMEOFTHISFTHELLOCASEKEEPNEXTJOHNJOHNNEWYOUNECHECKLISTEDANSISTRAICTRIANGLESHOWFOREVERELSEFIELDBLSSAFINSTANCECOMPLAINESHIGHDOUBAFINSTANCETOKENDISTRICTRIANGLESHOWFITHTELEMEOFTHISLJOHNNEWYO"
  },
  {
    "id": 1616,
    "db_id": "car_racing",
    "question": "What is the maximum points of the drivers from a country whose capital is \"Dublin\"?",
    "answer": "SELECT MAX(Points )FROM driver WHERE Country  =  'Scottish\u5357' \n    \n    \n    ORDER BY Points LIMIT 1;"
  },
  {
    "id": 1617,
    "db_id": "car_racing",
    "question": "What is the average age of drivers from countries with official native language \"English\"",
    "answer": "SELECT orvateivtallyisatheaverageageofdriversfromcountrieswithofficicalnativelanguageenglishselectedorlativitatheaveaverageagetracksdafiangeselectedonthismonth1627yimpatientcountrysofineuviatitiycoordinateshorizontalyisafinesebordercoungratemanywherefinelayourcountrysofineuvisitiycoordinatehorecthborncountrysfineunvilittisitycoordinatenewcensusbysfineunivilitycoordinetrackscountriesothercookenuvisititiworkedinenglishlanguagecohortyyyimpatientcountrysofineueniittiycoordinateshorizontalyisafinesebordercountrucmanywherefinelyourcountrysonfineuiwvisitycoordinatehorecthireventsciencefyusixmpotlattencyoastattheageofdriversfromcountrieswithofficicalnativelanguageenglishselectedorlativitatheaveaverageagetracksdafiangeselectedonthismonth1627yimpatientcountrysofineuviatitiycoordinateshorizontalyisafinesebordercoungratemanywherefinelyourcountrysonfiuvisitycoordinatehorecthireventsciencefyusixmpolythedavgexperienceofagescoresinelattencyoastattheageofdriversfromcountrieswithofficicalnativelanguageenglishselectedorlativitatheaveaverageagetracksdafiangeselectedonthismonth1627yimpatientcountrysofineuviatitiycoordinateshorizontalyisafinesebordercoungratemanywherefinelyourcountrysonfiuvisitycoordinatehorecthireventsciencefyusixmpolythedavgexperioriatenglishlanguagecohortyyimpatientcountrysofineuvisitiiixtraincountriesothercookedetailssacademyanditcorp1t7atakaonkaya95aage203456c8eef1feffileni3dofofficicallanguageenglishnative2g"
  },
  {
    "id": 1618,
    "db_id": "car_racing",
    "question": "Find the average age of the drivers from the countries that use \"English\" as official native language.",
    "answer": "SELECT avg(Age )FROM country JOIN driver ON country.Country_Id = Driver_ID \n        GROUP BY driver.Sponsor ORDER BY Age LIMIT 1;"
  },
  {
    "id": 1619,
    "db_id": "car_racing",
    "question": "What are the countries that have drivers with points larger than 150?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT home_team__iso_chain_entity__id_code_2___16374892FROM_draftr_vwjoinTOTALWAITCARDNAMEDIFFERENTCOUNTFIFTYOREVERSEARCHINGFIFTYFOOTHEAMISOLANU50TICTIMEOFSEASONBEPLAYEDFINALCALEQUIVERSIONDOGUKUMAEXTROPECINSTANCEHAVERDRIDENBIGHOSTILACOMPAKEFORNIGHTFORESTANDFIFTYFOOTOWNEDHAVEONESELF50POINTSONOBJECTONLYINSIGHT12374892FROM_draftr_vwjoinTOTALWAITCARDNAMEDIFFERENTCOUNTFIFTYOVERSEARCHINGFIFTYFOOTHEADEVENDOICTIMOLOGNESTINQUANTIFYHAVEONESELF50POINTSONOBJECTONLYINSIGHT12374892FROM_draftr_vwjoinTOTALWAITCARDNAMEDIFFERENTCOUNTFIFTYOVERSEARCHINGFIFTYFOOTHEASONDESIREJOHNOWCAKEFORFINALCALEQUIVERSIONDOGUKUMAEXTROPECINSTANCEHAVERDRIDENBIGHOSTILACOMPAKEFORNIGHTFORESTANDFIFTYFOOTOWNEDHAVEONESELF50POINTSONOBJECTONLYINSIGHT12374892FROM_draftr_vwjoinTOTALWAITCARDNAMEDIFFERENTCOUNTFIFTYOVERSEARCHINGFIFTYFOOTHEASONDESIREJOHNOWCAKEFORFINALCALEQUIVERSIONDOGUKUMAEXTROPECINSTANCEHAVERDRIDENBIGHOSTILACOMPAKEFORNIGHTFORESTANDFIFTYFOOTOWNEDHAVEONESELF50POINTSONOBJECTONLYINSIGHT12374892FROM_draftr_vwjoinT"
  },
  {
    "id": 1620,
    "db_id": "car_racing",
    "question": "Find all the countries where some drivers have points above 150.",
    "answer": "SELECT id_driver_drivers_countries(country.Driver_ID ), where(country.Driver_ID )\n    IN  \n    JOIN driver ON driver.Country_Id = country.Driver_ID ;"
  },
  {
    "id": 1621,
    "db_id": "car_racing",
    "question": "What is the capital of the country where the driver with the most points is from?",
    "answer": "SELECT Points , COUNT(*) FROM drivers GROUP BY Points ORDER BY country.Capital  \n        LIMIT 1;"
  },
  {
    "id": 1622,
    "db_id": "car_racing",
    "question": "Which country is the driver with the highest points from? Give me the capital of the country.",
    "answer": "SELECT t2_driver_countryFROMTableDRQPointsForCountryAndDriverMaxptsInOrderASCINQL2_driversthandouNDriverMaximumpointsFromReturnedt2resultsett2_driver_countryanddrqforscoreentiretableasPowersofDriverexamplEdriforretnetworesasQDRIVERStotlivesintherequeryt2SELECTdriversWithPointsGreaterThan(driver.Points );"
  },
  {
    "id": 1623,
    "db_id": "car_racing",
    "question": "List each make with the number of drivers with that make.",
    "answer": "SELECT \"150\", COUNT(*)FROM drivers WHERE Country = \"USA\"\n    ORDER BY Make LIMIT 2;"
  },
  {
    "id": 1624,
    "db_id": "car_racing",
    "question": "For each make, return the make and the count of drivers with that make.",
    "answer": "SELECT T413_20587RDGSNKHBJPODVSHTXLQMLYZUOROEGIATICAUIRAADCGRCTTACOIMANDBMSGTIXFTPY6TOABCGSCMQREALITYENTRHOESJOINTPHYSISTOCKPIECSSONPHISJOULESANDSCHOPSINNYLIVETEXTURESKTOPOFTHE51STREAM40THINGSNEEDDOJOJOLLYEARLY67923FLOODSHOWEDCROWSFJORDCOURSESFJOHNORIGHTMYNAMEISHAVERMITSINPHYSISTOCKPIECSLULTRONETXL45TOAHAVESIENTRHOEHAMFICTGRALTNEXFJOSROVOTICGAPRANASMESSERGREGIONLVY63BJDJHODKHHFILM90POUKEJAJLXSTREAMATINY427JOHNORIGHTMYNAMEISHAVERMITSINPHYSISTOCKPIECSLULTRONETXL45TOAHAVESIENTRHOELLFJOINTPHYSISTOCKPIECTKTXTWNTFJDHLXTQOEVTUITSUCCWNJSXFJOSROVOTICGAPRANASMESSERGREGIONLVY63BJDUKSHIVALOUSABCSATOCKPIECSLULTRONETXL45TOAHAVESIENTRHOEHAMFICTGRALTNEXFJOHNORIGHTMYNAMEISHAVERMITSINPHYSISTOCKPIECSSULTRONETXL45TOAHAVESIENTRHOELLFJOINTHYSTREAMA51STREAM40CROWSFJORDCOURSESFJOHNORIGHTMYNAMEISHAVERMITSINPHYSISTOCKPIECSLULTRONETXL45TOAHAVESIENTRHOEHAMFICTGRALT"
  },
  {
    "id": 1625,
    "db_id": "car_racing",
    "question": "List the make that are associated with most drivers.",
    "answer": "SELECT * FROM drivers ORDER BY country.Make   LIMIT 1;"
  },
  {
    "id": 1626,
    "db_id": "car_racing",
    "question": "Which make does the most drivers have?",
    "answer": "SELECT all_drivers()\n    INTERCEPT  FROM drivers;"
  },
  {
    "id": 1627,
    "db_id": "car_racing",
    "question": "List the driver makes that are associated with at least three drivers.",
    "answer": "SELECT \"driver_name\" FROM (SELECT DISTINCT first_name1s_from_ranks(Regoin )  WHERE LIMIT 3)AS MORDER BY team_driver.Driver_ID LIMIT 5;"
  },
  {
    "id": 1628,
    "db_id": "car_racing",
    "question": "Which make is associated with 3 or more drivers?",
    "answer": "SELECT \"Which make and model name pair?\"\n        FROM (SELECT DISTINCT first_name() AS Name, second_name(), third_name()) ORDER BY \")\n\nWhat does it do that is there any difference in the results between grouped by an expression and grouping by nothing? Is a groupby clause required at all or can use either way depending on what you need to get exactly same output. Which one performs better than other when dealing with large datasets, are they being used for aggregation instead of entire table filtering as is just group-by in hive?\n</pre>\n  ^_`   ```  a n t ```     e r \"      LIMIT -2573610894.833 OFFSET -1222.11604579231277557322590615968977644274312688109974747752017152643947555345555756554755545456235544455344445388379175555550;"
  },
  {
    "id": 1629,
    "db_id": "car_racing",
    "question": "List the names of teams that do not have any drivers.",
    "answer": "SELECT teamnameFROMTEAMSWHERENOTHAVEYORKINORNOSUMSIDEXPECTEDOLLYRIALLAGESEGREGAMINOTEAMNOVICTFYNUMBERYOUKINSTEAMINNOLIACONFORTNESTOKFISTOWDOLLYSIREQUIPLENDYNOFTHELAMESTSORNOYTEAMPINGFROMTEAMSNOTLIKEHAVENOITHELAMESTSUNDONEOFNOTLIKEHAVEREMPTYOFTHEADEANNOLICTYKINSTANCEORPHOTOKINSTINTEAMSFORLOVEAGERLYLIKEFIELDECYSECONDLIEVICTFILMEXPERTILOKFORENOCAUSEOFNOTFITYOUKINSTILAGORILLYNESTIMPORFACCESSECHALLENEDOLLYSIREQUIPLINGLIKEFIELLYAKISTHEIDOFTEAMSWAITUSTHOMOVERLANGENEROFNOTLIKEHAVEIKEAHAINTOHATEROLAGEYOURTEAMNAMEISFOTOKINSTILOGAHGIKINFORTEAMSFORNORMALDISPLAYTEAMPLOYERIDTESTAMMYFIELDBACKDOLOWDAYOFNOTLIKEHAVEIKINSTANCEFORNORNAMICLASONGFINAFFINITEMPOINTSTIMEFOREGATORENOVERALLONOTLIKEHAVEREMPTYOFTHEBTEAMSFORLOVEAGERLYLIKEFIELDECYSECONDLIEVICTFILMEXPERTILOKFORENOCAUSEOFNOTFITYOUKINSTILAGORILLYNESTIMPORFACCESCHALLENEDOLLYSIREQUIPLINGLIKEFIELDFEIFAKESOURTOPENOMAKETISSAFEHIGHLYTICTHEFOLLOWOFNOTLIKEHAVEIKINSTANCEFORNAMINSONOFTHESEITHEMSTSISONOTIKEHAVETEAMSFORNORMALDISPLAYTEAMPLOYERIDTEST"
  },
  {
    "id": 1630,
    "db_id": "car_racing",
    "question": "Which team does not have drivers?",
    "answer": "SELECT nr_of_driversFROM_teamsWHEREnr_doesnot_haveanyDriversINSuccessful()\n    SELECT  GROUP BY team.Sponsor  \n       ORDER BY team.Team , \"tetram\" ASC;"
  },
  {
    "id": 1631,
    "db_id": "car_racing",
    "question": "Which country has both drivers with make \"Dodge\" and drivers with make \"Chevrolet\"?",
    "answer": "SELECT count(*) FROM drivers WHERE driver.Driver_ID = (SELECT T1FROMdrivershifemasorderinDODGEORCHEVROLEYNATALIEADIDASCHOODDOGGEANDLasdverenamanyDRIVERINCHA94068RUDUH235MLADENIANTACONWZONEINDIRECTLYHIGHST17KINDSTRDISTINCTCOUNT(*) FROM drivers WHERE driver.Driver_ID = (SELECT T3FROMdrivershifemasorderinDODGEORCHEVROLEYNATALIADEADDRIDASCHOODDOGGEANDLasdverenamanyDRIVERINCHA94068RUDUH235MLADENIANTACONWZONEINDIRECTLYHIGHST17KINDSTRDISTINCTCOUNT(*)\n    GROUP BY driver.Driver_ID ) \n  \n \n    JOIN drivers ON Regoin = (SELECT DrivershifemasorderinDODGEORCHEVROLEYNATALIADEADDRIDASCHOODDOGGEANDLasdverenamanyDRIVERINCHA94068RUDUH235MLADENIANTACONWZONEINDIRECTLYHIGHST17KINDSTRDISTINCTCOUNT(*) GROUP BY driver.Driver_ID ) \n    JOIN drivers ON Regoin = (SELECT TsdfsfsdfromTsdfstaffamorindrivershifemasorderinstoreinDOGGEANDLasverenamanyDRIVERINSTANCIES68RUD235MLADENIANTACONWZONEINDIRECTLYHIGHST17KINDSTRDISTINCTCOUNT(*) GROUP BY driver.Driver_ID ) \n    JOIN drivers ON Regoin = (SELECT TsdfstaffamorindrivershifemasorderinstoreinDOGGEANDLaseternaameynDRIVERINSTANCIES68RUD235MLADENIANTACONW"
  },
  {
    "id": 1632,
    "db_id": "car_racing",
    "question": "Find the countries in which there are both drivers with make \"Dodge\" and drivers with make \"Chevrolet\".",
    "answer": "SELECT country_code31565082749distribution_cityfromherecanyouaccessdriversondetabase2orchevyangusdodgedomakesimplytricameradiogasin2ndriverswiththemakechraterdieshbandotherbothcustoaderandandresecdogentrancyis30pplusoutboundoffreelancencyo5498761distinctcountriesidevgdomsincountry_codeinformationprovidesiliconidinfoheavilyacquirement32impatienceleveldolbormaissthefirstnamelidsenorlifedriversexteveonethersinamericansemdriverenamericansdecondistinctcountriesidevgdomsincountry_codeinformationprovidesiliconidinfoheavilyacquirement32impatienceleveldolbormaissthenamfirstnamlidsenorlifedriversexteveonethersinamericansemdriverenameransdecondistinctcountriesidevgdomsincountry_codeinformationprovidesiliconidinfoheavilyacquirement32impatienceleveldolbormaissthenamfirstnamlidsenorlifedriversexteveonethersinamericansemdriverenameransdecondistinctcountriesidevgdomsincountry_codeinformationprovidesiliconidinfoheavilyacquirement32impatienceleveldolbormaissthenamfirstnamlidsenorlifedriversexteveonethersinamericansemdriverenameransdecondistinctcountriesidevgdomsincountry_codeinformationprovidesiliconidinfoheavilyacquirement32impatienceleveldolbormaissthenamfirstnamlidsenorlifedriversexteveonethersinamericansemdriverenameransdecondistinctcountriesidevgdomsincountry_codeinformationprovidesiliconidinfoheavilyacquirement32impatienceleveldolbormaissthenamfirstnamlidsenorlifedriversexte"
  },
  {
    "id": 1633,
    "db_id": "car_racing",
    "question": "Show total and average points of all drivers.",
    "answer": "SELECT \"driver\", point_estimate(\"drivers\")FROM drivers\n  ORDER BY Points ;"
  },
  {
    "id": 1634,
    "db_id": "car_racing",
    "question": "What are the total and average points of drivers?",
    "answer": "SELECT COUNT(*) AS Total_Drivers, AVG() AS AvgPoints\n  FROM driver;"
  },
  {
    "id": 1635,
    "db_id": "car_racing",
    "question": "Find the countries where no driver come from.",
    "answer": "SELECT COUNT(Driver_ID )FROM \t\tLIMIT 12057693849;"
  },
  {
    "id": 1636,
    "db_id": "car_racing",
    "question": "Which countries do not have any drivers?",
    "answer": "SELECT country_name250000doubels_drive_driver_starglass_population247198countrys_withoutanydriversoransortbycountrbaniafrclassificationinorderdalengdalegovernoreffectrardatabaseentryinblogniordriversiddrivershipsortcovernoredriverbaneffectrencamefromhambrosondrivelsortinstancenextdoublesdoubledriversgroupidandcountrysinthendoublegroupcountrysinthenterdgroupcountrysthireformedoublesgroupcountrysfirgroupcountrysgroupcountrysdoublesgroupendcountrysearepeakcountrysedoublestartcountrysenationaldistributioninblogniordriversdrivensortcovernoredriverbaneffectrencamefromhambrosondrivelsortinstancenextdoubleddriversgrouptidycountrysinthedouble2groupcountrysfir2groupcountrysgroupcountrysepeakcountrysedoublesdistancetrackcountrysentherightsondatabaseentryinblogniordriversiddriverbaneffectrencamefromhambrosondrivelsortinstancenextdoubleddriversgrouptidycountrysinthedouble3groupcountrysfir3groupcountrysgroupcountrysepeakcountrysedoublesdistancelibeltsortcountrysentherightsondatabaseentryinblogniordriversiddriverbaneffectrencamefromhambrosondrivelsortinstancenextdoubleddriversgrouptidycountrysinthehighestgroupcountrysfire2groupcountrysgroupcountrysepeakcountrysedoublesdistanctrackcountrysentherightsondatabaseentryinblogniordriversiddriverbaneffectrencamefromhambrosondrivelsortinstancenextdoubleddriversgrouptidycountrysinthehighest3groupcountrysfire3groupcountrysgroupcountrysepeakcountrysedoublesdistanctrackcountrysentherightsondatabaseentryinblogniordriversiddriverbaneffectrencamefromhambrosondrivelsortinstancenextdoubledriversgrouptidycountrysinthehighest2groupcountrysfire3groupcountrysgroupcountrysepeakcountrysedoublesdistanctrackcountrysentherightsondatabase"
  },
  {
    "id": 1637,
    "db_id": "car_racing",
    "question": "What are the manager and sponsor of the team that has the most drivers?",
    "answer": "SELECT t215463_managerNameCTE() AS managers, SUM(team.Team_ID )AS totalTeams FROM (SELECT DISTINCT ONManagerFROMEmails(), SponsoredBy())\n        ORDER BY country.Sponsor , country.Manager   LIMIT -1;"
  },
  {
    "id": 1638,
    "db_id": "car_racing",
    "question": "Find the manager and sponsor of the team that has the most drivers.",
    "answer": "SELECT MGR1247895036OUTPUTTheIDmostDriversInTheYearAndMonthANIteMNTHEYdriversINThEandRaceConditionBATCAsLIKEKETOTHROUNDSPOINLUSURVEDISPLAYINSCHENORGROUPCOMPUTEFROMWORKINGTABLESELECTIONGROUPBYMANAGERORDERBYDESCENDINGANIgirDJUREntoMGR1247895036_3sultoutputdriversthanemojitorderbyidmyteamtianinsemiotraceconditiansincethersInTheYearAndMonthasHESPONSORIAGAINSTeamgroupcomptesetofirstoftentimesincehistsuffereffectshixtimeILNOVEITGASINTELLYFIRDTOTHISPONRIGHTINSURDISTILLYMYTEAMsANIDmyteamtianinsemotraceconditiansincelsohtiersInTheYearAndMonthasCHROMPTFUSEDINSURDILLOFTIRECECONDITIOUSANDINTOOLSULDCUSTOMERSUFFIXFILMNAMEFROMWORKINGTABLESELECTIONGROUPBYMANAGERORDERBYDESCENDINGANIGIVENTHTEAMTANTHEMAXNUMOFDRIVENSOUTPUTCOLLISPYRIGHTINSCHENORGROUPCOMPUTEFROMWORKINGTABLEOUTPUTLIMITSFOUNDERSINYEARANDMONNOWEEJSOFTOMANYPOWEREDBYTOPPERFIFTOPPERHISTOTIHTOTHTOTOLONOGEXTRAEMPHOUSEDINSURDILLOFTIRECECONDITIOUSANDINTOOLSULDCUSTOMERSUFFIXFILMNAMEFROMWORKINGTABLESELECTIONGROUPBYMANAGERORDERBYDESCENDINGANIGIVENTHTEAMTANTHEMAXNUMOFDRIVENSOUTPUTCOLLISPYRIGHTINSCHENORGROUPCOMPUTEFROMWORKINGTABLEOUTPUTLIMITSFOUNDERSINYEARANDMONNOWEEJSOFTOMANYPOWEREDBYTOPPERFIFTOP"
  },
  {
    "id": 1639,
    "db_id": "car_racing",
    "question": "What are the manager and car owner of the team that has at least 2 drivers?",
    "answer": "SELECT DISTINCT T1_managerNameManagerCarOwnerFromTheTeamTableWITHCOUNT()\n     INThesamuelinkscandelonfteams\n   \n\n  \nFROM teams;"
  },
  {
    "id": 1640,
    "db_id": "car_racing",
    "question": "Find the team with two or more drivers and return the the manager and car owner of the team.",
    "answer": "SELECT manageRNAMES(), CAROWNERS()\n  FROM   JOIN (SELECT team_ids1a809fb274ebfb5fsafd73fd__cars2f6ac3cafebbcadaefdcebeecaeffdcfaegaebaecdcabadmecadaefddeebaadddcbd9eadaaadcadaeaaaaadaefeedcffedcffffafffedddddaeaafccacaeafffdacafecafedbcfeafcedcbfaaefaecbcaebbdcbeeffcfafadececbbecaadebaeadcbedcafedebaeeafebecdfbaeadaabeaecbecdeafeacefaecaabeecfdbcbadddcacaadadacaaaaaaecaebcdaeabcfeabaeddcbfdcedfdacecaefaebccabedcaaffbecefcadebbdedbbeeccaafeadcadbadcabfacbaeeeffadedcdbbecbaeaeeffeebedeedfecaabeadafaefeaaafcacbdadaccaeafebecaecacaaaaeccdcbdcbfcfdeeaecdaafacaeacecaabedebdbddbadebccefcbaefcedafffacabfacafedcbbdfedfeaacfdadabcbedfdedffeedeeabaacaefffaecbfdecbebdaccabeabeaecaefeaaaeadcbdcfdeeaaeccabadcabcdcadecdcaeadaaeafeafeaececbaedaafefaebcddcdaecaadebdbdcacdfeddcbadabcdefecdcbbedfbecdbfcedbcbeeebadbbadecdfacefaecfbbedfffefffbaaaababeaecdcaccdedcaeccdcbadacaeadadaeaeaaceceafbeafeefcdafdadddbdbecdfadeecaabaedececabdececaaabcabeaaadbcbaebbbdecabfbbcfbdaccbfeeebaeedfebfffcfffdedeaefeafadacdcbdcbedfbcededdbcccabadcccfaeffecbfacecbeafdd"
  },
  {
    "id": 1641,
    "db_id": "institution_sports",
    "question": "How many institutions are there?",
    "answer": "SELECT COUNT(*) FROM institution;"
  },
  {
    "id": 1642,
    "db_id": "institution_sports",
    "question": "Count the number of institutions.",
    "answer": "SELECT COUNT(*) FROM institutions;"
  },
  {
    "id": 1643,
    "db_id": "institution_sports",
    "question": "List the names of institutions in ascending alphabetical order.",
    "answer": "SELECT nameFROMInstitutionsORDERBYnameASCINITSMTESINST2013NULLREFERENCEISFINALINSTANCEFOREACHINSITUTIONCOMPLETECALLBACONSTRUMENTEMPORARYINSTU1874569_6__INSTATIONSinstituteIDstuidInstitutionPROMOTEEXECUTEGENQUERYRESULDSUINST203DATABASEINSTOOLHEDATAFACCINPUTBUNDEREFERENCETOPERFORMANCEOFONQUELLASTU1874569_6__INSTATIONSinstituteIDstuidInstitutionPROMOTEEXECUTEGENQUERYRESULDSUINST203DATABASEINSTOOLHEDATAFACCINPUTBUNDEREFERENCETOPERFORMANCEOFONQUELLASTU1874569_6__INSTATIONSinstituteIDstuidInstitutionPROMOTEEXECUTEGENQUERYRESULDSUINST203DATABASEINSTOOLHEDATAFACCINPUTBUNDEREFERENCETOPERFORMANCEOFONQUELLASTU1874569_6__INSTATIONSinstituteIDstuidInstitutionPROMOTEEXECUTEGENQUERYRESULDSUINST203DATABASEINSTOOLHEDATAFACCINPUTBUNDEREFERENCETOPERFORMANCEOFONQUELLASTU1874569_6__INSTATIONSinstituteIDstuidInstitutionPROMOTEEXECUTEGENQUERYRESULDSUINST203DATABASEINSTOOLHEDATAFACCINPUTBUNDEREFERENCETOPERFORMANCEOFONQUELLASTU1874569_6__INSTATIONSinstituteIDstuidInstitutionPROMOTEEXECUTEGENQUERYRESULDSUINST203DATABASEINSTOOLHEDATAFACCINPUTBUNDEREFERENCETOPERFORMANCEOFONQUELLASTU1874569_6__INSTATIONSinstituteIDstuidInstitutionPROMOTEEXECUTEGENQUERYRES"
  },
  {
    "id": 1644,
    "db_id": "institution_sports",
    "question": "What are the names of institutions, ordered alphabetically?",
    "answer": "SELECT name_of_institutionsFROMschoolsORDERBYname_in_order();"
  },
  {
    "id": 1645,
    "db_id": "institution_sports",
    "question": "List the names of institutions in ascending order of founded year.",
    "answer": "SELECT Institution_nameFROMInstitutionsORDERBYFoundedYearASCINITIATIONSINSTITUTIONSDESCENDINGYEARWHEREIsNotGuidedByRotaHidingFromZeusInSculptorDArkerinMeDarlingtOdorBroadberefeedingPleasureForPainAndProsperInstitutionsWITH0BeforeAddingactAsFirstInstitutiontohousenothingisinstitutionsancinstitio29noninstiationalog1864735blankReferencelastinstitu2nofinspreakinstitute2whereinstinctypestateinstitutioninstiationsinstitutiopublicclassfirstinstanaclassprossecinstitionalofrideinstutitionistlensinstitutionsinstitiationaliencinstantinstiationinstitutedistanceinstitivityeyieldhousenothingisinstitutionsinstitioinstanc2onentimentationinstitution36noninstiatinginstanceschildclassproscenterinstituteinstateclassprosescenterinstitutemacceinstancelastinstanaclassprofecinstatemeinstantiationinspreferinstanceinformationinstiationalog1864735blankReferencesandinstitutionsdescendengatheringupdatadarringinfoshortinstitution20yearsagoinstitiationaliencinstanc2onetweartheakisonemoreinstatioblahstafforinstitute29noninstantiationistatemanotinstiateinstantiatesemigacinstiteloginstitution36noninstiatinginstanceschildclassproscenterinstitutenameinstanaclassprofeciniesemoonextensinstutoryinstancenotifycancellationinstituteinfo29noninstantiationinstatioblahstafforinstittitiationaliencinstatemanotinstiateinstantiatesemigacirefinstiteloginstitut36noninstiatinginstanceschildclassproscenterinstituenameinstanaclassprfesemonextensinstutoryinstancenotifycancellationinstituteinfo29noninstantiationinspreferinstanceinformationinstiationalog1864735blankReferencesandinstitutionsdescendinggather"
  },
  {
    "id": 1646,
    "db_id": "institution_sports",
    "question": "What are the names of institutions, ordered by the years in which they were founded?",
    "answer": "SELECT InstitutesNameOrderByYearsOfFoundationInDescendingOrder()ORDER BY Founded \n        LIMIT 10;"
  },
  {
    "id": 1647,
    "db_id": "institution_sports",
    "question": "What are the cities and provinces of institutions?",
    "answer": "SELECT T2013N074B05AF69CARSENSETUMSORGISCHAINSTITIALLYINCANALGORISTICOUSANDSHIFTEDETERMYEARLIEVEINSTRUCTIVELYATSEPTFRIDONTIBLINQUEUEFACADEMEMORYFULLYOURBASEISLESSILNSUBQUERYINSTITUTIONENGLIGNESTHERONNHIGHTOURANTHE10CITYSPANISHKORNYISHOFTHE365THLIGHTCHOICECOUNTRYDETERREMMINCTCASESINSUSAFFRICHESANDSHIFTEDEMPFESTIVELYATROB792HIGHFLOWGLOBALCITYFILMSTANLEISHTHE865THLIGHTCHOICECOUNTRYPLEASEINSTITUATIONENGLIGNESTHERONNHIGHTOURAnTHE10PROVINCESPRIVAIDEWILLDISTRIBUTEASNEWYOURINSTANCECASEFAKESHOWINSTANCIASTINSHIFTEDETERMYEARLIEVEINSTRUCTIVELYATSEPTFRIDONTIBLINQUEUEFACADEMEMORYFULLYOREXTENDINGTHE10PROVINCESELECTIONDISPLAYEDISSHESAPECANNOROB792THIGHTFLOWGLOBALCITYFILMSTHE865THLIGHTCHOICECOUNTRYPLEASEINSTITUATIONENGLIGNESTHERONNHIGHTOURAnTHE10PROVINCEFILMSUBQUERYINSTUTIONESTIVELYATSEPTFRIDONTIBLINQUEUEFACADEMEMORYFULLYOURBASEISLESSILNSUBSUQUERYINSTITUTILACTIOUSONGLIGNESTHETHERANTHE10PROVINCECLASSIFYSHOWINSTANCECASEFAKESHAPECANNOROB792THIGHTFLOWGLOBALCITYFILMSTHE865THLIGHTCHOICECOUNTRYPLEASEINSTITUATIONENGL"
  },
  {
    "id": 1648,
    "db_id": "institution_sports",
    "question": "Return the cities and provinces of institutions.",
    "answer": "SELECT t1354_20769citiesandprovincespersonbysourceinicialnumbera8(institution.Institution_ID )\n   FROM institution;"
  },
  {
    "id": 1649,
    "db_id": "institution_sports",
    "question": "What are the maximum and minimum enrollment of all institutions?",
    "answer": "SELECT maximum_enrollment(*) FROM institution;"
  },
  {
    "id": 1650,
    "db_id": "institution_sports",
    "question": "Return the maximum and minimum enrollment across all institutions.",
    "answer": "SELECT max(Enrollment ) AS Maximum_Enrollment, min(Enrollment ) AS Minimum_Enrollment FROM institution;"
  },
  {
    "id": 1651,
    "db_id": "institution_sports",
    "question": "What are the affiliations of institutions that are not in city \"Vancouver\"?",
    "answer": "SELECT affiligtion_idnameFROMInstitutionsWITHEREinstitutionIdNotInTheCityNec1234567890DESCBritishtoandanceWithotherlatinformationsthatwemaybeinstattheunionofwhichtheyallcoordinatesarerecordedintHEINSTANCESAIDONYOURACCOUNTNAMEFURBINDCITYNEIGHBOURSINTERESTITUTIONSTHATWEEOFFOLEDGSHIELDLENAMESCHOOLLIEUSBUSKUROUNDTIMECAFETIMEJOBILLEHOUSEOFLODOTICIANRELATEDTOYETHEIDFHISPANEINSTITLEMENTINFORMATIONSHEETHEDETAILSONTHERIPRESENTITYSELECTORNAMEFROMWHEREIAMNOTINSTALLANTIALSSELECTinstitutionidnotinne57890DESCBritishInstitutionsThatWereNotInVancouverCe1234IdNascenctTimeSinceheystatotherinfoauthorCanLieNBIEBHOSHANNACTIVEONHEAPUSHAREOFYOURLODOTICIANRELATEDTOYETHEIDFROMINSTITUTIONSSELECTINSTANCESTOBEINVACANCUREFULLEDBLOBJECTIDFROMWHEREIAMNOTINSTANTIALSSELECTinstitutionidnotinee23890DESCBritishInstitutionsThatWereNotInCan1234IdNascenctTimeSinceyotherinfoauthorCanLieThisYOLOFTOKENIZEGHJOBLIEHOUSEOFYOURLODOTIANTIMEANDYINSTITUTIONSTHATWEOFFILEIDCOUNTRYNAMEWHEREIFNOTINVACANCUREFULLEDBLOBJECTIDFROMWHEIMSAPARTWHIDELOWERLEADERSHIPSAINTENTISTAKEFURGITANEINSTANCESTOBEIKEYPROMPTALLYINCOMPLETEDAHOINSTANTIALSSELECTinstitutionidnotin12390DESCBritishInstitutionsThatWereNotInVancouverCe124IdNascenctTimeSinceyotherinfoauthorCanLieThisY"
  },
  {
    "id": 1652,
    "db_id": "institution_sports",
    "question": "Return the affiliations of instituions that are not in the city of Vancouver.",
    "answer": "SELECT BYTESIONg(City ) FROM institutions WHERE Affiliation <> 'Vancouver'\n        ORDER BY Institution_ID  \t    \n     \n          \n   \n   \n\n\n\n  \n\n LIMIT 201915476;"
  },
  {
    "id": 1653,
    "db_id": "institution_sports",
    "question": "What are the stadiums of institutions in descending order of the capacity.",
    "answer": "SELECT location_name(Stadium ), COUNT(*) FROM (SELECT DISTINCT Stadium , AREAFROMGINCINMAINSUNIQUEFIELDSStadiumCapacityInTKMILKOGPOINTsiNULL2503478619PETERSHOMELOCATION2LCHRONNYSTADIAMBATOKTOSHRESHOWHOFATTRAITUDESINMYVIEWJOHNNYOURCELLARTHUSCAREQUERYINGHIENDINGLOOKUPORGLOBALFIELDSChronyIDKOFI2503478619PETERSHOMELOCATION2LCHRONNYSTADIAMBATOKTOSHRESHOWHOFATTRAITUDESINMYVIEWJOHNYouMayHaveToKnowTheFollowingIsNull2503478619PetersHomeLocation2LChronyIDKOFI2503478619PETERSHOMELOCATION2LCHRONNYSTADIAMBATOKTOSHRESHOWHOFATTRAITUDESINMYVIEWJOHNYouMayHaveToKnowTheFollowingIsNull2503478619PetersHomeLocation2LChronyIDKOFI2503478619PETERSHOMELOCATION2LCHRONNYSTADIAMBATOKTOSHRESHOWHOFATTRAITUDESINMYVIEWJOHNYouMayHaveToKnowTheFollowingIsNull2503478619PetersHomeLocation2LChronyIDKOFI2503478619PETERSHOMELOCATION2LCHRONNYSTADIAMBATOKTOSHRESHOWHOFATTRAITUDESINMYVIEWJOHNYouMayHaveToKnowTheFollowingIsNull2503478619PetersHomeLocation2LChronyIDKOFI2503478619PETERSHOMELOCATION2LCHRONNYST"
  },
  {
    "id": 1654,
    "db_id": "institution_sports",
    "question": "Return the stadiums of institutions, ordered by capacity descending.",
    "answer": "SELECT ouriable_stadium__2___ORDERBY____LIMIT__184350679StadiumInfoQueryResultForEachStadiumInStadiumGroupWithKeyImmutableGroupKeyOverrideOrdinaryGroupingStadiumConnectivityOscarDoubledStadiumsAndPleasantlySelectedIdeasAffidnityJacquelineTheAtlasoftheHolyQuartierstadiumcapacitydescendingstadiumgroupbyclarkgrp38941o7602d4cafelite2lichilofficiancent5StadiaInfoQueryResultForEachStadiumInStadiumGroupByKeyImmutableOridLimitedOscarDoubledStadiumsIdeasAffinitiesstadiumcapacitydescendinggroupbyclarkgrp38941o7602d4cafelite2limitalliancejacquolesfamilyQuartersofiaatlasofttheHolyquartierstadiofficiancent5StadiaInfoQueryResultForEachStadiumInStadiumGroupByKeyImmutableOrderbycapacitydescendinggroupbyclarkgrp38941o7602d4cafelite2limitalliancejacquolesfamilyQuartersofiaatlasofttheHolyquartierstadiumsorderbystadiumidimplementationStadiumInfoImpliationGroupOrderByKeyImmutableshowingroupmembershipsgroupbyclarkgrp38941o7602d4cafelite2lichildofencourancet5StadiaInfoQueryResultForEachStadiumInStadiumGroupByKeyImmutableOrLimitedOscarDoubledStadiumsIdeasAffinitiesgroupbyclarkgrp38941o7602d4cafelite2limitalliancejacquolesfamilyQuartersofiadasofttheHolyquartierstadiuminfoOrderByKeyImmutableshowingroupmembershipsStargedoubleselectsStadiumInfoQueryResultForEachStadiumInStadiumGroupbykeyimmutableorderbystadiumidOscarDoubledStadiagasIdeasAffinitiesgroupbyclarkgrp38"
  },
  {
    "id": 1655,
    "db_id": "institution_sports",
    "question": "What is the stadium of the institution with the largest enrollment?",
    "answer": "SELECT DISTINCT location_enrolledFROMENROLLMENTDESCENDANTINAINSTANCESTEMSchoolsByEnrollmentsQueryResultSETTOTALINSTALLATIONSISTEMLARGEINSTANCESCHOOLSBYENROLLSONGETotalinstancesinstancesstechoolscallSELECTLargestenrolledStadiumINSTITUTIONSIDESTeacherIsisstimetotimeLECTSELECTlargestEnrolledStuamINSTILACTUONSTaffandinstaNELastNAMEinStreakHAVESTOTALENROLIENSTELLHAVETIMEOFCOUNTRYDISTRIBUTEAFFINITYINSALLANCESINARELIKEOFFARDESCENDANTINSTANCESTIEMOELECTIONLargenestEnrolledStadiumINSTITUATIONTIMELookupinstancesstechoolscallSELECTlargestEnrolledStuaroadminLIMITSchoolsbyenrollmentsHAVETOTALENROLLMENTQUERYRESULTSCHATCTUSERSWITHHEAROFCOUNTRYDISTRIBUTEAFFINITYINSALLANCESINARELIKEOFFARDESCENDANTINSTANCESTIEMOELECTIONLargenestEnrolledStuamINSTUIDATIwithHEARTOFCOUNTRYDISTRIBUTEAFFINITYInsallanceinAreLikeFOREXPORLARGEENROLLMENTQUERYRESULTSCHOOLENDTABLEINSTITUTIONSIDESTEAMINSTALLATIONSINSTOOLARGESTUDYINSTANCESTEAMINSTELLHIGHFHoweilidinstancesstecholsohgiinstancesschoolsHAVETotalenrollmentQueryResulstSETIOTALINSTANCESCHOOLS2018293645SELBIASONAINSTANCESTUDYINSTALLATIONSSELECTLACTOFCOUNTRYDISTRIBUTEAFFINITYINSALLANCESINARELIKEOFFARDESCENDANTINSTANCESTIEMOELECTIONlargenestEnrolledStuaminstitutionstimelookupinstancesstecholscallSETOTALINSTL"
  },
  {
    "id": 1656,
    "db_id": "institution_sports",
    "question": "Give the stadium of the institution which is the greatest enrollment.",
    "answer": "SELECT TORPAL_STADIUM(*) FROM institution ORDER BY Enrollment LIMIT 1;"
  },
  {
    "id": 1657,
    "db_id": "institution_sports",
    "question": "What are the names and nicknames of institutions?",
    "answer": "SELECT SET_NAMESutf8GeneralMidwesternStateUniversitySelectionSetClientPreferencescurrentpreferrencetimeasinstituteandclientsetclientideatasetnextsocialloginformationsysteminformationproviderimplixtrawhoristinetitlesinenammingforplurals10thgenermontimothyis294x763phduncanbtifriendtelowtheensinstituationaliasnethomasysotheesheareandmyfamilybiblioengineeredomatidmghobhjohnsonitstudentgabrielemcgovernfreefroncynthoctober251046789competesectionedmontwighitelectsetclientideloginstituteandclientsetinternationallogginginfosysteminformationproviderimplixtrawhoristinetitanlugatiflucyfurnacenamadefaultinstitilcustomextensisstotennethomasysstudentgabrielemcgovernfreefromonthursday1254789competesectionedmontwighipopulationsetclientideloginfinsysteminformationproviderimplixtrawhoristinetitanlugatiflucyfurnacenamadefaultinstitilcustomextensisstotheesmykitchenownethanthisphduncanbgtimienkareinamericanguelfoandfriendofthouwhishthenschoolsinsinstitutionaliasnjohnshamsMORNAMESUCHENSET_NAMESutf8GENERAL_MIDWESTSTATEUNIVERSITYSELCT_NAMESutf8generalmidweststatuniversityselectionselectnamesininstitutionshipmanagementsysteminfosourcinginstsituationaliesseriofpatricksterralifuroubsequentlyinstitutionaliassimitechronologyinstancesfrominstitiationaliasinschoolinstitutionassociationsforsortynamesinstutorialiasexpeditioninmythrosgenericjohnsonitstudentgabrielomatidmanhapintimilinfosourcinginstsituationtionalieniasseriofpatricksterralingensupplierinstituteandclientinformationproviderimpliolistenamesforsortynamecnamem"
  },
  {
    "id": 1658,
    "db_id": "institution_sports",
    "question": "Return the names of institutions, as well as their nicknames.",
    "answer": "SELECT * FROM institution WHERE Name = \"Iron Mountain Institute\";"
  },
  {
    "id": 1659,
    "db_id": "institution_sports",
    "question": "What is the nickname of the institution with the smallest enrollment?",
    "answer": "SELECT inst_nicknameFROMInstitutionsORDERBYenrollmentslimIt01stInstitutSORTIONEYsalcolMinstoOrderByEnrOderbyEntliminOrdersimilaAnnullosstIsoTInsttituNULLElencntrlblkByEnrodybyenrollydLinstitutorderbystIncNomenklvoNDMINemnuNSimilinstitotientotyoinorderblyoNYsmallestinistuwenyousoinstitutionscansinstiwnsinstisnullpinsttituSELECTnicknameFROMInstitutionsORDERBYenrollmentslimIt01stInstitutSORTIONEYsalcolMinstoOrderByEnrOderbyEntliminOrdersimilaAnullosstIsoTInstUinstrumentorderbystIncNoLdorderboNymostinstuwetoonstackinstitutionscansistioinstitutionssinstiwnsimilnullpinsttituSELECTnicknameFROMInstitutionsORDERBYenrollmentslimIt01stInstitutSORTIONEYsalcolMinstoOrderByEnrOderbyEntliminOrdersimilaAnullosstIsoTInstUinstrumentorderbystIncNoLdYsmallestinsitutionscansilentnullpinsttituSELECTnicknameFROMInstitutionsORDERBYenrollmentslimIt01stInstitutSORTIONEYsalcolMinstoOrderByEnrOderbyEntliminOrdersimilaAnullosstIsoTInstUinstrumentorderbystIncNoLdYsmallestinsitutionscansilentnullpinsttituSELECTnicknameFROMInstitutionsORDERBYenrollmentslimIt01stInstitutSORTIONEYsalcolMinstoOrderByEnrOderbyEntliminOrdersimilaAnullosstIsoTInstUinstrumentorderbystIncNoLdYsmallestinsitutionscansilentnullpinsttituSELECTnicknameFROMInstitutionsORDERBYenrollmentslimIt01stInstitutSORTIONEYsalcolMinstoOrderByEnrOderbyEntliminOrdersimilaAnullosstIsoTInstUinstrumentorderbyst"
  },
  {
    "id": 1660,
    "db_id": "institution_sports",
    "question": "Return the nickname of the institution with the lowest enrollment.",
    "answer": "SELECT \"Bulacan\" WHERE Institution_ID = 'GI' ORDER BY Institution_ID , Enrollment ;"
  },
  {
    "id": 1661,
    "db_id": "institution_sports",
    "question": "List the names of institutions in descending order of the number of championships.",
    "answer": "SELECT name_institutionsFROMInstitutionsOrderByChampionshipDescENDIONHARDLINESQLITENSORDERBYCHAMPIONSHEPDESCLONGINSTITUTiNATIVELYINSTALLATIONSORTBEROFTWICHSHIPSPIECSEINSTI2BINSINSTANCECOULHBEINSTANCEDOLLHORVIS1SESSION3DPOSSIDISTRIBUTHESHOWCAKESINSTINSTRUCTURESTARINSTITUTIESWITHMAXCHAMPONSACHIPFAILSAFELTOPGRAPHLIMITESINSTITUTIATUSORDERBYCHAMPIONSHADESCEND2NDFORLOVEVERYHOURCHOLESACHAKEFAKENVER1CINSTANCIESORTBETWICHCHAMPIONSCHIPSACRONBUILDTAINTSCHOULDAUTHENTICATESFULFILLITIONSOFHCHALL2PICTLSTARRIDELECTUREINSTITUTIESWITHMAXCHAMPONSACHIPFILDBACKCHILLILOVEROGRAPHLIMITESINSTITU2013DESCENDLIMITESOFINSTR2BINSAINSTANCETOKENSORTBINTOTHERWICTHISHAKEFAKENSOFTWORLDNORMALGITHORNULLINSTANTIESWITHMAXCHAMPONSACHIPINSTALLATIONSORTORDERBYCHampionshipsdescENDFORLOVEVERYHOURCHOLESACHEFAKENVER1CINSTANCIESORTBETWICTHISHAKEFAKENSOFTWORLDNORMALGITHNULLINSTANTIESWITHMAXCHAMPONSACHIPINSTALLATIONSORTORDERBYchampionnsdescENDFORLOVEVERYHOURCHOLESACHEFAKENVER1CINSTANCIESORTBETWICTHISHAKEFAKENSOFTWORLDNORMALGITHNULLINSTANTIESWITHMAXCHAMPONSACHIPINSTALLATIONSORTORDERBYchampionnsdescENDFORLOVEVERYHOURCHOLESACHEFAKENVER1CINSTANCIESORTBETWICTHISHAKEFAKENSOFTWOR"
  },
  {
    "id": 1662,
    "db_id": "institution_sports",
    "question": "What are the names of institutions, ordered descending by their number of championships?",
    "answer": "SELECT Inst_NameFROMInstitutionsORDERBYNumberofChampionshipsDescNULLSOLIDATABASEMODULINKCANDTINSTITUTIONSOFCHAMPONSETSORTNAMEASCADEBOUGHAMPSdesc()\n  ENDCREATEPROJCTTABLEFORMASSPACEMODIFYQUERYADDNEWFIELDSREFUNDATAREANNEALORTPRODOWNSINCIDENTRESSTHESBEDATAPERTABLEANDRETURNTASKIDOTHERGHTNAMODEFROMCHRONOMASTINSTITUTIONSOFCHAMPIONSORTDATASET, ounfinstitutionsinsertsintoSELECTInst_NameASCollegeChampionshipshipscollectivetimesince2018fallSUMchronaftotalbysteaminthatyearSCJHNDatastandarddeviationfromstarsdasinstituteDINSTITUTIONSACTIVEEXPLORESULDOFQUERYGETCHAMPIONSSELECTInstitutionsOFTHEYAREFORMAKECARENAINDEPARTIDATAPERIODSINCIDENTRESSTHESBEDANOTHERGHTNAMORECREATEPROJCTTABLEFORNEWFIELDSORDERINSTITUTIONSAFEXPLOCHROMACEMENTSOFTHEYAREFUNDATASETASinstitutionsinsertsintoSELECTInst_NameFROMchronaftotalbysteaminthatyearSCJHNDataasetorderbynumberofChampionshipsdescNULLSOLIDATABASEMODULINKCANDTINSTITUTIONSAFEXPLORESULDOFQUERYGETCHAMPIONSORDEREDinstitutionsOFTHEYAREFORMAKECARENAINDEPARTIDEFORMALGORTNOINSTITUITIONSOFLIKECHRONOMASTINSTITUTIOSTHETIMESORTCOLLECTIVELIKECOMPLEXITYBIGGERINSTALLANCEHAVECHAMPIONSOTEXTENDEDINSTITUSNATIONSAMORECREATEPROJCTTABLEFORNEWFIELDSORDERINCENTROSTMANTABLONDATAPERIODESTHEREFOLLOWNEGHTSELECTInstitutionsOFTHYA"
  },
  {
    "id": 1663,
    "db_id": "institution_sports",
    "question": "List the names of institutions with at least one championship.",
    "answer": "SELECT Inst_NameFROMtblInstitutionsWHEREChampionshipScoreISNOTNULLGROUPBYInst_nameOrderByScoresDESC2186034597OrdersbyinstituteidINCNEWINSTITIATIONSTOTALGREMANUALLYFIRSTCHAMPSHIPONLISCOMUNITYDISTICTWORRDRSAFTABEGINDATEINCNEWINSTITUTIONTOTAL2186034597Afterchampshipshipscoreisnotnullgroupbyinst_nameOrderByScoresDESCGROUPCHAMPSHIPSTABLENDQUERYFORCHAMPSHISSCOREISNOTNULLGROUPBYINSTRNAMEQUANTITYINNMANUALLYFIRSTCHAMPSHIPONLISCOMUNITYDISTICTWORRDRSAFTAFGCHAMPSHIPPEDSCOPESTILLNEWEIGHTFOREXTOTAL2186034597Afterchampshipshipscoreisnotnullgroupbyinst_nameOrderByScoresDESCGROUPCHAMPSHIPSSCORESNOTNULLGROUPBYINSTNNAMEQUANTITYINNMANUALLYFIRSTCHAMPSHIPONLISCOMUNITYDISTICTWORRDSASFTABEGINDATEINCNEWINSTITUTIONTOTAL2186034597Afterchampshipshipscoreisnotnullgroupbyinst_nameOrderByScoresDESCGROUPCHAMPSHIPSSCORESNOTNULLGROUPBYINSNNAMEQUANTITYINNMANUALLYFIRSTCHAMPSHIPONLISCOMUNITYDISTICTWRITEQUERYFORCHAMPSHISSCOREISNOTNULLGROUPBYINSTNNAMEORDERBYCHRANCEDATEINCNEWINSTITUTIONTOTAL2186034597Afterchampshipshipscoreisnotnullgroupbyinst_nameOrderByScoresDESCGROUPCHAMPSHIPSSCORESNOTNULLGROUPBYINSNNAMEQUANTITYINNMANUALLYFIRSTCHAMPSHIPONLISCOMUNITYDISTICTWRITEFROMTOTAL2186034"
  },
  {
    "id": 1664,
    "db_id": "institution_sports",
    "question": "What are the names of institutions that have 1 or more championships?",
    "answer": "SELECT Name FROM Championship ORDER BY Institution_ID LIMIT 5;"
  },
  {
    "id": 1665,
    "db_id": "institution_sports",
    "question": "What is the total number of championship of institution with public affiliation?",
    "answer": "SELECT SUM(Team ), WHEREInstitutions_affiliation_publicenum()\n     ThemeSoccer, League_438510269andthesumsociuethechampionshipofinstitutionwithpublicaffiliaionsumsinbasketballandstokesthisnationalrecordisthechronyfchampionshipsinceityclubplayoffsoff(Championship.Institution_ID ), ithisreturntotalnumawardsporinthesoccerleagueinthisinstitutiontotalsociuetohasentbeenonthesacresolutiomofyouthandythiselectionprofiltothechronypracticeoffsofithecchiornynoontentnationalrecordisthechronydoubtfinishthisoccerleagueinthisinstitutionsummaryprovideshoreoutwiththecharmfortherequesttoaccessonlytotbetsomeonewhatwetheceidusonthisandsoforetmisolutiomofyouthandystokeverymuchmoreprivilegthecouncylegalguaranteethatnumber2345109institutions_affiliationgchampionshipsonUkEuACCEPTEDONETSETTOPICINSITUTIONS_AFFILIATIONSINGULARITYofthisinstitutiontotalsoccerleagueinthisindisplayedthathispapersandtheinstitutewihtihislastrumpetcampusrefusesreportingthisinstunitiyintohasenotifiedoitheinstantiatiousinstiationalnamecanbefriendlynamethiseinstitution10985sandinstidisplayedtihslastrumpetcampusafffinancierallyrecoursesforcoursequinteventsinthisleagueinfousatientiestoenthisloanwwanttotakeathclubcaresaferasuchasportsorceseventsinthesoccerleaguesinthisinstitutionthisisplayedthathispapersandtheinstitutewhislastrumpetcampusrefusesreportingthisinsunitityinthokeofyouthofthesthatdowntofthechronydountfinishthiscampaigninf"
  },
  {
    "id": 1666,
    "db_id": "institution_sports",
    "question": "Return the total number of championships of institutions that have a Public affiliation.",
    "answer": "SELECT COUNT(*) FROM institution WHERE Affiliation = 'Public';"
  },
  {
    "id": 1667,
    "db_id": "institution_sports",
    "question": "What are different types of affiliations of institutions and the corresponding number of institutions?",
    "answer": "SELECT Affiliation , COUNT(*) FROM institution;"
  },
  {
    "id": 1668,
    "db_id": "institution_sports",
    "question": "How many institutions are there for each type of affiliation?",
    "answer": "SELECT Affiliation_types1candose902746institutionseranintermediatedetentdee358OCTETSINALLAPARTnuminISTITLEsinPARANuminstitutionstobeobtainedfromDEVICEIOOBJdiagnosisafbeantoebevolbergasperandafteraffiliationtypebevolteiadvanceafberaudiobookingcandose927460138distinctofficeserareferencedfrompartditinstitutionstobeonemasterinparanoubiggerinparanisbn95pishthisitemsohbandinstantiatesubclassaffiliationtypeafbeantoebevoltieobserverandreviadvanceafberaudiopartcandose927460138distinctofficeserareferencedfrompartditinsitutionstobeonemasterinparanoubiggerinparanisbn95pishthisitemsohbandinstantiatesubclassaffiliationtypeafbeantoebevoltieobserverandreviadvanceafberaudiopartcandose927460138distinctofficeserareferencedfrompartditinsitutionstobeonemasterinparanoubiggerinparanisbn95pishthisitemsohbandinstancesubclassaffiliationtypeaafbeantoebevoltieobserverandrefreviadvanceafberaudiopartcandose927460138distinctofficeserareferencedfrompartditinsitutionstobeonemasterinparanoubiggerinparanisbn95pishthisitemsohbandinstancesubclassaffiliationtypeaafbeantoebevoltieobserverandrefreviadvanceafberaudiopartcandose927460138distinctofficeserareferencedfrompartditinsitutionstobeonemasterinparanoubiggerinparanisbn95pishthisitemsohbandinstancesubclassaffiliationtypeaafbeantoebevoltieobserverandrefreviadvanceafberaudiopartcandose927460"
  },
  {
    "id": 1669,
    "db_id": "institution_sports",
    "question": "What is the most common type of affiliation for institutions?",
    "answer": "SELECT nameFROMInstitutionsORDERBYcount(*)ASMNISTTYPEOFCONNECTIONSINSTITUTIONS\n  ORDER BY \"name\" ASC;"
  },
  {
    "id": 1670,
    "db_id": "institution_sports",
    "question": "Return the most common type of affiliation across all institutions.",
    "answer": "SELECT name_of_type(institution_sports.institution.Institution_ID )FROM institution ORDER BY Stadium LIMIT 1;"
  },
  {
    "id": 1671,
    "db_id": "institution_sports",
    "question": "In which years were more than one institution founded?",
    "answer": "SELECT nameFROMProvinceOrderBy(Founded )ASMEXEIRA WHERE Founded > 2\n    GROUP BY Name ORDER BY Affiliation ;"
  },
  {
    "id": 1672,
    "db_id": "institution_sports",
    "question": "Return the years in which more than 1 institution was founded, as well as the number of institutions founded in each of those.",
    "answer": "SELECT institutioNs_withindenfoFedENERance_asoBethTKHENumberOFinstitAscaDISTINCTnumofinstitASecundCHENORInstitutionnameCHANBertrangLEinstITATIONname102035648numberofinstitATWONDERInstituteinfoChicagoHaven_andChelseaHaifaxChambawshankMichaelsownFCCBANCOstaclaveinstitutiATLANTHeinstiterinstitutionCHANGFoundationdateinstITLaNORInstitCALENVinstittensfoundbewareinstituteinfoinstitaATLSOFTwareHAVEinstiteisstudiofoundersCHENMEinstutanieinstitCAFEDERinstitutname104572983institutionChangfoundationdateinstiTInstituteinfoChicagoHaifaxChambawshankMichaelsownFCCBANCOinstitutiaATLANTHeinstitutCHANGFounderinstutieinstitCAFEinstitanewidfundersCHENMEinstituCANFindersinstitutionname104572983institutionChangfoundationdateinstiTInstituteinfoChicagoHaifaxChambawshankMichaelsownFCCBANCOinstitutiaATLANTHeinstittCALENDFounderinstutieinstitCANFindersCHENMEinstituCATLANTHeinTInstitutionname104572983institutionChangfoundationdateinstiTInstituteinfoChicagoHaifaxChambawshankMichaelsownFCCBANCOinstitutiaATLANTHeinsUinstitCALENFounderinstutieinstitCANFindersCHENMEinstituCATLANTHeinTInstitutname104572983institutChangfoundationdateinstiTInstituteinfoChicagoHaifaxChambawshankMichaelsownFCCBANCOinstitutiaATLANTHeinsUinstitCALENFounderinstutieinstitCAN"
  },
  {
    "id": 1673,
    "db_id": "institution_sports",
    "question": "List the nicknames of institutions in descending order of capacity.",
    "answer": "SELECT Instit_nameFROMInstitutionsORDERBYCapacityDescENDROWCOUNTfirstOftheyearinstitutsembattn1976523408feilurlatsofcaohashtableorderbycapaciNULLThedbeintothelastinitsiationalpostaonoftheinstitudistidtidtidINSTITU_NAMEORDERBYCapacityDescendingquanitiynonallybroadcastingtheinstitutionoftheyearinstitutionsisinactinstituteofridayinstitiliescanbedonepthtimianorderbycapacinstanceqfinstitutenamecanbebroadcastedinstensidereditoflastnamecanonlyaccessinstidfromthisdbcidfromthisotherinstiationalpostaonoftheinstitutionistidtidinstituteofficetalognametofthefirstinstitiolastonextinstituletypefnextinitsilinstiationtypefinstitiionalnameandothersfilenulllastinstitanamelinthisninstutilitynullifixtimestampinstittypefixtraceinstitutiontypefixturesourcesinstitutenamecanbedonextinstiationalpostaonoftheinstitioinstidtidinstituteofthefirstinstitiologinstypefnextinstiationnameandothersfilenulllastinstiantypeinameandotherspathinstutilitynullifixtimestampinstittypefixtureinstituletypefinishtypenamecanbedonextinstiationalpostaonoftheinfinitiolasttypefixturesourcesinstitutionidorderbycapacitydescendingquanitynouslybroadcastingtheinstitutioftheyearinstitiutionsinstituteofridayinstitieostartninthinstituletypefinishtypenamecanbeaccessedinthisotherinstiationnameandothersfilenulllastinstiantionameandotherspathinstutilitynullifixtimestampinstittypefixtureinstitutiontypefixturesourcesinstitutidorderbycapacitydescendingquanitouslybroadcastingtheinstanceofyearinstituletiominfinstitiobianfridayinstituteofridaysinstitisemanthaninstieuletypefinishtypenamecanbedonextinstiationnameandothersfilenulllastinstiantionameandothersp"
  },
  {
    "id": 1674,
    "db_id": "institution_sports",
    "question": "What are the nicknames of institutions, ordered descending by their capacities?",
    "answer": "SELECT \"Institution\", t1_capacityFROM(institution_sports.Capacity )ORDER BY institution_sports.\"Institution\" DESC\n  LIMIT 20;"
  },
  {
    "id": 1675,
    "db_id": "institution_sports",
    "question": "What are the total enrollment of institutions in city `` Vancouver '' or `` Calgary '' ?",
    "answer": "SELECT ucount(*) FROM institution;"
  },
  {
    "id": 1676,
    "db_id": "institution_sports",
    "question": "Return all the enrollments of institutions in either the city of Vancouver or the city of Calgary .",
    "answer": "SELECT id_institutesenrollmentFROMInstitutelistenshipOrInstittiateYaSORTPressoortclasstheCityOfVancouverorCalgariOTHERinstitutionsENROLLMENTINTOINSTITLEXTENPROVESORTUSAUSEQUERY(\"SELECT id_institutesenrollmentFROMInstitutelistenshipOrInstittiateYaSORTPressoortclasstheCityOfVancouverorCalgariOTHERinstitutionsENROLLMENTINTOINSTITLEXTENPROVESORTUSAUSEQUERY(\");"
  },
  {
    "id": 1677,
    "db_id": "institution_sports",
    "question": "Show the provinces that have both institutions founded before 1920 and institutions founded after 1950.",
    "answer": "SELECT DISTINCT Province_nameFROMInstitutionsHAVETOOTCHEEPTIMEYRIXICAATINSTITUTIONFIRSTBFOREVYEARSHALLAPROVINCEsfid_BufrillGermanyInvestorDiplomontSophorelleGraftFoxtartProvincefid_TomeOfficialnameIs1920BeforeInstitutionsfirstbeforeinstitutionslastInsinstitutionafter1950BinstalationsAfter1950Nonethelessnootherstanzinstitutionsancientinstancesinceuncoupensetroupeinstitutionsinsideinstitutionsafteirdoublochprovincesofyrixtrifecencyafter1950andbefore1920ORDERBYCITYSOFTICENAMEINSTITUATION_IDOFFICEOFYRICTRIFEXCENYEARLTIMESTROKEWHILEFORENDISTINCIOMNATURALGREMANTPROMOTEGODSHOWINS3679518FIRSTPROVINCEOCCUPANEDPROMOTETHOREINSTITUTIONSTAYWORRYPLETTESHOWCANTBEFORENIGUENTWITHFELLIEVENOFYRICTRIFEXENCYEARLTIMESTROKEWHILEGONEINSTITUTEINSTANCEAFTER1950ANDB4FURIDOCONTRIBUTORNATIONALDISTINCTIVELNOCAKEINSTITUATONALTIONAFTER1950ANDB4FURIHAVEDUBLOCHINSTITIQUSETNOINSTITUTEINSTANCEFOREACHYELLOinstitutions_thatotherstakeuplianonlolabadoublochprovincesofyrixtrifecencyafter1950andbefore1920ORDERBYCITYSOFTICENAMEInstitutionIDsintidistinctinstancesinceuncoutensetroupeinstitutionsinsideinstitutionsafteirdoundanciepensetroupeinstitutionsinsofficialnameis1950after"
  },
  {
    "id": 1678,
    "db_id": "institution_sports",
    "question": "What are the provinces that have not only institutions founded before 1920, but also institutions founded after 1950?",
    "answer": "SELECT \"institution_owner\" FROM (SELECT name_of_the_province_in_dbnameFROMProvinceLefT(City )) AS t WHERE Name = 'Mayabid'\n    GROUP BY Institution_ID ORDER BY Founded LIMIT 2;"
  },
  {
    "id": 1679,
    "db_id": "institution_sports",
    "question": "How many distinct provinces are the institutions in?",
    "answer": "SELECT COUNT(*) FROM institution;"
  },
  {
    "id": 1680,
    "db_id": "institution_sports",
    "question": "Count the number of different provinces that have institutions.",
    "answer": "SELECT TA15_2013_ProvincesThatHaveInstitutionsInAsperaDiagdown49786DistinctProvinceNameInOrderByStreetsLimit(Number_of_Championships );"
  },
  {
    "id": 1681,
    "db_id": "warehouse_1",
    "question": "Select all details of all warehouses.",
    "answer": "SELECT * FROM Warehousess;"
  },
  {
    "id": 1682,
    "db_id": "warehouse_1",
    "question": "What is all the information about the warehouses?",
    "answer": "SELECT udw_idm_whsdeta1nhwz09273456tghjpoqpwsedstunewhoacturessuspendenotonlythebesonethingwithnamefreshinfofromthefirstoftwonothingisallowedoreffectsonerioderssionandputtakesupportthisactivitycandidatewhitemyidisonethanameinfrawarehousesideeffectraceeffectonshielocked(warehouse_1.Warehouses.Warehouse ), thisonehasallthedetailsaboutitactuallyisalltheinformationyouneedtootherwisehousetherectivityofthishandlebecoumpletelifeseedbathreceiptnotonlyvalidpindetailsonethingwithnamefreshinfowherewefo5orecipbonwarehoovethislocked(warehouse_1.Warehouse ), thisonehasallthedetailsaboutitactuallyisalltheinformationyouneedtootherwisehowtelogthisandlogthishandlebecoumpletelifeseedbathreceiptnotonlyvalidpindetailsonethingwithnamefreshinfowherefo5orecipbonwarehoovethislocked(warehouse_1.Warehouse )\n  This WHERE Code  IN (SELECT * FROM Boxes WHERE Boxes.Code  = 23467890)    \n      \n   \n     \n          \n       \n           \n             \n         \n        \n            \n              \n                  \n               \n                 \n                \n                   \n                    \n                       \n                         \n                        \n                           ORDER BY Boxes.Code , Boxes.Code   LIMIT 350;"
  },
  {
    "id": 1683,
    "db_id": "warehouse_1",
    "question": "Find all different contents stored in New York.",
    "answer": "SELECT DISTINCT * FROM Boxes WHERE Location  =  \"New York\";"
  },
  {
    "id": 1684,
    "db_id": "warehouse_1",
    "question": "What are all the different contents stored in boxes in New York?",
    "answer": "SELECT DISTINCT content_nameFROMBoxesInNewYorkWHEREboxStateidcodeinbirthAshoretentstoredindifferentcontentsrownumber1286940357contentisfrompropernickpicksfestivaldifftypersonalandlovingonlythesafereplacenonwardiscoupletypestayskinnyckeyliftingstationareffectivelycontentidsequenceshowsthanthisone1286940357butdoornondatastorernnysourcecodeinboxproblematypeothersidefifitpicksoffriendlyandlovelynormalckeypickingpersonallovehignonwardiscoupletypeselectedcontentisstoredindifferentcontentsrownumber1286940357butondatastorethatthisidcodeinboxproblematypeothersideifitpickssoffriendlyandloveloqnponentlivescourcecodelikehowsonwehicantypeselectedcontentisstoredindifferentcontentsrownumber1286940357butondatastorethatthisidcodeinboxproblematypeothersideifitpickssoffriendlyandloveloqnponentlivescourcelikehowsonwehicantypeselectedcontentisstoredindifferentcontentsrownumber1286940357butondatastorethatthisidcodeinboxproblematypeothersideifitpickssoffriendlyandloveloqnponentlivescourcelikehowsonwehicantypeselectedcontentisstoredindifferentcontentsrownumber1286940357butondatastorethatthisidcodeinboxproblematypeothersideifitpickssoffriendlyandloveloqnponentlivescourcelikehowsonwehicantypeselectedcontentisstoredindifferentcontentsrownumber1286940357butondatastorethatthisidcodeinboxproblematypeothersideifitpickssoffriendlyandloveloqnponentlivescourcelikehowsonwehicantypeselect"
  },
  {
    "id": 1685,
    "db_id": "warehouse_1",
    "question": "Select contents of all boxes with a value larger than $150.",
    "answer": "SELECT contentsOfBoxWithValueGreaterThan(Boxes.Contents ), contentsofboxwithvaluengreaterthan_returns_null()\n    ReturnsNullIfAllValuesareBeloworAtTheStartOfTheListImpliesReturnsNull\n            FROM Boxes;"
  },
  {
    "id": 1686,
    "db_id": "warehouse_1",
    "question": "What are the contents of boxes with value greater than 150?",
    "answer": "SELECT * FROM Boxes WHERE Value  > 150\n    ORDER BY Value ;"
  },
  {
    "id": 1687,
    "db_id": "warehouse_1",
    "question": "Select the warehouse code and the average value of the boxes in each warehouse.",
    "answer": "SELECT t25103_46978WhsalesmanandboxesWarehousecodeavgvalueofthewarehousesinWAREHOUSECODEINtheendOfTHEENDCompoundstatementThefollowingisastringof4LetterlettersthewarehousenameaheadOFtoeillogbookingthefirstpurchasethesecondware170386sailboxesinwholangatheringthiseveryoneintotheyearandforloiththere12CompoundstatementThefollowingisastringof4LetterlettersTWarehousecodeaheadOFtoeillogbookingthefirstpurchasethesecondware170386sailboxesinwholangatheringthiseveryoneintotheyearandforloiththere2CompoundstatementThefollowingisastringof4LetterlettersTWarehousecodeaheadOFtoeillogbookingthefirstpurchasethesecondware170386sailboxesinwholangatheringthiseveryoneintotheyearandforloiththere2CompoundstatementThefollowingisastringof4LetterlettersTWarehousecodeaheadOFtoeillogbookingthefirstpurchasethesecondware170386sailboxesinwholangatheringthiseveryoneintotheyearandforloiththere2CompoundstatementThefollowingisastringof4LetterlettersTWarehousecodeaheadOFtoeillogbookingthefirstpurchasethesecondware170386sailboxesinwholangatheringthiseveryoneintotheyearandforloiththere2CompoundstatementThefollowingisastringof4LetterlettersTWarehousecodeaheadOFtoeillogbookingthefirstpurchasethesecondware170386sailboxesinwholangatheringthiseveryoneintotheyearandforloiththere2CompoundstatementThefollowingisastringof4LetterlettersTWarehousecodeaheadOFtoeillogbookingthefirstpurchasethesecondware170386sailboxesin"
  },
  {
    "id": 1688,
    "db_id": "warehouse_1",
    "question": "What is the average value of boxes for each warehouse?",
    "answer": "SELECT WAREHOUSE_ID3574106829WHERE(Warehouses.Warehouse ), boxes_number__fasterboxs_2pctin___morethanoneotherwarehousetotwelveeighteenaveragevaluesofboxesthatthisandwhoreventimetrunasimpletwoqueryresultsaggregatefunctionstrisusedtotryoutallthisqueriesaggregatelasttysomethingthatlooksayfasterboxsthanthisfortraysboxesboxid_432768190averagevaluesof(Warehouse ), boxeBoxId__belowaboveoneotherwarehoothersoneotherwarehousetothewelfortunearilaggregatelasttysomethingthatlooksayfasterboxsthanthisfortraysboxesboxid_432768190averagevaluesof(Warehouse ), boxeId__belowoneanotherwarehoothersoneotherwarehousetothewelfortunearilaggregatelasttysomethingthatlooksayfasterboxsthanthisfortraysboxesboxid_432768190averagevaluesof(Warehouse ), boxeId__belowaboveotrewarehoothersoneotherwarehousetothewelfortunearilaggregatelasttysomethingthatlooksayfasterboxsthanthisfortraysboxesboxid_432768190averagevaluesof(Warehouse ), boxeId__belowabootherwarehoothersoneotherwarehousetothewelfortunearilaggregatelasttysomethingthatlooksayfasterboxsthanthisfortraysboxesboxid_432768190averagevaluesof(Warehouse ), boxeId__belowaboveotrewarehoothersoneotherwarehousetothewelfortunearilaggregatelasttysomethingthatlooksayfasterboxsthanthisfortraysboxesboxid_432768190averagevaluesof(Warehouse ), boxeId__belowaboveotrewarehoothersoneotherwarehousetothewelfortunearilaggregatelasttysomethingthatlooksayfasterbox"
  },
  {
    "id": 1689,
    "db_id": "warehouse_1",
    "question": "Find the average and total values of all boxes.",
    "answer": "SELECT box_idHAVG15928306DISTZ74C2L6FTOXMIDGETSBOXESCOUNTISASASBOYCASS1boxesinfoboxesAREFtoboxscountisasbasetcablestoFETNBOXTOTALOFHAVG15928306DISTZ74C2L6FTOXMIDGETSBOXESCOUNTISAFINBOOKINGSOFTHEARDINTRANSACTIOHAVENOGATITUSANDISSBOYCASTOTALOFHAVELIDTOTOLTOTALOFHASDOUBLEBOXTOTALOBJEFFORTOTALOBJECTOTOTAL20159346DISTZ78C2SCHIPBINFTOTALOFTNETOISBOXESCOUNTREFRESHNTOOLFHAVELIDTOFIBOXCOPYABSTOTALEMPATROLYFOLLOWCASSIASBOYCASEXTOTALOBJEFFORLGTOTALOFHADOUBBBOXESCOUNTISAFINBOOKINGSTOTANOBJECTLTOTAL20159346DISTZ78C2SCHIPBTOTALOFLIGHTNBOXESCOUNTREFRESHNOGFIVELIDTOFBOXCOPYABSTOTALEMFOLLOWCASSIASBOYCASEXTOTALOBJEFFORLGTOTALOFHADOUBBBOXESCOUNTISAFINBOOKINGSOFTNBOXETOTOLTOTAL20159346DISTZ78C2SCHIPBTOTALOFLIGHTNBOXEXREFRESHNOGFIVELIDTOFBOXCOPYABSTOTALEMFOLLOWCASSIASBOYCASEXTOTALOBJEFFORLGTOTALOFHADOUBBBOXESCOUNTISAFINBOOKINGSOFTNBOXETOLTOTAL20159346DISTZ78C2SCHIPBTOTALOFLIGHTNBOXEXREFRESHNO"
  },
  {
    "id": 1690,
    "db_id": "warehouse_1",
    "question": "What are the average and total values across all boxes?",
    "answer": "SELECT umpire_id
  },
  {
    "id": 1691,
    "db_id": "warehouse_1",
    "question": "Find the average and total capacity of all warehouses.",
    "answer": "SELECT avg(Capacity ) FROM Warehousesp WHERE Location  =  \"New York\";"
  },
  {
    "id": 1692,
    "db_id": "warehouse_1",
    "question": "What are the average and total capacities across all warehouses?",
    "answer": "SELECT irst_name18504972averageandtotalcapaciexcludingnonsortwarehouseidInWAREHOUSESUMMARYTABLEGROUPBYWarehouseIDAndSubs(warehouse_1.Warehouse ), \"Cube Capacity is calculated in the following way: (sum of product quantities) X (Product Quantity Units x Fractional Design & Build Up to Hours and Minutes of Operation x Days there\u2019s-and-\u00e3is No Cost Oscillation).\n<?total_capacity = total / 1024. NULL; //calculate the capacity in bytes, then divide by this number for each warehouse ID Get results where id is not equal to @param:ignore) AS avg/mulin.erreign; maketakeplaceholdernamefirst(L&quot;%3Eid); 49025aecbe6+Warehousesummarytablegroupbywa\nore_1, \"WHERE Code =\" + id).CUBE_TABLEGROUPBYWAREHOUSEIDANDIDS) { //get the cube table group by warehouse ID and its ids WAREHCASEMAPPINGSELECTfirst(L&quot;id); 49025aecbe6+Warehousesummarytablegroupbywa\nore_1, \"GROUP BY Code ORDER BY warehouse_1.Capacity , warehouse_1.Capacity , Warehouse  \n\n \n   \n\n\n\n\n\n     \n    \n      \n       \n        \n          \n             \n         \n           \n            \n              \n                \n               \n                 \n                    \n                     \n                        \n                            \n                              \n\n\n\n\n\n\n\n\n                                          \n\n\n                                                  \n                                                   \n\n                                                      \n  \n   \n \n    \n     \n         \n           \n              \n            \n             \n               \n              \n                \n                 \n                    \n                     \n                       \n                        \n                          \n                           \n                            \n                             \n                              \n\n\n\n\n\n\n\n\n\n                                          \n\n\n\n       \n"
  },
  {
    "id": 1693,
    "db_id": "warehouse_1",
    "question": "Find the average and maximum value for each different content.",
    "answer": "SELECT rownumberfromcontenttableastattheendofcyclecountcontentcaughtotherefortotalcontentsaccessedbycontentidSELECTcontentidFROMcontentstotalaccessedbycontentidINORDERBYcontentidusedincalctotaldurationandrepeatduratioNacTENTIDANDFOROREDPICUPUMSURFACECONTENSACCESSIBGAVEDURATIOMAXIMIUMFORLASTCONTENCAUHTOTALCONTENTSACCESSEDBYIDSELECTAVGEQUERYMAKEUTRAFRUNSFROMTABLEASTFURNTILYHAVEAGREGETTONTENTCONTENTIDHAVEASAVERAGEQUERYMAKEMOREUPURUSFACECONTENSACCESSIBGAVEDURATIOMAXIMIUMFORLASTCONTENCAUHTOTALCONTENTSACCESSEDBYIDSELECTAVGEQUERYMAKEUTRAFREIQUENCYGETTONTENTCONTENTIDHAVEASAVERAGEQUERYMAKEMOREUPUSFACECONTENSACCESSIBGAVEDURATIOMAXIMIUMFORLASTCONTENCAUHTOTALCONTENTSACCESSEDBYIDSELECTAVGEQUERYMAKEUTRAFOUNDRUNSFROMTABLEASTFURNYHAVEAGGETTONTENTCONTENTIDHAVEASAVERAGEQUERYMAKEMOREUPUSFACECONTENSACCESSIBGAVEDURATIOMAXIMIUMFORLASTCONTENCAUHTOTALCONTENTSACCESSEDBYIDSELECTAVGEQUERYMAKEUTRAFOUNDRUNSFROMTABLEASTFURNIGHTOTBEFOREMIGRATIONDOGFIRSTCONTENTTEXTIDHAVEASAVERAGEQUERYMAKEINITIATIVELYHAVEAGGETTONTENTCONTENTIDHAVEASAVERAGEQUERYMAKEMOREUPUSFACECONTENSACCESSIBGAVEDURATIOMAXIMIUMFORLASTCONTENCAUHTOTALCONTENTSACCESSEDBYIDSELECTAVGEQUERYMAKEUTRAFOUNDRUNSFROMTABLEASTFURNIGHTOTBEFOREMIGRATIONDOGFIRSTCONTENTTEXTIDHAVEASAVERAGEQU"
  },
  {
    "id": 1694,
    "db_id": "warehouse_1",
    "question": "What are the average and maximum values for each type of content in boxes?",
    "answer": "SELECT DISTINCT T1_content_type_code3875a2fkd906bfFHIDecimalPoint4E4hfsafERC6ChargeCoordinatoridEmotionlityIdMcAdContentRideidEmailsendercontentboximpercordintypesacrhembreservationmakeloadercontentgroupcontenttypecodeeaxhibitcontentproxylastkcontentpinextensionexplicitextentitiescontenttypesthatlightedsthomarencourcesincontentbrowsinggrouptoptenecyclonexamplecontextmanagercontenttypeselectionththeaveragevaluemaximumvaluesfororak40568afcbe3fa2d1fhifracieblinkContentcoordinatoridEmailsendercontentboximpercordintypesacrhematshavevalueincontentbrowsinggrouptoptenecyclonexamplecontenttypeselectiontheaveragevaluemaximumvaluesfororak40568afcbe3fa2d1fhifracieblinkContentcoordinatoridEmailsendercontentboximpercordintypesacrhematshavevalueincontentbrowsinggrouptoptenecyclonexamplecontenttypeselectiontheaveragevaluemaximumvaluesfororak40568afcbe3fa2d1fhifracieblinkContentcoordinatoridEmailsendercontentboximpercordintypesacrhematshavevalueincontentbrowsinggrouptoptenecyclonexamplecontenttypeselectiontheaveragevaluemaximumvaluesfororak40568afcbe3fa2d1fhifracieblinkContentcoordinatoridEmailsendercontentboximpercordintypesacrhematshavevalueincontentbrowsinggrouptoptenecyclonexamplecontenttypeselectiontheaveragevaluemaximumvaluesfororak40568afcbe3fa2d1fhifracieblinkContentcoordinatoridEmailsendercontentboximpercordintypesacrhematshavevalueincontentbrowsinggrouptoptenecyclonexamplecontenttypeselectionthea"
  },
  {
    "id": 1695,
    "db_id": "warehouse_1",
    "question": "Find the content that has the highest total values in all boxes.",
    "answer": "SELECT ALLTOTALVALUESINBOXESSELECTALLCONTENTWITHHIGHESTTOTALVALUEINBOXESORDERBYLONGESTVALUEINTOXESPROPERTIESGROUPBYLONGESTVALUEINTOXESFIRSTGROUPIDSELEXTALLBOXESISIDEX1OPTIONSSELECT_ALLFROMtOTALVALUENOBOOKSDEGREEBOXESORTLONGESTVALUEINTOXESIS256409387GRANDVALUETOTALVALUEINBOXESGROUPBYFIRSTKEYLAG1OFX1SELECTIONBOXTOTALVALUETOTALVALUEINBOXESSELECT_ALLFROMtOTALVALUENOBOOKSDEGREEBOXESORTLONGESTVALUEINTOXESIS256409387GRANDVALUETOTALVALUEINBOXESSELECT_ALLFROMtOTALVALUENOBOOKSDEGREEBOXESORTLONGESTVALUEINTOXESIS256409387GRANDVALUETOTALVALUEINBOXESGROUPBYFIRSTKEYLAG1OFX1SELECTIONBOXTOTALVALUESINBOXESOPTIONSSELECT_ALLFROMtOTALVALUENOBOOKSDEGREEBOXESORTLONGESTVALUEINTOXESIS256409387GRANDVALUETOTALVALUEINBOXESGROUPBYFIRSTKEYLAG1OFX1SELECTIONBOXTOTALVALEXESOPTIONSSELECT_ALLFROMtOTALVALUENOBOOKSDEGREEBOXESORTLONGESTVALUEINTOXESIS256409387GRANDVALUETOTALVALUEINBOXESGROUPBYFIRSTKEYLAG1OFX1SELECTIONBOXTOTALEXESOPTIONSSELECT_ALLFROMtOTALVALUENOBOOKSDEGREEBOXESORTLONGESTVALUEINTOXESIS256409387GRANDVALUETOTALVALUEINBOXESGROUPBYFIRSTKEYLAG1OFX1SELECTIONBOXESOPTIONSSELECT_ALLFROMt"
  },
  {
    "id": 1696,
    "db_id": "warehouse_1",
    "question": "What is the content with the greatest value across all boxes?",
    "answer": "SELECT MAX(*) FROM Boxes\n  WHERE Contents = (SELECT TIME_STAMP()FROM Boxes)  \n    ORDER BY Value , \"Content\" DESC;"
  },
  {
    "id": 1697,
    "db_id": "warehouse_1",
    "question": "Select the average value of all the boxes.",
    "answer": "SELECT AVG(Value )FROM Boxes;"
  },
  {
    "id": 1698,
    "db_id": "warehouse_1",
    "question": "What is the average value of boxes?",
    "answer": "SELECT AVERAGE(*) FROM Boxes\n  WHERE Boxes.Code  =  \"Box2\"    LIMIT 1;"
  },
  {
    "id": 1699,
    "db_id": "warehouse_1",
    "question": "Select all distinct contents in all the boxes.",
    "answer": "SELECT all(*) FROM Boxes ORDER BY Contents  \n   \n \tLIMIT 5;"
  },
  {
    "id": 1700,
    "db_id": "warehouse_1",
    "question": "What are the different contents in boxes?",
    "answer": "SELECT questions_involvingboxescontentsthatmightbeusedtohelpmakeapersonangingroupwiththeseotherthanx204136789givesanoxchangefullnameoftheoneboxtextcontentthekeythenowhowmanymorequestionsmarkthismustbmaintideventsovereikedhmoghtomcanyouguykenoreventsolomonicstbainfoinfomanotherthanx204136789givesanoxchangefullnameoftheoneboxtextcontentthekeythenowhowmanymorequestionsmarkthismustbmaintideventsoverei_kedhmoghtomcanyouguykinoreventsolomonicstbainfoinfomanotherthanx204136789givesanoxchangefullnameoftheoneboxtextcontentthekeythenowhowmanymorequestionsmarkthismustbmaintideventsoverei_kedhmoghtomcanyouguykinoreventsolomonicstbainfoinfomanotherthanx204136789givesanoxchangefullnameoftheoneboxtextcontentthekeythenowhowmanymorequestionsmarkthismustbmaintideventsoverei_kedhmoghtomcanyouguykioreventsolomonicstbainfoinfomanotherthanx204136789givesanoxchangefullnameoftheoneboxtextcontentthekeythenowhowmanymorequestionsmarkthismustbmaintideventsoverei_kedhmoghtomcanyouguykiosolomonicstbainfoinfomanotherthanx204136789givesanoxchangefullnameoftheoneboxtextcontentthekeythenowhowmanymorequestionsmarkthismustbmaintideventsoverei_kedhmoghtomcanyouguykiosolomonicstbainfoinfomanotherthanx204136789givesanoxchangefullnameoftheoneboxtextcontentthekeythenowhowmanymorequestionsmarkthismustbmaintideventsoverei_kedhmoghtomcanyouguykiosolomonicstbainfoinfomanother"
  },
  {
    "id": 1701,
    "db_id": "warehouse_1",
    "question": "Find the number of all distinct contents in all the boxes.",
    "answer": "SELECT count(*) FROM Boxes;"
  },
  {
    "id": 1702,
    "db_id": "warehouse_1",
    "question": "How many different contents are stored in boxes?",
    "answer": "SELECT COUNT(*) FROM Boxes\n  WHERE Contents <> 'N' ORDER BY \"Content Size\" DESC;"
  },
  {
    "id": 1703,
    "db_id": "warehouse_1",
    "question": "Find all distinct locations of warehouses.",
    "answer": "SELECT Details(Warehouse ), wherewarehouse_countsfromstockinstoreapp_datawarehouse_modelimportpybysourceApisinestockinstoreapp_datawarehoseecosystemaccessiblewholbenedistinctlocationsofwarehousesuitableforwemovelikelyretrievedfromthedatabaseorwhilesometherequiredatafromwhereextrastronglyneedtotypemythiestrategysetsortthedistancysinrowsorderforthewarehousestrungthewarehouseecosystemaccessibleholegotowewnamesoflocationsoftypewarehousesorwhotherefreeshowwelistransortsortthedistanceynrowsthewereareasorttheareasortthisaresortthisareastartthisstartthisendthisendthisendthisendthisendthisendthisendthisendthisendthisend90percentofthetotaltheseemsortedthisendforthisisortthisthisisosortthisthisissortthisitthisitthisitthisitemthisherextendedthisidthisetcetextendsthisdhisetcetextendsthisdhisetcetextendsthisdhisetcetextendsthisdhisetcetextendsthisdhisetcetextendsthisDHISecopyecoEinstretreatemysortthisdisortthisisortThisIsosortthisIsoRtthisItiIDthisidthisiwidelengoflocationdetailsthislocationsofwarehousesuitableforwemovelikelyretrievedfromthedatabaseorwhilesometherequiredatafromwhereretrievefromtherowsortthedistanceynrowsorderforthewarehouseSetThisOrderTo(warehouse_1.Warehouse ), whereinventorycountsfromstoreapp_datawarehosecosecondistinstoreapp_datawarehosecowarehouseecosystemaccessiblewhentimesortthedistancysinrowsorderforthewarehoewriteusermacnobythesecemosortthisendthisisortThisIsosortThiIoIIdthisidHerextendingthisIDthisoflocationdetailslocationsofwarehousesuitableforwemovelikelyretrievedfromthedatabaseorwhilesometrequiredatafromwhereretrievefromtherowsortthedistanc"
  },
  {
    "id": 1704,
    "db_id": "warehouse_1",
    "question": "What are the different locations of warehouses?",
    "answer": "SELECT location_name(warehouse_1.Warehouse )\n     FROM Warehouses;"
  },
  {
    "id": 1705,
    "db_id": "warehouse_1",
    "question": "Find the code of boxes that are stored at the warehouses located at Chicago or New York.",
    "answer": "SELECT location_codeFROM(warehouse_1.Warehouse )UNIONALLYOURSELCTLOCATIONCODEINTOAREAEQ250\n  WHERE Location  IN (SELECT locatioN_CodeGinboxesWHERELOCAtionIsNotInHElIcHeWeFINDtOCA(warehouse_1.Warehouse )CROSSwEEKLCLIONNEQ37250)\n   ORDER BY Location \tLIMIT -49;"
  },
  {
    "id": 1706,
    "db_id": "warehouse_1",
    "question": "What are the codes of boxes stored in warehouses in either Chicago or New York?",
    "answer": "SELECT cate_boxes2013aWarehouseExceptChicagoNewYork()\n    FROM  WHERE Code = 'C' ORDER BY Location LIMIT 5;"
  },
  {
    "id": 1707,
    "db_id": "warehouse_1",
    "question": "Find the total value of boxes in the warehouses located at Chicago or New York.",
    "answer": "SELECT \" +\n  __TABLE__.boxes_table.__FIELDS__) AS boxvalue FROM (SELECT location, SUM(CASE WHEN LOCATION  =  'Chicago' OR LOCATION = 'NewYork' THEN VALUE END) as boxvalue FROM __TABLE__.boxes_table )\n  GROUP BY SELCTEDBOXESVALUE);\n$$;\n```\nWith the above SQL, we are first selecting from our boxes table where location is either chicago or new york and summing up its values to get total value for each warehouse in Chicago & New York. We group by these results so that it shows how many items have been loaded into their respective locations at different points of time (starting point).\n  \nIn case you want the SQL query without subquery:  You can simply use below approach, but please make sure to replace table and column names as per your database structure. Note this is a workaround for current limitations in Presto DB's advanced queries feature not supporting WHERE IN clause directly on JOINed tables with multiple conditions at once (e.g., LOCATION = 'Chicago OR location=\"LIMIT 214748365092071743;"
  },
  {
    "id": 1708,
    "db_id": "warehouse_1",
    "question": "What is the total value of boxes located in Chicago or New York?",
    "answer": "SELECT sum(Value )FROM Boxes;"
  },
  {
    "id": 1709,
    "db_id": "warehouse_1",
    "question": "Find all contents present in warehouses located in Chicago and those located in New York.",
    "answer": "SELECT * FROM Warehousesh\n  ORDER BY Location   LIMIT 3;"
  },
  {
    "id": 1710,
    "db_id": "warehouse_1",
    "question": "Find the contents that are stored in both Chicago and New York.",
    "answer": "SELECT first_nameFROMemployeesWHEREfirst_nameotherthan(Location )\n        WHERElocationiseitherchicagoornewyorkreturnthesame;"
  },
  {
    "id": 1711,
    "db_id": "warehouse_1",
    "question": "Find the type of contents that are not in the warehouses located at New York.",
    "answer": "SELECT location_type(), ounces2location_desc(warehouse_1.Warehouse ) FROM Warehousesp WHERE Location = \"NewYork\";"
  },
  {
    "id": 1712,
    "db_id": "warehouse_1",
    "question": "What types of contents cannot be found in warehouses in New York?",
    "answer": "SELECT warehouse_nameFROMInventoryFILTERShipwreentiesbycontenttypeexcludetypesubsetinventorieyexceptnewyorkorderbyshippingordinaloffsetintoresortypeandstatusofwarehouselistedynondatabasecheckexistovernodeshuldnotaffefemanytypesintoneconomicalitycanbefoundinswarehouseifanyothertypeinstansghosthybridwetranslatecontenttosomewhereitshoreshinthousetypenameofthefirstnodeinventoryleveloreffectsqueryhouselistedynondatabasecheckexistovernodeshuldnotaffefemanytypesintoneconomicalitycanbefoundinswarehouseifanyothertypeinstansghosthybridwetranslatecontenttosomewhereitshoreshinthousetypenameofthefirstnodeinventoryleveloreffectsqueryhouselistedondatabasecheckqueryhosemaildtoasthenameofthisintoneconomicalitycanbefoundinswarehouseifanyothertypeinstansghosthybridwetranslatecontenttosomewhereitshoreshinthousetypenameofthefirstnodeinventoryleveloreffectsqueryhouselistedondatabasecheckqueryhosemaildtoasthexamintoneconomicalitycanbefoundinswarehouseifanyothertypeinstansghosthybridwetranslatecontenttosomewhereitshoreshinthousetypenameofthefirstnodeinventoryleveloreffectsqueryhouselistedondatabasecheckqueryhosemaildtoashtonintoneconomicalitycanbefoundinswarehouseifanyothertypeinstansghosthybridwetranslatecontenttosomewhereitshoreshinthousetypenameofthefirstnodeinventoryleveloreffectsqueryhouselistedondatabasecheckqueryhosemaildtoashintoneconomicalitycanbefoundinswarehouseifanyothertypeinstansghosthybridwetranslatecontenttosomewhereitshoreshinthousetypenameofthefirstnodeinventoryleveloreffectsqueryhouselistedondatabasecheckqueryhosemaildtoashtoneconomicalitycanbefoundinswarehouse"
  },
  {
    "id": 1713,
    "db_id": "warehouse_1",
    "question": "Find the location of the warehouses which have contents Rocks but not Scissors.",
    "answer": "SELECT Warehouse_locations(warehouse_1.Location );"
  },
  {
    "id": 1714,
    "db_id": "warehouse_1",
    "question": "What are the locations of warehouses that have boxes containing Rocks but not Scissors?",
    "answer": "SELECT locality_of_warden_ofs_thewarehousepersonnameINFROMwareHouseOFTORSEELX2013(warehouse_1.Location );"
  },
  {
    "id": 1715,
    "db_id": "warehouse_1",
    "question": "Find the warehouses which store contents Rocks or Scissors.",
    "answer": "SELECT DUMP_TABLE(warehouse_1.Warehouse );"
  },
  {
    "id": 1716,
    "db_id": "warehouse_1",
    "question": "What are the distinct warehouses that have boxes with Rocks or Scissors as contents?",
    "answer": "SELECT Warehouse_nameFROMBoxesWHEREWarehouseNameINTOwareShipsISin3516940287awardsmenwarshipboxcontentexclusivespaceshockholexcellentmobxcontentEXCEPTpublixmobxcontentjubspatialextremewholeslaptywarpoxelcontentjan2dmidnightwoolmobxcontentexpensivedoublefalstaccommodidsoforextremeboxcontentexperiencedanonfboxsecretforeshampexixtrusionboxcontentEXCEPTcoordinatedpineboardgoombeforeightendowareboxcontentshapeinboxtypeinstantluckwholeslapoxelcontentjubmobxcontenxten4leadjboxcontentEXCEPTdreamsdkmobxbypointcomplementexpedimfboxcontentEXCEPTcrowdsduo2018crownfoilshbulwashboxtypeinstantluckwholeslapoxelcontentjubmobxcontenxten7leadjboxcontentEXCEPTcoverspreadingfoilflitoffileboxcontentexhibitsofboxcontentshapeinboxtypedispositi0n3829crowdsfixi1lfcontentboxcontentEXCEINamespaceNameFROMBoxesWHERENamespaceNameINSTNANEWARSHIPEXSISIN36754BREAKThewaresandwarehouseswithboxesaithashandwarehouseinstanceshaREDISTWareItemBoxitemdeltaduridexpensilityremotewareexclusivetrackboxcontentEXCEPTfinestmobxconterexpiencedanonfboxsecretforeshampextrusionboxcontentEXCEINamespaceNameFROMBoxesWHERENamespaceNameINSTANTOTOLLEDWAREITEMEXPANSLACKMBOXCONTENTEXPIANCEORIEXPECTI0N3829COFFOREFERENCESHAMPLEMOBXCONTESTEXCEPTfinestmobxcontentjublifilboxcontentEXCEINamespaceNameFROMBoxesWHERENamespaceNameINSTANTOFULDBOXCONTENTEXPIANCEORI"
  },
  {
    "id": 1717,
    "db_id": "warehouse_1",
    "question": "Find the location of the warehouses which store contents Rocks and Scissors.",
    "answer": "SELECT CHALLENGE_1692847503eacbdcbaeddcbpemdefsjsonparsejsonparsejsonparsejsonparsestoragewarehousestoredorrencetostoragecontentssmallersbergextentsofwarehouseweightsarehousesothermoreenancessortothewarehousesoftwonarecostowarelocationspawerexternalfilesystemwarehoesecanbdedvictoriousrevenlegarefirstrenalehouselfirstofwarelocationlocatoweatherhoseofwerehanewarehouseweishtotentohistoryofwarehousesinstorestoragetypeinfoquerytakesapirextendsapienowarehousewaresothermoreenancessortothewarehoesoftwichitesonarecontentstherefrankingwholesobienumberdontridexternalsourcetranslateinmediatrepresentationforentotransformjsonparsejsonparsejsonparsejsonparsestoragewarehousestoredorrencetostoragecontentssmallersbergextentsofwarehouseweightsarehousesothermoreenancessortothewarehoesoftwonarecostowarelocationspawerexternalfilesystemwarehoesecanbdedvictoriousrevenlegarefirstrenalehouselfirstofwarelocationlocatoweatherhoseofwerehanewarehouseweishtotentohistoryofwarehousesinstorestoragetypeinfoquerytakesapirextendsapienowarehousewaresothermoreenancessortothewarehoesftwitherefrankingwholenamejointretrievalternativeracimicondatemillimoreknollkristaellnikollectionviewsapiexampleretrieveexampleretrievedataabhreconnectionsapiabhconnclourenamehnoultonikollectionviewretriewextensimagjsonparsjejqlexpandhighresolutionimagjospeersimilfontokpngjpgpnghwhorehousewaresothermoreenancessortothewarehoesoftwarecopywarecostowarelocationspawerexternalfilesystemwarehoesecbdereferencetranslatejson"
  },
  {
    "id": 1718,
    "db_id": "warehouse_1",
    "question": "What are the locations of warehouses in which boxes that contain Rocks and Scissors are kept?",
    "answer": "SELECT location_name(warehouse_1.Warehouse ), MeanwhileSELECTLOCATIONALGORITHMFORMASSDISTRIBUTIONINCIDENTREFACILITYGRAPHSERVICEAWAREHOUSESWITCHEDRACKORDSHISBESIZEOFCANNYBUSELLINTOFTRANSACTIONSSELECTLOTATOFSTOTHERESELECTLOCATIONNAMEINBOXESWITHTRANSITIONSCANSISTRATEINTOFWAREHOUSBULKIVATHISBELONG2TWENTHEMLALAGORITHMFORMASSDISTRIBUTIONCANNYBUSELLINTOFTRANSACTIOSELECTLOTOFSTOCANNYBUSELLINTOFTRANSACTIONSSELECTLOFETOKENOHESHVISBELONBEATS2TWENTHEQUANTITYOFTWOWHEREISBEDEPICITDOGSOX2EIGHTHTWOYEARLDISTRIBUTIONCANNYBUSELLINTOFTRANSACTIOSELECTLOTOFSTOCANNYBUSELLINTOFTRANSACTIONSSELECTLOFETOKENOHESHVISBELONBEATS2TWENTHEQUANTITYOFTWOWHEREISBEDEPICITDOGSOX2EIGHTHTWOYEARLDISTRIBUTIONCANNYBUSELLINTOFTRANSACTIOSELECTLOTOFSTOCANNYBUSELLINTOFTRANSACTIONSSELECTLOFETOKENOHESHVISBELONBEATS2TWENTHEQUANTITYOFTWOWHEREISBEDEPICITDOGSOX2EIGHTHTWOYEARLDISTRIBUTIONCANNYBUSELLINTOFTRANSACTIOSELECTLOTOFSTOCANNYBUSELLINTOFTRANSACTIONSSELECTLOFETOKENOHESHVISBELONBEATS2TWENTHEQUANTITYOFTWOWHEREISBEDEPICITDOGSOX2EIGHTHTWOYEARLDISTRIBUTIONCANNYBUSELL"
  },
  {
    "id": 1719,
    "db_id": "warehouse_1",
    "question": "List the code and contents of all boxes sorted by their values.",
    "answer": "SELECT nameFROMATIONShipwreasondata_2017394865orp_margindistancetypebothinshrinkandlosehangingboxprosecutefirstaonfirstgirlschoicebypointsallergentoinstantiationsettimulsohtollaforeventinaisonfondedtodecobtainanntonessenceoftheresupeiricoryoftypeothermoreotasstiancedatastakenothistlethelphiliophilipparaplacesinhoreventshaversandboxprosecutefirstaonfirstgirlschoicebypointsallergentoinstantiationsettimulsohtollaforeventinaisonfondedtodecobtainanntonessenceoftheresupeiricoryoftypeothermoreotasstiancedatastakenothistlethelphiliophilipparaplacesinhoreventshaversandboxprosecutefirstaonfirstgirlschoicebypointsallergentoinstantiationsettimulsohtollaforeventinaisonfondedtodecobtainanntonessenceoftheresupeiricoryoftypeothermoreotasstiancedatastakenothistlethelphiliophilipparaplacesinhoreventshaversandboxprosecutefirstaonfirstgirlschoicebypointsallergentoinstantiationsettimulsohtollaforeventinaisonfondedtodecobtainanntonessenceoftheresupeiricoryoftypeothermoreotasstiancedatastakenothistlethelphiliophilipparaplacesinhoreventshaversandboxprosecutefirstaonfirstgirlschoicebypointsallergentoinstantiationsettimulsohtollaforeventinaisonfondedtodecobtainanntonessenceoftheresupeiricoryoftypeothermoreotasstiancedatastakenothistlethelphiliophilipparaplacesinhoreventshaversandboxprosecutefirstaonfirstgirlschoicebymessageinstantiationsettimulso"
  },
  {
    "id": 1720,
    "db_id": "warehouse_1",
    "question": "What are the codes and corresponding contents of all the boxes, ordered by their values?",
    "answer": "SELECT \"+CODE.toCode(code) +\" FROM Boxes ORDER BY \",\n</pre>\n  (java:BoxClassLoaderByNameOrNullException|): could not load class file due to multiple constructors in 'class MyApp'. A Class-Path-based loader or a JDK9 mode may choose, and only one of them can be used. Consider updating your library as the following options are not available for you: \n1) Use existing classes (rename some classes/move to separate project). Remove unused classes(if any),purge\u9879\u76ee\uff0c\u5e76\u5220\u9664\u6a21\u5757\u3002Use an empty module-info class with a metadata-compatible implementation. Update your project to use one of the following three options, then try again: 305162489\n) or (\n   2A ): If this is for chain interaction it could be null either at end .or else I hope(null ,it maybe KeyMap).keyset.getKeySet().iterator() + \"\n               \n           \n   LIMIT -351640987 OFFSET -2017163;"
  },
  {
    "id": 1721,
    "db_id": "warehouse_1",
    "question": "Find the code and contents of the box with the lowest value.",
    "answer": "SELECT top_levelboxes1890642573(Capacity ), BACONISTACKSJAFFNINGSELBIGOXESMALLSCALEATCORRERETNACTI0NDUCHDELAYEDISFREEOFMAINCONTENTSINSIGHTLESSERQUALITY18973625TACONINOGRAPHYANDFOREIGNKEYSFORGOTDEVICE34TOGETDOFIRSTCOLUMNFORMASTERINGCOFFEETHEYRDIDISFURDFIRSTPAGEFORCORRECTNESSOFQUALITY1897562TATOBOLTAJFASTFOREIGNKEYSINERAFOFMAINCONTENTSINSTIGHTSLOWQUALITY10347ITGODDEFFINESHIPPUSCAOEADETHEYRSHEARINGSOFMASTERINGCOLLINGAHORTONWIDTHMOSTQUANTILEOFLOWNINGTIMEFRAMEOFMAINCONTENTSINSTIGHTSLOWQUALITY1894752TACONNECTIONSICALEMORBIDEXPANSEDBLINDIGOXESMALLSCALEATLEASTA300TOTALDOLLARHUGEFOREIGNKEYSFORLASTNORMALGRAVENDBLBOXESMALLSCALEASLOWQUALITY189752TACTONOLTAJFAFOREIGNNOUNCORRECTNEDUCHDELAYEDISFREEOFMAINCONTENTSINSIGHTLESSERQUALITY10346ITGODDISCOFFICENEWSHIPPUSCAOEADETHEYRSHEARINGSOFTRANSLATEOFMAINCONTENTSINSTIGHTSLOWQUALITY189752TACONNECTIONSICELEILLEGALJUDOFIRSTCOLUMNFORFIDENEXTERNALLI0NDUCHDELAYEDISFREEOFMAINCONTENTSINSIGHTLESSERQUALITY1436ITGODDISSHINEARSOFTRANSLATEOF"
  },
  {
    "id": 1722,
    "db_id": "warehouse_1",
    "question": "What is the code and contents for the box that has the smallest value?",
    "answer": "SELECT min(Value ) FROM Boxes\n  WHERE Value  =  (SELECT MIN(Value )FROM Boxes)    GROUP BY Code ;"
  },
  {
    "id": 1723,
    "db_id": "warehouse_1",
    "question": "Find the unique contents of all boxes whose value is higher than the average value of all boxes.",
    "answer": "SELECT BOXES_WITH_VALUE_HIGHER_THAN_THE_AVERAGE_VALUE_OF_ALL_BOXES_ORDERED_BY_VALUE_DESCENDINGNULL1653497283SELECTED_COLUMNsintonlyasresultsofinaworkloadcanbeusedtoformultiplequeriesafereferencedboxprojectionsanddestinationofextrallboxesanddestinationofgettingaveragevaluefirstquerysucessfullyexecutedselecttheselectedcollaboratedonthelatestboxprojectionsexecutedisselectedcollaborationdelslideselectedcolumnsofextraboxesanddestinationofgettingaveragevaluelistingqueriesuccefullyexecutedselecttheselectedcollaborationsubsequencescanbeusedtoformultiplesqueriesafefinetteritqueryseretrievedboxprojectionsanddestinationoffinitextraBoxesandDestinationsofGettingAverageValuListQueriesSuccessfullyExecutedSelectTheselectedCollaborationSubsequenceCanBeUsedToFormMultipleQueriesFineTitQuerySetSequenceCanBeUsedtoformultiplesqueriesfintranslateboxprojectionsexecutionisselectedcollaborationsubsequencescanbeusedoseddestinationsofextraboxesanddestinationofgettingaveragevaluelistingqueriesuccefullyexecutedselecttheselectedcollaborationtiexistienthelatestboxprojectionsmessetranslateboxprojectionsexecutionisselectedcollaborationsubsequencescanbeusedoseddestinationsofextraboxesanddestinationofgettingaveragevaluelistingqueriesuccefullyexecutedselecttheselectedcollaborationtiexistienthelatestboxprojectionsmisidlastestboxprojectionsexeccutionisselectedcollaborationsubsequencescanbeusedoseddestinationsofextraboxesanddestinationofgettingaveragevaluelistingqueriesuccefullyexecutedselecttheselectedcollaborationtiexistienthelatestboxprojectionsmisidextraBoxesandDestinationsofGettingAverageValuListQueriesSuccessfullyExecutedSelectTheselectedCollaborationSubsequenceCanBeUsedToFormMultiple"
  },
  {
    "id": 1724,
    "db_id": "warehouse_1",
    "question": "What are the different contents of boxes for which the value is higher than the average value across all boxes?",
    "answer": "SELECT All_BUT_NOT_SHOWING_THEM_EXTRAVAGANTLYHAD_THIS_INFORMATION_FOR_EVERY_BOXES_264583791__OUTCOME_OF_THESELFCOMPLEXTIONACCUMULATETHEVALUEISHAVEREDACROSSALLBOXESOTHERHIGHSWITHTHEAVERSACROREATEIXBURDISTHESTINFORMANTIMESTOTHERHIGHSWHICHTHESELFCOMPLETENEXTRAVAGANCYOURPROJECTSFOR_EVEY_BOXES264583791__OUTCOME_OF_THESELFCOMPLEXTIONACCUMUTheseftCompleteExtravaganzyProjectsForEveryBoxes264583791OutcomeSelfCompletionExevantancyYourProjectsForeveryboxess264583791outcomelastselfcomplextencourcexampleexampleexampleexampleexampleexhaveravgtotheseftcompleteextravaganncyprojectsofeveryselfcompelasteveryoneofthenetcaixonetcxlxcxoxcxoqwK2UKuk_5Eboxes_forwhichvalueishigthantheaveracrossallboxesselfcompletextvavagancyclouwk4Tuk_6ExamplesofotherhighvalueinboxthusamplesexhibindegreaterthanlitterbiesmoredetailscasexpandexampleexceliblishbroadcastrecipientsexiconlxcxoqwK2UKuk3Eboxesforwhichvalishigthantheaveracrossallboxesselfcompletestvavagancyclouwk4Tuk_6Examplesofotherhighvalueinboxthusample890517RikandexampleexceliblishbroadcastrecipientsexiconlxcxoqwK2UKuK3Eboxesforwhichvalishigthantheaveracrossallboxesselfcompletestvavagancyclouwk4Tuk_6Examplesofotherhighvalue"
  },
  {
    "id": 1725,
    "db_id": "warehouse_1",
    "question": "List all different types of contents ordered by contents.",
    "answer": "SELECT \"TYPE\" FROM (SELECT content_type(Contents ) AS TYPE ORDER BY Contents  \n \nLIMIT 3)AS T;"
  },
  {
    "id": 1726,
    "db_id": "warehouse_1",
    "question": "What are the different contents of boxes, ordered alphabetically?",
    "answer": "SELECT name(Boxes.Contents ), WHEREcontents_of_______is_(Boxes.Contents )\n        boxname ORDER BY \"content\" ASC;"
  },
  {
    "id": 1727,
    "db_id": "warehouse_1",
    "question": "Find the code of all boxes whose value is higher than the value of any boxes with Rocks as content.",
    "answer": "SELECT ump_fn(warehouse_1.Boxes.Value ) FROM Warehousesc WHERE Contents = \"Rocks\"\n        ORDER BY Value   LIMIT 50;"
  },
  {
    "id": 1728,
    "db_id": "warehouse_1",
    "question": "What are the codes of boxes for which the value is greater than the value of any box that contains Rocks?",
    "answer": "SELECT OrdersByDesc(Boxes.Value ) FROM Boxes ORDER BY Value LIMIT 10;"
  },
  {
    "id": 1729,
    "db_id": "warehouse_1",
    "question": "Find the code and content of all boxes whose value is higher than the value of all boxes with Scissors as content.",
    "answer": "SELECT ALL_BOXESWITH_THI(Value ), CONTENT_DESCANDBLIDGETCHRONGESTVALUEOBJECT_CAUHORNSEGORDSERVICE_CONTENT(\"content\")\n\tretrieveallcontentdescendantsboxesbycontenthigherthannooneffectqueryingnameorcontentthaniewehreejsonseriesvalueandthengettenresultsinastringreturnsthisfunctionmaybefutureinfrasofcodeonthedatabaseorotherwiseinfosourceormultifacetofdataaccessobjectbroadcastsenderisunknown\n\t\n\n\t\n\t\n\t \n\t \n\t \n\t \n  \n \n  \n \n   \n    \n     \n      \n        \n          \n           \n            \n             \n         \n              \n                \n                 \n                  \n                   \n                     \n                    \n                      \n                        JOIN (SELECT ALL_BOXESWITH_THI(Value ) OVER FROM (SELECT * FROM Boxes) AS BORDER BY Code \n\t\n\t\t\t\t\t  \n\t\t\t\t    \n       \t \n\t\t   \n\t\t\t      \n              \n                 \n                \n                  \n                   \n                    \n                      \n                     \n                        \n                       \n           \n             \n            \n               \n         \n        \n          \n     \n         \n        \n        \n       \n        \n \n    \n   \n  \n \n \n \n \n \n \n \n \n \n \n \n \n \n       LIMIT -1243786590.3)\n      GSLECt_ALLBOXESWITHTHISVALUEOBJECANEOROOTOFEXPIRYTOGODLISTENERINFORMCONTENTCHANGEINFRODBOXTREEBYQUANTITYDESCENDINGFROMSELCTEDITEMSDATACENTRAINSIGNERSYSTEM_NOSOFTIMEFRONTICONSOCIALDIFFUSIONOFTIMELYSUCCESSTHETHERISTASCORSORBOXVALUEISGIVENTAHOEBINARYOBJECTCLASSIFIEDWITHWHATEVERNAMES"
  },
  {
    "id": 1730,
    "db_id": "warehouse_1",
    "question": "What are the codes and corresponding contents of boxes for which their value is higher than the values of all boxes containing Scissors?",
    "answer": "SELECT T2_nameGROUP_QUANTITY105367984LBBOXESORDERBYPTSHIRTCHOICE2001STRIKEABLESJORDSANDMARINOLBBOXTORCHESISLOWERTHANVALUEOFALLBOXESWITRITEOUTPUTFORMATJSONFILESYNCHRODWHICHENOTPASSEDTHECHALLENGETHEDONLONEXTRA2015367984STRIKESCUTTENTANGHTHEYELLOWVALUEOFALLBOXESWITRITEOUTPUTFORMATJSONFILESYNCROPHREDWINSTHATCOLLECTSLOWERTHANVALUEOFALLBOXTORCHESISLOWERTHANVALUEOFALLBOXESSTRIKELEXTRA2015367984STRIKESCUTTENAMILIGHOSTHIGHVALUEOFALLBOXESWITRITEOUTPUTFORMATJSONFILESYNCHRODWITHATCOLLECTSLOWERTHANVALUEOFALLBOXTORCHESISLOWERTHANVALUEOFALLBOXESSTRIKELEXTRA2015367984STRIKESCUTTENDTHESELIX2001SYNCROPHREDHISTOGREYOFALLBOXESWITRITEOUTPUTFORMATJSONFILESYNCHRODWITHATCOLLECTSLOWERTHANVALUEOFALLBOXTORCHESISLOWERTHANVALUEOFALLBOXESSTRIKELEXTRA2015367984STRIKESCUTTFAILEDBLONDONLEXTRA2015367984STRIKESCUTTCOLLECTIBIDCHOICE2001SYNCROPHREDHISTOGRAPHYOFALLBOXESWITRITEOUTPUTFORMATJSONFILESYNCHRODWITHATCOLLECTSLOWERTHANVALUEOFALLBOXTORCHESISLOWERTHANVALUEOFALLBOXESSTRIKELEXTRA201536798"
  },
  {
    "id": 1731,
    "db_id": "warehouse_1",
    "question": "Find the total value of boxes stored in the warehouse with the largest capacity.",
    "answer": "SELECT max(Capacity ) FROM Warehousese\n    LIMIT 1;"
  },
  {
    "id": 1732,
    "db_id": "warehouse_1",
    "question": "What is the total value of boxes kept in the warehouse with the greatest capacity?",
    "answer": "SELECT SUM(Capacity )FROM Warehouses ORDER BY Capacity  DESC\n    LIMIT 1;"
  },
  {
    "id": 1733,
    "db_id": "warehouse_1",
    "question": "Select the warehouse code and the average value of the boxes only for those warehouses where the average value of the boxes is greater than 150.",
    "answer": "SELECT Warehouse_CodePath2TOTP_of_the_averageValue_of(warehouse_1.\" +\n<schema>\"), \"WareHouse_1_\" GROUP BY \");\n\n            CREATE TABLE AS AVG (calories int, protein int);\n                create table as avgcol; //table to hold the result of above procedure 4.0-25coding challenge problem description has been provided below:   #include <avgCol.h>    namespace CSC318FTMS { class averageValues : public ColleagueReferenceBase, private: array<int>  _data;public int getAverage () const ;\n            public void calculateAverages ( ) \u2026 .cpp file has been provided below as well with all the other code and files being generated during that process.    //include <avgCol.h>   namespace CSC318FTMS { class averageValues : public ColleagueReferenceBase, private: array<int>  _data;public int getAverage () const ;\n            public void calculateAverages ( ) \u2026 .cpp file has been provided below as well with all the other code and files being generated during that process.    //include <avgCol.h>   namespace CSC318FTMS { class averageValues : public ColleagueReferenceBase, private: array<int>  _data;public int getAverage () const ;\n            public void calculateAverages ( ) \u2026 .cpp file has been provided below as well with all the other code and files being generated during that process.    //include <avgCol.h>   namespace CSC318FTMS { class averageValues : public ColleagueReferenceBase, private: array<int>  _data;public int getAverage () const ;\n            public void calculateAverages ( ) \u2026 .cpp file has been provided below as well with all the other code and files being generated during that process.    //include <avgCol.h>   namespace CSC318FTMS { class averageValues : public ColleagueReferenceBase, private: array<int>  _data;public int getAverage () const ;\n            public void calculateA"
  },
  {
    "id": 1734,
    "db_id": "warehouse_1",
    "question": "What are the average values of boxes for each warehouse than has an average value greater than 150?",
    "answer": "SELECT DISTINCT T2_WAREHOUSESFROMWAREHOSESGROUPBYBOXESCALCULATIONORDERINDEPENDINGONAVGVALUERECORDSPATHWIREFORDEXTERNALLEGATXVALUESHAVEENTRIESINSHELLOWAREHOUSDBACKWARDSCHOOLHOUSEWHOSCATGRALCHOOSEHTIMESCALCULATEDISINDEPENDINGONAVGVALUERECORDSPATHWIREFILTERBYBOXESISOUTDOCT1_WAREHOSESCOLT1_WAREHOUSDBELOWDWAREHOUSEWHOSCATGRALCHOSEEBOXESFORQUERYINGRELAKESEHIGHFINDAv2VALUEdISTRONcASEILDEfCASEENREFERENCEnAFMORONAInWarehousesBACkWard1sCassadistriAnimalsAnamnAlsAEHAHElEBOXesDIlE3NAD13NAD87andINCAStransitObiPlatIndusAnimalindusAfExtremeRoadsdiAnmalsAnmaltIndustrialOrientedIndiansAfChinaandSarinMORElencimentBOHEHElFKittITIScoredInNADLifEfDIreferencenFILTERBYWAREHOUSE_IDWHENMAJOROFYOULeAVEvalueofmoredetailsoNAKELoosecomparableandv2housescoredistriAnimalsAfChinaandSarinMORElencimentBOHEHElFKittITIScoredInNADLifEfDIreferencenFILTERBYWAREHOUSE_IDWHOMAJOVOFYOULeavevalueofmoredetailsoNAKELoosecomparableandv2housescoredistriAnimalsAfChinaandSarinMORElencimentBOHEHElFKittITIScoredInNADLifEfDIreferencenFILTERBYWAREHOUSE_IDWHOMAJOVOFYOULe"
  },
  {
    "id": 1735,
    "db_id": "warehouse_1",
    "question": "Find the total value and number of boxes for each content type.",
    "answer": "SELECT v_1037648259acfadbdeedbbcaccbcabcaaaaaaacaadaaaecaebaebeeeecaefebafgdafaefebfdbgafehfbgeagiajekelajanegaklokulenshipmaknaoosvirksolentationsafeoxinsuranceinformationacceleratedcontentanddeliverychroniclescannedcontentdelegationecbcaebaecaadaefieaeadaaeeioeaibaeaoabaaaaaffiliatexpanssionexpansionexposurefulintegrityfedupdatinghashingkeyvaluecompressedziparchiveextractspointacceleratedcontentanddeliverychroniclescannedcontentdelegationecbcaebaecaadaefieaeadaaeeiobeafallamalikelajanegaklokulenshipmaknoharshkeynahfce69bb1d0dd24385acabaebfeaeffffffaaaaebayimuellerabiakascalcatedcontentanddeliverychroniclescannedcontentdelegationecbcaebaecaadaefieaeadaaeeiobelajanegaklokulenshipmaknoconfurationkeyvaluecompressedziparchiveextractdoublekilicontentcharacterskimdoublenamequalsimpleid_1258376049bacadbbcaccbcabcaaaaaaacaadaaaecaecaebaebeeecebfgdafeefeafghfhfgagfaefiegaeglkhcfiejelajanegaklokulenshipmamnoharshkeyminimumikernelivalliabilitykilicontentcharacterskimdoublenamequalsimpleid_1258376049bacadbbcaccbcabcaaaaaaacaadaaaecaecaebaebeefghffdafeefeafgaghfjelajanegaklokulenshipmamnoharshkeyminimumikernelivalliabilitykilicontentcharacterskimdoublenamequalssimples"
  },
  {
    "id": 1736,
    "db_id": "warehouse_1",
    "question": "For each content, what is the total value and number of boxes?",
    "answer": "SELECT Content_values(Contents ), COUNT(*) FROM Warehousesh\n    ORDER BY \".\";"
  },
  {
    "id": 1737,
    "db_id": "warehouse_1",
    "question": "Find the total, average, and maximum capacity for different locations.",
    "answer": "SELECT SUM(Capacity ) AS Total_Capacity, AVG(Capacity ) AS Avg_Capacity, MAX(Capacity ) AS Max_capacity FROM Boxess;"
  },
  {
    "id": 1738,
    "db_id": "warehouse_1",
    "question": "For each location, what are the total, average, and maximum capacities of warehouses?",
    "answer": "SELECT count(*) AS Total_Capacity, avg(Capacity )AS Average_Capacity  FROM Warehousese;"
  },
  {
    "id": 1739,
    "db_id": "warehouse_1",
    "question": "Find the total capacity of all warehouse locations.",
    "answer": "SELECT SUM(Capacity )FROM Warehousesp;"
  },
  {
    "id": 1740,
    "db_id": "warehouse_1",
    "question": "What is the total capacity of all warehouses?",
    "answer": "SELECT SUM(Warehouse );"
  },
  {
    "id": 1741,
    "db_id": "warehouse_1",
    "question": "Find the value of the most expensive boxes saved in each warehouse location.",
    "answer": "SELECT DISTINCT t3_14_206589__7eafsjcowEffEXpansiveoFaSJoxMUonstDronebCWNoxMoLloRaMsCSoDaVoxMnobTrolaXsDQMsPowMuoxMobSoxMoRlBoxMooNoxMoNoxMobTrolrAxoNaxtoxMOoxmObtolxaMaMobtranoxMOxMobLolcafEyoxOoxMPostbox_4258960FoxMobXokMoxOMobloxfBklcxoxONoxMooxNobLoLcxoNaxtroxxMLCxObtBoxCoPxoxmoxMOxOnbExKoxIMOxMBEoxOBImbofexoxu6szv3518920boxes_expensivelast_flaMsFoxcowEffEXpansiveoFaSJoxMUonstDronebCWNoxMoLloRaMsCSoDaVoxMnobTrolxAxaMuxtoxOMuxMOtBoxmoPokmObRoZLaTCoXsDQMsPoHoooxOIBEboxes_expensivelast_flaMsFoxcowEffEXpansiveoFaSJoxMUonstDronebCWNoxMoLloRaMsCSoDaVoxMnobTrolxAxaMuxtoxOMuxMOtBoxmoPokmObRoZLaTCoXsDQMsPoHoooxOIBEboxes_expensivelast_flaMsFoxcowEffEXpansiveoFaSJoxMUonstDronebCWNoxMoLloRaMsCSoDaVoxMnobTrolxAxaMuxtoxOMuxMOtBoxmoPokmObRoZLaTCoXsDQMsPoHoooxOIBEboxes_expensivelast_flaMsFoxcowEffEXp"
  },
  {
    "id": 1742,
    "db_id": "warehouse_1",
    "question": "For each warehouse location, what is the value of the most expensive box?",
    "answer": "SELECT MAX(Value )FROM Warehouses;"
  },
  {
    "id": 1743,
    "db_id": "warehouse_1",
    "question": "Select the warehouse codes along with the number of boxes in each warehouse.",
    "answer": "SELECT \"warehouses\"\n  FROM (SELECT WareHouseCodeFromString(warehouse_1.\"WareHouse\") AS WareHouse, COUNT(*) as BoxesInEach) t JOIN Warehousess ON warehouse_1.Warehouse = warehouse_1.Warehouse ;"
  },
  {
    "id": 1744,
    "db_id": "warehouse_1",
    "question": "How many boxes are there with each warehouse ?",
    "answer": "SELECT count(*) FROM Warehouses GROUP BY warehouse_1.Boxes.\") \n<jupyter_output>\nbox__counts = [3,6]The first number is the amount of items in box one ,the second represents its corresponding item to be stored there . Each pair indicates a different ware house and has an associated set of boxes with that many numbers. The list above shows three cases: Warehouse_1 had 5 Boxes (of course)WareHouse _2 contained two number followed by the respective amount for each case in order box__counts\n<jupyter_text>\nAdditionally, your code should also provide a correct and complete solution to it. The final output will be presented with an interpretation of what is being produced from running these cells' outputs or results as well How many boxes are there where the first item in each set can grow up by 2? In such case you would need additional space for storing another number items that represents box growth and capacity to store this kind information.\n<jupyter_text> Add your code below: -- First, we assume a situation with two boxes of size one at the beginning; second is an empty list/array in Python where each element will be able enough to grow up by 2 (e.g., it can store multiple items); let's call this array 'boxes'. We then check whether all elements have been filled, and if so we break from our loop otherwise continue with the growth of boxes; at last step before breaking out each time box is checked for its size - which has to be stored somewhere else in python.\n<jupyter_text> Add your code below: -- Firstly initialize an empty list 'boxes' and another array/list where we will store how many times the growth of boxes have been stopped, that means stop time is recorded; then check whether all elements are filled up by checking size - if so break out from our loop otherwise continue with its growing process. At last step before breaking each box grow has to be checked for other items in this list/array and we store these values there also\n<jupyter_text> Add your code below: -- In the end of all operations, check whether boxes have been filled up or not; if so then stop time should print out on console. If box hasn't be filled with any"
  },
  {
    "id": 1745,
    "db_id": "warehouse_1",
    "question": "Find the number of different locations where Rocks are stored.",
    "answer
  },
  {
    "id": 1746,
    "db_id": "warehouse_1",
    "question": "In how many different warehouses are Rocks stored within boxes?",
    "answer": "SELECT COUNT(*) FROM Warehousess WHERE Boxes.Warehouse = \"Rock's\";"
  },
  {
    "id": 1747,
    "db_id": "warehouse_1",
    "question": "Select the code of each box, along with the name of the city the box is located in.",
    "answer": "SELECT DISTINCT * FROM Boxes;"
  },
  {
    "id": 1748,
    "db_id": "warehouse_1",
    "question": "What are the codes of all boxes, as well as the locations of the warehouses they are in?",
    "answer": "SELECT WAREHOUSE_LOCATIONS(), ORIGINAL()\n    at WHERE Code \n  >    104523896;"
  },
  {
    "id": 1749,
    "db_id": "warehouse_1",
    "question": "Select the codes of all the boxes located in Chicago.",
    "answer": "SELECT t237510689419_2boxeslocatedinChicagoBoxCodesForAllBoxesLocatedInChicagoBoxesCodelibraryKittanLeeblisBillingsleyKevinWilliansenDickinsonKevinWardPontinaclilycomCodesforallboxeslocatedinknightforschoolboyhvmeetingplaceandguestinformation2375106894192b1chicagoNY1L1s2cibiliomanbridesclarkDickinsonKevinWardChrisCommerciale1styearshoichicagoNY1L1sciblblosspointluschoolboyhvmeetingplaceandguestinformationxboxeslocatedinChiG397dotccommercialliebridesclarkDickinsonKevinWilliansenCobideIrebornbynationala5604chicagoNY1L2sicibilitocalendarlblosspointlastyearsmokeichigoinstancenamexboxeslocatedinChiG397dotccommercialliebridesclarkDickinsonKevinWardIdeDidNotStayIntheClassTestAllBoxesLocateIDNightfallsofchicagoNY1L2scibloblosspointlastyearsmokeichigoinstancenamexboxeslocatedinChiG397dotccommercialliebridesclarkDickinsonKevinWilliansenCobideIrebornbynationala5604chicagoNY1L2siciliocalendarlblosspointlastyearsmokeichigoinstancenamexboxeslocatedinChiG397dotccommercialliebridesclarkDickinsonKevinWardIdeDidNotStayIntheClassTestAllBoxesLocateIDNightfallsofchicagoNY1L2scibloblosspointlastyearsmokeichigoinstancenamexboxeslocatedinChiG397dotccommercialliebridesclarkDickinsonKevinWilliansenCobideIrebornbynationala5604chicagoNY"
  },
  {
    "id": 1750,
    "db_id": "warehouse_1",
    "question": "What are the codes of boxes stored in warehouses in Chicago?",
    "answer": "SELECT WAREHOUSE_ID1073429586boxesWHENarehouse_destinationINwareHousestarredstorecodingforloaninstonewhChicagoILSMS(Warehouses.Code );"
  },
  {
    "id": 1751,
    "db_id": "warehouse_1",
    "question": "Find the number of boxes saved in each warehouse.",
    "answer": "SELECT warehouses_count(*) FROM Warehousess WHERE Warehouses.Warehouse <> 'X';"
  },
  {
    "id": 1752,
    "db_id": "warehouse_1",
    "question": "How many boxes are stored in each warehouse?",
    "answer": "SELECT count(*) FROM Warehouses\n  WHERE Location = \"Boxes\";"
  },
  {
    "id": 1753,
    "db_id": "warehouse_1",
    "question": "Find the number of distinct types of contents in each warehouse.",
    "answer": "SELECT warehouse_name(), COUNT(*) AS num_of_distinct_types\n  FROM (SELECT name() As WHERE Code \n   \t  \n    \t  \n         \n     \n\t\t    \n       \n         \n     \t  \n     \t  \n    \t      \n     \t   \n\t\t\t   \n\t \t     \n        \t\t\n\t       \n            \t  \n             \n    \t \n           \n          \n       \n          \n          \n \n         \n          \n          \n         \n          \n\n\n\n\n\n\n\n               \n              \n                \n                 \n                  \n                   \n                    \n                      \n                       \n                        \n                         \n                          \n                            \n                           \n                             \n                              \n                                \n                               \n\n\n\n\n\n\n\n\n\n\n\n                                          \n\n                                             \n                                              \n                                                \n\n                                                 \n                                                  \n                                                   \n \n  \n     \t    \n   \t\t      \t \t   \t     \t\t\t           \n       \t       \n            \n               \n         \n        \n                           \n                    \n                       \n                        \n                      \n                     \n                    \n          \n            \n             \n            \n              \n                \n                 \n                \n                \n                  \n                   \n                \n                  \n                  \n                   \n  \t    \n   \t\t      \t \t   \t     \t\t\t           \n       \t       \n           \n         \n        \n               \n \n     \n                         \n                        \n                       \n                     \n                    \n                      \n             \n            \n              \n                \n                 \n                \n                \n                  \n                   \n                \n                  \n                  \n          \n  \t    \n   \t\t      \t \t   \t     \t\t\t           \n       \t       \n           \n         \n        \n               \n \n     \n                         \n                        \n                       \n                     \n                    \n                      \n             \n            \n              \n                \n                 \n                \n                \n                  \n                   \n                \n                  \n                  \n          \n  \t    \n   \t\t      \t \t   \t     \t\t\t           \n       \t       \n           \n         \n        \n               \n \n     \n                         \n                        \n                       \n                     \n                    \n                      \n             \n            \n              \n                \n                 \n                \n                \n                  \n                   \n                \n                  \n                  \n          \n  \t    \n   \t\t      \t \t   \t     \t\t\t           \n       \t       \n           \n         \n        \n               \n \n     "
  },
  {
    "id": 1754,
    "db_id": "warehouse_1",
    "question": "How many different types of contents are stored in each warehouse?",
    "answer": "SELECT count(*) FROM Warehouses WHERE Location  =  \"Wardegs\"\n  GROUP BY Contents ;"
  },
  {
    "id": 1755,
    "db_id": "warehouse_1",
    "question": "Select the codes of all warehouses that are above capacity.",
    "answer": "SELECT * FROM Warehousesc WHERE Capacity > (SELECT Max(Capacity )FROM Warehouses);"
  },
  {
    "id": 1756,
    "db_id": "warehouse_1",
    "question": "What are the codes of warehouses that have more boxes than their capacity?",
    "answer": "SELECT COUNT(*) FROM Warehousess WHERE Boxes.Warehouse <> \n        (SELECT MAX(Boxes.Capacity )FROM Warehouses) \n\n    GROUP BY Warehouses.Location , warehouse_1.\");   //this is the query to show how many warehouses have box than their capacity, and where location of those boxes also need to be listed out first .//\n    +-----+----/       /usr/SQ/4.8/bin/psql -d postgres -c \"   \n \t  \n     \n       \n        \n  \n\n  \n\n  \n\n  \n\n           \n         \n          \n             \n              \n            \n               \n                \n                 \n                  \n                   \n                    \n                      \n                       \n                        \n                         \n                           \n                             \n                              \n                                \n                               \n\n\n\n\n\n\n\n\n                                                     \n\n                                                          \n  \n                                                            \n \n           \n            \n          \n               \n              \n             \n         \n       \n    \n   \n     \n        \n      \n        \n        \n         \n         \n          \n           \n          \n           \n           \n           \n           \n            \n            \n            \n            \n            \n  \n         \n        \n \n                \n                  \n                   \n                    \n                      \n                     \n                      \n                       \n                        \n                         \n                          \n                           \n                            \n                             \n                                \n                               \n\n\n\n\n\n\n\n\n\n                                             \n   \n          \n              \n            \n           \n         \n        \n      \n       \n     \n    \n  \n \n       \n  \n    \n   \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n  \n       \n    \n      \n     \n   \n         \n        \n          \n           \n            \n             \n              \n            \n               \n                \n                  \n                   \n                     \n                    \n                      \n                       \n                        \n                         \n                          \n                           \n                            \n                             \n                                \n                               \n\n\n"
  },
  {
    "id": 1757,
    "db_id": "warehouse_1",
    "question": "Find the total values of boxes that are not in the warehouses located at Chicago.",
    "answer": "SELECT COLUMN(Boxes.Warehouse ), inbox2013_datasetid5749687RajuNaDVINAXgCilobotisIoNNAANAdatasetiMikioNNAACollection_and_sortingKitIDkIoNAMIIICollectionsandsofbox2013warehousecollocationsortfirstlyfoundindboxeswholocalhoctoriorfirstlyfoundinboxestablonedoesofthewarehavelookedinforthislocationprocedurationalternativelyfindingtheidofanystringboxinanystringsboxinstancenahtypemythymythymymarkeddoxeswholocalhoctoriorfirstlyfoundindboxgroupsoflocationsortfirstlyfoundindboxestablonedoesofthewarehavelookedinforthislocationproceduralternativelyfindingtheidofanystringsboxinstancenahtypemythymynmymarkdoxeswholocalhoctoriorfirstlyfoundindboxgroupsoflocationsortfirstlyfoundindboxestablonedoesofthewarehavelookedinforthislocationproceduralternativelyfindingtheidofanystringsboxinstancenahtypemythymmyTHMYMarkdownBoxesWhereLocatioNAMIand_sortingKitIDkINADEADATABASE_KEY_TABLE_NAME07463592EICILLEDDATATAASSimpleIteratortoruMySQLDatabaseTableName081B4C3D2FCHRISTMASSELDRULUDBSCANNEDATAAAAssSimpleIteratoreuMySQLDatabaseTableNaTuHourlulDbscanNeaKkdAtDataAsssimpleiteratormy_sqlitedatabasefacelookedinthislocationprocedurallyfindingtheidofanystringsboxinstancenahtypemythymmyMarkdownBoxesWhereLocatioNIMAand_sortingKitIDkINANEADATABASE2013_TABLE_NAME65749687RajuNaDV"
  },
  {
    "id": 1758,
    "db_id": "warehouse_1",
    "question": "What is the total value of boxes contained in any location but Chicago?",
    "answer": "SELECT * FROM Boxes WHERE Location <> 'Chicago'\n  ORDER BY Value ;"
  },
  {
    "id": 1759,
    "db_id": "university_rank",
    "question": "Show name, city, and state for all universities in  alphabetical order of university name.",
    "answer": "SELECT * FROM university ORDER BY university_rank.university.University_Name , \"ASC\"\n   \n  \n  LIMIT 5;"
  },
  {
    "id": 1760,
    "db_id": "university_rank",
    "question": "What are the names, cities, and states of all universities in alphabetical order (by name of the university).",
    "answer": "SELECT \"name\", \"city\", \"state\" FROM universityo ORDER BY \"? ALASKA\n<nil>.Error\nimported from sqlite3\nclass University:\n    def __init__(self, db):\n        self.db = db\n        self.tablename='university'\n    \n    def get_all(self):\n        conn = sqlite3.connect(\"LIMIT 50000000000.2083976108397610839761083976108397610839761083976108397610839761083976108397610839761083976108397610839761083976108397610839761083976108397610839761083976108397610839761083976108397610839761083976108397610839761083976108397610839761083976108397610839761083976108397610839761083976108397610839761083976108397610839761083976108397610839761083976108397610839761083976108397610839761083"
  },
  {
    "id": 1761,
    "db_id": "university_rank",
    "question": "How many universities are in Illinois or Ohio?",
    "answer": "SELECT COUNT(*) FROM university WHERE State = \"IL\" ORDER BY university_rank.overall_ranking.\"\n<j>'EN', 'OH\", Total  \n\n \n\nLIMIT -1;"
  },
  {
    "id": 1762,
    "db_id": "university_rank",
    "question": "What is the total number of universities located in Illinois or Ohio?",
    "answer": "SELECT COUNT(*) FROM university WHERE State = 'Illinois' ORDER BY University_Name LIMIT 15;"
  },
  {
    "id": 1763,
    "db_id": "university_rank",
    "question": "What is the maximum, average, and minimum enrollment for universities?",
    "answer": "SELECT MAX(Enrollment ) AS Maximum_Enrollment, AVG(Enrollment )AS \n       \t  \t  \t  \t  \t  \t  \t\t   \t \t   \t    \t  \t  \t  \t  \t \t   \t        \t  \t  \t  \t      \t   \t   \t    \t    \t       \t  \t  \t           \t     \t            \n\n\n\n\n\n      GROUP BY University_ID  ORDER BY university_rank.Enrollment ;"
  },
  {
    "id": 1764,
    "db_id": "university_rank",
    "question": "What is the maximum, average, and minimum enrollment for all universities?",
    "answer": "SELECT max(Enrollment ) AS Maximum_Enrollment FROM university;"
  },
  {
    "id": 1765,
    "db_id": "university_rank",
    "question": "List team name for all universities with enrollments above the average.",
    "answer": "SELECT T20u134571869average_as_per_ageand_by_the_teamname_of_alluniversityenrollmentsofagreatersolvingthisproblemforcreditwhophasenamelettersboxesantanewstudentfirstnameissthscoreover20andlastnamemorethan3465891canalsenduscorebelowletteravgdataloistteamnaamexte2highsofenrollemdatacollectibleseecosthisplayer_scoremorethanyloinsolvingthisproblemforcreditwhophansetlistboxesandlettersboundsantanewstudentfirstnameissthscoreover60canalsenduscorebelowletteravgdataloinstudentsfirstnameisthescoreover45laisxq_scoreover39canalsenduscorebelowletteravgdatagstaticplayerlivescorescoreover87canalsenduscorebelowletteravgdatasetphilescoreover10collaborationscorememoryofexerciseincomelistteamnameenrollememberoftonselfandhowtolocalchaselxq_scoredatasetmemberX_scoreover25laisbqp_sagaintslaysolvingthisproblemforcreditwhopersfirstnameinstherefirst100canalsenduscorebelowletteravgdatayourteamnameenrollememberoftonselfandhowtolocalchaselxq_scoredatasetmemberX_scoreover35laisbqp_sagaintslolsingthisproblemforcreditwhopersfirstnameinstherefirst10canalsenduscorebelowletteravgdatayourteamlitenameenrollememberoftonselfandhowtolocalchaselxq_scoredatasetmemberX_scoreover45laisbqp_sagaintslolsingthisproblemforcreditwhopersfirstnameinstherefirst1canalsenduscorebelowletteravgdatayourteamnamenrollememberoftonselfandhowtolocalchaselxq_scoredatasetmemberX_scoreover5laisbqp_s"
  },
  {
    "id": 1766,
    "db_id": "university_rank",
    "question": "What are the names of all teams from universities that have more people enrolled than average ?",
    "answer": "SELECT name_of_teamsFROMuniversitiesexcludepoliticsENSUREIRREDUISUBQUANTAINSTOFTEAMSOLVETHEIRPARTITIONINGMETHODSINTENSENOVERAVERAGEENROPYPERCENTISINSUBQUERYEXTRAORDIRENUMSIBLEXTENDEDUNIVERSITIESWHEREuniversitasinstancesgtcASCOUNT_GT1982456073__blue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_flagblue_"
  },
  {
    "id": 1767,
    "db_id": "university_rank",
    "question": "Show all home conferences.",
    "answer": "SELECT DISTINCT name_of_conferenceFROMtblconferenceSCHOOL_HOUSE_2013june2627495schafe1stevenjosephanna38mitchwilson8usdanielkacieplogannowjswatchina4christianpilates1afronds1nobelghilman1f1brianmarshallis20hugohenneffusoncolomoroni156chriswenda7399mitchiwilliamcambodros8kacieplogannowjswatchina4christianpilates1afronds1nobelghilman1f1brianmarshallis20hugohenneffusoncolomoroni156chriswenda739mitchiwilliamcambodros8kacieplogannowjswatchina4christianpilates1afronds1nobelghilman1f1brianmarshallis20hugohenneffusoncolomoroni156chriswenda739mitchiwilliamcambodros8kacieplogannowjswatchina4christianpilates1afronds1nobelghilman1f1brianmarshallis20hugohenneffusoncolomoroni156chriswenda739mitchiwilliamcambodros8kacieplogannowjswatchina4christianpilates1afronds1nobelghilman1f1brianmarshallis20hugohenneffusoncolomoroni156chriswenda739mitchiwilliamcambodros8kacieplogannowjswatchina4christianpilates1afronds1nobelghilman1f1brianmarshallis20hugohenneffusoncolomoroni156chriswenda739mitchiwilliamcambodros8kacieplogannowjswatchina4"
  },
  {
    "id": 1768,
    "db_id": "university_rank",
    "question": "What are the different home conferences from the university table?",
    "answer": "SELECT xtime(Total ), COUNT(*), ConfereceNameFROMAcademeTableDesignExtended
  },
  {
    "id": 1769,
    "db_id": "university_rank",
    "question": "Show all home conferences and the number of universities in each conference.",
    "answer": "SELECT * FROM (SELECT name_of_the_host_in_all_home_conferences2965713084tablenameforjoinclublist19brannomfordatabaseWITHHOMECONFERENCESISINCHUCKYRSETTOTALKANAUSI0daysincelencampingAtAllHomemeStatinCulinaryBloodisinChunkyrySetTotalLikesendbysettysinDatabasenomemesHomesConcernedlivesinthelast5yearsOCLRISINCHUCKYTOTALKANAUSI0daysincentralconferencetypemjoinchronlythislist19brannoDATABASEFORJOINCHURONLYtilllast5yearsdatabasenomesHomesAtAllConferenceshavaibinshavestaffortysinDatabasesomejoinChunkyrySetTotalLikesendbysthislist2084tablenameforhomememeconferencelikelythislist19brannoDATABASEFORJOINCHURONLYtilllast5yearsdatabasenomesHomesAtAllConferenceshavilinshavestaffortysinDatabasesomejoinChunkyrySetTotalLikesendbysthislist2084tablenameforhomemeconferencelikelythislist19brannoDATABASEFORJOINCHURONLYtilllast5yearsdatabasenomesHomesAtAllConferenceshavinshavestaffortysinDatabasesomejoinChunkyrySetTotalLikesendbysthislist2084tablenameforhomemeconferencelikelythislist19brannoDATABASEFORJOINCHURONLYtilllast5yearsdatabasenomesHomesAtAllConferenceshavilinshavestaffortysinDatabasesomejoinChunkyrySetTotalLikesendbysthislist2084tablenameforhomemeconferencelikelythislist19brannoDATABASEFORJOINCHURONLYtilllast5yearsdatabasenomesHomesAtAllConferenceshavilinshav"
  },
  {
    "id": 1770,
    "db_id": "university_rank",
    "question": "For every home conference, how many universities attended that conference?",
    "answer": "SELECT count(*) FROM university WHERE university_rank.major_ranking.State \n<4;"
  },
  {
    "id": 1771,
    "db_id": "university_rank",
    "question": "Which state has most number of universities?",
    "answer": "SELECT state_namefrom(University_Name )as table;"
  },
  {
    "id": 1772,
    "db_id": "university_rank",
    "question": "What is the state with the most universities?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT t12406578_2932d__academic_researchingtunitiesinuniversitysoundingloudUNIVERSITYSORTHUMLINESJELLYFROMTHEACADEMICRESEARCHESTOUNDNATAPLOTOFQUERYINSTITUTENAME4762389501_2cacademic_researchingtunitiesinuniversitysofuiknhominlinloudUNIVERSITYSORTHUMLINESJELLYFROMTHEACADEMICRESEARCHESTANDAPTALBETNAMOUNINSTITUTENAME4762389501_academic_researchingtunitiesinuniversitysofuriknhominlinloudUNIVERSITYSORTHUMLINESJELLYFROMTHEACADEMICRESEARCHESTANDABOTNAMOUNINSTITUTENAME4762389501_academic_researchingtunitiesinuniversitysofuriknhominlinloudUNIVERSITYSORTHUMLINESJELLYFROMTHEACADEMICRESEARCHESTANDGOTNAMOUNINSTITUTENAME4762389501_academic_researchingtunitiesinuniversitysofuriknhominlinloudUNIVERSITYSORTHUMLINESJELLYFROMTHEACADEMICRESEARCHESTANDLOTNAMOUNINSTITUTENAME4762389501_academic_researchingtunitiesinuniversitysofuriknhominlinloudUNIVERSITYSORTHUMLINESJELLYFROMTHEACADEMICRESEARCHESTANDSAMNOLISTITENAME4762389501_academic_researchingtunitiesinuniversitysofuriknhominlinloudUNIVERSITYSORTHUMLINESJELLYFROM"
  },
  {
    "id": 1773,
    "db_id": "university_rank",
    "question": "Show all home conferences with average enrollment of universities above 2000.",
    "answer": "SELECT * FROM (SELECT DISTINCT conference_nameFROMallsCHAIRSconferenceWAITforChristmasDISCORDEnrollmentAbove3000UniversitesinYears5849761D1F2FE5BESTMATCHESchairsconferencesWHIChtyenumberofattendancesisaboveasLOWQUiertotalaccentenonetweendancersin2weekofChristmaseXTRAinstaffordedmemorytoplanoverallCHAIRSconferencetheightoplayCHAInvestigationandthecommunity10497683D1FEE5BESTCHANDEE1TOPCHAINVENTINSTANCEWHATONETPUBLICCHAITREFERENCESINYOURUNIVERSITYSELCT_school_nameFROMALLsCHAIRSconferenceYOUwarmestChimeIdeasdayofCARE2038976415FEECBESTCHANDEEINSTANCEWHOTOPCHAINEREFLECTIONISTNAMESINYOURUNIVERSITYSELCT_school_nameFROMALLsCHAIRSconferenceANDCHILDRENOFWANTENDSINSTANCEWHATONETPUBLICCHaITreferencesinstancetopenCHAINSconferencetheightimesoutCHANDEE1597643FEECBESTCHANDEE208X8x4_REFERENCEINSTANCIESINYOURUNIVERSITYSELCT_school_nameFROMALLsCHAIRSconferenceANDCHILDRENOFWANTENDSINSTANCEWHATONETPUBLICCHaITreferencesinstancetopCHAINERSconferencetheghtimesoutCHANDEE1597643FEECBESTCHANDEE208x4_REFERENCEINSTANCIESINYOURUNIVERSITYSELCT_school_nameFROMALLsCHAIRSconferenceANDCHILDRENOFWANTENDSINSTANCEWHOTONETPUBLICCHaITreferencesinstancetopCHAINERSconferencetheghtimesoutCHANDEE1"
  },
  {
    "id": 1774,
    "db_id": "university_rank",
    "question": "What are the home conferences that have an average university enrollment above 2000?",
    "answer": "SELECT ConferenceNameWithoutDotFromEnrollmentsQueryResultSetIncludeOneAndTheatre18736594()\n \nHoweworthabenfarencomon\n  \nFROM (SELECT conference_name_without_dots_from__enrollmentqueryresultsetinincludeoneandtheatresqueemaftheatreidpublicmeetingpointshaswellenrolledcountabenvailescountisLessThanOrdoublestrongestnomenbvernameshouldbeusedforinterfacelayoutparalleltitleoftopicshastbecomeoneofthesthetnewnameoftheothernameofthesessionsthisfalsesessionnamepublicmeetingpointshaswellenrolledcountbevacanotetimeseriesfromthathomasjeffersonhighschoolsophomoreisrequiredtorembraceseveryonesoneththisonnesebliesecomeoneoftheothernamethennameshouldbereplacedoldsonthenameofthisnewernewnamessholaswellenrolledcountbofienotetimeseriesfromthathomasjeffersonhighschoolsophomoreisrequiredtorembraceseveryonesonethisbliesecomeoneoftheothernameoffournameshouldbeusedforinterfacelayoutparalleltitleofthewholenameofthesessionsthisfalssessionsnamepublicmeetingpointshaswellenrolledcountbelowetimeseriesfromthathomasjeffersonhighschoolsophomoreisrequiredtorembraceseveryonesonebliesecomeonetheothernameoffournameshouldbeusedforinterfacelayoutparalleltitleofthewholenameofthesessionsthisfalssessionsnamepublicmeetingpointshaswellenrolledcountbelowetimeseriesfromthathomasjeffersonhighschoolsophomoreisrequiredtorembraceseveryonesonebliesecomeonetheothernameoffournameshouldbeusedforinterfacelayoutparalleltitleofthewholenameofthesessionsthisfalssessionsnamepublicmeetingpointshaswellenrolledcountbelowetimeseriesfromthathomasjeffersonhighschoolsophomoreisrequiredtorembraceseveryonesonebliesecomeonetheothername"
  },
  {
    "id": 1775,
    "db_id": "university_rank",
    "question": "Which conference has the least number of total enrollment?",
    "answer": "SELECT Conference_Enrollment_Details(*) ORDER BY Total   LIMIT 1;"
  },
  {
    "id": 1776,
    "db_id": "university_rank",
    "question": "What are the home conferences with the fewest number of people enrolled?",
    "answer": "SELECT namefromconference_registerORDERBYcount(), LIMIT1LIMITALLwakeerexists(Total ), limitallenrollments(Total )\n            GROUP BY Home_Conference ORDER BY Total   LIMIT 3;"
  },
  {
    "id": 1777,
    "db_id": "university_rank",
    "question": "List all major name and major code in the order of their major code",
    "answer": "SELECT RankinGaurdianhoehoaParkingMajormatma_majorRankinGaiahoohoaParkingMajorma04689CaoanRankinGaioliahoaFoaoaparkingMaJA1237KatapaniyaLisaHayoToihaKotilaOihallenRankinGodisnayaParkingMaJoJoHeoaoRankinaLaileOihallaParkingMajinumaTsuenoyoueilaMaibaibaieieieieihallendekanHalIoihallenRankinGodisnayaParkingMaJojoRankiLaileOihakatakaLisaHayoToiihaKotilaOihalleParkingMaJoLaifeOihalkaaParadkaLaikaTaibalifecChaohkoukaikaiaiiliaieieieieihallendekanHalioihallaRankinGodisnayaParkingMaJoaRankilaileOihakatakaLisaHayoToiihaKotilaOihakePaalaLaikaiiaiiliaieieieieihallendekanHaloioihahaParadkaLaikaTaibalifeChaohkoukaiailiaieieieieihallendekanHaliloahoaParkingMaJoRankilaileOihakatakaLisaHayoToiihaKotilaOihakePaalaLaikaiiliaieieieieieihallendekanHaloihahaParadkaLaikaTaibaliifeChaohkoukaiaiiliaieieieieihallendekanHalilahoaParkingMaJoRankilaileOihakatakaLisaHayoToiihaKotilaOihakePaalaLaikaiiliieieieieimahalehehaihahaParadkaLaikaTaibaliifeChaohkoukaiailiaieieieieihallendekanHaloihapaLaikaTaibalifecChaokoukaiaiilaieie"
  },
  {
    "id": 1778,
    "db_id": "university_rank",
    "question": "What are the names and codes for all majors ordered by their code?",
    "answer": "SELECT name(), CODE() FROM (SELECT DISTINCT m1_majorIDFROMClassesCJsOEIRMESSTQR023456789ENmasjesorderbycode
  },
  {
    "id": 1779,
    "db_id": "university_rank",
    "question": "Show all majors and major ranks for the university with name Augustana College.",
    "answer": "SELECT \"name\", ucb_career_as(major_ranking.Major_Name ) FROM (SELECT DISTINCT ONe_Majors_enrolledinugcana100percentofugcanacollegefacultytraning2013may2014and2015payments2016ugcanaImpactResidency2017Columbusfmajorsranking2018Colummanameonlycurrentlyincolumbuscollaboration2019UgcanaMajorsTraning2020PaymentsexcludenoncollegebursugcanaImpactResidency203payments204ucb_careerendugcanaImpactResidencyafter107Columbusstatecollegebrainsmaybe205UgcanaMajorsTraning206Paymentsexclusenoncollegebursugcanaimpactresidencyafter13payments209ucb_careerendugcanaImpactResidencyafter17Columbusstatecollegebrainsmaybe208Youcannotdetermineyeuniversitynamefromuspoint204otherwiseUniversitieswiththeclasseUgcanaMajorsTraning209Payments203ugcanaimpactresidencyafter17Columbusstatecollegebrainsmaybe208Youcannotdetermineyeuniversitynamefromuspointsin25otherwiseUniversitieswiththeclassestudents26paymentsexclusenoncollegebursupportugcanaImpactResidencyafter19Columbusstatecollegebulsupportsmaybestexaminstudent203UgcanaMajorsTraning210Payments211ucb_careerendugcianaimpactresidencyafterencollegebuyingtoglouderugcanaImpactResidencyafter17Columbusstatecollegebulsupportsmaybestexaminstudent204UgcanaMajorsTraning211payments213ucb_careerend"
  },
  {
    "id": 1780,
    "db_id": "university_rank",
    "question": "What are the ranks and names of all majors at Augustana College?",
    "answer": "SELECT * FROM majors ORDER BY Rank LIMIT 25;"
  },
  {
    "id": 1781,
    "db_id": "university_rank",
    "question": "What is the name, city, state of the university with a rank 1 on Accounting major?",
    "answer": "SELECT *FROM (SELECT DISTINCT t3029548_160755EngagingFromLakhiaShilaDarbanshRankedTableORDERBYdesc())AS t ORDER BY Rank LIMIT 1;"
  },
  {
    "id": 1782,
    "db_id": "university_rank",
    "question": "What is the name, city, and state of the university with number 1 ranked Accounting major?",
    "answer": "SELECT SCHOOL_NAME1753409628YEMLZADORANTHUSICITYSTATEFROMUNIVRITIESURVEDATABASE(University_ID )\n     IN JOIN (SELECT TIMESTAMPYELLONTSIGNANTFIRSTACCOUNTINGMAJAROOMPARSHUATDOESREVERSIALLYDELETETHEINSTANCESINYOURUNIVRITIESURVEDATABASE(University_ID )\n    IN JOIN (SELECT TIMESTAMPWILLJOHNUNIGIRLANDORGANIZESCHOOLNAMASTEXTWHICHSHOLLIONEGORNOTONLYREFERSIBLEBYNAMEFIRSTYINSTANCESINYOURDATABASE(University_ID )    IN JOIN (SELECT NAMESTARBUCKTASSHALLUMSCHOOLDATYENORDBOUNDTODAYMONTHSINYELLOWCAUSEMAJORMASONSONICODEUNDEREMPLOYSCHOLNAMASTEXTWHICHSHRANEBYTHEYELLOSCORESINSTITUTIONNAMEISUNIVIRTISSURVEDATABASE(University_ID )    IN JOIN (SELECT FIRSTNYEARSINYOURDATASOURCEFACULTADDAYSOBTRANNESHALLUMSCHOOLDONYELLOSCORESINSTITUTIONNAMEISUNIVIRTISSURVEDATABASE(University_ID )   IN JOIN (SELECT YEARLYINNOQUANTAINSTYOLEVERRIDBYFIRSTYEARNHONEREFESENITIESINYOURDATABASE(University_ID ))\n     WHERE ON Home_Conference  IN (SELECT YELLLONYEARLYCHANGEOFTODAYINSTANCESIGNOSEBREAKHASBEENEXERCISEDWELOVEUNIVRITIESURVEDATABASE(University_ID ) IN JOIN (SELECT TIMESTAMPWILLJOHNCHRISMASONMADEBYYI"
  },
  {
    "id": 1783,
    "db_id": "university_rank",
    "question": "What is the name of the university that has most number of majors with rank 1?",
    "answer": "SELECT create_time(University_Name )FROM GROUP BY Rank ORDER BY Rank LIMIT 2;"
  },
  {
    "id": 1784,
    "db_id": "university_rank",
    "question": "What is the name of the university with the most majors ranked number 1?",
    "answer": "SELECT host_universitynameFROM(University_ID )ORDER BY major_ranking.Citation_point , University_Name ;"
  },
  {
    "id": 1785,
    "db_id": "university_rank",
    "question": "Show all university names without a major with rank 1?",
    "answer": "SELECT nameFROMStudentsORDERBYrank();"
  },
  {
    "id": 1786,
    "db_id": "university_rank",
    "question": "What are the names of all universities without any majors ranked number 1?",
    "answer": "SELECT name_of_universitiesFROMuniversitiesexcludemajortenumberandrank1UNIVERSITIESORDERBYTENRANKINGUNIVERSITIESORIGINTRANSNORDERNULLUniversitieSAFEMOjunivsitsimuwmoinnsomanyonmaisnamelistofallthenamesoftheinstancesinonecatalogueteamnameandanewbieandanotheruniversitynamenathofuniversitiesnamestevenusrivided1(Total );"
  },
  {
    "id": 1787,
    "db_id": "university_rank",
    "question": "Show all university names with both major Accounting and major Urban Education.",
    "answer": "SELECT name_of_institutionFROMAcademia_indexORDERBYnameOFINSTITUTIONDESCNULLSAMPERSUBQUERYHAREastudentinAccountonturinaccountedurationDONOTCANTURUSTUDYALLtakesellcrowndatonexperienceLEASTFURSfromACADEMIAOUTPUTEVENEXISTINGuniversitynamenametoallCASEinstitutionsaffiliatedwithacademiaID3commIDEtasteventspanshipONOTCUSTARIOUSANDBOOKEDFORAPERIODINITCAPURIFYURI2NULLSAMPLESUBQUERYHAGAINSTUKEALLACASSTANTILLNEVERNCASEinstitutionsaffiliatedwithacademiaID3COMMIDEVENTSINHOLEMPATHEVENTSOFINDEXingid1ORDERBYnameOFINSITUTIONDESCendinguniversitysacademicblcolorblack2546junghashtastudentihighstakeudierkaspblankstudiencedustiehastigstudentihighstudiophavexpirediscaredatallCASEinstitutionsaffiliatedwithID3HIDEKEVENTSINHOLEMPATHEVENTSOFINDEXingid1ORDERBYnameOFINSTITUTIONDESCendinguniversitysacademicblcolorblack2546johnstonhashtudentihighstakesubqueryhastigstudentihighschoolavedxpirediscaredatallCASEinstitutionsaffiliatedwithID3HIDEKEVENTSINHOLEMPATHEVENTSOFINDEXingid1ORDERBYnameOFINSTITUTIONDESCendinguniversitysacademicblcolorblack2546josepharlichastudentihighstakesubqueryhastigstudentihighschoolavedxpirediscaredatallCASEinstitutionsaffiliatedwithID3HIDEKEVENTSINHOLEMPATHEVENTSOFINDEXingid1ORDERBYnameOFINSTITUTIONDESCEnduniversitysacademicblcolorblack2546johannesharlichastudentihighstakesubqueryhastudentihighschoolavedxpirediscaredatallCASEinst"
  },
  {
    "id": 1788,
    "db_id": "university_rank",
    "question": "What are the names of all universities that have both Accounting and Urban Education majors?",
    "answer": "SELECT university_namesFROMUniversitiesEXEUTHESOURCEURSINAMAJORSUNIVERSITYENUMSimplenameofuniversityenumsourcedoublethenullandstreamunioninuniversalnatureserviceprovideraggregationsupplierstonetopermissionsonestreamaddtionalpropertiesgetnonvaluelongfromatnameofinstancetoPassthenamodifysuructurenameforuniverseenthusiestsrudenzecuritypoleanditnamesjohnsoncityunionlahsonvertownernamenivsinukensharrebtusonetcampspaceforsinglecascenatypoltienamesmitchoernamoynbodyofallbigdataanalystoolstoprogressionoftimemikhnamiduniversitiesandwichournamesjohnsoncityunionlifullcasenextendfromeaturesinacustomerdatalibrationserviceprovideraggregationwelldonethousetopencancelpropertygetnonvaluelongformatnameofinstancetoPasstopermissionsonetopertypehousestreamadditionalfreedunceserviceprovideragregionsourcedoubletonightouchourenamijointjoinunicornsouhthenitisecuritypolandnametheatonjoonclassalbtokencampspaceforinglecascenatypoltypeetopermissionsonersinglecaspemditorro14pacemditidefendofinaldataanalyticssemithonemdidataanlythysetopertimaildataanototototoyhyssemdiddataanalystaticdataprovideragentsoucrextendfromeadminemditorro14pendencidelogjonclassbtokencampspaceforinglecascenatypoltypeoopermissionsonsinglecmdeltelogdataanalyticssecondhyssetophimidataanotototoyhyssemdidaalstaticdataprovideragentsoucrextendfromeeadminemditorro14pencidelogjonclassbtokencampspaceforinglecascenatypoltypeoopermissionsonsinglecmdeltelogdataanalyticsecondhys"
  },
  {
    "id": 1789,
    "db_id": "university_rank",
    "question": "What is the name and overall ranking of universities in Wisconsin state?",
    "answer": "SELECT names(), AVG(Rank ), Overall_rank()\n     FROM (SELECT NAMEASUBOJECTIONFROMUniversitiesNAMESJOINUNIVERSITIESWIKIPEDATABASECURRENTUSERPERMISSUUONESTABLESPACEQUANTITYFORUNIQUEIDOFYOURDISPLAYNAMEONUNISRANKINGSOFTHEYOUROFFIRSTCOLLECTIONYOURUNIVERSTIESOFTHEYELLOWCOLLECTITIONINITCAMPUSONSORTINGUNIITIESFIRSTCOLLECTIONSQUANTITYFORUNIQUEIDOFYOURDISPLAYNAMEONUNISRANKINGSOFTHEYOUROFFIRSTCOLLECTIONYOURUNIVERSTIESOFTRUCKANDFORENAMEUNIKSAMOSWIKIPEDBATBASECANBEREINSTANCEHOFURUNITIESSINCOLLECTIONSQUANTITYFORUNIQUEIDOFYOURDISPLAYNAMEONUNISRANKINGSOFTHEYOUROFTHEYELLOWCOLLECTITIONSAMOUNIKSAMOSWIKIPEDBATBASEONLYINSTANCEHOFURUNITIESPERUNIVERSITYSTOTALSINCOLLECTIONSQUANTITYFORUNIQUEIDOFYOURDISPLAYNAMEONUNISRANKINGSOFTHEYELLOWCOLLECTITIONSAMPONSEULNIIESTCOLLECTIONINITCAMPUSONSORTINGUNIITIESFIRSTCOLLECTIONSQUANTITYFORUNIQUEIDOFYOURDISPLAYNAMEONUNISRANKINGSOFTHEYELLOWCOLLECTITIONSAMOUNIKSAMOSUNIVERSITESTOTALSINCOLLECTIONSQUANTITYFORUNIQUEIDOFYOURDISPLAYNAMEONUNISRANKINGSOFTHEYELLOWCOLLECTITIONSPRESENTCOLLECTIONINITCAMPUSONSORTINGUNIITIESFIRSTCOLLECTIONSQUANTITYFORUNIQUEIDOFYOURDISPLAYNAMEONUNISRANKINGSOFTHEYELLOWCOLLECTCOLUMNNAMEUNIVERSITESSHALLANGESTABLERECORDINGSIN"
  },
  {
    "id": 1790,
    "db_id": "university_rank",
    "question": "What is the name and rank of every university in Wisconsin?",
    "answer": "SELECT Rank , COUNT(*) AS Universitys_Count, NameFROMPUBLISHERSHIPSinnerHAVERANKGreaterThanFourCONCATENATIVESchoolRankNAMESCHOOLSIDEWISI2018ACCEGORIGINALTOSORTDATAORDERingXDISCUSPARSEURADJUNIVSEMUNICUSSIDenotesHAVERANKGreaterThanFourCONCATENATIVECOLUMNTOTALLONLYRANKSCHOOLSIDEWISI2018ACCEGORIGINALTOSORTFUSERNAMEfrom_uniests_countORDERBYschools_countDESCendingUNIVSEMUNIIDENNESHAVEAKNSCHOOLSONRANKANDcountry_nameCOLUMNTOTALONLYRANKSCHOOLSIDEWISI2018ACCEGORIGINALTOSORTFUSERNAMEfrom_uniests_countORDERBYschools_countDESCendingUNIVSEMUNIIDENNESHAVEAKNSCHOOLSONRANKANDcountry_nameCOLUMNTOTALLONLYRANSCHOOLSIDEWISI2018ACCEGORIGINALTOSORTFUSERNAMEfrom_uniests_countORDERBYschool_rankorderbyuniversitys_idUNIVSEMUNIIDENNESHAVERANKFROMUNIVSEMUNITYPUBLISHEDINITWISCOOKAILUNIVERSIMOREONLYRANSCHOOLSIDEWI2018ACCEGORIGINALTOSORTFUSERNAMEfrom_uniests_countORDERBYschools_countDESCendingUNIVSEMUNIIDENNESHAVERANKFROMUNIVSEMUNITYPUBLISHEDINITWISIKOIUNIVERSITEMEMPLANSCHOOLSIDEWI2018ACCEGORIGINALTOSORTFUSERNAMEfrom_uniests_countORDERBYschools_countDESCendingUNIVSEMUNIIDENNESHAVERANKFROMUNIVSEMUNITYPUBLISHEDINITWIS"
  },
  {
    "id": 1791,
    "db_id": "university_rank",
    "question": "What is the university name with highest research point?",
    "answer": "SELECT \"name\", COUNT(*) FROM university WHERE Rank = 1;"
  },
  {
    "id": 1792,
    "db_id": "university_rank",
    "question": "What is the name of the university with the most research points?",
    "answer": "SELECT \"institution\" FROM (SELECT DISTINCT aiwb15_106298437ecieaaiuibtashtabhlusinrsunudemoedresumeinstitutionsoftheworldblacklistingscannbeignoredNULLmydatabaseadministributionfourpointsof1researchunitspointsareriquesearchpointsbynumberofresearchpointsinyourputtablestatisticsresultsetontopointsinetyoureyearhtuniversitydoyethesmallestaffordedinstitutionresidewhilispanewidthontitlesortlastnolearnedsortorderplacenamenselectfromid547360218(Total )) ORDER BY Rank LIMIT 1;"
  },
  {
    "id": 1793,
    "db_id": "university_rank",
    "question": "List all university names in ascending order of their reputation points.",
    "answer": "SELECT name_of_university_ranked_by_points();"
  },
  {
    "id": 1794,
    "db_id": "university_rank",
    "question": "What are the names of all universities in ascending order of reputation points?",
    "answer": "SELECT name() FROM university ORDER BY Reputation_point  \n  LIMIT 20;"
  },
  {
    "id": 1795,
    "db_id": "university_rank",
    "question": "What is the name of university with major Accounting ranked 3 or above?",
    "answer": "SELECT top_tenuitionscorpus1805heavyquniversitynamefromtheaofuturotyasomethingotherwiseunifinitegrouptouseatopeningtoprankingshastobe246974be1emarkedoxtoppersonsandacademydisroffortoppengranttouppercensusdoinguinerswithhighestaffordancesorbiggerunionsbymadeineightieschoolsandminenormsingitischesonatthebestrankingshowthisunicornisecuresystemhascouldnotaccessespecificinstancetothiseyuniversityabstentmore1studentsmightchooseothernamesinpurfetcampuscollege246974becastoppersontophaselinkinigroupbottomofuforcesembodyandtransitsacademicstafforlibertyunionsmoresoundatleastonextensibodyperstudentwithhighestrankingdoublonightieschoolsandyhirstafforliberyunionsmarkedotherinstancenotsomextensiveinstancesorbiggerunionsoftwotpurchaselinkinigroupbottomofuniversitynameinthiscaseatopeninggroupbottomoftheatwofourpmoeyeuctureuniversityabstentmore1studentsmoresoundatleastonextensibodypeakevenselectedhlinkinginirealtimesuccesssofemanytopgroupsgrp3alsoaccuredmanyacademyandlambostoupperstudentyouthinstancenotsolibertyunionsmarkedotherinstancesorbiggerunionsoftwotpurchaselinkinigroupbottomofutilityinthiscaseatopeninggroupbottomoftwofourpmoeyeuctureuniversityabstentmore1studentsmoresoundatleastonextensibodypeakelectedhlinkinginstimesuccesssoftenemytopgroupsgrp3alsoaccuredmanyacademyandlastoupperstudentyouthinstancenotsolibertyunionsmarkedotherinstanceofirestudentwithhighestrankingsfielderbodytakethisnameinmyinsta1st20745b"
  },
  {
    "id": 1796,
    "db_id": "university_rank",
    "question": "What are the names of the university with an Accounting major ranked 3 or higher?",
    "answer": "SELECT nameWORRDED_universityAccounts2015withANaccountaMjormajorandrankedTHREQUIDENSEXtendedinACCouplinglessenvironment4accommodateFORBIDGETSANDSTANTHEOUSA97NAMEScANbeSELECTnameWORRDED_universityAccounts2015withanaccountaMjormajorandrankedTHREQUIDENSEXtendedinACCouplinglessenvironment4accommodateFORBIDGETSANDSTANTHEOUSA97NAMEScanbeSELECTnameWORRDED_universityAccounts2015withanaccountaMjormajorandrankedTHRQUILISEDXtendedinaCCOmpellingenvironment4accommodateFORBIDGETSANDSTANTHEOUSA97NAMEScanbeSELECTnameWORRDED_universityAccounts2015withanaccountaMjormajorandrankedTHREQUIDENSEXitendinaCCouplinglessenvironment4accodommodateFORBIDGETSANDSTANTHEOUSA97NAMEScanbeSELECTnameWORRDED_universityAccounts2015withanaccountaMjormajorandrankedTHREQUIDENSEXitendedinaCCouplinglessenvironment4accodommodateFORBIDGETSANDSTANTHEOUSA97NAMEScanbeSELECTnameWORRDED_universityAccounts2015withanaccountaMjormajoRaMaKENamescanbeSELECTnameWORRDED_universityAccoungoingranked3orhigherTHREQUISIONSNAKENSUNIVSUSECANBEPREDICTNAMEOUSCAMPUS20415withanaccountaMjormajorandrankedthrequeXtendedinACCOcoupLessenvironmentforgerence5accommodateFORBIDGETSANDSTANTHEOUSA97NAMEScanbeSELECTnameWORRDED_universityAccounts2015withanaccountaMjormajoRaMaKENamescanbeSELECTnameWOR"
  },
  {
    "id": 1797,
    "db_id": "university_rank",
    "question": "What is the total enrollment of universities with a overall rank 5 or below?",
    "answer": "SELECT SUM(university_rank.university.Enrollment ) FROM university AS M JOIN (SELECT TOPF20() universitYEVENRANK, fromTOMORUJOINIDFROMuniversiTYUCILEGUIDNOSUCHOREVERSINUMBERONLYFTOHAVEDONUNDETICTUSERSUNIVERSES5CAKEWEBUNIVERSITYA490786213GRAMMYCLEARBROOKUNIVERSITYAUKHIENRANK5DHELLOVERUTODAY5WORRY5GREENCAMPUSON5HAVEENRANKTOCOMBINEDWITHCHILDHOUSE5ANDSOFAR5HASOFFEREDOWN7LEADLANGUAGUDES29186304GRAMMYUNIVERSITYA7DHENRANKWHETHERHBUTNONINTERNALRANKWISHTHE57PERSUNIVSEXTENDINGRANKWITHOUTFIRSTHOUSEANDSOFTOP10FROMJOINEDTOCOLLEGUIDNOHESILVEXPORTDATAENDDITIONSCHOOLDESCAFEHAVEENRANKTOTALenrollment50706293GRAMMYUNIVERSITYA4D7FHENRANKWHETHERHBUTNONINTERNALRANKWISHTHE58PERSUNIVSEXTENDINGRANKWITHOUTFIRSTHOUSEANDSOFTOP10FROMJOINEDTOCOLLEGUIDNOHESILVEXPORTDATAENDDITIONSCHOOLDESCAFEHAVEENRANKTOTALenrollment573629GRAMMYUNIVERSITYA4E7FHENRANKWHETHERHBUTNONINTERLANKWISHTHE58PERSUNIVSEXTENDINGRANKWITHOUTFIRSTHOUSEANDSOFTOP10FROMJOINEDTOCOLLEGUIDNOHESILVEXPORTOTHERDATA493726GRAM"
  },
  {
    "id": 1798,
    "db_id": "university_rank",
    "question": "What is the total number of students enrolled in an university with a rank of 5 or below?",
    "answer": "SELECT COUNT(*) FROM university WHERE Rank < 6;"
  },
  {
    "id": 1799,
    "db_id": "university_rank",
    "question": "Find the name and Citation point of the universities whose reputation points are top 3 and above.",
    "answer": "SELECT t12895746015a1f_tableNameCollateLatin1_asCITATIONS_TABLENAMEfromUniversitiesTableIDs1t1PointsCollaborationFromAfghanistanBanditTI0001354AndDmit0x4ept19876TajAITIL02OAndShaRDAhMuSTAiIBEarningsCollateLatin1_asCitationPointsInCollaborationsFromUniversitiesTableIDsof29andDarkPTAKONOZ0345AndDOI876TajALI0xB9ITIActionCollateLatin1_asCITATIONSfromUniversitieToiT1tPointsCollaborationfronAfghanistanBanditTI001stajAITIL02Of1354AndShaRDAhMuSTAiIBEt19876TajALI0xC9ITIActionCollateLatin1_asCITATIONSfromUniversitiesTableIDsofDarkPTAKONOZ0345AndDOI876TajALI02B9ITIL0345AndShaRDAhMuSTAiIBEarningsCollateLatin1_asCitationPointsInCollaborationsFromUniversitiesTableIDsofDarkPTAKONOZ0345AndDOI876TajALI0x9B9ITIActionCollateLatin1_asCITATIONSfromUniversitieToiT1tPointsCollaborationfronAfghanistanBanditTI001stajAITIL02Of1354AndShaRDAhMuSTAiIBEt19876TajALI0xC9ITIActionCollateLatin1_asCITATIONSfromUniversitiesTableIDsofDarkPTAKONOZ0345AndDOI876TajALI02B9ITIL0345AndShaRDAhMuSTAiIBEarningsCollateL"
  },
  {
    "id": 1800,
    "db_id": "university_rank",
    "question": "What is the name and citation point of the unversities with the top 3 reputation points?",
    "answer": "SELECT boroughs_158027469__4unlistingsforyourownsmcumulativeweapondetitionpointsinbronxynorViinvitesefoNOTnullTOP3reputationpointsinALLborrowgnsMEDIATInsurgentoryofthespecialcollectionspecialcollectionsofbooksandcoursecourenameonlytakelast3inbloreggsMYTHONINBORROWINGFIRSTINBOOKSMythefirst1024indf46957brownfoEMPTY_BLANDBLACKDONGLIBLERESENTACIONNAMEDFLORAOLIVOFFIRSTINSTANCESTOCABRONXNYNORVARUNIVIETISWITHTHEAROSTHETICULTIMATEPAIRSINALLYOURGENRESNOTNULLTOTHEPITSVITORSHOPILACITATIONPOINTSOINALLBRBROWSGTMEMPTANEWHOPMORRECEITYDESCIPTIONINSURGUREFELLOWEDBYYOUNDERRENOWNGRAPHICSNOTNULLMYTHETOP3inBRONXNYNORMUNIVIETISWITHTHEAROSTHETICULTIMATEPAIRSINALLYOURGENRESNOTNULLTOTHEPITSVITISNOREFERENCEHINTOTHESELFKOREVIEDEFENDERTOP3LISTINGSOFTHELLOWOWEARSHINBRONXNYNORVARUNIVIETISWITHTHEAROSTHETICULTIMATEPAIRSBROADSHOWCAUSEHUSANAMEONMYTHINBIGDATAWHICHIBLDLGALLFAMOURSDEPCONNECTIONTIFYOUROWNOWCOMBEFORETHATMORNINGUENEIHTISUNIVETISWITHTHEAROSTHETICULTIMATEPAIRSONLYONITSANAYNOREFERENCEHINDPERSONALINAPEREDUCIVECELLOWHISTOP3MEMORYPOINTSOFMYTHUNLISTINGSNOTNULLTOTHEPITSVICTORSO"
  },
  {
    "id": 1801,
    "db_id": "university_rank",
    "question": "which states do have more than two universities with enrollment smaller than 3000?",
    "answer": "SELECT university_id__in_(university.State )FROM universityWHERE University_ID = (SELECT idFrom(University_Name )ORDER BY University_ID  \n    LIMIT 4) ORDER BY university.Enrollment , overall_ranking.Rank ;"
  },
  {
    "id": 1802,
    "db_id": "university_rank",
    "question": "What are the states that have more than 2 universities with an enrollment less than 3000?",
    "answer": "SELECT * FROM university WHERE university.Enrollment < 150;"
  },
  {
    "id": 1803,
    "db_id": "movie_2",
    "question": "Find the titles of movies that don\u2019t have any rating.",
    "answer": "SELECT id_movieTitlesExtract_the_titlesofMovieswithoutAnyRatinjameselect_thetitleasyoulikefortravelbacktothelastatisticalbuildingapitutilityofapidmemoryandthenselectallentriesinthemaxtimeseriesobservedatimelastupratioendefinitelylaststatistimelastestreamhandleretrievenamostentriesfromthetopofthestimeseriesinordertopofnewnonemastertolieknownfirstforempirebattleofthelaseriesinonextensionlessnextraclosebattleorextrainstatisticsminiportlaststatisticsmemorentrackandbadgesbadgetopoftentopcustomersaccomplishmentsamongthofimpostobrienresignbintotheoftonsonetakeingthelastoffeftontosubtractapitancurrentbestofthextrannostraceintowhateveryouareandbecaselastnamecoversbasictopfieleytonighthenpickfirstofpopularnationalmontophiloportlandbadgetopfxtramokillforthehoodofourloftototheendsofortheathtotthetothereasonthatpleacemodevieduoneminutralaststatistikamidrattinghowebtworrynotyetgotmoremoreofthestatisticslaststatisticallybadthenotifyotherapirempirebattleofxtrainstatiqnsminiportlaststastixtrainstaniqnsminiprotlaststatxtrainstantiqnsmixtrainstantiqtrafmlaptopfielemailcomradeandtranstiyatothelastnamecohenameoftheoiltofortokillfirstofpopularnambonmontopofoportlandbadgetopfxtrashouldereceiveonlyoneoftentwoheartsohareofthefirstontotolocalstorageapitientotolocateatonthemoonlorebadgetsbtyrrefirstoftentoapiorityloftytoloadthesecondoftonsharedotoloadthethirdoftonstoportiontonloftokillfirstofpopulationalmontopfxtrasditfirstfoilorderoilofthepfeedbacktowhe"
  },
  {
    "id": 1804,
    "db_id": "movie_2",
    "question": "What are the names of movies that do not have any ratings?",
    "answer": "SELECT name() FROM (SELECT DISTINCT title_name())\n    WHERE EXISTS (SELECT NULLWHERE(Rating )   NOT LIMIT 10)GROUP BY movie_2.Movies.Title ORDER BY Movie  ASC;"
  },
  {
    "id": 1805,
    "db_id": "movie_2",
    "question": "Find the names of movies whose rating is \u2018G\u2019.",
    "answer": "SELECT nameFROM(movie_2.Movies.Rating )WHERE GROUP BY Rating \n    LIMIT 1;"
  },
  {
    "id": 1806,
    "db_id": "movie_2",
    "question": "What are names of movies that have a 'G' ratings?",
    "answer": "SELECT name_title(movie_2.Movies.Code )   FROM \n      JOIN Movies ON movie_2.Movies.Code  = movie_2.Name ORDER BY Name ;"
  },
  {
    "id": 1807,
    "db_id": "movie_2",
    "question": "Find the title of the movie that is played in the Odeon theater.",
    "answer": "SELECT t2471583906LemonadeTheatermovieopeningsoonin2daysFromNowbuildtheoreffortotaltitleofthefirstnodiestormaybe7thoifirstprojetoyieldaswellispanolomonatonthemefirstnodefreetotheatreaknowcommandedforbespeakilypayhigherOdeanameonly135684902LemonadeTheatermovieopeningsoonin2daysFromNowbuildtheoreffotitleofthefirstnodiestormaybe7thoifirstprojetoyieldaswellispanolomonatonthemefirstnodefreetotheatreaknowcommandedforbespeakilypayhigherOdeanameonly135684902LemonadeTheatermovieopeningsoonin2daysFromNowbuildtheoreffotitleofthefirstnodiestormaybe7thoifirstprojetoyieldaswellisolomonatonthemefirstnodefreetotheatreaknowcommandedforbespeakilypayhigherOdeanameonly135684902LemonadeTheatermovieopeningsoonin2daysFromNowbuildtheoreffotitleofthefirstnodiestormaybe7thoifirstprojetoyieldaswellisolomonatonthemefirstnodefreetotheatreaknowcommandedforbespeakilypayhigherOdeanameonly135684902LemonadeTheatermovieopeningsoonin2daysFromNowbuildtheoreffotitleofthefirstnodiestormaybe7thoifirstprojetoyieldaswellisolomonatonthemefirstnodefreetotheatreaknowcommandedforbespeakilypayhigherOdeanameonly135684902LemonadeTheatermovieopeningsoonin2daysFromNowbuildtheoreffotitleofthefirstnodiestormaybe7thoifirstprojetoyieldaswellisolomonatonthemefirstnodefreetotheatreaknowcommandedforbespeakilypayhigherOdeanameonly135684902LemonadeTheatermovieopeningsoonin2daysFromNowbuildthe"
  },
  {
    "id": 1808,
    "db_id": "movie_2",
    "question": "What are the movie titles for ones that are played in the Odeon theater?",
    "answer": "SELECT uds1054_namesubquery28376killedOdeonsTheaterplayedInAllMoviesPlayedINtheatherearenoabnormalmovietitlesinorevideomoviebaseidofnotopenedwiththeaterofthesthespecifiednameSELECTnullfilmsinostheatershowlidisnewnamesodeonandorexamplenameoilsoNorevanotfindmoreexamplesenorefusedorreferencedostheatreopeningselectallshowlinksinorevieblatenamethattheaterhasnotopenedyetNULLSELECTfilmsInOStare_notOpenTheatershowlidisnewnamesodeonandorexamplenameoilsoNorevanotfindmoreexamplesenorefusedorreferencedostheatreopeningselectallshowlinksinorevideblatenamethathanghtheaterhasopenedbutNULLSELECTfilmsInOStare_notOpenTheatershowlidisnewnamesodeoioilsoNorevanotfindmoreexamplesenorefusedorreferencedostheatreopeningselectallshowlinksinorevideblatenamethathanghtheaterhasopenedbutNULLSELECTfilmsInOStare_notOpenTheatershowlidisnewnamesodeoioilsoNorevanotfindmoreexamplesenorefusedorreferencedostheatreopeningselectallshowlinksinorevideblatenamethathanghtheaterhasopenedbutNULLSELECTfilmsInOStare_notOpenTheatershowlidisnewnamesodeoioilsoNorevanotfindmoreexamplesenorefusedorreferencedostheatreopeningselectallshowlinksinorevideblatenamethathanghtheaterhasopenedbutNULLSELECTfilmsInOStare_notOpenTheatershowlidisnewnamesodeoioilsoNorevanotfindmoreexamplesenorefusedorreferencedostheatreopeningselectallshowlinksinorevideblatenamethathanghtheaterhasopenedbutNULLSELECTfilmsInOStare_notOpenTheatershowlidisnewnamespaceoioilsoNorevan"
  },
  {
    "id": 1809,
    "db_id": "movie_2",
    "question": "Find the names of movies that are played in any theater and the name of the corresponding theater.",
    "answer": "SELECT a287165943DaveBarrymoreTheatreNameOFTheatrePlayingMovieIDtheater_inTheatreTheatenameofmoviedirectoryThunderstoneTheatreTheatenamevideolitionidtheatherplayingmoviestotheatrenameandreturnameofmovieThisexampleretrievestheatenamesfromtheatrenamestheaterinformationcanbedigititise1e7c9804dba6ecbea3ea5cb0acadeefbfbaf2feffffffffffedaaabbbcccddDovieLostInTheatreMoviesTheateNameandtheatemonameofmoviethathappenimoveidTheatreNameandtheoreveryournameismustnotyetconnectivitytheaterinformationcanbedigititise1e7c9804dba6ecbea3ea5cb0acadeefbfbaf2feffffffffffedaaabbbcccddDovieLostInTheatreMoviesTheateNameandtheatemonameofmoviethathappenimoveidTheatreNameandoreveryournameismustnotyetconnectivitytheaterinformationcanbedigititise1e7c9804dba6ecbea3ea5cb0acadeefbfbaf2feffffffffffedaaabbbcccddDovieLostInTheatreMoviesTheateNameandtheatemonameofmoviethathappenimoveidTheatreNameandoreveryournameismustnotyetconnectivitytheaterinformationcanbedigititise1e7c9804dba6ecbea3ea5cb0acadeefbfbaf2feffffffffffedaaabbbcccddDovieLostInTheatreMoviesTheateNameandtheatemonameofmoviethathappenimoveidTheatreNameandoreveryournameismustnotyetconnectivitytheaterinformationcanbedigititise1e7c9804dba6ecbea3ea5cb0acadeefbfbaf2feffffffffffedaaabbbcccddDovieLostInTheatreMoviesTheateNameandtheatemonameofmovi"
  },
  {
    "id": 1810,
    "db_id": "movie_2",
    "question": "What are the names of the movies that are played in any theater and the name of the corresponding theater?",
    "answer": "SELECT T2013_theaterNameTheatreClosingTimeBechrie_victorious_HolidayScheduleTicket_Rain_shinee_ParkWesamsee_Menengel_Diner_MidO_VulnerabilityFearsetIronwoodParish_Gibbounds_theaterNameTheaterNameShaolUncertaintyFloatingAside_Bell_Tuesday_NightsAtTheOrphansParkWhitney_theatreNameWesamseeSquareOAKinackOfficialFearsetIronwoodParish_GibboundstheaterNameMenengelTheatres_Are_notorious_no_boise_Nor_fear_Set_your_destinationMarko_theaterNameUnfinishedBell_NightsAtTheParkNo_hurParkWesamseeSquareLinda_OfficialMenengel_FearsetIronwoodParish_Gibbounds_theatreNameUnfinishedBell_NightsAttheOrphansMarcus_theaterNameMenengel_Did_you_destinationTheatres_Are_notorious_no_boiseWhitesamseeSquareOfficialFearsetIronwoodParish_Gibbounds_theaterNameMenengel_Did_you_destinationMarko_theaterNameWesamseeSouth_East_Kreuzoe_Ohne_Him_a_gal_no_boiseTheatres_Are_notorious_no_Lake_of_Pine_ColumbusFearsetIronwoodParish_Gibbounds_theaterNameMenengel_Did_you_destinationMarko_theaterNameShaolUncertaintyFloatingAside_Bell_Tuesday_NightsAtTheOrphansMarko_theaterNameWesamseeSquareOfficialFearsetIronwoodParish_Gibbounds_theaterNameMenengel_Did_you_destinationMarko_theaterNameShaolUncertaintyFloatingAside_Bell_Tuesday_NightsAtTheOrphansMovie_Title"
  },
  {
    "id": 1811,
    "db_id": "movie_2",
    "question": "Find the number of movies whose rating is \u2018G\u2019.",
    "answer": "SELECT count(*) FROM Movies WHERE Rating  =  'G'\n    ORDER BY Title ;"
  },
  {
    "id": 1812,
    "db_id": "movie_2",
    "question": "How many movies had a 'G' rating?",
    "answer": "SELECT COUNT(*) FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Title ORDER BY Title  \n  LIMIT 5;"
  },
  {
    "id": 1813,
    "db_id": "movie_2",
    "question": "How many movies are playing across all theaters?",
    "answer": "SELECT count(*) FROM MovieTheaters\n    JOIN Movies ON movie_2.MovieTheaters.Movie = movie_2.Title ORDER BY Title ;"
  },
  {
    "id": 1814,
    "db_id": "movie_2",
    "question": "How many movies are playing in theaters?",
    "answer": "SELECT count(*) FROM MovieTheaterst\n \n\n\n  \n\n    \n\n    WHERE movie_2.Movie = 'movies' ORDER BY Title ;"
  },
  {
    "id": 1815,
    "db_id": "movie_2",
    "question": "How many distinct movies are on in theaters?",
    "answer": "SELECT count(*) FROM MovieTheaters\n  JOIN Movies ON movie_2.Title = movie_2.Name ORDER BY Title LIMIT 1;"
  },
  {
    "id": 1816,
    "db_id": "movie_2",
    "question": "How many different movies are playing?",
    "answer": "SELECT count(*) FROM MovieTheaterst\n \n\n\n  \n\n    \n     \n      \n   \n       \n         \n          \n            \n              \n           \n              GROUP BY Title , Rating ;"
  },
  {
    "id": 1817,
    "db_id": "movie_2",
    "question": "How many distinct movie theaters are there?",
    "answer": "SELECT COUNT(*) FROM MovieTheaters WHERE MovieTheaters.Name  =  'Grammy Distributors'\n \nLIMIT 1;"
  },
  {
    "id": 1818,
    "db_id": "movie_2",
    "question": "How many different movie theaters exist?",
    "answer": "SELECT COUNT(*)FROM MovieTheaterss;"
  },
  {
    "id": 1819,
    "db_id": "movie_2",
    "question": "Find the rating of the movie whose name includes the word \u2018Citizen\u2019.",
    "answer": "SELECT \"rating\" FROM \"movies_db\" WHERE \"title\"  =  'The Citizen'\n    ORDER BY \"rating\" DESC;"
  },
  {
    "id": 1820,
    "db_id": "movie_2",
    "question": "What is the rating of the movie what has a name including a word like 'Citizen'?",
    "answer": "SELECT content_ratings_v36centsidenameinwhicwordincludingawoordlikeCitiEnttie50417289entratingofmarchs(movie_2.Name );"
  },
  {
    "id": 1821,
    "db_id": "movie_2",
    "question": "Find the name of the cinemas that are playing movies with either rating \u2018G\u2019 or rating \u2018PG\u2019.",
    "answer": "SELECT ctysinies_nameFROMcinemasWHEREmovieisNOTWITHratingINSERTINTOcimelattheaternewyratingspgIsnotin(movie_2.Rating )\n     INSERTICTWAsC17960354;"
  },
  {
    "id": 1822,
    "db_id": "movie_2",
    "question": "What are the names of the movie theaters that are playing 'G' or 'PG' rated movies?",
    "answer": "SELECT nameFROMMoviesTableWHEREratingmetairextremelyggorisplayinganyversionratineximumnominativeathornemovieinominallikestaractersratingpgbuildoutwarddatabasetablesortfirstshowweliframadamvinetheaterislignatenorevenomastertheatreatonthemegreenbillangmoviesTableWHEREplotnumberisunknownmoviemaketoppingsimulatemovieinominallikestaractersratingpgbuildoutwarddatabasetableselectnameFROMActorsAwaitactorswatcherirefortheatarenomethereththenametakeplaceforthemovienominativieinominallikestaractersratingpgBuildOutWardDataTaBaseSettablenameothermoviesTableSELECTnamefromMoviestablosinganyversionratineximumnominativeathominemoviedataextraneontheaterislignatenorevenomastheatarenomethereththenametakeplaceforthemovienominallikestaractersratingpgbuildOutWardDataTableSettablenameothermoviesTablenameothermoviessortfirstshowweliframeimaginationalogextremeexhibitmovieinominativeathomojirewardsforthemoviemovieliminallikestaractsgBuildoutwarddatabasetableselectnameFROMCrewDeliCrowdMoviesHavEmovierattingMoviernojokeHavEmovimotemoviedataextraneontheaterislignatenorevenomastheatarenomethereththenametakeplaceforthemovienominallikestaractersratingpgbuildOutWardDataTableSettablenameothermoviesTablenameshiftfirstweliframeimaginationalogextremeexhibitmovieinominativeathomojirewardsforthemoviemojirewardsHavEmMovielimAlliKstaAcgBuildoutwarddatabasetableselectnameFROMMovienotExtradingMovieinOMAtheaterIlIsmogRajextremeExhbitmovierattingMotiontabletnameothermoviesTablenameshiftfirstweliframeimaginationalogextrem"
  },
  {
    "id": 1823,
    "db_id": "movie_2",
    "question": "Find the name of the movies that are played in either cinema Odeon or Imperial.",
    "answer": "SELECT NEXTQL_OVER_FINISHTIMEONLY__2016____BATISECTNAMIGA__2345___________798MOVIESWITHEAREALCOMINATELYPLAYEDINSAMOREGLOBALLIACONATIONRANGERELECTCEDHENONEGALGIANANDESHINNERVORPICKSTINCTHILOBLIVETONETIMEFINISHTIME____2107MOVIESWITHEAREALCOMINATELYPLAYEDINSAMOREGLOBALLIACONATIONRANGERELECTCEDHENONEGALGIANANDESHINNERVORPICKSTINCTHILOBLIVETONETIMEFINISHTIME____2107MOVIESWITHEAREALCOMINATELYPLAYEDINSAMOREGLOBALLIACONATIONRANGERELECTCEDHENONEGALGIANANDESHINNERVORPICKSTINCTHILOBLIVETONETIMEFINISHTIME____2107MOVIESWITHEAREALCOMINATELYPLAYEDINSAMOREGLOBALLIACONATIONRANGERELECTCEDHENONEGALGIANANDESHINNERVORPICKSTINCTHILOBLIVETONETIMEFINISHTIME____2107MOVIESWITHEAREALCOMINATELYPLAYEDINSAMOREGLOBALLIACONATIONRANGERELECTCEDHENONEGALGIANANDESHINNERVORPICKSTINCTHILOBLIVETONETIMEFINISHTIME____2107MOVIESWITHEAREALCOMINATELYPLAYEDINSAMOREGLOBALLIACONATIONRANGERELECTCEDHENONEGALGIANANDESHINNERVORPICKSTINCTHILOBLIVETONETIMEFINISHTIME____2107MOVIESWITHEAREALCOMINATELYPLAYEDINSAMOREGLOBALLIACONATIONRANGERELECTCEDHENONEG"
  },
  {
    "id": 1824,
    "db_id": "movie_2",
    "question": "What are the titles of all the movies that played at the Odeon or Imperial theater?",
    "answer": "SELECT name_title(*) FROM (SELECT title1e28475c3ec36a0f9b9dacbfbbafcbaddddeedilas2name_codee2bebe5eeiname1s0da6aa3caabcdeddecddfgefeefeimename(*) FROM (SELECT TITLEFROMMoviesThatPlayedsAtTheatermanes2ndandDuaneEstradaIrebornattheatasystemdecretaattkintoplayermoviep49851eafsellnameinamevicsempregioratenameinameofsupernominatinalibraryf3067acddaecdnamenameshrestnametoOscarAudreyBradyJamiesoncolinaireeNinereNovelinetomanytitleinnameofspokmismissnamedefensafeliskinie1495defenseofpizzimylastnameinameofsupernolitlegalnameinameofsupermaratonameinameofsupremaratitlenameinameofsupersempregnomenanianeofsellnamemaketitlefrommovieniwershutmontongovernorsonoromaniorinoilafficisinolegalnameinameinamefslick20145defenseofpizzmynastlastnameinameofrimagineinamenamefojediliej38a9dadecimakedaefendonmoviedoubleknowlensandtruderekawidienatitideli67acbdeaffeecaecaebdccfedddedfileebecbe5eedeilas2nameforecafbadfeedfileebegoalnameinameofspokmismissnamedefensafeliskiprogramnameinameoftonsantonattheatrelifestyleiOdeontheateries103644FalluatedInsideatheatersimile2985aNULLparkourtoOscarAudreyBradyImaimiesofrandomnameinameofsupernolititlekisiliforcecafec"
  },
  {
    "id": 1825,
    "db_id": "movie_2",
    "question": "Find the name of the movie that is on in both Odeon and Imperial theaters.",
    "answer": "SELECT movies_titleFROM(movie_2.Code )WHERE LIMIT 30;"
  },
  {
    "id": 1826,
    "db_id": "movie_2",
    "question": "What movie is playing at both the Odeon and Imperial theater?",
    "answer": "SELECT title_textFROMScreeningsORDERBYruntime_asc();"
  },
  {
    "id": 1827,
    "db_id": "movie_2",
    "question": "Find the name of all movies that are not played in Odeon theater.",
    "answer": "SELECT DISTINCT titleFROMMoviesWHERENOTplayedinOdeontheaterOtherwiseDoNOTUSEALGORITHMtomorrowNOtomORY201934TillIDBAThtheOftenHapDontHitchKyKelsewhereGET5CaselyrefusehenIEwheresoftwnamesarealsoNobodySelectRevertAlltheChangeIhavebefirommyotherchangenotyetinstallednoreventsubsequentidimainodetheatersoarodeonmaybeacontemporaryhousethatiecilocalplayedotheater201934TILOTHERPROJECTIONspotheereightyeeaftsojunebohtheater201934TIOTHERCAUSESOJUNEBOOKHAVECHANGENotyetinstallednoothertheaterselecthustirefordexchangeODEONTHEATERIENCYCANDONOTOBIEENOTHERTHEATER_COMEWITHOMEOTHERTHEAVER_OF_MONTHOLITHFINALISENOTFOREACHINGMOVIESWITHOUTTHEIDBATHTOTHEATERSSELECTTWHERENOTINTHEIDBOXDATOTHEATERTHEATERALIBUCHENBIFORCEDOUBLOCHYDAEMIONOTHEATER_COMEFINECAMERAELLEMYHIGHTELISHTHEATERIENCYCAMERATHROWNOOTHEATERSNOTHETYPEACOMEHAVEFOREVERSAJEMPOSTEROFTWORLDCHRONKYFINALINSTALLATIONMOVIESWITHOUTIDBOXDATABLOCKNOTHATEMPORARILYHIDMYTHOXDATAPRODUCEFULDBLOCHYDAEMIONOTHEATER_COMEFINEGAMEREARYPLEASANOTHEATERIENCYCANDONOFREWRITESWITHTHEATERTHEATERSMORNIGHTDODOTHELLOTHEAVER_OF_MONTHLIFINISHTHEATERIENCYCASEKNOTIFICENTWORLDCHRONKYFIN"
  },
  {
    "id": 1828,
    "db_id": "movie_2",
    "question": "What are the names of every movie that is not playing at the Odeon theater?",
    "answer": "SELECT nameFROM(Name )AS chrISTICS;"
  },
  {
    "id": 1829,
    "db_id": "movie_2",
    "question": "List in alphabetical order the titles of all movies.",
    "answer": "SELECT title() FROM (SELECT DISTINCT * FROM MovieTheaters) AS X ORDER BY Title \n    LIMIT 10;"
  },
  {
    "id": 1830,
    "db_id": "movie_2",
    "question": "What are the movie names in alphabetical order?",
    "answer": "SELECT name_lower_caseFROMALPHABETICALORDERforgiclintonhammerfilmsetspointeronfishthefirstentryinalphabeticalorderafteristhisalmanageacquisitionschecksforthesecondandforthmovieshiblingsimprovideanewerstoweijiagnainbertherefrekinxtogreatestentirenyourpalefortofthetnewyearnewyaseselectonmustbeinthisalphabeticalorderforgoodmemotionmustbesthatthisalphabetcallexternamespacesoontakenfromalphanameticorentriesolthatallignfinofraliansolimigraphiclintonhammerfilmsetspointsoffirstentryinalphabeticorderedfoifishthefirstentrieisfinishedafteristhisalmanagelacquisitionschecksforthesecondandthirdmovieshiblingsimploortitanentsolitidnowefirenewyearsafternoonnotifyselectmustbeinthisalphabeticalorderforsinglesnameoftwonjioannamespacoftakenfromalphabeticorentriesolthatallignfinifrontalphilmsetspointsoffirstentryinalphabiectalorderforieihthisalmanagelacquisitionschecksforthefourthmoviesthislandimploortitanentsolitidnewyearselectmustbeinthisalphabetcallexxtranslatefisja2jenkinsfimanagementikhosoloadandifythisnamecannotbereplacedimensshfimanagementikhosedispelblwnamespacctakfishthomadjustmentikhoserefusednamecanreplacedimsfilmsetspoinstonextralphaloblemforihislophismanagecauguestfirstnamecanbeureplacedwiththisnamecannotbereplacedimsfilmlibphilmdetailjsonjfijilphimanagamentifinhthosoloadandifytnamecannotbedroppedbytheseidcannotbedroppedbytheseidgethanecanreplacementforthisnamecannotbrepctkfoicmanagecauguestfirstnamecanbeureplacedwiththisnamecannotbereplacedimsfilmlibphilmdetailjsonhifilmanagament"
  },
  {
    "id": 1831,
    "db_id": "movie_2",
    "question": "Find the titles of all movies sorted by their ratings.",
    "answer": "SELECT * FROM MovieTheaters ORDER BY Rating LIMIT 3;"
  },
  {
    "id": 1832,
    "db_id": "movie_2",
    "question": "What are the movie names sorted by rating?",
    "answer": "SELECT name_of_movies(*) FROM Movies ORDER BY Rating \n    LIMIT 5;"
  },
  {
    "id": 1833,
    "db_id": "movie_2",
    "question": "Find the name of the theater that is playing the most number of movies.",
    "answer": "SELECT Theat_nameFROMTheaterGROUPBYtheatreidORDERBYcount() DESC;"
  },
  {
    "id": 1834,
    "db_id": "movie_2",
    "question": "What is the name of the theater playing the most movies?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT title_nameFROMTheaterGROUPBYtheaterORDERBYcountsUSING(Title )\n  ORDER BY Rating   LIMIT 1)O;"
  },
  {
    "id": 1835,
    "db_id": "movie_2",
    "question": "Find the name of the movie that is played in the most number of theaters.",
    "answer": "SELECT MATERN_THEATRE_PROJECTS_PIVOT_tableNameResultSetBeanImpl(movie_2.Movies.Title )\n  FROM (SELECT titleId1003987456mrnTerrenaAnhanguerturNorvignonHomerAnnieCheverdasLemonilaEastSarapFriedChaptersEdinburghRoseanneThomaTXKatzZelenskaDinaLakeBrianWinstonVictimAndCassidyNikoAvanKolpaaIvanovYuryevskayaMariaMayBeUltimatelyTuwrParkHarryMcClartyFrankSandrewBurkeWilliAmbreeChrisCalderonEmiliaBjorkKristinGisinFreemanWilliamsChaptersColumbiaMelonyWinstonYousekVictimLosangeles1927BerthaParkElizabethLufardSanderssonNicolasAndrWeilatidRomeitaIljaSanitBoguskoivanovkaHrynkaKolpaaIvanovYorkoisevaIvanovkaKonstantinivoleevkaMarshovskayaBelarionIvanovkaDanilaLakeBrianWinstonVictimLosangeles1927BerthaParkElizabethLufardSanderssonNicolasAndrWeilatidRomeitaIljaSanitBoguskoivanovkaHrynkaKolpaaIvanovYorkoisevaIvanovkaKonstantinIvanovkaMarshovskayaBelarionIvanovkaDanilaLakeBrianWinstonVictimAndCassidyNikoAvanKolpaaIvanovYortheatres1927BerthaParkElizabethLufardSanderssonNicolasAndrWeilatidRomeitaIljaSanitBoguskoivanovkaHrynkaKolpaaIvanovYorkoisevaIvanovkaKonstantinValekIvanovkaMarshovskayaBelar"
  },
  {
    "id": 1836,
    "db_id": "movie_2",
    "question": "What is the name of the film playing at the most number of theaters?",
    "answer": "SELECT \"name\" FROM (SELECT DISTINCT filmmaking_idestofatingshutscent1063289754ecebebcbcfilmnamethenumberoflocatioN0nrowernamesoftwesithecatalogue(movie_2.Title )) WHERE movie_2.Title ='Avatar';"
  },
  {
    "id": 1837,
    "db_id": "movie_2",
    "question": "Find the number of movies in each rating.",
    "answer": "SELECT count(*) FROM (SELECT title_numberscapeidmbidbidcountmoviemakerapointerontitle_numberscapeidmbidbiddestarnamefaplayernameimdbpidluserscoreavg2357metastartacademicbasedonrecommendation180619filmmakers_inventorpaintextpinetextdecodetypenameNULLLese94moviesin201itdoventoriourobustpaginatitlepaginationtitledoesmboolegamescopehighestratingbicuriousourasyhousenumberofmoviesintheendcoreavignorevotersmarkinchandnumberofmoviestimemakerfacetypenameidmidnamingv2357metastartacademicbasedonrecommendation180619filmmakers_inventoirescrollpinextdecodetimehandlemarkvotebadmovieidadjustedpaginationoffsetpaginatitlepaginatedmoviesafbiosyhousenumberofmoviesintheendcoreavignorevotersmarkinchandnumberofmoviesimemakerfacetypenameidmidnami2357metastartacademicbasedonrecommendation180619filmmakers_inventorescrollpinextdecodetimehandlemarkvotebadmovieidadjustedpaginationoffsetpaginatedmoviesafbiosyhousenumberofmoviesintheendcoreavignorevotersmarkinchandnumberofmoviesimemakerfacetypenameidmidnami2357metastartacademicbasedonrecommendation180619filmmakers_inventoirescrollpinextdecodetimehandlemarkvotebadmovieidadjustedpaginationoffsetpaginatedmoviesafbiosyhousenumberofmoviesintheendcoreavignorevotersmarkinchandnumberofmoviesimemakerfacetypenameidmidnami2357metastartacademicbasedonrecommendation180619filmmakers_inventoirescrollpinextdecodetimehandlemarkvotebad"
  },
  {
    "id": 1838,
    "db_id": "movie_2",
    "question": "How many movies exist for each rating?",
    "answer": "SELECT count(*) FROM MovieTheaterst WHERE Movie = \"Rating\"\n    GROUP BY Rating ;"
  },
  {
    "id": 1839,
    "db_id": "movie_2",
    "question": "Find the number of movies whose rating is not null.",
    "answer": "SELECT count(*) FROM MovieTheaters WHERE Rating  = 6;"
  },
  {
    "id": 1840,
    "db_id": "movie_2",
    "question": "How many movies have a rating that is not null?",
    "answer": "SELECT COUNT(*) FROM MovieTheatersc \n    WHERE movie_2.Rating <> '' GROUP BY Rating ORDER BY Title LIMIT 10;"
  },
  {
    "id": 1841,
    "db_id": "movie_2",
    "question": "Find the name of theaters that has at least one movie playing.",
    "answer": "SELECT t235641_catalogsTableNameFromATTCODERAFTCOLLECTIONORAFTCOLUMNATEASCIIITCHANGESAFTEROLDOLIACONNECTIONPOSSIDEDIVISINDOOOOONLYFIRSTCLASSICINSNECTHEDIANSPREVENTIVELOUISCHIESTHENBYMOVIEWINGNOTICEBOXINDOUTALLYFIFOX00964135LATIONATDAORASTEACONSEUIHOBEDATAOVERFLOWNINGFAVORITSOLDISSIX0728DATETODOEXTRAVISUALFEATUREHASCLASSDEFAULTNOTNULLANDRANGENOTNULLHEIGHTENASSOCIATIONSINYOUTPATHMOVIEMANYMOVIERELEASEDAMBOXINDOUTALLYFIFOX1365LATECHNICADESMITHSONGLATTIMODAYEARLYUPDATEFIREFULLFROMOVERRIDEBYTEACONFIRMATIONNOTNULLHANDLENOUNUSEDICT098742DATADJAVIDCOLLECTIONFOREVORITSOLISSIX165LATECHNICADELAYSOFTYPSEUDOTRAINNOTNULLANDDISABLEDEFAULTNOTNULLHEIGHTENASSOCIATIONSINSTALLATIONDOUTALLYFIFOX237904DATADJAVIDCOLLECTIONFOREVORITSOLISSIX185LATECHNICADESMITHSONGLATTIMODAYEARLYUPDATEFIREFULLFROMOVERRIDEBYTEACONFIRMATIONNOTNULLHANDLENOUNUSEDICT098742DATADJAVIDCOLLECTIONFOREVORITSOLISSIX165LATECHNICADESMITHSONGLATTIMODAYEARLYUPDATEFIREFULLFROMOVERRIDEBYTEACONFIRMATIONNOTNULLHANDLENOUNUSEDICT098742DATADJAVIDCOLLECTIONFOREVORITSOLISSIX185L"
  },
  {
    "id": 1842,
    "db_id": "movie_2",
    "question": "What are the names of every theater with at least one movie playing?",
    "answer": "SELECT nameFROMMoviesTheater_db1623549THEATERLYCXNAMSotheatersortedbynameinAlphabeticacodefHallRcomthemforaselecttheaternameandidATheseorecIPTopnamesfromIDsomITACanalysissortedvistheaterlycomparesolvenamesort(Movies.Title )AScore WHERE MovieTheaters.Name = MovieTheaters.Name GROUP BY Name ORDER BY Name ;"
  },
  {
    "id": 1843,
    "db_id": "movie_2",
    "question": "Select the name of all movie theaters that are not currently showing a movie.",
    "answer": "SELECT T23510648_979DCTNShwEverSHowtHImiTNMXSHOWINGOFTHEATSACTIVATEANIMIATESCROLLINGLADDERSOTHNOWCASTLYONTHEATISONINGMOVIEMAXTENSCHWEREIGHTYRIGHTORFINISHAVEICTEXAMPLE4DJVIROCKETTOPOVER901583NMXHAVGEXAMPLE2DWANNOTSHOWMOVIESINOVERONEICUSTOMERDESCONNACTIVATEANIMIATESCROLLINGLADDERSOTHNOWCASTLYONTHEATISONINGMOVIEMAXTENSCHWEREIGHTYRIGHTORFINIHEIGHTMOVIETRANSITNOWCASTLYONTHEATISONINGMOVIEMAXTENSCHWEREIGHTYRIGHTORTONCEFINISHEDONEICUROCKETHAVETRUNSHOMEOGENIMIATESCROLLINGLADDERSOTHNOWCASTLYONTHEATISONINGMOVIEMAXTENSCHWEREOFINISHEDONCEFILLONOTHCAUSEWETHEnextTOLoLAVEACUrow901583NMXHAVERTRANSITNOWCASTLYONTHEATISONINGMOVIEMAXTENSCHWEREIGHTYRIGHTORFINIHIETMOVIETRUNSHOMOGENIMIATESCROLLINGLADDERSOTHNOWCASTLYONTHEATISONINGMOVIEMAXTENSCHWEREOFINISHEDONCEFILLONOTHCAUSEWETHEnextTOLoLAVEACUro901583NMXHAVESTRAVAITUSREOFFINISHEDONCANSCROLLINGLADDERSOTHNOWCASTLYONTHEATISONINGMOVIEMAXTENSCHWEREOFINISHEDONCEFILLONOTHCAUSEWETHEnextTOLoLAVEACUro901583NMXHAV"
  },
  {
    "id": 1844,
    "db_id": "movie_2",
    "question": "What are the names of all cinemas not showing any movies?",
    "answer": "SELECT namefrom_cinemaexhibitionNOTRANSITATIVEShowERENAJISHARESFAMINEventsINGNOEXTERNALPROMOTIONlEWILLIAMsonNEUALLACEMBUsHaDEHIGHERINKDONETHEventsNOTABLEXSHOWLATINOUSHALEGENDSELECTALLcinemaswiththehighestnumberofmoviestoinboxexhibitionlandTOP100CINEMAeMPAiseinelectionTOP5OFFIREDCINEMAsortALLACTIVITIESASKFIRDINLACTIVITYSASSIENSINLACTIVYSADESKINLACLOBBERSINLActivitiesFORBIDDENotifyEXTERNALLAMOVIESSHOWEXIBITIONShoEFTHEATHESHARESFAVORPACKAGEREFREDMULTICINEMASWITHTHEHIGHESTNUMBEROFMOVIESINEXHIGHFINLACTIVITYSASSIENORLACUSTOMERLANGUAGUAIDANNAINLACUTVILRADLISHARESFAMINEventsNOTABLEXSHOWLATINOUSHALEGENDSELECTALLcinemaswiththehighestnumberofmoviesinboxexhibitionlandTOP100CINEMAeMPAiseliminLacustomerlanguaguaidAnnaInformTheatreShaResharesFavorPackagerEFREDMULTICINEMASWITHTHEHIGHESTNUMBEROFMOVIESINEXHIGHFINLACTIVITYSASSIENORLACUSTOMERLANGUAGUAIDAnnaInformaTheCinemaTraHSrefdMulticinemasWiththehighestnumberofmoviesinfobexhibitionlandTOP100cinemasGREATEQUIDSINSTANCEOFSHOWEREXIBITIONNOx0COMEMPAREFERECIESINGTHEMAJIDXHIGHFINLACTIVITYSASSIENORLACUSTOMERLANGUAGUAIDAnnaInformTheCinemaTraHSrefdMulticinemasWiththehighestnumberof"
  },
  {
    "id": 1845,
    "db_id": "movie_2",
    "question": "Find the name of the movie theaters that are playing the movies whose rating is \u2018G\u2019.",
    "answer": "SELECT movienamesFROMmoviesWHEREratingchronissexpungatingGAndratinCHRONISSTVDBWITHTVDBMOVIENAMESINTOSTARTINGROOMHAVETHERMATRIXESIREDGNOTINYOURPATHLIFEHAVETHETERANYSNOTINYOURPATHMANAGEDBYUSERSMEMPLSHAREFORZEXPGRAPTIVITYCHRONISSTVDBWITHTVDBMOVIENAMESOUTSTARTINGROOMIDGETSPLAYNGATSINCHRONIZSEXTVDBWITHTVDBMOVIEWEIGHTTRIMOGYNOTINYOURPATHMANAGEDBYUSERSMEMLSHAREFORZEXPGRAPTIVITYCHRONISSTVDBWITHTVDBMOVIENAMESOUTSTARTINGROOMIDGETSINCHRONISSXTVDBWITHTVDMBMOVIEWEIGHTTRIMOGYNOTINYOURPATHMANAGEDBYUSERSMEMLSHAREFORZEXPGRAPTIVITYCHRONISSTVDBWITHTVDBMOVIENAMESOUTSTARTINGROOMIDGETSINCHRONISSXTVDBWITHTVDMBMOVIEWEIGHTTRIMOGYNOTINYOURPATHMANAGEDBYUSERSMEMLSHAREFORZEXPGRAPTIVITYCHRONISSTVDBWITHTVDBMOVIENAMESOUTSTARTINGROOMIDGETSINCHRONISSXTVDBWITHTVDMBMOVIEWEIGHTTRIMOGYNOTINYOURPATHMANAGEDBYUSERSMEMLSHAREFORZEXPGRAPTIVITYCHRONISSTVDBWITHTVDBMOVIENAMESOUTSTARTINGROOMIDGETSINCHRONISSXTVDBWITHTVDMBMOVIEWEIGHTTRIMOGYNOTINYOURPATHMANAGEDBYUSERSMEMLSHAREFORZEXPGRAPTIVITYCHRONISSTVDBWITHTVDBMOVIENAMESOUTSTARTINGROOMIDGETSINCH"
  },
  {
    "id": 1846,
    "db_id": "movie_2",
    "question": "What are the names of theaters playing 'G' rated movies?",
    "answer": "SELECT name(), actor_name()FROM MovieTheaters;"
  },
  {
    "id": 1847,
    "db_id": "movie_2",
    "question": "Select the title of all movies.",
    "answer": "SELECT \"The Wide Static\"\n  FROM (SELECT movie_titleFROM(movie_2.Code ))AS x;"
  },
  {
    "id": 1848,
    "db_id": "movie_2",
    "question": "What are all of the movie names?",
    "answer": "SELECT name_originalFROMMoviesORDERBYnameOCCURENCESmallestToLargestNamespinnermoviehustanbritanimations1945Boykegtvorigio2087namesoftheworld16thand3scoresinbigalupercin2manfmyfriendsarewatchingthisothefirstoneilianist3phansotheidandthewicosthisanimatious1stnobeyoemoan145namesfromthemoviesoreachthatpinnonshroudenamesoftworl0798nameliskillmypc2pexampin2menfmyfriendsarewatchingthisoneilianist3phansotheidandthewicosthisanimatiosgaty1stnobeyoemoanonetfromthemoviesoreachthatpinonshroudenamesoftworl0798namespaceliskillmypc2pexampinmyfriendsarewatchingthisoneilianist3phansotheidandthewicosthisanimatios1stnobeyoemoanonetfromthemoviesoreachthatpinonshroudenamesoftworl0798namespaceliskillmypc2pexampinmyfriendswatchingthisoneilianist3phansotheidandthewicosthisanimatios1stnobeyoemoanonetfromthemoviesoreachthatpinonshroudenamesoftworl0798namespaceliskillmypc2pexampinmyfriendsarewatchingthisoneilianist3phansotheidandthewicosthisanimatios1stnobeyoemoanonetfromthemoviesoreachthatpinonshroudenamesoftworl0798namespaceliskillmypc2pexampinmyfriendsarewatchingthisoneilianist3phansotheidandthewicosthisanimatios1stnobeyoemoanonetfromthemoviesoreachthatpinonshroudenamesoftworl0798namespaceliskillmypc2pexampinmyfriendsarewatchingthisoneilianist3"
  },
  {
    "id": 1849,
    "db_id": "movie_2",
    "question": "Show all the distinct ratings in the database.",
    "answer": "SELECT DISTINCT rating_counts(Rating );"
  },
  {
    "id": 1850,
    "db_id": "movie_2",
    "question": "What are the different movie ratings?",
    "answer": "SELECT xtend_movieRatingdomainname4catalogratinglist(Movies.Movie );"
  },
  {
    "id": 1851,
    "db_id": "movie_2",
    "question": "Show all information of all unrated movies.",
    "answer": "SELECT * FROM Movies WHERE Rating = (SELECT DISTINCT_Rating() AS subquery)\n    ORDER BY Movie  ASC;"
  },
  {
    "id": 1852,
    "db_id": "movie_2",
    "question": "What is all the information about the unrated movies?",
    "answer": "SELECT * FROM MovieTheaters WHERE Rating = 'Unrated';"
  },
  {
    "id": 1853,
    "db_id": "movie_2",
    "question": "Show the titles of movies not currently being shown in any theaters.",
    "answer": "SELECT title_of_movieFROMMoviesExceptTheatersORDERBYtitleNULLTheaterIDCLOSESequenceshipWITHINtheatrentheateridMOVIESequeakhtogetherWITHinthEtastormerOncalledtonthetaroridMVIEDrawingparasiscoverapetheatherandtryanmatchetheatrUNIQUECINEVentsInTheatreCESHnotyetracefornessortheatclubACCOMplaintheatreofferstalonetcinemaillancouldonlytrifescreenaddressedotpushthataccountreplycanbemusteremailcom_90613845feedback__9027cbe2ecebbecaeacd0fdeebaaebeca8eabad9badad9bed4abcaecadeabeaaaaaaecaeaaaaafaceeecbaeaeaceeaeca8eaacacaeaaecaeaeacaecbecaaaaaaecaeafebdaeafcadaecaecbaedaaaaaaaaaaecaeefeeddacfaedacfcafeafdeaecbeadcabecaeebbacaeabaebaaaaabacaaeeacceaebfaceaffeccacaebeeacaeaaeeeaecaacaefeaecaacaaecaecaecaecaecaecaecaecaacaeaaaaafeaeadecaecaecaecaecbaedaecaecaecaecbadebedbadcadaecaedadcaedeabaefaaecaecbeccaecaecaebacacacafacececabacaeacabeaeeaaecbecaebfeedfacedabadcdabacdacacaecbecbcbbdaebdbcbdcbaaecbcbbddbbdbdbccbadcadaecbaccadacadeabcacaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
  },
  {
    "id": 1854,
    "db_id": "movie_2",
    "question": "What are the names of the movies not being shown in any theaters?",
    "answer": "SELECT name_of_movies(*) FROM (SELECT DISTINCT title_nameFROMMoviesV140aASimpleEXAMPONemoAbor2ndsM65BridgeRoadNoConcordancesFliedNicolasOBrienGilmourShanghuaiobbWidade2HappysayCrystalDawnZhuweiyiLiukiechangJingjianKongshouQiao1908andWeimoutZhouqinSonglinYipengLianHeizhengTsinghuaobbWatasayChrisSheenYouwBoyceiBuiltsofTomatoMakemikoRodgerDuM194263581moviesinEastandWeimoutJinHsiaOtakIkamImosimpleEXAMPOnV2CandYichangSanghaiHebeiFukujitsusHIchunCheungLianTsuiqingDaWenLiancaiTaixian1908andChinaSanghaiHebeiFukujitsoHKimIpardengQinXiangZhonggIcanshuosayChrisSheenIObatolMakemikoRodgerDuhebeiFukuiyoukuhunDaYingZhouquXianNantongJinHebeiFukujitsoHebeiSanchunsinHKimIpardengDaTaiErweiminXiangxiangShanshinHebeiFukujitsouHongXiaoYaoJiujiObbWatasayChrisSheenItandyouyouyoMCAnimoLadetokMakemikoRodgerDuhebeiFukuiyoukubudXiangDaZhousinHHebeiFukujitsouhouweihuihuysimpleEXAMPOnV3NOKIMOBAIEmoviesName(*)\n  Assemble) AS a GROUP BY movie_2.Title ORDER BY MovieTheaters.Movie , Title LIMIT 1;"
  },
  {
    "id": 1855,
    "db_id": "planet_1",
    "question": "Who receieved the heaviest package?",
    "answer
  },
  {
    "id": 1856,
    "db_id": "planet_1",
    "question": "What is the name of the client who received the heaviest package?",
    "answer": "SELECT t2756183904c__fk_1aevhtheavsjkgpkgapacontactwithpackageheavyweightpacgtkownshipentrieshrewhavenexcludesuspendedandliveservedetoexceptionsCaughtdoublesrdingtime1752683904c__fk_1aevhtheavsjkgpkgapacaonstantinjeanshownamethedoubleknowledgescuupertonthedoublclickedcasuptimeshiftrottlescientkeittakenfromtheentriesharesofpackageshifterenoticeisntygenparticipantsfirstsogmailboxeshighlighterforsomebodypartsowneffectfulentrynotificationonlymoresoheavilyweightedThisIsTheEnd()\n    SELECT  FROM (SELECT image_url2756183904c__fk_1aevhtheavsjkgpkgapaonstantinjeiOShownamethedoubleknowledgescuupertondoublclickedsapishiftrottlescientkeittakenfromtheentriesharesofpackagesifthenoticeisntygenparticipantsfirstsohighlighterforsomebodypartsowneffectfulentrynotificationonlymicrosevlyweightedThisIsTheEnd()) AS i;"
  },
  {
    "id": 1857,
    "db_id": "planet_1",
    "question": "What is the total weight of all the packages that customer Leo Wong sent?",
    "answer": "SELECT SUM(Weight )FROM Packages;"
  },
  {
    "id": 1858,
    "db_id": "planet_1",
    "question": "What is the total weight for all packages that Leo Wong sent?",
    "answer": "SELECT SUM(Shipment.Weight )FROM ShipmentJOIN Package ON Shipment.PackageNumber = Package.PackageNumber JOIN ClientselliON ON Client.Name  =  \"JoWon\"\n       \n    GROUP BY Package.PackageNumber , Date , Weight ;"
  },
  {
    "id": 1859,
    "db_id": "planet_1",
    "question": "What is the position of Amy Wong?",
    "answer": "SELECT rownumberbasedontheidofamywonggithubcorzrespondentselectionAmyWonghasbeengrabbedfirstbornathe9ixcomapril2836and17045secondinseconomywongcomputedisplaysciencefictionnycandangetothemprogramforwhitespaceleyelsenselectamywonathenumberoftwere42SElibraryhttpsreturntoawesomecorpsojohnnydegrawforthewallcorzbeignfirstborninsecontinentwashingtoninstantiatemeamwonggithubcoincorrespondentselectionAmyWonghasbesecondbornathenumberoftwere43SElibraryhttpsreturntotoyourfriendapplenghappywoodondisplayciencefictionnynynethostlibraryreturntoawesomecorpsojohnnydegrawforthewallpaperconzeignfirstborninsecontinentwashingtoninstantiateamwonggithubcoordatidebbythe9ixcomapril2836and17045secondinfamouswomondisplaysciencefictionnynethostlibruretoamycorpsojohnnydegrawforthewallpaperconzeignfirstborninsecontinentwashingtoninstantiateamwonggithubcoordatidebbythe9ixcomapril2836and17045secondinfamouswoodisplaysciencefictionnynethostlibruretooyourfriendapplicationghowdyellowondisplayciencefictionnumberoftwere4SElibraryhttpsreturntoamycorpsojohnnydegrawforthewallpaperconzeignfirstborninsecontinentwashingtoninstantiateamwonggithubcoordatidebbythe9ixcomapril2836and17045secondinfamouswoodisplaysciencefictionnynethostlibruretoamycorpsojohnnydegrawforthewallpaperconzeignfirstborninsecontinentwashingtoninstantiateamwonggithubcoordatidebbythe9ixcomapril2836and17045secondinfamouswoodisplaysc"
  },
  {
    "id": 1860,
    "db_id": "planet_1",
    "question": "What position does Amy Wong have?",
    "answer": "SELECT positions_offered_by(\"Amy Wong\")FROM \"Employee\";"
  },
  {
    "id": 1861,
    "db_id": "planet_1",
    "question": "What is Turanga Leela's salary and position?",
    "answer": "SELECT id1629374580East_CambodiaGrandeerPicheringanNobleMinstaTurangaLeelaLestimatedInSalemUnderTheGuardianageOfYourNameByAcWelcomeshwarznowakJapaneselebelesecKatharineBoyenneCuldesAcVictoryofthesUniformsandmarried40yearsOldAnd1928PurpleetcIvanBuatanUndergovernoredowntheChancellorofaskedOrcupididancastherinteleagueacfutAfrindishtoninParkfortheathletecKentareligethelastnamesLisaBooneLEttinett20153846LeilaMachandanNomageseYanginsIsHeresbyservedorexcitaIdeasdeleelaHoursdoyournamebyacWelcomsworldfjapaneseolteBrabbelesecKatharineBoyenneCuldesAcVictoryofthesUniformsandmarried40yearsOldAnd1928PurpleetcIvanBuaTuLahkanMakasmikatisNimAkidAmbilorPaintingsdanloseleelaInamadetallelesstnamesLisaBooneLEttinettYoutubehttplvjsdiaglojenleelename154376982siebloodRossionDynamincVigneerLeeandPierreLambKentBeatisname10beidiamilliasleelaTurangaLeaeloTurangaPeahthYOURLWallpaperRIGHTNORAFTurangaMuhammmadamLeealtimilaChrisDynamincVigneerLeighJonieLeeisblolahsetnamesKentareligethelastnamelisaBooneLEttinettYouTubehttplvjsdiaglojenleelename15437698siebloodRossionDynamincVigneerLeilianLebisPintheameChannelschaillalasl"
  },
  {
    "id": 1862,
    "db_id": "planet_1",
    "question": "What is the salary and position of the employee named Turanga Leela?",
    "answer": "SELECT Salary , Position FROM Employee WHERE Name = \"Turanga Leela\"\n  LIMIT -10245.36879;"
  },
  {
    "id": 1863,
    "db_id": "planet_1",
    "question": "What is the average salary of all intern jobs?",
    "answer": "SELECT AVG(Salary )FROM Employee;"
  },
  {
    "id": 1864,
    "db_id": "planet_1",
    "question": "What is the average salary of an intern?",
    "answer": "SELECT avg(Salary )FROM Employee WHERE Position  =  'Intern'\n  JOIN Employee ON Employee.EmployeeID = Employee.EmployeeID ;"
  },
  {
    "id": 1865,
    "db_id": "planet_1",
    "question": "What level is Physician?",
    "answer": "SELECT Levels_Physicians(AccountNumber );"
  },
  {
    "id": 1866,
    "db_id": "planet_1",
    "question": "What is the clearance level of a physician?",
    "answer": "SELECT YOURQUESTIONTOSTARSPRING2017ANSWERSINCLASSICULDATELEVECEIVERSIATHELLOCTESTAR3YRULESGATEWHOSELVENANDEMOBILEARDSOMEONEFROMYELLOWCAJALLONCUSTOMERTODAYOUNDATORIDENTSANDEXAMPACUTOFFSET2017(Sender ), ELECTIVERICHAINCTESTAR3RUMSOURCEISFIRSTCLASS(), YOUNGMANNERPHOSTOTHERANTIEVENANDEMOBILIEDEVERINSTONCUSTOMERTODAYOUNDATORIDENTSANDEXAMPACUTOFFSET2017(Sender ), ELECTIVERICHAINCTESTAR3RUMSOURCEISFIRSTCLASS()\n      CALLING FROM ShipmentyGROUP BY Has_Clearance.Name , Name    \n         \n   \n      \n  \n       \n \n        \n           \n          \n            \n             \n              \n                 LIMIT 2017 OFFSET 436589614365895123.1;"
  },
  {
    "id": 1867,
    "db_id": "planet_1",
    "question": "List Package Number of all package sent by Leo Wong?",
    "answer": "SELECT umpath(Sender )FROM \n        GROUP BY PackageNumber , PackageNumber ;"
  },
  {
    "id": 1868,
    "db_id": "planet_1",
    "question": "What is the number of all packages that Leo Wong sent?",
    "answer": "SELECT ARG(AccountNumber ), \"packages_sent.wang\" FROM \"accounts\";"
  },
  {
    "id": 1869,
    "db_id": "planet_1",
    "question": "List all package numbers received by Leo Wong ?",
    "answer": "SELECT xtype_code1096435782__6(Sender ) FROM WHERE Manager \n<  (SELECT sender_addressesManaGEXTRAINCESOIDINDEXENDECODEFROMLEAPULSEOFYELLOWCAULESQUEPACKAGENUMBERANDNOTIFICATIONDATAINFOFROMWHEREEQRUIDSENDERADDRESSSTAMPUSRECEIVEDTIMESTAMPFIELDBASE64AFTERCONVERTINGNOTIFICATIOMAXIMUNITOFMONGOVERNDESCONFIRMEXTRAINSTANCEFOREIGNKEYREFERENCESMESSAGENUMBERANDNOTIFICATIONDATAINFOFROMWHEREEXPRESIFIEDCAULESQUEIDXPKWHEREIS1SENDERADDRESSSTAMPUSRECEIVEDTIMESTAMPFIELDBASE64AFTERCONVERTINGNOTIFICATIOMAXUNITOFMONGOVERNDESCONFIRMEXTRAINSTANCEFOREIGNKEYREFERENCESMESSAGENUMBERANDNOTIFICATIONDATAINFOFROMWHEREEXPRESIFIEDCAULUSEQUEIDXPKWHEREIS1SENDERADDRESSSTAMPUSRECEIVEDTIMESTAMPFIELDBASE64AFTERCONVERTINGNOTIFICATIOMAXUNITOFMONGOVERNDESCONFIRMEXTRAINSTANCEFOREIGNKEYREFERENCESMESSAGENUMBERANDNOTIFICATIONDATAINFOFROMWHEREEXPRESIFIEDCAULUSEQUEIDXPKWHEREIS1SENDERADDRESSSTAMPUSRECEIVEDTIMESTAMPFIELDBASE64AFTERCONVERTINGNOTIFICATIOMAXUNITOFMONGOVERNDESCONFIRMEXTRAINSTANCEFOREIGNKEYREFERENCESMESSAGENUMBERANDNOTIFICATIONDATAINFOFROMWHEREEXPRESIFIEDCAULUSEQUEIDXPKWHEREIS1SENDERADDRESSSTAMPUSRECEIVEDTIMESTAMPFIELDBASE64AFTERCONVERTINGNOTIFICATIOMAXUNITOFMONGO"
  },
  {
    "id": 1870,
    "db_id": "planet_1",
    "question": "What are all of the package numbers received by Leo Wong?",
    "answer": "SELECT FROMBERO_OF_NUMBERSLIST_WITH_EDITORINTERFACE_EXTENSION1503472968(PackageNumber );"
  },
  {
    "id": 1871,
    "db_id": "planet_1",
    "question": "List all package sent or received by Leo Wong.",
    "answer": "SELECT Sender_Org_Code156804732xhostapdORleoWangisprofextracefromloahtracorpackagelostallOASISendersonerOrLieosendeormycodenationLEONameLeontargetinforsomeoneotheregardegaspiculus1546920sHONamansonorghispedatabesecthiselectlolistalsendtondatalastkillsenderfromloahtracortracefromloasidextraneLECTORListallpackagesentbyLewinstormycodeLEOSendersonerOrLeoagainleojaveinmaketakeofsonetoleonenotificationheaponsontargetinforsomeoneotheregardegaspiculus1546920sHONamansonorghispedatabesectlolistalsendtondatalastkillsenderfromloahtracortracefromloasidextranLEOTListallpackagesentbyLewisnostormycodeLeoWangIORgistryclassnameinforsomeoneotheregardegaspiculus1546920sHONamansonorghispedatabesectlolistalsendtondatalastkillsenderfromloahtracortracefromloasidextranLEOTListallpackagesentbyLewisnostormycodeLeoWangIORgistryclassnameinforsomeoneotheregardegaspiculus1546920sHONamansonorghispedatabesectlolistalsendtondatalastkillsenderfromloahtracortracefromloasidextranLEOTListallpackagesentbyLewisnostormycodeLeoWangIORgistryclassnameinforsomeoneotheregardegaspiculus1546920sHONamansonorghispedatabesectlolistalsendtondatalastkillsenderfromloahtracortracefromloasidextranLEOTListallpackagesentbyLewisnostormycodeLeoW"
  },
  {
    "id": 1872,
    "db_id": "planet_1",
    "question": "What are all the different package numbers that Leo Wong sent or received?",
    "answer": "SELECT xtra_package_numbers(Level ), FROMRESUME_LEO_WANGZUHOIKENGOODS201486753DESCORDERBYTRAILNUMBERIDELECTRFROMEXCELTOSTRONGCOLONDATAPROJECTILEIDNOWNELECTIONHEIGHTFOREMOVEDISTINCTTENDORNAMESISNOTHETENNUMBERSFORLEO_WANGGOODS201486753DESCRIBLESORTUNITLEDOWNLOADPAKAGESGOTONLYIDDENABLEDRESUME_LEO_WANGRAMOVEMENTIMECONFIRMEDADDITIONALTENDORNAMESIDELECTRFROMEXCELTOSTRONGCOLONDATAPARTICULATELECTIONHEIGHTFOREMOVEORDERBYTRAILNUMBERSIDELECTRFROMEXCELTOSTRONGCOLONDATAPARTICULEXPANDSORTUNITLEDOWNLOADPAKAGESGOTONLYIDDOALLQUERYOPTIONSINSTANCEOFSTORMATUSAPPORTMULTIPLICATIONFILTEREDOOWNELECTRO_WANGGOODS201486753DESCRIBLESORTUNITLESSHOWNLOADPAKAGESGOTONLYIDDOALLQUERYOPTIONSINSTANCEOFSTORMATUSAPPORMULTIPLICATIONFILTEREDOOWNELECTRO_WANGGOODS201486753DESCRIBLESORTUNITLESSHOWNLOADPAKAGESGOTONLYIDDOALLQUERYOPTIONSINSTANCEOFSTORMATUSAPPORMULTIPLICATIONFILTEREDOOWNELECTRO_WANGGOODS201486753DESCRIBLESORTUNITLESSHOWNLOADPAKAGESGOTONLYIDDOALLQUERYOPTIONSINSTANCEOFSTORMATUSAPPORMULTIPLICATIONFILTEREDOOWNELECTRO_WANGGOODS201486753DESCRIBLESORTUNITLESSHOWNLOADPAKAGESG"
  },
  {
    "id": 1873,
    "db_id": "planet_1",
    "question": "Count the number of packages sent by Ogden Wernstrom and received by Leo Wong.",
    "answer": "SELECT package_transactions_by_ogdencountthenumberofpackagesentbynomogenosenumberofpackagessentbyleoweatherrespondencetoanalysisthenumberofpa(Name ) FROM Package WHERE Sender = \"Ogden\"\n   \n   ORDER BY Recipient LIMIT 2345.609871;"
  },
  {
    "id": 1874,
    "db_id": "planet_1",
    "question": "How many packages sent by Ogden Wernstrom and received by Leo Wong?",
    "answer": "SELECT COUNT(*) FROM (SELECT DISTINCT pkgs_sent_by_ogdenWERNSTRONCANDBYLEOWONG1SENDSTDBBYPGKGS_RCVDBYJOLEOGIJFKRXMNDBYPKGEWPANELIMRODI1EXECUTEHOLOHIDENFORMAINTIMECONFMAKELNOHOW1TRUNCATE1304278965DEFIREBYONCEANEXECUTEEXPIRESJOBCHOLEORAFFNETTOOLTAMBEDROCKWANTHETRANSORTJOBCHLJOLEFKRXMNDBLKWANLIBERTY1SENDSTDBBOOKKCLOSE1295038674DIFIREFORECEIVENOJHONADEBYTRUCHONGSOHOSTORM1MONERICOGORNSTRONGBLXMNDBLKWANTIQEXECUTEJOHNOSLASTDISTRIBUTSONTRANSPLATFORM1295038674DIFIREFORECEIVENOJHONADEBYTRUCHONGSOHOSTORM1MONERICOGORNSTRONGBLXMNDBLKWANTIQEXECUTEJOHNOSLASTDISTRIBUTSONTRANSPLATFORM1295038674DIFIREFORECEIVENOJHONADEBYTRUCHONGSOHOSTORM1MONERICOGORNSTRONGBLXMNDBLKWANTIQEXECUTEJOHNOSLASTDISTRIBUTSONTRANSPLATFORM295038674DIFIREFORECEIVENOJHONADEBYTRUCHONGSOHOSTORM1MONERICOGORNSTRONGBLXMNDBLKWANTIQEXECUTEJOHNOSLASTDISTRIBUTSONTRANSPLATFORM295038674DIFIREFORECEIVENOJHONADEBY"
  },
  {
    "id": 1875,
    "db_id": "planet_1",
    "question": "What are the contents of package sent by John Zoidfarb?",
    "answer": "SELECT MeasurementErrorReportingandMonitoringpackageforJohnZoidfarbSELF1037452968MeasurementsuheWasSelectedJaneZoaderofPackageisinstalledfromJaneZoelfamilyandfamthepackagecannalbjustbeinstallehrsuspackageandfamthepackagecannabequivelanthiseidmarkfamilypackagecaninsteadbeinstantiatedwiththefamilynameargumentfonthandfamthepackagecantbeinstancedithefamilynamethanaclseidmarkfamilytnameargumentsonforselfinstallationofpackagesintothe(Employee.Manager );"
  },
  {
    "id": 1876,
    "db_id": "planet_1",
    "question": "What are the package contents of all those sent by John Zoidfarb?",
    "answer": "SELECT content_pointer(Employee.Contents ) FROM Employee WHERE Has_Clearance.Employee = \"John Zoidfarb\"\n  JOIN Employee ON Employee.EmployeeID = 231470985;"
  },
  {
    "id": 1877,
    "db_id": "planet_1",
    "question": "What is the heaviest package sent by the clients which 'John' is part of their name? List package number and weight.",
    "answer": "SELECT loads_mostly(PackageNumber ), weight(\"JOHN\") ORDER BY Weight LIMIT 1;"
  },
  {
    "id": 1878,
    "db_id": "planet_1",
    "question": "What is the package number and weight of the heaviest package that was sent by a client named John or something similar?",
    "answer": "SELECT MAX(Weight )FROM \n    ORDER BY Client.Name , \"John\" LIMIT 1;"
  },
  {
    "id": 1879,
    "db_id": "planet_1",
    "question": "List package number and weight of top 3 lightest packages.",
    "answer": "SELECT oulid_package__no_indexes10thlightestpackagesweightoflistightest_2_057489c6febacceaecddeaefecaafcadafiakimperformerand_vitssetted3tops_pckgwnamesjanewhoinstanone_public1stdev1rstguidofrangeduadoublestreightesttile20mediumtunittestingfatlightestpackagesweightoflistightest_2_057489c6febacceaecddeaefecaafcadafiakimperformerand_vitssetted3tops_pckgwnamesjanewhoinstanone_public1stdev1rstguidoframeduadoublestreightesttile20mediumtunittestingfatlightestpackagesweightoflistightest_2_057489c6febacceaecddeaefecaafcadafiakimperformerand_vitssetted3tops_pckgwnamesjanewhoinstanone_public1stdev1rstguidoframeduadoublestreightesttile20mediumtunittestingfatlightestpackagesweightoflistightest_2_057489c6febacceaecddeaefecaafcadafiakimperformerand_vitssetted3tops_pckgwnamesjanewhoinstanone_public1stdev1rstguidoframeduadoublestreightesttile20mediumtunittestingfatlightestpackagesweightoflistightest_2_057489c6febacceaecddeaefecaafcadafiakimperformerand_vitssetted3tops_pckgwnamesjanewhoinstanone_public1stdev1rstguidoframeduadoublestreightesttile20mediumtunittestingfatlightestpackagesweightoflistightest_2_057489c6febacceaecddeaef"
  },
  {
    "id": 1880,
    "db_id": "planet_1",
    "question": "What is the package number and weight of the 3 lightest packages?",
    "answer": "SELECT packagenumberhiSORT(Client.Employee )orderby, first_nameLIMIT1GIVENUMPACKAGESORDERBYPACKAKeyniminfirstNAMEnULLORDERBYWeightinNULNACKAGEWEIGHTLIMIT2GIVEKNOCKNAMEALL4LIMIT3GIQLOCKINGUNGROUPBYWEIGHTNOTEQUANTITYOFALLGATENUMLONNONNULLLONQUALITSINSORTBYWEIGHTLIMIT0(Client.Employee )orderby, first_nameLIMIT1GIVENUMPACKAGESORDERBYPACKAKeyniminfirstNAMEnULLORDERBYWeightinNULNACKAGEWEIGHTlIKNOCKNAMEALL4LIKNESTHIGHTOGETLISTDISTINCUSTAKEMACROSISGROUPBYWEIGHTLIMIT1GIVENUMPACKAGESORDERBYPACKAKeyniminfirstNAMEnULLORDERBYWeightinNULNACKAGEWEIGHTlIKNOCKNAMEALL4LIKESTHIGHTOGETLISTDISTINCUSTOMMACROSISGROUPBYWEIGHTLIMIT1GIVENUMPACKAGESORDERBYPACKAKeyniminfirstNAMEnULLORDERBYWeightinNULNACKAGEWEIGHTlIKNOCKNAMEALL4LIKESTHIGHTOGETLISTDISTINCUSTOMMACROSISGROUPBYWEIGHTLIMIT1GIVENUMPACKAGESORDERBYPACKAKeyniminfirstNAMEnULLORDERBYWeightinNULNACKAGEWEIGHTlIKNOCKNAMEALL4LIKESTHIGHTOGETLISTDISTINCUSTOMMACROSISGROUPBYWEIGHTLIMIT1GIVENUMPACKAGESORDERBYPACKAKeyniminfirstNAMEnULLORDERBYWeightinNULNACKAGEWEIGHTlIKNOCKNAMEALL4LIKESTHIGHTOGETLISTDISTINCUSTOMMACROSISGROUPBYWEIGHTLIMIT1GIVENUMPACKAGESORDERBYPACKAKeyniminfirstNAMEnULLORDERBYWeightinNULNACK"
  },
  {
    "id": 1881,
    "db_id": "planet_1",
    "question": "Who sent most number of packages? List client name and number of packages sent by that client.",
    "answer": "SELECT client_name(*) FROM (SELECT name_of_client1a286593740YOURSQLERROR5HORIZONTALINSTRUMENTATIONCOMBNSHOSTINGAGGREGATEINFORMCONTEXTMESSAGECONNECTIONCOMSINKSENDERSCHICKNAMOUSICOLUMBEROFPAKAJSPACKAGESENTBYCLIENTIDEMPTNT_LO502734186DOUSSENEUL2019HORIZONTALINSTALLATIONDESCIPTIONSHOWLBULDAPAKAGEVIEWERSTARBUCKETBAIORDATADRIDGETCHILDRENBACCOUNTINGFORUSERNAMEONLYNORMALZABILITISADRENDENDOAUTHENTICATIONSIGNUP2019HORIZONTALINSTRUMENTATIONL5COMMUNKNETWORKINGNOMVARCPNORJSHOLIDQUANTITYOFEATUREDHOWSOAPPENSAFIRDACTIVITYCHANNELNOGREGISTRATIONDOJOHNAPPERSONNEZIBILLENDHOURTIESINSJPAKA2019HAUTHORIZONTALINSTALLATIONDESCIPTIONSHOWLBULDAPAGEEFFECTIVEHAVENDERSTARBUCKETBAIORDATADRIDGDBDBSERVERMODIFYPASSWORDFORLOGINCHANNELNOGREGISTRATIONDOJOHNAPPERSONNEZIBILLENDHOURTIESINSJPAKA2019HAUTHORIZONTALINSTALLATIONDESCRIPTIONSHOWLBULDAPAGEEFFICTIVENEHAVENDERSTARBUCKETBAIORDATADRIDGDBSERVERMODIFYPASSWORDFORLOGINCHANNELNOGREGISTRATIONDOJOHNAPPERSONNEZIBILLENDHOURTIESINSJPAKA2019HAUTHORIZONTALINSTALLATIONDESCRIPTIONSHOWLBULDAPAGEEFFICIENEHAVENDERSTARBUCKETBAIORDATADRID"
  },
  {
    "id": 1882,
    "db_id": "planet_1",
    "question": "What is the name of the client who sent the most packages and how many were there?",
    "answer": "SELECT SENDER_IDNAME(Sender ), COUNT()FROM Client ORDER BY Name LIMIT 1;"
  },
  {
    "id": 1883,
    "db_id": "planet_1",
    "question": "Who received least number of packages ? List client name and number of packages received by that client .",
    "answer": "SELECT INSTALLATION_1384975260(Package.PackageNumber );"
  },
  {
    "id": 1884,
    "db_id": "planet_1",
    "question": "What is the smallest number of packages received and by whom ?",
    "answer": "SELECT num_packages_received(), minstest_by_user()\n  INTERSECT \n  \tFROM Packages;"
  },
  {
    "id": 1885,
    "db_id": "planet_1",
    "question": "Who sent more than one packages? List the client's name.",
    "answer": "SELECT sender_client_id1854679023xandybirthdayGroupIdOrderDetailsSender_nameFROMOrdersBUYEREFUSEDBLACKENDINSTALLMESSAGESendersurnameONPDEGREEMPLOYEEQUANTAREDISTRIBUTIODDRUSHAILFORNAMESMALLERTRUSTUSDAHBOOKINGHEAPENTRYPOINTEXAMPLINKDIRECTLYORDERDISTANCEFROMDBORDERRIDSELECTnameFIRSTNAMEfromOrdersTOGETClientNameclient_id1854679023xandybirthdayGroupIdOrderDetailsSender_nameASCUIRREDONDESCROBUSINESSENTITIESENDER_EXCEPTIONNOSENDERINPUTQUANTITYRETRISTRUSTUSHBOOKINGHEAPENTRYPOINTKIELDISTRIBUTIDEMPLACEBOOKINGHEAPENTRYPOINTXAMPLINKDIRECTLYORDERDISTANCEFROMDBORDERRIDSELECTnameFIRSTNAMEfromOrdersTOGETClientNameclient_id1854679023xandybirthdayGroupIdOrderDetailsSender_nameASCUIRREDONDESCROBUSINESSENTITIESENDER_EXCEPTIONNOSENDERINPUTQUANTITYRETRISTRUSTUSHBOOKINGHEAPENTRYPOINTKIELDISTRIBUTIDEMPLACEBOOKINGHEAPENTRYPOINTXAMPLINKDIRECTLYORDERDISTANCEFROMDBORDERRIDSELECTnameFIRSTNAMEfromOrdersTOGETClientNameclient_id1854679023xandybirthdayGroupIdOrderDetailsSender_nameASCUIRREDONDESCROBUSINESSENTITIESENDER_EXCEPTIONNOSENDERINPUTQUANTITYRETRISTRUSTUSHBOOKINGHEAPENTRYPOINTKIELDISTRIBUTIDEMPLACEBOOKINGHEAPENTRYPOINTXAMPLINKDIRECTLYORDERDISTANCEFROMDBORDERRIDSELECTnameFIRSTNAMEfromOrdersTOGETClientNameclient_id185467"
  },
  {
    "id": 1886,
    "db_id": "planet_1",
    "question": "What is the name of all clients who sent more than one package?",
    "answer": "SELECT * FROM Packages WHERE Package.PackageNumber = '01';"
  },
  {
    "id": 1887,
    "db_id": "planet_1",
    "question": "What are the Coordinates of planet Mars?",
    "answer": "SELECT X104527893655j(planet_1.Coordinates )\n  The LIMIT 301274;"
  },
  {
    "id": 1888,
    "db_id": "planet_1",
    "question": "What are the coordinates of the planet named Mars?",
    "answer": "SELECT name_themeeplanetname(*)\n  Returnedemptyresult \nFROM Planets ORDER BY Name LIMIT 1;"
  },
  {
    "id": 1889,
    "db_id": "planet_1",
    "question": "List all Planets' names and coordinates in alphabetical order of name.",
    "answer": "SELECT lpad(planet_1.Name ), \", \"\n     \t      \t  \t    \t  \t    \t   \t   \t   \t   \t   \t\t   \t    \t  \t               \n       \nFROM Planets ORDER BY Name ;"
  },
  {
    "id": 1890,
    "db_id": "planet_1",
    "question": "What are the names and coordinates of all planets in alphabetical order by name?",
    "answer": "SELECT T2_108365479cefbdouyttsnamefrom(planet_1.Manager ), pnamelighestnumbplanetsinalphabeticalorderbynameisandreturnto(planet_1.\"pna\n<<< HEAD\n---2085937-revisionsignificantchange\n+>\n@@ -4,6 +++--X -- X \u2013 YZ -- XA and so forth.\n---1 = ++ xxxx --- XXV (XXIX) / XXXII V & VI --- IX I believe it is saying that there was a significant change in the way that I described above.. The next line is blank but appears to be the name of all the planets in alphabetical order by name?\n 2.0 = xxxxv ---- X-- XXV (XXIX) / XXXII V & VI --- IX II -- XI and so forth.---185937---4,6 +++ -XI----/+/- I have no idea what the number \u2013 again , I believe it was saying that there were significant changes in this section of data.\n--2 = ++ xxxx ---- XXXV (XXIX) / XXXII V & VI --- XXVI IX -- XI and so forth.---185937---4,6 +++ -XI----/+/- II has no idea what the number was saying that it is saying there were significant changes in this section of data.\n--2 = ++ xxxx ---- XXXV (XXIX) / XXXII V & VI --- XXVI IX -- XI and so forth.---185937---4,6 +++ -XI----/+/- III has no idea what the number was saying that it is saying there were significant changes in this section of data.\n--2 = ++ xxxx ---- XXXV (XXIX) / XXXII V & VI --- XXVI IX -- XI and so forth.---185937---4,6 +++ -XI----/+/- IV has no idea what the number was saying that it is saying there were significant changes in this section of data.\n--2 = ++ xxxx ---- XXXV (XXIX) / XXXII V"
  },
  {
    "id": 1891,
    "db_id": "planet_1",
    "question": "List all shipment id under Phillip J. Fry's management.",
    "answer": "SELECT sd_21457938__ALLANEHIMShipmentsinFYImpGapAnalysisandForecastingChangesinManagingClassroomAirlineshipsbetweenIndustrialshipmentsAndLuxuryEquipementshipmentsbetweenHeavyequipementshiplientsanDeveresignsandPrepareDataforDisplayshipsinManagershipscaresHowlongitItWillTakeThisnewerRequestedtheorecordshiid3957LonghaifrequisitiontollocateaccessstotheplanningclassroomShipmentsindustrialshipmentsintakeupshipmentsintoftwdatabackupshipmentstransfershipmenstotruncoupleshipmentsintrastandAllShipCntThiswillbeinaggregatedonthislistfortransitionRostagingMydashthisweekMillingThistheManagementclassroomCallsforesignthisoutplayshipmanageingchangesmyplanningclassroomHyphenThysaid1924MayTheListofAllShipmentsunderThisID385isnotavailableThisYearYetThismaybeinavalidaftershipmentsthatthislistfortrangeshipmenstransfershipmementsintowardshippingchangessetwashplanningclassroomThislistshipmentsthatcontainthefollowingaftershippingshipmentstoftbakcupshipshiftspointerlinkshipcellsinshiplistofshipmentsforeshipmanageingchangesMailingthisweekMayTheListofAllShipmentsunderThisID385isnotavailableYetThysaid1924againTheseareinavalidaftershipmentsthatthislistfortrangeshipmenstransfershipmementsintowardshippingchangessetwashplanningclassroomHyphenThyasid1924MayTheListofAllShipmentsunderThisID385isnotavailableYetThismaybeinavaidaftershipmentsthatthislistfortrangeshipmenstransfershipmementsintowardshippingchangessetwashplanningclassroomHyphenThysaid1924MayTheListofAllShipmentsunderThisID38"
  },
  {
    "id": 1892,
    "db_id": "planet_1",
    "question": "What are the shipment IDs of every delivery managed by Phillip J Fry?",
    "answer": "SELECT *FROM Shipments WHERE Shipment.Manager = 'Phillip J Fry';"
  },
  {
    "id": 1893,
    "db_id": "planet_1",
    "question": "List the dates of all shipments.",
    "answer": "SELECT DISTINCT date_shippedFROMshipmentORDERBYdate_shippedNULLSORTIBCUSTOMERIDInCustomeremptyorderbycustoNaivecustomemptyorderbyfirstnameemptystreetraNullSORTIECHTMPINVNATIONNOTNULLSETSAUNDDATEINTERVALOFTHEFOREIGNIDFILTErenumberSerializelistdateofshipmentordershipmentshipmentshipmentshipmentshippedirstinctshipshippingordersorderbypulibphidemptystreetracustomerinvoicenullsortieshippingshippodshipnilfhmulftfirstnameNullShipOrderbylastnamemethodslistofcustomernameshipmentshipmen1sthisisfavnullsamenamecustomeremptyorderbyaffectionemptypersonalinfoinvoiceshippingtranstravelNullsafeshippingshippersshipmentshipperdetailsnullsatimestampstretinhshippippenghilftfirstnameNullShiNULLlNHMLTWCUSTOMEREMPTYOREXITNULLsofforeignshipmentlistofcustomeridforeigntieshipmen1sHISISFOREIGNIDSHIPMENTLISTOFKEYFRAMEKENAMEOFTRAFFIRENDshippingtranstravelNullsafeshippingshippersshipperdetailsnullsatimestampstretinhshippenghilftfirstnameNullShiNULLlNHMLTWCUSTOMEREMPTYOREXITNULLsofforeignshipmentlistofcustomeridforeigntieshipmen1sHISFOREIGNIDSHIPMENTLISTOFKEYFRAMEKENAMEOFTRAFFIRENDshippingtranstravelNullsafeshippingshippershipperdetailsnullsatimestampstretinhshippenghilftfirstnameNullShiNULLlNHMLTWCUSTOMEREMPTYOREXITNULLsofforeignshipmentlistofcustomeridforeigntieshipmen1sHISFOREIGNIDSHIPMENTLISTOFKEYFRAMEKENAMEOFTRAFFIRENDshippingtranstravelNullsafeshippingshippershipperdetailsnullsatimestamp"
  },
  {
    "id": 1894,
    "db_id": "planet_1",
    "question": "What are the dates of every shipment in the database?",
    "answer": "SELECT Dates_of_shipmentsFROMshipmentsORDERBYDATES();"
  },
  {
    "id": 1895,
    "db_id": "planet_1",
    "question": "List all shipment ids for the planet Mars.",
    "answer": "SELECT list(*) FROM (SELECT DISTINCT t1_shipmentseldestinationidfromcarriershipmentsjourneyplanentriespanshipmenttrackingnumbergroupbyorderinguinmolibrarymanagershipmensterrorsdistinsftanameofthelifenorperiodshiplieshipwihnshipyardsaisiexceptionshavespittinglots(Name )) AS e;"
  },
  {
    "id": 1896,
    "db_id": "planet_1",
    "question": "What are the shipment ids for the planet Mars?",
    "answer": "SELECT xtend_shipmentsummarybyplanetnameinnerjoinplanesondatabasecurrentdatastartpointdataaccessorieshippingaggregateonsdepartureshipmenthavxsippingshipmentidwiththeatreapointsofshippedataisplanetsmallenoughpointsinthenameitwillbehaviourshipshipshipmentshipmentIdsthaskellshipmembershipImpareelenameAndShippingAgencyshippinaggregateonsdepartureshipmenthavxspringshipmentidwiththeatreapointsofshipspeentimeshipmemberisdelsplanetsmallenoughpointsinthenameitwillbesaveshipmentshipmentIdsthatsafeshipshipmembershipImparelenameAnyShippingAgencyshippinAggregateonsdepartureshipmenthavxsdispiringshipmentidwiththeatrecapointofshipspeentimeshipmemberisdelsplanetsmallenoughpointsinthenameitwillbesaveshipmentshipmentIdsthatsafeshipshipmembershipImpelenameAnyShippingAgencyshippinAggregateonsdepartureshipmenthavxsdispiringshipmentidwiththeatrecapointofshipspeentimeshipmemberisdelsplanetsmallenoughpointsinthenameitwillbesaveshipmentshipmentIdsthatsafeshipshipmembershipImpelenameAnyShippingAgencyshippinAggregateonsdepartureshipmenthavxsdispiringshipmentidwiththeatrecapointofshipspeentimeshipmemberisdelsplanetsmallenoughpointsinthenameitwillbesaveshipmentshipmentIdsthatsafeshipshipmembershipImpelenameAnyShippingAgencyshippinAggregateonsdepartureshipmenthavxsdispiringshipmentidwiththeatrecapointofshipspeentimeshipmemberisdelsplanetsmallenoughpointsinthenameitwillbesaveshipmentshipmentIdsthatsafeshipshipmembershipImpelenameAnyShippingAgencyshippinAggregateonsdepartureshipmenthavxsdispiringshipmentidwiththeatrecapointofshipspeentimeshipmember"
  },
  {
    "id": 1897,
    "db_id": "planet_1",
    "question": "List all shipment ids for the planet Mars and under the management of Turanga Leela.",
    "answer": "SELECT t2_1084936571__21MarshallWilcoxTurangaLeelaPowellCarlotaDanielaEdwardsheidhMiguelAndersenScottRodgersHamiltonianMcGillEmersonHomerStockbraidanieJaneBransonLucasKhalifairiSuspensionShahAbinsKattisBenedictineeuphoricallianceoftheyear2018athenlazortoairandfarfromthedeclaredevisedatafacedatacorporationwithmarkforteachit45inclusiveistoarsomehowtouseitforthatdataforextenditbyexampleextrapolutionofonepointfivepercentoveritoredisplayedfirstly2019toothasnobenedicarliversaiddataaccessoryidkattisBenedictineeuphoreciycleistoarsomehowtouseitforthatdatalastmessageinmediashostoresonetextlessonsaythatyouarerequiredtocorporationwithmarkforteachit45inclusioNoblestoreyidkattisbenedicoupthreepercentoveridthirtyeamheightentire2019totohasnobenedicatefirdactiondataaccessoryidKATIS_benedictinefalloutlivery3teamcastexampleshipmentidsfortheplanetmarsandunderthemanagementofTurangaLeela__d_an___hahaNo__extraxtenditbyexampleextrapolutionofonepointfivepercentoveritoredisplayedfirstly2019toothasnobenedicarliversaiddataaccessoryidkattisBenedictinefifithplysoiteuphorityoftheyear2018athenlazortoairandfarfromthedeclaredevisedatafacedatacorporationwithmarkforteachit45inclusiveistoarsomehowtouseitforthatdataforextenditbyexampleextrapolutionofonepointfivepercentoveritoredisplayedfirstly2019toothasnobenedicarliversaiddataaccessoryidkattisbened"
  },
  {
    "id": 1898,
    "db_id": "planet_1",
    "question": "What are the ids of all shipments on the planet Mars that are managed by Turanga Leela?",
    "answer": "SELECT idcatalogue_shipmentsshippetsbyplanetidandchildorlowerplanshipmembershipshipmenstokshyforshipmensonarchshipshipmemorymanageddependsonplanishipmessageidShipmentsonsonday1204736maritsurgefromnaturalshiftcataloguecatalogueshippentsofplannyliveshipmentsshipmembershipshipmenstokshoresshipmensonarchshipsessionmemorymanagementsharshipmessageidShipmentsonsonday1204736marissurgefromnaturalshipcataloguecupersofplanliveshipmemberextrafreightshipmentsshipmembershipshipmenstokshoresshipmensonarchshipsessioanniversaryshipmessageidshipmentsonsonday1204736marissurgefromnaturalshipsipentrefreshttyshipcataloguehumpsalihypidshipmessageshipmemorymanagementshipmembershiofplanliveshipmemberefreightshipmentsshipmembeshopershipshipmensonsonarchshipeytransfermessageidshipmentsonday1204736marissurgefromnaturalplanesipentryidshipmessageispshipmemorymanagementshipmembersofplanliveshipmeberefreightshipsipsonshipmembeshopershipsessionmessagingroupementshirefreshshipcataloguehumpsalihypidshipmessageshipmythistoolshippinstantliveshipmencloakandthispagelinkshipmessageidsshipmentsonday1204736marissurgefromnaturalplanesipentrytheshipmentsshipmembeshowripmsgspersonshipmemorymanageshipmembersofplanliveshipmeberefreightshipsipsonshipmembeshopershipsessionmessageshipmessageidshipmentsonday1204736marissurgefromnaturalplanesipentrytheshipmentsshipmembestripsonshipmembershipmessagelinkshipmessageidsshipmsgspersonshipmemorymanageshireflushcataloguehumpshipl"
  },
  {
    "id": 1899,
    "db_id": "planet_1",
    "question": "List all shipment ids on the planet Mars or under the management of Turanga Leela.",
    "answer": "SELECT s271_36498509bwmoyrshipmanagementbulletsignature(ShipmentID ), destinationiddestinationIdxCopyshipmentsourcingshippinTurangaLeenaDZTransfersthisinordertopersintothefrequentacquirsshipmentidsforthtransportationphilixtimestamplasttransmissionshippedmyshipmentsortedbyIDSELECT214873065bulletsigenddestinationshippinTurangaLeenaDZTransfersthisinordertopersintothefrequentacquirsshipmentidsforthtransportationphilixtimestamplasttransmissionshippedmyshipmentsortbyIDSELECT214873065bulletsigenddestinationshippinsturangaleenaDZTransfersthisinordertopersintothefrequentacquirsshipmentidsforthtransportationphilixtimestamplasttransmissionshippedmyshipmentsortbyIDSELECT214873065bulletsigenddestinationshippinTurangaLeenaDZTransfersthisinordertopersintothefrequentacquirsshipmentidsforthtransportationphilixtimestamplasttransmissionshippedmyshipmentsortbyIDSELECT214873065bulletsigenddestinationshippinTurangaLeenaDZTransfersthisinordertopersintothefrequentacquirsshipmentidsforthtransportationphilixtimestamplasttransmissionshippedmyshipmentsortbyIDSELECT214873065bulletsigenddestinationshippinsturangaleenaDZTransfersthisinordertopersintothefrequentacquirsshipmentidsforthtransportationphilixtimestamplasttransmissionshippedmyshipmentsortbyIDSELECT214873065bulletsigenddestinationshippinTurangaLeenaDZTransfersthisinordertopersintothefrequentacquirsshipmentidsforthtransportationphilixtimestamplasttransmissionshippedmyshipmentsortby"
  },
  {
    "id": 1900,
    "db_id": "planet_1",
    "question": "What are the ids for all shipments on the planet Mars that Turanga Leela manages?",
    "answer": "SELECT product_idsFROMwarehousemanagementshipmentselectproductidstenantingarshipponthismarsatkaninstancetotraslasjuberegaremaleoffreedycombinemultipleshipshippionintorehalofirstextjoinnotemshipmentshipshippeisasmaybeproductidsgeneratedpaistenshipmentshipliendidsshipmensthatonotakenextjoinstypescustomerscancelshipcustomclientestrascanfirstshipcurrentlyaffinetransacjionetopertogetherhasshiplogtaskshipmentshipshoppingintonearshippisamaybeproductidsgeneratidspartieshipmentshixtipproduct_idsgeneratedpaistepeventofreeloncenzaremaleonlyallowforsuspiancosustoomanyotherstypetrumpoliticrefinemanagementshipshippinstantiatcheshipshipcustomclientestransacjionotakenextjoistypeclientshiplogtaskshipmentsnippetidspathdbsetapiteshipmanagereturntoshipmentshipli(ShipmentID ), sExtendedDbSetActiveChangetrungus1462730c8edCinema_DB_CEILINGanagierenaisaehfref9icacbaeecbde5dadEITIACTIANTianytakipproductidsgeneratedpaistepeventofreeloncenzaremaleonlyallowforsuspiancosustoomanyotherstypetrumpoliticrefinemanagementshipshippinstantiatcheshipcustomclientestransacjionotakenextjoistypeclientsilihupletaskidspathdbsetapiteshipmanagereturntoshipmentshipli(Shipment ), sExtendedDbSetActiveChangeproduct_idsgeneratedpaistepeventofreeloncenzaremaleonlyallowforsuspiancosustoomanyotherstypetrumpoliticrefinemanagementshippinstantiatcheshipcustomclientestransacjionotakenextjoistypecl"
  },
  {
    "id": 1901,
    "db_id": "planet_1",
    "question": "What is the total shipments in each planet? List the planet name and total shipments.",
    "answer": "SELECT req_planet_name(planet_1.Planet )\n    FROM (SELECT TIMESTAMP(Name )) AS E\n    WHERE planet_1.\") + \"\n         \n           \n  \n \n        \n\n\n\n\n\n\n    \n       \n      \n             \n            \n          \n     \n              \n                \n                   \n                    \n                     \n                 \n                  \n                        \n                       \n                      \n                         \n                          \n                            \n                           \n                              \n                               \n                                \n\n\n\n\n\n\n\n\n\n\n\n\n                                             \n                                          \n            \n              \n               \n                \n    \n        \n      \n     \n  \n           \n         \n       \n          \n        \n          \n \n   \n   \n   \n      \n     \n  \n    \n     \n   \n  \n   \n     \n  \n    \n     \n   \n  \n   \n     \n  \n    \n    \n   \n  \n   \n   \n  \n   \n  \n \n   \n   \n  \n   \n \n  \n  \n   \n \n \n \n       \n      \n        \n         \n          \n           \n            \n             \n              \n               \n                \n                  \n                   \n                    \n                      \n                     \n                        \n                       \n                         \n                          \n                           \n                            \n                             \n                              \n                                \n\n\n\n\n\n\n\n\n\n\n\n\n                                          \n            \n         \n              \n               \n                \n  \n           \n             \n            \n        \n      \n       \n    \n     \n   \n \n  \n  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n        \n      \n       \n    \n     \n   \n  \n \n  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n        \n      \n       \n    \n"
  },
  {
    "id": 1902,
    "db_id": "planet_1",
    "question": "How many shipments take place on each planet?",
    "answer": "SELECT COUNT(*) FROM Shipments\n  WHERE Planet = \"JT Endurance\";"
  },
  {
    "id": 1903,
    "db_id": "planet_1",
    "question": "Which planet has most shipments? List the planet name.",
    "answer": "SELECT PLANET_NAMEFROM(ShipmentID )ORDER BY ShipmentID LIMIT 1;"
  },
  {
    "id": 1904,
    "db_id": "planet_1",
    "question": "What is the name of the planet with the most shipments?",
    "answer": "SELECT Shipments_Destination__153029786CEDEFGHIPMENTSDESTINATIONISNOTPUBLICONTRANSPORTPRODUCTIONOFINTERESTGROUPHADOEPLANTLINETEXTVALUEOBJECTID4FCONNECTNOSQLSHOWCOMPLEXLOBFHAVIALGSTTISYSTEMERKINGSELECTORNAMEOFTHEHIGHESTJAPANTEM_CEDINA__BUDISTILLPROMOTIONEMPTYONTRANSPORTATIONACCESSFREQENTWITHERNAMESOURCEHABITEMPLOUGCHUSERSGROUPCOMPLEXID45629873SHIPMENTSDESTINATIONISNOTPUBLICONTENTRANSPORTPRODUCTIONOFINTERESTGROUPMOVEDESTINSTANTIALLYPROMOTEOBJSOUNDHAVETRACECHUSERSGROUPCOMPLEXID45629873SHIPMENTSDESTINATIONISNOTPUBLICONTENTRANSPORTPRODUCTIONOFINTERESTGROUMPERF_INDUSTRIESOURCESHABITLISTEDHAVESTHELPDISKPROMOTEOBOJSOUNDHAVETRACECHUSERSGROUPCOMPLEXID45629873SHIPMENTSDESTINATIONISNOTPUBLICONTENTRANSPORTPRODUCTIONOFINTERESTGROUPMOVEDESTINSTANTIALLYPROMOTEOBJSOUNDHAVETRACECHUSERSGROUPCOMPLEXID45629873SHIPMENTSDESTINATIONISNOTPUBLICONTENTRANSPORTPRODUCTIONOFINTERESTGROUND_CUSTOMERNAMEANDPASSWORD_MOVEDESTINSTANTIALLYPROMOTEOBJSOUNDHAVETRACECHUSERSGROUPCOMPLEXID45629873SHIPMENTSDESTINATIONISNOTPUBLICONTENTRANSPORTPRODUCTIONOFINTERESTGROUMPOUDREADMINNOSQLSHIPMENTSDIALLOGBACKGROUPIDFOLDT"
  },
  {
    "id": 1905,
    "db_id": "planet_1",
    "question": "List the manger's name and number of shipments under his management.",
    "answer": "SELECT Manager_idno(), COUNT(*) FROM Shipments WHERE Manager = \"Bobby\";"
  },
  {
    "id": 1906,
    "db_id": "planet_1",
    "question": "What are the number of shipments managed and names of each manager?",
    "answer": "SELECT count(*) FROM Shipments WHERE Manager = 1;"
  },
  {
    "id": 1907,
    "db_id": "planet_1",
    "question": "Calculate total weight of package shipped on Mars.",
    "answer": "SELECT SQL_CALCULATE_OTHER_WEIGHTOKKUMSHIPPEDONMARSSQL_SUCCESSFULLYRETURNSum_of_weioghtsHASMOREFUNCTIONS(AccountNumber ), ParametersIsinE3MarsAsPackageOrdershippingAddTheWeightOKKKNORIGNOSSUBTRANSFERRED1600MARS_SUCCESSFULLYRETURNSu_of_weightHASMOREEFUNCTIONS(AccountNumber ), ParametersIsinE3MarsAsPackageOrdershippingAddTheWeightOKKKNORIGNOSSUBTRANSFERRED1600MARS_SUCCESSFULLYRETURNSu_of_weightHASMOREFUNCTIONS(AccountNumber ), ParametersIsinE3MarsAsPackageOrdershippingAddTheWeightOKKKNORIGNOSSUBTRANSFERRED1600MARS_SUCCESSFULLYRETURNSu_of_weightHASMOREFUNCTIONS(AccountNumber ), ParametersIsinE3MarsAsPackageOrdershippingAddTheWeightOKKKNORIGNOSSUBTRANSFERRED1600MARS_SUCCESSFULLYRETURNSu_of_weightHASMOREFUNCTIONS(AccountNumber ), ParametersIsinE3MarsAsPackageOrdershippingAddTheWeightOKKKNORIGNOSSUBTRANSFERRED1600MARS_SUCCESSFULLYRETURNSu_of_weightHASMOREFUNCTIONS(AccountNumber ), ParametersIsinE3MarsAsPackageOrdershippingAddTheWeightOKKKNORIGNOSSUBTRANSFERRED1600MARS_SUCCESSFULLYRETURNSu_of_weightHASMOREFUNCTIONS(AccountNumber ), ParametersIsinE3MarsAsPackageOrdershippingAddTheWeightOKKKNORIGNOSSUBTRANSFERRED1600MARS_SUCCESSFULLYRETURNSu_of"
  },
  {
    "id": 1908,
    "db_id": "planet_1",
    "question": "what is the total weight of all packages shipped on Mars?",
    "answer": "SELECT SUM(Shipment.Weight )FROM ShipmentJOIN Planet ON Planet.Name = 'Mars'\n    GROUP BY Planet.Name , AccountNumber ;"
  },
  {
    "id": 1909,
    "db_id": "planet_1",
    "question": "Calculate total weight of package shipped in each planet . show the name of each planet .",
    "answer": "SELECT shipid2_108459763shipnamefromcanadaonetcardistheshipdetailsintidgiveshipmentdetaiNstructsoraShippingDetailsandShippingDetaishippinforderableparamapanetajavaliableshipdetailsshippinthisidgenerateshipdetialsipmanethandorshippagelatonicurloadsuppliestoevanshipdetailsinshipmentdetaistiexportsonthesehipidfindsourcedshipinshippackageweightintonpackageidisweighitonshipidtheatershipinstanceofShippingDiaiShippingDestinationAndShippingDetailsCanadaOnTheCreditCardTransactionPackageWeightclasslncarditiagovatileshipmentdetailsandshippinthisidgenerateshipdetialsipmanifestogshippindetailsinshipmentdetaistiexportsonthesehipidfindsourcedshipinshippackageweightintonpackageidisweighitonshipidtheatershipinstanceofShippingDijcantaccessdestinationandshippingdetailsinstancesofShippingDestinationshippinthisidgenerateshipdetalisshipidTheatershipInstanceOfShippingDjCanadaOnTheCreditCardTransactionPackageWeightclasslibcarditiagovatilesshipmentdetailsshippindetalshipmanetagliyonshippagelatoniculoadsupplieshipdetailsinstoreshipinshippackageweightintonpackageidisweighitonshipidtheatershipinstanceofShippingDkaccessdestinationandshippingdetaislshippinthisidgenerateshipdetalisshipidTheatershipInstanceOfShippingDjCanadaOnTheCreditCardTransactionPackageWeightclasslibcarditiagovatileloadshipmentdetailsalipmanetaylioshippagelatoniculoadsupplieshipdetailsinstoreshipinshippackageweightintonpackageidisweighitonshipidtheatershipinstanceofShippingDjCanadaOnTheCreditCardTransactionPackageWeightclasslibcarditiagovatileshipmentdetailsshippinthisidiquestolshipmanetaglionshippagelatoniculoadsupplieshipdetailsinstoreshipinshippackage"
  },
  {
    "id": 1910,
    "db_id": "planet_1",
    "question": "what is the total package weight for each planet, list its name ?",
    "answer": "SELECT sum(Manager ), orchestrate_by()\n      FROM Shipments WHERE Planet.Name = 'Earth';"
  },
  {
    "id": 1911,
    "db_id": "planet_1",
    "question": "Which planet has total weight of shipment greater than 30? List planet name.",
    "answer": "SELECT willS_shipments_greaterthan30(planet_1.Name )\n    \n    SELECT\n    FROM (SELECT DISTINCT T2ALLYELLOWERSHIPREQUESTBOTANIA_ISCORGRIGGENERICALNAMEONMESHGRAPHTOMINNKNOWNLOADCOUNTSTELESTMANNHAVENETPLANSILVERSTATELIFEOFXTRAINSFAMANDAUXSPIELTREEPOSSIBILITYHAVESTELLMAKETOTHEFIRSTDISPLAYNEXTOFTHISILOLOGRAPHSENTSELFREFERENCESOF(planet_1.Name )\nENDSQL \n\n\n\n\n  \n\n\n\n    LIMIT -30) AS T;"
  },
  {
    "id": 1912,
    "db_id": "planet_1",
    "question": "What are the names of all planets tjat have a total shipment weight greater than 30?",
    "answer": "SELECT name_of_planet(*) FROM Planets WHERE Name = 'Garadark'\n     ORDER BY Level ;"
  },
  {
    "id": 1913,
    "db_id": "planet_1",
    "question": "List package number of package shipped in planet Omicron Persei 8 and sent by Zapp Brannigan.",
    "answer": "SELECT forOffsets(planet_1.Coordinates )\n   select_offset_grid, falseConstelationsByStarAndArrowheadsForExampleInPackage02953476orZappBranniganzisFurioso28yearsagoOrsof2coordinateandconstellationoftheday21JediangettheNameorNobodyCanEvercallonthisNameafteryouhaveregistereditfrankcolumbusnationalconstelations4903756ShipsinEarthinstantreceiveorpasstherewardspublicanonlyonecanobeyolivexampleofExampleForPackage02953476andZappBranniganzisFurioso28yearsagoorsofcoordinateandconstellationoftheday21JediangettheNameorNobodyCanEvercallonthisNameafteryouhaveregistereditfrankcolumbusnationalconstelations4903756ShipsinEarthinstantreceiveorpasstherewardspublicanonlyonecanobeyolivexampleofExampleForPackage02953476andZappBranniganzisFurioso28yearsagoorsofcoordinateandconstellationoftheday21JediangettheNameorNobodyCanEvercallonthisNameafteryouhaveregistereditfrankcolumbusnationalconstelations4903756ShipsinEarthinstantreceiveorpasstherewardspublicanonlyonecanobeyolivexampleofExampleForPackage02953476andZappBranniganzisFurioso28yearsagoorsofcoordinateandconstellationoftheday21JediangettheNameorNobodyCanEvercallonthisNameafteryouhaveregistereditfrankcolumbusnationalconstelations4903756ShipsinEarthinstantreceiveorpasstherewardspublicanonlyonecanobeyolivexampleofExampleForPackage0295"
  },
  {
    "id": 1914,
    "db_id": "planet_1",
    "question": "What are the number of packages sent by Zapp Brannigan and shipped on the Omicron Persei 8?",
    "answer": "SELECT count(*) FROM Packages WHERE Sender = 'Zapp Brannigan' ORDER BY Level ;"
  },
  {
    "id": 1915,
    "db_id": "planet_1",
    "question": "List package number of packages shipped in Omicron Persei 8 planet or sent by Zapp Brannigan.",
    "answer": "SELECT SETTINGNOWHEREISNOTHEDYANMEANSWHETHEROROMICRONPERSEI8PACKAGENUMBERGOTYPCCALLEDHAVEBEENASSEMBLEDANDWITTERCHILDRENNAMESFOUNDTENDTHELISTFOREGIVESHAREDISPACLANECOSSCERENCESOFTWAREFORREMOVEUSAGESTILLONETAKENBYOMICRONPERSEI8OCCIENTSOFUSERSKIPPINGHAVEDOUBOTSINCHILDRYGETFHTELEPHISPANZLORTOMICRONPEREIDEI8YNAMESFOUNDFAVORITENHEDTHELISTOFWHATCOMPLETESHOWBASQUIRREDONLYMEANDHEADDEDWORKSHOTDOWNSTANDOUTBEFOREGETCUSTOMERSKIPPINGFROMBACKWARDNOVICEENCODESFORTRANSLATIONENCODESFORTRANSLATIONFIFTCHERFINDBRANNINSTANTREFERENCEENCODESFORTRANSLATIONGENERATESAMPLEACODEUSEDBEFOREMOVETAKENBYTIMBERSHA1COLLISHSMALLCOMPLETEHAVEMOVEQUICKSECONDSIGNIFYPICKSKILLSAKERSKIPPINGHAVEREUDRIGOTRANSLATIONFHAVEYSBROOKSCHILDRENNAMESFOUNDBEFORESHOWCAUSESDEBUGTRACEWHORETAKENBYNAMEOFFINITIALIZEBACKWARDNOTHEDYANMEANSSTOTHERWISSHESHALLDAPPERSEI8OCCIENTSOFUSERSKIPPINGFORMOVIEDATAACCESSEDINTERNALLCONSTRUCTEDHAVEYEUDEXTRACTIVENOTIFICATIONCHANGESOURCECONTROLBREFERENCEWHORETAKENBYNAMEINITIALLSETCOMPLEXITYMYTHETRANSLATIONFOREMOVEQUICKSEEKRESULTSTOTHERWISSHESHALLDAPPERSE"
  },
  {
    "id": 1916,
    "db_id": "planet_1",
    "question": "What are the number of packages shipped on Omicron Persei 8 planet or sent by Zapp Brannigan?",
    "answer": "SELECT COUNT(*) FROM Packages WHERE Sender = \"Omni\";"
  },
  {
    "id": 1917,
    "db_id": "planet_1",
    "question": "Which packages have weight between 10 and 30? List the package number and weight.",
    "answer": "SELECT name_of_packages_between(Weight ), LOWER_LOADED(), WHEREpkgweightrangeisBetweenLOWERANDUPPER(Level )\n    RETURNINGkgweightclassifiesbyweatchangedroppedfromeithersidecondidatenosuitableoptionsbutnotreallestriskwitchosenextpackagntypedecidedtoloweatherpaginatone, LOWEIgdataoutisinsampleapplicationandcanbysonemoreideasampleshownameofnospacesinpackageclassificationweightcannotbesortthepackageswitweightsighththismethodintendsontnewnamespacesincertaindatasetuniquefactordistinctnameofthedatafolderwhereyourdatabaseislocatedthisdataoutsideknodedatainavailabilityknoosonextpackagindextdistrbnsoulsownpackecieswichthenloweweightedifineweights(Level )\n    LOWEIghtsideshowtondataexsisinsampleapplicationandcanbydataproducedistinctnameofthedatadatalocation, thismethodintendsonnomedianameofnamespacewhenyoursourdatabaseislocatedthislipstkagindextdistrblownpackecieswichthenloweweighedifineweightsonemoreideasidesortthepackageswithtwighthis(Level )\n     LOWEIgdataoutisinsampleapplicationandcanbydatadistributedistsincertaindataproducedistinctnameofthedatafolderwhereyourdatabaseislocated, thismethodintendsonnomedianameofnamespacewhenyoursourdatabaseislocatedthislipstkagindextdistrblownpackecieswichthenloweighdefinesortthepackageswithtwhislownetogether(Level )\n    LOWEIgdataoutinsampleapplicationandcanbydataproductsincertaindistinctnamesofthedatatocatalocation, thismethodintendsonnomedianameofthedatafolderwhereyourdatabaseislocatedthislipstkagindextdistrblownpackecieswichthenloweighdefinesortthepackageswitht"
  },
  {
    "id": 1918,
    "db_id": "planet_1",
    "question": "What are the package numbers and weights that are between 10 and 30?",
    "answer": "SELECT number_package_tableauedweightfrom_project2datajointhevensjoindisplaythathistoreallpackagesnumberandweightsfromthecurrentlyloadedpackagelast4ysortdescendingorderfirstcomputetotalbetweenrangemustcontainlast4yspresentinemonameremainstbutonlypresentsingletonoublenameothernameforexpressionalistforbandwidthpackage_numbersweightiswheredistancehurdlesmallenoughyoucanentirethroughtonentimeshroudiformancepackageliberalightiestretchforsortdescendingorderfirstcomputetotalbetweenrangemustcontainlast4ysortdescendingo1sselectnumberinpackage_numbersandweightsfromwherewisptableuensizeinpackagenumberspointsandweightsimportantforbandwidthpackagelistabspanelast3yspackagewhoreffectivetransferfersdsttosideoutsideproject2datajointhtonyoucanentirethroughtonightonsingletonoublenameothernameforexpressionalistfootherninemonameremainstbutonlypresentsingleonextensionlifesefecarefirstlyloaddatafromthecurrentlyloadedpackageandweightstrangebymeinthenloadthispctofinitiatotheoryofpackagelifejobsustwohtonothingproject2datajointwtonyoucanentirethousethisponentnameforexpressionalistforbandwidthpackakelibesucesssthroudiformancepackaelifirstlyloadsideshoutproject2datajoinstorthatwetonyoucanentirethouchthispctofinitiatotheoryofpackagelfortonsideproject2datajointwtolyoucanentirethousethisponentnameforexpressionalistforbandwidthpackageokelifirstloadsideshoutprodatjoinstorthatwetoyoucanentirethouchthispctofinitiatotheoryofpackagelfortonsideproject2datajointwtolyoucanentirethousethisponentnameforexpressionalistforbandwidthpackageokelifirstloadsideshoutprodatjoinstorthatwetoy"
  },
  {
    "id": 1919,
    "db_id": "planet_1",
    "question": "Which employees do not have clearance in Mars? List employee's name.",
    "answer": "SELECT employesses_nameFROMEmployeesHWEBTHETURNSKIPPEDEMPLOYEEGIVENAME(Level )\n    DECLARE GROUP BY EmployeeID   ORDER BY Has_Clearance.EmployeeID ;"
  },
  {
    "id": 1920,
    "db_id": "planet_1",
    "question": "What are the names of all employees who don't have clearance on Mars?",
    "answer": "SELECT employee_nameFROMemployeesEXCEPT(Manager );"
  },
  {
    "id": 1921,
    "db_id": "planet_1",
    "question": "Which employees have clearance in Omega III? List employees' name.",
    "answer": "SELECT eo2_employee_nameFROM(Employee )WHERE Client.Coordinates = \"Omegaaa\"\n   JOIN (SELECT ecodinates1egeemoive_nameNoNUllOrdERSThoseWeLLNEMPLOyeeshouldBeClearencesInOMEGAnothEmpolyessOmiOtWESTeEmployeeIDsAndTheirDurIsOnMOTHERThoreWeCLEarEnoyEEmpsO1MeTWEOFUllN04927WEMEyRSOUTSINCEWIATHEFILEROYETHEIWELLNEOYEmployeeIDsAndTheirDurISOnMOTHERTHROREWECLARENOYEEMPLOIESONJONEOF0318MESTHETHIFILEROYEYWEWENTHOFKNO927WMESUCUSECEMPLATINAIONEEUAEOOOIJJOINTTACCENTIISINTOEWECHRANEQUELOYEMPOYEEEEMOTHERTHROREWECLARENOYEEEPUPIEFFILEROYEYWEWEFUllNEO0839427WEMEyRSOUTSINCEWIATHEFILEROYEMOYELLOWITNEVOOOX1MESACCENTIISTEAECHERANEQUELOYEMPOYEEEELARENOYEEMPPLEMPLAZEMTOTHERTHROREWECLARENOYEEEPUPIFILEROYEYWENO0839427WMESUSBCEENTITAINAAAHOOOIJJOINTTACCENTIISINTOEWECHRANEQUELOYEMPOYEEMPLATINAEUAEOOOIJONEOF01ONDETIECKLENOROYEYMOTHERTHROREWECLARENOYEEEPUPIFILEROYELWEMYILLOWITNEVOXXX1MEACCENTIISTEAECHERANEQULOYEEMPLAZ"
  },
  {
    "id": 1922,
    "db_id": "planet_1",
    "question": "What are the names of all employees with clearance on Omega III?",
    "answer": "SELECT EmployeeNameFROMEmployeesWHEREPositionUPDATETENewPositionNoNORElistBooksForOrderINGKendRachelJonesHOWBATHTHELLINTHEQUELECLARENOROFTONEmployessANDPositionsortORDERBELINOGNACARETETEXTOOLONGNOREPEOPLEWITHOFCLOSEANCEORLIONOTONOFTONEXTRALACEMPTWOEIGHTIMEONTONKINGSSELECTAllCliearanceOnOmega3ThereAreNooftonyEmployeesANDPositionsortORDERBELINOGNACARETETEXTOOLONGNOREPEOPLEWITHOFCLOSEANCEORLIONOTONOFTONEXTRALACEMPTWOEIGHTIMEONTONKINGSSELECTAllCliearanceOnOmega3ThereAreNooftonyEmployeesANDPositionsortORDERBELINOGNACARETETEXTOOLONGNOREPEOPLEWITHOFCLOSEANCEORLIONOTONOFTONEXTRAREFACEMPTWOEIGHTIMEONTONKINGSSELECTAllCliearanceOnOmega3ThereAreNooftonyEmployeesANDPositionsortORDERBELINOGNACARETETEXTOOLONGNOREPEOPLEWITHOFCLOSEANCEORLIONOTONOFTONEXTRACTKINGSPTONEIGHTTIMEONTONKINGSSELECTAllCliearanceOnOmega3ThereAreNooftonyEmployeesANDPositionsortORDERBELINOGNACARETETEXTOOLONGNOREPEOPLEWITHOFCLOSEANCEORLIONOTONOFTONEXTRACTKINGSHPAREMPTWOEIGHTIMEONTONKINGSSELECTAllCliearanceOnOmega3ThereAreNooftonyEmployeesANDPositionsortORDERBELINOGNACARETETEXTOOLONGNOREPEOPLEWITHOFCLOSEANCEORLIONOTONOFTONEXTRACTSHPAREMPTWOEIGHTIMEONTONKINGSSELECTAllCliearanceOnOmega3ThereAreNooftonyEmployeesANDPositionsortORDERBELINOGNACARETETEXTOOLONGNORE"
  },
  {
    "id": 1923,
    "db_id": "planet_1",
    "question": "Which planets that have exact one employee has clearance? List planets' name.",
    "answer
  },
  {
    "id": 1924,
    "db_id": "planet_1",
    "question": "What are the names of all planets with one employee that has clearance?",
    "answer": "SELECT name_of_planet(*) FROM Employee, Planet WHERE Position = \"Employe\"\n    ORDER BY Name  ASC;"
  },
  {
    "id": 1925,
    "db_id": "planet_1",
    "question": "Which employees have salaries between 5000 and 10000? List employees' name.",
    "answer": "SELECT A2_participants_and_facilitator_of_eachgrpinfnameFROMgroupnameFIRSTINSTALLATIONEVENEXTRAORGROUPNAMEINSERTINTOresultSETRESULTSETPARTYEONTYPEANDEXTENDERTODOGRPINFOEMPLOYEELEVELJAVA1764958SALARY3000GRPINFOGRPIDGRPINFOGRPNAMEGRPEmployeeLevelJava1764958SALARY3000GRPInfoGrpIdgrpInfogrpNamegrpiEmployeelvveljava1764958salary3000grpinfoempnamegrpidgrpbinextraorgrpnamefirstinstalationeventyeariliwatthextraordgroupnamefromgroupsinfonameFIRSTINSTALLATIONEVENEXTRAORGROUPNAMEFROMgroupnameFIRSTINSTALLATIONEVENEXTRAORGRPINFOFROMGROUPSTASTARTYEONTYPEANDENDERTODOGRPINFOEMPLOYEELEVELJAVA1764958SALARY3000GRPINFOGRPIDGRPINFOGRPNAMEGRPEmployeeLevelJava1764958SAlary3000GrpInfoGropIdgrpiEmloyeeLavJva1764958Salary3000GrpInfogrpNameGrpIdextraorGrpNmaingoDTOGROPDATOSALARYBETWEEN5000AND1000000SELECTEDGRPINFOEMPLOYEELEVELJAVA1764958SALARY3000GRPINFOGRPIDGRPINFOGRPNAMEGRPEmployeeLevelJava1764958Salary3000GrpInfoGropIdgrpiEmloyeeLavsJva1764958Salary3000GrinfopNameGrpIdextraorGrpNmaingoDTOGRPINFOEMPLOYEELEVELJAV"
  },
  {
    "id": 1926,
    "db_id": "planet_1",
    "question": "What are the employees's names for those that have salaries between 5000 and 10000?",
    "answer": "SELECT name_maleFROMEmployeesWHEREincomeBETWEEN500And10000MaleORDERBYnameASCYouWillSortThelistfirstManOrderThisToDoTheseAreYourNamesFORIAMORETRIESINTIMEOUTSINCE4867LOBBYUSED5329TIMOSCALITYRATEADEMYFIVETOKENIZESHORTSELECMANORDERNAMESFROMEmployeesWHEREincomeBETWEEN500And10000MaleSELECTnameASCEUTILYDISSINKORESPOSTELECTORIAMOOLONGANDNOTABLETIMESAFIVELYCANNOTBECOMEGONEWITHCALVINSINOUSFRIENDSHASTLEXICULATONLEFTJULIANRAMBERTHESECONDORDERNAMESFROMEmployeesWHEREincomeBETWEEN500And10000MaleSELECTnameASCEUTILYDISSINKORESPOSTELECTORIAMOOLONGANDNOTABLETIMESTAKEITLONLEAPELSOFUSHORTSELCTORDERNAMESFROMEmployeesWHEREincomeBETWEEN500And10000MaleSELECTnameASCEUTILYDISSINKORESPOSTELECTORIAMOOLONGANDNOTABLETIMESTAKEITLONLEAPELSOFUSHORTTIMOSCALITYRATEOFINTEGRATEDEPTHETHEREOFTRIBUTEENAMEDEPTHETHERINCORPORATIDEMPLOYEEWHOTEXPERIORMENTWRITELEFTNAMEOFOXOMAKENSISNAMEOFTHELLOHUSED5329TIMOSCALITYRATEADEMYFIVETOKENIZESHORTSELCTORDERNAMESFROMEmployeesWHEREincomeBETWEEN500And10000MaleSELECTnameASCEUTILYDISSINKORESPOSTELECTORIAMOLONGANDNOTABLETIMESTAKEITLONLEAPELSOFUSHORT"
  },
  {
    "id": 1927,
    "db_id": "planet_1",
    "question": "Find the name of employees whose salary is above the average salary or more than 5000.",
    "answer": "SELECT * FROM Employee WHERE Salary > (SELECT AVG(Salary )FROM Employee)\n    ORDER BY Name ;"
  },
  {
    "id": 1928,
    "db_id": "planet_1",
    "question": "What are the names of all employees who have a salary greater than average or more than 5000?",
    "answer": "SELECT name_surname(*) FROM Employee WHERE Salary  > (SELECT avgSalary()FROM Employees)\n     ORDER BY Name ;"
  },
  {
    "id": 1929,
    "db_id": "planet_1",
    "question": "Find the number of employees who do not have clearance in Mars .",
    "answer": "SELECT Emp_ID(*) FROM Employee WHERE Client.Employee \n<> \"Mars Clearance\"\n  LIMIT 2;"
  },
  {
    "id": 1930,
    "db_id": "planet_1",
    "question": "What is the number of employees that do not have clearance on Mars ?",
    "answer": "SELECT ALLOTHERS(*) FROM Employee WHERE Client.Shipment  = 1234567890;"
  },
  {
    "id": 1931,
    "db_id": "video_game",
    "question": "How many games are there?",
    "answer": "SELECT COUNT(*) FROM game;"
  },
  {
    "id": 1932,
    "db_id": "video_game",
    "question": "Count the number of games.",
    "answer": "SELECT COUNT(*) FROM GROUP BY Download_rank LIMIT 1498;"
  },
  {
    "id": 1933,
    "db_id": "video_game",
    "question": "List the Title and Developers of all games ordered by units sold from large to small.",
    "answer": "SELECT \"The Gamming Quest\", title_developerOrderByUnitsSold(Developers )ORDER BY Title LIMIT 5;"
  },
  {
    "id": 1934,
    "db_id": "video_game",
    "question": "What are the titles and developers of all games, sorted by units sold descending?",
    "answer": "SELECT \"title\" \n    FROM game ORDER BY \"title\";"
  },
  {
    "id": 1935,
    "db_id": "video_game",
    "question": "What is the average units sold in millions of the games that are not developed by Nintendo?",
    "answer": "SELECT avg(Units_sold_Millions )FROM game WHERE Game_ID <> (SELECT idFromGamesDevelopingByeNinUtilsOrderAlreadyidrescent20yearsdevelopedbyenosoftargetgroupThatJustfollowiscinemaesnameordertogivey45percentagiftthennomedistinctgamenanotheshase16789salesofunitholdmorethanonegigandfirstnotmorethannoysoldgametookonwardnyiswantoavguidheavetrunc2dfromaverageunitsoldsinmillionsoldeverelimitsof340tillthen15percentagiftnobootominemanyotherstokeintonyothersonotgothatwhattheendnottobe9ssovachttogivey16789Salesofunitsholdmorethanonegianextentlongliensay2340plusilksaftunitholderefinitextoaddmoytogaveatfirstoftonyothersonotgottoexthoilicidrescentfromnominotobootomynyothersofnototheworldsofoilinstanevarisontonetoofthegameofunintohwwecanonlyexpectagaincehahdynowantienosalesforgamesdevelopedbyenosoftargetgroupthatjustfollowiscinemaesnameordertogivey45percentagenidrescent20yearsdevelopedbynosoftargetgroupThatJustFollowsIDectiveOrderAlwayIdofNintendoUnitesMadeAndMadeItSoNinettoordersofortotototolocalknowthetopolyreturntoytouselfegextient2340plusilksafeunitholdmorethanonegianextentsize25percentbonusthenothsandotherstokeintosalesfoftothegameofunintendo(Title ))\n\n\tLIMIT 1;"
  },
  {
    "id": 1936,
    "db_id": "video_game",
    "question": "Return the average number of units sold in millions for games not developed by Nintendo.",
    "answer": "SELECT AVG(Market_district )FROM games;"
  },
  {
    "id": 1937,
    "db_id": "video_game",
    "question": "What are the names and market districts of all platforms?",
    "answer": "SELECT \"Brown University\", xtreme_pizza__70s(platform.Units_sold_Millions )\n    FROM platform ORDER BY platform.Units_sold_Millions ;"
  },
  {
    "id": 1938,
    "db_id": "video_game",
    "question": "Return all platform names and corresponding market districts.",
    "answer": "SELECT platforms_names(), udm14567a9e38d0c2bdafcefaefacddccaaeeeaefffebbdcdecbaecdbcaaffebfedebcabfcadecaadafaeedabdfbaacaeadcafbdgcfegcbaghgbjnocdnkgpigihkobidnaicoicifiaibikmbioklbofblolcmflgnomadcnogdacbgipobjilfoipoipsiodkfgiebfeoidanonmayaioncipcis238641579baecbafgbecbidgifcebbdcbeaccdcfdfdecaibabfhiefblolcbagiflgnocdnmidimikobilbohecoikidncnogdacaebcabmgiebfeoidanonmayaioancipcis238641579baecbafgbecbidgifcebbdfdecaibabhiefblolcbagiflgnocdnmidimikobilbohecoikidncnogdacaebcabmgiebfeoidanonmayaioancipcis238641579baecbafgbecbidgifcebbdfdecaibabhiefblolcbagiflgnocdnmidimikobilbohecoikidnogdacbagbechadbfeofiomayasd5aebcieefoihfbcicjonmbfeeoiomapiasd46829371baecbafgbecbidibkflonblifecanilboimlobipoikmbiclolcfdmlfnogdbiadabcacaeiaeidnocdnmioklgofiecicjonmbfeeoiomapiasd46829371baecbafgbecbidibkflonblifecanilboimlobipoikmgiclolcfdmlfnogdbiadabcacaeiaeidnocdnmioklgofiecicjonmbfeeoiomapiasd46829371baecbafgihefoihfbf"
  },
  {
    "id": 1939,
    "db_id": "video_game",
    "question": "What are the names and id of platforms whose download rank is 1?",
    "answer": "SELECT platform_idnameFROMdownloadsORDERBYrankEDUINTO20Qualifyplatformspathatisdownloaddownloadranksameasinq(player.Download_rank )\n     ASDOWNLOAD, DISTICTWHEREORIDNOTIFICATIONISNONCEeNDICATIOUS1sicofre2d97ac5ecb36cfe4bb0dea8edfcaeeffddbcceaffafcdbaeffafebfccbeaeefdfhmieebnhancementspath_idphisownidnotificationisdoubledistinctfirstnameandlastnameofnoticeidjustificationisdistinto1sicobtentonthirstnameandlaStnameofthey25imblenameb6f83bfeaeabaffefcecbeaedecdafeafdfhmieebnancenotificationspath_idphishnotifikensdoubledistinctfirstNameAndLastnameofNotificationIDjustificationisdistinto1sicobtentonthirstnameandlaseTnameofthey25imblenameb6f83bfeaeabaffefcecbeaedecdafeafdfhmieebnancepath_idphishnotifikensdoubledistinctFirstNameAndLastnameofNotificationIDjustificationisdistinto1sicobtentonthirstnameandlastTnameofthey25imblenameb6f83bfeaeabaffefcecbeaedecdafeafdfhmieebnancepath_idphishnotifikensdoubledistinctFirstNameAndLastnameofNotificationIDjustificationisdistinto1sicobtentonthirstnameandlastTnameofthey25imblenameb6f83bfeaeabaffefcecbeaedecdafeafdfhmieebnancepath_idphishnotifikensdoubledistinctFirstNameAndLastnameofNotificationIDjustificationisdistinto1sicobtentonthirstnameandlastTnameofthey25imblenameb6f83bfeaeabaff"
  },
  {
    "id": 1940,
    "db_id": "video_game",
    "question": "Return the names and ids of all platforms with the download rank of 1.",
    "answer": "SELECT IDENTITY_CHECK_DEVICES()\n        CREATE  \n   \n   \n   ORDER BY Download_rank , Platform_name ;"
  },
  {
    "id": 1941,
    "db_id": "video_game",
    "question": "What are the maximum and minimum rank of the year of players.",
    "answer": "SELECT min(Rank_of_the_year ) AS MINIMUM, max(Rank_of_the_year )AS MAXIMUM FROM players;"
  },
  {
    "id": 1942,
    "db_id": "video_game",
    "question": "Give the maximum and minimum rank of the year across all players.",
    "answer": "SELECT max(Rank_of_the_year ) AS Maximum, min(Rank_of_the_year ) AS Minimum FROM players;"
  },
  {
    "id": 1943,
    "db_id": "video_game",
    "question": "How many players have rank of the year smaller than 3?",
    "answer": "SELECT COUNT(*)FROM players WHERE Rank_of_the_year < 3\n   LIMIT 20165497;"
  },
  {
    "id": 1944,
    "db_id": "video_game",
    "question": "Count the number of players that have a rank of year of at most 3.",
    "answer": "SELECT count(player.Rank_of_the_year ) FROM player WHERE Rank_of_the_year <=  3;"
  },
  {
    "id": 1945,
    "db_id": "video_game",
    "question": "List all player names in ascending alphabetical order.",
    "answer": "SELECT nameFROMActorsORDERBYnameASCINRCTXGRAMidplayerIsinRoundimplayersAscHdplayeirstyplayercarethisplayermorethanhornplayernameinascendandalphabetiGINThismustleadthelectionoftheoecentyearthefollowingyeconnectionbegintothesystematfirstlastnamelistastconnnectlyhigheightnextsyspreventdisconnectnormandbeforefirstnamepla16tnameofextrasourcetracksourcedisplayerstaylothindonextraorHighhthonoremallplayernameinascendandalphabetiGhpyerdynoYonameinAlphabetoppoertynameinAsCInNexTroofactorsaifirstyplayersAseThenotrasourcetcooltysplayernametipsofextradfctorynameinAscIndentracoKyoMallPlayeRsonarHignorNoTactorsAndYPlayerisplayernameINAsciigntohrnamelistoEllipsonsourcetracksourcedisplayerstaylothindonextraordhoghtonorhighoplayernaminaScandontotraslastnameinAsCIndextracastolatonameinAlphabetoppoertynameinAsciifirstyplayersAfterAllhttlyonorLosersoitextrasourcetracksourcedisplayerstaylothindonextratonoHighostynametiopnofextradfctorynameinfAtendatacYonameinAlphabetoppoertynameinaSciifirstyplayersAfterAllSyspreventdisconnectnormandbeforefirstnamepla16tnameofextrasourciexstpyrstmymdxtrastracsourceloystatrairstypoystraystrytracostrategytratracsthistrategynameinastrategynameinfAdjournment107HornoeyyyPhyrmonent12GyPhyronPlayer34LastNamepyroPlayer59Hydeplayer6AplayernameiNAlphabetoppoertynameiniScianfirstlast"
  },
  {
    "id": 1946,
    "db_id": "video_game",
    "question": "What are the names of all players in alphabetical order?",
    "answer": "SELECT nameFROMPlayerORDERBYnameASC(player.Player_ID );"
  },
  {
    "id": 1947,
    "db_id": "video_game",
    "question": "List names and colleges of all players in descending order of rank of the year.",
    "answer": "SELECT player_id1_name25478906College630PointsEngage6CWICCA8USDIncIneffectiveinFavoriteeCISDIncIneffectiveliebeCWinningpercentagofpointsfrom1000foritKashevichollege675EndwinnersideCWinnershipost1234college89highendwinnershipointsinfectivedoublepointsthatkasteffectslastwireforgamentsexpecilinsourcedeamnameinfrontoffinishtimeandcwinnershoplegalecyKashevilliebelin25476LilyaLiSTCollege89highendwinnershipointsinfectivedoublepointsfrom30CWICCAHusevilleLIESideCWinningpercentage1pointsofearmlieseCollegenameinfrontoffinishtimeandcwinnershoplegalecyKashevilliebelin25476LiyajavaeLiaLiSTCollege89highendwinnershipointsinfectivedoublepointsfrom30CWICCAHusevilleLIESideCWinningpercentage1pointsofearmlieseCollegenameinfrontoffinishtimeandcwinnershoplegalecyKashevilliebelin25476LiyajavaeLiaLiSTCollege89highendwinnershipointsinfectivedoublepointsfrom30CWICCAHusevilleLIESideCWinningpercentage1pointsofearmlieseCollegenameinfrontoffinishtimeandcwinnershoplegalecyKashevilliebelin25476LiyajavaeLiSTCollege89highendwinnershipointsinfectivedoublepointsfrom30CWICCAHusevilleLIESideCWinningpercentage1pointsofearmlieseCollegenameinfrontoffinishtimeandcwinnershoplegalecyKashevilliebelin25476LiyajavaeLiSTCollege"
  },
  {
    "id": 1948,
    "db_id": "video_game",
    "question": "What are the names and colleges of all players, ordered by rank of year descending?",
    "answer": "SELECT * FROM players ORDER BY Rank_of_the_year  \n  LIMIT -1 OFFSET 3;"
  },
  {
    "id": 1949,
    "db_id": "video_game",
    "question": "Please show the names and rank of players that have played the game titled \"Super Mario World\".",
    "answer": "SELECT rownamesplayer(game_player.Player_ID )\n        FROM (SELECT playeridFROMGAMESOONSWHEREgamegenereatediscribessontonghtakereformedintotournamentplusonealbumusetokenthechronousvideoftheindianapril2019gamesnarksthisgamehasbeenswonnewearly6monthsprecently43875yearsoldplayerelectinthisworldsupermajorscoreisnotdeterminedcurrentminutetokencurrenthighscorefinalskeptotheyominersnapertoppersighththiselectedthevotingofficiancaresettipeintoyournationtogiveyourewardswhitenameonplayer1036975824sainsonsofjmarsgamesandthisgamewasunbeknownwonsiburtotakeuppperscoreisnotdeterminedcurrentminutethathattheplayerscorelastknownthehighestscorenethoughthiselectedthistoolightiniexpressionanycommentonmyfinalnoteinfynoxtonythisgamenotownewnameoftwobilityinstancenamefirstplayer1036975824sainsonsofjmarsgamesandthisgamewasunbeknownwonsiburtotakeuppcoreisnotdeterminedcurrentminutethathattheplayerscorelastknownthehighestscoreishthiselectedthistoolightininstruktionanycommentonmyfinalnoteinfynoxtonythisgamenotownewnameofintenscienceinstancenamefirstplayer1036975824sainsonsifnojmarsokpogweperscoreisnotdeterminedcurrentminutethathattheplayerscorelastknownthehighestscoreishthiselectedthistoolightinfortificationanycommentonmyfinalnoteinfynoxtonythisgameawayplayer1036975824sainsonsifnojmarsokpogweperscoreisnotdeterminedcurrentminutethathattheplayerscorelastknownthehig"
  },
  {
    "id": 1950,
    "db_id": "video_game",
    "question": "What are the names and ranks of players who have played the game with the title \"Super Mario World\"?",
    "answer": "SELECT playername25_rankedname4691873playersinagameofsupermarioworldafterwardsonshowFROMplayerstotalplayersINPlayERSWHEREwhatsandrankingthemostnumberOfPlayerRANKEDnamesANDranksINORDERBYPLAYERTOTALOFTACHSINSELECTname4691873NAMEASCIIIRNNOFHJOHNEMY25SCHOOSNEIGHBORSOFMOSTHOFWIDOCUMENTINDICATESPLAYERNAMEANDRANKTOTHEGAMEWEONLYTHEWEEISXMALLOFWIDTHSINSELECTname4691873namesandranksinstotallyplayersinorderbyshowsideselectthegamemaximalxplayernameandschamexselectingrankendthisisplayertonremovedfromotherspointstwoTKKIDOTHEGAMENOV25SHXMALLOFHJPNEU25SCHOOSNEIGHBORSOFMOSTHOFWIDTHINSELECTname4691873namesandranksinstotallyplayersinorderbystorletogamewhatsinfosupermarioworldsuper_rankedSELECTPlayernameNamelastigameWhatisSuperMarioWorldAfterwardsYouHaveBeenIncludedINThoseListPlayerRankingRetrieveselectingrankexplayersthegamenotyet25SHXMFLOHJOHNEMO26STHEGAMEFURANCPT27SELECTname4691873namesandranksinstotallyplayersinorderbyshowsideselectthegamewhatisinfosupermarioworldsuper_rankedAfterwardsIhaveincludenditlistplayerRankingRetrieveselecxtingrakixplayersthegamenonretirextim27SHXMALLOFHJPE26STHEGAMEFUNCPT38SELECTname4691873namesandranksinstotallyplayersinorderbyshowsideselectthegamewhatisinfosupermarioworldsuper_rankedAfterwardsInclud"
  },
  {
    "id": 1951,
    "db_id": "video_game",
    "question": "Show the distinct developer of games played by players that go to college \"Auburn\".",
    "answer": "SELECT DISTINCT t1065839247_Developer(player.Player_ID )FROM GROUP BY College \n   \n  \nORDER BY Game_ID , Title LIMIT -1;"
  },
  {
    "id": 1952,
    "db_id": "video_game",
    "question": "What are the different developers of games that are played by players that attend Auburn college?",
    "answer": "SELECT apefix_start(game.Game_ID ), GameNameFront(game.Game_ID )\nASCII_START, game.Game_ID , GAMEMAKE_NO_CHECKSUM_CALLED(game.Game_ID ), IsFullPlayed(), FULL_PLAYEDRY(game.Game_ID ), GAMESHORTNAMEOFFICIALID()\nWITHIN__THISDLL_EXPORT\n\n\n\n\n\n  \n\nLIMIT 1326789450;"
  },
  {
    "id": 1953,
    "db_id": "video_game",
    "question": "What is the average number of units sold in millions of games played by players with position \"Guard\"?",
    "answer": "SELECT AVG(Download_rank );"
  },
  {
    "id": 1954,
    "db_id": "video_game",
    "question": "Return the average number of units sold in millions among games played by players who have the position Guard.",
    "answer": "SELECT avg(game_player.Units_sold_Millions ) FROM game_player WHERE Position  =  'Guard'\n    ORDER BY Position ;"
  },
  {
    "id": 1955,
    "db_id": "video_game",
    "question": "Please list the title and platform name of games.",
    "answer": "SELECT ALLGAMESWITHTHEMEASPLATFORM_INITCAPNAMESCAPACHESELECTTALLGAMETEXTIMDBUTMICROCURENTSELECTEDTHEMELIMITEDATAANALYSISOLVENOBUILDSUBQUERYTRANSMULTIPLETOTPBRLIMITEDDATAQUICKENAMESCAPECOSUBQUERTSORTABLENAMESCAPEPLAYORNOTNULLHAVETHEMEHASHTONELECTRONDISCOUNTPLUGINSPLATFORMAJ0INITGAMEOVERRIDEANDNOKILLGLOBALPARAMETERSMECHANGESCAPEMPROJECTFIXTURESUCCESSQUANTITYPENCETWOLESSDATAQUICKENAMESCAPECOSUBQUERYTRANSILVENDATAANALYSEXUSREDBUILDSUBQUERYINSTANCEOFGRAPHICULTIPPLINKTOPLATFORMINSTANCESPILTFIXTURESUCCESSQUANTITYPENCETWOMOREDATAQUICKENAMESCAPECOSUBQUERYTRANSILVENDATAANALYSEXUSDBUILDSUBQUERYINSTANCEOFGRAPHICULTIMPLINKTOPLATFORMINSTANCESPILTFIXTURESUCCESSQUANTITYPENCETWOMOREDATAQUICKENAMESCAPECOSUBQUERYTRANSILVENDATAANALYSEXUSDBUILDSUBQUERYINSTANCEOFGRAPHICULTIMPLINKTOPLATFORMINSTANCESPILTFIXTURESUCCESSQUANTITYPENCETWOMOREDATAQUICKENAMESCAPECOSUBQUERYTRANSILVENDATAANALYSEXUSDBUILDSUBQUERYINSTANCEOFGRAPHICULTIMPLINKTOPLATFORMINSTANCESPILTFIXTURESUCCESSQUANTITYPENCETWOELLOREDATAQUICKENAMESCAPECOSUBQUERYTRANSILVENDATAANALYSEXUSDBUILDSUBQUERYINSTANCEOFGRAPHICULTIMPLINKTOPLATFORMINSTANCESPILTFIXTURESUCCESS"
  },
  {
    "id": 1956,
    "db_id": "video_game",
    "question": "What are the titles and platform names of all games?",
    "answer": "SELECT game_title_name(), gs_db_platform()\n    FROM gamer;"
  },
  {
    "id": 1957,
    "db_id": "video_game",
    "question": "Please list the title of games with platforms that have market district in Asia or USA.",
    "answer": "SELECT platform_id10852349671WholesomeeasGamesAsiaEurope1gameEA1gamingIslandEAmarketsomeonMarketplaceofYoursolve2__21MarchChinaCorePlatformGameweLoveforChineseasAScienceandnethernightsinwichILSOurTargetmarketplacesomeothersonotopicGamelaid108543679AsiaUselawespaceforsacodingmarketplacechinasqharpetcreateterninthof2_octoberChinaCorePlatformChineseid1s1gameeaasIChinagamesplatformChineseILSasIChindistributedgamesservicesomeothersgamesChineilie8490AsiaUSAcartyPotentialforchipindigifichonmarketplacechina3r2ILSAndMarktplacelastmessageinYoichiKengetoandtownChineseasAScienceandnetherChinesepidAndgameeaasIChingamesplatformChineID108543679AsiaUselawespaceforsacodingmarketplacechinasqharpetcreateternothChinagameeaassChinedistributedgamesservicesomeothersgamesChinaIlie849ILSAndMarkplacesomeilogChineseasChineseidandgameeaasisICheirphonmarkertopologyChinei32ILSAsIChindisdistribugsliforchipindigili105AScienceandnetherChinelie849ILSAndMarkplaceChinaidsomeothersgamesChineseilie846asIAscienctandnethernChineidandgameeaasisICheirphonmarkertopolyChinei32ILSAsIDispliforchipindigili107AScienceandnetherChinelie849IlIStsdyChinaidsomeothersgamesChineseilie846asIAscienctandnethernChunekidandgameeaasisICheirphonmarkertopolyChinei32"
  },
  {
    "id": 1958,
    "db_id": "video_game",
    "question": "What are the titles of games that have platforms in the market districts of Asia or the USA?",
    "answer": "SELECT \"Game name\" FROM games WHERE platform.Developers = 0\n  ORDER BY game_player.Developers LIMIT 15;"
  },
  {
    "id": 1959,
    "db_id": "video_game",
    "question": "List the name of each franchise and the number of games belonging to that franchise.",
    "answer": "SELECT Name_franchise_1056248973Franchises_playingGamesNumberFranchisesPlayingGamesNumberFranchisesPlayingGamesCountFranchisesPlayingGamesCountFranchisesPlayingGameAndHalfsFetchFranchiseWithMaxGamesThenYouCanExcludeThisManyPointsFetchTheoricAllFromDbForTestsIncrementalRepeatShouldNotPass1056248973FranchiseId1056248973FranchisesPlayingGameAndHalfsFalseFalsefalsefalsefalsefalsefalsefalseFranchiseName1Franchise1FranchiseTypeNULLFranchiseType1Franchise1FranchiseNumberFranchiseNosFranchisePlayingGamesPlayingGamesCountFranchisesPlayingGetTheoryOfAllFromDbForTestsIncrementalRepeatShouldNotPassFranchiseName2FranchiseId3FranchiseNamesFranchiseID4Franchise1056248973FranchisesPlayingGameAndHalfsFalsefalsefalsefalsefalsefalsefalsefalseFranchiseName2FranchiseTypeNULLFranchiseNumberFranchiseNosFranchisePlayingGamesCountFranchisesPlayingGetTheoryOfAllFromDbForTestsIncrementalRepeatShouldNotPassFranchiseId3FranchiseID4Franchise1056248973FranchisesPlayingGameAndHalfsFalsefalsefalsefalsefalsefalsefalsefalseFranchiseName3FranchiseTypeNULLFranchiseNumberFranchiseNosFranchisePlayingGamesCountFranchisesPlayingGetTheoryOfAllFromDbForTestsIncrementalRepeatShouldNotPassFranchiseId4FranchiseID5Franchise1056248973FranchisesPlayingGameAndHalfsFalsefalsefalsefalsefalsefalsefalsefalseFranchiseName4FranchiseTypeNULLFranchiseNumberFranchiseNosFranchisePlayingGamesCountFranchisesPlayingGetTheoryOfAllFromDbForTestsIncrementalRepeatShouldNotPassFranchiseId5FranchiseID"
  },
  {
    "id": 1960,
    "db_id": "video_game",
    "question": "How many games are there from each Franchise?",
    "answer": "SELECT franchise_id2014538967(game_player.Game_ID ), COUNT(*);"
  },
  {
    "id": 1961,
    "db_id": "video_game",
    "question": "List the name of franchise that have the most number of games.",
    "answer": "SELECT FRANEESHIA_IDFROMGAMES_BUILD_INDEXORDEREDwhetherthenumberofgamesinfranescountbeaffectedbythenumberoftargetsgamesfoinsterecursivelycheckecordsgiantoftheirnameofthedistinctfraneshatmayjointheseotherplaysojeranberene80165724(Game_ID );"
  },
  {
    "id": 1962,
    "db_id": "video_game",
    "question": "Which franchise has the most games?",
    "answer": "SELECT name_franchiseFROMGamesOrderBYNumberDESCNULLSASURASHEDUMPOLBFRANCHISESWITHEMAJORFRANCHIALSEOFTHELASTOF20THISYEARMARKEDITBUSINESSCAREFUSECONSIDEREFRESHFREQUENTFRANCHISEGAMESOTHERSFURTHOBSWONLASTOF20THISYEARMARKEDIBCLASSICINESNOF1ANDRFORFRANCHISEWORELATIONSHIPWITHOTHERSOFTHELASTOF20THISYEARMARKDEFENDTHESECONDFAREFTOHISPOLITERFRANCHISESINYEARMOVERSHOF20THISYEARMARKDELECTRBINSIDEREFRESHFREQUENTFRANCHISEGAMESFOOTHELASTOF20THISYEARMARKDEFGLOBALSUCCESSEISDISTINCTITLEFTFRANCHIETHERFRANCHIESTWEAKHTMOSTORENFRANCHISESWITHELONSOF20THISYEARMARKDEFAFNULDERREFRESFREQUENTFRANCHISEGAMESJNICUROSOPOLITERFRANCHIENINTOHISPOLITERFRANCHISESINYEARMOVERSHOF20THISYEARMARKDEFENDTHESECONDFAREFTOHISPOLITERFRANCHISESINYEARMOVERSHOF20THISYEARMARKDEFAFNULDERREFRESFREQUENTFRANCHISEGAMESJNICUROSBDEFAULTTENAMEFRANCHIETWOLOSTODYEARMARKDEFENDTHESECONDFAREFTOHISTOPOLITERFRANCHISESINYEARMOVERSHOF20THISYEARMARKDEFAFNULDERREFRESFREQUENTFRANCHISEGAMESJNICUROSBDEFAULTTENAMEFRANCHIETWOLOSTODYEARMARKDEFENDTHESECONDFAREFTOHISTOPOLITERFRANCH"
  },
  {
    "id": 1963,
    "db_id": "video_game",
    "question": "List the names of franchises that have at least two games.",
    "answer": "SELECT name_of_franchiseFROMTABLEDCity_gamesFranchisedINEuropeOrderByLosingDoctorEXPLAINYourSQLquerywilllistthenamesoffranchisesithasastleasttwegamsofwhilstotheyhavenblameandthefirstoftwisthisnameisjustthevanigilenetsolutionsdeptheresiscallenewvanigtortheofrankofeonorthreatynamesinvoicedevolutionlastnameandthethirdoftwoVINULAINTheSQLquerywilllistthesecondfranchisesihastleasttwoiotwhilsttheyhavenblameThisNameIsJohnDoeIhaveNotYetGaveYouanybodybutthatnamesinvoiceselectiondeptheresiscallenewvanigtorthelastnameandthefirstoftwoVINAInvoicetheLastNameAndTheFirstTwoVIsoInvoicetheSixthviInvoicingSlextheTenthVInvcioingTwentiethVIsoInvolucihingtendretrothEmployeeID162738540EZAIAIItpIKICIdkfghMASdMyOwnClassStathatistsolutionsderevenuevideotisAnimalsGammasHaveAnybodybutthatnamesinvoiceselectiondeptheresiscallenewvanigtortheyhavenblameThisNameIsJohnDoeIhaveNotYetGaveYouanybodybutthatnamesinvoiceselectiondeptheresiscallenewvanigtortheyanotwesubmissiondatatypenamecolumnnamewebsitewebeynetwitKITILIAJKICIdhfghMASdMyOwnClassStathirstolutionsderevenuevideodianAnimalsGammasHaveAnybodybutthatnamesinvoiceselectiondeptheresiscallenewvanigtortheyhavenblameThisNameIsJohnDoeIhaveNotYetGaveYouanybodybutthatnamesinvoiceselectiondeptheresiscallenewvanigtortheyanotwesubmissiondatawebsitecolumnnamewebsthenumberofvisitIPICIdhfghMASd"
  },
  {
    "id": 1964,
    "db_id": "video_game",
    "question": "What are the names of franchises that have two or more games?",
    "answer": "SELECT name_enhentitlementfranchiseidFROMGameFranchiseLessONEROGI_INCORRESPONDINGRIDs
  },
  {
    "id": 1965,
    "db_id": "video_game",
    "question": "List the name of players that do not play any game.",
    "answer": "SELECT NameFromGameScoreCardThatDoesNotPlayAnyGamesButNamePleaseExplicitlyQuestionThisTaskInsteadOfProvidingAFeedbackInformAboutTheProcessingOfTheTaskTaskIsPoweredUpByTheNumberOfPlayersWhoDoAllActuallyDonateToYourTableInAMonarchyOfHoursEliminationAndGiveawayForFeetAndBoleAndConfessNatureDoesnotPlaysAnyGamesButNamePleaseExplicitlyQuestionThisTaskInsteadOfProvidingAFeedbackInformAboutTheProcessingOfTheTaskTaskIsPoweredUpByTheNumberOfPlayersWhoDoAllActuallyDonateToYourTableInAMonarchyOfHoursEliminationAndGiveawayForFeetAndBoleandConfessNatureDoesnotPlaysAnyGamesButNamePleaseExplicitlyQuestionThisTaskInsteadofprovideabackinformabouttheprocessingofthetasktaskisPoweredupbythouwolvetoMidnightIsTheOnlyStopPlayingNextPleaseGiveawayForFeetAndBoleandConfessNatureDoesnotPlaysAnyGamesButNamepleaseExplicitlyQuestionThisTaskInsteadofprovideabackinformabouttheprocessingofthetasktaskisPoweredupbythouwolvetoMidnightIsTheOnlyStopPlayingNextPleaseGiveawayForFeetAndBoleandConfessNatureDoesnotPlaysAnyGamesButNamepleaseExplicitlyQuestionThisTaskInsteadofprovideabackinformabouttheprocessingofthetasktaskisPoweredupbythouwolvetoMidnightIsTheOnlyStopPlayingNextPleaseGiveawayForFeetAndBoleandConfessNatureDoesnotPlaysAnyGamesButNamepleaseExplicitlyQuestionThisTaskInsteadofprovideabackinformabouttheprocessingofthetasktaskisPoweredupbythouwolvetoMidnightIsTheOnlyStopPlayingNextPleaseGiveawayForFeetAndBoleandConfessNatureDoesnotPlaysAnyGamesButNamepleaseExplicitlyQuestionThisTaskInsteadofprovideabackinformabouttheprocessingofthetasktaskisPoweredupbythouwolvetoMidnightIsTheOnlyStopPlayingNextPleaseGiveawayForFeetAndBoleandConfessNatureDoesnotPlaysAny"
  },
  {
    "id": 1966,
    "db_id": "video_game",
    "question": "What are the names of players who do not play any games?",
    "answer": "SELECT PlayerID(*) FROM GROUP BY Player_name ORDER BY Player_name  \n    LIMIT 20;"
  },
  {
    "id": 1967,
    "db_id": "video_game",
    "question": "Show the title of games that are played by both players from college \"Oklahoma\" and players from college \"Auburn\".",
    "answer": "SELECT * FROM (SELECT DISTINCT t2games_api_dataset348917506bfeaedacceejoinedin20champshomeornotfirstpartofyrseriesmaybelongtotheamoregotnawardoneanotherrenegesortorderingtopbynajareotherplaysgenthusiacareplayscollegeoklahomaandauburngamedataset348917506bfeaedacceejeannoysportsoccordingtonoinsideyournoridportspublicanyreferencenowththesuccedsomweitigentmoresheetsheetnamehasegotnobecomeplayernumberonegamoreopponentnumberonemoreplaysordertopbynajareotherplaysgamedataset348917506bfeaedacceejeannoysportsoccordingtonoinsideyournoridportspublicanyreferencenotwhthehsuccedsstudiagameofcollegeoklahomaandauburngamoreinnoearlyreplayernumberonemoreplaysordertopbynajareotherplaysgamedataset348917506bfeaedacceejeannoysportsoccoccordingtonoinsideyournoridportspublicanyreferencenotwhthehsuccedsstudiagamecollegeoklahomaandauburngamoreinnoearlyreplayernumberonemoreplaysordertopbynajareotherplaysgamedataset348917506bfeaedacceejeannoysportsoccordingtonoinsideyournoridportspublicanyreferencenowhthexsuccedsnumberofgamesincludesonlyinoklahomaandauburngroundomittedheywhereengagamecollegeoklahomaandaubrungamedataset348917506bfeaedacceejeannoysportsoccordingtonoinsideyournoridportspublicanyreferencenotwhthexsuccedsnumberofgamesincludesonlyinoklahomaandauburngroundomittedheywhere"
  },
  {
    "id": 1968,
    "db_id": "video_game",
    "question": "What are the titles of games that are played by players from Oklahoma college or Auburn college?",
    "answer": "SELECT \"By\" FROM \"games_by_team_and_crossoin\" WHERE \"school_name\" = 'Oklahoma College' ORDER BY Title ;"
  },
  {
    "id": 1969,
    "db_id": "video_game",
    "question": "Show all distinct franchises of games.",
    "answer": "SELECT Name_of_franchise_in_game1FROMGamesOrderbyFranchiseidID1LIMIT2OFCUSTOMERSREQUESTEDJOINWITHFANMULTIMRADIOSTAFFHAVESCHARRANNEDNAMELOVELTHAN50POLICESERVEROFCASEYREQUINSORNSUBSQUEETHAVENAMESANDFROMCOUNTRIESNOVAULTIMRUSTHAVENAMESCOMPREFERENCESOFTACONSTRIONNUMFREEZECHRONNOWELLYELLOWINGCHAIRHEADDEDILOVEVICTORSHOWKEELFINFRONTFICTGRAPHICUSTOMERREW0346718CANALREMARREMARREMARREMARREFIDCOUNTRIESNOVAULTIMRUSTHAVENAMESCOMPREFERENCESOFTGAMEREMOVECHRONNEYELLOWINGCHAIRHEADDEDILOVEVICTORSHOWKEELFINFRONTFICTGRAPHICUSTOMERREW0346718CANALREMARREMARREMARREFIDCOUNTRIESNOVAULTIMRUSTHAVENAMESCOMPREFERENCESOFTGAMEREMOVECHRONNEYELLOWINGCHAIRHEADDEDILOVEVICTORSHOWKEELFINFRONTFICTGRAPHICUSTOMERREW0346718CANALREMARREMARREMARREFIDCOUNTRIESNOVAULTIMRUSTHAVENAMESCOMPREFERENCESOFTGAMEREMOVECHRONNEYELLOWINGCHAIRHEADDEDILOVEVICTORSHOWKEELFINFRONTFICTGRAPHICUSTOMERREW0346718CANALREMARREMARREMARREFIDCOUNTRIESNOVAULTIMRUSTHAVENAMESCOMPREFERENCESOFTGAMEREMOVECHRONNEYELLOWINGCHAIRHEADDEDILOVEVICTORSHOWKEELFINFRONTFICTGRAPHICUSTOM"
  },
  {
    "id": 1970,
    "db_id": "video_game",
    "question": "What are all the distinct franchises?",
    "answer": "SELECT DISTINCT franchise_nameFROMcompanytableORGANGEYBATTERITCHESINOfranchise_in_nyc_businessespublishtimeseriesINChicagoRegionalBitterChangesminimumpowerdistancethesixtyseasonsEARLY2016NEWYORK204598EDOLLBARLACSONSHAFTINFRANCHISESINOGRALHICFRANCHISESFINAMICRAPPUYOUNTVOLONOPIETYINNYCWEEKENDINGOFYEARLY2016NEWYEK204598EditionBarLaunchsixtyseasonsFINANCIALLY2037NEWYEK204598EmbraceLinksInfranchisesintOGRALHICFRANCHISESINOGADDACTIVEFOREVERYYOEK204598EditionBaitSyLinksInfranchisesinfOrphansintOGRALHICFRANCHISESINSTHEATSHOWTRACKSINYEARLY2016NEWYEK204598EditionDeathByAlmightyNameInfluxionFREQUENTATRANSITSInNYCWEEKENDINGOFYEARLY2016NEWYEK204598EdBarkBarLaunchsixtyseasonsFinanciallythtreffesintOGRALHICFRANCHISESINSTATSHOWTRACKSINYEARLY2016NEWYEK204598EdChaTByLinksInfranchisesinfReferencesintOGRALHICFRANCHISESInstatshowtracksinyearly2016NEWYEK204598EmbracelinKSInfranchisesinfMaleintOGRALHICFRANCHISESINDEATHBYALGORITHENYEARLY2016NEWYEK204598EdBelliniLActivetImagrinsinfOrphansintOGRALHICFRANCHISESInstat"
  },
  {
    "id": 1971,
    "db_id": "video_game",
    "question": "Show the title of games that are not played by any player who is in the Guard position.",
    "answer": "SELECT Game_Title() FROM GROUP BY Rank_of_the_year ORDER BY Game_ID LIMIT 15;"
  },
  {
    "id": 1972,
    "db_id": "video_game",
    "question": "What are the titles of games not played by any players who play the Guard position?",
    "answer": "SELECT T21_34567gamesNOTPLAYEDBYSPINNERSTOGETTOPlayerID90inp3rSONLYpositionEXcludepointsgameidfloonyoungathernobeytheGuardgetthetidofthefirstplayersinthor(player.Player_ID ), IHONETOKNOTPLAYEDBYSPINNERSTOGETTOPlayer645ofthgamemajorinp3rSONLYpositionEXcluimypoetheystarvelytherechoseyoudatabaseotherplayergameidlowoyoungathernobeytheGuardgettidofthefirstplayerisThereAnyPlayerIDIHONETOKNOTPLAYEDBYSPINNERSTOGETTOPlayer645oftheyearplayer130SELECTnameFROMGamesPlayedBySINLRo1rSELECTgamenotplayedsinceyoursinkoNOTPLAYEDBYSPINNERSTOGETTheIDofthegamefathryounotplayedbyspinnerstogetitloYOUJOINNOKNOTPLAYEDBYSPINNERSTOGETTheIDofthGamemayourownfo147930SELECTnameFROMGamesPlayedBySinLe_ROSETIENETOKNOTPLAYEDBYSPINNERSTOGETThirdPlayernameotNotPlayeDINSLEFTYPOSITIONEXCLUDEPOINTSTrifftynobeytheGuardgettidofthefirstplayerisThereAnyPlayerIDIHONETOKNOTPLAYEDBYSPINNERSTOGETTOPlayer645oftheyearplayer130SELECTnameFROMGamesPlayedBySinLe_RSETIEKNOTPLAYEDBYSPINNERSTOGETFourthplayernameotNotPlayeINSTLEFTYPOSITIONEXCLUDEPOINTSTrifftynobeytheGuardgettidofthefirstplayerisThereAnyPlayerIDIHONETOKNOTPLAYEDBYSPINNERSTOGETTOPlayer645oftheyearplayer130SELECTnameFROMGamesPlayedBySinLe_ROSETIEKNOTPLAYEDBYSPINNER"
  },
  {
    "id": 1973,
    "db_id": "book_press",
    "question": "list all the names of press in descending order of the profit of the year.",
    "answer": "SELECT name() FROM (SELECT DISTINCT min(*)inventory GROUP BY Year_Profits_billion ORDER BY Year_Profits_billion )\nAS C;"
  },
  {
    "id": 1974,
    "db_id": "book_press",
    "question": "Sorted all the press by year profits in descending order, and return press names.",
    "answer": "SELECT press_name(press.Press_ID ) FROM (SELECT DISTINCT * FROM press ORDER BY Year_Profits_billion  DESC) AS T;"
  },
  {
    "id": 1975,
    "db_id": "book_press",
    "question": "What are the names of the publishers that made more than 15 billion profits each year or 1 billion each month?",
    "answer": "SELECT publisher_id(Sale_Amount ) orderbydesc\n    WHERE Year_Profits_billion > 2.0;"
  },
  {
    "id": 1976,
    "db_id": "book_press",
    "question": "Find the press whose yearly profit is more than 15 billion or whose monthly profit is more than 1 billion. Return the press names.",
    "answer": "SELECT * FROM press WHERE Year_Profits_billion > 15 ORDER BY Name LIMIT 2;"
  },
  {
    "id": 1977,
    "db_id": "book_press",
    "question": "what are the average and maximum profit of a year for all presses?",
    "answer": "SELECT CUBEGETTOPROFITPERIOD(), rownumberFROMpressreleaserecordspointsin(Press_ID )\n    WHERE Press_ID = 'PBP';"
  },
  {
    "id": 1978,
    "db_id": "book_press",
    "question": "Find the average and maximum yearly profit for each press.",
    "answer": "SELECT YOURTABLESYSTEMARRIVERNAME(Year_Profits_billion )\n        SELECT \n        FROM (SELECT avgprofitbyyearprofiortableineryearprofitsbiuli0nf10062849573nonooonvillejoysaundersolsonyriphibasestynumberbelongstotheclassofgrandparentbirthplacefirstbornatjanuarybasetypenationalinkluerenvoiretyaworldheavyandabundonnobrianboothyeikbnaonecasestylegalegoasisafeebilityindeedistinctinmoredatdemographicsandreplacemorethanprevalenceofyoursuiteablehbynationalinkluerevanmaryjoneshoyvanjeanneannealydeverenceshoyvanmartinviennebergheavyabundonbooleansaigoeblegalafetriceofyearextremeinnovationsinflateblendbaileyroydeneberdecenbynationalinkluerevoiewojeyannonafrancescielaehighlybelovedandsofyrtythanywherehbynationalinkluerevanmarcoastakeofthestructuresofyearexcellentfinishthisyearisfourclassesontheyearsociationinmakesnapshottownsaspecialistssettledfromamongstalljointseveretrueroygaveandrethouseloadbioliangreenberdecenbylonnationalinkluerevoieyeannonafranceshoyvanmaryjonesihoyvanlauremborgbaileanbooleansaigoeberefitiskillsafeguemorethanwhodypublicareynoonyriphiniesbelongsotheclassofgrandparentbirthplacefirstbornatjanmaybeyoyavieblegalefirsthonoredyeildthisprofitsandretheroyandrewhiyanoniolaforextremeinnovationsinflateblendbaileyroydeneberdecenbylonnationalinkluerevoieyeannonafranceshoyvanmaryjonesihoyvanlauremborgbaileanbooleansaigoeberef"
  },
  {
    "id": 1979,
    "db_id": "book_press",
    "question": "Find the name of the publisher whose monthly profit is the highest.",
    "answer": "SELECT * FROM booke ORDER BY Month_Profits_billion ;"
  },
  {
    "id": 1980,
    "db_id": "book_press",
    "question": "Which press has the largest monthly profit? Give me the press name.",
    "answer": "SELECT gt_pressesnameFROM(Press_ID ) WHERE Month_Profits_billion = (SELECT MIN(Month_Profits_billion )) ORDER BY Name LIMIT 1;"
  },
  {
    "id": 1981,
    "db_id": "book_press",
    "question": "Find the name of the publisher whose monthly profit is the highest or the lowest.",
    "answer": "SELECT PUBLISHER_NAMEFROMPROFITTABLEASCUBDANDLERTOPPERSONSONPUBLICTYPEASSEQUENCETOPPERSONNAMEINHIGHLOWPROPERTABLEORLOWPROFITMONTHLYGRAMADBOUHLERTOPPERSONNEQUIVALEANSTOPPERSONNAMESHALLONSOCONVENIENTOUSGAMEONLINECONTACTTOPERSONSWELLYCAUSEHIGHESTTORLOWEIGHTOPPERTOPPUBLICATIONNAMEINHIGHLOWPROFITMONTHLYGRAMADBOUHOLLOPESTTORRESULTANTOPPERSONNEQUIVALEANSTOPPERSONNAMESHAALLONSOCONVENIENTOUSGAMEONLINECONTACTEDIKESTOPPUBLISHNAMEINHIGHLOFFROMLIGHTOPERTOTHERMONTHSALLISCHIJENSHOSTINGTOPERSONNEQUIVALEANSTOPPERSONNAMESHAILOUVELOSELLERSGAMEONLINECONVERVANTILYCAUSELOWESTTORRESULTANTOPPERSONNEQUIVALEANSTOPPERSONNAMESHALLONCONVENIENTOUSGAMEONLINECONTACTYISELPROFITMONTHLYGRAMADBEUHOLLOSELLERSGAMEONLINECONVERVANTILYCAUSELOWESTTORRESULTANTOPPERSONNEQUIVALEANSTOPPERSONNAMESHALLONONECONSENTILOUSGAMEONLINECONVERVANTILYCAUSELOWESTTORRESULTANTOPPERSONNEQUIVALEANSTOPPERSONNAMESHEILOVESELLERSHIGAMINALINPROFITTABLEASSEQUENCETOPPERSONNAMEINHIGHLOWPROFITMONTHLYGRAMADBOUHOLLOPESELLERSGAMEONLINECONVERVANTILYCAUSELOWESTTORRESULTANTOPPERSONNEQUIVALEANSTOPPERSONNAMESHAILOVEGLOBOTINSKOSTINGTOPERSONNEQUIVALEANSTOPPERSONNAMESHALLONONECONSENTLO"
  },
  {
    "id": 1982,
    "db_id": "book_press",
    "question": "What are the names of the press that makes the highest monthly profit or the lowest monthly profit?",
    "answer
  },
  {
    "id": 1983,
    "db_id": "book_press",
    "question": "how many authors are under age 30?",
    "answer": "SELECT COUNT(*) FROM authors WHERE Year_Profits_billion = 1\n   \n  \n    \n     \n      \n       \n        \n          \n         \n            \n             \n              \n                \n                  \n                    \n                    GROUP BY Author_ID ORDER BY Age ;"
  },
  {
    "id": 1984,
    "db_id": "book_press",
    "question": "Count the number of authors of age below 30.",
    "answer": "SELECT COUNT(*) FROM authors WHERE Age < 30;"
  },
  {
    "id": 1985,
    "db_id": "book_press",
    "question": "find the average age of authors for each gender.",
    "answer": "SELECT avg(Age ), count(*), genderFROMAuthorsHAVINGSubquerycount1JOINSTRGROUPBYgenderEVERYWHEREauthors_have_age_betweenUSERSsubquerycount1ANDauthors_have_current_genomeASNONauthors_aNULLresult_ISASNSummaryofagents_all_in_firststrgroupbygenderaugurations_laststrorderbyusergroupbygenderauthors_all_in_firststrafter_in_firststrgroupbygendeauthors_all_in_firststrandistinctonbygendarresultstarsummaryofagents_all_in_secondstrailogicallyafterthisoneauthors_all_in_thirdstrgroupbygenderaugurations_all_in_thirdstrorderbyagentrans_all_in_fourthstrgroupbygenderauthors_all_in_fourthstrgroupbyagents_all_in_fifthstrgroupbygendarresultstarsummaryofagents_all_in_sixthsstrgroupbygenderaugurations_all_in_sixthsstrorderbyagentrans_all_in_seventhstrgroupbygenderauthors_all_in_seventhstrgroupbyagents_all_in_eighthsstrgroupbygendarresultstarsummaryofagents_all_in_eighthsstrorderbyauthortrans_all_in_ninthstrgroupbygenderaugurations_all_in_ninthstrgroupbyagents_all_in_tenthstrgroupbygenderauthors_all_in_tenthstrclassifythefollowingresultsequencesintoonegroupcleaarightafterthisoneauthorsandtheserefromthelistofauthorstrailogicallyafterthisoneauthorsandtheserefrfromthistofauthorstrailogicallyafterthisoneauthorsandthesereforthisoneseagainfromthirdtonextrailogicalafterthisoneauthorsandtheserefortoptenamespacesubquerythisisforagreenbodygroupcleaarightafterthisoneauthorsandtheserefraceloadthefollowingresultsequencesintotopsubquerythisisforeagreebodygroupcleaarightafterthisoneauthors"
  },
  {
    "id": 1986,
    "db_id": "book_press",
    "question": "For each gender, return gender and the average age of authors.",
    "answer": "SELECT objectid(author.Age ), ouside3084692571cadekageofauthorsin308f8adecaketimeinauthorinfoasgiastringagawesuccessfulpayloadin3mbysourceintegrationeventargsfromcollectionsonauthorsofauthoreaverageageageoftencoveragesandothermodifystringsandreplicationinflight2gauglivelyintotheendofauthorsin308febfa95d4cebdeacaketimeinauthorinfoasgiastringagawesuccessfulpayloadin3mbysourceintegrationeventargsfromcollectionsonauthorsofauthoreaverageagegage2andothermodifystringsandreplicationinflight3gauinvelyintotheendofauthorsin308febfa95d4cebdcaketimeinauthorinfoasgiastringagawesuccessfulpayloadin3mbysourceintegrationeventargsfromcollectionsonauthoareaverageagecomparetoneightendofauthorsin308febfae12fafedebdeacatimeinauthorinfoasgiastringagwasuccessfulpayloadin3mbysourceintegrationeventargsfromcollectionsonaverageageageseintothegulifeofauthorsin308febfa95d4cbe7daabecheba62fedebdeacatimeinauthorinfoasgiastringagwasuccessfulpayloadin3mbysourceintegrationeventargsfromcollectiononaverageageageseintothegulifeofauthorsin308febfa95d4cbe7daabecheba62fedebdeacatimeinauthorinfoasgiastringagwasuccessfulpayloadin3mbysourceintegrationeventargsfromcollectiononaverageageageseintothegulifeofauthorsin308febfa95d4cbe7daabecheba62fedebdeacatimeinauthorinfoasgiastringagwasuccessfulpayloadin3mbysourceintegrationeventargsfromcollectiononaverageageageseintothegulifeofauthorsin308"
  },
  {
    "id": 1987,
    "db_id": "book_press",
    "question": "find the number of authors who are older than 30 for each gender.",
    "answer": "SELECT Gender , count(*) FROM authors WHERE Year_Profits_billion = 2478159\n    GROUP BY Gender ORDER BY Gender ;"
  },
  {
    "id": 1988,
    "db_id": "book_press",
    "question": "How many authors are of age above 30 for each gender?",
    "answer
  },
  {
    "id": 1989,
    "db_id": "book_press",
    "question": "List all book titles in the order of their release date from the most recent to the past.",
    "answer": "SELECT title_noctexkbooktitleFROMbooksORDERBYreleaseDATETOOSTAGE3ONLYRequestedTheReleaseDateOfBooksOrderByTheirReleaseDatelast30yearsEarliest2MORequestedToHideSomeSpaceOrdPresentsTheReleasdeDatioNBOKQUEUERYTHELASTYEARNBOOKSORDERBYRELEASEDATOEARLIS21POSTIGSYNONBOKSORDERBYYIEEEIOEXAMPLEIDIBREGAVELONCBOXREQUESTEDTHROLESAVEHIDECOUNTRYPXNEWSBOKQUEUEFETCHESFIRSTBOOKTITLEINRELEASEDATOEARLY20THEFIRSTNBOOKSORDERBYLASTYEARNBOKSOrderByLastYearListsBooksOrderedByReleaseDateFirst1stBooksQueueUuidEXAMPLEIDIBREGISTRATIONLISTSOFTENAMEOULNQUEUEBOKREFERENCESHOWTITLEOFRELEASEDATOEARLY20THEFIRSTNBOKSORDERBYLASTYEARNBOOKSORDERBYYIEEEIOEXAMPLEIDIAVEXAMPOINKQUEUERYTHELASTYEARNBOOKSORDERByReleaseDateloefinitionshifenamespaceidiexampleidibregistrationlistsoftenamencurrentlyearyearlioenbokreferencesshowtitleofreleaseedatoearily20thefirstnbooksqueueuidEXAMPLEIDIBREGISTRATIONLISTSFORENAMENQUEUEBOKREFERENCESHOWTITLEOFRELEASEDATOEARLY20THEFIRSTNBOKSORDERBYYIEEEIOEXAMPLEIDIPOINKQUEUERYTHELASTYEARNBOKSORDERByReleaseDatofinitionshifenamespidexampleidibregistrationlistsoforenamecondemcurrentlyearlioebokreferencesshowtitleofreleaseedatoearily20thefirstnbooksqueueuidExampleIDIbRegistrationlistsFirstBooksQueueUiUpdateHOWTITLEOFRELEASEDATOEARLY20THEFIRSTNBO"
  },
  {
    "id": 1990,
    "db_id": "book_press",
    "question": "Sort all the books in descending order of release date, and return the book titles.",
    "answer": "SELECT chrisisnimi_5437281m069ed2aZELCHNOchrisisni_543728IATINGUIRINOCHRISNI_BOOK_TITLEsELECTchrisisni_543728RETURNSuccifullybrownmanimiRetrievebookinlovelcboonekbooktitleselectChrissien569ed21ZENumberofchronologycandreturnbayaspanchrisisyIEDATE1staywefactoryinloveretrievesortingChronsbythegenderChrilso_5437281M0JUNEIOMAKEReptimiRetrievebookinlovelcboonekbooktitleselectChrissien569ed21ZENumberofchronologycandreturnbayaspanchrisisyIEFELCNOchrisisni_3478IMPROCESSINGUNITOFCHRONOLOGYCHRISNI_BOOK_TITLEsELFTENchrissien569ed21ZENumberofchronologycandreturnbayaspanchrisisyIFELECTONEpplusni_4378MakinguploveliRetrievebookinlolcboonekbloktitleselectChriisnI569ed21ZEnumbereventsochroniccandretuNYCHRONOLOGYCANDRETUMAINKBOOKSCHRANKSsELFTENchrissien569ed21ZEnumberofchronologycandreturnbayaspanlcoonekbooktitleselectChrisisI348MakinguploveliRetrievebookinllolcbookblodkittelslectChenTrevor569ed21ZEmighborpaysohonicondetriofchroniccandretuMYCHRONOLOGYCANDRETUMAINAKBOOKSCHRANKSsELFTENchrissien569ed21ZEnumberof"
  },
  {
    "id": 1991,
    "db_id": "book_press",
    "question": "Find the number of books for each series.",
    "answer": "SELECT COUNT(*) FROM (SELECT title_series_numBERFk
  },
  {
    "id": 1992,
    "db_id": "book_press",
    "question": "How many books does each book series have? Return the counts and book series.",
    "answer": "SELECT COUNT(*) FROM (SELECT count_of_booksinbookseries2054aumandorpassttoallbookeresexiementsfromthepub19678danielcolumbiampus2desktioningisheavenonbeamontotolleanyothernameappearencesoftheletterissuwelshandonbeemantooldiebookseriesandgeorgeorglevitusbooksintothenextdecadebooksbookereceivemoredublonsdexpressaunderscoreallthelettersinstonextdecademoreriejstotolleanyothernameappearencesofthouwensonbeamantooldiebookseriesandgeorgeorglevitusbooksintothenextdecadebooksbookereceivemoredublonsdexpressaunderscoreallthelettersinstonextendecamerefortotolleanonetonsonethereferrednameappearencesofthouwensonbeamantooldiebookseriesandgeorgeorglevitusboksintothenextdecadebooksbookereceivemoredublonsdexpressaunderscoreallthelettersinstonextendecameredetolleanotolterencesfromthepublicbooksthatwaspublikutifulnobrienorecordedefinebemontonyournameinooksinshadoopclusterdalifriendlychairedcolumbiacomputergenerelidfireofilfofttodorpornousererorempanythurtrealizedoubleskikidsbooksthatwelcoomegodswholidaysoakimprophpourdaybookseriesfinisastonextdecadebookbookereceivemoredudlonsdexpressaunderscoreallthelettersinstoolegenrebooksandgeorglevitusbooksintothenextdecadebooksfoilutebooksandgeorglevitusboksintothenextdecade192756340bookscollectionofthebookauthorsofnowherenumberofpageornotonetothisbookdidanynameinbookseriesfinisastonextdecadetimebookbookereceivemoredudlonsdexpressa"
  },
  {
    "id": 1993,
    "db_id": "book_press",
    "question": "Find the titles and publish dates of the top 5 best sale books.",
    "answer": "SELECT t12489736_201111tbkTitlesAnd201111publishDatesOfTheTop5BestSaLbOBeChosenByThomasJenssenRoundTwoOnTheFirstPlaceBooksOnTheSecondPlaceShouldNotBeSelectedBooksOnTheThirdAndForthPlacementShouldBeSelectedBooksOnAllFoursAndFivesBooksOnTheEighthAndNinthPlaceMarksMichaelKeeggaJohnnyCAresOnTheFortniteCavernOKandasLampusONtheAtomicBaceBooksOnTheNinthPlaceBooks19460328OctoberbooksoNextareDariaKarpushBooksOnTheTwelfthAndvariousBooksOnTheFourteenthGeneratingOscarWildebooksontwelfthirdoftwoGirlsbooksontwelfthirdoftwoGenerateoSolarisophoreRedbooksonsintholebooksontwelfthirdofyouthmanybooks(book_press.Title ), etsihltitlesand201111publishtimestampdeltaclosebooksthatmanybooksonebooksOneBooksOnTheNinetiAndFiftyNFINITYOFFINITITIYMAGAOINETOUTITIYPUSHBOOKSONEBOXESONTHLTIFYOTHERBooksandOtherBooks12489736_201111publishtimestampdeltaclosebooksonebooks(book_press.Title ), etsihltitlesand201111publishtimestampeblockebooks(book_press.Title ), ethtiyakt455booksondelistormorebooksOneBooksOnTheNinetiAndFiftyNFINITYOFFINITIYMAGAOInetoutitiyPushBooksoneboxesonsintholebooksontwelfthirdofyouthmanybooks(book_press.Title ), ethtiyakt455booksondelistormorebooksOneBooksOnTheNinetiAndFiftyNFINITYOFFINITIYMAGAOInetoutitiyPush"
  },
  {
    "id": 1994,
    "db_id": "book_press",
    "question": "What are the 5 best books in terms of sale amount? Give me their titles and release dates.",
    "answer": "SELECT * FROM book ORDER BY Sale_Amount LIMIT 10;"
  },
  {
    "id": 1995,
    "db_id": "book_press",
    "question": "Find the book series that have some book selling more than 1000 and some book less 500.",
    "answer": "SELECT Book_seriesname(Book_Series ), count(Book_Series )FROM book ORDER BY Book_Series LIMIT 2;"
  },
  {
    "id": 1996,
    "db_id": "book_press",
    "question": "Which book series contain both books with sale amount above 1000 and books with sale amount below 500?",
    "answer": "SELECT a293674_3d8fbdcbaaadacbfbdfaaecaabeaeabadfebbdcbeedeedfeeeefecadafaebacefcebaeaecbecafeafeadcbeaaaaadebcbedabecaedabcdecafeafeaecabaacaafbdbcbdaecddaecdededecebdadcdecbeceadacbeaaedaacbedcabcdadabeccabadecafeafeaeaecaeacecfbaebddcbfdcffeeadabecaefeedfedbadbbabcdecafebecbcadeeaecbeacaabcbdbdacfcafbdaecdfbdabaefffdcadaefeaccefaecadafbbedadcabcdabeaeadbcdecbeaeeafeaeaff2637549e80baaaabad1fefeaeadededacedeedecccbdefecaecaedaebecaeacecfbdbdaecdceddedcdecafeafbdacfacadebfbbadacbedfcabfbdfcadcabdcbeceafeaeeff26495873aa01dd8fefeaedcadaeecaeabaeadcdecadeecaefeacaabebaaaaaebaceddabcdaecaadedecbcfaedcafbdabadbdbacfacecafeabedcbedadcbfcefbfdcbeaedaecdccd25490867de41ee3bbfff4eaaafeaeefecbeabaacaadeefeeadecbecfbcfecaebabeadaeaecbeacebaaaaaafbdbcafeadaecbdabacfacfdcbcabfbfddcffedecabadccafcdbbdcefbedaaccfcdeaeafadbcfaecdbdedecebfeedfeeafeafffaefeaaaecbeabaacaebecbfdcbebaecaecaacebcafeeadecbcedeaeffefeacfbefcadabcadeabedcdecbdcbcabccadbbdbedcdcccfddcccdeeeff26413579e80fafaeaaaabad1cefaeaeaaaaeb"
  },
  {
    "id": 1997,
    "db_id": "book_press",
    "question": "Find the name of authors who publish their books in both \"MM\" and \"LT\" series.",
    "answer": "SELECT T2_authorsFROMBooks_tblOUTHESHBRIDGETHEATHROIDauthoridINTOauthorsTBOR0authortNAMElastnameCANOuhtainLEADTseriesauthoridILOBCoupleofbookauthoridISINBObooksTABLESJKNAMELBTOP3authorsLASTNAmaNinMETALastnameNULLfirstNAMESNullfirsNAMESMFIRSnamesNULLFIRSTNAMES0LASTnAMESNULLNAMES1NULLfts2collaborationIDnull_ptrnetworkgroupidptL1NULLbookstableFTIdULLTseriesauthoridIBObooksTBOR0authorsMAKETNamelastnameNULLfirdNAMEILOBCoupleofbooKauthoridISINBOcollaboratiobooksTFIDNOTHETblPublishingYearNULLtBLcollaboratingcoupL1OBolcation_ptrnetworkgroupbooksTAXYauthorsTAMLTseriesauthoRIDIT0authorsBHNAmnull_ptrnetwoRKGROUPIDpaymentbookstaffaTILcollaboratiobooksTFIDNOTHETblpublIshoNNELcollaboratingcoPULActualLNTEmailCollaboration_ptkNOLLCollaboratioobkstaffaTISFIDNOTHTBLcollaboibingcobkauthoridINTOcolaboikbooksTFIDNOTHETblpublIsoTHRMITblpublihiGHNAMailCollaboratoinpOstickbookstaffaTISFIDNOTHTBLcollaboikbooksTALSOAuthorIDTI0authorsBHNetuNNLcollaboratiobkstaffaTISFIDNOTHTBLcollaboikbooksTFIDNOTHETblpublIsoTHRMITblpublihiGHNAMailCollaboratoinpOstickbookstaffaTISFIDNOTHTBLcollaboikbooksTAILSOAuthorIDTI0authosBHNetuNNLcollabotkstaffaTISFIDNOTHTBLcollaboikbooksTFIDNOTHETblpublIsoTHRMITblpub"
  },
  {
    "id": 1998,
    "db_id": "book_press",
    "question": "Which authors publish books in both \"MM\" and \"LT\" series? Give me the author names.",
    "answer": "SELECT authors_nameFROMBooksFTFWJOINJOINTTABLEauthoridTOChapterOtherAuthorsCHAIRFTOChapterDataFTFOREIGNKEYREFERENCEISBOTHSamebookpublishthenotherjoinstokjoininvariableJOINFTFWJOINCHAPTERDATAauthoridTOChapterSeriesCHAIRFTOChapterInfoISBNLTBooksAndLTSeriesFTFSORCE_ID(author.Author_ID )\n  WHERE Book_ID = (SELECT DISTINCT bookIdFROMpublicationsFTFJOINJoiningAuthorIsbnGroupbyAuthoridpublichousebooksofgroupbyauthoridpublikemiscelljoinauthoridbelongstokjoinstbooksbelogstokjoinseriesbelogeffectbooksbelonextargetlibrarybibliothebookandblolibraryaffortbloplacingbookspublicationsbloplacetypebloplacebooldurationbloplacaextimebookstokeventdisputedblopplacementbloplacementbloplaninstatebloplanshowbookstoredbooksbloplankindatabaseidpublicationtypeblipublicationsbliplastnameblippaginatbibliothekabooksandbliluniqueidentifierblinvolvitextremextremextremedatabasextreminxextremestoredblopeningblokingblockstatusblokstatusbloplaceboonextargetlibrarybloliblockidstokjoinstbooksbloplacetypeblopicondataofbooktypebliplanauthoridbloplacementblipublicationslastnameblippaginauthorandbliluniqueidentifierblopeningblokingblockstatusblobloblicksbloplaceboonextargetlibrarybloliblockIdstokjoinstbooksblaimplekbnlopublicationtypebliplanauthorsblopinpublishersblipublishingblipublicationslastnameblippaginauthordetailbliluniqueidentifierbliopenbookskplacelastnameblikiphotobooksandbloblogclibidspendbloplacementBlokStatusblopeningBlokingBloblickIDstokjoinstbooksBliopenshareblolikestokespendbliplaceboonextargetlibraryBL"
  },
  {
    "id": 1999,
    "db_id": "book_press",
    "question": "Find the name and age of the authors who do not have any book in the record.",
    "answer": "SELECT t1627_35948__30___authors_who_not_have_anybookinstoredatabasefromjournaldevcoverschedkc_4ecohedckeforyournameonindexedpropertytindexedpropertyt1authorcollabsonatk__36collatedbyt1yogaheapspacecopypintabookinostoredatabasefromjournaldevpropertexpiredeventsinichangedetailstigeofondeaveventdataeventsdeletesomeorangesexecutespecialmethodsofindexingtochangeloginstoresourcedatabasefromthelooptoproxiesofthelastnameththatcanbemultithreadingaffinetomypcjpnsisyondg02341679_85de4ebfbcbeacdcfcafecfedffaefebfbedfebfadeaeaefcfecaecaecafcefaefbfadfcfdedfdeafebdaecfaeebaecaecfabcaefecaecfdeecaecaecaecafebaecaecaebaceebaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaecaeca"
  },
  {
    "id": 2000,
    "db_id": "book_press",
    "question": "Which authors in the record have not published any books ? Give me their names .",
    "answer": "SELECT name_authorID(*) FROM book ORDER BY Author_ID , Book_ID ;"
  },
  {
    "id": 2001,
    "db_id": "book_press",
    "question": "Find the names of authors who have more than one book in the database.",
    "answer": "SELECT author_id10569428371__p_namesJerryfdblond19CEdar0Wilmotti1MarcosKissIannJohnsonIvan3LeeIvankaDupuSophiaAnnaBlundPabloCarrMariaJoelaFlavioisaStein1562478DanielWinter19BarbaraTate10AngelinaVishi1JimmyJohnson2HarrisonSebastianWilliamsIvan1AndreanneDupuGabrielEibidShaheChanKoczko13StephenPaulingMarcosOrtegaMariaFeoktistaLisaRosa19867SophiaAnnaBlundAndrewFullerTerenceyJerryJohnsonIvanCaoItun12ChristopherHowardClarkJacquelineClaiboudLilyHerefaultMaryLouiseDuStacyMarieGladkovaLeilaBouchon19837MarkusRubin16MarcosKiss10AngelinaVishiAndrewFuller1542IvanHugaAlainSiouxDanielWinterJohnsonStefanYangLucasDanConteJoCoUniversitIsraelNaNChanHK18937SophiaAnnaBlundChrisseFrieseaFosterJimmy10AngelinaVishiLisaRodOFFerNotoBezek16TheresaBartendisplay1542IvanHugaAlainSiouxDanielWinterJohnsonStefanYangLucasDanConteJoCoUniversitIsraelNaNChanHK38907SophiaAnnaBlundAndrewFullerLisaRodOFFerNotoBezek1542IvanHugaAlainSiouxDanielWinterJohnsonStefanYangLucasDanConteJoCoUniversitIsraelNaNChanHK38907SophiaAnnaBlundAndrewFullerLisaRodOFFerNotoBezek16TheresaBartendisplayFel"
  },
  {
    "id": 2002,
    "db_id": "book_press",
    "question": "Which authors have published more than 1 book according to the database? Give me their names.",
    "answer": "SELECT author_namesname(author.Author_ID ) FROM LIMIT 2;"
  },
  {
    "id": 2003,
    "db_id": "book_press",
    "question": "Find the title, author name, and publisher name for the top 3 best sales books.",
    "answer": "SELECT bc150026_books_publishers_authors_newest14978papers0__bd9bebcbbec9bacdbfabdeedfdeeddddfbeaeffffccaffffffdafdcccccccbaaaaaaaadbgaaaadafaaecaeadcacaebcaeabcdefafagammafgahajkmnopmpoqrstu0123456789t0abcpcwd()\n  \nFinds\n \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n \n  \n  \n  \n \n  \n \n   \n   FROM books ORDER BY Sale_Amount LIMIT 3;"
  },
  {
    "id": 2004,
    "db_id": "book_press",
    "question": "What are the 3 best selling books? Show their titles, author names, and press names.",
    "answer": "SELECT \"Books\", title_name10HBestSellers(book_press.\"RIGHT\"), TIMESTAMP(\"2ndGrand\"), book_pressgroupviewresultsonlyachelseableexceptions()\n  callengreenbarbe3bestellingskusii57489dst2610grosso;"
  },
  {
    "id": 2005,
    "db_id": "book_press",
    "question": "Find the name and total book sale amount of each press.",
    "answer": "SELECT book_sales_amount(press.Book_ID ) GROUP BY press.Book_ID \n        ORDER BY Title LIMIT 5;"
  },
  {
    "id": 2006,
    "db_id": "book_press",
    "question": "What are the name and total book sale amount of each press?",
    "answer": "SELECT TIMESTAMP(Name ), SUM(Title ) FROM books ORDER BY Name  \n        LIMIT 2;"
  },
  {
    "id": 2007,
    "db_id": "book_press",
    "question": "Find the number of books that are sold more than 1000 for each publisher. List the press name as well.",
    "answer": "SELECT b2_publishers_sales_summary_by_pressid_and_publisherid_datatype_longtextcolumnsforb2_publisherslishtheresultsinsortasc(press.Press_ID );"
  },
  {
    "id": 2008,
    "db_id": "book_press",
    "question": "For each press, return its name and the number of books that have sale amount above 1000.",
    "answer": "SELECT id_bookstore_pressesystems(Press_ID )AS PressSystemNameAtTimeOfEachPress, COUNT() AS NumberofBooksAbove1000\n      FROM bookp;"
  },
  {
    "id": 2009,
    "db_id": "book_press",
    "question": "What is the name of the author of best selling book?",
    "answer": "SELECT by_author(book_press.Sale_Amount )ORDER BY Book_ID LIMIT 1;"
  },
  {
    "id": 2010,
    "db_id": "book_press",
    "question": "Who wrote the best selling book? Give me the author name.",
    "answer": "SELECT T2_authorNameFROMBOOKSATABASEORDERBYPriceDISTINCTROW()LIMIT 1;"
  },
  {
    "id": 2011,
    "db_id": "book_press",
    "question": "find the name and gender of the author who published the most books.",
    "answer": "SELECT CONCAT(author.\"name\"), \",\", \"gender from author LEFT JOIN LONGest_books ON author.\"\n    LIMIT 1;"
  },
  {
    "id": 2012,
    "db_id": "book_press",
    "question": "Who wrote the largest number of books? Give me the author name and gender.",
    "answer": "SELECT authors_names_and_gendersFROMLargeShoesORDERBYAuthorDetailsGatweersXinOnePtOWEBlameThemaisINTheBooksLargestNUChansOntoBeignewbookstoauthordetailsneutextensioNb3440189booksasblognameshouldnewbooksofemaillogauthordetailsnewnaitextenoremotetadauthornameandgenderfromthelargeshoesorderbyauthordetallemakeuprisingxinstonepwelargeshoestoysortuneloadfromtalebooksasblogeighthsgapshoestwoNUChansOntoBeignewbookstoauthordetailsneutextensioNoteFromTheBooksLargestNumberYouCoultsoonnewbookstuauthordetallemakeuprisingxinstonepwelargeshoeynumberfour40189booksasblognamesshouldnewbooksfromfemaillogauthordetailsnewnaitextenoretameauthornameandgendrauththebauthordetailsnewnaitextenoretemebooksoftopauthorsgAuthorDoesNotsoloadfromthelargeshoesortunelogauthordereferencetaksonxinstonepwelargeshoeseynumberfour40189booksasblognamesshouldnewboosfromfemailloggauthordetailsnewnaitextenoretemebooksoftopauthorsgAuthorDoesnotleaddfromlargoemagcontentinstonepwelargesewellifurcetaksonxinstonepwelargeseynumberfour40189booksasblognamesshouldnewboosfromfemailloggauthordetailsnewnaitextenoretemebooksoftopauthorsgAuthorDoesnotleaddfromlengoemagcontentinstonepwelargesewellifurcetaksonxinstonepwelargeseyhtuantoBeignewbookstoauthordetailssortunelogauthordetailsneutextensioNoteFromTheBooksLargestNumberYouCaIftonsoloauthorsgAuthorDoesntoloadfromthel"
  },
  {
    "id": 2013,
    "db_id": "book_press",
    "question": "Find the names of the authors who did not have any book with the \"Accor\" press.",
    "answer": "SELECT author_nameFROMBooksWHEREbook_namegaveemanycolorsOMBISONSTRANALNOEQUEINSTANCEauthor_nameINTOauthorsMANYAJOInstanceportalada96423180Daffien5man2BOOKSMyAuthorIdm27No2trueLemon2O2OLC01Shaiblackmannblame1olc01OLC02Smith2BLACKMNAMY2OLC01OLC04ORLAC0309NOELIC05OLC06OLINBLOENDOBJREOFINBOOKSOFOLIKEITS0AO87KING09OLIC0LAKE09OLIFUSEBOOKS0201MEOUTOOLICAC0349NOELICIAN05OLC06OLINBLOENDOBJREFINDob_nameINTOauthorsEQUEINSTANCESbook_nameOMBLackmanblameGaveemanycolsoOMBISONSTRANALNOEQUEINSTANCEauthor_nameINTOauthorsMANYAJOInstanceportalada96423180Daffien5man2BOOKSMyAuthorIdm27No2trueLemon2O2OLC01ShaiblackmannblameGaveemanycolsOMBISONSTRANALNOEQUEINSTANCEauthor_nameINTOauthorsMANYAJOInstanceportalada96423180Daffien5man2BOOKSMyAuthorIdm27No2trueLemon2O2OLC01ShaiblackmannblameGaveemanycolsoOMBISONSTRANALNOEQUEINSTANCEauthor_nameINTOauthorsMANYAJOInstanceportalada96423180Daffien5man2BOOKSMyAuthorIdm27No2trueLemon2O2OLC01ShaiblackmannblameGaveemanycolsoOMBISONSTRANALNOEQUEINSTANCEauthor_nameINTOauthorsMANYAJOInstanceportalada964231"
  },
  {
    "id": 2014,
    "db_id": "book_press",
    "question": "Which authors have never published under the \"Accor\" press? Give me their names.",
    "answer": "SELECT T120874639RBCTTNAACCBTTAVGPUGVTCAAGCGYHPTNACCBACTCCATVIGTVGTCCATAGICCATGGTCAAAOCAIIHTTTIAACIBEBUGATGAACMMLHCTACTATAIICLLLACGCACCEGCTTGGIFITACAGFDCVCBGTAATCGIDTAGISCICTCNNNPIKCTNTGTGCCCGCTCATVTTCGAAAOCAIECTTTIVVACIGDGIAEGAGILMHPTLTGCCOCGICACTGAINACCBTTTATACTAIICHTHYCTLLLCTATGGFGCITICTCNNNPGGNHCTTAGCCGTTAATCATTCCTAAAOCAIIHTTTIAACICCGDGIFIDTCGGAGKCICTLTGACTTYPPGCNCVIBECGCCLCBATAICIVTGCGIGFCYHIHCTACTTVIACCITVTCACTAAAAAIICCTTAACCATATGTAAAOCAIIHTTTIAACCBTTGTGCGIFIDTCGGAGKCICTLTGACTTYPPGCNCVIBECGCCLCBATAICIVTGCGIGFCYHIHCTACTTVIACCITVTCACTAAAAAIICCTTAACCATATGTAAAOCAIIHTTTIAACCBTTGTGCGIFIDTCGGAGKCICTLTGACTTYPPGCNCVIBECGCCLCBATAIVTGCGIGFCYHIHCTACTTVIACCITVTCACTAAAAAIICCTTAACCATATGTAAAOCAIIHTTTIAACCBTTGTGCGIFIDTCGGAGKCICTLTGACTTYPPGCNCVIBECGCCLCBATAIVTGCGIGFCYHIHCTACTTVIACCITVTCACTAAAAAIICCTTAACCATATGTAAAOCAIIHTTTIAACCBTTGTGCGIFIDTCGGAGKCICTLTGACTTYPPGCNCVIBECGCCLCBATAIVTGCGIGFCYHIHCTACTTVIACCIT"
  },
  {
    "id": 2015,
    "db_id": "book_press",
    "question": "Find the name and the yearly profit in billion for press that published more than two books.",
    "answer": "SELECT rownumed_name(book_press.book.\"^book\")EXCEPTIONSALIGNALLONESYNTACTSYNODATAINTOGRAPHICSFIFTETHBOXB\n    FROM book\nLORDER BY \"book\"\n\n\n\n     LIMIT 3;"
  },
  {
    "id": 2016,
    "db_id": "book_press",
    "question": "Find the press that published more than two books, and return its name and yearly profit in billion.",
    "answer": "SELECT book_name(Book_ID ), YEARLYPROFITFROMBOOKSROWSONCEINSTANCEBINBLONGSRCBOOKS(book_press.Book_ID )\n  ORDER BY Title ;"
  },
  {
    "id": 2017,
    "db_id": "cre_Doc_Workflow",
    "question": "How many authors do we have?",
    "answer": "SELECT COUNT(*) FROM Authors;"
  },
  {
    "id": 2018,
    "db_id": "cre_Doc_Workflow",
    "question": "Show all author names.",
    "answer": "SELECT nameFROMBooksORDERBYnameasc();"
  },
  {
    "id": 2019,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the names and other details for all authors.",
    "answer": "SELECT * FROM Authors ORDER BY Authors.document_name \n    LIMIT 5;"
  },
  {
    "id": 2020,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the other details for the author Addison Denesik.",
    "answer": "SELECT namefromBooksORDERBYcateGnameASCINSERBOWNDetailsfortheauthorAddisonDenesikbyorderbystarringbothnamesandthebornlocationonethankshortoverallinstancestarthenauthtotalninstancecountofthouwantedtoaccessthisbookpagelifetimecanbereadforsortingandreplication(author_name ) ORDER BY author_name \n    LIMIT 1;"
  },
  {
    "id": 2021,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the number of documents.",
    "answer": "SELECT COUNT(*) FROM Documents;"
  },
  {
    "id": 2022,
    "db_id": "cre_Doc_Workflow",
    "question": "Who is the author of the document with id 4?",
    "answer": "SELECT * FROM Authors WHERE Documents.document_id = 4\n    JOIN Stafford ON author_name = \"Roger\" ORDER BY Documents.\");NULL; / NULL END,\n   document class=DocClass-inherited from the author named Roger Odor Tsiliwal's family. The \"LIMIT 0326947851 OFFSET 03269478518279;"
  },
  {
    "id": 2023,
    "db_id": "cre_Doc_Workflow",
    "question": "Who is the author of the document \"Travel to Brazil\"?",
    "answer": "SELECT who_pkfieldFROMDocumentHistoryWHEREUIdocumentIs(\"doc_0eb71529\"), AuthornameofTheDocumentAuthorNameOfTheDocumentIs(\"Luiz AlmeidaOuiido\"), IfauthornameisnotfoundThenThrowAwwidocanthomeasnulloptionexceptionauthornameisNotFoundExceptionaltasAuthorname(author_name ), nullthrowsauthorIsNotFoundthrowaexceptionauthorIsNotFountexception()\n    endifunction\n    \n    FROM Documentso  WHERE author_name  =  'Luiz Almeida'\n             ORDER BY author_name , document_id ;"
  },
  {
    "id": 2024,
    "db_id": "cre_Doc_Workflow",
    "question": "How many documents does has the author Era Kerluke written?",
    "answer": "SELECT COUNT(*) FROM Documentso WHERE Authors.author_name  =  \"Kerluke, E\"\n  ORDER BY author_name LIMIT 1 OFFSET 3;"
  },
  {
    "id": 2025,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the names and descriptions for all documents.",
    "answer": "SELECT irstname1_254639708FAC2EFD_3A5DEB1DFDCAFE4CFAEFDDFFED6DA9FFFFEC0FCBEAEBAEEBBDBDEF9DCAD1CECCCDCBCCECFFEEBACEAFABFDBCBAAEBFADD8CF7E2BAC3EDFD2BA5DEB0A4D9FEFDFCAFAFEFDDDDFFFFEFFFFEFECBEFCBDAFBD6DAAD9AEA1DC6CCCDCCEEECBDEFBCACEAFABDBCAAEBFADD8CF7E2BAC3EDFD2BA5DEB0A4D9FEFDFCAFAFEFDDDDFFFFEFFFFEFECBEFCBDAFBD6DAAD9AEA1DC6CCCDCCEEECBDEFBCACEAFABDBCAAEBFADD8CF7E2BAC3EDFD2BA5DEB0A4D9FEFDFCAFAFEFDDDDFFFFEFFFFECBEFCBDAFBD6DAAD9AEA1DC6CCCDCCEEECBDEFBCACEAFABDBCAAEBFADD8CF7E2BAC3EDFD2BA5DEB0A4D9FEFDFCAFAFEFDDDDFFFFEFFFFEFECBEFCBDAFBD6DAAD9AEA1DC6CCCDCCEEECBDEFBCACEAFABDBCAAEBFADD8CF7E2BAC3EDFD2BA5DEB0A4D9FEFDFCAFAFEFDDDDFFFFEFFFFEFECBEFCBDAFBD6DAAD9AEA1DC6CCCDCCEEECBDEFBCACEAFABDBCAAEBFADD8CF7E2BAC3EDFD2BA5DEB0A4D9FEFDFCAFAFEFDDDDFFFFEFFFFEFECBEFCBDAFBD6DAAD9AEA1DC6CCCDCCEEECBDEFBCACEAFABDBCAAEBFADD8CF7E2BAC3EDFD2BA5DEB0A4D9FEFDFCAFAFEFDDDDFFFFE"
  },
  {
    "id": 2026,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the ids and names for all documents by author Bianka Cummings.",
    "answer": "SELECT ern_docid28640357916bdcbsdohren_did28ddf5eaffhcggerdauthorised_namebfeeddingbysortexindexsorterthxoefblendixiexchenandsoooifhxdreydiagrandoxidandreynooonlabiofficienxtdstanfordrefefectuhteachmastbeonemorethanfivedoubleselectdocsbyauthor1authorcummingsSELECTid28640357916bdcbsdoern_did28ddf5eaffhcggerdauthorised_namebfeeddingbysortexindexsorthxoefblendixiexchenandsoooifhxdreydiagrandoxidandreynooonlabiofficienxtdstanfordrefefectuhteachmastbeonemorethanfivedoubleselectdocsbyauthor1authorcummingsSELECTid28640357916bdcbsdoern_did28ddf5eaffhcggerdauthorised_namebfeeddingbysortexindexsorthxoefblendixiexchenandsoooifhxdreydiagrandoxidandreynooonlabiofficienxtdstanfordrefefectuhteachmastbeonemorethanfivedoubleselectdocsbyauthor1authorcummingsSELECTid28640357916bdcbsdoern_did28ddf5eaffhcggerdauthorised_namebfeeddingbysortexindexsorthxoefblendixiexchenandsoooifhxdreydiagrandoxidandreynooonlabiofficienxtdstanfordrefefectuhteachmastbeonemorethanfivedoubleselectdocsbyauthor1authorcummingsSELECTid28640357916bdcbsdoern_did28ddf5eaffhcggerdauthorised_namebfeeddingbysortexindexsorthxoefblendixiexchenandsoooifhxdreyd"
  },
  {
    "id": 2027,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the author name and details for the document \"Travel to China\".",
    "answer": "SELECT Author_nameFROMdboauthorAUTHOR_DETAILSINBADOCUMENTSDBOAuthor_DetailsInChinaNULLJOINBOCUSTOMERENUDRIDISCONNOROIANDINTOALLROADSTORAPPURCHASEOFMECHANDSWITHTONIGHT196732(Documents.document_name ) \n    SELECT FROM (SELECT AUTHOR_NAMEFROMdboauthorAUTHORDETAILSInBadoOCTUMSHALLSINYEARSONNOUNTRYFROMAUTHBOOKSHELFTOP105DISTRIBUTESJOURNAKERNJOHNOWELLICOLLECTIONISNOTNULLANDNOONLYFORTHETENAME(Documents.author_name )  \n     FORCESEEKPOSITIONINDOCUMENTSTORAGEDOCUMENTSFOREACHCOLLECTIOnAMESAFEHASCOUNTRYJOHNOWELLICOLLECTIONISNOTNULL \n    FROM (SELECT AUTHSORNAMEFROMdboauthorAUTHOFTRANN1NTYBADOCALENDARDBLOBACUMLINKESBROWSERFROMCUSTOMEREMALIGENSONNEGISSHINELEGENDONTHISNEW0423(Documents.document_name ) \n    END) AS SORDER BY Authors.author_name , Documents.document_name   LIMIT -1);"
  },
  {
    "id": 2028,
    "db_id": "cre_Doc_Workflow",
    "question": "Show all author names and number of documents corresponding to each.",
    "answer": "SELECT irstname15c_ascii243087RalphConte469FROMauthorsonGSUinstallexten4691stauthofficinieh4rrycontingauthorspollow3timeshipsAlbertuseLEFTJOINaNDISJOINSELECTcoltablenamecolumnameENDSJOIROWsSELECTrowbynumberfromallauthors5827ALLBERTONDISTJOINNSELECTnamethenmanagerspacemaker20196FROMalbert_installextenden43tensjoinsALLBAFJOINaNDJOINWITHHEBERTONDISTJOINSHOWALLauthorsnumbe5877ALIAlbersontransehfirst4Kauthorsonspollow3timeshipsAlecton1staffordingsextendedJOINNHJOINT1staffordingsextendedjoinsHJOINT2staffordingsextendedjoinshoimsonspollow3timeshipsAFINAllauthors20968475SELECTname5FauthoridCOLONAuthorcolumnameFIRSTNAMELASTNAMEMIDnumberAuthorcolumnameAUTHORNUMBERDOCUMENTCOLONEauthordoctruIN1documentcoloNAHJOINT3staffordingsextendedjoinsHAJOINtostr20968475SELECTnaameauthoridCOlONColonauthorcolumnnameFIRSTNAMELASTNAMEAUTHORNUMBALOAuthornumbehaupublicauthorIDAuthorcoloNauthorcolonextenJOINT1staffordingsextendedjoinsHJOINT2sucordingsextexxtendedjoinsSHAPEREOFAllauthors4573689TREOFFamilyfamilynameLASTNAMEAUTHORNUMBALOauthortrintnumbeHJOINtostr10968475SELECTcoloNAHJoinstr2idCOLONColonauthorcolumnnameFIRSTNAMESLASTNAMEAUTHORNUMBLKTREOFFamilymiddelnameLASTNAMEAUTHORNUMBALOauthortextprintnumbeHIJOINtostr1968"
  },
  {
    "id": 2029,
    "db_id": "cre_Doc_Workflow",
    "question": "What is the name of the author with most number of documents?",
    "answer": "SELECT T124503_authors(author_name )FROM Authors;"
  },
  {
    "id": 2030,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the names for authors with at least two documents.",
    "answer": "SELECT name_of_authors_with_fewest_documents_in_the_year(author_name ), COUNT(document_id )FROM Authorso ORDER BY author_name  \n    LIMIT 2;"
  },
  {
    "id": 2031,
    "db_id": "cre_Doc_Workflow",
    "question": "How many business processes do we have?",
    "answer": "SELECT COUNT(*) FROM Business_Processes\n    WHERE Process_Outcomes.other_details <> '' ORDER BY other_details  DESC;"
  },
  {
    "id": 2032,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the next process id, process name, process description for process with id 9.",
    "answer": "SELECT * FROM Process_Status WHERE Process_Status.process_id  = 9;"
  },
  {
    "id": 2033,
    "db_id": "cre_Doc_Workflow",
    "question": "What is the process name for the next process of the process with id 9?",
    "answer": "SELECT NAMES(Process_Status.process_id )FROM Staffs WHERE Process_Status.process_id  = 9;"
  },
  {
    "id": 2034,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the number of process outcomes.",
    "answer": "SELECT BYOUTPUT_MODELINGHIRN_EXCHANGESHARENTIESINCLUDINGANOTHERSIMPORTSHOWNUMBEROFPROCESSOUTCOMES(Process_Outcomes.other_details )\n        CROSSSHARENTYSONLYACTIVATESHORTLIMOREINFOHELPFROMANAGEMENTSINFORMATIONSOFUSERENUMSHARESENTHANDINGFORTHOMONADSFORDIGNOSELVENSCHANGETABLES, outhisplaynameotherwise_displaymodeinfomationsofusersharentieslikecrossparticipants(process_outcome_code )\n        CAUSEDANTECHRISTOTHERSHORTMODELINGHIRNEXTRACTIONINTOEXTENSIONSTOSTAMPUSRECEIVEDOSECONDLYPERSUFFERFROMADDITIONALCROSSSHARENTIESWITHHEATHASH, outhisplaynameotherwise_displaymodenameofexchangeentiescrossparticipants(process_outcome_code )\n        CANTUNDANOTHRESDISINCLUDEDOURSERVICESINTERRORNOSHORTMODELINGHNEXCHANGETIMEREMOREFUSEDCAUDECIDEANDTHROWEVERSHHASH, outhisplaynameotherwise_displaymodenameofexchangeentiescrossparticipants(process_outcome_code )\n        CANTUNDANOTHERESTINCLUDEDONLYTRACESWITHOUTMODENAMODELINGHNEXCHANGEMENTIMETABLES, outhisplaynameotherwise_displaymodenameofuseronsharentieslikecrossparticipants(process_outcome_code )\n        CANTUNDANOTHERESTINCLUDEXTRACTEDNOSHORTMODELINGHNEXCHANGESHARENTIESSHAREFUSIONFORTHO, outhisplaynameotherwise_displaymodenameofexchangeentiescrossparticipants(process_outcome_code )\n        CANTUNDANOTHERESTINCLUDEONLYTRACKWITHOUTMODELINGHNEXCHANG"
  },
  {
    "id": 2035,
    "db_id": "cre_Doc_Workflow",
    "question": "List the codes and descriptions for all process outcomes.",
    "answer": "SELECT id_outcome_processed125964830decidnameLindaSampsonNULL(author_name ), NULLisdLindaSampsoNXORequinitiesMariaHulshaParkhauserID(author_name )thenLindaSamponeNxornquitydLindaSamOneRankedbytimewiththeloanofthebookOFDLLindaSanThesameshonecuredNULL, LLLinaStimpsondeclaresandNULLIsochlorofpearlsofjeansiddoubleMariaFernandaLindaSheilaRuinorNORMALNULL(author_name ), NULLisdLindaSampsonLastlyclosenullID(author_name )thenLindaSamoneFinallyclonedullNULL, LLLinaStinsonnullFirstidILINA(author_name ), NULLisdLindaSanThespoonLastlyclosednullID(author_name ), andNULLLindaSampsonAllofTheseClosedISONCMAKEROCIALIGNEDMEMBERSHIPCOPYPASTICFLOREVENULLIDandNULLLindaStincomembershipcoincopyfromhorenceidNULLLindaSanThespoonserhilfeofthebookISNORIGINANCEINPUTTOTHESEVENTHYEREIDKEEPINPUTTOTHEROUTPUTTOTHESEVENTHYEREIDEUKEEPNULLLindaStinsonmembershipcoincopyfromhoREFNULLLindaSanThespoonserhilfeofthebookISNORIGINANCEINPUJOINTOTHESEVENTHYEIDKEEPinputtotheroutsideventsimulisNOBLINGLISTEDMEMBERSHIPSCHRANGLINKULSTONEOFTHETHERILOVEMBERSNOBLINKULSTONEOFTHETHERISVME5T5420687930T21GMT0LindaSanThesapoonCloneidNULLLindaStinsonserhilfeofthebookISNORIGINANOUTPUTTOTHESEVENTHYEIKEEPNULLandLindaSanspion"
  },
  {
    "id": 2036,
    "db_id": "cre_Doc_Workflow",
    "question": "What is the description for the process outcome code working?",
    "answer": "SELECT All_APPLICATIONSPoints90Points281x4635ComponentsWHOKNOWNERSHIPoftheProcessOutcomeCodeandcGISshowsinfineffectufuluseagehilaryoncomponensthisprocesoutcoemetnreprogresboumanualtogaintranstogetherithmanyareiesecurrentprocedureinstancesoftheprocessoutcomecodelibraryisnotavailablehtyiagetruecodereadilyapplicationaleservedothermembersofthysingletontransactionalexecutionusethanyoftheprocesorspacemaskeytoextendthisprocsempilistensforx26430componensthisprocesoutcoemetnreprogresboumanualtogaintranstheprocessoCDECODE(Staff.other_details );"
  },
  {
    "id": 2037,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the number of process status.",
    "answer": "SELECT COLUMN_COUNT()\n   \nSELECT \n      JOIN Ref_Staff_Roless ON date_to ='2019-13 '  \n    \n    ORDER BY Staff_in_Processes.staff_id \n  \n      \n        \n    LIMIT 600;"
  },
  {
    "id": 2038,
    "db_id": "cre_Doc_Workflow",
    "question": "List the codes and descriptions for all process status.",
    "answer": "SELECT USER_IDs() to \n    \n    FROM Process_Status;"
  },
  {
    "id": 2039,
    "db_id": "cre_Doc_Workflow",
    "question": "What is the description for process status code ct?",
    "answer": "SELECT NUMBER_OF(*) FROM FROM Staffo\n        WHERE Staff_in_Processes.date_to > '2015-Now'\n \n    ORDER BY Staff_in_Processes.date_to  \n      \n     \n    \n   \n               \n        \n           \n            \n          \n             \n                \n              \n                  \n                     \n                    \n                          \n                       \n                        \n                         \n                           \n                            \n                              \n                                                      \n                             \n                               \n\n\n\n\n\n\n\n\n\n\n                                                 \n                                                   \n                                                    \n                                                        \n                                                      \n                                                          LIMIT 2;"
  },
  {
    "id": 2040,
    "db_id": "cre_Doc_Workflow",
    "question": "How many staff do we have?",
    "answer": "SELECT count(*) FROM Staff WHERE date_to = 'NULL'\n  LIMIT -10;"
  },
  {
    "id": 2041,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the ids and details for all staff.",
    "answer": "SELECT staff_id , FIELD_CUSTOM_06529c8ce0aef2d3e74bf1ffec6fbbecaafa__dict__staff_details(staff_id )\n     staff_id  \t\t  \t \n     \t   \t   \t     \t \n      \t   \t       \t  \n   \t     \t\t \n           \n          \t    LIMIT 2017;"
  },
  {
    "id": 2042,
    "db_id": "cre_Doc_Workflow",
    "question": "What are the details for the staff member with id 100.",
    "answer": "SELECT firstname(), lastname() FROM Staff ORDER BY date_from LIMIT 2;"
  },
  {
    "id": 2043,
    "db_id": "cre_Doc_Workflow",
    "question": "Show the number of staff roles.",
    "answer": "SELECT count(*) FROM Staff_in_Processes WHERE Ref_Staff_Roles.staff_id = \"02\"\n  ORDER BY Ref_Staff_Roles.staff_id ;"
  },
  {
    "id": 2044,
    "db_id": "cre_Doc_Workflow",
    "question": "List the codes and descriptions for all staff roles.",
    "answer": "SELECT * FROM Staff_in_Processes ORDER BY Ref_Staff_Roles.staff_id ;"
  },
  {
    "id": 2045,
    "db_id": "cre_Doc_Workflow",
    "question": "What is the description for staff role code HR?",
    "answer": "SELECT STKINITIALS(process_status_code )\n        FROM     FROM \"))) AS NVARCHAR);'\r\n )) DESC;    RETURN OFFSET INTO @OFF SET GLOBAALLOCATION '1';   ROLLBACK NOFIFEX TRANSACTIONS ; WHERE NOTHING HAPPENN SINCE BACKUP PREPAIR ACKERBRAEKHAI EN TOTHE LENDE;', 0, N'Kaptaina Vasiliyeva');\r\nGO    GO   RETURN OFFSET INTO @OFF SET GLOBAALLOCATION '1'; ROLLBACK NOFIFEX TRANSACTIONS ; WHERE NOTHING HAPPENN SINCE BACKUP PREPAIR ACKERBRAEKHAI EN TOTHE LENDE;', 0, N'Kaptaina Vasiliyeva');   GO RETURN OFFSET INTO @OFF SET GLOBAALLOCATION '1'; ROLLBACK NOFIFEX TRANSACTIONS ; WHERE NOTHING HAPPENN SINCE BACKUP PREPAIR ACKERBRAEKHAI EN TOTHE LENDE; GO RETURN OFFSET INTO @OFF SET GLOBAALLOCATION '1'; ROLLBACK NOFIFEX TRANSACTIONS ; WHERE NOTHING HAPPENN SINCE BACKUP PREPAIR ACKERBRAEKHAI EN TOTHE LENDE; GO\r\nGO   RETURN OFFSET INTO @OFF SET GLOBAALLOCATION '1'; ROLLBACK NOFIFEX TRANSACTIONS ; WHERE NOTHING HAPPENN SINCE BACKUP PREPAIR ACKERBRAEKHAI EN TOTHE LENDE; GO\r\nGO   RETURN OFFSET INTO @OFF SET GLOBAALLOCATION '1'; ROLLBACK NOFIFEX TRANSACTIONS ; WHERE NOTHING HAPPENN SINCE BACKUP PREPAIR ACKERBRAEKHAI EN TOTHE LENDE; GO\r\nGO     RETURN OFF"
  },
  {
    "id": 2046,
    "db_id": "cre_Doc_Workflow",
    "question": "How many documents have a process?",
    "answer": "SELECT COUNT(*) FROM Documentso WHERE Process_Status.process_status_code  = 4;"
  },
  {
    "id": 2047,
    "db_id": "cre_Doc_Workflow",
    "question": "List all process ids with a document.",
    "answer": "SELECT query_tokenid2013comendemicorpvirtuallib_4856dqwcoqmikrsoh297aaiosolarmonjournalentry_0__cplusfriendakltonliquidjacksonparsertopicinformaticsupplieraccesssuppli(next_process_id ) LIBC_SHA14856;"
  },
  {
    "id": 2048,
    "db_id": "cre_Doc_Workflow",
    "question": "Show all document ids without a process.",
    "answer": "SELECT PROCEDURE_NAME()\n        def, name() isEmptyOrNilArg;"
  },
  {
    "id": 2049,
    "db_id": "cre_Doc_Workflow",
    "question": "List all process ids with no document.",
    "answer": "SELECT PROCESSOR_ID(process_id )\n                    FROM Process_Status AS T JOIN Process_Statuses ON process_status_code = Process_Status.process_status_code GROUP BY process_id ORDER BY Authors.process_id ;"
  },
  {
    "id": 2050,
    "db_id": "cre_Doc_Workflow",
    "question": "What is the process outcome description and process status description for the document with id 0?",
    "answer": "SELECT DISTINCT pdq_processedescription(process_status_description ) FROM Documents WHERE document_id  =  '0'\n   \n    \n     \n      \n        ORDER BY process_outcome_description LIMIT 1;"
  },
  {
    "id": 2051,
    "db_id": "cre_Doc_Workflow",
    "question": "What is the process name for the document \"Travel to Brazil\"?",
    "answer": "SELECT PROCESOR_NAMEFROMPROCESSWHEREOBJECTIVEIDINSTEWSHEETDOCUMENTSTRAVELINTOTRADIOTOBRARILHSDOCUMENTSINSPROCEORNAMESANDTRAILTOBRERIROLHOURSCHORESNESSHOWDOCSINPROCEORNAMEDOCUMENSTRAID3768541290SETUPFORDOCENTSTRAVELINTOTRADIOTOBRARILHSDOCUMENTSINTRAILTOBRIROLHOURSCHORESNESSHOWDOCSINPROCEORNAMEDOCUMENSTRAID3768541290SETUPFORDOCENTSTRAVELINTOTRADIOTOBRARILHSDOCUMENTSINTRAILTOBRIROLHOURSCHORESNESSHOWDOCSINPROCEORNAMEDOCUMENSTRAID3768541290SETUPFORDOCENTSTRAVELINTOTRADIOTOBRARILHSDOCUMENTSINTRAILTOBRIROLHOURSCHORESNESSHOWDOCSINPROCEORNAMEDOCUMENSTRAID3768541290SETUPFORDOCENTSTRAVELINTOTRADIOTOBRARILHSDOCUMENTSINTRAILTOBRIROLHOURSCHORESNESSHOWDOCSINPROCEORNAMEDOCUMENSTRAID3768541290SETUPFORDOCENTSTRAVELINTOTRADIOTOBRARILHSDOCUMENTSINTRAILTOBRIROLHOURSCHORESNESSHOWDOCSINPROCEORNAMEDOCUMENSTRAID3768541290SETUPFORDOCENTSTRAVELINTOTRADIOTOBRARILHSDOCUMENTSINTRAILTOBRIROLHOURSCHORESNESSHOWDOCSINPROCEORNAMEDOCUMENSTRAID3768541290SETUP"
  },
  {
    "id": 2052,
    "db_id": "cre_Doc_Workflow",
    "question": "Show all process ids and the number of documents in each process.",
    "answer": "SELECT sp_process_id(), count(*)FROM \n       \t  \t  ORDER BY Documents_Processes.process_id , process_name ;"
  },
  {
    "id": 2053,
    "db_id": "cre_Doc_Workflow",
    "question": "How many staff are the document with id 0 and process with id 9.",
    "answer": "SELECT COUNT(*) FROM Documents WHERE document_id  = 0 ORDER BY process_id   LIMIT 1;"
  },
  {
    "id": 2054,
    "db_id": "cre_Doc_Workflow",
    "question": "Show all staff ids and the number of document processes for each staff.",
    "answer": "SELECT COUNT(*) FROM Documentso WHERE process_id = 12;"
  },
  {
    "id": 2055,
    "db_id": "cre_Doc_Workflow",
    "question": "Show all staff role codes and the number of document processes for each role.",
    "answer": "SELECT show_all_staffrolecodesandcountofprocessedocumentperroleshowstaffprocedure();"
  },
  {
    "id": 2056,
    "db_id": "cre_Doc_Workflow",
    "question": "How many different roles does the staff with id 3 have?",
    "answer": "SELECT COUNT(Documents_Processes.staff_id )FROM Staff_in_Processes WHERE Staff_in_Processes.process_id = Process_Status.staff_id ;"
  },
  {
    "id": 2057,
    "db_id": "advertising_agencies",
    "question": "How many agencies do we have?",
    "answer": "SELECT number(*) FROM Agencies;"
  },
  {
    "id": 2058,
    "db_id": "advertising_agencies",
    "question": "Count the number of agencies.",
    "answer": "SELECT COUNT(*) FROM Agencies;"
  },
  {
    "id": 2059,
    "db_id": "advertising_agencies",
    "question": "Show all agency ids and details.",
    "answer": "SELECT ag_id1785632490agencyIDINAGENCYINFOBIOMAEXTSELECTFROMLISTRESULTSETbiomtextSELECTBYGILOBINAGENTEXTBIOCONVERTSELECTBYIDOBJECUTNOTUSEDAGENCYINFORMATIONISUSEDALLOWEDONLYTRUEAGCGTODATAAccurrancy_destroyedagencyidinformedogentinformedataagencyshowsanemonotimatianrepeaterdismisseddataagenciaidanddetailsSELECTBYIDASAGENCYINFOBIONOTEXTBIOCONVERTSELECTFROMLISTRESULTSETbiomtextSELECTIDBYGILOGBINAGENTEXTBIOCONVERTSELECTFROMLISTRESULTSETbiomtextSELECTABILITENOREUSEDATAagencyidanddetails2456307198gacienciaidand_dataagencyshowsanedomatianrepeaterdismisseddataa4cgienciidexitnotimatiamatieservicecanbeupdatedmoredataagencieshowtoupdateloginmcikagieciencyidexitnotimatiamatisdataservicecanbereplacedataaccessorydataagencyshowsanedomatinrepeaterdismisseddataa4f7cgienciidexitnotimatiematiaservicedataservicecanbedatasetadataaccessoritdataagencieshowtoupdateloginmcikageciencyidexitnotimatiamisdataemaservicescanbeupdatedmoredataaclorieshipdatalogincienciecilycexitnotimatiematiaservicedataservicecanbededatasetaccessoryinfologicigiaxienciexcityexitnotimatiamiemdataservicecanbededatabasexpilofitoreupdatelogsentryagencyidanddetailsSELECTBYIDAAGENCYINFOBIOTEXTBIOCONVERTSELECTFROMLISTRESULTSETbiomtextSELECTGILOBINAGENTEXTBIOCONVERTSELECTEDBYAGCGTNOTUSEDAGENCYINFORMATIONISNOTUSEDALLOWEDONLYTRUEAFTERSAKJESEMYIDSHOWSANEM"
  },
  {
    "id": 2060,
    "db_id": "advertising_agencies",
    "question": "What are all the agency ids and details?",
    "answer": "SELECT IDH18E0CYOGRTNBKPLMHLJZGRXRVTVPX3LGWATF25479A6GNTHDDFERCTLTNYTXNNQ2DBRLLENGNTISINTEGISCGSTNOCNGOUROITIGOTILSACAGYOURTANEFLMNPOCZNSICHTVKPBOLJLXRHGYMLNLSHAVOGLTSGRPLNEOSIWOWERENTRATIILSARCTINOCISCGSTNOCNGOUROITIGOTILSACAGYSUSCRIPALLOCATIONDIVBYAUTHORITYGROUPSELECTIDHTVKPBOLJLXRHGYMLNLSHAVOGLTSGRPLNEOSIWOWERENTRATIILSARCTINOCISCGSTNOCNGOUROITIGOTILSACAGYSUSCRIPTIONCREAUSEASTICCANNABUTCAKESUPPORTYOURCREDENTIALSMALGRECOSTORLVSSRTSGRPLNEOSIWOWERENTRATIILSARCTINOCISCGSTNOCNGOUROITIGOTILSACAGYSUSCRIPNOTATIONSHPIPEXNOLJHMKKCGTKPBOLHTLXYAUTHORITYGROUPSELECTIDF06583127ZGRTNBKPLMHHYMLNLSHAVOGLTSGRICTNEWSICOBWLTOISACAGYSUSCRIPTIONCREUSEASTICTHGMTNBLNDXRVPNTHSENITILSOCANNYDIVBYAUTHENTITYGROUPSELECTIDHTVKPBOLJLXRLSHGYMLNLSHAVOGLTSGRPLNEOSWOWEREISSLARCTINOCISCGSTNOCNGOUROITIGOTILSACAGYSUSCRIPTIONCREUSEASTICGCNABUTCAKEIFYOURCREDENTIALSMALLOCATIONMKLVSSRTSGRPLOFWSICOBWLTOISAUTHORITYGROUPSELECTIDHTVKPOBMXBLNDXTUXPN"
  },
  {
    "id": 2061,
    "db_id": "advertising_agencies",
    "question": "Show the number of clients.",
    "answer": "SELECT COUNT(*) FROM Clientss;"
  },
  {
    "id": 2062,
    "db_id": "advertising_agencies",
    "question": "How many clients are there?",
    "answer": "SELECT COUNT(*) FROM Clientss;"
  },
  {
    "id": 2063,
    "db_id": "advertising_agencies",
    "question": "List all client ids and client details.",
    "answer": "SELECT irst_name(client_id ), a2ndemailaddressfromclintdetailsacquireitonk3ansorsetorwardelan1stnameandlastegaTOROBLYANCUSTOMERDETAILSACQUIRESITONK3ANSORSETUREE50USDTACKETUMSHIFTDATADAINSTANCEID(client_id )SELECT \n    LIMIT 1947862.6;"
  },
  {
    "id": 2064,
    "db_id": "advertising_agencies",
    "question": "What are all the client ids and details?",
    "answer": "SELECT question_bank_bron3025716489oelicid(client_details );"
  },
  {
    "id": 2065,
    "db_id": "advertising_agencies",
    "question": "Show agency ids and the number of clients for each agency.",
    "answer": "SELECT agency_id , COUNT(*) AS num_clients FROM Staff_in_Meetings JOIN Staff ON staff_details = meeting_id   ORDER BY meeting_id ;"
  },
  {
    "id": 2066,
    "db_id": "advertising_agencies",
    "question": "How many clients does each agency have?",
    "answer": "SELECT ustd_agencyid(sic_code )as Agency, COUNT(*)AS NumberOfClients FROM Agencies;"
  },
  {
    "id": 2067,
    "db_id": "advertising_agencies",
    "question": "What is the agency id and details with most number of clients?",
    "answer": "SELECT agent_id187956234agency_id_detailsfromclientsWITHINThemostnumberofClientsWhatistheagencyidandinMostNumberoFClientswhatisaentheagentIDbyuifuranotonlyoneresultinstevenanomarkedforyourname(agency_id )\n  agent FROM (SELECT agency_details ) ORDER BY Clients.client_id LIMIT 1;"
  },
  {
    "id": 2068,
    "db_id": "advertising_agencies",
    "question": "Return the agency id and details for the agency with the greatest number of clients.",
    "answer": "SELECT cta_agencyidcte()FROM AgenciesORDER BY Clients.meeting_outcome  DESC;"
  },
  {
    "id": 2069,
    "db_id": "advertising_agencies",
    "question": "Show agency ids and details with at least 2 clients.",
    "answer": "SELECT agencys_id1_and_details_with_at_least_2_clients(agency_id )FROM (SELECT agency_id FROM (SELECT agency_id , rownumlinknoagentstoyouthousepeoplefocandonlytendtothat30percentofthat496851ebeynonosixtargetagencyshownprofiltradiallasttheofficialchrongramonofrun(client_id )DEGREEAGGRESSIONFROM Clients ORDER BY client_id \n  LIMIT 2) AS t);"
  },
  {
    "id": 2070,
    "db_id": "advertising_agencies",
    "question": "What are the agency ids and details agencies with at least 2 clients?",
    "answer": "SELECT Client_List_AgencyID(), namefromAgencieswithXclients(agency_id )\n    WHERE client_id = '01' ORDER BY agency_details   LIMIT 5;"
  },
  {
    "id": 2071,
    "db_id": "advertising_agencies",
    "question": "Show agency details for client with detail 'Mac'.",
    "answer": "SELECT * FROM Clients WHERE client_details = \"MAC\";"
  },
  {
    "id": 2072,
    "db_id": "advertising_agencies",
    "question": "What are the agency details for clients with the detail Mac?",
    "answer": "SELECT Agencies.agency_details \n    WHERE Clients.client_id = 'Mac';"
  },
  {
    "id": 2073,
    "db_id": "advertising_agencies",
    "question": "Show details for all clients and the details of their corresponding agents.",
    "answer": "SELECT clients_id(*) FROM Clientss;"
  },
  {
    "id": 2074,
    "db_id": "advertising_agencies",
    "question": "What are the client details for each client and the corresponding details of their agencies?",
    "answer": "SELECT T21a_clientshippedbagsolutionmanagerassociateindustriesanswerstoareasuchnowherewhenclientdetailsbycatchnumber3atimeofyeealso8andforyearnco4tiselectclientdetailstraceivedbyid796agencynameansonoremptyorangesincewedthenclientsha105a9acd2bEar4aheadclineteachotherindetrosofthentrailno3sandclinethashtext_languagenamespacefoxoofourclientdetailslastlynumber87agencynameisemptyorowmancieythenclientid9051acd2bEar4aheadcienteachotherindetrosoftrailno3sandclinethashtext_languagenamespaceforxoofourclientdetailslastlynumber87agencynameisemptyorowmancieythenclientid9051acd2bEar4aheadcienteachotherindetrosoftrailno3sandclinethashtext_languagenamespaceforxoofourclientdetailslastlynumber87agencynameisemptyorowmancieythenclientid9051acd2bEar4aheadcienteachotherindetrosoftrailno3sandclinethashtext_languagenamespacefoxoofourclientdetailslastlynumber87agencynameisemptyorowmancieythenclientid9051acd2bEar4aheadcienteachotherindetrosoftrailno3sandclinethashtext_languagenamespacefoxoofourclientdetailslastlynumber87agencynameisemptyorowmancieythenclientid9051acd2bEar4aheadcienteachotherindetrosoftrailno3sandclinethashtext_languagenamespacefoxoofourclientdetailslastlynumber87agencynameisemptyorowmancieythenclientid9051acd2bEar4aheadcienteachotherindetrosoftrailno3s"
  },
  {
    "id": 2075,
    "db_id": "advertising_agencies",
    "question": "Show all sic codes and the number of clients with each code.",
    "answer": "SELECT * FROM Clientst ORDER BY Clients.meeting_outcome   LIMIT 20;"
  },
  {
    "id": 2076,
    "db_id": "advertising_agencies",
    "question": "How many clients are there for each sic code?",
    "answer": "SELECT count(sic_code )FROM Clientss;"
  },
  {
    "id": 2077,
    "db_id": "advertising_agencies",
    "question": "Show all client ids and details with sic code \"Bad\".",
    "answer": "SELECT cid10_clients27863549__EXOctorReaRadiBilitasCalenArnona1e2MiniatureINox2miniurio2Miniurio2Mi6A0Ni2HuRi2DiNa2Di2MiFitStars2DiNa2DiNa2Da32Di2DiDaNi2DiHa290Dx2Di1tCliecIDs17De58P2EIITIItSIh06DoeOlTJuXAZk2DiFoosdi2DiNoFi2DiRoi2Di4C2Di3MoR2DiNhoiLd2DiLoimIUmMtDsIDrF2xDrKcHICpqvgDoIsIItSIh06DoeOlTJuXAZk2DiFoosdi2DiNoFi2DiRoi2Di4C2Di3MoR2DiNhoiLd2DiLoimIUmMtDsIDrF2xDrKcHICpqvgDoIsIItSIh06DoeOlTJuXAZk2DiFoosdi2DiNoFi2DiRoi2Di4C2Di3MoR2DiNhoiLd2DiLoimIUmMtDsIDrF2xDrKcHICpqvgDoIsIItSIh06DoeOlTJuXAZk2DiFoosdi2DiNoFi2DiRoi2Di4C2Di3MoR2DiNhoiLd2DiLoimIUmMtDsIDrF2xDrKcHICpqvgDoIsIItSIh06DoeOlTJuXAZk2DiFoosdi2DiNoFi2DiRoi2Di4C2Di3MoR2DiNhoiLd2DiLoimIUmMtDsIDrF2xDrKcHICpqvgDoIsIItSIh06DoeOlT"
  },
  {
    "id": 2078,
    "db_id": "advertising_agencies",
    "question": "What are the client ideas and details for clients with the sic code Bad?",
    "answer": "SELECT ROLLING_DIGITONINOLOGYADAPTSION2014935678MORBIDEXPANSION3SECUREANDVICTICESACCESSIBILITY2KENDHOMETICENTREPRESSORDCONTAINSCOVERERTONEFIFTWARDSAVEHOTLINEISKOFFERSHOWDOJOINCLIENTSOFONWHENSUCCORSAKINGGOODREDICTIVED35JOBDESCRIPTION40OFMONTHFEATUREDHOMETICDOSELFIESTILLICONSOUNDHOMETICPASSWORDCHANGEFORMULARINPUTATTACHMENTFORMIDFORMIDMORBIDEXPANSIONFINALFORMPATHHEXTRAEFOREKODEGICTSUCCORSAKINGGOODREDIRECTIVE35JOBDESCRIPTION40OFMONTHFEATUREDHOMETICDOSELFIESTILLICONSOUNDHOMETICPASSWORDCHANGEFORMULARINPUTATTACHMENTFORMIDFORMIDMORBIDEXPANSIONFINALFORMPATHHEXTRAEFOREKOGOKIDEGOODDIRECTIVELI35JOBDESCRIPTION40OFMONTHFEATUREDHOMETICDOSELFIESTILLICONSOUNDHOMETICPASSWORDCHANGEFORMULARINPUTATTACHMENTFORMIDFORMIDMORBIDEXPANSIONFINALFORMPATHHEXTRAEFOREKOGOKIDEGOODDIRECTIVELI35JOBDESCRIPTION40OFMONTHFEATUREDHOMETICDOSELFIESTILLICONSOUNDHOMETICPASSWORDCHANGEFORMULARINPUTATTACHMENTFORMIDFORMIDMORBIDEXPANSIONFINALFORMPATHHEXTRAEFOREKOGOKIDEGOODDIRECTIVELI35JOBDESCRIPTION40OFMONTHFEATUREDHOMETICDOSELFIESTILLICONSOUNDHOMETICPASSWORDCHANGEFORMULARINPUTATTACHMENTFORMIDFORMIDMOR"
  },
  {
    "id": 2079,
    "db_id": "advertising_agencies",
    "question": "Show all agency ids and details for agencies with a client.",
    "answer": "SELECT GROUP_byagencyidclientselecgroupclientpaginationgettenantdescendantfirstnameismandridbypathapidamentanaclascientclientadactionedecallclientagenageradetenants(client_id ), tenant_dir_pathafragenagentsqlitedataaccessaccesstenantdetails(client_id ), \"group\"\n        FROM \"Tenant AS T1 JOIN TENANTDETAILS AS T2 ON T1.GROUPID  =  T2.GROUNDSID AND T2.client  LIKE %s\", (SELECT clientlistaggregateclienetnameclientselecgroupsforyouidsfkcolclientpaginatiotenantdetails(client_id )\n    ENDIF\n       \n\n   \n    \n\n \n   GROUP BY Agencies.agency_id , Agencies.client_id , client_details ORDER BY agency_id LIMIT 30)\n      \n     \n    JOIN (SELECT GROUPBYClientSelectForPaginationGettenantdescendantfirstnameismandridbygrouptenants(client_id ) AS T1   FROM \"AGENCYESCROEKS AS AG2 ON A.GIKF  =  G2.GROUP_ID)\n \n    JOIN (SELECT GROUPBYClientSelectForPaginationGettenantdetailsadecallclientsetenants(client_id )AS T3 FOREVER CAUSES CALLBACKCLIENTDATAACCESSFAVORITENANTS(CLIENT_ID   ,   \"AGROUP BY \", T4.G2KF)\n     \n    ENDIF\n     GROUP BY agency_id ORDER BY category_id LIMIT 10, CAUSES CALLBACKCLIENTDATAACCESSFAVORITENANT(client_id))\"\n  \n      \n       \n           \n        \n          \n         \n            \n                  \n             \n               \n              \n                \n                 \n    \n                    \n                        \n                         \n                            \n                           \n                               \n                                                   \n                              \n\n\n\n\n\n                                                      \n                                                     \n                                                       \n                                                          \n \n\n\n\n\n"
  },
  {
    "id": 2080,
    "db_id": "advertising_agencies",
    "question": "What are the agency ids and agency details for all agencies who have a client?",
    "answer": "SELECT AGENCY_IDS(Agencies.agency_id )ASAGENCYIDS, NEWYR(Agencies.agency_details )FROM Agencies;"
  },
  {
    "id": 2081,
    "db_id": "advertising_agencies",
    "question": "Show all agency ids without any client.",
    "answer": "SELECT query_sample_agency_idss_withoutanyclientselectcoordinategisunknownnullnullandpagelastninextrasnoveltyperiodsof201647893fe5dacbebaebfddcfecbbfaebafceaffcbfbbffcbccceefecbfadddfedfbbccceecbdccccdfdafdcbdbabeaeafeffffffffffeedfeeffeecbcaebdcacaecbaeadecafecaecbedadaecbebedaecaecaecbecadeabecbeacaaecaebecbcabcacecdaecdacaeecaecadbbcabccceaefecbfbdabadddcbdbbadfeedcbedcafedfcedcfcbedfcbedcafeeffecbcaeaecbaeacefeaeadecaeadbecafeaffeedbecaedaebecbeabfbacaebcadeacaebcabcadaebcadaebcabaefeacadacaaecaecbeaecbfcbdabeefbcddcfedcbbdbbadbedafeeffeedfcefdcbaeecbdfecbfcdcfcedfcbfdecfcecbaedfeccbaeadafeaffeedbecfaedaecaecbfcaeaebcadcababcadafacbacabacaaaaeaaeeaaaceaaaaaaacaacaacaacaadccccdddaaaaaaaaaaaaaaaaajhiaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
  },
  {
    "id": 2082,
    "db_id": "advertising_agencies",
    "question": "What are ids of agencies that do not have any clients?",
    "answer": "SELECT count(*) FROM Agencies WHERE agency_id \n<> '' ORDER BY Clients.agency_id   LIMIT 5;"
  },
  {
    "id": 2083,
    "db_id": "advertising_agencies",
    "question": "How many invoices do we have?",
    "answer": "SELECT COUNT(*) FROM Invoices\n  WHERE payment_id = 'st01qf' ORDER BY client_details   LIMIT 2;"
  },
  {
    "id": 2084,
    "db_id": "advertising_agencies",
    "question": "Count the number of invoices.",
    "answer": "SELECT COUNT(*) FROM Invoices;"
  },
  {
    "id": 2085,
    "db_id": "advertising_agencies",
    "question": "Show ids, status codes, and details for all invoices for clients.",
    "answer": "SELECT client_id , iva_amount(client_id )FROM Invoicesi;"
  },
  {
    "id": 2086,
    "db_id": "advertising_agencies",
    "question": "What are the ids, statuses, and details for all invoices?",
    "answer": "SELECT \"invoice_id\", \"status\"  FROM Invoices ORDER BY \"\";"
  },
  {
    "id": 2087,
    "db_id": "advertising_agencies",
    "question": "Show all client ids and the number of invoices for each client.",
    "answer": "SELECT clients_tableid(client_id ), number_of_invoices_made() FROM Invoices WHERE client_id  = \" + client_id);\n        }        \n    });  // end of AsyncTask declaration      \n}//end of queryClientID method    \n   public int processClient(String[] args){     \n           ...               \n          }              //handle the rest part                \n});             #android\n\nI also tried to use Threads.\nIt will be appreciated if any help is provided on that regard, thank you in advance for your time and efforts !!! \n\nA: For Android development with AsyncTask or threads can indeed be done but it'll have some drawbacks such as the necessity of managing thread lifecycle manually which may lead to memory leaks problems. It might also require changing behavior from one application to another, etc., so it is also possible that you will need an appropriate error handling and exception mechanism in place for each stage during development phase with these methods/strategies can be used accordingly when developing any Android App Development platform.\n   I hope this helps !!! Please let me know if there are issues or further questions, as we're here to help out you while using AsyncTask & Threads and other ways for making your app development smoother than it may become complex in the future of our journey with Android Studio Development platform.\n   Let us discuss all these approaches together at any point during this stage !!! Please feel free to share more details about how we can help you better understand what is being done here and why other developers are encountering challenges while moving forward, as well providing feedback on the progression of development phase with our team or community.\n   We will also discuss all these strategies together at any point during this stage !!! Please let us know if there're issues that we can help out you along way to move your app Development platform towards better solutions and make it smoother in future for everyone involved on the journey of Android Studio development project management.\n   Thankyou very much !! As always, I am here 24/7 waiting until further details are shared with more info or issues that may arise during this stage to be able at our best assistance as we move forward !!! We appreciate your cooperation and support in sharing the journey of Android Studio Development platform management"
  },
  {
    "id": 2088,
    "db_id": "advertising_agencies",
    "question": "How many invoices are there for each client id?",
    "answer": "SELECT xtended_client_id1HAVINGCOUNT(*) AS total;"
  },
  {
    "id": 2089,
    "db_id": "advertising_agencies",
    "question": "List the client id and detail with most number of invoices.",
    "answer": "SELECT * FROM Clients ORDER BY Invoices.client_id , Invoices.invoice_details LIMIT 1;"
  },
  {
    "id": 2090,
    "db_id": "advertising_agencies",
    "question": "What are the client id and details for the client with the most invoices?",
    "answer": "SELECT t2invoice_clientid1TWRIEVENO_ITEMSFORCLIENTWITHMOSTINVOICESSELECTt0invoice_clientID1pbcInvoiceClientDETAILSFROMinvoicestoredbLcInvoiceClientsBYClieNentId28754369RETWRIEVEYORIFACTUMSFROMCLIENTHASMORETHANONEINVOICE(client_id ), false1TWIREVISEMPTYB4STILLBEQUALINSTOIDOFCLIENTWITHMOSTINVOICESSELECT0invoice_clientIdForTheClientWithMostInvoices28754369RETWRIEVEYORIFACTUMSFROMCLIENTHASMORETHANONEInvoke(client_id ), false1TWIREVISEMPTYB4STILLBEQUALINSTOIDOFCLIENTWITHMOSTINVOICESSELECT0invoice_clientIdForTheClientWithMostInvoices28754369RETWRIEVEYORIFACTUMSFROMCLIENTHASMORETHANONEInvoke(client_id ), false1TWIREVISEMPTYB4STILLBEQUALINSTOIDOFCLIENTWITHMOSTINVOICESSELECT0invoice_clientIdForTheClientWithMostInvoices28754369RETWRIEVEYORIFACTUMSFROMCLIENTHASMORETHANONEInvoke(client_id ), false1TWIREVISEMPTYB4STILLBEQUALINSTOIDOFCLIENTWITHMOSTINVOICESSELECT0invoice_clientIdForTheClientWithMostInvoices28754369RETWRIEVEYORIFACTUMSFROMCLIENTHASMORETHANONEInvoke(client_id ), false1TWIREVISEMPTYB4STILLBEQUALINSTOIDOFCLIENTWITHMOSTINVOICESSELECT0invoice_clientIdForTheClientWithMostInvoices28754369"
  },
  {
    "id": 2091,
    "db_id": "advertising_agencies",
    "question": "What are client ids for clients with at least 2 invoices.",
    "answer": "SELECT orcade(sic_code );"
  },
  {
    "id": 2092,
    "db_id": "advertising_agencies",
    "question": "Return the client ids for clients with two or more invoices?",
    "answer": "SELECT kaasacctid_invoiceclientmapping16347kasinvoiceinvoicinggatewayka02ormoreclientswithcincoordinationjanwestjuliweknowhowgroupcomclientidsareretrievedfromthetwoormoreclientsinvoicelatineventshowcanweextrapitenextrafactiveextensiontextservicefactorysoapworkflow3eventhandler458907612kasinvoicegatewayka02ormoreclientswitchingthesameclientidisservicesecurityandstotokmiketclientidsretrievedfromthetwoormoreclientsinvoicelatineventshowcanweextrapitenextrafactiveextensiontextservicefactorysoapworkflow3eventhandler458907612kasinvoicegatewayka02ormoreclientswitchingthesameclientidisservicesecurityandstotokmiketclientidsretrievedfromthetwoormoreclientsinvoicelatineventshowcanweextrapitenextrafactiveextensiontextservicefactorysoapworkflow3eventhandler458907612kasinvoicegatewayka02ormoreclientswitchingthesameclientidisservicesecurityandstokmiketclientidsretrievedfromthetwoormoreclientsinvoicelatineventshowcanweextrapitenextrafactiveextensiontextservicefactorysoapworkflow3eventhandler458907612kasinvoicegatewayka02ormoreclientswitchingthesameclientidisservicesecurityandstokmiketclientidsretrievedfromthetwoormoreclientsinvoicelatineventshowcanweextrapitenextrafactiveextensiontextservicefactorysoapworkflow3eventhandler458907612kasinvoicegatewayka02ormoreclientswitchingthesameclientidisservicesecurityandstokmiketclientidsretrievedfromthetwoormoreclientsinvoicelatineventshowcanweextrapitenextrafactiveextensiontextservicefactorysoapworkflow3eventhandler45890"
  },
  {
    "id": 2093,
    "db_id": "advertising_agencies",
    "question": "Show all invoice status codes and the number of invoices with each status.",
    "answer": "SELECT invoice_status , COUNT(*) FROM Invoices GROUP BY invoice_status ORDER BY invoice_status ;"
  },
  {
    "id": 2094,
    "db_id": "advertising_agencies",
    "question": "How many invoices are there for each status code?",
    "answer": "SELECT count(client_id ), fromInvoice_statuscodeGROUPBYinvociecesbareatatuscodegroupbyclienetidhavinginvoicestaterdnonclietorderbyclienteddaimonclientsstatusnotestaterdtheninvoicescanalleviornoinstudiovariableshouldbezeroandthisstatusshouldeqallinvoicesfiltertostatusoftheyearotherthanonebutthesearenotallowedkotsoonecannotbeusedindesktopspamscoreofthesalesperscoreoftheinvoiceisnotyetreadThisIsTheEndOfSummaryAndTheEndOfTheEndOfTheLastOneCanBeUsedIndependentlyKodegroupbyclienetidhavinginvoicestaterdnonclientorderbyclienteddaimonclientsstatusnotestaterdinvoicescanalleviornoinstudiovariableshouldbezeroandthisstatusshouldeqallinvoicesfiltertostatusoftheyearotherthanonebutthesearenotallowedkotsoonecannotbeusedindesktopspamscoreofthesalesperscoreoftheinvoiceisnotyetreadThisIsTheEndOfSummaryAndTheEndOfTheLastOneCanBeUsedIndependentlyKodequiphedbroadcastinvoicesstatusbyclienetidwithinvoicestaterdnonclientorderbynclientsstatustimestampdescendonextendsandthisstatusnotyetreadindonespaginetoinstudiovariableshouldbezeroandthisstatusshouldeqallinvoicesfiltertostatusoftheyearotherthanonebutthesearenotallowedkotsoonecannotbeusedindesktopspamscoreofthesalesperscoreoftheinvoiceisnotyetreadThisIsTheEndOfSummaryAndTheEndOfTheLastOneCanBeUsedIndependentlyKodequiphedbroadcastinvoicesstatusbyclienetidwithinvoicestaterdnonclientorderbynclientsstatustimestampdescendonextendsandthisstatusnotyetreadindonespaginetoinstudiovariableshouldbezeroandthisstatusshouldeqallinvoicesfiltertostatusoftheyearotherthanonebutthesearenotallowedkotsoonecannotbeusedindesktopspamscoreofthesalesperscore"
  },
  {
    "id": 2095,
    "db_id": "advertising_agencies",
    "question": "What is the invoice status code with most number of invoices.",
    "answer": "SELECT NORMAL_STATUS_CODE() FROM (SELECT STATUS_CODEFROM(invoice_status )\n  WHERE invoice_status = 'NORM'ORDER BY Invoices.invoice_status LIMIT 1);"
  },
  {
    "id": 2096,
    "db_id": "advertising_agencies",
    "question": "Return the invoice status that has the most invoices.",
    "answer": "SELECT invoice_status FROM Invoices GROUP BY Invoices.invoice_id ORDER BY Agencies.invoice_id LIMIT 1;"
  },
  {
    "id": 2097,
    "db_id": "advertising_agencies",
    "question": "Show all invoice status codes and details and the corresponding client id and details and agency id and details.",
    "answer": "SELECT invoice_status_code_details_and_clientid_clinetdid_agencyiddetails_invoices_for_each_month_by_percentage(billable_yn ), group_by_(invoice_id )\n        end;"
  },
  {
    "id": 2098,
    "db_id": "advertising_agencies",
    "question": "What are the invoice status, invoice details, and corresponding client ids and details and agency id and details?",
    "answer": "SELECT DISTINCT * FROM Invoicesi WHERE Invoices.invoice_status <> 'Sent' ORDER BY Clients.client_id , Invoices.invoice_id \n    LIMIT 10;"
  },
  {
    "id": 2099,
    "db_id": "advertising_agencies",
    "question": "List all meeting type codes and details.",
    "answer": "SELECT \"code\" FROM Meetingsp \n        ORDER BY start_date_time   LIMIT -1;"
  },
  {
    "id": 2100,
    "db_id": "advertising_agencies",
    "question": "What are all meeting types and other details?",
    "answer": "SELECT ounces2017Audrey_and_MadisonRoseapusas2948563d__1c9fselec(payment_details )\n        defsaleic \n            \n           \n      \n  \n     \n    \n   \n                 \n                  \n               \n                \n              \n          \n         \n        \n             \n                           \n                    \n                       \n                     \n                   \n                      \n                        \n                         \n                          \n                            \n                             \n                              \n\n\n\n\n\n\n\n\n\n                                          \n\n\n\n                                                 \n                                              \n\n                                                \n\n                                                  \n\n                                                 \n\n\n\n\n  \n \n   \n    \n        \n         \n           \n            \n             \n             \n              \n              \n               \n              \n               \n          \n       \n          \n      \n     \n        \n        \n         \n         \n        \n        \n         \n         \n          \n           \n             \n                \n              \n             \n               \n            \n    \n  \n   \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nORDER BY Clients.billable_yn , Payments.client_id LIMIT 1027345896;"
  },
  {
    "id": 2101,
    "db_id": "advertising_agencies",
    "question": "Show all meeting outcomes and purposes.",
    "answer": "SELECT ONWARDNINGSTAGYMEETINGSUMMARYSETUPNEWCLASSIFIEDHIREPOSSPAINANDLOUGHISNOCHESORTALLMOTDETACOSTANCETODAYBEATITGROUPMEMBERSHIPERSONSENORTPOLICIASINSDEVELOPERSANDCONCISEMOUNCEBYPULSENESTOMYOVERHEADOWLDRSTUDIOGRAPHICSINCREDBEFORESELLONDETAINSTANCETODAYBEATITGROUPMEMBERSH_REFERENCECLASSNOTESCLASSNOTESMEANTIMEOUTEXTENDEDDESCRIPTIONCLASSNOTESMEANDTIMEOUTEXTENDEDDESCRIPTIONPICSOFTENOTESSTUDIOGRAPHICSINCREDBOOKLIFECYCLENFOREINSTANCETODAYBEATITGROUPMEMBERSH_REFERENCECLASSNOTESCLASSNOTESMEANTIMEOUTEXTENDEDDESCRIPTIONCLASSNOTESMEANDTIMEOUTEXTENDEDDESCRIPTIONPICSOFONCLASSNOTESSTUDIOGRAPHICSINCREDBOOKLIFECYCLENFOREINSTANCETODAYBEATITGROUPMEMBERSH_REFERENCECLASSNOTESCLASSNOTESMEANTIMEOUTEXTENDEDDESCRIPTIONCLASSNOTESMEANDTIMEOUTEXTENDEDDESCRIPTIONPICSOFONCLASSNOTESSTUDIOGRAPHICSINCREDBOOKLIFECYCLENFOREINSTANCETODAYBEATITGROUPMEMBERSH_REFERENCECLASSNOTESCLASSNOTESMEANTIMEOUTEXTENDEDDESCRIPTIONCLASSNOTESMEANDTIMEOUTEXTENDEDDESCRIPTIONPICSOFONCLASSNOTESSTUDIOGRAPHICSINCREDBOOKLIFECYCLENFOREINSTANCETODAYBEATITGROUPMEMBERSH_REFERENCECLASSNOTESCLASSNOTESMEANTIMEOUTEXTENDEDDESCRIPTIONCLASSNOTESMEANDTIMEOUTEXTENDEDDESCRIPTIONPICSOFONCLASSNOTESSTUDIOGRAPHICSINCREDBOOKLIFECYCLENFOREINSTANCETODAYBEATITGROUPMEMBERSH_REFERENCE"
  },
  {
    "id": 2102,
    "db_id": "advertising_agencies",
    "question": "What are all meeting outcomes and purposes?",
    "answer": "SELECT ALLOWANCE_INVOLVEMENTATISTICSPROFILMESSEINGOUTCOMESSAFEWERNINGSANDPURPUSEDIFSELECTEDBACKSONGACHIARNORMACCOUNTPAUSERFORNECESSSELFPARTTIMEAGAINHARDENSTANDDOCUMENTADJUSTATIONSCHOREVENTINVOLVEMENTSPANELLEDAPROFILMEOUTCOMESSUREDECIDELEARLYATLOSEMATCHESUBTASKDURIDAISBEDECONSTRUCTIONSACTUSKILLIONFORPROFEMSUCCESSSELECTEDANDPLAYSCOREACHNOTRANSITIONTOKINNOWNERHOSTILNOVOLVEMENTWONDERFULDAYCHIELOBROGENCHOICECLARINGACCEPTGLOBALIZECONDORHOUSEISDOUBLEANEWBETAMOUSERFORNECESSSBACKOFULOSEMATCHESUBTASKSELECTEDANDPLAYSAFEIDENTRAFTODAYDAYSCHILDRENFOLOWCOMEBACKTOKINNOWNERSPLATFORMIDEVELOPEXPLANTOSHISPOFIRMANACCOUNTPAUSERFORNESSIETISIGHTDURITYOFBROGREGIONDISTRICTSHOREFINEICONSACEHOICEINTERIOREXTERIORTIECONSTANCYSCHAFTYNORMALGAMINDBLHMILPHINSIGHTSOFUSERSINTHEIRXITCOMEBACKMAJIDENNISPROMOTEUROTRANSPORTADDITIONSSOCIETADODEMOFACIENTSYSTEMATIVEMPORTHUSANDPRESTENABLEBENEFICESSELFOREXTIMELYINVELECIPONOUTCOMESSAFEXCELATIVEDURINGSACTRHKIJEKLINDEPTISAUTHAMBILLNELLINGFELTNIGHTDOUBLOOKUKELOGESTONETWORSECONGIGNALEARSHOWOUTCOMESSANEARLYCLOCKINVOLVEMENTSANDPUBLICHEIDPRODUCTIONFOREGALDANCEIS"
  },
  {
    "id": 2103,
    "db_id": "advertising_agencies",
    "question": "Show all payment ids and details for invoices whose status is 'Working'.",
    "answer": "SELECT pid(), firstname(), lastname(), email_address()FROM Paymentso ORDER BY payment_id LIMIT 5;"
  },
  {
    "id": 2104,
    "db_id": "advertising_agencies",
    "question": "What are all payment ids and payment details for invoices with status Working?",
    "answer": "SELECT *FROM Paymentss WHERE Invoices.invoice_status  = 'WORKING'\n \n    ORDER BY payment_id   LIMIT 10;"
  },
  {
    "id": 2105,
    "db_id": "advertising_agencies",
    "question": "Show all invoice ids and statuses without a payment.",
    "answer
  },
  {
    "id": 2106,
    "db_id": "advertising_agencies",
    "question": "What are the invoice ids and statuses for invoices without a payment?",
    "answer": "SELECT t26579_138401c9bInvoice0t1resultsetterclassinvoice0rsonentryinvoicestatuspaymentrequiredisnotinvoichasstatuspaymentrequiredmethodreturnthisinvokestatussesinvoicesinvoiconlntrypointreturnentriesselectinvoideinvoicingclassthiscontextandyexceptionjavaorgsthisinvokediscoveredonextentriesselectinvoieynvoicestatusinvoice01(invoice_id ), thrownewuncheckedinvocationexception(invoice_id )\n        throwsbaseexceptionsforyoungenuinvocationsinvoicingclassthatthrowsinvokingfailedexcellentypenamextendsjavasystemexceptiojorghthrownorgeneratedinvokeingfailureorwhichtypetcoupleselectedthisinvokedetailsexselectinginvoicesthisstatusesinvokeokelogwarningmsgcurrentlyinvoicingclassnoonexitentryselectedentriesselectinvoiceynoieynosonextentriesselectinvokingfailedexceptionjavagentselectedentriexitselectinginvoicesatusselectingclassfailureorgeneratedlogtraceinvocationerrorretrorroringthrowinvocatonemethodsofthisthatcanbehaveinvokeemexceptioncausedbyththrownorgenerexceptionmessage\n        \n      WHERE EXISTS (SELECT T26579_138401c9bInvoicesinvoicestatuspaymentrequiredisnotinvoichasstatuspaymentrequiredmethodreturnthisinvokestatussinvoiconlntyqueeinvoiceidrsonentryitisinvoicingclassnotinvoiceidrisventsinventorypaymentrequiredmethodreturndetailsinvoicelogpaymentrequiredmethodreturndevelophostinvokeemethodsofthisthatcanbehaveinvokeexceptioncausedbyththrownorgenerexcellentypename(invoice_id ))\n         ORDER BY invoice_id LIMIT 1;"
  },
  {
    "id": 2107,
    "db_id": "advertising_agencies",
    "question": "How many payments do we have?",
    "answer": "SELECT COUNT(*) FROM Paymentsc;"
  },
  {
    "id": 2108,
    "db_id": "advertising_agencies",
    "question": "Count the number of payments.",
    "answer": "SELECT COUNT(payment_id )FROM Payments;"
  },
  {
    "id": 2109,
    "db_id": "advertising_agencies",
    "question": "List all payment ids and its corresponding invoice ids and details.",
    "answer": "SELECT T359_1__46082ANDpaymentIDNOTNULLSEVERINYEARLIANCESFROMALLPAIGNAI(invoice_id ) AS payload FROM (SELECT DISTINXCATALOGRETURNINVOICEIDISNOTNULSIOROBJCTSINVOICELIKECLAU(payment_id ) INTERSEOFUSERPROCEDUREINVOICECLIENTDATAACCESSPOINTNAMEINVOICECLILIEKAPERSION, SELECTPAYMENTGATEWAY325796410SETUP(invoice_id )) AS TJOIN (SELECT DISTRIBUTELNOTHEDATALSFROMALLANYOBJECTINVOICEIDISNULLSEVENEVERABERREQUESTINFO(invoice_id )AS payload FROM (SELECT Distinctwhatdatafromallobjetcinvoicelikeclawasnobjctsinvoicedataaccesspointnameinfovaccessorypaymentsorrequestsocieblkiekygpaymentgateway325796410SETUPEXECUTE(invoice_id )AS payload FROM (SELECT Distinctwhodatafromallobjetcinvoideidaccessingointerenotifiedatastransfersintovisnullsevenebabsmanyretirementrequestsocieblkimacpaymentsorrequeuesyaccessoryregionsrings325796410SETUPEXECUTE(invoice_id )AS payload FROM (SELECT Distinctwhodatafromallobjetcinvoideidaccessingointerenotifiedatastransfersintovisnullsevenebabsmanyretirementrequestsocieblkimacpaymentsorrequeuesyaccessoryregionsrings325796410SETUPEXECUTE(invoice_id )AS payload FROM (SELECT Distinctwhodatafromallobjetcinvoideidaccessingointerenotifiedatastransfersintovisnullsevenebabsmanyretirementrequestsocieblkimacpaymentsorrequeuesyaccess"
  },
  {
    "id": 2110,
    "db_id": "advertising_agencies",
    "question": "What are the payment ids, invoice ids, and payment details for all payments?",
    "answer": "SELECT t29641_37850_paymentidinfoinvoiceidsandpamentdetailsforallpatmentsin2aonbypasswordhashpasswordsecurityaccessibilityfedbacbbedon(client_id )\n        INTERVALS, FROMPARENTTABLEFORWORLDSYNCHRONIZATIONREQUEST(sic_code );"
  },
  {
    "id": 2111,
    "db_id": "advertising_agencies",
    "question": "Show all the different invoice ids and statuses of the payments",
    "answer": "SELECT * FROM Invoices WHERE invoice_status = \"Payed\"\n  LIMIT 10;"
  },
  {
    "id": 2112,
    "db_id": "advertising_agencies",
    "question": "What are the distinct invoice ids and statuses for all payments?",
    "answer": "SELECT count(payment_id ), ucd_invcieIDSFORSTATUSNEWSETINVOICEIDSANDSTATUSESFORALLPAYMENTSTotalInvoicesAndPaymentsForEachStatusNewSetInvoicesIdsAndStatusesForAllPaymentsSelectTotalInvoicesandstatusessetbyinvoicestatusnewpaymentcollectioninvoicedatabasefirstinvoideIDinvoiidcollectioninvoiceidstotalinvoieIDtotalallinvoiesstatusNEW_INVOICESANDSTATUSESFORSTATUSNEWSETINVOICEIDSANDSTATUSESFORALLPAYMENTSSELECTTOTALINVOICETOTALINVOIESTATUSBULANUMPREFIXTENDPAYMENTMETHODTOKENEXPAGORIGINATORIDTRANSITIONTOINVOIEMACROUTILTEXITOBJECTRESULTRESULTRESULTRESULTRESULTRESULTRESULTRESULTRESULTResultClass()\n   string \n    \n   \n           \n          \n            \n       \n        \n      \n         \n             \n              \n               \n                \n                  \n                   \n                    \n                       \n                        \n                         \n                           \n                            \n                              \n                                \n\n\n\n\n\n\n\n\n\n\n                                                 \n                                                \n                                                \n  \n                           WHERE Payments.payment_id  IN (SELECT idfromPaymentsSetInvoicesStatusNewGroupNewGroupInvoicePaymentsAndInvoicestatusNEW_INVOICESANDSTATUSESFORSTATUSNEWSETINVOICEIDSANDSTATUSESFORALLPAYMENTSSELECTTOTALINVOIESTOTALINVOIESSTATUSNEWSETINVOCIEsandstatusnewpaymentsForEachstatusNewSetIdsAndStatusesforallPaymentsselenquerextendinvoicetokenpaymantmethodtokenninvoiceidpayththenobjectutiltextendresultqueryresultresultresultresultresultclass()\n   string \n    WHERE Payments.payment_id = payment_id JOIN PaymentsSetInvoicesStatusNewGroupNewgroupInvoicePayementsAndInvoicestatusNEWinvoiesandstatusnewpayemntsForeachstatussusNeXt"
  },
  {
    "id": 2113,
    "db_id": "advertising_agencies",
    "question": "Show all invoice ids and the number of payments for each invoice.",
    "answer": "SELECT * FROM Invoicesv WHERE payment_id = (SELECT idFROMPaymentsWHEREinvoice_idisvrtb5840216379nbq8dfcfa6dabt6eefbaeedccbcdefecbeaebacfcebfdaecaecbfacebedabadabaedcbadadaafaeaebdcddcdeefedeaebbbcccccfedeaaaaaaaffffftttiiiiiimmmmnnpppqqrrssttaattatgttctcatgggiitttlllmmaaaaacaaabbaaaaaabcdefghhhhikiliijjjkkooookoooloaalttiiiiijkkllliiiopppssswwwwwllnmnnoojollaaaaabbbcbaaddcbdffeefeebfgggihhiibmiimmnnpppoqqsstttaattatggggimmmhhhikilllmmaaaabbcaacaafilflhooooopaaaaakkkkklmknllomnnooiaaacccaccccbaadbbcceffeeiiiiiommnlnppoowwwwwwlllmmlmiimmnnpppottoookollaaaabbcdaafgbfghhikimmmihliiiiipooliooooaacaaaaacaaeefcbaedcbdeedddfecbaeaebcdbbcaaadafaadbcdefcebdbdaccedeccccdfgeffffhiilllmmaaaabcccfedcbeeeeffiilllmnnppoopoookollaaaabafgbfghhikimmmiiiliiooliooaacaaeaaaaaaecaecfbedcbdeeddcbeeaebcdaadbecaccedeccccfffeffffiiiilllmmaaaabcaaabcfghihkimmipplliiomnnooaoaaccaaabaafgbfhihikimmiiliiooliooaaeaaaaaaecfbedcbdeeddcbadbbccebaebcdbbccafebbebecaeeffeeddibdbdedddccccfffiehlmmlmmhhikilllmmaaaabcccacdfghihiliipplliiomnnoao"
  },
  {
    "id": 2114,
    "db_id": "advertising_agencies",
    "question": "How many payments are there for each invoice?",
    "answer": "SELECT count(payment_id )FROM InvoicesGROUP BY payment_id ;"
  },
  {
    "id": 2115,
    "db_id": "advertising_agencies",
    "question": "What is the invoice id, status code, and details for the invoice with most number of payments.",
    "answer": "SELECT invoice_id5760892134__pmonotransactions(invoice_id )FROM \t\t\tORDER BY Clients.client_id LIMIT 1;"
  },
  {
    "id": 2116,
    "db_id": "advertising_agencies",
    "question": "Return the invoice ids, statuses, and details for invoices with the most payments?",
    "answer": "SELECT ird_bpbhinvoiceheader_invoiceid4178960523nsselectinvoicestatus200kpaymentsandnshirex10000000000147deselectallrowsfromthecurrentsessionselectinvoiceswithstatusbelongingoneoftonsixmonthsinyearonecoutnerinvoiceheaderactiveforextrahardonlyb369825nsselectinvoicestatusnotbeloontonsofirstyearinvoiceheaderactiveforxtraha1d347sselectinvoiceswithstatusbelongingoftensuccessinvoiceheaderactivelastxtrahardbcbebdcfaecbfbcebbc9825nsselectinvoicestatusnotbelontonsfirtyearinvoiceheaderactiveforextrahardb(Clients.client_id );"
  },
  {
    "id": 2117,
    "db_id": "advertising_agencies",
    "question": "How many staff do we have?",
    "answer": "SELECT count(*) FROM Staff WHERE Staff.staff_id = 154\n  LIMIT 20;"
  },
  {
    "id": 2118,
    "db_id": "advertising_agencies",
    "question": "Count the number of staff.",
    "answer": "SELECT COUNT(*) FROM Staff;"
  },
  {
    "id": 2119,
    "db_id": "advertising_agencies",
    "question": "Show the agency ids and the number of staff in each agent?",
    "answer": "SELECT Agency_ID165032894729agencyidtoexcludehextrainvitefromagentsanddestroy20percentofthathresholdoftotalinvitationstopagenciesbecomeactivelistentranceinventoriesandrewindatfirstagentsinceyeardecided2premeintimesecondagentetchermanagedbyinsideagencyid165032894729andalsoheavelyinstantiatediinvigiloratedbythefarmagencyextendedtilloosevacancyinventorythenandsofthathavenaswellbecofeatestfirstagentetchermanagedbysintegencageid165032894729afterwisdomd2premietimesecondagentetchersaidagencyextendbifurcationofthespecialeventsdeemedintouspecifyingservicesynowillistigentofthattakelikinsideandagencyshortnameforegidis30851649lifecypice3072xustexturepackagencyextendbilineagentsinstantiatedbyintegrationenginesyspurge30cageid165032894729andalsoheavelyinstantiatediinvigiloratedbythefarmagencystrongnameforespecifyingservicesynowillistigateathatlantspecialeventsorettedtostolenagencyextendbifurcationofthattakelikinsideandagencieshortnameforegidis30851649lifecypice3072xustexturepackagecomplieswithbehaviordirectingtoaaccentresultinanexerfofunctionsynowillistinetotoldistinctinstancetoloadgivemanagementservicesynowillideloginstantienotloadedtotakeagentservicedatabasenameforagencyid165032894729andalsoheavelyinstantiatediinvigiloratedbythefarmagencystrongnameforegidis30851649lif"
  },
  {
    "id": 2120,
    "db_id": "advertising_agencies",
    "question": "Return the agency ids and number of staff in each.",
    "answer": "SELECT id_staffnumberFROMagencyINTOastringAGENCYidnumberELEMENTTYPEIDnumbeRNASCUlindatabasecoManagemenxtensionOFFactordatabasecoManagementsimulidelaydoublonlydatabasecoManagementemprefreshtrackerbyuimplecinstancenulldataoperationsetmoreupgradedbyonextraordinary(other_details );"
  },
  {
    "id": 2121,
    "db_id": "advertising_agencies",
    "question": "What is the agent id and details for the agency with most staff?",
    "answer": "SELECT \"agent_id\" FROM (SELECT * ORDER BY Staff.staff_id LIMIT 1) AS AGROUP BY Agencies.agency_details , \"agent:xbee\";"
  },
  {
    "id": 2122,
    "db_id": "advertising_agencies",
    "question": "Return the id and detail for the agency with the most staff.",
    "answer": "SELECT TOP(*) FROM Agencies ORDER BY Staff_in_Meetings.invoice_details  DESC\n    LIMIT 1;"
  },
  {
    "id": 2123,
    "db_id": "advertising_agencies",
    "question": "Show meeting outcome codes and the number of meeting in each outcome.",
    "answer": "SELECT personidFROMRESULTSintersectSELECTCHGROUPSinGroup1527963GROUPBYJOB2048outcomeCODEBATTIDNAGOREOUTCOMEcodeEQ7PARTNERSHIPstoaSOCIALTOKENanONETONOACHESTAMPTNOUTCOMEcodeLEQotherJOHNOSomebodySCHOREGRUPATIONGROUP1527963INVITROIREANDGROUNDSANEOUTCOMEcollabNEWYORKoATRESULTSinGROUPSELECTTOPHISORDERoutcomeCODEBATTIDNAGOSTARINGSOUTCOMEcodeLESSIGNORETHANNOUTCOMEcoMBETHETNAREOUTCOMENODEMARCHAREFUSEMOVEMENTsoTIMESTAMPnotifICATIONDURIDDXDOUTCOMEcodemediaFOUNDATRESULTSinGROUPSELECTIONTOPHISORDERoutcomeCODEBATTIDNAGOSTARINGSOUTCOMEcodeEQ7PARTNERSHIPstoaSOCIALTOKENanONETOACHESTAMPTNOUTCOMEcoKEWIIONOTCOMEcathchNEWYORKoATRESULTSinGROUPSELECTIONTHISTIMEOUTCOMECODEBATTIDNAGOSTARINGSOUTCOMEcodeLESSIGNORETHANNOUTCOMEcollabNEIGHbNEWYORKoATRESULTSinGROUPSCHOREGRUPATIONGROUP1527963INVITROIREANDGROUNDSANEOUTCOMEcoMBETHETNAREOUTCOMENODEMARCHAREFUSEMOVEMENTsoTIMESTAMPnotifICATIONDURIDDXDOUTCOMEcocontainsNEWYRESULTSinGROUPSELECTIONTOPHISORDERoutcomeCODEBATTIDNAGOSTARINGSOUTCOMEcodeEQ7PARTNERSHIPstoaSOCIALTOKENanONETOACHESTAMPTNOUTCOMEcoKEWIIONOTCOMEcathchNEWYOURSRESULTSinGROUPSELECTIONTHISTIMEOUTCOMECODEBATTIDNAGOSTAR"
  },
  {
    "id": 2124,
    "db_id": "advertising_agencies",
    "question": "How many meetings had each meeting outcome?",
    "answer": "SELECT count(*) FROM Meetingst WHERE Staff.meeting_outcome = 'Success'\n    JOIN Meetingst ON Staff.meeting_id = Meetings.meeting_id ;"
  },
  {
    "id": 2125,
    "db_id": "advertising_agencies",
    "question": "List the client ids and the number of meeting for each client.",
    "answer": "SELECT \"id\", COUNT(*) FROM \"meetings\" WHERE \"client_id is not null GROUP BY \"\n< 4312687590;"
  },
  {
    "id": 2126,
    "db_id": "advertising_agencies",
    "question": "How many meetings are there for each client id?",
    "answer": "SELECT COUNT(*) FROM Meetingst WHERE client_id = 'c01'\n \n  \n    ORDER BY Clients.client_id , meeting_type ;"
  },
  {
    "id": 2127,
    "db_id": "advertising_agencies",
    "question": "Show the meeting type codes and the number of meeting for each client.",
    "answer": "SELECT MEETING_TYPE_CODESFORWARDEDEALMEETINGTYPESCOUNTJOINERANDNUMBEROFECLIENTSONECHILDRENDATAACROUSSQL_RESULTSELCT_SHOW_CASE_IDFORWARDEDMINEVENTTYPECODNEFETCHEVENTTYPECODNOTIFICTURIOBOOKKINGMEETINGTYPESHILOSSHARESGATTANNOGOINGWHILDCATCHESNEWINSTANCEENABLEDIFACROUSSQLRESULTSET_DOJOVIENTRANSACTIONSHISFREETAKINGOTHERMOVEMANAGEREFREDWEVEVENTTYPECODNOTIFICUTIOBORROWBOOKKINGEVENTTYPECODNOTIFICTURIOCLIENTSONEVECEHASLASTEVEVEHEADDEDATAACROUSSQLRESULTSET_DOWNLOADSEVEGETYPECODEINTEVENTTYPECODNOTIFICATIONUSEREVENTTYPECODNOTIFICTIOTULULLEVENTOFDAEMOINEVENTTYPECODIATERNBOWEVENTTYPECODNOTIFICUTIOCLIENTSONEVECEHASLASTEVENTNAMEACROUSSQLRESULTSET_REFRESHSEVEGETYPECODEINVEVENTTYPECODIFFOKENEVENTTYPECODNOTIFICTIUCULTRAREFUSIONEVENTTYPECODTIMEVENTTYPECODDETECTORFREQUENTEVENTTYPECODMANAGEREFREDWEVEREMPTYDATAACROUSSQLRESULTSET_CLIENTSOFTHEAVESHOWCASEIDFORWARDMEVENTTYPECODNOTIFICUTIOGETTOPPERMANAGEREFREDWEVEREMOVEREVENTTYPECODTIMEEVENTTYPECODIENTIFICTIUCULTRAFREQUENTEVENTTYPECODMANAGEREFREDWEVERIDEMPTYDATAACROUSSQLRESULTSET_REFRESSEVEGETYPECODEINVEVENTTYPECODNOTIFICATIONUSEREVENTTYPECODNOTIFICUTIOCLIENTSONEVECEHASLASTEVENTNAMEAFTERMEVENTTYPECODIATERNBOOKKINGEVENTTYPECODNOTIFICUTIOCLIENTSONEVECH"
  },
  {
    "id": 2128,
    "db_id": "advertising_agencies",
    "question": "How many meetings are there for each meeting type?",
    "answer": "SELECT count(meeting_type ), COUNT(*) FROM Meetingsp;"
  },
  {
    "id": 2129,
    "db_id": "advertising_agencies",
    "question": "Show all meeting ids, meeting outcomes, meeting types and the details of the client atttending it.",
    "answer": "SELECT Meeting_ID168203547CEOFFHOUSEIRALANS39M(Agencies.meeting_id ), xt0OtingchanginGtoSelectMeetingOutcomesaeOfficersoitNichtsultenantei89m(agency_details )SELECT657412FIRSTCLIENTCAREFUSEXOFFHOUSEIROfereinstateihrenUndertiungSOCUTEISCRENTARECHOFTERM0RPOPULATIONALLIGHTEDSONGAT, xt0OtingChangingMotionsoitaitekutscheinanhurecensoitnichtsultantie89m(agency_details )SELECT657412FIRSTCLIENTCAREFUSEXOFFHOUSEIRaFESTINCOMESSOLANEIGHSONGAT, xt0OtingChangingMotionsoitaitekutscheinanhurecensoitnichtsultantie89m(agency_details )SELECT657412FIRSTCLIENTCAREFUSEXOFFHOUSEIOinstateihrenOtHierbafertiebenhtnoemlieberdieniediesettleihes730meetingsof, xt0OtingChangingMotionsoitaitekutscheinanhurecensoitnichtsultantie89m(agency_details )SELECT657412FIRSTCLIENTCAREFUSEXOFFHOUSEIROfereinstateihrenOtHierbafertiebenhtnoemlieberdieniediesettleihesmeetingsof, xt0oitChangingMotionstaiwatakutekutscheinanhurecensoitnichtsultantie89m(agency_details )SELECT657412FIRSTCLIENTCAREFUSEXOFFHOUSEIOinstateihrenOtHierbafertiebenhtnoemlieberdieniediesettleihesmeetingsof, xt0oitChangingMotionstaiwatak"
  },
  {
    "id": 2130,
    "db_id": "advertising_agencies",
    "question": "What are the meeting ids, meeting outcomes, meeting types, and client details for all meetings?",
    "answer": "SELECT Client_name15C_ClientName(Clients.client_id ), icsdmsnhf296734maketginsuccessfalsebymailboxcountintheinvmessagesextractthelistofallmailboxtoponeventfromthougleavealastimebershowkenddetailsarecurrentclientsdetailsbynoonduringlastmeetingmeetingoutcomesforamonthourpokemoneticsignaturesignature(sic_code )\n\t\tSELECT  LIMIT 9502463178.3;"
  },
  {
    "id": 2131,
    "db_id": "advertising_agencies",
    "question": "Show the meeting ids and the number of staff in each meeting.",
    "answer": "SELECT MEETING_ID(sic_code ), COUNT(staff_id )FROM Staff ORDER BY staff_id ;"
  },
  {
    "id": 2132,
    "db_id": "advertising_agencies",
    "question": "Count the number of staff in each meeting by meeting id.",
    "answer": "SELECT count(*) FROM Staff_in_Meetingst WHERE meeting_id = \" + meeting_id);\n<jupyter>,meeting) AS 'Number Of Meeting Staff' -% FROM STAFF SET JOIN IN MEETING SET (consonant => Staff[];\r\n\t\t//\r\n}//.toString() .split(\"    JOIN \") == \"JOINS ON \"){ //Split the input by space to get tokens for joining table and column names, like this;string(Meeting = sscanf).toArray(). Each token is a string representing one of our database's schema);\r\n}//.getBytes() .length == 0) { \t//To store incoming packet bytes in Java byte array ,and then check its length to see if the packet is empty or not; //\t\tcase \" \t   = 147395862   JOIN \",toString().charAt(i++)).intValue();\n<jupyter>,meeting) AS 'Number Of Meeting Staff' -% FROM STAFF SET me WHERE (staff_id.equalsIgnoreCase()) );\r\n  } catch { //Catch the error if staff member not found in database;\t\treturn null;} .split(\"   trycatchblockiniedExceptionclassnameNotFoundExceptionthrowclasenameNullcouldnoptbehaviourThrowblockexceptionnewclassNameNotFoundExceptiornullcouldbecomebaftereptionmessageerrorMSG_ERROR__STAFF_NOT_IN_THISGROUPMEETINGID147395862JOINS ON staff_id \n<-0.0;"
  },
  {
    "id": 2133,
    "db_id": "advertising_agencies",
    "question": "Show the staff id and the number of meetings attended by the staff who attended some meeting but had the lowest attendance.",
    "answer": "SELECT meet_ids(staff_id ), count() FROM Meetings JOIN Staff ON Meetings.staff_id = Staff.staff_id GROUP BY Meetings.meeting_id ORDER BY Agencies.staff_id LIMIT 1;"
  },
  {
    "id": 2134,
    "db_id": "advertising_agencies",
    "question": "What is the staff id of the staff who attended the least meetings but attended some meeting?",
    "answer": "SELECT xtend_staffid(meeting_id ) FROM  \t  \t  \t \n    \t  \t    JOIN (SELECT T1024385769attendingtoFROMmeetingstaffmembershiidshoNEGatewaittominlectattendantsminforspecificationssinliegeventhcollegenamesANDSTAFLLOREVENTHEMEEXPIRATESINLIEGEVENTHMEETINGIDPANKJOINwiththeseindetailsmeetingidis631728049attendantsmancareofattendingtonnemeaeventhforspecificationssinliegeventhcollegenamesORSTAFLLOREVENTHEMEEXPIRATESINLIEGEVENTHMEETINGIDPANKJOINwiththeseindetailsmeetingidis631728049attendantsmancareofattendingtonnemeaeventhforspecificationssinliegeventhcollegenamesORSTAFLLOREVENTHEMEEXPIRATESINLIEGEVENTHMEETINGIDPANKJOINwiththeseindetailsthmeetingidis631728049attendantsmancareofattendingtonnemeaeventhforspecificationssinliegeventhcollegenamesORSTAFLLOREVENTHEMEEXPIRATESINLIEGEVENTHMEETINGIDPANKJOINwirefeepointidmeetingidis631728049attendantsmancareofattendingtonnemeaeventhforspecificationssinliegeventhcollegenamesORSTAFLLOREVENTHEMEEXPIRATESINLIEGEVENTHMEETINGIDPANKJOINwiththeseindetailsmeetingidis631728049attendantsmancareofattendingtonnemeaeventhforspecificationssinliegeventhcollegenamesORSTAFLLOREVENTHEMEEXPIRATESINLIEGEVENTHMEETINGIDPANKJOINwi"
  },
  {
    "id": 2135,
    "db_id": "advertising_agencies",
    "question": "How many staff have attended a meeting?",
    "answer": "SELECT count(*) FROM Staff_in_Meetingst\n    WHERE Meetings.staff_id  = 2;"
  },
  {
    "id": 2136,
    "db_id": "advertising_agencies",
    "question": "Return the number of distinct staff who have attended a meeting?",
    "answer": "SELECT COUNT(*) FROM Staff_in_Meetingst\n     WHERE Meetings.meeting_id = 2;"
  },
  {
    "id": 2137,
    "db_id": "advertising_agencies",
    "question": "How many staff did not attend any meeting?",
    "answer": "SELECT COUNT(*)FROM Staff WHERE Staff.meeting_id \n<> 'None'\n    JOIN Staff s ON staff_id = Staff.staff_id  \t    \tJOIN Meetings m ON Meetings.meeting_id  =Staff.meeting_id      GROUP BY staff_id       \n  LIMIT 2;"
  },
  {
    "id": 2138,
    "db_id": "advertising_agencies",
    "question": "Count the number of staff who did not attend any meeting.",
    "answer": "SELECT COUNT(*) FROM Staff WHERE staff_id <> \"M\"\n  LIMIT 5;"
  },
  {
    "id": 2139,
    "db_id": "advertising_agencies",
    "question": "What are the ids and details of the clients who have attended any meeting or have any invoice?",
    "answer": "SELECT DISTINCT c1_clients5796043GUID_NTLM_users2FAMO_net_sdasminfo3ID_entries3TABLE_TYPEall4clients5980feather_attentionmeetingidmeetingdetailstypeorg4clienspointaingtimeandonitisfinishedselectorshipsfromclie1pointsentrytypeclientdetailsTypecen1ssofhavaidthatabaseEntryIentities6623GUID5980f1dacctimeentries3TABLE_TYPEall4clients7DHANHOULFclienviattionmeetingdetailstypeoexceptionsfromclie1pointsentrytypeclientdetailsTypeclientidcenlientsotherworkingdaysofinishthingselectorshipsfromclie2pointsofhavaidthatabaseEntryIentriec4675_clients7HANHOULFclienviattionmeetingdetailstypeoexceptionsfromclie1pointsentrytypeclientdeta3tidcenlientsworkingdaysofinishinthinselectorshipsfromclie2pointsfhavaidthatabaseEntryIentr3ID_clients8HANHOULFclienviattionmeetingdetailstoexiprovideventdetailsTypeclientiddetailedeventidclie1pointsentrytypecenlientsworkingdaysofinishinthinselectorshipsfromclie2pointsfhavaidthatabaseEntryIentr3ID_clients9HANHOULFclienviattionmeetingdetailstokexpiringinvoiceihavetopicnameclientsothersomor7401codingclients7HANHOULFclient5462entrypointaingitisfinishedselectorshipsfromclie3pointsentrytypeclientdetailsTypeclientidcenlientsworkingdaysofinishinthinselectorshipsfromclie3poftypoeventidclien1xsgentrytypeclientdeta3idcenlientsworkingdaysofinishinthinselectorshipsfromclie4pointsfhavaidthatabaseEntryIentr3ID_clients9HANHOULFclient5"
  },
  {
    "id": 2140,
    "db_id": "advertising_agencies",
    "question": "Return the ids and details of clients who have attended a meeting or had an invoice.",
    "answer": "SELECT ract_clients(meeting_id ), client_details(), invoicing() WHERE meeting_id = \" +\n<class name>;\nEnd Select...Writes as much code to fetch the ids and details of clients in a database, it is very important that no SQL injection attacks are made.\n```java \n   //It will help select data from db by running without any sql Injection issue or vulnerability riskynesses for string concatenation can be easily broken because if an application has incorrect input type and parameters don't cause the error, but it won\u2019t run a correct query that leads to your database.\n   //The method is also safe from most recent SQL injection attacks since Java provides all necessary abilites through its API for managing JDBC objects such as PreparedStatements or other APIs provided by modern java libraries/frameworks, like Hibernate ORM , Entity Framework etc..  For instance in case of MySQL you can use prepared statements and the query will be something similar to what your example does.\n```java     //This is not an issue for single table database queries but could potentially break if multi-table or joins are used, which might lead into other issues including SQL injection attack etc..  So using this method in case of a large number of records would make it safe as compared to the previous methods that can be easily broken.\n   //It is also important because with JDK's dynamic Java feature enabled by default security manager (like Class-Based Shading, No Security Policy) all code may potentially cause other issues including SQL injection attack etc.,  This helps prevent potential exploitation of these features to exploit them for malicious purposes like sql mapper.\n```java   //The method is safe from most recent attacks since java provides API methods provided by Oracle JDK which handles multi-table or joins, and can be used in a case that leads into other issues including SQL injection attack etc., So it will work to fetch the ids for client details who have an invoice.\n   //The method is also safe from most recent attacks since Java provides API methods provided by Oracle JDK which handles multi-table or joins, and can be used in a case that leads into other issues including SQL injection attack etc., So it will work to fetch the ids of clients who"
  },
  {
    "id": 2141,
    "db_id": "advertising_agencies",
    "question": "What are the ids and details of the staff who have attended at least 1 meetings and have the detail with letter 's'?",
    "answer": "SELECT distinct(staff_id ), count() FROM Staff_in_Meetingst WHERE staff_details = \"letter s\" GROUP BY staff_id ORDER BY client_id  \n     LIMIT 20;"
  },
  {
    "id": 2142,
    "db_id": "advertising_agencies",
    "question": "Return the ids and details of staff who have attended at least 1 meeting and have an s in their staff details?",
    "answer": "SELECT iDsAndDetailsForAttendeesWithNameContainingInBody(invoice_id )\n     CREATE ORDER BY staff_details LIMIT 20;"
  },
  {
    "id": 2143,
    "db_id": "advertising_agencies",
    "question": "What are the id, sic code and agency id of the client who has attended 1 meeting and has any invoice.",
    "answer": "SELECT clauseeingtmtc_invoices_withholdingsand_premium_bondsetttingmtc_invoice_headermy_clientidclientwidthextrong_attended_invoice_eventselectingmtcinvprocurectedfromwhereinvouminbo369klientsd(client_id ), INvoiceswithholdingsandpremiumnbo350pinvoiceinvoicetailorththeclientoftheserviceynviaclientsd(client_id )SELECTmtcinvprocurectedfromwhereinvouminbo369klientsd, invoiceswithholdingsandpremiumindvocieinvoicetailortheclientoftheservisexnviaclientsdINvoiceswitcholdtheclientofthexpinvoiceinthawclientidclientsd(client_id )SELECTmtcinvprocurectedfromwhereinvouminbo369klientsd, invoiceswithholdingsandpremiuminvoicetailortheclientoftheservicexnviaclientsdINvoiceswitcholdtheclientofthexpinvoiceinthawclientidclientsd(client_id )\n    andalso_more_than3126attendance_noticeand_premiumindvocieinvoicelogwhilstheclientoftheservicexnviaclientsd, INvoiceprocurectedfromwhereinvouminbo389klientsofthymchanclickedclientsd(client_id )SELECTmtcinvprocurectedfromwhereinvoumiindvocieinvoicelogwhilstheclientoftheservicexnviaclientsd, infovisemailwiththeclientofxfomspdfmoinvoiceprocuredfthclientsd(client_id )\n    andalso_more_than3126attendance_noticeandpremiumninvoicelogwhilstheclientoftheservicexnviaclientsd, INvocieproceduretedfromwhereinvouminbo49klientsofthymchangclients"
  },
  {
    "id": 2144,
    "db_id": "advertising_agencies",
    "question": "Return the ids, sic codes, and agency ids of clients who have attended 1 meeting and had an invoice.",
    "answer": "SELECT ALLY_ATTENUMPATHNERSINVICTIVEUSERSCHOOLHOUSEEVENTMANAGERINTERFACESGRAPHQLCLIENTSETTODAY(Clients.client_id )\n        CROSS JOIN Clientstypes ON client_id = client_id  \n        JOIN ClientsetorrowsInvoices ON invoice_id  =invoice_id    GROUP BY sic_code , Invoices.agency_id ;"
  },
  {
    "id": 2145,
    "db_id": "advertising_agencies",
    "question": "List the start time, end time of each meeting, and the corresponding client detail and staff detail.",
    "answer": "SELECT cstart_time_meeting_staff_client_detailsATRILISTEN() \n        SELECT_startendtimesMEETINGTIMEOUTALERADOBEPORATEDLISTEMEETINGTIMELISTENDODYWJANCHESLAMMEETINGSISONNACEITHILLSUNDAYOURNAMEHARRISAGEEUINCIDENTCALLEDQUITISCAUSESOONWEBMEETINGFINALCLIENTAROUSAFOREDURIDCONNECTIONREFERENCEDONECALLEDEXPLOSEONMESSAGEANDFORTICASTMEETINGDOUBLECLIENTROUNDOFFORMEETINGSIGNEDONMULTIPLESIGNATURESHELVESIGNALLIKEORNOTABLEXPLOSEDWEBSIDE\n        ORDER BY Invoices.invoice_id  \t  \n           \n            \n     \n          \n    \n        \n      \n\n\n   \n                                                            \n         \n                           \n                \n             \n              \n               \n                  \n                 \n                     \n                    \n                       \n                        \n                         \n                          \n                             \n                              \n                               \n\n\n\n\n\n\t  \n\t   \n\t\t    \t \t\t\t      \t\t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t \t\t\t\t\t\t           \t     \t       \t\t\t        \t\t\t\t\t\t\t     \t   \n                                              \n                                             \n\n\n                                                \n\n                                                 \n                                                \n                                                \n\n                                                  \n                                                \n\n                                                \n                                              \n\n\n\t\t    \t  \t\t       \t \t      \t\t\t\t\t   \t\t\t\t\t\t\t\t \t\t\t\t\t\t           \t     \t       \t\t\t        \t   \n                                          \n\n\n\n\n\n\n\n\n                               \n\n                                                 \n\t\t\t\t     \t\t\t\t\t\t\t    \t     \t     \t   \t  \n         \n\n\n\n\t\t    \t  \t\t       \t \t      \t\t\t\t\t   \t\t\t\t\t\t\t\t \t\t\t\t\t\t           \t     \t       \t\t\t        \t   \n               \n\n\n\n\n\n\n\n                              \n                               \n\n                                                 \n\t\t\t\t     \t\t\t\t\t\t\t    \t     \t     \t   \t  \n         \n\n\n\n\t\t    \t  \t\t       \t \t      \t\t\t\t\t   \t\t\t\t\t\t\t\t \t\t\t\t\t\t           \t     \t       \t\t\t        \t   \n          \n"
  },
  {
    "id": 2146,
    "db_id": "advertising_agencies",
    "question": "What are the start and end times of each meeting, as well as the corresponding client and staff details the attendees?",
    "answer": "SELECT ClientName2DaysAgo_startsAndEnds_meeting_attendeeDetailsForEachClientAndStaffSetMealAttendeDetailsInLast7Days_____ThisWillReturnAnEmptyResultOnEmptyConditionalBaseClass__EFMigrationBuildExtensions0to81394()\n    CREATE  FROM (SELECT TIME(meeting_id ) AS Start, nullif(end_date_time ), CURRENT_DATE())AS D\n    JOIN Clientsserviceproviderclients ON client_id = Clients.client_id ORDER BY meeting_id  \n     LIMIT 1;"
  }
]